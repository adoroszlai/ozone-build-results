<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230830 20:59:44.172" rpa="false" schemaversion="4">
<suite id="s1" name="ozone-om-prepare">
<suite id="s1-s1" name="Om-Prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Create Specific OM data for prepare" type="SETUP">
<kw name="Freon OCKG" library="freon">
<arg>prefix=om-prepare</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 20:53:39.185" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p om-prepare  2&gt;&amp;1'.</msg>
<msg timestamp="20230830 20:54:03.783" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 20:54:03.784" level="INFO">${output} = 2023-08-30 20:53:41,077 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-30 20:53:41,207 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230830 20:53:39.182" endtime="20230830 20:54:03.784"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 20:54:03.785" level="INFO">2023-08-30 20:53:41,077 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-30 20:53:41,207 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-08-30 20:53:41,207 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-08-30 20:53:41,269 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2023-08-30 20:53:41,309 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-08-30 20:53:42,006 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2023-08-30 20:53:42,210 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2023-08-30 20:53:42,328 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-08-30 20:53:43,261 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-08-30 20:53:43,328 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-08-30 20:53:43,553 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-08-30 20:53:44,334 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-08-30 20:53:45,335 [Thread-3] INFO freon.ProgressBar: Progress: 1.00 % (1 out of 100)
2023-08-30 20:53:46,335 [Thread-3] INFO freon.ProgressBar: Progress: 2.00 % (2 out of 100)
2023-08-30 20:53:47,336 [Thread-3] INFO freon.ProgressBar: Progress: 2.00 % (2 out of 100)
2023-08-30 20:53:48,337 [Thread-3] INFO freon.ProgressBar: Progress: 3.00 % (3 out of 100)
2023-08-30 20:53:49,339 [Thread-3] INFO freon.ProgressBar: Progress: 9.00 % (9 out of 100)
2023-08-30 20:53:50,342 [Thread-3] INFO freon.ProgressBar: Progress: 15.00 % (15 out of 100)
2023-08-30 20:53:51,342 [Thread-3] INFO freon.ProgressBar: Progress: 18.00 % (18 out of 100)
2023-08-30 20:53:52,343 [Thread-3] INFO freon.ProgressBar: Progress: 18.00 % (18 out of 100)
2023-08-30 20:53:53,343 [Thread-3] INFO freon.ProgressBar: Progress: 19.00 % (19 out of 100)
2023-08-30 20:53:54,344 [Thread-3] INFO freon.ProgressBar: Progress: 27.00 % (27 out of 100)
2023-08-30 20:53:55,347 [Thread-3] INFO freon.ProgressBar: Progress: 35.00 % (35 out of 100)
2023-08-30 20:53:56,348 [Thread-3] INFO freon.ProgressBar: Progress: 43.00 % (43 out of 100)
2023-08-30 20:53:57,349 [Thread-3] INFO freon.ProgressBar: Progress: 51.00 % (51 out of 100)
2023-08-30 20:53:58,352 [Thread-3] INFO freon.ProgressBar: Progress: 59.00 % (59 out of 100)
2023-08-30 20:53:59,352 [Thread-3] INFO freon.ProgressBar: Progress: 68.00 % (68 out of 100)
2023-08-30 20:54:00,356 [Thread-3] INFO freon.ProgressBar: Progress: 78.00 % (78 out of 100)
2023-08-30 20:54:01,357 [Thread-3] INFO freon.ProgressBar: Progress: 88.00 % (88 out of 100)
2023-08-30 20:54:02,371 [Thread-3] INFO freon.ProgressBar: Progress: 98.00 % (98 out of 100)
2023-08-30 20:54:03,371 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-08-30 20:54:03,418 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=80.15399, max=2864.916379, mean=192.48863266848505, stddev=420.1320962337605, median=118.84519, p75=140.967475, p95=182.096592, p98=2611.943817, p99=2663.977067, p999=2864.916379, mean_rate=4.742569747683301, m1=1.7651955818098726, m5=0.6943027990586518, m15=0.4993610312864245, rate_unit=events/second, duration_unit=milliseconds
2023-08-30 20:54:03,419 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 22
2023-08-30 20:54:03,420 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-08-30 20:54:03,420 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20230830 20:54:03.784" endtime="20230830 20:54:03.785"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 20:54:03.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 20:54:03.785" endtime="20230830 20:54:03.785"/>
</kw>
<status status="PASS" starttime="20230830 20:53:39.182" endtime="20230830 20:54:03.786"/>
</kw>
<msg timestamp="20230830 20:54:03.786" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 20:53:39.182" endtime="20230830 20:54:03.786"/>
</kw>
<msg timestamp="20230830 20:54:03.786" level="INFO">${result} = 2023-08-30 20:53:41,077 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-30 20:53:41,207 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230830 20:53:39.181" endtime="20230830 20:54:03.786"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 20:54:03.787" endtime="20230830 20:54:03.787"/>
</kw>
<status status="PASS" starttime="20230830 20:53:39.180" endtime="20230830 20:54:03.787"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230830 20:54:03.788" level="INFO">${random} = 55760</msg>
<status status="PASS" starttime="20230830 20:54:03.787" endtime="20230830 20:54:03.788"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230830 20:54:03.789" level="INFO">${volume_name} = 55760-volume-for-prepare</msg>
<status status="PASS" starttime="20230830 20:54:03.788" endtime="20230830 20:54:03.790"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230830 20:54:03.791" level="INFO">${bucket_name} = 55760-bucket-for-prepare</msg>
<status status="PASS" starttime="20230830 20:54:03.790" endtime="20230830 20:54:03.791"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 20:54:03.795" level="INFO">Running command 'ozone sh volume create /55760-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 20:54:06.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 20:54:06.882" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 20:54:03.792" endtime="20230830 20:54:06.882"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 20:54:06.883" level="INFO"/>
<status status="PASS" starttime="20230830 20:54:06.882" endtime="20230830 20:54:06.883"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 20:54:06.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 20:54:06.883" endtime="20230830 20:54:06.884"/>
</kw>
<status status="PASS" starttime="20230830 20:54:03.792" endtime="20230830 20:54:06.884"/>
</kw>
<msg timestamp="20230830 20:54:06.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 20:54:03.792" endtime="20230830 20:54:06.884"/>
</kw>
<status status="PASS" starttime="20230830 20:54:03.791" endtime="20230830 20:54:06.884"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 20:54:06.888" level="INFO">Running command 'ozone sh bucket create /55760-volume-for-prepare/55760-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 20:54:10.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 20:54:10.278" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 20:54:06.886" endtime="20230830 20:54:10.278"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 20:54:10.279" level="INFO"/>
<status status="PASS" starttime="20230830 20:54:10.279" endtime="20230830 20:54:10.279"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 20:54:10.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 20:54:10.280" endtime="20230830 20:54:10.280"/>
</kw>
<status status="PASS" starttime="20230830 20:54:06.885" endtime="20230830 20:54:10.280"/>
</kw>
<msg timestamp="20230830 20:54:10.280" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 20:54:06.885" endtime="20230830 20:54:10.280"/>
</kw>
<status status="PASS" starttime="20230830 20:54:06.884" endtime="20230830 20:54:10.281"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 20:54:10.284" level="INFO">Running command 'ozone sh key put /55760-volume-for-prepare/55760-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 20:54:15.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 20:54:15.731" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 20:54:10.282" endtime="20230830 20:54:15.731"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 20:54:15.732" level="INFO"/>
<status status="PASS" starttime="20230830 20:54:15.732" endtime="20230830 20:54:15.732"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 20:54:15.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 20:54:15.733" endtime="20230830 20:54:15.733"/>
</kw>
<status status="PASS" starttime="20230830 20:54:10.282" endtime="20230830 20:54:15.733"/>
</kw>
<msg timestamp="20230830 20:54:15.733" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 20:54:10.281" endtime="20230830 20:54:15.733"/>
</kw>
<status status="PASS" starttime="20230830 20:54:10.281" endtime="20230830 20:54:15.734"/>
</kw>
<status status="PASS" starttime="20230830 20:53:39.179" endtime="20230830 20:54:15.734"/>
</kw>
<test id="s1-s1-t1" name="Prepare Ozone Manager" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 20:54:15.736" endtime="20230830 20:54:15.736"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 20:54:15.741" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 20:54:24.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 20:54:24.487" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20230830 20:54:15.738" endtime="20230830 20:54:24.487"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 20:54:24.488" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20230830 20:54:24.487" endtime="20230830 20:54:24.488"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 20:54:24.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 20:54:24.488" endtime="20230830 20:54:24.489"/>
</kw>
<status status="PASS" starttime="20230830 20:54:15.737" endtime="20230830 20:54:24.489"/>
</kw>
<msg timestamp="20230830 20:54:24.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 20:54:15.737" endtime="20230830 20:54:24.490"/>
</kw>
<msg timestamp="20230830 20:54:24.490" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20230830 20:54:15.736" endtime="20230830 20:54:24.490"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 20:54:24.491" endtime="20230830 20:54:24.491"/>
</kw>
<status status="PASS" starttime="20230830 20:54:24.490" endtime="20230830 20:54:24.491"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 20:54:15.734" endtime="20230830 20:54:24.491"/>
</test>
<test id="s1-s1-t2" name="Checks if the expected data is present in OM" line="43">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 20:54:24.493" endtime="20230830 20:54:24.493"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 20:54:24.498" level="INFO">Running command 'ozone sh key info /55760-volume-for-prepare/55760-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 20:54:28.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 20:54:28.530" level="INFO">${output} = {
  "volumeName" : "55760-volume-for-prepare",
  "bucketName" : "55760-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-08-30T20:54:13.427Z",
  "modificati...</msg>
<status status="PASS" starttime="20230830 20:54:24.495" endtime="20230830 20:54:28.530"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 20:54:28.531" level="INFO">{
  "volumeName" : "55760-volume-for-prepare",
  "bucketName" : "55760-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-08-30T20:54:13.427Z",
  "modificationTime" : "2023-08-30T20:54:15.333Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 3,
    "localID" : 111677748019200101,
    "length" : 17289,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "file" : true
}</msg>
<status status="PASS" starttime="20230830 20:54:28.530" endtime="20230830 20:54:28.531"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 20:54:28.532" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 20:54:28.531" endtime="20230830 20:54:28.532"/>
</kw>
<status status="PASS" starttime="20230830 20:54:24.495" endtime="20230830 20:54:28.532"/>
</kw>
<msg timestamp="20230830 20:54:28.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 20:54:24.494" endtime="20230830 20:54:28.532"/>
</kw>
<msg timestamp="20230830 20:54:28.533" level="INFO">${result} = {
  "volumeName" : "55760-volume-for-prepare",
  "bucketName" : "55760-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-08-30T20:54:13.427Z",
  "modificati...</msg>
<status status="PASS" starttime="20230830 20:54:24.494" endtime="20230830 20:54:28.533"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 20:54:28.533" endtime="20230830 20:54:28.533"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 20:54:24.492" endtime="20230830 20:54:28.533"/>
</test>
<test id="s1-s1-t3" name="Test write operation fails" line="47">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 20:54:28.535" endtime="20230830 20:54:28.536"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 20:54:28.539" level="INFO">Running command 'ozone sh key put /55760-volume-for-prepare/55760-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 20:54:31.783" level="INFO">${rc} = 255</msg>
<msg timestamp="20230830 20:54:31.783" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230830 20:54:28.537" endtime="20230830 20:54:31.783"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 20:54:31.785" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230830 20:54:31.784" endtime="20230830 20:54:31.785"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 20:54:31.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 20:54:31.785" endtime="20230830 20:54:31.786"/>
</kw>
<msg timestamp="20230830 20:54:31.786" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230830 20:54:28.536" endtime="20230830 20:54:31.786"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 20:54:31.787" endtime="20230830 20:54:31.787"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 20:54:31.791" level="INFO">Running command 'ozone sh key info /55760-volume-for-prepare/55760-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 20:54:34.486" level="INFO">${rc} = 255</msg>
<msg timestamp="20230830 20:54:34.486" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20230830 20:54:31.788" endtime="20230830 20:54:34.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 20:54:34.488" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20230830 20:54:34.487" endtime="20230830 20:54:34.488"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 20:54:34.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 20:54:34.488" endtime="20230830 20:54:34.489"/>
</kw>
<status status="PASS" starttime="20230830 20:54:31.787" endtime="20230830 20:54:34.489"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 20:54:28.535" endtime="20230830 20:54:34.489"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="PASS" starttime="20230830 20:53:39.110" endtime="20230830 20:54:34.491"/>
</suite>
<suite id="s1-s2" name="Om-Cancel-Prepare" source="/opt/hadoop/smoketest/omha/om-cancel-prepare.robot">
<kw name="Generate volume and bucket names" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230830 20:54:36.979" level="INFO">${random} = 92398</msg>
<status status="PASS" starttime="20230830 20:54:36.979" endtime="20230830 20:54:36.979"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-cancel</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230830 20:54:36.981" level="INFO">${volume_name} = 92398-volume-for-cancel</msg>
<status status="PASS" starttime="20230830 20:54:36.980" endtime="20230830 20:54:36.981"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-cancel</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230830 20:54:36.982" level="INFO">${bucket_name} = 92398-bucket-for-cancel</msg>
<status status="PASS" starttime="20230830 20:54:36.981" endtime="20230830 20:54:36.982"/>
</kw>
<status status="PASS" starttime="20230830 20:54:36.979" endtime="20230830 20:54:36.983"/>
</kw>
<test id="s1-s2-t1" name="Cancel Ozone Manager Prepare" line="33">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 20:54:36.983" endtime="20230830 20:54:36.984"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om cancelprepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 20:54:36.988" level="INFO">Running command 'ozone admin om cancelprepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 20:54:40.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 20:54:40.288" level="INFO">${output} = Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20230830 20:54:36.985" endtime="20230830 20:54:40.288"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 20:54:40.289" level="INFO">Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20230830 20:54:40.288" endtime="20230830 20:54:40.289"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 20:54:40.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 20:54:40.289" endtime="20230830 20:54:40.290"/>
</kw>
<status status="PASS" starttime="20230830 20:54:36.985" endtime="20230830 20:54:40.290"/>
</kw>
<msg timestamp="20230830 20:54:40.290" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 20:54:36.984" endtime="20230830 20:54:40.290"/>
</kw>
<msg timestamp="20230830 20:54:40.290" level="INFO">${result} = Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20230830 20:54:36.984" endtime="20230830 20:54:40.290"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>5sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Cancel prepare succeeded</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Cancel prepare succeeded</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 20:54:40.291" endtime="20230830 20:54:40.292"/>
</kw>
<status status="PASS" starttime="20230830 20:54:40.291" endtime="20230830 20:54:40.292"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 20:54:36.983" endtime="20230830 20:54:40.292"/>
</test>
<test id="s1-s2-t2" name="Test write operations" line="37">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 20:54:40.294" endtime="20230830 20:54:40.294"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 20:54:40.297" level="INFO">Running command 'ozone sh volume create /92398-volume-for-cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 20:54:43.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 20:54:43.267" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 20:54:40.295" endtime="20230830 20:54:43.267"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 20:54:43.268" level="INFO"/>
<status status="PASS" starttime="20230830 20:54:43.268" endtime="20230830 20:54:43.268"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 20:54:43.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 20:54:43.269" endtime="20230830 20:54:43.270"/>
</kw>
<status status="PASS" starttime="20230830 20:54:40.295" endtime="20230830 20:54:43.270"/>
</kw>
<msg timestamp="20230830 20:54:43.270" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 20:54:40.295" endtime="20230830 20:54:43.270"/>
</kw>
<status status="PASS" starttime="20230830 20:54:40.294" endtime="20230830 20:54:43.270"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 20:54:43.275" level="INFO">Running command 'ozone sh bucket create /92398-volume-for-cancel/92398-bucket-for-cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 20:54:46.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 20:54:46.196" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 20:54:43.273" endtime="20230830 20:54:46.197"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 20:54:46.198" level="INFO"/>
<status status="PASS" starttime="20230830 20:54:46.197" endtime="20230830 20:54:46.198"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 20:54:46.199" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 20:54:46.198" endtime="20230830 20:54:46.199"/>
</kw>
<status status="PASS" starttime="20230830 20:54:43.272" endtime="20230830 20:54:46.199"/>
</kw>
<msg timestamp="20230830 20:54:46.199" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 20:54:43.272" endtime="20230830 20:54:46.199"/>
</kw>
<status status="PASS" starttime="20230830 20:54:43.271" endtime="20230830 20:54:46.199"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/cancel-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 20:54:46.203" level="INFO">Running command 'ozone sh key put /92398-volume-for-cancel/92398-bucket-for-cancel/cancel-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 20:54:51.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 20:54:51.545" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 20:54:46.201" endtime="20230830 20:54:51.545"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 20:54:51.547" level="INFO"/>
<status status="PASS" starttime="20230830 20:54:51.546" endtime="20230830 20:54:51.547"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 20:54:51.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 20:54:51.547" endtime="20230830 20:54:51.547"/>
</kw>
<status status="PASS" starttime="20230830 20:54:46.200" endtime="20230830 20:54:51.548"/>
</kw>
<msg timestamp="20230830 20:54:51.548" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 20:54:46.200" endtime="20230830 20:54:51.548"/>
</kw>
<msg timestamp="20230830 20:54:51.548" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230830 20:54:46.199" endtime="20230830 20:54:51.548"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/cancel-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 20:54:51.552" level="INFO">Running command 'ozone sh key info /92398-volume-for-cancel/92398-bucket-for-cancel/cancel-key 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 20:54:55.041" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 20:54:55.041" level="INFO">${output} = {
  "volumeName" : "92398-volume-for-cancel",
  "bucketName" : "92398-bucket-for-cancel",
  "name" : "cancel-key",
  "dataSize" : 17289,
  "creationTime" : "2023-08-30T20:54:49.254Z",
  "modificationT...</msg>
<status status="PASS" starttime="20230830 20:54:51.550" endtime="20230830 20:54:55.041"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 20:54:55.043" level="INFO">{
  "volumeName" : "92398-volume-for-cancel",
  "bucketName" : "92398-bucket-for-cancel",
  "name" : "cancel-key",
  "dataSize" : 17289,
  "creationTime" : "2023-08-30T20:54:49.254Z",
  "modificationTime" : "2023-08-30T20:54:51.138Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 1,
    "localID" : 111677748019200103,
    "length" : 17289,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "file" : true
}</msg>
<status status="PASS" starttime="20230830 20:54:55.042" endtime="20230830 20:54:55.043"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 20:54:55.044" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 20:54:55.043" endtime="20230830 20:54:55.044"/>
</kw>
<status status="PASS" starttime="20230830 20:54:51.549" endtime="20230830 20:54:55.044"/>
</kw>
<msg timestamp="20230830 20:54:55.044" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 20:54:51.549" endtime="20230830 20:54:55.044"/>
</kw>
<msg timestamp="20230830 20:54:55.044" level="INFO">${result} = {
  "volumeName" : "92398-volume-for-cancel",
  "bucketName" : "92398-bucket-for-cancel",
  "name" : "cancel-key",
  "dataSize" : 17289,
  "creationTime" : "2023-08-30T20:54:49.254Z",
  "modificationT...</msg>
<status status="PASS" starttime="20230830 20:54:51.548" endtime="20230830 20:54:55.045"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"cancel-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 20:54:55.045" endtime="20230830 20:54:55.045"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 20:54:40.293" endtime="20230830 20:54:55.045"/>
</test>
<doc>Smoke test for ozone manager cancel prepare</doc>
<status status="PASS" starttime="20230830 20:54:36.921" endtime="20230830 20:54:55.047"/>
</suite>
<suite id="s1-s3" name="Om-Prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Create Specific OM data for prepare" type="SETUP">
<kw name="Freon OCKG" library="freon">
<arg>prefix=om-prepare</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 20:54:57.633" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p om-prepare  2&gt;&amp;1'.</msg>
<msg timestamp="20230830 20:55:13.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 20:55:13.037" level="INFO">${output} = 2023-08-30 20:54:59,296 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-30 20:54:59,458 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230830 20:54:57.631" endtime="20230830 20:55:13.038"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 20:55:13.039" level="INFO">2023-08-30 20:54:59,296 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-30 20:54:59,458 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-08-30 20:54:59,458 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-08-30 20:54:59,531 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2023-08-30 20:54:59,574 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-08-30 20:55:00,576 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-08-30 20:55:00,826 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-08-30 20:55:01,065 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-08-30 20:55:01,577 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-08-30 20:55:02,586 [Thread-3] INFO freon.ProgressBar: Progress: 5.00 % (5 out of 100)
2023-08-30 20:55:03,589 [Thread-3] INFO freon.ProgressBar: Progress: 14.00 % (14 out of 100)
2023-08-30 20:55:04,590 [Thread-3] INFO freon.ProgressBar: Progress: 24.00 % (24 out of 100)
2023-08-30 20:55:05,592 [Thread-3] INFO freon.ProgressBar: Progress: 33.00 % (33 out of 100)
2023-08-30 20:55:06,593 [Thread-3] INFO freon.ProgressBar: Progress: 43.00 % (43 out of 100)
2023-08-30 20:55:07,624 [Thread-3] INFO freon.ProgressBar: Progress: 53.00 % (53 out of 100)
2023-08-30 20:55:08,626 [Thread-3] INFO freon.ProgressBar: Progress: 63.00 % (63 out of 100)
2023-08-30 20:55:09,626 [Thread-3] INFO freon.ProgressBar: Progress: 74.00 % (74 out of 100)
2023-08-30 20:55:10,627 [Thread-3] INFO freon.ProgressBar: Progress: 84.00 % (84 out of 100)
2023-08-30 20:55:11,631 [Thread-3] INFO freon.ProgressBar: Progress: 95.00 % (95 out of 100)
2023-08-30 20:55:12,631 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-08-30 20:55:12,678 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=66.830005, max=1595.605321, mean=115.80884815227674, stddev=144.6197410639895, median=96.698908, p75=111.921419, p95=169.817929, p98=183.158932, p99=196.122934, p999=1595.605321, mean_rate=8.05287686124819, m1=6.151804575630977, m5=5.8727256031848825, m15=5.824376668778454, rate_unit=events/second, duration_unit=milliseconds
2023-08-30 20:55:12,678 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 13
2023-08-30 20:55:12,679 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-08-30 20:55:12,679 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20230830 20:55:13.038" endtime="20230830 20:55:13.039"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 20:55:13.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 20:55:13.039" endtime="20230830 20:55:13.040"/>
</kw>
<status status="PASS" starttime="20230830 20:54:57.631" endtime="20230830 20:55:13.040"/>
</kw>
<msg timestamp="20230830 20:55:13.040" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 20:54:57.630" endtime="20230830 20:55:13.041"/>
</kw>
<msg timestamp="20230830 20:55:13.041" level="INFO">${result} = 2023-08-30 20:54:59,296 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-30 20:54:59,458 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230830 20:54:57.630" endtime="20230830 20:55:13.041"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 20:55:13.042" endtime="20230830 20:55:13.042"/>
</kw>
<status status="PASS" starttime="20230830 20:54:57.628" endtime="20230830 20:55:13.042"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230830 20:55:13.043" level="INFO">${random} = 43496</msg>
<status status="PASS" starttime="20230830 20:55:13.042" endtime="20230830 20:55:13.043"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230830 20:55:13.045" level="INFO">${volume_name} = 43496-volume-for-prepare</msg>
<status status="PASS" starttime="20230830 20:55:13.043" endtime="20230830 20:55:13.045"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230830 20:55:13.046" level="INFO">${bucket_name} = 43496-bucket-for-prepare</msg>
<status status="PASS" starttime="20230830 20:55:13.045" endtime="20230830 20:55:13.047"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 20:55:13.052" level="INFO">Running command 'ozone sh volume create /43496-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 20:55:16.381" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 20:55:16.381" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 20:55:13.049" endtime="20230830 20:55:16.381"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 20:55:16.382" level="INFO"/>
<status status="PASS" starttime="20230830 20:55:16.382" endtime="20230830 20:55:16.382"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 20:55:16.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 20:55:16.383" endtime="20230830 20:55:16.383"/>
</kw>
<status status="PASS" starttime="20230830 20:55:13.048" endtime="20230830 20:55:16.383"/>
</kw>
<msg timestamp="20230830 20:55:16.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 20:55:13.047" endtime="20230830 20:55:16.383"/>
</kw>
<status status="PASS" starttime="20230830 20:55:13.047" endtime="20230830 20:55:16.384"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 20:55:16.388" level="INFO">Running command 'ozone sh bucket create /43496-volume-for-prepare/43496-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 20:55:20.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 20:55:20.137" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 20:55:16.385" endtime="20230830 20:55:20.137"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 20:55:20.138" level="INFO"/>
<status status="PASS" starttime="20230830 20:55:20.137" endtime="20230830 20:55:20.138"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 20:55:20.138" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 20:55:20.138" endtime="20230830 20:55:20.139"/>
</kw>
<status status="PASS" starttime="20230830 20:55:16.385" endtime="20230830 20:55:20.139"/>
</kw>
<msg timestamp="20230830 20:55:20.139" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 20:55:16.384" endtime="20230830 20:55:20.139"/>
</kw>
<status status="PASS" starttime="20230830 20:55:16.384" endtime="20230830 20:55:20.139"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 20:55:20.143" level="INFO">Running command 'ozone sh key put /43496-volume-for-prepare/43496-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 20:55:25.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 20:55:25.103" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 20:55:20.141" endtime="20230830 20:55:25.103"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 20:55:25.105" level="INFO"/>
<status status="PASS" starttime="20230830 20:55:25.104" endtime="20230830 20:55:25.105"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 20:55:25.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 20:55:25.105" endtime="20230830 20:55:25.105"/>
</kw>
<status status="PASS" starttime="20230830 20:55:20.140" endtime="20230830 20:55:25.106"/>
</kw>
<msg timestamp="20230830 20:55:25.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 20:55:20.140" endtime="20230830 20:55:25.106"/>
</kw>
<status status="PASS" starttime="20230830 20:55:20.139" endtime="20230830 20:55:25.106"/>
</kw>
<status status="PASS" starttime="20230830 20:54:57.627" endtime="20230830 20:55:25.106"/>
</kw>
<test id="s1-s3-t1" name="Prepare Ozone Manager" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 20:55:25.108" endtime="20230830 20:55:25.108"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 20:55:25.112" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 20:55:33.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 20:55:33.549" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [835].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20230830 20:55:25.110" endtime="20230830 20:55:33.549"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 20:55:33.550" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [835].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [835]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [835]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [835]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20230830 20:55:33.549" endtime="20230830 20:55:33.550"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 20:55:33.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 20:55:33.550" endtime="20230830 20:55:33.551"/>
</kw>
<status status="PASS" starttime="20230830 20:55:25.109" endtime="20230830 20:55:33.551"/>
</kw>
<msg timestamp="20230830 20:55:33.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 20:55:25.109" endtime="20230830 20:55:33.551"/>
</kw>
<msg timestamp="20230830 20:55:33.551" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [835].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20230830 20:55:25.108" endtime="20230830 20:55:33.551"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 20:55:33.552" endtime="20230830 20:55:33.553"/>
</kw>
<status status="PASS" starttime="20230830 20:55:33.551" endtime="20230830 20:55:33.553"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 20:55:25.107" endtime="20230830 20:55:33.553"/>
</test>
<test id="s1-s3-t2" name="Checks if the expected data is present in OM" line="43">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 20:55:33.555" endtime="20230830 20:55:33.555"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 20:55:33.559" level="INFO">Running command 'ozone sh key info /43496-volume-for-prepare/43496-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 20:55:36.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 20:55:36.449" level="INFO">${output} = {
  "volumeName" : "43496-volume-for-prepare",
  "bucketName" : "43496-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-08-30T20:55:22.868Z",
  "modificati...</msg>
<status status="PASS" starttime="20230830 20:55:33.557" endtime="20230830 20:55:36.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 20:55:36.450" level="INFO">{
  "volumeName" : "43496-volume-for-prepare",
  "bucketName" : "43496-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-08-30T20:55:22.868Z",
  "modificationTime" : "2023-08-30T20:55:24.650Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 3,
    "localID" : 111677748019200204,
    "length" : 17289,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "file" : true
}</msg>
<status status="PASS" starttime="20230830 20:55:36.449" endtime="20230830 20:55:36.450"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 20:55:36.451" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 20:55:36.450" endtime="20230830 20:55:36.451"/>
</kw>
<status status="PASS" starttime="20230830 20:55:33.557" endtime="20230830 20:55:36.451"/>
</kw>
<msg timestamp="20230830 20:55:36.451" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 20:55:33.556" endtime="20230830 20:55:36.451"/>
</kw>
<msg timestamp="20230830 20:55:36.452" level="INFO">${result} = {
  "volumeName" : "43496-volume-for-prepare",
  "bucketName" : "43496-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-08-30T20:55:22.868Z",
  "modificati...</msg>
<status status="PASS" starttime="20230830 20:55:33.555" endtime="20230830 20:55:36.452"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 20:55:36.452" endtime="20230830 20:55:36.452"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 20:55:33.554" endtime="20230830 20:55:36.452"/>
</test>
<test id="s1-s3-t3" name="Test write operation fails" line="47">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 20:55:36.454" endtime="20230830 20:55:36.454"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 20:55:36.459" level="INFO">Running command 'ozone sh key put /43496-volume-for-prepare/43496-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 20:55:39.686" level="INFO">${rc} = 255</msg>
<msg timestamp="20230830 20:55:39.686" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230830 20:55:36.456" endtime="20230830 20:55:39.686"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 20:55:39.687" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230830 20:55:39.687" endtime="20230830 20:55:39.687"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 20:55:39.688" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 20:55:39.688" endtime="20230830 20:55:39.688"/>
</kw>
<msg timestamp="20230830 20:55:39.688" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230830 20:55:36.455" endtime="20230830 20:55:39.688"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 20:55:39.689" endtime="20230830 20:55:39.689"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 20:55:39.692" level="INFO">Running command 'ozone sh key info /43496-volume-for-prepare/43496-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 20:55:42.231" level="INFO">${rc} = 255</msg>
<msg timestamp="20230830 20:55:42.231" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20230830 20:55:39.690" endtime="20230830 20:55:42.231"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 20:55:42.232" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20230830 20:55:42.231" endtime="20230830 20:55:42.232"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 20:55:42.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 20:55:42.232" endtime="20230830 20:55:42.233"/>
</kw>
<status status="PASS" starttime="20230830 20:55:39.689" endtime="20230830 20:55:42.233"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 20:55:36.453" endtime="20230830 20:55:42.233"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="PASS" starttime="20230830 20:54:57.552" endtime="20230830 20:55:42.234"/>
</suite>
<suite id="s1-s4" name="Om-Prepared" source="/opt/hadoop/smoketest/omha/om-prepared.robot">
<test id="s1-s4-t1" name="Test create volume fails" line="26">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 20:55:44.789" endtime="20230830 20:55:44.790"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230830 20:55:44.790" level="INFO">${random} = 67003</msg>
<status status="PASS" starttime="20230830 20:55:44.790" endtime="20230830 20:55:44.791"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230830 20:55:44.792" level="INFO">${volume_name} = 67003-volume-for-prepare</msg>
<status status="PASS" starttime="20230830 20:55:44.791" endtime="20230830 20:55:44.792"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 20:55:44.796" level="INFO">Running command 'ozone sh volume create /67003-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 20:55:47.777" level="INFO">${rc} = 255</msg>
<msg timestamp="20230830 20:55:47.777" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230830 20:55:44.793" endtime="20230830 20:55:47.777"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 20:55:47.778" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230830 20:55:47.778" endtime="20230830 20:55:47.778"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 20:55:47.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 20:55:47.779" endtime="20230830 20:55:47.779"/>
</kw>
<msg timestamp="20230830 20:55:47.779" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230830 20:55:44.792" endtime="20230830 20:55:47.779"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 20:55:47.779" endtime="20230830 20:55:47.780"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 20:55:47.783" level="INFO">Running command 'ozone sh volume info /67003-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 20:55:51.176" level="INFO">${rc} = 255</msg>
<msg timestamp="20230830 20:55:51.177" level="INFO">${output} = VOLUME_NOT_FOUND Volume 67003-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230830 20:55:47.781" endtime="20230830 20:55:51.177"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 20:55:51.178" level="INFO">VOLUME_NOT_FOUND Volume 67003-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230830 20:55:51.177" endtime="20230830 20:55:51.178"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 20:55:51.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 20:55:51.178" endtime="20230830 20:55:51.178"/>
</kw>
<msg timestamp="20230830 20:55:51.179" level="INFO">${result} = VOLUME_NOT_FOUND Volume 67003-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230830 20:55:47.780" endtime="20230830 20:55:51.179"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 20:55:51.179" endtime="20230830 20:55:51.179"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 20:55:44.789" endtime="20230830 20:55:51.179"/>
</test>
<test id="s1-s4-t2" name="Test list volumes succeeds" line="34">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 20:55:51.182" endtime="20230830 20:55:51.182"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 20:55:51.187" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 20:55:54.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 20:55:54.515" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "55760-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "...</msg>
<status status="PASS" starttime="20230830 20:55:51.184" endtime="20230830 20:55:54.515"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 20:55:54.517" level="INFO">[ {
  "metadata" : { },
  "name" : "55760-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-08-30T20:54:06.851Z",
  "modificationTime" : "2023-08-30T20:54:06.851Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "43496-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-08-30T20:55:16.345Z",
  "modificationTime" : "2023-08-30T20:55:16.345Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2023-08-30T20:53:10.214Z",
  "modificationTime" : "2023-08-30T20:53:10.214Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "92398-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-08-30T20:54:43.198Z",
  "modificationTime" : "2023-08-30T20:54:43.198Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-08-30T20:53:42.016Z",
  "modificationTime" : "2023-08-30T20:53:42.016Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
} ]</msg>
<status status="PASS" starttime="20230830 20:55:54.516" endtime="20230830 20:55:54.517"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 20:55:54.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 20:55:54.517" endtime="20230830 20:55:54.518"/>
</kw>
<status status="PASS" starttime="20230830 20:55:51.184" endtime="20230830 20:55:54.518"/>
</kw>
<msg timestamp="20230830 20:55:54.518" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 20:55:51.183" endtime="20230830 20:55:54.518"/>
</kw>
<msg timestamp="20230830 20:55:54.518" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "55760-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "...</msg>
<status status="PASS" starttime="20230830 20:55:51.183" endtime="20230830 20:55:54.518"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 20:55:51.181" endtime="20230830 20:55:54.519"/>
</test>
<doc>Smoke test to test that OMs are prepared in an OM HA cluster.</doc>
<status status="PASS" starttime="20230830 20:55:44.730" endtime="20230830 20:55:54.520"/>
</suite>
<suite id="s1-s5" name="Om-Prepared" source="/opt/hadoop/smoketest/omha/om-prepared.robot">
<test id="s1-s5-t1" name="Test create volume fails" line="26">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 20:57:25.712" endtime="20230830 20:57:25.712"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230830 20:57:25.713" level="INFO">${random} = 34833</msg>
<status status="PASS" starttime="20230830 20:57:25.712" endtime="20230830 20:57:25.713"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230830 20:57:25.714" level="INFO">${volume_name} = 34833-volume-for-prepare</msg>
<status status="PASS" starttime="20230830 20:57:25.713" endtime="20230830 20:57:25.714"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 20:57:25.717" level="INFO">Running command 'ozone sh volume create /34833-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 20:57:29.090" level="INFO">${rc} = 255</msg>
<msg timestamp="20230830 20:57:29.090" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230830 20:57:25.715" endtime="20230830 20:57:29.090"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 20:57:29.091" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230830 20:57:29.090" endtime="20230830 20:57:29.091"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 20:57:29.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 20:57:29.091" endtime="20230830 20:57:29.092"/>
</kw>
<msg timestamp="20230830 20:57:29.094" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230830 20:57:25.714" endtime="20230830 20:57:29.094"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 20:57:29.094" endtime="20230830 20:57:29.094"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 20:57:29.098" level="INFO">Running command 'ozone sh volume info /34833-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 20:57:32.429" level="INFO">${rc} = 255</msg>
<msg timestamp="20230830 20:57:32.429" level="INFO">${output} = VOLUME_NOT_FOUND Volume 34833-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230830 20:57:29.096" endtime="20230830 20:57:32.429"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 20:57:32.430" level="INFO">VOLUME_NOT_FOUND Volume 34833-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230830 20:57:32.429" endtime="20230830 20:57:32.430"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 20:57:32.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 20:57:32.430" endtime="20230830 20:57:32.431"/>
</kw>
<msg timestamp="20230830 20:57:32.431" level="INFO">${result} = VOLUME_NOT_FOUND Volume 34833-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230830 20:57:29.095" endtime="20230830 20:57:32.431"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 20:57:32.431" endtime="20230830 20:57:32.432"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 20:57:25.711" endtime="20230830 20:57:32.432"/>
</test>
<test id="s1-s5-t2" name="Test list volumes succeeds" line="34">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 20:57:32.433" endtime="20230830 20:57:32.434"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 20:57:32.438" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 20:57:36.255" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 20:57:36.256" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "55760-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "...</msg>
<status status="PASS" starttime="20230830 20:57:32.436" endtime="20230830 20:57:36.256"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 20:57:36.258" level="INFO">[ {
  "metadata" : { },
  "name" : "55760-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-08-30T20:54:06.851Z",
  "modificationTime" : "2023-08-30T20:54:06.851Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "43496-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-08-30T20:55:16.345Z",
  "modificationTime" : "2023-08-30T20:55:16.345Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2023-08-30T20:53:10.289Z",
  "modificationTime" : "2023-08-30T20:53:10.289Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "92398-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-08-30T20:54:43.198Z",
  "modificationTime" : "2023-08-30T20:54:43.198Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-08-30T20:53:42.016Z",
  "modificationTime" : "2023-08-30T20:53:42.016Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
} ]</msg>
<status status="PASS" starttime="20230830 20:57:36.257" endtime="20230830 20:57:36.258"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 20:57:36.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 20:57:36.258" endtime="20230830 20:57:36.259"/>
</kw>
<status status="PASS" starttime="20230830 20:57:32.435" endtime="20230830 20:57:36.259"/>
</kw>
<msg timestamp="20230830 20:57:36.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 20:57:32.435" endtime="20230830 20:57:36.259"/>
</kw>
<msg timestamp="20230830 20:57:36.259" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "55760-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "...</msg>
<status status="PASS" starttime="20230830 20:57:32.434" endtime="20230830 20:57:36.259"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 20:57:32.433" endtime="20230830 20:57:36.260"/>
</test>
<doc>Smoke test to test that OMs are prepared in an OM HA cluster.</doc>
<status status="PASS" starttime="20230830 20:57:25.656" endtime="20230830 20:57:36.261"/>
</suite>
<suite id="s1-s6" name="Loaddata" source="/opt/hadoop/smoketest/topology/loaddata.robot">
<test id="s1-s6-t1" name="Create a volume, bucket and key" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create topvol1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 20:59:07.112" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 20:59:10.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 20:59:10.801" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 20:59:07.110" endtime="20230830 20:59:10.801"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 20:59:10.805" level="INFO"/>
<status status="PASS" starttime="20230830 20:59:10.802" endtime="20230830 20:59:10.805"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 20:59:10.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 20:59:10.805" endtime="20230830 20:59:10.819"/>
</kw>
<status status="PASS" starttime="20230830 20:59:07.109" endtime="20230830 20:59:10.830"/>
</kw>
<msg timestamp="20230830 20:59:10.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 20:59:07.109" endtime="20230830 20:59:10.830"/>
</kw>
<msg timestamp="20230830 20:59:10.831" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 20:59:07.109" endtime="20230830 20:59:10.831"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 20:59:10.833" endtime="20230830 20:59:10.834"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 20:59:10.855" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 20:59:14.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 20:59:14.425" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 20:59:10.841" endtime="20230830 20:59:14.425"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 20:59:14.426" level="INFO"/>
<status status="PASS" starttime="20230830 20:59:14.426" endtime="20230830 20:59:14.427"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 20:59:14.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 20:59:14.427" endtime="20230830 20:59:14.427"/>
</kw>
<status status="PASS" starttime="20230830 20:59:10.840" endtime="20230830 20:59:14.427"/>
</kw>
<msg timestamp="20230830 20:59:14.427" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 20:59:10.836" endtime="20230830 20:59:14.428"/>
</kw>
<msg timestamp="20230830 20:59:14.428" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 20:59:10.834" endtime="20230830 20:59:14.428"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 20:59:14.428" endtime="20230830 20:59:14.429"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 20:59:14.433" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 20:59:21.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 20:59:21.463" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 20:59:14.431" endtime="20230830 20:59:21.463"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 20:59:21.464" level="INFO"/>
<status status="PASS" starttime="20230830 20:59:21.463" endtime="20230830 20:59:21.464"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 20:59:21.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 20:59:21.465" endtime="20230830 20:59:21.465"/>
</kw>
<status status="PASS" starttime="20230830 20:59:14.430" endtime="20230830 20:59:21.466"/>
</kw>
<msg timestamp="20230830 20:59:21.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 20:59:14.430" endtime="20230830 20:59:21.466"/>
</kw>
<msg timestamp="20230830 20:59:21.466" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 20:59:14.429" endtime="20230830 20:59:21.466"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 20:59:21.466" endtime="20230830 20:59:21.467"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 20:59:07.108" endtime="20230830 20:59:21.467"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230830 20:59:07.044" endtime="20230830 20:59:21.468"/>
</suite>
<suite id="s1-s7" name="Readdata" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s7-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230830 20:59:24.219" level="INFO">${random} = 89492</msg>
<status status="PASS" starttime="20230830 20:59:24.218" endtime="20230830 20:59:24.219"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 20:59:24.224" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-89492 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 20:59:29.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 20:59:29.536" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 20:59:24.221" endtime="20230830 20:59:29.536"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 20:59:29.537" level="INFO"/>
<status status="PASS" starttime="20230830 20:59:29.536" endtime="20230830 20:59:29.537"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 20:59:29.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 20:59:29.537" endtime="20230830 20:59:29.538"/>
</kw>
<status status="PASS" starttime="20230830 20:59:24.220" endtime="20230830 20:59:29.538"/>
</kw>
<msg timestamp="20230830 20:59:29.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 20:59:24.220" endtime="20230830 20:59:29.538"/>
</kw>
<msg timestamp="20230830 20:59:29.538" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 20:59:24.219" endtime="20230830 20:59:29.538"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 20:59:29.539" endtime="20230830 20:59:29.539"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 20:59:24.217" endtime="20230830 20:59:29.539"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230830 20:59:24.154" endtime="20230830 20:59:29.541"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="158395"/>
</suite>
<statistics>
<total>
<stat pass="14" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="14" fail="0" skip="0" id="s1" name="ozone-om-prepare">ozone-om-prepare</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1" name="Om-Prepare">ozone-om-prepare.Om-Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2" name="Om-Cancel-Prepare">ozone-om-prepare.Om-Cancel-Prepare</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Om-Prepare">ozone-om-prepare.Om-Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4" name="Om-Prepared">ozone-om-prepare.Om-Prepared</stat>
<stat pass="2" fail="0" skip="0" id="s1-s5" name="Om-Prepared">ozone-om-prepare.Om-Prepared</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Loaddata">ozone-om-prepare.Loaddata</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7" name="Readdata">ozone-om-prepare.Readdata</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
