<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230830 21:06:33.726" rpa="false" schemaversion="4">
<suite id="s1" name="ozone-topology">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources" line="29">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 21:01:37.270" endtime="20230830 21:01:37.270"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:01:37.274" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:01:37.485" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:01:37.485" level="INFO">${output} = HTTP/1.1 200 OK
Date: Wed, 30 Aug 2023 21:01:37 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Wed, 30 Aug 2023 20:20:48 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20230830 21:01:37.272" endtime="20230830 21:01:37.485"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:01:37.486" level="INFO">HTTP/1.1 200 OK
Date: Wed, 30 Aug 2023 21:01:37 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Wed, 30 Aug 2023 20:20:48 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20230830 21:01:37.485" endtime="20230830 21:01:37.486"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:01:37.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:01:37.486" endtime="20230830 21:01:37.487"/>
</kw>
<status status="PASS" starttime="20230830 21:01:37.272" endtime="20230830 21:01:37.487"/>
</kw>
<msg timestamp="20230830 21:01:37.487" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:01:37.271" endtime="20230830 21:01:37.487"/>
</kw>
<msg timestamp="20230830 21:01:37.487" level="INFO">${result} = HTTP/1.1 200 OK
Date: Wed, 30 Aug 2023 21:01:37 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Wed, 30 Aug 2023 20:20:48 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20230830 21:01:37.271" endtime="20230830 21:01:37.487"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:01:37.487" endtime="20230830 21:01:37.488"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 21:01:37.269" endtime="20230830 21:01:37.488"/>
</test>
<test id="s1-s1-t2" name="Basic Freon smoketest" line="34">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 21:01:37.525" endtime="20230830 21:01:37.526"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230830 21:01:37.527" level="INFO">${random} = nG4kGH9ABK</msg>
<status status="PASS" starttime="20230830 21:01:37.526" endtime="20230830 21:01:37.527"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:01:37.584" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p nG4kGH9ABK  2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:02:04.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:02:04.529" level="INFO">${output} = 2023-08-30 21:01:43,123 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-30 21:01:43,526 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230830 21:01:37.534" endtime="20230830 21:02:04.529"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:02:04.530" level="INFO">2023-08-30 21:01:43,123 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-30 21:01:43,526 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-08-30 21:01:43,526 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-08-30 21:01:43,738 [main] INFO freon.BaseFreonGenerator: Executing test with prefix nG4kGH9ABK and number-of-tests 1
2023-08-30 21:01:43,907 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-30 21:01:44,916 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-30 21:01:45,917 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-30 21:01:46,917 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-30 21:01:47,918 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-30 21:01:48,559 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om1 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:246)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:234)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:227)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:179)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:148)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:484)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:595)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:573)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1227)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1094)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1017)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1899)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:3048)
, while invoking $Proxy25.submitRequest over nodeId=null,nodeAddress=om:9862 after 1 failover attempts. Trying to failover after sleeping for 4000ms. Current retry count: 1.
2023-08-30 21:01:48,918 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-30 21:01:49,919 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-30 21:01:50,920 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-30 21:01:51,920 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-30 21:01:52,921 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-30 21:01:53,924 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-30 21:01:54,158 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2023-08-30 21:01:54,925 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-30 21:01:55,174 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2023-08-30 21:01:55,926 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-30 21:01:56,927 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-30 21:01:57,927 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-30 21:01:58,009 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-08-30 21:01:58,467 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-08-30 21:01:58,928 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-30 21:01:59,931 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-30 21:02:00,965 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-30 21:02:01,966 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-30 21:02:02,967 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-30 21:02:03,967 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-08-30 21:02:04,145 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=7840.293367, max=7840.293367, mean=7840.293367, stddev=0.0, median=7840.293367, p75=7840.293367, p95=7840.293367, p98=7840.293367, p99=7840.293367, p999=7840.293367, mean_rate=0.11631203439676904, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-08-30 21:02:04,148 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 20
2023-08-30 21:02:04,148 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-08-30 21:02:04,148 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230830 21:02:04.530" endtime="20230830 21:02:04.531"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:02:04.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:02:04.531" endtime="20230830 21:02:04.532"/>
</kw>
<status status="PASS" starttime="20230830 21:01:37.531" endtime="20230830 21:02:04.532"/>
</kw>
<msg timestamp="20230830 21:02:04.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:01:37.530" endtime="20230830 21:02:04.532"/>
</kw>
<msg timestamp="20230830 21:02:04.533" level="INFO">${result} = 2023-08-30 21:01:43,123 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-30 21:01:43,526 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230830 21:01:37.529" endtime="20230830 21:02:04.533"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:02:04.533" endtime="20230830 21:02:04.534"/>
</kw>
<status status="PASS" starttime="20230830 21:01:37.527" endtime="20230830 21:02:04.534"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:02:04.540" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p nG4kGH9ABK  2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:02:16.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:02:16.374" level="INFO">${output} = 2023-08-30 21:02:08,052 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-30 21:02:08,304 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230830 21:02:04.537" endtime="20230830 21:02:16.374"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:02:16.375" level="INFO">2023-08-30 21:02:08,052 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-30 21:02:08,304 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-08-30 21:02:08,304 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-08-30 21:02:08,435 [main] INFO freon.BaseFreonGenerator: Executing test with prefix nG4kGH9ABK and number-of-tests 1
2023-08-30 21:02:08,523 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-30 21:02:09,529 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-30 21:02:10,530 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-30 21:02:11,530 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-30 21:02:12,534 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-30 21:02:12,768 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-08-30 21:02:13,548 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-30 21:02:14,549 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-30 21:02:15,549 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-08-30 21:02:16,008 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=84.853186, max=84.853186, mean=84.853186, stddev=0.0, median=84.853186, p75=84.853186, p95=84.853186, p98=84.853186, p99=84.853186, p999=84.853186, mean_rate=0.8979430635063874, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-08-30 21:02:16,009 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 7
2023-08-30 21:02:16,009 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-08-30 21:02:16,009 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230830 21:02:16.374" endtime="20230830 21:02:16.375"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:02:16.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:02:16.376" endtime="20230830 21:02:16.376"/>
</kw>
<status status="PASS" starttime="20230830 21:02:04.537" endtime="20230830 21:02:16.377"/>
</kw>
<msg timestamp="20230830 21:02:16.377" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:02:04.536" endtime="20230830 21:02:16.377"/>
</kw>
<msg timestamp="20230830 21:02:16.377" level="INFO">${result} = 2023-08-30 21:02:08,052 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-30 21:02:08,304 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230830 21:02:04.535" endtime="20230830 21:02:16.377"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:02:16.377" endtime="20230830 21:02:16.379"/>
</kw>
<status status="PASS" starttime="20230830 21:02:04.534" endtime="20230830 21:02:16.379"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 21:01:37.524" endtime="20230830 21:02:16.379"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230830 21:01:37.070" endtime="20230830 21:02:16.381"/>
</suite>
<suite id="s1-s2" name="Cli" source="/opt/hadoop/smoketest/topology/cli.robot">
<test id="s1-s2-t1" name="Run printTopology" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:02:19.950" level="INFO">Running command 'ozone admin printTopology 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:02:25.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:02:25.203" level="INFO">${output} = State = HEALTHY
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230830 21:02:19.947" endtime="20230830 21:02:25.203"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:02:25.205" level="INFO">State = HEALTHY
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1</msg>
<status status="PASS" starttime="20230830 21:02:25.204" endtime="20230830 21:02:25.205"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:02:25.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:02:25.205" endtime="20230830 21:02:25.206"/>
</kw>
<status status="PASS" starttime="20230830 21:02:19.947" endtime="20230830 21:02:25.206"/>
</kw>
<msg timestamp="20230830 21:02:25.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:02:19.946" endtime="20230830 21:02:25.207"/>
</kw>
<msg timestamp="20230830 21:02:25.207" level="INFO">${output} = State = HEALTHY
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230830 21:02:19.946" endtime="20230830 21:02:25.207"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:02:25.208" endtime="20230830 21:02:25.208"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 21:02:19.945" endtime="20230830 21:02:25.209"/>
</test>
<test id="s1-s2-t2" name="Run printTopology -o" line="30">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology -o</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:02:25.216" level="INFO">Running command 'ozone admin printTopology -o 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:02:30.569" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:02:30.569" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_data...</msg>
<status status="PASS" starttime="20230830 21:02:25.214" endtime="20230830 21:02:30.570"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:02:30.571" level="INFO">State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
Location: /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net) IN_SERVICE
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net) IN_SERVICE</msg>
<status status="PASS" starttime="20230830 21:02:30.570" endtime="20230830 21:02:30.572"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:02:30.573" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:02:30.572" endtime="20230830 21:02:30.573"/>
</kw>
<status status="PASS" starttime="20230830 21:02:25.213" endtime="20230830 21:02:30.573"/>
</kw>
<msg timestamp="20230830 21:02:30.573" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:02:25.212" endtime="20230830 21:02:30.573"/>
</kw>
<msg timestamp="20230830 21:02:30.574" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_data...</msg>
<status status="PASS" starttime="20230830 21:02:25.212" endtime="20230830 21:02:30.574"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Location: /rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:02:30.574" endtime="20230830 21:02:30.574"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:02:30.574" endtime="20230830 21:02:30.575"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 21:02:25.211" endtime="20230830 21:02:30.575"/>
</test>
<test id="s1-s2-t3" name="Run printTopology --operational-state IN_SERVICE" line="34">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --operational-state IN_SERVICE</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:02:30.582" level="INFO">Running command 'ozone admin printTopology --operational-state IN_SERVICE 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:02:35.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:02:35.578" level="INFO">${output} = State = HEALTHY
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230830 21:02:30.579" endtime="20230830 21:02:35.578"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:02:35.579" level="INFO">State = HEALTHY
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1</msg>
<status status="PASS" starttime="20230830 21:02:35.579" endtime="20230830 21:02:35.580"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:02:35.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:02:35.580" endtime="20230830 21:02:35.580"/>
</kw>
<status status="PASS" starttime="20230830 21:02:30.579" endtime="20230830 21:02:35.581"/>
</kw>
<msg timestamp="20230830 21:02:35.581" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:02:30.578" endtime="20230830 21:02:35.581"/>
</kw>
<msg timestamp="20230830 21:02:35.581" level="INFO">${output} = State = HEALTHY
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230830 21:02:30.578" endtime="20230830 21:02:35.581"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:02:35.581" endtime="20230830 21:02:35.582"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 21:02:30.577" endtime="20230830 21:02:35.582"/>
</test>
<test id="s1-s2-t4" name="Run printTopology --node-state HEALTHY" line="37">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --node-state HEALTHY</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:02:35.589" level="INFO">Running command 'ozone admin printTopology --node-state HEALTHY 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:02:40.620" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:02:40.620" level="INFO">${output} = State = HEALTHY
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230830 21:02:35.587" endtime="20230830 21:02:40.620"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:02:40.621" level="INFO">State = HEALTHY
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1</msg>
<status status="PASS" starttime="20230830 21:02:40.620" endtime="20230830 21:02:40.621"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:02:40.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:02:40.621" endtime="20230830 21:02:40.622"/>
</kw>
<status status="PASS" starttime="20230830 21:02:35.586" endtime="20230830 21:02:40.622"/>
</kw>
<msg timestamp="20230830 21:02:40.622" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:02:35.586" endtime="20230830 21:02:40.622"/>
</kw>
<msg timestamp="20230830 21:02:40.622" level="INFO">${output} = State = HEALTHY
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230830 21:02:35.585" endtime="20230830 21:02:40.622"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:02:40.623" endtime="20230830 21:02:40.623"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 21:02:35.583" endtime="20230830 21:02:40.623"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230830 21:02:19.875" endtime="20230830 21:02:40.625"/>
</suite>
<suite id="s1-s3" name="Recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s3-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s3-s1-t1" name="Check if Recon picks up OM data" line="61">
<kw name="Execute" library="os">
<arg>ozone sh volume create recon</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:02:43.615" level="INFO">Running command 'ozone sh volume create recon 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:02:48.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:02:48.877" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230830 21:02:43.612" endtime="20230830 21:02:48.877"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:02:48.878" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230830 21:02:48.877" endtime="20230830 21:02:48.878"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:02:48.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:02:48.879" endtime="20230830 21:02:48.879"/>
</kw>
<status status="PASS" starttime="20230830 21:02:43.612" endtime="20230830 21:02:48.879"/>
</kw>
<msg timestamp="20230830 21:02:48.879" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:02:43.611" endtime="20230830 21:02:48.879"/>
</kw>
<status status="PASS" starttime="20230830 21:02:43.611" endtime="20230830 21:02:48.880"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create recon/api --layout=LEGACY</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:02:48.895" level="INFO">Running command 'ozone sh bucket create recon/api --layout=LEGACY 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:02:53.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:02:53.722" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230830 21:02:48.893" endtime="20230830 21:02:53.722"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:02:53.727" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230830 21:02:53.722" endtime="20230830 21:02:53.727"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:02:53.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:02:53.727" endtime="20230830 21:02:53.728"/>
</kw>
<status status="PASS" starttime="20230830 21:02:48.883" endtime="20230830 21:02:53.728"/>
</kw>
<msg timestamp="20230830 21:02:53.728" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:02:48.883" endtime="20230830 21:02:53.728"/>
</kw>
<status status="PASS" starttime="20230830 21:02:48.880" endtime="20230830 21:02:53.728"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>n=10</arg>
<arg>args=-s 1025 -v recon -b api</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:02:53.733" level="INFO">Running command 'ozone freon ockg  -t 1 -n10 -p ockg -s 1025 -v recon -b api 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:03:05.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:03:05.253" level="INFO">${output} = 2023-08-30 21:02:56,516 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-30 21:02:56,645 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230830 21:02:53.731" endtime="20230830 21:03:05.253"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:03:05.255" level="INFO">2023-08-30 21:02:56,516 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-30 21:02:56,645 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-08-30 21:02:56,645 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-08-30 21:02:56,732 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg and number-of-tests 10
2023-08-30 21:02:56,811 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-08-30 21:02:57,815 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-08-30 21:02:58,816 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-08-30 21:02:59,580 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-08-30 21:02:59,852 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-08-30 21:02:59,956 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-08-30 21:03:00,852 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-08-30 21:03:01,853 [Thread-5] INFO freon.ProgressBar: Progress: 40.00 % (4 out of 10)
2023-08-30 21:03:02,854 [Thread-5] INFO freon.ProgressBar: Progress: 50.00 % (5 out of 10)
2023-08-30 21:03:03,854 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2023-08-30 21:03:04,895 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=10, min=108.143802, max=2601.371881, mean=508.5689245385556, stddev=762.3872018191257, median=134.981204, p75=410.974989, p95=2601.371881, p98=2601.371881, p99=2601.371881, p999=2601.371881, mean_rate=1.5743400722257443, m1=1.6, m5=1.6, m15=1.6, rate_unit=events/second, duration_unit=milliseconds
2023-08-30 21:03:04,896 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 8
2023-08-30 21:03:04,896 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-08-30 21:03:04,896 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20230830 21:03:05.254" endtime="20230830 21:03:05.255"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:03:05.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:03:05.255" endtime="20230830 21:03:05.256"/>
</kw>
<status status="PASS" starttime="20230830 21:02:53.730" endtime="20230830 21:03:05.256"/>
</kw>
<msg timestamp="20230830 21:03:05.256" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:02:53.730" endtime="20230830 21:03:05.257"/>
</kw>
<msg timestamp="20230830 21:03:05.257" level="INFO">${result} = 2023-08-30 21:02:56,516 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-30 21:02:56,645 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230830 21:02:53.729" endtime="20230830 21:03:05.257"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:03:05.257" endtime="20230830 21:03:05.258"/>
</kw>
<status status="PASS" starttime="20230830 21:02:53.729" endtime="20230830 21:03:05.258"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 21:03:05.259" endtime="20230830 21:03:05.259"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:03:05.264" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:03:05.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:03:05.519" level="INFO">${output} = {"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230830 21:03:05.261" endtime="20230830 21:03:05.519"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:03:05.520" level="INFO">{"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null},{"ContainerID":4,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230830 21:03:05.519" endtime="20230830 21:03:05.520"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:03:05.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:03:05.521" endtime="20230830 21:03:05.522"/>
</kw>
<status status="PASS" starttime="20230830 21:03:05.260" endtime="20230830 21:03:05.522"/>
</kw>
<msg timestamp="20230830 21:03:05.522" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:03:05.260" endtime="20230830 21:03:05.522"/>
</kw>
<msg timestamp="20230830 21:03:05.522" level="INFO">${result} = {"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230830 21:03:05.259" endtime="20230830 21:03:05.522"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:03:05.523" endtime="20230830 21:03:05.523"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:03:05.531" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:03:05.562" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:03:05.562" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230830 21:03:05.526" endtime="20230830 21:03:05.563"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:03:05.564" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230830 21:03:05.563" endtime="20230830 21:03:05.564"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:03:05.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:03:05.564" endtime="20230830 21:03:05.564"/>
</kw>
<status status="PASS" starttime="20230830 21:03:05.525" endtime="20230830 21:03:05.565"/>
</kw>
<msg timestamp="20230830 21:03:05.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:03:05.525" endtime="20230830 21:03:05.566"/>
</kw>
<msg timestamp="20230830 21:03:05.566" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230830 21:03:05.524" endtime="20230830 21:03:05.566"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230830 21:03:05.567" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20230830 21:03:05.566" endtime="20230830 21:03:05.567"/>
</kw>
<status status="FAIL" starttime="20230830 21:03:05.258" endtime="20230830 21:03:05.567"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 21:03:15.569" endtime="20230830 21:03:15.570"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:03:15.574" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:03:15.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:03:15.597" level="INFO">${output} = {"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230830 21:03:15.572" endtime="20230830 21:03:15.597"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:03:15.598" level="INFO">{"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null},{"ContainerID":4,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230830 21:03:15.597" endtime="20230830 21:03:15.598"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:03:15.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:03:15.599" endtime="20230830 21:03:15.600"/>
</kw>
<status status="PASS" starttime="20230830 21:03:15.571" endtime="20230830 21:03:15.600"/>
</kw>
<msg timestamp="20230830 21:03:15.600" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:03:15.571" endtime="20230830 21:03:15.601"/>
</kw>
<msg timestamp="20230830 21:03:15.601" level="INFO">${result} = {"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230830 21:03:15.570" endtime="20230830 21:03:15.601"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:03:15.601" endtime="20230830 21:03:15.602"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:03:15.607" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:03:15.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:03:15.627" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20230830 21:03:15.604" endtime="20230830 21:03:15.627"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:03:15.629" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20230830 21:03:15.628" endtime="20230830 21:03:15.629"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:03:15.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:03:15.629" endtime="20230830 21:03:15.630"/>
</kw>
<status status="PASS" starttime="20230830 21:03:15.603" endtime="20230830 21:03:15.630"/>
</kw>
<msg timestamp="20230830 21:03:15.630" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:03:15.603" endtime="20230830 21:03:15.631"/>
</kw>
<msg timestamp="20230830 21:03:15.631" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20230830 21:03:15.602" endtime="20230830 21:03:15.631"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:03:15.631" endtime="20230830 21:03:15.632"/>
</kw>
<status status="PASS" starttime="20230830 21:03:15.568" endtime="20230830 21:03:15.632"/>
</kw>
<status status="PASS" starttime="20230830 21:03:05.258" endtime="20230830 21:03:15.632"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 21:02:43.610" endtime="20230830 21:03:15.632"/>
</test>
<test id="s1-s3-s1-t2" name="Check if Recon picks up DN heartbeats" line="71">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/datanodes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:03:15.639" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:03:15.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:03:15.691" level="INFO">${output} = {"totalCount":6,"datanodes":[{"uuid":"5e883e62-f410-41e3-96f3-a737e7246c19","hostname":"ozone-topology_datanode_5_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"stor...</msg>
<status status="PASS" starttime="20230830 21:03:15.636" endtime="20230830 21:03:15.691"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:03:15.693" level="INFO">{"totalCount":6,"datanodes":[{"uuid":"5e883e62-f410-41e3-96f3-a737e7246c19","hostname":"ozone-topology_datanode_5_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":4096,"remaining":15761133568},"pipelines":[{"pipelineID":"cdd9f509-c04e-413b-a4f3-20a2f529a5bb","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"},{"pipelineID":"f61a05fe-0319-4907-bb2b-9117094f6957","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"7efa74ca-63d6-4667-942b-fb15a4802d90","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":1,"version":"1.4.0-SNAPSHOT","setupTime":1693429208992,"revision":"6db519afc5af219d7fe23229ea3100462d8f78d1","buildDate":"2023-08-30T20:20Z","layoutVersion":7,"networkLocation":"/rack2"},{"uuid":"6a0aa629-c4a9-465d-b652-9a9d45c91371","hostname":"ozone-topology_datanode_1_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":4096,"remaining":15761133568},"pipelines":[{"pipelineID":"cdd9f509-c04e-413b-a4f3-20a2f529a5bb","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"},{"pipelineID":"1352f83c-6d8a-4878-b9c1-2f1526ec437e","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"},{"pipelineID":"7efa74ca-63d6-4667-942b-fb15a4802d90","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.4.0-SNAPSHOT","setupTime":1693429208981,"revision":"6db519afc5af219d7fe23229ea3100462d8f78d1","buildDate":"2023-08-30T20:20Z","layoutVersion":7,"networkLocation":"/rack1"},{"uuid":"0a5b7b3c-722b-4ba4-b045-72879efb97f2","hostname":"ozone-topology_datanode_4_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":14336,"remaining":15761133568},"pipelines":[{"pipelineID":"ae1b14ea-c450-4bad-bbbe-dc3ce0e0bdec","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"},{"pipelineID":"fc058ce1-44ac-492d-8409-4e00c3ecd182","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"3efeb00f-9824-4f84-8610-e968e7db85ff","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"}],"containers":2,"openContainers":4,"leaderCount":2,"version":"1.4.0-SNAPSHOT","setupTime":1693429209232,"revision":"6db519afc5af219d7fe23229ea3100462d8f78d1","buildDate":"2023-08-30T20:20Z","layoutVersion":7,"networkLocation":"/rack2"},{"uuid":"2b785954-0dfe-4142-b40f-b642b9586010","hostname":"ozone-topology_datanode_2_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":8192,"remaining":15761063936},"pipelines":[{"pipelineID":"27cb48a7-d04c-4cf8-bf4a-4ea195233543","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"},{"pipelineID":"cdd9f509-c04e-413b-a4f3-20a2f529a5bb","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"},{"pipelineID":"7efa74ca-63d6-4667-942b-fb15a4802d90","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.4.0-SNAPSHOT","setupTime":1693429209012,"revision":"6db519afc5af219d7fe23229ea3100462d8f78d1","buildDate":"2023-08-30T20:20Z","layoutVersion":7,"networkLocation":"/rack1"},{"uuid":"98d6736b-89d2-4c27-9eb7-f68e26a9127e","hostname":"ozone-topology_datanode_6_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":14336,"remaining":15761133568},"pipelines":[{"pipelineID":"ae1b14ea-c450-4bad-bbbe-dc3ce0e0bdec","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"},{"pipelineID":"4d955178-c430-4b11-b4c1-e945ba5f7691","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"},{"pipelineID":"3efeb00f-9824-4f84-8610-e968e7db85ff","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"}],"containers":2,"openContainers":4,"leaderCount":2,"version":"1.4.0-SNAPSHOT","setupTime":1693429208489,"revision":"6db519afc5af219d7fe23229ea3100462d8f78d1","buildDate":"2023-08-30T20:20Z","layoutVersion":7,"networkLocation":"/rack2"},{"uuid":"33a39e35-251f-4662-9b81-0563be3d7c22","hostname":"ozone-topology_datanode_3_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":14336,"remaining":15761063936},"pipelines":[{"pipelineID":"ae1b14ea-c450-4bad-bbbe-dc3ce0e0bdec","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"},{"pipelineID":"23c03303-4558-4b7a-8729-d56b2f3c7a35","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"3efeb00f-9824-4f84-8610-e968e7db85ff","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"}],"containers":2,"openContainers":4,"leaderCount":1,"version":"1.4.0-SNAPSHOT","setupTime":1693429210321,"revision":"6db519afc5af219d7fe23229ea3100462d8f78d1","buildDate":"2023-08-30T20:20Z","layoutVersion":7,"networkLocation":"/rack1"}]}</msg>
<status status="PASS" starttime="20230830 21:03:15.692" endtime="20230830 21:03:15.693"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:03:15.694" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:03:15.693" endtime="20230830 21:03:15.694"/>
</kw>
<status status="PASS" starttime="20230830 21:03:15.636" endtime="20230830 21:03:15.695"/>
</kw>
<msg timestamp="20230830 21:03:15.695" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:03:15.635" endtime="20230830 21:03:15.695"/>
</kw>
<msg timestamp="20230830 21:03:15.695" level="INFO">${result} = {"totalCount":6,"datanodes":[{"uuid":"5e883e62-f410-41e3-96f3-a737e7246c19","hostname":"ozone-topology_datanode_5_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"stor...</msg>
<status status="PASS" starttime="20230830 21:03:15.634" endtime="20230830 21:03:15.695"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanodes</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:03:15.695" endtime="20230830 21:03:15.696"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:03:15.696" endtime="20230830 21:03:15.700"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:03:15.700" endtime="20230830 21:03:15.701"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:03:15.701" endtime="20230830 21:03:15.702"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/pipelines</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:03:15.707" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:03:15.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:03:15.752" level="INFO">${output} = {"totalCount":10,"pipelines":[{"pipelineId":"ae1b14ea-c450-4bad-bbbe-dc3ce0e0bdec","status":"OPEN","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"...</msg>
<status status="PASS" starttime="20230830 21:03:15.704" endtime="20230830 21:03:15.752"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:03:15.753" level="INFO">{"totalCount":10,"pipelines":[{"pipelineId":"ae1b14ea-c450-4bad-bbbe-dc3ce0e0bdec","status":"OPEN","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"0a5b7b3c-722b-4ba4-b045-72879efb97f2","uuidString":"0a5b7b3c-722b-4ba4-b045-72879efb97f2","ipAddress":"10.5.0.7","hostName":"ozone-topology_datanode_4_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-569096488,"maintenance":false,"decommissioned":false,"networkName":"0a5b7b3c-722b-4ba4-b045-72879efb97f2","networkLocation":"/rack2","networkFullPath":"/rack2/0a5b7b3c-722b-4ba4-b045-72879efb97f2","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"33a39e35-251f-4662-9b81-0563be3d7c22","uuidString":"33a39e35-251f-4662-9b81-0563be3d7c22","ipAddress":"10.5.0.6","hostName":"ozone-topology_datanode_3_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-585258581,"maintenance":false,"decommissioned":false,"networkName":"33a39e35-251f-4662-9b81-0563be3d7c22","networkLocation":"/rack1","networkFullPath":"/rack1/33a39e35-251f-4662-9b81-0563be3d7c22","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"98d6736b-89d2-4c27-9eb7-f68e26a9127e","uuidString":"98d6736b-89d2-4c27-9eb7-f68e26a9127e","ipAddress":"10.5.0.9","hostName":"ozone-topology_datanode_6_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":873912350,"maintenance":false,"decommissioned":false,"networkName":"98d6736b-89d2-4c27-9eb7-f68e26a9127e","networkLocation":"/rack2","networkFullPath":"/rack2/98d6736b-89d2-4c27-9eb7-f68e26a9127e","numOfLeaves":1}],"lastLeaderElection":0,"duration":115644,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"fc058ce1-44ac-492d-8409-4e00c3ecd182","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"0a5b7b3c-722b-4ba4-b045-72879efb97f2","uuidString":"0a5b7b3c-722b-4ba4-b045-72879efb97f2","ipAddress":"10.5.0.7","hostName":"ozone-topology_datanode_4_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-569096488,"maintenance":false,"decommissioned":false,"networkName":"0a5b7b3c-722b-4ba4-b045-72879efb97f2","networkLocation":"/rack2","networkFullPath":"/rack2/0a5b7b3c-722b-4ba4-b045-72879efb97f2","numOfLeaves":1}],"lastLeaderElection":0,"duration":115705,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"27cb48a7-d04c-4cf8-bf4a-4ea195233543","status":"OPEN","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"2b785954-0dfe-4142-b40f-b642b9586010","uuidString":"2b785954-0dfe-4142-b40f-b642b9586010","ipAddress":"10.5.0.5","hostName":"ozone-topology_datanode_2_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1630304366,"maintenance":false,"decommissioned":false,"networkName":"2b785954-0dfe-4142-b40f-b642b9586010","networkLocation":"/rack1","networkFullPath":"/rack1/2b785954-0dfe-4142-b40f-b642b9586010","numOfLeaves":1}],"lastLeaderElection":0,"duration":115566,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"cdd9f509-c04e-413b-a4f3-20a2f529a5bb","status":"OPEN","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"6a0aa629-c4a9-465d-b652-9a9d45c91371","uuidString":"6a0aa629-c4a9-465d-b652-9a9d45c91371","ipAddress":"10.5.0.4","hostName":"ozone-topology_datanode_1_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":1003036412,"maintenance":false,"decommissioned":false,"networkName":"6a0aa629-c4a9-465d-b652-9a9d45c91371","networkLocation":"/rack1","networkFullPath":"/rack1/6a0aa629-c4a9-465d-b652-9a9d45c91371","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"5e883e62-f410-41e3-96f3-a737e7246c19","uuidString":"5e883e62-f410-41e3-96f3-a737e7246c19","ipAddress":"10.5.0.8","hostName":"ozone-topology_datanode_5_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-651136739,"maintenance":false,"decommissioned":false,"networkName":"5e883e62-f410-41e3-96f3-a737e7246c19","networkLocation":"/rack2","networkFullPath":"/rack2/5e883e62-f410-41e3-96f3-a737e7246c19","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"2b785954-0dfe-4142-b40f-b642b9586010","uuidString":"2b785954-0dfe-4142-b40f-b642b9586010","ipAddress":"10.5.0.5","hostName":"ozone-topology_datanode_2_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1630304366,"maintenance":false,"decommissioned":false,"networkName":"2b785954-0dfe-4142-b40f-b642b9586010","networkLocation":"/rack1","networkFullPath":"/rack1/2b785954-0dfe-4142-b40f-b642b9586010","numOfLeaves":1}],"lastLeaderElection":0,"duration":115787,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"4d955178-c430-4b11-b4c1-e945ba5f7691","status":"OPEN","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"98d6736b-89d2-4c27-9eb7-f68e26a9127e","uuidString":"98d6736b-89d2-4c27-9eb7-f68e26a9127e","ipAddress":"10.5.0.9","hostName":"ozone-topology_datanode_6_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":873912350,"maintenance":false,"decommissioned":false,"networkName":"98d6736b-89d2-4c27-9eb7-f68e26a9127e","networkLocation":"/rack2","networkFullPath":"/rack2/98d6736b-89d2-4c27-9eb7-f68e26a9127e","numOfLeaves":1}],"lastLeaderElection":0,"duration":115403,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"23c03303-4558-4b7a-8729-d56b2f3c7a35","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"33a39e35-251f-4662-9b81-0563be3d7c22","uuidString":"33a39e35-251f-4662-9b81-0563be3d7c22","ipAddress":"10.5.0.6","hostName":"ozone-topology_datanode_3_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-585258581,"maintenance":false,"decommissioned":false,"networkName":"33a39e35-251f-4662-9b81-0563be3d7c22","networkLocation":"/rack1","networkFullPath":"/rack1/33a39e35-251f-4662-9b81-0563be3d7c22","numOfLeaves":1}],"lastLeaderElection":0,"duration":118483,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"1352f83c-6d8a-4878-b9c1-2f1526ec437e","status":"OPEN","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"6a0aa629-c4a9-465d-b652-9a9d45c91371","uuidString":"6a0aa629-c4a9-465d-b652-9a9d45c91371","ipAddress":"10.5.0.4","hostName":"ozone-topology_datanode_1_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":1003036412,"maintenance":false,"decommissioned":false,"networkName":"6a0aa629-c4a9-465d-b652-9a9d45c91371","networkLocation":"/rack1","networkFullPath":"/rack1/6a0aa629-c4a9-465d-b652-9a9d45c91371","numOfLeaves":1}],"lastLeaderElection":0,"duration":116379,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"3efeb00f-9824-4f84-8610-e968e7db85ff","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"0a5b7b3c-722b-4ba4-b045-72879efb97f2","uuidString":"0a5b7b3c-722b-4ba4-b045-72879efb97f2","ipAddress":"10.5.0.7","hostName":"ozone-topology_datanode_4_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-569096488,"maintenance":false,"decommissioned":false,"networkName":"0a5b7b3c-722b-4ba4-b045-72879efb97f2","networkLocation":"/rack2","networkFullPath":"/rack2/0a5b7b3c-722b-4ba4-b045-72879efb97f2","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"33a39e35-251f-4662-9b81-0563be3d7c22","uuidString":"33a39e35-251f-4662-9b81-0563be3d7c22","ipAddress":"10.5.0.6","hostName":"ozone-topology_datanode_3_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-585258581,"maintenance":false,"decommissioned":false,"networkName":"33a39e35-251f-4662-9b81-0563be3d7c22","networkLocation":"/rack1","networkFullPath":"/rack1/33a39e35-251f-4662-9b81-0563be3d7c22","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"98d6736b-89d2-4c27-9eb7-f68e26a9127e","uuidString":"98d6736b-89d2-4c27-9eb7-f68e26a9127e","ipAddress":"10.5.0.9","hostName":"ozone-topology_datanode_6_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":873912350,"maintenance":false,"decommissioned":false,"networkName":"98d6736b-89d2-4c27-9eb7-f68e26a9127e","networkLocation":"/rack2","networkFullPath":"/rack2/98d6736b-89d2-4c27-9eb7-f68e26a9127e","numOfLeaves":1}],"lastLeaderElection":0,"duration":116155,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"f61a05fe-0319-4907-bb2b-9117094f6957","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"5e883e62-f410-41e3-96f3-a737e7246c19","uuidString":"5e883e62-f410-41e3-96f3-a737e7246c19","ipAddress":"10.5.0.8","hostName":"ozone-topology_datanode_5_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-651136739,"maintenance":false,"decommissioned":false,"networkName":"5e883e62-f410-41e3-96f3-a737e7246c19","networkLocation":"/rack2","networkFullPath":"/rack2/5e883e62-f410-41e3-96f3-a737e7246c19","numOfLeaves":1}],"lastLeaderElection":0,"duration":115988,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"7efa74ca-63d6-4667-942b-fb15a4802d90","status":"OPEN","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"6a0aa629-c4a9-465d-b652-9a9d45c91371","uuidString":"6a0aa629-c4a9-465d-b652-9a9d45c91371","ipAddress":"10.5.0.4","hostName":"ozone-topology_datanode_1_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":1003036412,"maintenance":false,"decommissioned":false,"networkName":"6a0aa629-c4a9-465d-b652-9a9d45c91371","networkLocation":"/rack1","networkFullPath":"/rack1/6a0aa629-c4a9-465d-b652-9a9d45c91371","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"5e883e62-f410-41e3-96f3-a737e7246c19","uuidString":"5e883e62-f410-41e3-96f3-a737e7246c19","ipAddress":"10.5.0.8","hostName":"ozone-topology_datanode_5_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-651136739,"maintenance":false,"decommissioned":false,"networkName":"5e883e62-f410-41e3-96f3-a737e7246c19","networkLocation":"/rack2","networkFullPath":"/rack2/5e883e62-f410-41e3-96f3-a737e7246c19","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"2b785954-0dfe-4142-b40f-b642b9586010","uuidString":"2b785954-0dfe-4142-b40f-b642b9586010","ipAddress":"10.5.0.5","hostName":"ozone-topology_datanode_2_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1630304366,"maintenance":false,"decommissioned":false,"networkName":"2b785954-0dfe-4142-b40f-b642b9586010","networkLocation":"/rack1","networkFullPath":"/rack1/2b785954-0dfe-4142-b40f-b642b9586010","numOfLeaves":1}],"lastLeaderElection":0,"duration":116757,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1}]}</msg>
<status status="PASS" starttime="20230830 21:03:15.752" endtime="20230830 21:03:15.753"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:03:15.754" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:03:15.753" endtime="20230830 21:03:15.754"/>
</kw>
<status status="PASS" starttime="20230830 21:03:15.703" endtime="20230830 21:03:15.754"/>
</kw>
<msg timestamp="20230830 21:03:15.754" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:03:15.703" endtime="20230830 21:03:15.755"/>
</kw>
<msg timestamp="20230830 21:03:15.755" level="INFO">${result} = {"totalCount":10,"pipelines":[{"pipelineId":"ae1b14ea-c450-4bad-bbbe-dc3ce0e0bdec","status":"OPEN","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"...</msg>
<status status="PASS" starttime="20230830 21:03:15.702" endtime="20230830 21:03:15.755"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>pipelines</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:03:15.756" endtime="20230830 21:03:15.756"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:03:15.756" endtime="20230830 21:03:15.757"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:03:15.757" endtime="20230830 21:03:15.757"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:03:15.758" endtime="20230830 21:03:15.758"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:03:15.758" endtime="20230830 21:03:15.759"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:03:15.759" endtime="20230830 21:03:15.759"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/clusterState</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:03:15.764" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:03:15.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:03:15.824" level="INFO">${output} = {"deletedDirs":0,"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":59392,"remaining":94566662144},"containers":4,"missingContainers":0,"openContain...</msg>
<status status="PASS" starttime="20230830 21:03:15.761" endtime="20230830 21:03:15.824"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:03:15.825" level="INFO">{"deletedDirs":0,"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":59392,"remaining":94566662144},"containers":4,"missingContainers":0,"openContainers":4,"deletedContainers":0,"volumes":3,"buckets":2,"keys":11,"keysPendingDeletion":0}</msg>
<status status="PASS" starttime="20230830 21:03:15.824" endtime="20230830 21:03:15.825"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:03:15.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:03:15.825" endtime="20230830 21:03:15.826"/>
</kw>
<status status="PASS" starttime="20230830 21:03:15.761" endtime="20230830 21:03:15.826"/>
</kw>
<msg timestamp="20230830 21:03:15.826" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:03:15.760" endtime="20230830 21:03:15.826"/>
</kw>
<msg timestamp="20230830 21:03:15.826" level="INFO">${result} = {"deletedDirs":0,"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":59392,"remaining":94566662144},"containers":4,"missingContainers":0,"openContain...</msg>
<status status="PASS" starttime="20230830 21:03:15.760" endtime="20230830 21:03:15.826"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"totalDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:03:15.827" endtime="20230830 21:03:15.827"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"healthyDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:03:15.827" endtime="20230830 21:03:15.828"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"pipelines\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:03:15.828" endtime="20230830 21:03:15.828"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:03:15.838" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:03:15.866" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:03:15.866" level="INFO">${output} = [{"containerId":1,"datanodeUuid":"0a5b7b3c-722b-4ba4-b045-72879efb97f2","datanodeHost":"ozone-topology_datanode_4_1.ozone-topology_net","firstSeenTime":1693429320183,"lastSeenTime":1693429320183,"stat...</msg>
<status status="PASS" starttime="20230830 21:03:15.835" endtime="20230830 21:03:15.866"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:03:15.868" level="INFO">[{"containerId":1,"datanodeUuid":"0a5b7b3c-722b-4ba4-b045-72879efb97f2","datanodeHost":"ozone-topology_datanode_4_1.ozone-topology_net","firstSeenTime":1693429320183,"lastSeenTime":1693429320183,"state":"OPEN","lastBcsId":0},{"containerId":1,"datanodeUuid":"98d6736b-89d2-4c27-9eb7-f68e26a9127e","datanodeHost":"ozone-topology_datanode_6_1.ozone-topology_net","firstSeenTime":1693429320272,"lastSeenTime":1693429320272,"state":"OPEN","lastBcsId":0},{"containerId":1,"datanodeUuid":"33a39e35-251f-4662-9b81-0563be3d7c22","datanodeHost":"ozone-topology_datanode_3_1.ozone-topology_net","firstSeenTime":1693429320321,"lastSeenTime":1693429320321,"state":"OPEN","lastBcsId":0}]</msg>
<status status="PASS" starttime="20230830 21:03:15.867" endtime="20230830 21:03:15.868"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:03:15.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:03:15.868" endtime="20230830 21:03:15.869"/>
</kw>
<status status="PASS" starttime="20230830 21:03:15.831" endtime="20230830 21:03:15.869"/>
</kw>
<msg timestamp="20230830 21:03:15.869" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:03:15.829" endtime="20230830 21:03:15.870"/>
</kw>
<msg timestamp="20230830 21:03:15.870" level="INFO">${result} = [{"containerId":1,"datanodeUuid":"0a5b7b3c-722b-4ba4-b045-72879efb97f2","datanodeHost":"ozone-topology_datanode_4_1.ozone-topology_net","firstSeenTime":1693429320183,"lastSeenTime":1693429320183,"stat...</msg>
<status status="PASS" starttime="20230830 21:03:15.828" endtime="20230830 21:03:15.870"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:03:15.870" endtime="20230830 21:03:15.870"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 21:03:15.633" endtime="20230830 21:03:15.871"/>
</test>
<test id="s1-s3-s1-t3" name="Check if Recon Web UI is up" line="94">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 21:03:15.873" endtime="20230830 21:03:15.874"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${ENDPOINT_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:03:15.879" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:03:15.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:03:15.900" level="INFO">${output} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20230830 21:03:15.875" endtime="20230830 21:03:15.900"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:03:15.901" level="INFO">&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.58b4e004.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.95934262.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.60ad2f10.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.2d1dcd24.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20230830 21:03:15.900" endtime="20230830 21:03:15.901"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:03:15.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:03:15.902" endtime="20230830 21:03:15.902"/>
</kw>
<status status="PASS" starttime="20230830 21:03:15.875" endtime="20230830 21:03:15.903"/>
</kw>
<msg timestamp="20230830 21:03:15.903" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:03:15.875" endtime="20230830 21:03:15.903"/>
</kw>
<msg timestamp="20230830 21:03:15.903" level="INFO">${result} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20230830 21:03:15.874" endtime="20230830 21:03:15.904"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Ozone Recon</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:03:15.904" endtime="20230830 21:03:15.904"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 21:03:15.872" endtime="20230830 21:03:15.905"/>
</test>
<test id="s1-s3-s1-t4" name="Check web UI access" line="99">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:03:15.911" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:03:15.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:03:15.919" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230830 21:03:15.908" endtime="20230830 21:03:15.919"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:03:15.920" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230830 21:03:15.919" endtime="20230830 21:03:15.920"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:03:15.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:03:15.920" endtime="20230830 21:03:15.921"/>
</kw>
<status status="PASS" starttime="20230830 21:03:15.908" endtime="20230830 21:03:15.921"/>
</kw>
<msg timestamp="20230830 21:03:15.921" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:03:15.907" endtime="20230830 21:03:15.921"/>
</kw>
<status status="PASS" starttime="20230830 21:03:15.907" endtime="20230830 21:03:15.921"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:03:15.926" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:03:15.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:03:15.940" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230830 21:03:15.924" endtime="20230830 21:03:15.940"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:03:15.943" level="INFO">200</msg>
<status status="PASS" starttime="20230830 21:03:15.941" endtime="20230830 21:03:15.944"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:03:15.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:03:15.945" endtime="20230830 21:03:15.945"/>
</kw>
<status status="PASS" starttime="20230830 21:03:15.923" endtime="20230830 21:03:15.946"/>
</kw>
<msg timestamp="20230830 21:03:15.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:03:15.923" endtime="20230830 21:03:15.946"/>
</kw>
<msg timestamp="20230830 21:03:15.946" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230830 21:03:15.922" endtime="20230830 21:03:15.946"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 21:03:15.947" endtime="20230830 21:03:15.947"/>
</kw>
<status status="NOT RUN" starttime="20230830 21:03:15.946" endtime="20230830 21:03:15.947"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:03:15.947" endtime="20230830 21:03:15.949"/>
</kw>
<status status="PASS" starttime="20230830 21:03:15.947" endtime="20230830 21:03:15.949"/>
</branch>
<status status="PASS" starttime="20230830 21:03:15.946" endtime="20230830 21:03:15.949"/>
</if>
<status status="PASS" starttime="20230830 21:03:15.922" endtime="20230830 21:03:15.949"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 21:03:15.950" endtime="20230830 21:03:15.950"/>
</kw>
<status status="PASS" starttime="20230830 21:03:15.949" endtime="20230830 21:03:15.950"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:03:15.955" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:03:15.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:03:15.968" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230830 21:03:15.953" endtime="20230830 21:03:15.969"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:03:15.970" level="INFO">200</msg>
<status status="PASS" starttime="20230830 21:03:15.969" endtime="20230830 21:03:15.970"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:03:15.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:03:15.970" endtime="20230830 21:03:15.971"/>
</kw>
<status status="PASS" starttime="20230830 21:03:15.952" endtime="20230830 21:03:15.971"/>
</kw>
<msg timestamp="20230830 21:03:15.971" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:03:15.952" endtime="20230830 21:03:15.971"/>
</kw>
<msg timestamp="20230830 21:03:15.971" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230830 21:03:15.951" endtime="20230830 21:03:15.971"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 21:03:15.972" endtime="20230830 21:03:15.972"/>
</kw>
<status status="NOT RUN" starttime="20230830 21:03:15.971" endtime="20230830 21:03:15.972"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:03:15.972" endtime="20230830 21:03:15.973"/>
</kw>
<status status="PASS" starttime="20230830 21:03:15.972" endtime="20230830 21:03:15.973"/>
</branch>
<status status="PASS" starttime="20230830 21:03:15.971" endtime="20230830 21:03:15.973"/>
</if>
<status status="PASS" starttime="20230830 21:03:15.950" endtime="20230830 21:03:15.973"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 21:03:15.906" endtime="20230830 21:03:15.973"/>
</test>
<test id="s1-s3-s1-t5" name="Check admin only api access" line="107">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:03:15.979" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:03:15.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:03:15.983" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230830 21:03:15.977" endtime="20230830 21:03:15.983"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:03:15.984" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230830 21:03:15.983" endtime="20230830 21:03:15.984"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:03:15.985" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:03:15.985" endtime="20230830 21:03:15.985"/>
</kw>
<status status="PASS" starttime="20230830 21:03:15.976" endtime="20230830 21:03:15.985"/>
</kw>
<msg timestamp="20230830 21:03:15.985" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:03:15.976" endtime="20230830 21:03:15.986"/>
</kw>
<status status="PASS" starttime="20230830 21:03:15.975" endtime="20230830 21:03:15.986"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:03:15.993" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:03:16.011" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:03:16.011" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230830 21:03:15.988" endtime="20230830 21:03:16.011"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:03:16.013" level="INFO">200</msg>
<status status="PASS" starttime="20230830 21:03:16.012" endtime="20230830 21:03:16.013"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:03:16.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:03:16.013" endtime="20230830 21:03:16.014"/>
</kw>
<status status="PASS" starttime="20230830 21:03:15.988" endtime="20230830 21:03:16.014"/>
</kw>
<msg timestamp="20230830 21:03:16.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:03:15.987" endtime="20230830 21:03:16.015"/>
</kw>
<msg timestamp="20230830 21:03:16.015" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230830 21:03:15.987" endtime="20230830 21:03:16.015"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 21:03:16.016" endtime="20230830 21:03:16.016"/>
</kw>
<status status="NOT RUN" starttime="20230830 21:03:16.015" endtime="20230830 21:03:16.016"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:03:16.016" endtime="20230830 21:03:16.017"/>
</kw>
<status status="PASS" starttime="20230830 21:03:16.016" endtime="20230830 21:03:16.017"/>
</branch>
<status status="PASS" starttime="20230830 21:03:16.015" endtime="20230830 21:03:16.017"/>
</if>
<status status="PASS" starttime="20230830 21:03:15.986" endtime="20230830 21:03:16.017"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 21:03:16.018" endtime="20230830 21:03:16.018"/>
</kw>
<status status="PASS" starttime="20230830 21:03:16.017" endtime="20230830 21:03:16.019"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:03:16.026" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:03:16.041" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:03:16.041" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230830 21:03:16.021" endtime="20230830 21:03:16.041"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:03:16.047" level="INFO">200</msg>
<status status="PASS" starttime="20230830 21:03:16.044" endtime="20230830 21:03:16.047"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:03:16.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:03:16.047" endtime="20230830 21:03:16.048"/>
</kw>
<status status="PASS" starttime="20230830 21:03:16.020" endtime="20230830 21:03:16.048"/>
</kw>
<msg timestamp="20230830 21:03:16.048" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:03:16.020" endtime="20230830 21:03:16.048"/>
</kw>
<msg timestamp="20230830 21:03:16.049" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230830 21:03:16.019" endtime="20230830 21:03:16.049"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 21:03:16.056" endtime="20230830 21:03:16.056"/>
</kw>
<status status="NOT RUN" starttime="20230830 21:03:16.049" endtime="20230830 21:03:16.056"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:03:16.056" endtime="20230830 21:03:16.057"/>
</kw>
<status status="PASS" starttime="20230830 21:03:16.056" endtime="20230830 21:03:16.057"/>
</branch>
<status status="PASS" starttime="20230830 21:03:16.049" endtime="20230830 21:03:16.057"/>
</if>
<status status="PASS" starttime="20230830 21:03:16.019" endtime="20230830 21:03:16.057"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 21:03:16.057" endtime="20230830 21:03:16.058"/>
</kw>
<status status="PASS" starttime="20230830 21:03:16.057" endtime="20230830 21:03:16.058"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:03:16.063" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:03:16.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:03:16.079" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230830 21:03:16.060" endtime="20230830 21:03:16.079"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:03:16.080" level="INFO">200</msg>
<status status="PASS" starttime="20230830 21:03:16.079" endtime="20230830 21:03:16.080"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:03:16.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:03:16.082" endtime="20230830 21:03:16.083"/>
</kw>
<status status="PASS" starttime="20230830 21:03:16.060" endtime="20230830 21:03:16.083"/>
</kw>
<msg timestamp="20230830 21:03:16.083" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:03:16.059" endtime="20230830 21:03:16.083"/>
</kw>
<msg timestamp="20230830 21:03:16.083" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230830 21:03:16.059" endtime="20230830 21:03:16.083"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 21:03:16.084" endtime="20230830 21:03:16.084"/>
</kw>
<status status="NOT RUN" starttime="20230830 21:03:16.084" endtime="20230830 21:03:16.084"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:03:16.085" endtime="20230830 21:03:16.085"/>
</kw>
<status status="PASS" starttime="20230830 21:03:16.084" endtime="20230830 21:03:16.085"/>
</branch>
<status status="PASS" starttime="20230830 21:03:16.083" endtime="20230830 21:03:16.085"/>
</if>
<status status="PASS" starttime="20230830 21:03:16.058" endtime="20230830 21:03:16.086"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 21:03:16.086" endtime="20230830 21:03:16.087"/>
</kw>
<status status="PASS" starttime="20230830 21:03:16.086" endtime="20230830 21:03:16.087"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:03:16.091" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:03:16.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:03:16.106" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230830 21:03:16.089" endtime="20230830 21:03:16.106"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:03:16.107" level="INFO">200</msg>
<status status="PASS" starttime="20230830 21:03:16.107" endtime="20230830 21:03:16.107"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:03:16.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:03:16.108" endtime="20230830 21:03:16.108"/>
</kw>
<status status="PASS" starttime="20230830 21:03:16.089" endtime="20230830 21:03:16.108"/>
</kw>
<msg timestamp="20230830 21:03:16.108" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:03:16.088" endtime="20230830 21:03:16.109"/>
</kw>
<msg timestamp="20230830 21:03:16.109" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230830 21:03:16.088" endtime="20230830 21:03:16.109"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 21:03:16.109" endtime="20230830 21:03:16.109"/>
</kw>
<status status="NOT RUN" starttime="20230830 21:03:16.109" endtime="20230830 21:03:16.109"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:03:16.111" endtime="20230830 21:03:16.111"/>
</kw>
<status status="PASS" starttime="20230830 21:03:16.110" endtime="20230830 21:03:16.111"/>
</branch>
<status status="PASS" starttime="20230830 21:03:16.109" endtime="20230830 21:03:16.111"/>
</if>
<status status="PASS" starttime="20230830 21:03:16.087" endtime="20230830 21:03:16.112"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 21:03:15.974" endtime="20230830 21:03:16.112"/>
</test>
<test id="s1-s3-s1-t6" name="Check unhealthy, (admin) api access" line="120">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:03:16.119" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:03:16.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:03:16.123" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230830 21:03:16.115" endtime="20230830 21:03:16.123"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:03:16.124" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230830 21:03:16.123" endtime="20230830 21:03:16.124"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:03:16.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:03:16.124" endtime="20230830 21:03:16.125"/>
</kw>
<status status="PASS" starttime="20230830 21:03:16.114" endtime="20230830 21:03:16.125"/>
</kw>
<msg timestamp="20230830 21:03:16.125" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:03:16.114" endtime="20230830 21:03:16.126"/>
</kw>
<status status="PASS" starttime="20230830 21:03:16.113" endtime="20230830 21:03:16.126"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:03:16.130" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:03:16.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:03:16.176" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230830 21:03:16.128" endtime="20230830 21:03:16.176"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:03:16.182" level="INFO">200</msg>
<status status="PASS" starttime="20230830 21:03:16.177" endtime="20230830 21:03:16.182"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:03:16.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:03:16.183" endtime="20230830 21:03:16.183"/>
</kw>
<status status="PASS" starttime="20230830 21:03:16.128" endtime="20230830 21:03:16.184"/>
</kw>
<msg timestamp="20230830 21:03:16.184" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:03:16.127" endtime="20230830 21:03:16.184"/>
</kw>
<msg timestamp="20230830 21:03:16.185" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230830 21:03:16.127" endtime="20230830 21:03:16.185"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 21:03:16.185" endtime="20230830 21:03:16.186"/>
</kw>
<status status="NOT RUN" starttime="20230830 21:03:16.185" endtime="20230830 21:03:16.186"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:03:16.186" endtime="20230830 21:03:16.187"/>
</kw>
<status status="PASS" starttime="20230830 21:03:16.186" endtime="20230830 21:03:16.187"/>
</branch>
<status status="PASS" starttime="20230830 21:03:16.185" endtime="20230830 21:03:16.187"/>
</if>
<status status="PASS" starttime="20230830 21:03:16.126" endtime="20230830 21:03:16.187"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 21:03:16.188" endtime="20230830 21:03:16.188"/>
</kw>
<status status="PASS" starttime="20230830 21:03:16.187" endtime="20230830 21:03:16.188"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:03:16.194" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:03:16.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:03:16.215" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230830 21:03:16.191" endtime="20230830 21:03:16.215"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:03:16.218" level="INFO">200</msg>
<status status="PASS" starttime="20230830 21:03:16.215" endtime="20230830 21:03:16.218"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:03:16.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:03:16.219" endtime="20230830 21:03:16.220"/>
</kw>
<status status="PASS" starttime="20230830 21:03:16.190" endtime="20230830 21:03:16.220"/>
</kw>
<msg timestamp="20230830 21:03:16.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:03:16.190" endtime="20230830 21:03:16.220"/>
</kw>
<msg timestamp="20230830 21:03:16.221" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230830 21:03:16.189" endtime="20230830 21:03:16.221"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 21:03:16.221" endtime="20230830 21:03:16.221"/>
</kw>
<status status="NOT RUN" starttime="20230830 21:03:16.221" endtime="20230830 21:03:16.221"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:03:16.222" endtime="20230830 21:03:16.222"/>
</kw>
<status status="PASS" starttime="20230830 21:03:16.221" endtime="20230830 21:03:16.222"/>
</branch>
<status status="PASS" starttime="20230830 21:03:16.221" endtime="20230830 21:03:16.222"/>
</if>
<status status="PASS" starttime="20230830 21:03:16.188" endtime="20230830 21:03:16.222"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 21:03:16.223" endtime="20230830 21:03:16.224"/>
</kw>
<status status="PASS" starttime="20230830 21:03:16.223" endtime="20230830 21:03:16.224"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:03:16.230" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:03:16.247" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:03:16.247" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230830 21:03:16.227" endtime="20230830 21:03:16.247"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:03:16.249" level="INFO">200</msg>
<status status="PASS" starttime="20230830 21:03:16.248" endtime="20230830 21:03:16.249"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:03:16.250" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:03:16.249" endtime="20230830 21:03:16.250"/>
</kw>
<status status="PASS" starttime="20230830 21:03:16.226" endtime="20230830 21:03:16.250"/>
</kw>
<msg timestamp="20230830 21:03:16.250" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:03:16.226" endtime="20230830 21:03:16.251"/>
</kw>
<msg timestamp="20230830 21:03:16.251" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230830 21:03:16.225" endtime="20230830 21:03:16.251"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 21:03:16.252" endtime="20230830 21:03:16.252"/>
</kw>
<status status="NOT RUN" starttime="20230830 21:03:16.251" endtime="20230830 21:03:16.252"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:03:16.252" endtime="20230830 21:03:16.253"/>
</kw>
<status status="PASS" starttime="20230830 21:03:16.252" endtime="20230830 21:03:16.253"/>
</branch>
<status status="PASS" starttime="20230830 21:03:16.251" endtime="20230830 21:03:16.253"/>
</if>
<status status="PASS" starttime="20230830 21:03:16.224" endtime="20230830 21:03:16.253"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 21:03:16.254" endtime="20230830 21:03:16.254"/>
</kw>
<status status="PASS" starttime="20230830 21:03:16.253" endtime="20230830 21:03:16.254"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:03:16.261" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:03:16.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:03:16.284" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230830 21:03:16.258" endtime="20230830 21:03:16.284"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:03:16.285" level="INFO">200</msg>
<status status="PASS" starttime="20230830 21:03:16.285" endtime="20230830 21:03:16.285"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:03:16.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:03:16.286" endtime="20230830 21:03:16.286"/>
</kw>
<status status="PASS" starttime="20230830 21:03:16.257" endtime="20230830 21:03:16.287"/>
</kw>
<msg timestamp="20230830 21:03:16.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:03:16.256" endtime="20230830 21:03:16.287"/>
</kw>
<msg timestamp="20230830 21:03:16.287" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230830 21:03:16.255" endtime="20230830 21:03:16.288"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 21:03:16.288" endtime="20230830 21:03:16.288"/>
</kw>
<status status="NOT RUN" starttime="20230830 21:03:16.288" endtime="20230830 21:03:16.289"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:03:16.289" endtime="20230830 21:03:16.289"/>
</kw>
<status status="PASS" starttime="20230830 21:03:16.289" endtime="20230830 21:03:16.289"/>
</branch>
<status status="PASS" starttime="20230830 21:03:16.288" endtime="20230830 21:03:16.289"/>
</if>
<status status="PASS" starttime="20230830 21:03:16.255" endtime="20230830 21:03:16.290"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 21:03:16.112" endtime="20230830 21:03:16.290"/>
</test>
<test id="s1-s3-s1-t7" name="Check normal api access" line="133">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:03:16.297" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:03:16.301" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:03:16.301" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230830 21:03:16.294" endtime="20230830 21:03:16.301"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:03:16.303" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230830 21:03:16.302" endtime="20230830 21:03:16.303"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:03:16.304" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:03:16.303" endtime="20230830 21:03:16.304"/>
</kw>
<status status="PASS" starttime="20230830 21:03:16.293" endtime="20230830 21:03:16.304"/>
</kw>
<msg timestamp="20230830 21:03:16.304" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:03:16.293" endtime="20230830 21:03:16.304"/>
</kw>
<status status="PASS" starttime="20230830 21:03:16.292" endtime="20230830 21:03:16.305"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:03:16.310" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:03:16.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:03:16.334" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230830 21:03:16.307" endtime="20230830 21:03:16.334"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:03:16.336" level="INFO">200</msg>
<status status="PASS" starttime="20230830 21:03:16.335" endtime="20230830 21:03:16.336"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:03:16.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:03:16.336" endtime="20230830 21:03:16.337"/>
</kw>
<status status="PASS" starttime="20230830 21:03:16.306" endtime="20230830 21:03:16.337"/>
</kw>
<msg timestamp="20230830 21:03:16.337" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:03:16.306" endtime="20230830 21:03:16.337"/>
</kw>
<msg timestamp="20230830 21:03:16.339" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230830 21:03:16.305" endtime="20230830 21:03:16.340"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 21:03:16.341" endtime="20230830 21:03:16.341"/>
</kw>
<status status="NOT RUN" starttime="20230830 21:03:16.340" endtime="20230830 21:03:16.341"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:03:16.341" endtime="20230830 21:03:16.341"/>
</kw>
<status status="PASS" starttime="20230830 21:03:16.341" endtime="20230830 21:03:16.342"/>
</branch>
<status status="PASS" starttime="20230830 21:03:16.340" endtime="20230830 21:03:16.342"/>
</if>
<status status="PASS" starttime="20230830 21:03:16.305" endtime="20230830 21:03:16.342"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 21:03:16.342" endtime="20230830 21:03:16.343"/>
</kw>
<status status="PASS" starttime="20230830 21:03:16.342" endtime="20230830 21:03:16.343"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:03:16.348" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:03:16.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:03:16.388" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230830 21:03:16.345" endtime="20230830 21:03:16.388"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:03:16.390" level="INFO">200</msg>
<status status="PASS" starttime="20230830 21:03:16.389" endtime="20230830 21:03:16.390"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:03:16.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:03:16.390" endtime="20230830 21:03:16.391"/>
</kw>
<status status="PASS" starttime="20230830 21:03:16.345" endtime="20230830 21:03:16.392"/>
</kw>
<msg timestamp="20230830 21:03:16.392" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:03:16.344" endtime="20230830 21:03:16.392"/>
</kw>
<msg timestamp="20230830 21:03:16.393" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230830 21:03:16.344" endtime="20230830 21:03:16.393"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 21:03:16.394" endtime="20230830 21:03:16.394"/>
</kw>
<status status="NOT RUN" starttime="20230830 21:03:16.393" endtime="20230830 21:03:16.394"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:03:16.394" endtime="20230830 21:03:16.395"/>
</kw>
<status status="PASS" starttime="20230830 21:03:16.394" endtime="20230830 21:03:16.395"/>
</branch>
<status status="PASS" starttime="20230830 21:03:16.393" endtime="20230830 21:03:16.396"/>
</if>
<status status="PASS" starttime="20230830 21:03:16.343" endtime="20230830 21:03:16.396"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 21:03:16.291" endtime="20230830 21:03:16.396"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20230830 21:02:43.568" endtime="20230830 21:03:16.398"/>
</suite>
<suite id="s1-s3-s2" name="Recon-Nssummary" source="/opt/hadoop/smoketest/recon/recon-nssummary.robot">
<test id="s1-s3-s2-t1" name="Check volume creation" line="99">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:03:16.420" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:03:16.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:03:16.424" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230830 21:03:16.417" endtime="20230830 21:03:16.425"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:03:16.426" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230830 21:03:16.425" endtime="20230830 21:03:16.426"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:03:16.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:03:16.426" endtime="20230830 21:03:16.427"/>
</kw>
<status status="PASS" starttime="20230830 21:03:16.417" endtime="20230830 21:03:16.427"/>
</kw>
<msg timestamp="20230830 21:03:16.427" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:03:16.416" endtime="20230830 21:03:16.427"/>
</kw>
<status status="PASS" starttime="20230830 21:03:16.416" endtime="20230830 21:03:16.427"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 21:03:16.428" endtime="20230830 21:03:16.429"/>
</kw>
<status status="PASS" starttime="20230830 21:03:16.427" endtime="20230830 21:03:16.429"/>
</kw>
<kw name="Create volume">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230830 21:03:16.431" level="INFO">${random} = mffhe</msg>
<status status="PASS" starttime="20230830 21:03:16.430" endtime="20230830 21:03:16.431"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${VOLUME}</arg>
<arg>vol-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230830 21:03:16.431" level="INFO">${VOLUME} = vol-mffhe</msg>
<status status="PASS" starttime="20230830 21:03:16.431" endtime="20230830 21:03:16.432"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:03:16.437" level="INFO">Running command 'ozone sh volume create /vol-mffhe 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:03:22.497" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:03:22.497" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230830 21:03:16.434" endtime="20230830 21:03:22.497"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:03:22.499" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230830 21:03:22.498" endtime="20230830 21:03:22.499"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:03:22.499" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:03:22.499" endtime="20230830 21:03:22.500"/>
</kw>
<status status="PASS" starttime="20230830 21:03:16.433" endtime="20230830 21:03:22.500"/>
</kw>
<msg timestamp="20230830 21:03:22.500" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:03:16.433" endtime="20230830 21:03:22.500"/>
</kw>
<msg timestamp="20230830 21:03:22.500" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230830 21:03:16.432" endtime="20230830 21:03:22.501"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:03:22.501" endtime="20230830 21:03:22.502"/>
</kw>
<status status="PASS" starttime="20230830 21:03:16.429" endtime="20230830 21:03:22.502"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 21:03:16.415" endtime="20230830 21:03:22.502"/>
</test>
<test id="s1-s3-s2-t2" name="Check bucket creation" line="104">
<kw name="Create bucket">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230830 21:03:22.506" level="INFO">${random} = ytwfc</msg>
<status status="PASS" starttime="20230830 21:03:22.505" endtime="20230830 21:03:22.506"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>buc-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230830 21:03:22.507" level="INFO">${BUCKET} = buc-ytwfc</msg>
<status status="PASS" starttime="20230830 21:03:22.506" endtime="20230830 21:03:22.507"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create -l ${BUCKET_LAYOUT} /${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:03:22.512" level="INFO">Running command 'ozone sh bucket create -l FILE_SYSTEM_OPTIMIZED /vol-mffhe/buc-ytwfc 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:03:27.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:03:27.394" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230830 21:03:22.509" endtime="20230830 21:03:27.394"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:03:27.395" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230830 21:03:27.395" endtime="20230830 21:03:27.395"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:03:27.396" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:03:27.396" endtime="20230830 21:03:27.396"/>
</kw>
<status status="PASS" starttime="20230830 21:03:22.508" endtime="20230830 21:03:27.397"/>
</kw>
<msg timestamp="20230830 21:03:27.397" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:03:22.508" endtime="20230830 21:03:27.397"/>
</kw>
<msg timestamp="20230830 21:03:27.397" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230830 21:03:22.507" endtime="20230830 21:03:27.397"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:03:27.397" endtime="20230830 21:03:27.398"/>
</kw>
<status status="PASS" starttime="20230830 21:03:22.505" endtime="20230830 21:03:27.398"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 21:03:22.504" endtime="20230830 21:03:27.398"/>
</test>
<test id="s1-s3-s2-t3" name="Check keys creation" line="107">
<kw name="Create keys">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/file1 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:03:27.403" level="INFO">Running command 'ozone sh key put /vol-mffhe/buc-ytwfc/file1 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:03:35.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:03:35.867" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230830 21:03:27.401" endtime="20230830 21:03:35.867"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:03:35.868" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230830 21:03:35.867" endtime="20230830 21:03:35.869"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:03:35.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:03:35.869" endtime="20230830 21:03:35.869"/>
</kw>
<status status="PASS" starttime="20230830 21:03:27.400" endtime="20230830 21:03:35.869"/>
</kw>
<msg timestamp="20230830 21:03:35.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:03:27.400" endtime="20230830 21:03:35.870"/>
</kw>
<msg timestamp="20230830 21:03:35.870" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230830 21:03:27.399" endtime="20230830 21:03:35.870"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:03:35.870" endtime="20230830 21:03:35.871"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/dir1/dir2/file2 HISTORY.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:03:35.874" level="INFO">Running command 'ozone sh key put /vol-mffhe/buc-ytwfc/dir1/dir2/file2 HISTORY.md 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:03:43.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:03:43.938" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230830 21:03:35.872" endtime="20230830 21:03:43.938"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:03:43.940" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230830 21:03:43.939" endtime="20230830 21:03:43.940"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:03:43.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:03:43.941" endtime="20230830 21:03:43.943"/>
</kw>
<status status="PASS" starttime="20230830 21:03:35.872" endtime="20230830 21:03:43.943"/>
</kw>
<msg timestamp="20230830 21:03:43.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:03:35.871" endtime="20230830 21:03:43.943"/>
</kw>
<msg timestamp="20230830 21:03:43.943" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230830 21:03:35.871" endtime="20230830 21:03:43.944"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:03:43.944" endtime="20230830 21:03:43.944"/>
</kw>
<status status="PASS" starttime="20230830 21:03:27.399" endtime="20230830 21:03:43.944"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 21:03:27.398" endtime="20230830 21:03:43.945"/>
</test>
<test id="s1-s3-s2-t4" name="Check Summary api access" line="110">
<kw name="Check Access">
<arg>${SUMMARY_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:03:43.953" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:03:43.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:03:43.958" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230830 21:03:43.950" endtime="20230830 21:03:43.958"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:03:43.959" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230830 21:03:43.958" endtime="20230830 21:03:43.960"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:03:43.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:03:43.960" endtime="20230830 21:03:43.961"/>
</kw>
<status status="PASS" starttime="20230830 21:03:43.949" endtime="20230830 21:03:43.961"/>
</kw>
<msg timestamp="20230830 21:03:43.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:03:43.949" endtime="20230830 21:03:43.961"/>
</kw>
<status status="PASS" starttime="20230830 21:03:43.948" endtime="20230830 21:03:43.961"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:03:43.968" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:03:44.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:03:44.032" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230830 21:03:43.964" endtime="20230830 21:03:44.032"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:03:44.034" level="INFO">200</msg>
<status status="PASS" starttime="20230830 21:03:44.033" endtime="20230830 21:03:44.034"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:03:44.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:03:44.034" endtime="20230830 21:03:44.036"/>
</kw>
<status status="PASS" starttime="20230830 21:03:43.963" endtime="20230830 21:03:44.036"/>
</kw>
<msg timestamp="20230830 21:03:44.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:03:43.963" endtime="20230830 21:03:44.037"/>
</kw>
<msg timestamp="20230830 21:03:44.037" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230830 21:03:43.962" endtime="20230830 21:03:44.037"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 21:03:44.038" endtime="20230830 21:03:44.038"/>
</kw>
<status status="NOT RUN" starttime="20230830 21:03:44.037" endtime="20230830 21:03:44.038"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:03:44.038" endtime="20230830 21:03:44.040"/>
</kw>
<status status="PASS" starttime="20230830 21:03:44.038" endtime="20230830 21:03:44.040"/>
</branch>
<status status="PASS" starttime="20230830 21:03:44.037" endtime="20230830 21:03:44.040"/>
</if>
<status status="PASS" starttime="20230830 21:03:43.961" endtime="20230830 21:03:44.040"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 21:03:44.041" endtime="20230830 21:03:44.041"/>
</kw>
<status status="PASS" starttime="20230830 21:03:44.040" endtime="20230830 21:03:44.041"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:03:44.046" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:03:44.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:03:44.064" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230830 21:03:44.043" endtime="20230830 21:03:44.064"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:03:44.066" level="INFO">200</msg>
<status status="PASS" starttime="20230830 21:03:44.065" endtime="20230830 21:03:44.066"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:03:44.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:03:44.066" endtime="20230830 21:03:44.067"/>
</kw>
<status status="PASS" starttime="20230830 21:03:44.043" endtime="20230830 21:03:44.067"/>
</kw>
<msg timestamp="20230830 21:03:44.068" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:03:44.042" endtime="20230830 21:03:44.068"/>
</kw>
<msg timestamp="20230830 21:03:44.068" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230830 21:03:44.042" endtime="20230830 21:03:44.068"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 21:03:44.069" endtime="20230830 21:03:44.070"/>
</kw>
<status status="NOT RUN" starttime="20230830 21:03:44.069" endtime="20230830 21:03:44.070"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:03:44.070" endtime="20230830 21:03:44.071"/>
</kw>
<status status="PASS" starttime="20230830 21:03:44.070" endtime="20230830 21:03:44.071"/>
</branch>
<status status="PASS" starttime="20230830 21:03:44.068" endtime="20230830 21:03:44.071"/>
</if>
<status status="PASS" starttime="20230830 21:03:44.041" endtime="20230830 21:03:44.071"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 21:03:44.072" endtime="20230830 21:03:44.072"/>
</kw>
<status status="PASS" starttime="20230830 21:03:44.071" endtime="20230830 21:03:44.073"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:03:44.078" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:03:44.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:03:44.103" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230830 21:03:44.075" endtime="20230830 21:03:44.103"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:03:44.104" level="INFO">200</msg>
<status status="PASS" starttime="20230830 21:03:44.104" endtime="20230830 21:03:44.105"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:03:44.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:03:44.105" endtime="20230830 21:03:44.106"/>
</kw>
<status status="PASS" starttime="20230830 21:03:44.074" endtime="20230830 21:03:44.106"/>
</kw>
<msg timestamp="20230830 21:03:44.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:03:44.074" endtime="20230830 21:03:44.106"/>
</kw>
<msg timestamp="20230830 21:03:44.106" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230830 21:03:44.073" endtime="20230830 21:03:44.106"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 21:03:44.107" endtime="20230830 21:03:44.107"/>
</kw>
<status status="NOT RUN" starttime="20230830 21:03:44.107" endtime="20230830 21:03:44.107"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:03:44.108" endtime="20230830 21:03:44.108"/>
</kw>
<status status="PASS" starttime="20230830 21:03:44.107" endtime="20230830 21:03:44.108"/>
</branch>
<status status="PASS" starttime="20230830 21:03:44.107" endtime="20230830 21:03:44.108"/>
</if>
<status status="PASS" starttime="20230830 21:03:44.073" endtime="20230830 21:03:44.108"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 21:03:44.110" endtime="20230830 21:03:44.110"/>
</kw>
<status status="PASS" starttime="20230830 21:03:44.109" endtime="20230830 21:03:44.110"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:03:44.128" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:03:44.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:03:44.146" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230830 21:03:44.112" endtime="20230830 21:03:44.146"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:03:44.147" level="INFO">200</msg>
<status status="PASS" starttime="20230830 21:03:44.147" endtime="20230830 21:03:44.148"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:03:44.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:03:44.148" endtime="20230830 21:03:44.149"/>
</kw>
<status status="PASS" starttime="20230830 21:03:44.112" endtime="20230830 21:03:44.149"/>
</kw>
<msg timestamp="20230830 21:03:44.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:03:44.111" endtime="20230830 21:03:44.149"/>
</kw>
<msg timestamp="20230830 21:03:44.150" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230830 21:03:44.111" endtime="20230830 21:03:44.150"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 21:03:44.151" endtime="20230830 21:03:44.151"/>
</kw>
<status status="NOT RUN" starttime="20230830 21:03:44.150" endtime="20230830 21:03:44.151"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:03:44.151" endtime="20230830 21:03:44.151"/>
</kw>
<status status="PASS" starttime="20230830 21:03:44.151" endtime="20230830 21:03:44.152"/>
</branch>
<status status="PASS" starttime="20230830 21:03:44.150" endtime="20230830 21:03:44.152"/>
</if>
<status status="PASS" starttime="20230830 21:03:44.110" endtime="20230830 21:03:44.152"/>
</kw>
<status status="PASS" starttime="20230830 21:03:43.947" endtime="20230830 21:03:44.152"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 21:03:43.946" endtime="20230830 21:03:44.152"/>
</test>
<test id="s1-s3-s2-t5" name="Check Disk Usage api access" line="113">
<kw name="Check Access">
<arg>${DISK_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:03:44.159" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:03:44.163" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:03:44.163" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230830 21:03:44.157" endtime="20230830 21:03:44.163"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:03:44.164" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230830 21:03:44.164" endtime="20230830 21:03:44.165"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:03:44.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:03:44.165" endtime="20230830 21:03:44.165"/>
</kw>
<status status="PASS" starttime="20230830 21:03:44.156" endtime="20230830 21:03:44.166"/>
</kw>
<msg timestamp="20230830 21:03:44.166" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:03:44.155" endtime="20230830 21:03:44.166"/>
</kw>
<status status="PASS" starttime="20230830 21:03:44.155" endtime="20230830 21:03:44.166"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:03:44.171" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:03:44.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:03:44.195" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230830 21:03:44.168" endtime="20230830 21:03:44.195"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:03:44.196" level="INFO">200</msg>
<status status="PASS" starttime="20230830 21:03:44.195" endtime="20230830 21:03:44.196"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:03:44.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:03:44.196" endtime="20230830 21:03:44.198"/>
</kw>
<status status="PASS" starttime="20230830 21:03:44.168" endtime="20230830 21:03:44.198"/>
</kw>
<msg timestamp="20230830 21:03:44.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:03:44.168" endtime="20230830 21:03:44.198"/>
</kw>
<msg timestamp="20230830 21:03:44.198" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230830 21:03:44.167" endtime="20230830 21:03:44.198"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 21:03:44.199" endtime="20230830 21:03:44.199"/>
</kw>
<status status="NOT RUN" starttime="20230830 21:03:44.199" endtime="20230830 21:03:44.199"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:03:44.200" endtime="20230830 21:03:44.201"/>
</kw>
<status status="PASS" starttime="20230830 21:03:44.199" endtime="20230830 21:03:44.201"/>
</branch>
<status status="PASS" starttime="20230830 21:03:44.199" endtime="20230830 21:03:44.201"/>
</if>
<status status="PASS" starttime="20230830 21:03:44.166" endtime="20230830 21:03:44.201"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 21:03:44.202" endtime="20230830 21:03:44.202"/>
</kw>
<status status="PASS" starttime="20230830 21:03:44.201" endtime="20230830 21:03:44.202"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:03:44.208" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:03:44.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:03:44.227" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230830 21:03:44.205" endtime="20230830 21:03:44.227"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:03:44.229" level="INFO">200</msg>
<status status="PASS" starttime="20230830 21:03:44.228" endtime="20230830 21:03:44.229"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:03:44.230" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:03:44.229" endtime="20230830 21:03:44.230"/>
</kw>
<status status="PASS" starttime="20230830 21:03:44.204" endtime="20230830 21:03:44.230"/>
</kw>
<msg timestamp="20230830 21:03:44.230" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:03:44.204" endtime="20230830 21:03:44.230"/>
</kw>
<msg timestamp="20230830 21:03:44.231" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230830 21:03:44.203" endtime="20230830 21:03:44.231"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 21:03:44.231" endtime="20230830 21:03:44.231"/>
</kw>
<status status="NOT RUN" starttime="20230830 21:03:44.231" endtime="20230830 21:03:44.231"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:03:44.232" endtime="20230830 21:03:44.232"/>
</kw>
<status status="PASS" starttime="20230830 21:03:44.231" endtime="20230830 21:03:44.232"/>
</branch>
<status status="PASS" starttime="20230830 21:03:44.231" endtime="20230830 21:03:44.232"/>
</if>
<status status="PASS" starttime="20230830 21:03:44.202" endtime="20230830 21:03:44.232"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 21:03:44.233" endtime="20230830 21:03:44.233"/>
</kw>
<status status="PASS" starttime="20230830 21:03:44.232" endtime="20230830 21:03:44.233"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:03:44.240" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:03:44.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:03:44.259" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230830 21:03:44.236" endtime="20230830 21:03:44.259"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:03:44.261" level="INFO">200</msg>
<status status="PASS" starttime="20230830 21:03:44.260" endtime="20230830 21:03:44.261"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:03:44.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:03:44.262" endtime="20230830 21:03:44.262"/>
</kw>
<status status="PASS" starttime="20230830 21:03:44.235" endtime="20230830 21:03:44.263"/>
</kw>
<msg timestamp="20230830 21:03:44.263" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:03:44.235" endtime="20230830 21:03:44.263"/>
</kw>
<msg timestamp="20230830 21:03:44.263" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230830 21:03:44.234" endtime="20230830 21:03:44.263"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 21:03:44.264" endtime="20230830 21:03:44.264"/>
</kw>
<status status="NOT RUN" starttime="20230830 21:03:44.263" endtime="20230830 21:03:44.264"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:03:44.265" endtime="20230830 21:03:44.265"/>
</kw>
<status status="PASS" starttime="20230830 21:03:44.264" endtime="20230830 21:03:44.265"/>
</branch>
<status status="PASS" starttime="20230830 21:03:44.263" endtime="20230830 21:03:44.265"/>
</if>
<status status="PASS" starttime="20230830 21:03:44.234" endtime="20230830 21:03:44.265"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 21:03:44.266" endtime="20230830 21:03:44.267"/>
</kw>
<status status="PASS" starttime="20230830 21:03:44.266" endtime="20230830 21:03:44.267"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:03:44.273" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:03:44.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:03:44.296" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230830 21:03:44.270" endtime="20230830 21:03:44.296"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:03:44.297" level="INFO">200</msg>
<status status="PASS" starttime="20230830 21:03:44.297" endtime="20230830 21:03:44.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:03:44.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:03:44.298" endtime="20230830 21:03:44.298"/>
</kw>
<status status="PASS" starttime="20230830 21:03:44.269" endtime="20230830 21:03:44.299"/>
</kw>
<msg timestamp="20230830 21:03:44.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:03:44.269" endtime="20230830 21:03:44.299"/>
</kw>
<msg timestamp="20230830 21:03:44.299" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230830 21:03:44.268" endtime="20230830 21:03:44.299"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 21:03:44.300" endtime="20230830 21:03:44.300"/>
</kw>
<status status="NOT RUN" starttime="20230830 21:03:44.299" endtime="20230830 21:03:44.300"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:03:44.300" endtime="20230830 21:03:44.301"/>
</kw>
<status status="PASS" starttime="20230830 21:03:44.300" endtime="20230830 21:03:44.301"/>
</branch>
<status status="PASS" starttime="20230830 21:03:44.299" endtime="20230830 21:03:44.301"/>
</if>
<status status="PASS" starttime="20230830 21:03:44.267" endtime="20230830 21:03:44.301"/>
</kw>
<status status="PASS" starttime="20230830 21:03:44.154" endtime="20230830 21:03:44.301"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 21:03:44.154" endtime="20230830 21:03:44.303"/>
</test>
<test id="s1-s3-s2-t6" name="Check Quota Usage api access" line="116">
<kw name="Check Access">
<arg>${QUOTA_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:03:44.310" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:03:44.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:03:44.314" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230830 21:03:44.307" endtime="20230830 21:03:44.314"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:03:44.315" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230830 21:03:44.314" endtime="20230830 21:03:44.315"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:03:44.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:03:44.315" endtime="20230830 21:03:44.316"/>
</kw>
<status status="PASS" starttime="20230830 21:03:44.307" endtime="20230830 21:03:44.316"/>
</kw>
<msg timestamp="20230830 21:03:44.316" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:03:44.306" endtime="20230830 21:03:44.316"/>
</kw>
<status status="PASS" starttime="20230830 21:03:44.306" endtime="20230830 21:03:44.316"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:03:44.320" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:03:44.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:03:44.352" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230830 21:03:44.319" endtime="20230830 21:03:44.352"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:03:44.353" level="INFO">200</msg>
<status status="PASS" starttime="20230830 21:03:44.353" endtime="20230830 21:03:44.353"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:03:44.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:03:44.354" endtime="20230830 21:03:44.354"/>
</kw>
<status status="PASS" starttime="20230830 21:03:44.318" endtime="20230830 21:03:44.354"/>
</kw>
<msg timestamp="20230830 21:03:44.355" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:03:44.318" endtime="20230830 21:03:44.355"/>
</kw>
<msg timestamp="20230830 21:03:44.355" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230830 21:03:44.317" endtime="20230830 21:03:44.355"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 21:03:44.356" endtime="20230830 21:03:44.356"/>
</kw>
<status status="NOT RUN" starttime="20230830 21:03:44.355" endtime="20230830 21:03:44.356"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:03:44.356" endtime="20230830 21:03:44.357"/>
</kw>
<status status="PASS" starttime="20230830 21:03:44.356" endtime="20230830 21:03:44.357"/>
</branch>
<status status="PASS" starttime="20230830 21:03:44.355" endtime="20230830 21:03:44.357"/>
</if>
<status status="PASS" starttime="20230830 21:03:44.317" endtime="20230830 21:03:44.357"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 21:03:44.358" endtime="20230830 21:03:44.359"/>
</kw>
<status status="PASS" starttime="20230830 21:03:44.357" endtime="20230830 21:03:44.359"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:03:44.364" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:03:44.381" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:03:44.381" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230830 21:03:44.361" endtime="20230830 21:03:44.381"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:03:44.382" level="INFO">200</msg>
<status status="PASS" starttime="20230830 21:03:44.382" endtime="20230830 21:03:44.383"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:03:44.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:03:44.383" endtime="20230830 21:03:44.383"/>
</kw>
<status status="PASS" starttime="20230830 21:03:44.360" endtime="20230830 21:03:44.384"/>
</kw>
<msg timestamp="20230830 21:03:44.384" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:03:44.360" endtime="20230830 21:03:44.384"/>
</kw>
<msg timestamp="20230830 21:03:44.384" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230830 21:03:44.359" endtime="20230830 21:03:44.384"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 21:03:44.385" endtime="20230830 21:03:44.385"/>
</kw>
<status status="NOT RUN" starttime="20230830 21:03:44.384" endtime="20230830 21:03:44.385"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:03:44.385" endtime="20230830 21:03:44.385"/>
</kw>
<status status="PASS" starttime="20230830 21:03:44.385" endtime="20230830 21:03:44.386"/>
</branch>
<status status="PASS" starttime="20230830 21:03:44.384" endtime="20230830 21:03:44.386"/>
</if>
<status status="PASS" starttime="20230830 21:03:44.359" endtime="20230830 21:03:44.386"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 21:03:44.386" endtime="20230830 21:03:44.387"/>
</kw>
<status status="PASS" starttime="20230830 21:03:44.386" endtime="20230830 21:03:44.387"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:03:44.393" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:03:44.421" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:03:44.421" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230830 21:03:44.389" endtime="20230830 21:03:44.421"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:03:44.422" level="INFO">200</msg>
<status status="PASS" starttime="20230830 21:03:44.421" endtime="20230830 21:03:44.422"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:03:44.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:03:44.422" endtime="20230830 21:03:44.423"/>
</kw>
<status status="PASS" starttime="20230830 21:03:44.389" endtime="20230830 21:03:44.423"/>
</kw>
<msg timestamp="20230830 21:03:44.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:03:44.389" endtime="20230830 21:03:44.423"/>
</kw>
<msg timestamp="20230830 21:03:44.424" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230830 21:03:44.388" endtime="20230830 21:03:44.424"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 21:03:44.425" endtime="20230830 21:03:44.425"/>
</kw>
<status status="NOT RUN" starttime="20230830 21:03:44.424" endtime="20230830 21:03:44.425"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:03:44.425" endtime="20230830 21:03:44.426"/>
</kw>
<status status="PASS" starttime="20230830 21:03:44.425" endtime="20230830 21:03:44.426"/>
</branch>
<status status="PASS" starttime="20230830 21:03:44.424" endtime="20230830 21:03:44.426"/>
</if>
<status status="PASS" starttime="20230830 21:03:44.387" endtime="20230830 21:03:44.426"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 21:03:44.427" endtime="20230830 21:03:44.427"/>
</kw>
<status status="PASS" starttime="20230830 21:03:44.426" endtime="20230830 21:03:44.427"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:03:44.432" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:03:44.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:03:44.456" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230830 21:03:44.430" endtime="20230830 21:03:44.456"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:03:44.457" level="INFO">200</msg>
<status status="PASS" starttime="20230830 21:03:44.456" endtime="20230830 21:03:44.457"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:03:44.458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:03:44.457" endtime="20230830 21:03:44.458"/>
</kw>
<status status="PASS" starttime="20230830 21:03:44.429" endtime="20230830 21:03:44.458"/>
</kw>
<msg timestamp="20230830 21:03:44.458" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:03:44.429" endtime="20230830 21:03:44.458"/>
</kw>
<msg timestamp="20230830 21:03:44.459" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230830 21:03:44.428" endtime="20230830 21:03:44.459"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 21:03:44.460" endtime="20230830 21:03:44.460"/>
</kw>
<status status="NOT RUN" starttime="20230830 21:03:44.460" endtime="20230830 21:03:44.460"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:03:44.461" endtime="20230830 21:03:44.461"/>
</kw>
<status status="PASS" starttime="20230830 21:03:44.460" endtime="20230830 21:03:44.461"/>
</branch>
<status status="PASS" starttime="20230830 21:03:44.460" endtime="20230830 21:03:44.461"/>
</if>
<status status="PASS" starttime="20230830 21:03:44.427" endtime="20230830 21:03:44.461"/>
</kw>
<status status="PASS" starttime="20230830 21:03:44.305" endtime="20230830 21:03:44.461"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 21:03:44.304" endtime="20230830 21:03:44.462"/>
</test>
<test id="s1-s3-s2-t7" name="Check File Size Distribution api access" line="119">
<kw name="Check Access">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:03:44.471" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:03:44.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:03:44.476" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230830 21:03:44.468" endtime="20230830 21:03:44.476"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:03:44.477" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230830 21:03:44.476" endtime="20230830 21:03:44.477"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:03:44.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:03:44.477" endtime="20230830 21:03:44.478"/>
</kw>
<status status="PASS" starttime="20230830 21:03:44.467" endtime="20230830 21:03:44.478"/>
</kw>
<msg timestamp="20230830 21:03:44.478" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:03:44.467" endtime="20230830 21:03:44.479"/>
</kw>
<status status="PASS" starttime="20230830 21:03:44.466" endtime="20230830 21:03:44.479"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:03:44.484" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:03:44.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:03:44.513" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230830 21:03:44.482" endtime="20230830 21:03:44.513"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:03:44.514" level="INFO">200</msg>
<status status="PASS" starttime="20230830 21:03:44.513" endtime="20230830 21:03:44.514"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:03:44.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:03:44.515" endtime="20230830 21:03:44.515"/>
</kw>
<status status="PASS" starttime="20230830 21:03:44.481" endtime="20230830 21:03:44.515"/>
</kw>
<msg timestamp="20230830 21:03:44.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:03:44.481" endtime="20230830 21:03:44.515"/>
</kw>
<msg timestamp="20230830 21:03:44.516" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230830 21:03:44.480" endtime="20230830 21:03:44.516"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 21:03:44.516" endtime="20230830 21:03:44.517"/>
</kw>
<status status="NOT RUN" starttime="20230830 21:03:44.516" endtime="20230830 21:03:44.517"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:03:44.517" endtime="20230830 21:03:44.518"/>
</kw>
<status status="PASS" starttime="20230830 21:03:44.517" endtime="20230830 21:03:44.518"/>
</branch>
<status status="PASS" starttime="20230830 21:03:44.516" endtime="20230830 21:03:44.518"/>
</if>
<status status="PASS" starttime="20230830 21:03:44.479" endtime="20230830 21:03:44.518"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 21:03:44.520" endtime="20230830 21:03:44.520"/>
</kw>
<status status="PASS" starttime="20230830 21:03:44.518" endtime="20230830 21:03:44.521"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:03:44.525" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:03:44.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:03:44.546" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230830 21:03:44.523" endtime="20230830 21:03:44.546"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:03:44.548" level="INFO">200</msg>
<status status="PASS" starttime="20230830 21:03:44.547" endtime="20230830 21:03:44.548"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:03:44.549" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:03:44.549" endtime="20230830 21:03:44.550"/>
</kw>
<status status="PASS" starttime="20230830 21:03:44.522" endtime="20230830 21:03:44.550"/>
</kw>
<msg timestamp="20230830 21:03:44.550" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:03:44.522" endtime="20230830 21:03:44.551"/>
</kw>
<msg timestamp="20230830 21:03:44.551" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230830 21:03:44.521" endtime="20230830 21:03:44.551"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 21:03:44.552" endtime="20230830 21:03:44.552"/>
</kw>
<status status="NOT RUN" starttime="20230830 21:03:44.551" endtime="20230830 21:03:44.552"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:03:44.552" endtime="20230830 21:03:44.552"/>
</kw>
<status status="PASS" starttime="20230830 21:03:44.552" endtime="20230830 21:03:44.552"/>
</branch>
<status status="PASS" starttime="20230830 21:03:44.551" endtime="20230830 21:03:44.553"/>
</if>
<status status="PASS" starttime="20230830 21:03:44.521" endtime="20230830 21:03:44.553"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 21:03:44.553" endtime="20230830 21:03:44.554"/>
</kw>
<status status="PASS" starttime="20230830 21:03:44.553" endtime="20230830 21:03:44.554"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:03:44.559" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:03:44.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:03:44.581" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230830 21:03:44.557" endtime="20230830 21:03:44.581"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:03:44.582" level="INFO">200</msg>
<status status="PASS" starttime="20230830 21:03:44.581" endtime="20230830 21:03:44.582"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:03:44.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:03:44.582" endtime="20230830 21:03:44.583"/>
</kw>
<status status="PASS" starttime="20230830 21:03:44.556" endtime="20230830 21:03:44.584"/>
</kw>
<msg timestamp="20230830 21:03:44.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:03:44.556" endtime="20230830 21:03:44.584"/>
</kw>
<msg timestamp="20230830 21:03:44.584" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230830 21:03:44.555" endtime="20230830 21:03:44.584"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 21:03:44.585" endtime="20230830 21:03:44.585"/>
</kw>
<status status="NOT RUN" starttime="20230830 21:03:44.584" endtime="20230830 21:03:44.585"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:03:44.585" endtime="20230830 21:03:44.586"/>
</kw>
<status status="PASS" starttime="20230830 21:03:44.585" endtime="20230830 21:03:44.586"/>
</branch>
<status status="PASS" starttime="20230830 21:03:44.584" endtime="20230830 21:03:44.586"/>
</if>
<status status="PASS" starttime="20230830 21:03:44.554" endtime="20230830 21:03:44.586"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 21:03:44.587" endtime="20230830 21:03:44.587"/>
</kw>
<status status="PASS" starttime="20230830 21:03:44.586" endtime="20230830 21:03:44.588"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:03:44.594" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:03:44.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:03:44.609" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230830 21:03:44.591" endtime="20230830 21:03:44.609"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:03:44.610" level="INFO">200</msg>
<status status="PASS" starttime="20230830 21:03:44.610" endtime="20230830 21:03:44.611"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:03:44.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:03:44.611" endtime="20230830 21:03:44.612"/>
</kw>
<status status="PASS" starttime="20230830 21:03:44.590" endtime="20230830 21:03:44.612"/>
</kw>
<msg timestamp="20230830 21:03:44.613" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:03:44.589" endtime="20230830 21:03:44.613"/>
</kw>
<msg timestamp="20230830 21:03:44.613" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230830 21:03:44.588" endtime="20230830 21:03:44.613"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 21:03:44.614" endtime="20230830 21:03:44.614"/>
</kw>
<status status="NOT RUN" starttime="20230830 21:03:44.613" endtime="20230830 21:03:44.614"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:03:44.614" endtime="20230830 21:03:44.614"/>
</kw>
<status status="PASS" starttime="20230830 21:03:44.614" endtime="20230830 21:03:44.614"/>
</branch>
<status status="PASS" starttime="20230830 21:03:44.613" endtime="20230830 21:03:44.615"/>
</if>
<status status="PASS" starttime="20230830 21:03:44.588" endtime="20230830 21:03:44.615"/>
</kw>
<status status="PASS" starttime="20230830 21:03:44.465" endtime="20230830 21:03:44.615"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 21:03:44.464" endtime="20230830 21:03:44.615"/>
</test>
<test id="s1-s3-s2-t8" name="Check Recon Namespace Summary Root" line="122">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/</arg>
<arg>ROOT</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:03:44.623" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:03:44.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:03:44.638" level="INFO">${output} = {"path":"","type":"ROOT","countStats":{"numVolume":3,"numBucket":2,"numDir":1,"numKey":1},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTim...</msg>
<status status="PASS" starttime="20230830 21:03:44.621" endtime="20230830 21:03:44.638"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:03:44.639" level="INFO">{"path":"","type":"ROOT","countStats":{"numVolume":3,"numBucket":2,"numDir":1,"numKey":1},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":0,"modificationTime":0,"acls":null},"status":"OK"}</msg>
<status status="PASS" starttime="20230830 21:03:44.639" endtime="20230830 21:03:44.640"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:03:44.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:03:44.640" endtime="20230830 21:03:44.641"/>
</kw>
<status status="PASS" starttime="20230830 21:03:44.621" endtime="20230830 21:03:44.641"/>
</kw>
<msg timestamp="20230830 21:03:44.641" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:03:44.620" endtime="20230830 21:03:44.641"/>
</kw>
<msg timestamp="20230830 21:03:44.642" level="INFO">${result} = {"path":"","type":"ROOT","countStats":{"numVolume":3,"numBucket":2,"numDir":1,"numKey":1},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTim...</msg>
<status status="PASS" starttime="20230830 21:03:44.619" endtime="20230830 21:03:44.642"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:03:44.642" endtime="20230830 21:03:44.642"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:03:44.642" endtime="20230830 21:03:44.643"/>
</kw>
<status status="PASS" starttime="20230830 21:03:44.619" endtime="20230830 21:03:44.643"/>
</kw>
<status status="PASS" starttime="20230830 21:03:44.618" endtime="20230830 21:03:44.643"/>
</kw>
<status status="PASS" starttime="20230830 21:03:44.618" endtime="20230830 21:03:44.643"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 21:03:44.617" endtime="20230830 21:03:44.644"/>
</test>
<test id="s1-s3-s2-t9" name="Check Recon Namespace Summary Volume" line="125">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}</arg>
<arg>VOLUME</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:03:44.651" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-mffhe 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:03:44.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:03:44.666" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230830 21:03:44.649" endtime="20230830 21:03:44.666"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:03:44.667" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230830 21:03:44.666" endtime="20230830 21:03:44.667"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:03:44.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:03:44.667" endtime="20230830 21:03:44.668"/>
</kw>
<status status="PASS" starttime="20230830 21:03:44.649" endtime="20230830 21:03:44.668"/>
</kw>
<msg timestamp="20230830 21:03:44.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:03:44.648" endtime="20230830 21:03:44.668"/>
</kw>
<msg timestamp="20230830 21:03:44.669" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230830 21:03:44.648" endtime="20230830 21:03:44.669"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230830 21:03:44.669" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230830 21:03:44.669" endtime="20230830 21:03:44.669"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 21:03:44.670" endtime="20230830 21:03:44.670"/>
</kw>
<status status="FAIL" starttime="20230830 21:03:44.647" endtime="20230830 21:03:44.670"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:03:54.676" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-mffhe 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:03:54.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:03:54.696" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230830 21:03:54.673" endtime="20230830 21:03:54.696"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:03:54.698" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230830 21:03:54.697" endtime="20230830 21:03:54.698"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:03:54.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:03:54.698" endtime="20230830 21:03:54.699"/>
</kw>
<status status="PASS" starttime="20230830 21:03:54.673" endtime="20230830 21:03:54.700"/>
</kw>
<msg timestamp="20230830 21:03:54.700" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:03:54.672" endtime="20230830 21:03:54.700"/>
</kw>
<msg timestamp="20230830 21:03:54.701" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230830 21:03:54.671" endtime="20230830 21:03:54.701"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230830 21:03:54.702" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230830 21:03:54.701" endtime="20230830 21:03:54.702"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 21:03:54.703" endtime="20230830 21:03:54.703"/>
</kw>
<status status="FAIL" starttime="20230830 21:03:54.670" endtime="20230830 21:03:54.703"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:04:04.708" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-mffhe 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:04:04.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:04:04.723" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230830 21:04:04.706" endtime="20230830 21:04:04.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:04:04.724" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230830 21:04:04.723" endtime="20230830 21:04:04.724"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:04:04.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:04:04.724" endtime="20230830 21:04:04.725"/>
</kw>
<status status="PASS" starttime="20230830 21:04:04.705" endtime="20230830 21:04:04.725"/>
</kw>
<msg timestamp="20230830 21:04:04.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:04:04.705" endtime="20230830 21:04:04.725"/>
</kw>
<msg timestamp="20230830 21:04:04.726" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230830 21:04:04.704" endtime="20230830 21:04:04.726"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230830 21:04:04.727" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230830 21:04:04.726" endtime="20230830 21:04:04.727"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 21:04:04.727" endtime="20230830 21:04:04.727"/>
</kw>
<status status="FAIL" starttime="20230830 21:04:04.704" endtime="20230830 21:04:04.727"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:04:14.733" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-mffhe 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:04:14.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:04:14.774" level="INFO">${output} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":0,"numKey":0},"objectInfo":{"metadata":{},"name":"vol-mffhe","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<status status="PASS" starttime="20230830 21:04:14.730" endtime="20230830 21:04:14.774"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:04:14.777" level="INFO">{"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":0,"numKey":0},"objectInfo":{"metadata":{},"name":"vol-mffhe","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"creationTime":1693429402183,"modificationTime":1693429402183,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}],"admin":"hadoop","owner":"hadoop","volume":"vol-mffhe"},"status":"OK"}</msg>
<status status="PASS" starttime="20230830 21:04:14.776" endtime="20230830 21:04:14.777"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:04:14.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:04:14.778" endtime="20230830 21:04:14.778"/>
</kw>
<status status="PASS" starttime="20230830 21:04:14.730" endtime="20230830 21:04:14.778"/>
</kw>
<msg timestamp="20230830 21:04:14.778" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:04:14.730" endtime="20230830 21:04:14.779"/>
</kw>
<msg timestamp="20230830 21:04:14.779" level="INFO">${result} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":0,"numKey":0},"objectInfo":{"metadata":{},"name":"vol-mffhe","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<status status="PASS" starttime="20230830 21:04:14.729" endtime="20230830 21:04:14.779"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:04:14.779" endtime="20230830 21:04:14.779"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:04:14.780" endtime="20230830 21:04:14.782"/>
</kw>
<status status="PASS" starttime="20230830 21:04:14.728" endtime="20230830 21:04:14.782"/>
</kw>
<status status="PASS" starttime="20230830 21:03:44.647" endtime="20230830 21:04:14.783"/>
</kw>
<status status="PASS" starttime="20230830 21:03:44.646" endtime="20230830 21:04:14.783"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 21:03:44.645" endtime="20230830 21:04:14.783"/>
</test>
<test id="s1-s3-s2-t10" name="Check Recon Namespace Summary Bucket" line="128">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>BUCKET</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:04:14.800" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-mffhe/buc-ytwfc 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:04:14.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:04:14.832" level="INFO">${output} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-ytwfc","quotaInBytes":-1,"quotaInNamespa...</msg>
<status status="PASS" starttime="20230830 21:04:14.794" endtime="20230830 21:04:14.833"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:04:14.834" level="INFO">{"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-ytwfc","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":4,"creationTime":1693429407093,"modificationTime":1693429407093,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}],"volumeName":"vol-mffhe","storageType":"DISK","versioning":false,"usedBytes":null,"encryptionInfo":null,"replicationConfigInfo":null,"sourceVolume":null,"sourceBucket":null,"bucketLayout":"FILE_SYSTEM_OPTIMIZED","owner":"hadoop"},"status":"OK"}</msg>
<status status="PASS" starttime="20230830 21:04:14.833" endtime="20230830 21:04:14.834"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:04:14.834" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:04:14.834" endtime="20230830 21:04:14.834"/>
</kw>
<status status="PASS" starttime="20230830 21:04:14.794" endtime="20230830 21:04:14.835"/>
</kw>
<msg timestamp="20230830 21:04:14.835" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:04:14.792" endtime="20230830 21:04:14.835"/>
</kw>
<msg timestamp="20230830 21:04:14.835" level="INFO">${result} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-ytwfc","quotaInBytes":-1,"quotaInNamespa...</msg>
<status status="PASS" starttime="20230830 21:04:14.791" endtime="20230830 21:04:14.835"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:04:14.835" endtime="20230830 21:04:14.836"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:04:14.836" endtime="20230830 21:04:14.837"/>
</kw>
<status status="PASS" starttime="20230830 21:04:14.791" endtime="20230830 21:04:14.837"/>
</kw>
<status status="PASS" starttime="20230830 21:04:14.788" endtime="20230830 21:04:14.837"/>
</kw>
<status status="PASS" starttime="20230830 21:04:14.787" endtime="20230830 21:04:14.837"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 21:04:14.786" endtime="20230830 21:04:14.837"/>
</test>
<test id="s1-s3-s2-t11" name="Check Recon Namespace Summary Key" line="131">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/file1</arg>
<arg>KEY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:04:14.845" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-mffhe/buc-ytwfc/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:04:14.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:04:14.899" level="INFO">${output} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace...</msg>
<status status="PASS" starttime="20230830 21:04:14.843" endtime="20230830 21:04:14.899"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:04:14.900" level="INFO">{"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":1693429412884,"modificationTime":1693429415197,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}],"volumeName":"vol-mffhe","bucketName":"buc-ytwfc","keyName":"file1","dataSize":4068,"keyLocationVersions":[{"version":0,"locationVersionMap":{"0":[{"blockID":{"containerBlockID":{"containerID":1,"localID":111677748019200012},"blockCommitSequenceId":18,"containerID":1,"localID":111677748019200012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":1,"localID":111677748019200012,"blockCommitSequenceId":18}]},"locationList":[{"blockID":{"containerBlockID":{"containerID":1,"localID":111677748019200012},"blockCommitSequenceId":18,"containerID":1,"localID":111677748019200012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":1,"localID":111677748019200012,"blockCommitSequenceId":18}],"multipartKey":false,"blocksLatestVersionOnly":[{"blockID":{"containerBlockID":{"containerID":1,"localID":111677748019200012},"blockCommitSequenceId":18,"containerID":1,"localID":111677748019200012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":1,"localID":111677748019200012,"blockCommitSequenceId":18}],"locationLists":[[{"blockID":{"containerBlockID":{"containerID":1,"localID":111677748019200012},"blockCommitSequenceId":18,"containerID":1,"localID":111677748019200012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":1,"localID":111677748019200012,"blockCommitSequenceId":18}]],"locationListCount":1}],"replicationConfig":{"replicationFactor":"THREE","requiredNodes":3,"replicationType":"RATIS"},"encInfo":null},"status":"OK"}</msg>
<status status="PASS" starttime="20230830 21:04:14.900" endtime="20230830 21:04:14.900"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:04:14.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:04:14.901" endtime="20230830 21:04:14.901"/>
</kw>
<status status="PASS" starttime="20230830 21:04:14.843" endtime="20230830 21:04:14.902"/>
</kw>
<msg timestamp="20230830 21:04:14.902" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:04:14.842" endtime="20230830 21:04:14.902"/>
</kw>
<msg timestamp="20230830 21:04:14.902" level="INFO">${result} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace...</msg>
<status status="PASS" starttime="20230830 21:04:14.842" endtime="20230830 21:04:14.902"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:04:14.902" endtime="20230830 21:04:14.903"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:04:14.903" endtime="20230830 21:04:14.903"/>
</kw>
<status status="PASS" starttime="20230830 21:04:14.841" endtime="20230830 21:04:14.903"/>
</kw>
<status status="PASS" starttime="20230830 21:04:14.840" endtime="20230830 21:04:14.904"/>
</kw>
<status status="PASS" starttime="20230830 21:04:14.840" endtime="20230830 21:04:14.904"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 21:04:14.839" endtime="20230830 21:04:14.904"/>
</test>
<test id="s1-s3-s2-t12" name="Check Recon Namespace Summary Directory" line="134">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'LEGACY'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2/</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 21:04:14.906" endtime="20230830 21:04:14.907"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'FILE_SYSTEM_OPTIMIZED'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:04:14.914" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-mffhe/buc-ytwfc/dir1/dir2 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:04:14.934" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:04:14.935" level="INFO">${output} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<status status="PASS" starttime="20230830 21:04:14.911" endtime="20230830 21:04:14.935"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:04:14.936" level="INFO">{"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":1693429421117,"modificationTime":1693429421117,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}]},"status":"OK"}</msg>
<status status="PASS" starttime="20230830 21:04:14.935" endtime="20230830 21:04:14.936"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:04:14.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:04:14.936" endtime="20230830 21:04:14.936"/>
</kw>
<status status="PASS" starttime="20230830 21:04:14.911" endtime="20230830 21:04:14.937"/>
</kw>
<msg timestamp="20230830 21:04:14.937" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:04:14.911" endtime="20230830 21:04:14.937"/>
</kw>
<msg timestamp="20230830 21:04:14.937" level="INFO">${result} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<status status="PASS" starttime="20230830 21:04:14.910" endtime="20230830 21:04:14.937"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:04:14.937" endtime="20230830 21:04:14.938"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:04:14.938" endtime="20230830 21:04:14.938"/>
</kw>
<status status="PASS" starttime="20230830 21:04:14.909" endtime="20230830 21:04:14.938"/>
</kw>
<status status="PASS" starttime="20230830 21:04:14.908" endtime="20230830 21:04:14.938"/>
</kw>
<status status="PASS" starttime="20230830 21:04:14.908" endtime="20230830 21:04:14.939"/>
</kw>
<status status="PASS" starttime="20230830 21:04:14.907" endtime="20230830 21:04:14.939"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 21:04:14.905" endtime="20230830 21:04:14.939"/>
</test>
<test id="s1-s3-s2-t13" name="Check Recon Namespace Disk Usage" line="138">
<kw name="Wait For Summary">
<arg>${DISK_USAGE_URL}?path=/${VOLUME}/${BUCKET}&amp;files=true&amp;replica=true</arg>
<arg>\"sizeWithReplica\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:04:14.947" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/du?path=/vol-mffhe/buc-ytwfc&amp;files=true&amp;replica=true 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:04:14.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:04:14.964" level="INFO">${output} = {"status":"OK","path":"/vol-mffhe/buc-ytwfc","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-mffhe/buc-ytwfc/dir1","size":6038,"sizeWithReplica":-1,"isKey":fal...</msg>
<status status="PASS" starttime="20230830 21:04:14.945" endtime="20230830 21:04:14.964"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:04:14.965" level="INFO">{"status":"OK","path":"/vol-mffhe/buc-ytwfc","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-mffhe/buc-ytwfc/dir1","size":6038,"sizeWithReplica":-1,"isKey":false}],"sizeDirectKey":4068}</msg>
<status status="PASS" starttime="20230830 21:04:14.964" endtime="20230830 21:04:14.965"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:04:14.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:04:14.965" endtime="20230830 21:04:14.965"/>
</kw>
<status status="PASS" starttime="20230830 21:04:14.944" endtime="20230830 21:04:14.966"/>
</kw>
<msg timestamp="20230830 21:04:14.966" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:04:14.944" endtime="20230830 21:04:14.966"/>
</kw>
<msg timestamp="20230830 21:04:14.966" level="INFO">${result} = {"status":"OK","path":"/vol-mffhe/buc-ytwfc","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-mffhe/buc-ytwfc/dir1","size":6038,"sizeWithReplica":-1,"isKey":fal...</msg>
<status status="PASS" starttime="20230830 21:04:14.943" endtime="20230830 21:04:14.966"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:04:14.966" endtime="20230830 21:04:14.967"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:04:14.967" endtime="20230830 21:04:14.968"/>
</kw>
<status status="PASS" starttime="20230830 21:04:14.943" endtime="20230830 21:04:14.968"/>
</kw>
<status status="PASS" starttime="20230830 21:04:14.942" endtime="20230830 21:04:14.968"/>
</kw>
<status status="PASS" starttime="20230830 21:04:14.941" endtime="20230830 21:04:14.968"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 21:04:14.940" endtime="20230830 21:04:14.968"/>
</test>
<test id="s1-s3-s2-t14" name="Check Recon Namespace Volume Quota Usage" line="141">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:04:14.976" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-mffhe 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:04:14.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:04:14.993" level="INFO">${output} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230830 21:04:14.974" endtime="20230830 21:04:14.994"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:04:14.995" level="INFO">{"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230830 21:04:14.994" endtime="20230830 21:04:14.995"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:04:14.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:04:14.995" endtime="20230830 21:04:14.998"/>
</kw>
<status status="PASS" starttime="20230830 21:04:14.973" endtime="20230830 21:04:14.998"/>
</kw>
<msg timestamp="20230830 21:04:14.999" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:04:14.973" endtime="20230830 21:04:14.999"/>
</kw>
<msg timestamp="20230830 21:04:14.999" level="INFO">${result} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230830 21:04:14.972" endtime="20230830 21:04:14.999"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:04:14.999" endtime="20230830 21:04:15.000"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:04:15.000" endtime="20230830 21:04:15.000"/>
</kw>
<status status="PASS" starttime="20230830 21:04:14.971" endtime="20230830 21:04:15.000"/>
</kw>
<status status="PASS" starttime="20230830 21:04:14.971" endtime="20230830 21:04:15.001"/>
</kw>
<status status="PASS" starttime="20230830 21:04:14.970" endtime="20230830 21:04:15.001"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 21:04:14.970" endtime="20230830 21:04:15.001"/>
</test>
<test id="s1-s3-s2-t15" name="Check Recon Namespace Bucket Quota Usage" line="144">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:04:15.010" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-mffhe/buc-ytwfc 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:04:15.026" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:04:15.026" level="INFO">${output} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230830 21:04:15.007" endtime="20230830 21:04:15.026"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:04:15.027" level="INFO">{"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230830 21:04:15.026" endtime="20230830 21:04:15.027"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:04:15.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:04:15.027" endtime="20230830 21:04:15.028"/>
</kw>
<status status="PASS" starttime="20230830 21:04:15.006" endtime="20230830 21:04:15.028"/>
</kw>
<msg timestamp="20230830 21:04:15.028" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:04:15.006" endtime="20230830 21:04:15.029"/>
</kw>
<msg timestamp="20230830 21:04:15.029" level="INFO">${result} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230830 21:04:15.005" endtime="20230830 21:04:15.029"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:04:15.029" endtime="20230830 21:04:15.030"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:04:15.030" endtime="20230830 21:04:15.030"/>
</kw>
<status status="PASS" starttime="20230830 21:04:15.005" endtime="20230830 21:04:15.031"/>
</kw>
<status status="PASS" starttime="20230830 21:04:15.004" endtime="20230830 21:04:15.031"/>
</kw>
<status status="PASS" starttime="20230830 21:04:15.003" endtime="20230830 21:04:15.031"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 21:04:15.002" endtime="20230830 21:04:15.031"/>
</test>
<test id="s1-s3-s2-t16" name="Check Recon Namespace File Size Distribution Root" line="147">
<kw name="Wait For Summary">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<arg>\"dist\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:04:15.042" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:04:15.057" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:04:15.058" level="INFO">${output} = {"dist":[0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20230830 21:04:15.039" endtime="20230830 21:04:15.058"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:04:15.059" level="INFO">{"dist":[0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20230830 21:04:15.058" endtime="20230830 21:04:15.059"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:04:15.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:04:15.060" endtime="20230830 21:04:15.060"/>
</kw>
<status status="PASS" starttime="20230830 21:04:15.038" endtime="20230830 21:04:15.061"/>
</kw>
<msg timestamp="20230830 21:04:15.061" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:04:15.037" endtime="20230830 21:04:15.061"/>
</kw>
<msg timestamp="20230830 21:04:15.061" level="INFO">${result} = {"dist":[0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20230830 21:04:15.037" endtime="20230830 21:04:15.061"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:04:15.061" endtime="20230830 21:04:15.062"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:04:15.062" endtime="20230830 21:04:15.063"/>
</kw>
<status status="PASS" starttime="20230830 21:04:15.036" endtime="20230830 21:04:15.063"/>
</kw>
<status status="PASS" starttime="20230830 21:04:15.035" endtime="20230830 21:04:15.063"/>
</kw>
<status status="PASS" starttime="20230830 21:04:15.035" endtime="20230830 21:04:15.063"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 21:04:15.034" endtime="20230830 21:04:15.063"/>
</test>
<doc>Smoke test for Recon Namespace Summary Endpoint for FILE_SYSTEM_OPTIMIZED buckets.</doc>
<status status="PASS" starttime="20230830 21:03:16.401" endtime="20230830 21:04:15.065"/>
</suite>
<status status="PASS" starttime="20230830 21:02:43.534" endtime="20230830 21:04:15.072"/>
</suite>
<suite id="s1-s4" name="Loaddata" source="/opt/hadoop/smoketest/topology/loaddata.robot">
<test id="s1-s4-t1" name="Create a volume, bucket and key" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create topvol1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:04:18.142" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:04:22.953" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:04:22.953" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230830 21:04:18.140" endtime="20230830 21:04:22.953"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:04:22.954" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230830 21:04:22.954" endtime="20230830 21:04:22.954"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:04:22.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:04:22.954" endtime="20230830 21:04:22.955"/>
</kw>
<status status="PASS" starttime="20230830 21:04:18.139" endtime="20230830 21:04:22.955"/>
</kw>
<msg timestamp="20230830 21:04:22.955" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:04:18.139" endtime="20230830 21:04:22.955"/>
</kw>
<msg timestamp="20230830 21:04:22.956" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230830 21:04:18.138" endtime="20230830 21:04:22.956"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:04:22.956" endtime="20230830 21:04:22.956"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:04:22.960" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:04:28.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:04:28.053" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230830 21:04:22.958" endtime="20230830 21:04:28.053"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:04:28.055" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230830 21:04:28.054" endtime="20230830 21:04:28.055"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:04:28.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:04:28.056" endtime="20230830 21:04:28.057"/>
</kw>
<status status="PASS" starttime="20230830 21:04:22.957" endtime="20230830 21:04:28.057"/>
</kw>
<msg timestamp="20230830 21:04:28.057" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:04:22.957" endtime="20230830 21:04:28.058"/>
</kw>
<msg timestamp="20230830 21:04:28.058" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230830 21:04:22.956" endtime="20230830 21:04:28.058"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:04:28.058" endtime="20230830 21:04:28.059"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:04:28.065" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:04:35.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:04:35.807" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230830 21:04:28.061" endtime="20230830 21:04:35.807"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:04:35.809" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230830 21:04:35.808" endtime="20230830 21:04:35.809"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:04:35.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:04:35.809" endtime="20230830 21:04:35.809"/>
</kw>
<status status="PASS" starttime="20230830 21:04:28.060" endtime="20230830 21:04:35.810"/>
</kw>
<msg timestamp="20230830 21:04:35.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:04:28.060" endtime="20230830 21:04:35.810"/>
</kw>
<msg timestamp="20230830 21:04:35.810" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230830 21:04:28.059" endtime="20230830 21:04:35.810"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:04:35.810" endtime="20230830 21:04:35.811"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 21:04:18.138" endtime="20230830 21:04:35.811"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230830 21:04:18.080" endtime="20230830 21:04:35.813"/>
</suite>
<suite id="s1-s5" name="readdata-first-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s5-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230830 21:04:43.909" level="INFO">${random} = 76941</msg>
<status status="PASS" starttime="20230830 21:04:43.909" endtime="20230830 21:04:43.909"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:04:43.913" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-76941 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:04:50.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:04:50.665" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230830 21:04:43.911" endtime="20230830 21:04:50.665"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:04:50.666" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230830 21:04:50.665" endtime="20230830 21:04:50.666"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:04:50.666" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:04:50.666" endtime="20230830 21:04:50.667"/>
</kw>
<status status="PASS" starttime="20230830 21:04:43.910" endtime="20230830 21:04:50.667"/>
</kw>
<msg timestamp="20230830 21:04:50.667" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:04:43.910" endtime="20230830 21:04:50.667"/>
</kw>
<msg timestamp="20230830 21:04:50.667" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230830 21:04:43.909" endtime="20230830 21:04:50.667"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:04:50.667" endtime="20230830 21:04:50.668"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 21:04:43.908" endtime="20230830 21:04:50.668"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230830 21:04:43.850" endtime="20230830 21:04:50.669"/>
</suite>
<suite id="s1-s6" name="readdata-second-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s6-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230830 21:05:38.252" level="INFO">${random} = 16715</msg>
<status status="PASS" starttime="20230830 21:05:38.252" endtime="20230830 21:05:38.252"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 21:05:38.259" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-16715 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 21:06:18.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 21:06:18.529" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230830 21:05:38.254" endtime="20230830 21:06:18.529"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 21:06:18.531" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230830 21:06:18.530" endtime="20230830 21:06:18.531"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 21:06:18.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 21:06:18.531" endtime="20230830 21:06:18.531"/>
</kw>
<status status="PASS" starttime="20230830 21:05:38.254" endtime="20230830 21:06:18.532"/>
</kw>
<msg timestamp="20230830 21:06:18.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 21:05:38.253" endtime="20230830 21:06:18.532"/>
</kw>
<msg timestamp="20230830 21:06:18.532" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230830 21:05:38.253" endtime="20230830 21:06:18.532"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 21:06:18.532" endtime="20230830 21:06:18.533"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 21:05:38.251" endtime="20230830 21:06:18.533"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230830 21:05:38.181" endtime="20230830 21:06:18.535"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="216505"/>
</suite>
<statistics>
<total>
<stat pass="32" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="32" fail="0" skip="0" id="s1" name="ozone-topology">ozone-topology</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="Basic">ozone-topology.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Cli">ozone-topology.Cli</stat>
<stat pass="23" fail="0" skip="0" id="s1-s3" name="Recon">ozone-topology.Recon</stat>
<stat pass="7" fail="0" skip="0" id="s1-s3-s1" name="Recon-Api">ozone-topology.Recon.Recon-Api</stat>
<stat pass="16" fail="0" skip="0" id="s1-s3-s2" name="Recon-Nssummary">ozone-topology.Recon.Recon-Nssummary</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Loaddata">ozone-topology.Loaddata</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="readdata-first-half">ozone-topology.readdata-first-half</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="readdata-second-half">ozone-topology.readdata-second-half</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
