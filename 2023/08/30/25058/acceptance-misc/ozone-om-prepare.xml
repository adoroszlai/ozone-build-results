<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230830 18:05:28.897" rpa="false" schemaversion="4">
<suite id="s1" name="ozone-om-prepare">
<suite id="s1-s1" name="Om-Prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Create Specific OM data for prepare" type="SETUP">
<kw name="Freon OCKG" library="freon">
<arg>prefix=om-prepare</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 17:59:37.200" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p om-prepare  2&gt;&amp;1'.</msg>
<msg timestamp="20230830 17:59:59.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 17:59:59.019" level="INFO">${output} = 2023-08-30 17:59:38,921 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-30 17:59:39,176 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230830 17:59:37.198" endtime="20230830 17:59:59.019"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 17:59:59.020" level="INFO">2023-08-30 17:59:38,921 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-30 17:59:39,176 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-08-30 17:59:39,176 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-08-30 17:59:39,283 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2023-08-30 17:59:39,346 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-08-30 17:59:40,113 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2023-08-30 17:59:40,348 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-08-30 17:59:40,376 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2023-08-30 17:59:41,348 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-08-30 17:59:41,842 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-08-30 17:59:42,149 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-08-30 17:59:42,356 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-08-30 17:59:43,357 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-08-30 17:59:44,357 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-08-30 17:59:45,358 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-08-30 17:59:46,364 [Thread-3] INFO freon.ProgressBar: Progress: 1.00 % (1 out of 100)
2023-08-30 17:59:47,365 [Thread-3] INFO freon.ProgressBar: Progress: 6.00 % (6 out of 100)
2023-08-30 17:59:48,365 [Thread-3] INFO freon.ProgressBar: Progress: 12.00 % (12 out of 100)
2023-08-30 17:59:49,366 [Thread-3] INFO freon.ProgressBar: Progress: 19.00 % (19 out of 100)
2023-08-30 17:59:50,366 [Thread-3] INFO freon.ProgressBar: Progress: 26.00 % (26 out of 100)
2023-08-30 17:59:51,371 [Thread-3] INFO freon.ProgressBar: Progress: 35.00 % (35 out of 100)
2023-08-30 17:59:52,371 [Thread-3] INFO freon.ProgressBar: Progress: 44.00 % (44 out of 100)
2023-08-30 17:59:53,373 [Thread-3] INFO freon.ProgressBar: Progress: 53.00 % (53 out of 100)
2023-08-30 17:59:54,375 [Thread-3] INFO freon.ProgressBar: Progress: 63.00 % (63 out of 100)
2023-08-30 17:59:55,377 [Thread-3] INFO freon.ProgressBar: Progress: 73.00 % (73 out of 100)
2023-08-30 17:59:56,377 [Thread-3] INFO freon.ProgressBar: Progress: 81.00 % (81 out of 100)
2023-08-30 17:59:57,378 [Thread-3] INFO freon.ProgressBar: Progress: 91.00 % (91 out of 100)
2023-08-30 17:59:58,378 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-08-30 17:59:58,654 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=77.860673, max=5630.58097, mean=171.0290730249796, stddev=524.316170261787, median=111.834672, p75=133.049081, p95=166.21083, p98=232.302295, p99=468.097252, p999=5630.58097, mean_rate=5.5270116545239505, m1=1.1475424479469967, m5=0.24309260354294396, m15=0.08182236713640685, rate_unit=events/second, duration_unit=milliseconds
2023-08-30 17:59:58,654 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 19
2023-08-30 17:59:58,655 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-08-30 17:59:58,655 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20230830 17:59:59.019" endtime="20230830 17:59:59.020"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 17:59:59.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 17:59:59.020" endtime="20230830 17:59:59.020"/>
</kw>
<status status="PASS" starttime="20230830 17:59:37.197" endtime="20230830 17:59:59.020"/>
</kw>
<msg timestamp="20230830 17:59:59.020" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 17:59:37.197" endtime="20230830 17:59:59.021"/>
</kw>
<msg timestamp="20230830 17:59:59.021" level="INFO">${result} = 2023-08-30 17:59:38,921 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-30 17:59:39,176 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230830 17:59:37.196" endtime="20230830 17:59:59.021"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 17:59:59.021" endtime="20230830 17:59:59.022"/>
</kw>
<status status="PASS" starttime="20230830 17:59:37.195" endtime="20230830 17:59:59.022"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230830 17:59:59.022" level="INFO">${random} = 21579</msg>
<status status="PASS" starttime="20230830 17:59:59.022" endtime="20230830 17:59:59.022"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230830 17:59:59.024" level="INFO">${volume_name} = 21579-volume-for-prepare</msg>
<status status="PASS" starttime="20230830 17:59:59.022" endtime="20230830 17:59:59.024"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230830 17:59:59.025" level="INFO">${bucket_name} = 21579-bucket-for-prepare</msg>
<status status="PASS" starttime="20230830 17:59:59.024" endtime="20230830 17:59:59.025"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 17:59:59.029" level="INFO">Running command 'ozone sh volume create /21579-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:00:02.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:00:02.111" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 17:59:59.026" endtime="20230830 18:00:02.111"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:00:02.112" level="INFO"/>
<status status="PASS" starttime="20230830 18:00:02.112" endtime="20230830 18:00:02.112"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:00:02.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:00:02.112" endtime="20230830 18:00:02.113"/>
</kw>
<status status="PASS" starttime="20230830 17:59:59.026" endtime="20230830 18:00:02.113"/>
</kw>
<msg timestamp="20230830 18:00:02.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 17:59:59.026" endtime="20230830 18:00:02.113"/>
</kw>
<status status="PASS" starttime="20230830 17:59:59.025" endtime="20230830 18:00:02.113"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:00:02.118" level="INFO">Running command 'ozone sh bucket create /21579-volume-for-prepare/21579-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:00:05.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:00:05.104" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 18:00:02.115" endtime="20230830 18:00:05.104"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:00:05.105" level="INFO"/>
<status status="PASS" starttime="20230830 18:00:05.105" endtime="20230830 18:00:05.106"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:00:05.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:00:05.106" endtime="20230830 18:00:05.106"/>
</kw>
<status status="PASS" starttime="20230830 18:00:02.114" endtime="20230830 18:00:05.106"/>
</kw>
<msg timestamp="20230830 18:00:05.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:00:02.114" endtime="20230830 18:00:05.107"/>
</kw>
<status status="PASS" starttime="20230830 18:00:02.113" endtime="20230830 18:00:05.107"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:00:05.111" level="INFO">Running command 'ozone sh key put /21579-volume-for-prepare/21579-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:00:10.571" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:00:10.572" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 18:00:05.108" endtime="20230830 18:00:10.572"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:00:10.573" level="INFO"/>
<status status="PASS" starttime="20230830 18:00:10.572" endtime="20230830 18:00:10.573"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:00:10.573" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:00:10.573" endtime="20230830 18:00:10.573"/>
</kw>
<status status="PASS" starttime="20230830 18:00:05.108" endtime="20230830 18:00:10.573"/>
</kw>
<msg timestamp="20230830 18:00:10.574" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:00:05.107" endtime="20230830 18:00:10.574"/>
</kw>
<status status="PASS" starttime="20230830 18:00:05.107" endtime="20230830 18:00:10.574"/>
</kw>
<status status="PASS" starttime="20230830 17:59:37.195" endtime="20230830 18:00:10.574"/>
</kw>
<test id="s1-s1-t1" name="Prepare Ozone Manager" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 18:00:10.575" endtime="20230830 18:00:10.576"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:00:10.580" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:00:18.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:00:18.662" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20230830 18:00:10.578" endtime="20230830 18:00:18.662"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:00:18.663" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20230830 18:00:18.662" endtime="20230830 18:00:18.663"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:00:18.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:00:18.663" endtime="20230830 18:00:18.664"/>
</kw>
<status status="PASS" starttime="20230830 18:00:10.577" endtime="20230830 18:00:18.664"/>
</kw>
<msg timestamp="20230830 18:00:18.664" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:00:10.576" endtime="20230830 18:00:18.664"/>
</kw>
<msg timestamp="20230830 18:00:18.664" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20230830 18:00:10.576" endtime="20230830 18:00:18.664"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:00:18.665" endtime="20230830 18:00:18.665"/>
</kw>
<status status="PASS" starttime="20230830 18:00:18.665" endtime="20230830 18:00:18.665"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 18:00:10.574" endtime="20230830 18:00:18.666"/>
</test>
<test id="s1-s1-t2" name="Checks if the expected data is present in OM" line="43">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 18:00:18.667" endtime="20230830 18:00:18.667"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:00:18.671" level="INFO">Running command 'ozone sh key info /21579-volume-for-prepare/21579-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:00:21.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:00:21.976" level="INFO">${output} = {
  "volumeName" : "21579-volume-for-prepare",
  "bucketName" : "21579-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-08-30T18:00:08.263Z",
  "modificati...</msg>
<status status="PASS" starttime="20230830 18:00:18.669" endtime="20230830 18:00:21.976"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:00:21.977" level="INFO">{
  "volumeName" : "21579-volume-for-prepare",
  "bucketName" : "21579-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-08-30T18:00:08.263Z",
  "modificationTime" : "2023-08-30T18:00:10.166Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 1,
    "localID" : 111677748019200101,
    "length" : 17289,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "file" : true
}</msg>
<status status="PASS" starttime="20230830 18:00:21.976" endtime="20230830 18:00:21.977"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:00:21.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:00:21.977" endtime="20230830 18:00:21.978"/>
</kw>
<status status="PASS" starttime="20230830 18:00:18.668" endtime="20230830 18:00:21.978"/>
</kw>
<msg timestamp="20230830 18:00:21.978" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:00:18.668" endtime="20230830 18:00:21.978"/>
</kw>
<msg timestamp="20230830 18:00:21.978" level="INFO">${result} = {
  "volumeName" : "21579-volume-for-prepare",
  "bucketName" : "21579-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-08-30T18:00:08.263Z",
  "modificati...</msg>
<status status="PASS" starttime="20230830 18:00:18.668" endtime="20230830 18:00:21.978"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:00:21.979" endtime="20230830 18:00:21.979"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 18:00:18.666" endtime="20230830 18:00:21.979"/>
</test>
<test id="s1-s1-t3" name="Test write operation fails" line="47">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 18:00:21.981" endtime="20230830 18:00:21.981"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:00:21.984" level="INFO">Running command 'ozone sh key put /21579-volume-for-prepare/21579-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:00:25.037" level="INFO">${rc} = 255</msg>
<msg timestamp="20230830 18:00:25.037" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230830 18:00:21.982" endtime="20230830 18:00:25.037"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:00:25.038" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230830 18:00:25.037" endtime="20230830 18:00:25.038"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:00:25.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:00:25.038" endtime="20230830 18:00:25.039"/>
</kw>
<msg timestamp="20230830 18:00:25.039" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230830 18:00:21.981" endtime="20230830 18:00:25.039"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:00:25.040" endtime="20230830 18:00:25.040"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:00:25.043" level="INFO">Running command 'ozone sh key info /21579-volume-for-prepare/21579-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:00:28.012" level="INFO">${rc} = 255</msg>
<msg timestamp="20230830 18:00:28.012" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20230830 18:00:25.041" endtime="20230830 18:00:28.012"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:00:28.013" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20230830 18:00:28.012" endtime="20230830 18:00:28.013"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:00:28.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:00:28.013" endtime="20230830 18:00:28.014"/>
</kw>
<status status="PASS" starttime="20230830 18:00:25.040" endtime="20230830 18:00:28.014"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 18:00:21.980" endtime="20230830 18:00:28.014"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="PASS" starttime="20230830 17:59:37.134" endtime="20230830 18:00:28.016"/>
</suite>
<suite id="s1-s2" name="Om-Cancel-Prepare" source="/opt/hadoop/smoketest/omha/om-cancel-prepare.robot">
<kw name="Generate volume and bucket names" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230830 18:00:30.581" level="INFO">${random} = 93453</msg>
<status status="PASS" starttime="20230830 18:00:30.580" endtime="20230830 18:00:30.581"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-cancel</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230830 18:00:30.583" level="INFO">${volume_name} = 93453-volume-for-cancel</msg>
<status status="PASS" starttime="20230830 18:00:30.581" endtime="20230830 18:00:30.583"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-cancel</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230830 18:00:30.584" level="INFO">${bucket_name} = 93453-bucket-for-cancel</msg>
<status status="PASS" starttime="20230830 18:00:30.583" endtime="20230830 18:00:30.584"/>
</kw>
<status status="PASS" starttime="20230830 18:00:30.580" endtime="20230830 18:00:30.584"/>
</kw>
<test id="s1-s2-t1" name="Cancel Ozone Manager Prepare" line="33">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 18:00:30.585" endtime="20230830 18:00:30.585"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om cancelprepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:00:30.589" level="INFO">Running command 'ozone admin om cancelprepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:00:33.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:00:33.486" level="INFO">${output} = Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20230830 18:00:30.586" endtime="20230830 18:00:33.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:00:33.487" level="INFO">Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20230830 18:00:33.487" endtime="20230830 18:00:33.487"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:00:33.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:00:33.488" endtime="20230830 18:00:33.488"/>
</kw>
<status status="PASS" starttime="20230830 18:00:30.586" endtime="20230830 18:00:33.488"/>
</kw>
<msg timestamp="20230830 18:00:33.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:00:30.586" endtime="20230830 18:00:33.489"/>
</kw>
<msg timestamp="20230830 18:00:33.489" level="INFO">${result} = Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20230830 18:00:30.585" endtime="20230830 18:00:33.489"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>5sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Cancel prepare succeeded</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Cancel prepare succeeded</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:00:33.489" endtime="20230830 18:00:33.490"/>
</kw>
<status status="PASS" starttime="20230830 18:00:33.489" endtime="20230830 18:00:33.490"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 18:00:30.584" endtime="20230830 18:00:33.490"/>
</test>
<test id="s1-s2-t2" name="Test write operations" line="37">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 18:00:33.492" endtime="20230830 18:00:33.492"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:00:33.496" level="INFO">Running command 'ozone sh volume create /93453-volume-for-cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:00:36.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:00:36.267" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 18:00:33.493" endtime="20230830 18:00:36.267"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:00:36.268" level="INFO"/>
<status status="PASS" starttime="20230830 18:00:36.268" endtime="20230830 18:00:36.268"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:00:36.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:00:36.269" endtime="20230830 18:00:36.269"/>
</kw>
<status status="PASS" starttime="20230830 18:00:33.493" endtime="20230830 18:00:36.269"/>
</kw>
<msg timestamp="20230830 18:00:36.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:00:33.493" endtime="20230830 18:00:36.270"/>
</kw>
<status status="PASS" starttime="20230830 18:00:33.492" endtime="20230830 18:00:36.270"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:00:36.275" level="INFO">Running command 'ozone sh bucket create /93453-volume-for-cancel/93453-bucket-for-cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:00:39.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:00:39.330" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 18:00:36.272" endtime="20230830 18:00:39.330"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:00:39.331" level="INFO"/>
<status status="PASS" starttime="20230830 18:00:39.331" endtime="20230830 18:00:39.332"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:00:39.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:00:39.332" endtime="20230830 18:00:39.332"/>
</kw>
<status status="PASS" starttime="20230830 18:00:36.271" endtime="20230830 18:00:39.332"/>
</kw>
<msg timestamp="20230830 18:00:39.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:00:36.271" endtime="20230830 18:00:39.333"/>
</kw>
<status status="PASS" starttime="20230830 18:00:36.270" endtime="20230830 18:00:39.333"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/cancel-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:00:39.337" level="INFO">Running command 'ozone sh key put /93453-volume-for-cancel/93453-bucket-for-cancel/cancel-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:00:44.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:00:44.490" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 18:00:39.334" endtime="20230830 18:00:44.490"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:00:44.491" level="INFO"/>
<status status="PASS" starttime="20230830 18:00:44.490" endtime="20230830 18:00:44.491"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:00:44.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:00:44.491" endtime="20230830 18:00:44.492"/>
</kw>
<status status="PASS" starttime="20230830 18:00:39.334" endtime="20230830 18:00:44.492"/>
</kw>
<msg timestamp="20230830 18:00:44.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:00:39.333" endtime="20230830 18:00:44.492"/>
</kw>
<msg timestamp="20230830 18:00:44.492" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230830 18:00:39.333" endtime="20230830 18:00:44.492"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/cancel-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:00:44.496" level="INFO">Running command 'ozone sh key info /93453-volume-for-cancel/93453-bucket-for-cancel/cancel-key 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:00:47.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:00:47.534" level="INFO">${output} = {
  "volumeName" : "93453-volume-for-cancel",
  "bucketName" : "93453-bucket-for-cancel",
  "name" : "cancel-key",
  "dataSize" : 17289,
  "creationTime" : "2023-08-30T18:00:42.244Z",
  "modificationT...</msg>
<status status="PASS" starttime="20230830 18:00:44.494" endtime="20230830 18:00:47.534"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:00:47.536" level="INFO">{
  "volumeName" : "93453-volume-for-cancel",
  "bucketName" : "93453-bucket-for-cancel",
  "name" : "cancel-key",
  "dataSize" : 17289,
  "creationTime" : "2023-08-30T18:00:42.244Z",
  "modificationTime" : "2023-08-30T18:00:44.103Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 4,
    "localID" : 111677748019200103,
    "length" : 17289,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "file" : true
}</msg>
<status status="PASS" starttime="20230830 18:00:47.535" endtime="20230830 18:00:47.536"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:00:47.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:00:47.536" endtime="20230830 18:00:47.537"/>
</kw>
<status status="PASS" starttime="20230830 18:00:44.493" endtime="20230830 18:00:47.537"/>
</kw>
<msg timestamp="20230830 18:00:47.537" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:00:44.493" endtime="20230830 18:00:47.537"/>
</kw>
<msg timestamp="20230830 18:00:47.537" level="INFO">${result} = {
  "volumeName" : "93453-volume-for-cancel",
  "bucketName" : "93453-bucket-for-cancel",
  "name" : "cancel-key",
  "dataSize" : 17289,
  "creationTime" : "2023-08-30T18:00:42.244Z",
  "modificationT...</msg>
<status status="PASS" starttime="20230830 18:00:44.492" endtime="20230830 18:00:47.537"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"cancel-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:00:47.538" endtime="20230830 18:00:47.538"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 18:00:33.491" endtime="20230830 18:00:47.538"/>
</test>
<doc>Smoke test for ozone manager cancel prepare</doc>
<status status="PASS" starttime="20230830 18:00:30.529" endtime="20230830 18:00:47.540"/>
</suite>
<suite id="s1-s3" name="Om-Prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Create Specific OM data for prepare" type="SETUP">
<kw name="Freon OCKG" library="freon">
<arg>prefix=om-prepare</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:00:50.126" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p om-prepare  2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:01:05.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:01:05.060" level="INFO">${output} = 2023-08-30 18:00:51,714 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-30 18:00:51,859 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230830 18:00:50.124" endtime="20230830 18:01:05.060"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:01:05.061" level="INFO">2023-08-30 18:00:51,714 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-30 18:00:51,859 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-08-30 18:00:51,859 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-08-30 18:00:51,934 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2023-08-30 18:00:51,980 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-08-30 18:00:52,984 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-08-30 18:00:53,166 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-08-30 18:00:53,405 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-08-30 18:00:53,985 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-08-30 18:00:54,986 [Thread-3] INFO freon.ProgressBar: Progress: 7.00 % (7 out of 100)
2023-08-30 18:00:55,990 [Thread-3] INFO freon.ProgressBar: Progress: 17.00 % (17 out of 100)
2023-08-30 18:00:56,992 [Thread-3] INFO freon.ProgressBar: Progress: 26.00 % (26 out of 100)
2023-08-30 18:00:57,997 [Thread-3] INFO freon.ProgressBar: Progress: 35.00 % (35 out of 100)
2023-08-30 18:00:58,998 [Thread-3] INFO freon.ProgressBar: Progress: 45.00 % (45 out of 100)
2023-08-30 18:01:00,004 [Thread-3] INFO freon.ProgressBar: Progress: 56.00 % (56 out of 100)
2023-08-30 18:01:01,005 [Thread-3] INFO freon.ProgressBar: Progress: 67.00 % (67 out of 100)
2023-08-30 18:01:02,006 [Thread-3] INFO freon.ProgressBar: Progress: 79.00 % (79 out of 100)
2023-08-30 18:01:03,008 [Thread-3] INFO freon.ProgressBar: Progress: 89.00 % (89 out of 100)
2023-08-30 18:01:04,008 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-08-30 18:01:04,704 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=64.668325, max=1504.824295, mean=110.06544828315027, stddev=136.91411889512696, median=92.920717, p75=108.18099, p95=150.153413, p98=161.910518, p99=162.827434, p999=1504.824295, mean_rate=8.290941684934378, m1=6.7358134585568425, m5=6.4694198939492065, m15=6.423268638379434, rate_unit=events/second, duration_unit=milliseconds
2023-08-30 18:01:04,705 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 13
2023-08-30 18:01:04,706 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-08-30 18:01:04,706 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20230830 18:01:05.060" endtime="20230830 18:01:05.061"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:01:05.061" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:01:05.061" endtime="20230830 18:01:05.061"/>
</kw>
<status status="PASS" starttime="20230830 18:00:50.124" endtime="20230830 18:01:05.062"/>
</kw>
<msg timestamp="20230830 18:01:05.062" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:00:50.123" endtime="20230830 18:01:05.062"/>
</kw>
<msg timestamp="20230830 18:01:05.062" level="INFO">${result} = 2023-08-30 18:00:51,714 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-30 18:00:51,859 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230830 18:00:50.123" endtime="20230830 18:01:05.062"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:01:05.062" endtime="20230830 18:01:05.063"/>
</kw>
<status status="PASS" starttime="20230830 18:00:50.121" endtime="20230830 18:01:05.063"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230830 18:01:05.063" level="INFO">${random} = 63318</msg>
<status status="PASS" starttime="20230830 18:01:05.063" endtime="20230830 18:01:05.063"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230830 18:01:05.065" level="INFO">${volume_name} = 63318-volume-for-prepare</msg>
<status status="PASS" starttime="20230830 18:01:05.063" endtime="20230830 18:01:05.065"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230830 18:01:05.066" level="INFO">${bucket_name} = 63318-bucket-for-prepare</msg>
<status status="PASS" starttime="20230830 18:01:05.065" endtime="20230830 18:01:05.066"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:01:05.070" level="INFO">Running command 'ozone sh volume create /63318-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:01:08.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:01:08.018" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 18:01:05.067" endtime="20230830 18:01:08.018"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:01:08.019" level="INFO"/>
<status status="PASS" starttime="20230830 18:01:08.018" endtime="20230830 18:01:08.019"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:01:08.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:01:08.019" endtime="20230830 18:01:08.020"/>
</kw>
<status status="PASS" starttime="20230830 18:01:05.067" endtime="20230830 18:01:08.020"/>
</kw>
<msg timestamp="20230830 18:01:08.020" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:01:05.067" endtime="20230830 18:01:08.020"/>
</kw>
<status status="PASS" starttime="20230830 18:01:05.066" endtime="20230830 18:01:08.020"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:01:08.024" level="INFO">Running command 'ozone sh bucket create /63318-volume-for-prepare/63318-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:01:10.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:01:10.792" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 18:01:08.022" endtime="20230830 18:01:10.792"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:01:10.794" level="INFO"/>
<status status="PASS" starttime="20230830 18:01:10.793" endtime="20230830 18:01:10.794"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:01:10.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:01:10.794" endtime="20230830 18:01:10.794"/>
</kw>
<status status="PASS" starttime="20230830 18:01:08.022" endtime="20230830 18:01:10.794"/>
</kw>
<msg timestamp="20230830 18:01:10.795" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:01:08.021" endtime="20230830 18:01:10.795"/>
</kw>
<status status="PASS" starttime="20230830 18:01:08.020" endtime="20230830 18:01:10.795"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:01:10.799" level="INFO">Running command 'ozone sh key put /63318-volume-for-prepare/63318-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:01:15.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:01:15.976" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 18:01:10.796" endtime="20230830 18:01:15.976"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:01:15.977" level="INFO"/>
<status status="PASS" starttime="20230830 18:01:15.976" endtime="20230830 18:01:15.977"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:01:15.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:01:15.977" endtime="20230830 18:01:15.978"/>
</kw>
<status status="PASS" starttime="20230830 18:01:10.796" endtime="20230830 18:01:15.978"/>
</kw>
<msg timestamp="20230830 18:01:15.978" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:01:10.796" endtime="20230830 18:01:15.978"/>
</kw>
<status status="PASS" starttime="20230830 18:01:10.795" endtime="20230830 18:01:15.978"/>
</kw>
<status status="PASS" starttime="20230830 18:00:50.121" endtime="20230830 18:01:15.978"/>
</kw>
<test id="s1-s3-t1" name="Prepare Ozone Manager" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 18:01:15.980" endtime="20230830 18:01:15.980"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:01:15.985" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:01:24.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:01:24.664" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [835].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20230830 18:01:15.982" endtime="20230830 18:01:24.664"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:01:24.665" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [835].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [835]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [835]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [835]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20230830 18:01:24.664" endtime="20230830 18:01:24.665"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:01:24.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:01:24.665" endtime="20230830 18:01:24.666"/>
</kw>
<status status="PASS" starttime="20230830 18:01:15.981" endtime="20230830 18:01:24.666"/>
</kw>
<msg timestamp="20230830 18:01:24.666" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:01:15.981" endtime="20230830 18:01:24.666"/>
</kw>
<msg timestamp="20230830 18:01:24.666" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [835].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20230830 18:01:15.980" endtime="20230830 18:01:24.666"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:01:24.667" endtime="20230830 18:01:24.668"/>
</kw>
<status status="PASS" starttime="20230830 18:01:24.667" endtime="20230830 18:01:24.668"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 18:01:15.979" endtime="20230830 18:01:24.668"/>
</test>
<test id="s1-s3-t2" name="Checks if the expected data is present in OM" line="43">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 18:01:24.670" endtime="20230830 18:01:24.670"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:01:24.674" level="INFO">Running command 'ozone sh key info /63318-volume-for-prepare/63318-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:01:28.083" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:01:28.083" level="INFO">${output} = {
  "volumeName" : "63318-volume-for-prepare",
  "bucketName" : "63318-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-08-30T18:01:13.817Z",
  "modificati...</msg>
<status status="PASS" starttime="20230830 18:01:24.672" endtime="20230830 18:01:28.083"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:01:28.084" level="INFO">{
  "volumeName" : "63318-volume-for-prepare",
  "bucketName" : "63318-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-08-30T18:01:13.817Z",
  "modificationTime" : "2023-08-30T18:01:15.531Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 2,
    "localID" : 111677748019200204,
    "length" : 17289,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "file" : true
}</msg>
<status status="PASS" starttime="20230830 18:01:28.084" endtime="20230830 18:01:28.084"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:01:28.085" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:01:28.085" endtime="20230830 18:01:28.085"/>
</kw>
<status status="PASS" starttime="20230830 18:01:24.671" endtime="20230830 18:01:28.085"/>
</kw>
<msg timestamp="20230830 18:01:28.086" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:01:24.671" endtime="20230830 18:01:28.086"/>
</kw>
<msg timestamp="20230830 18:01:28.086" level="INFO">${result} = {
  "volumeName" : "63318-volume-for-prepare",
  "bucketName" : "63318-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-08-30T18:01:13.817Z",
  "modificati...</msg>
<status status="PASS" starttime="20230830 18:01:24.670" endtime="20230830 18:01:28.086"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:01:28.086" endtime="20230830 18:01:28.086"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 18:01:24.669" endtime="20230830 18:01:28.087"/>
</test>
<test id="s1-s3-t3" name="Test write operation fails" line="47">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 18:01:28.089" endtime="20230830 18:01:28.089"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:01:28.092" level="INFO">Running command 'ozone sh key put /63318-volume-for-prepare/63318-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:01:30.809" level="INFO">${rc} = 255</msg>
<msg timestamp="20230830 18:01:30.809" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230830 18:01:28.090" endtime="20230830 18:01:30.809"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:01:30.810" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230830 18:01:30.809" endtime="20230830 18:01:30.810"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:01:30.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:01:30.810" endtime="20230830 18:01:30.811"/>
</kw>
<msg timestamp="20230830 18:01:30.811" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230830 18:01:28.089" endtime="20230830 18:01:30.811"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:01:30.811" endtime="20230830 18:01:30.812"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:01:30.815" level="INFO">Running command 'ozone sh key info /63318-volume-for-prepare/63318-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:01:33.904" level="INFO">${rc} = 255</msg>
<msg timestamp="20230830 18:01:33.905" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20230830 18:01:30.812" endtime="20230830 18:01:33.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:01:33.906" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20230830 18:01:33.905" endtime="20230830 18:01:33.906"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:01:33.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:01:33.906" endtime="20230830 18:01:33.907"/>
</kw>
<status status="PASS" starttime="20230830 18:01:30.812" endtime="20230830 18:01:33.907"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 18:01:28.088" endtime="20230830 18:01:33.907"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="PASS" starttime="20230830 18:00:50.061" endtime="20230830 18:01:33.909"/>
</suite>
<suite id="s1-s4" name="Om-Prepared" source="/opt/hadoop/smoketest/omha/om-prepared.robot">
<test id="s1-s4-t1" name="Test create volume fails" line="26">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 18:01:36.527" endtime="20230830 18:01:36.528"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230830 18:01:36.528" level="INFO">${random} = 61529</msg>
<status status="PASS" starttime="20230830 18:01:36.528" endtime="20230830 18:01:36.528"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230830 18:01:36.530" level="INFO">${volume_name} = 61529-volume-for-prepare</msg>
<status status="PASS" starttime="20230830 18:01:36.529" endtime="20230830 18:01:36.530"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:01:36.533" level="INFO">Running command 'ozone sh volume create /61529-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:01:39.574" level="INFO">${rc} = 255</msg>
<msg timestamp="20230830 18:01:39.575" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230830 18:01:36.531" endtime="20230830 18:01:39.575"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:01:39.576" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230830 18:01:39.575" endtime="20230830 18:01:39.576"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:01:39.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:01:39.576" endtime="20230830 18:01:39.576"/>
</kw>
<msg timestamp="20230830 18:01:39.577" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230830 18:01:36.530" endtime="20230830 18:01:39.577"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:01:39.577" endtime="20230830 18:01:39.577"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:01:39.581" level="INFO">Running command 'ozone sh volume info /61529-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:01:42.334" level="INFO">${rc} = 255</msg>
<msg timestamp="20230830 18:01:42.334" level="INFO">${output} = VOLUME_NOT_FOUND Volume 61529-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230830 18:01:39.578" endtime="20230830 18:01:42.334"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:01:42.335" level="INFO">VOLUME_NOT_FOUND Volume 61529-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230830 18:01:42.334" endtime="20230830 18:01:42.335"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:01:42.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:01:42.335" endtime="20230830 18:01:42.336"/>
</kw>
<msg timestamp="20230830 18:01:42.336" level="INFO">${result} = VOLUME_NOT_FOUND Volume 61529-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230830 18:01:39.577" endtime="20230830 18:01:42.336"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:01:42.337" endtime="20230830 18:01:42.337"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 18:01:36.526" endtime="20230830 18:01:42.337"/>
</test>
<test id="s1-s4-t2" name="Test list volumes succeeds" line="34">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 18:01:42.339" endtime="20230830 18:01:42.339"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:01:42.343" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:01:45.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:01:45.518" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "93453-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2...</msg>
<status status="PASS" starttime="20230830 18:01:42.341" endtime="20230830 18:01:45.518"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:01:45.520" level="INFO">[ {
  "metadata" : { },
  "name" : "93453-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-08-30T18:00:36.244Z",
  "modificationTime" : "2023-08-30T18:00:36.244Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "21579-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-08-30T18:00:02.068Z",
  "modificationTime" : "2023-08-30T18:00:02.068Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2023-08-30T17:59:08.782Z",
  "modificationTime" : "2023-08-30T17:59:08.782Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "63318-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-08-30T18:01:07.970Z",
  "modificationTime" : "2023-08-30T18:01:07.970Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-08-30T17:59:40.124Z",
  "modificationTime" : "2023-08-30T17:59:40.124Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
} ]</msg>
<status status="PASS" starttime="20230830 18:01:45.519" endtime="20230830 18:01:45.520"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:01:45.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:01:45.520" endtime="20230830 18:01:45.521"/>
</kw>
<status status="PASS" starttime="20230830 18:01:42.340" endtime="20230830 18:01:45.521"/>
</kw>
<msg timestamp="20230830 18:01:45.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:01:42.340" endtime="20230830 18:01:45.521"/>
</kw>
<msg timestamp="20230830 18:01:45.521" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "93453-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2...</msg>
<status status="PASS" starttime="20230830 18:01:42.340" endtime="20230830 18:01:45.521"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 18:01:42.338" endtime="20230830 18:01:45.522"/>
</test>
<doc>Smoke test to test that OMs are prepared in an OM HA cluster.</doc>
<status status="PASS" starttime="20230830 18:01:36.474" endtime="20230830 18:01:45.523"/>
</suite>
<suite id="s1-s5" name="Om-Prepared" source="/opt/hadoop/smoketest/omha/om-prepared.robot">
<test id="s1-s5-t1" name="Test create volume fails" line="26">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 18:03:14.007" endtime="20230830 18:03:14.007"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230830 18:03:14.008" level="INFO">${random} = 47111</msg>
<status status="PASS" starttime="20230830 18:03:14.008" endtime="20230830 18:03:14.008"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230830 18:03:14.010" level="INFO">${volume_name} = 47111-volume-for-prepare</msg>
<status status="PASS" starttime="20230830 18:03:14.008" endtime="20230830 18:03:14.010"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:03:14.013" level="INFO">Running command 'ozone sh volume create /47111-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:03:17.474" level="INFO">${rc} = 255</msg>
<msg timestamp="20230830 18:03:17.474" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230830 18:03:14.010" endtime="20230830 18:03:17.474"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:03:17.475" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230830 18:03:17.475" endtime="20230830 18:03:17.476"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:03:17.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:03:17.476" endtime="20230830 18:03:17.476"/>
</kw>
<msg timestamp="20230830 18:03:17.476" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230830 18:03:14.010" endtime="20230830 18:03:17.476"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:03:17.477" endtime="20230830 18:03:17.477"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:03:17.480" level="INFO">Running command 'ozone sh volume info /47111-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:03:20.720" level="INFO">${rc} = 255</msg>
<msg timestamp="20230830 18:03:20.720" level="INFO">${output} = VOLUME_NOT_FOUND Volume 47111-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230830 18:03:17.478" endtime="20230830 18:03:20.720"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:03:20.722" level="INFO">VOLUME_NOT_FOUND Volume 47111-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230830 18:03:20.721" endtime="20230830 18:03:20.722"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:03:20.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:03:20.722" endtime="20230830 18:03:20.723"/>
</kw>
<msg timestamp="20230830 18:03:20.723" level="INFO">${result} = VOLUME_NOT_FOUND Volume 47111-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230830 18:03:17.477" endtime="20230830 18:03:20.723"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:03:20.723" endtime="20230830 18:03:20.723"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 18:03:14.006" endtime="20230830 18:03:20.724"/>
</test>
<test id="s1-s5-t2" name="Test list volumes succeeds" line="34">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 18:03:20.725" endtime="20230830 18:03:20.726"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:03:20.729" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:03:24.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:03:24.080" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "93453-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2...</msg>
<status status="PASS" starttime="20230830 18:03:20.727" endtime="20230830 18:03:24.080"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:03:24.081" level="INFO">[ {
  "metadata" : { },
  "name" : "93453-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-08-30T18:00:36.244Z",
  "modificationTime" : "2023-08-30T18:00:36.244Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "21579-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-08-30T18:00:02.068Z",
  "modificationTime" : "2023-08-30T18:00:02.068Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2023-08-30T17:59:09.399Z",
  "modificationTime" : "2023-08-30T17:59:09.399Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "63318-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-08-30T18:01:07.970Z",
  "modificationTime" : "2023-08-30T18:01:07.970Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-08-30T17:59:40.124Z",
  "modificationTime" : "2023-08-30T17:59:40.124Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
} ]</msg>
<status status="PASS" starttime="20230830 18:03:24.080" endtime="20230830 18:03:24.081"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:03:24.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:03:24.081" endtime="20230830 18:03:24.082"/>
</kw>
<status status="PASS" starttime="20230830 18:03:20.726" endtime="20230830 18:03:24.082"/>
</kw>
<msg timestamp="20230830 18:03:24.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:03:20.726" endtime="20230830 18:03:24.082"/>
</kw>
<msg timestamp="20230830 18:03:24.082" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "93453-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2...</msg>
<status status="PASS" starttime="20230830 18:03:20.726" endtime="20230830 18:03:24.082"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 18:03:20.724" endtime="20230830 18:03:24.083"/>
</test>
<doc>Smoke test to test that OMs are prepared in an OM HA cluster.</doc>
<status status="PASS" starttime="20230830 18:03:13.957" endtime="20230830 18:03:24.084"/>
</suite>
<suite id="s1-s6" name="Loaddata" source="/opt/hadoop/smoketest/topology/loaddata.robot">
<test id="s1-s6-t1" name="Create a volume, bucket and key" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create topvol1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:04:52.755" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:04:56.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:04:56.392" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 18:04:52.752" endtime="20230830 18:04:56.392"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:04:56.393" level="INFO"/>
<status status="PASS" starttime="20230830 18:04:56.392" endtime="20230830 18:04:56.393"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:04:56.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:04:56.393" endtime="20230830 18:04:56.394"/>
</kw>
<status status="PASS" starttime="20230830 18:04:52.752" endtime="20230830 18:04:56.394"/>
</kw>
<msg timestamp="20230830 18:04:56.394" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:04:52.751" endtime="20230830 18:04:56.394"/>
</kw>
<msg timestamp="20230830 18:04:56.395" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 18:04:52.751" endtime="20230830 18:04:56.395"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:04:56.395" endtime="20230830 18:04:56.397"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:04:56.402" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:04:59.803" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:04:59.804" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 18:04:56.399" endtime="20230830 18:04:59.804"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:04:59.805" level="INFO"/>
<status status="PASS" starttime="20230830 18:04:59.804" endtime="20230830 18:04:59.805"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:04:59.806" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:04:59.805" endtime="20230830 18:04:59.806"/>
</kw>
<status status="PASS" starttime="20230830 18:04:56.398" endtime="20230830 18:04:59.806"/>
</kw>
<msg timestamp="20230830 18:04:59.806" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:04:56.398" endtime="20230830 18:04:59.806"/>
</kw>
<msg timestamp="20230830 18:04:59.806" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 18:04:56.398" endtime="20230830 18:04:59.806"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:04:59.806" endtime="20230830 18:04:59.807"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:04:59.810" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:05:06.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:05:06.518" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 18:04:59.808" endtime="20230830 18:05:06.518"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:05:06.519" level="INFO"/>
<status status="PASS" starttime="20230830 18:05:06.519" endtime="20230830 18:05:06.519"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:05:06.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:05:06.520" endtime="20230830 18:05:06.520"/>
</kw>
<status status="PASS" starttime="20230830 18:04:59.808" endtime="20230830 18:05:06.520"/>
</kw>
<msg timestamp="20230830 18:05:06.520" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:04:59.807" endtime="20230830 18:05:06.520"/>
</kw>
<msg timestamp="20230830 18:05:06.521" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 18:04:59.807" endtime="20230830 18:05:06.521"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:05:06.521" endtime="20230830 18:05:06.521"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 18:04:52.750" endtime="20230830 18:05:06.521"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230830 18:04:52.698" endtime="20230830 18:05:06.523"/>
</suite>
<suite id="s1-s7" name="Readdata" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s7-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230830 18:05:09.111" level="INFO">${random} = 35668</msg>
<status status="PASS" starttime="20230830 18:05:09.110" endtime="20230830 18:05:09.111"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:05:09.115" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-35668 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:05:14.304" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:05:14.304" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 18:05:09.112" endtime="20230830 18:05:14.304"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:05:14.305" level="INFO"/>
<status status="PASS" starttime="20230830 18:05:14.305" endtime="20230830 18:05:14.305"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:05:14.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:05:14.306" endtime="20230830 18:05:14.306"/>
</kw>
<status status="PASS" starttime="20230830 18:05:09.112" endtime="20230830 18:05:14.306"/>
</kw>
<msg timestamp="20230830 18:05:14.307" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:05:09.112" endtime="20230830 18:05:14.307"/>
</kw>
<msg timestamp="20230830 18:05:14.307" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 18:05:09.111" endtime="20230830 18:05:14.307"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:05:14.307" endtime="20230830 18:05:14.307"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 18:05:09.110" endtime="20230830 18:05:14.308"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230830 18:05:09.061" endtime="20230830 18:05:14.309"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="149990"/>
</suite>
<statistics>
<total>
<stat pass="14" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="14" fail="0" skip="0" id="s1" name="ozone-om-prepare">ozone-om-prepare</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1" name="Om-Prepare">ozone-om-prepare.Om-Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2" name="Om-Cancel-Prepare">ozone-om-prepare.Om-Cancel-Prepare</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Om-Prepare">ozone-om-prepare.Om-Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4" name="Om-Prepared">ozone-om-prepare.Om-Prepared</stat>
<stat pass="2" fail="0" skip="0" id="s1-s5" name="Om-Prepared">ozone-om-prepare.Om-Prepared</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Loaddata">ozone-om-prepare.Loaddata</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7" name="Readdata">ozone-om-prepare.Readdata</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
