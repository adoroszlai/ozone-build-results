<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230830 18:12:07.677" rpa="false" schemaversion="4">
<suite id="s1" name="ozone-topology">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources" line="29">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 18:07:05.994" endtime="20230830 18:07:05.996"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:07:06.002" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:07:06.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:07:06.239" level="INFO">${output} = HTTP/1.1 200 OK
Date: Wed, 30 Aug 2023 18:07:06 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Wed, 30 Aug 2023 17:28:38 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20230830 18:07:05.998" endtime="20230830 18:07:06.239"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:07:06.240" level="INFO">HTTP/1.1 200 OK
Date: Wed, 30 Aug 2023 18:07:06 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Wed, 30 Aug 2023 17:28:38 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20230830 18:07:06.239" endtime="20230830 18:07:06.240"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:07:06.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:07:06.240" endtime="20230830 18:07:06.242"/>
</kw>
<status status="PASS" starttime="20230830 18:07:05.997" endtime="20230830 18:07:06.242"/>
</kw>
<msg timestamp="20230830 18:07:06.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:07:05.997" endtime="20230830 18:07:06.243"/>
</kw>
<msg timestamp="20230830 18:07:06.246" level="INFO">${result} = HTTP/1.1 200 OK
Date: Wed, 30 Aug 2023 18:07:06 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Wed, 30 Aug 2023 17:28:38 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20230830 18:07:05.996" endtime="20230830 18:07:06.247"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:07:06.247" endtime="20230830 18:07:06.248"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 18:07:05.993" endtime="20230830 18:07:06.248"/>
</test>
<test id="s1-s1-t2" name="Basic Freon smoketest" line="34">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 18:07:06.255" endtime="20230830 18:07:06.258"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230830 18:07:06.260" level="INFO">${random} = nWncalUBc7</msg>
<status status="PASS" starttime="20230830 18:07:06.258" endtime="20230830 18:07:06.261"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:07:06.278" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p nWncalUBc7  2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:07:34.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:07:34.874" level="INFO">${output} = 2023-08-30 18:07:12,852 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-30 18:07:13,126 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230830 18:07:06.270" endtime="20230830 18:07:34.874"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:07:34.875" level="INFO">2023-08-30 18:07:12,852 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-30 18:07:13,126 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-08-30 18:07:13,126 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-08-30 18:07:13,271 [main] INFO freon.BaseFreonGenerator: Executing test with prefix nWncalUBc7 and number-of-tests 1
2023-08-30 18:07:13,338 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-30 18:07:14,347 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-30 18:07:15,348 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-30 18:07:16,348 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-30 18:07:17,348 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-30 18:07:18,036 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om1 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:246)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:234)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:227)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:179)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:148)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:484)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:595)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:573)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1227)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1094)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1017)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1899)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:3048)
, while invoking $Proxy25.submitRequest over nodeId=null,nodeAddress=om:9862 after 1 failover attempts. Trying to failover after sleeping for 4000ms. Current retry count: 1.
2023-08-30 18:07:18,349 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-30 18:07:19,349 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-30 18:07:20,350 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-30 18:07:21,350 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-30 18:07:22,351 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-30 18:07:22,664 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2023-08-30 18:07:22,839 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2023-08-30 18:07:23,352 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-30 18:07:24,311 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-08-30 18:07:24,353 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-30 18:07:25,353 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-30 18:07:25,911 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-08-30 18:07:26,353 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-30 18:07:27,355 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-30 18:07:28,356 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-30 18:07:29,357 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-30 18:07:30,357 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-30 18:07:31,362 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-30 18:07:32,386 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-30 18:07:33,387 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-08-30 18:07:34,357 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=10058.813791, max=10058.813791, mean=10058.813791, stddev=0.0, median=10058.813791, p75=10058.813791, p95=10058.813791, p98=10058.813791, p99=10058.813791, p999=10058.813791, mean_rate=0.0875489138977482, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-08-30 18:07:34,360 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 21
2023-08-30 18:07:34,361 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-08-30 18:07:34,361 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230830 18:07:34.874" endtime="20230830 18:07:34.875"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:07:34.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:07:34.875" endtime="20230830 18:07:34.876"/>
</kw>
<status status="PASS" starttime="20230830 18:07:06.270" endtime="20230830 18:07:34.876"/>
</kw>
<msg timestamp="20230830 18:07:34.876" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:07:06.268" endtime="20230830 18:07:34.876"/>
</kw>
<msg timestamp="20230830 18:07:34.876" level="INFO">${result} = 2023-08-30 18:07:12,852 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-30 18:07:13,126 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230830 18:07:06.267" endtime="20230830 18:07:34.876"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:07:34.877" endtime="20230830 18:07:34.877"/>
</kw>
<status status="PASS" starttime="20230830 18:07:06.261" endtime="20230830 18:07:34.877"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:07:34.882" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p nWncalUBc7  2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:07:43.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:07:43.839" level="INFO">${output} = 2023-08-30 18:07:38,038 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-30 18:07:38,167 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230830 18:07:34.880" endtime="20230830 18:07:43.839"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:07:43.840" level="INFO">2023-08-30 18:07:38,038 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-30 18:07:38,167 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-08-30 18:07:38,167 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-08-30 18:07:38,277 [main] INFO freon.BaseFreonGenerator: Executing test with prefix nWncalUBc7 and number-of-tests 1
2023-08-30 18:07:38,370 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-30 18:07:39,377 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-30 18:07:40,378 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-30 18:07:40,965 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-08-30 18:07:41,416 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-30 18:07:42,417 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-30 18:07:43,418 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-08-30 18:07:43,477 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=148.233425, max=148.233425, mean=148.233425, stddev=0.0, median=148.233425, p75=148.233425, p95=148.233425, p98=148.233425, p99=148.233425, p999=148.233425, mean_rate=0.9302204531591449, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-08-30 18:07:43,478 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2023-08-30 18:07:43,478 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-08-30 18:07:43,478 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230830 18:07:43.839" endtime="20230830 18:07:43.840"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:07:43.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:07:43.840" endtime="20230830 18:07:43.841"/>
</kw>
<status status="PASS" starttime="20230830 18:07:34.879" endtime="20230830 18:07:43.841"/>
</kw>
<msg timestamp="20230830 18:07:43.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:07:34.879" endtime="20230830 18:07:43.841"/>
</kw>
<msg timestamp="20230830 18:07:43.841" level="INFO">${result} = 2023-08-30 18:07:38,038 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-30 18:07:38,167 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230830 18:07:34.879" endtime="20230830 18:07:43.841"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:07:43.842" endtime="20230830 18:07:43.842"/>
</kw>
<status status="PASS" starttime="20230830 18:07:34.877" endtime="20230830 18:07:43.842"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 18:07:06.253" endtime="20230830 18:07:43.842"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230830 18:07:05.875" endtime="20230830 18:07:43.844"/>
</suite>
<suite id="s1-s2" name="Cli" source="/opt/hadoop/smoketest/topology/cli.robot">
<test id="s1-s2-t1" name="Run printTopology" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:07:46.983" level="INFO">Running command 'ozone admin printTopology 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:07:52.764" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:07:52.764" level="INFO">${output} = State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230830 18:07:46.980" endtime="20230830 18:07:52.764"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:07:52.766" level="INFO">State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2</msg>
<status status="PASS" starttime="20230830 18:07:52.765" endtime="20230830 18:07:52.766"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:07:52.766" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:07:52.766" endtime="20230830 18:07:52.767"/>
</kw>
<status status="PASS" starttime="20230830 18:07:46.980" endtime="20230830 18:07:52.767"/>
</kw>
<msg timestamp="20230830 18:07:52.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:07:46.979" endtime="20230830 18:07:52.767"/>
</kw>
<msg timestamp="20230830 18:07:52.768" level="INFO">${output} = State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230830 18:07:46.979" endtime="20230830 18:07:52.768"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:07:52.768" endtime="20230830 18:07:52.768"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 18:07:46.978" endtime="20230830 18:07:52.769"/>
</test>
<test id="s1-s2-t2" name="Run printTopology -o" line="30">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology -o</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:07:52.775" level="INFO">Running command 'ozone admin printTopology -o 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:07:57.401" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:07:57.401" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_data...</msg>
<status status="PASS" starttime="20230830 18:07:52.772" endtime="20230830 18:07:57.401"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:07:57.402" level="INFO">State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
Location: /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net) IN_SERVICE
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net) IN_SERVICE</msg>
<status status="PASS" starttime="20230830 18:07:57.401" endtime="20230830 18:07:57.402"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:07:57.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:07:57.402" endtime="20230830 18:07:57.403"/>
</kw>
<status status="PASS" starttime="20230830 18:07:52.771" endtime="20230830 18:07:57.403"/>
</kw>
<msg timestamp="20230830 18:07:57.403" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:07:52.771" endtime="20230830 18:07:57.403"/>
</kw>
<msg timestamp="20230830 18:07:57.404" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_data...</msg>
<status status="PASS" starttime="20230830 18:07:52.771" endtime="20230830 18:07:57.404"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Location: /rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:07:57.404" endtime="20230830 18:07:57.404"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:07:57.404" endtime="20230830 18:07:57.405"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 18:07:52.770" endtime="20230830 18:07:57.405"/>
</test>
<test id="s1-s2-t3" name="Run printTopology --operational-state IN_SERVICE" line="34">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --operational-state IN_SERVICE</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:07:57.414" level="INFO">Running command 'ozone admin printTopology --operational-state IN_SERVICE 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:08:02.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:08:02.060" level="INFO">${output} = State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230830 18:07:57.409" endtime="20230830 18:08:02.060"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:08:02.061" level="INFO">State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2</msg>
<status status="PASS" starttime="20230830 18:08:02.061" endtime="20230830 18:08:02.061"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:08:02.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:08:02.061" endtime="20230830 18:08:02.062"/>
</kw>
<status status="PASS" starttime="20230830 18:07:57.408" endtime="20230830 18:08:02.062"/>
</kw>
<msg timestamp="20230830 18:08:02.062" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:07:57.408" endtime="20230830 18:08:02.063"/>
</kw>
<msg timestamp="20230830 18:08:02.063" level="INFO">${output} = State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230830 18:07:57.407" endtime="20230830 18:08:02.063"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:08:02.063" endtime="20230830 18:08:02.063"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 18:07:57.406" endtime="20230830 18:08:02.064"/>
</test>
<test id="s1-s2-t4" name="Run printTopology --node-state HEALTHY" line="37">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --node-state HEALTHY</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:08:02.069" level="INFO">Running command 'ozone admin printTopology --node-state HEALTHY 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:08:06.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:08:06.654" level="INFO">${output} = State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230830 18:08:02.067" endtime="20230830 18:08:06.654"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:08:06.656" level="INFO">State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2</msg>
<status status="PASS" starttime="20230830 18:08:06.655" endtime="20230830 18:08:06.656"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:08:06.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:08:06.656" endtime="20230830 18:08:06.657"/>
</kw>
<status status="PASS" starttime="20230830 18:08:02.066" endtime="20230830 18:08:06.657"/>
</kw>
<msg timestamp="20230830 18:08:06.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:08:02.066" endtime="20230830 18:08:06.657"/>
</kw>
<msg timestamp="20230830 18:08:06.657" level="INFO">${output} = State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230830 18:08:02.065" endtime="20230830 18:08:06.657"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:08:06.657" endtime="20230830 18:08:06.658"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 18:08:02.065" endtime="20230830 18:08:06.658"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230830 18:07:46.921" endtime="20230830 18:08:06.660"/>
</suite>
<suite id="s1-s3" name="Recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s3-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s3-s1-t1" name="Check if Recon picks up OM data" line="61">
<kw name="Execute" library="os">
<arg>ozone sh volume create recon</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:08:09.608" level="INFO">Running command 'ozone sh volume create recon 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:08:14.679" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:08:14.679" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230830 18:08:09.604" endtime="20230830 18:08:14.679"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:08:14.680" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230830 18:08:14.679" endtime="20230830 18:08:14.680"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:08:14.681" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:08:14.680" endtime="20230830 18:08:14.681"/>
</kw>
<status status="PASS" starttime="20230830 18:08:09.604" endtime="20230830 18:08:14.681"/>
</kw>
<msg timestamp="20230830 18:08:14.681" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:08:09.604" endtime="20230830 18:08:14.681"/>
</kw>
<status status="PASS" starttime="20230830 18:08:09.603" endtime="20230830 18:08:14.681"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create recon/api --layout=LEGACY</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:08:14.687" level="INFO">Running command 'ozone sh bucket create recon/api --layout=LEGACY 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:08:19.569" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:08:19.570" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230830 18:08:14.684" endtime="20230830 18:08:19.570"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:08:19.571" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230830 18:08:19.570" endtime="20230830 18:08:19.571"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:08:19.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:08:19.571" endtime="20230830 18:08:19.572"/>
</kw>
<status status="PASS" starttime="20230830 18:08:14.682" endtime="20230830 18:08:19.572"/>
</kw>
<msg timestamp="20230830 18:08:19.572" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:08:14.682" endtime="20230830 18:08:19.572"/>
</kw>
<status status="PASS" starttime="20230830 18:08:14.681" endtime="20230830 18:08:19.572"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>n=10</arg>
<arg>args=-s 1025 -v recon -b api</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:08:19.577" level="INFO">Running command 'ozone freon ockg  -t 1 -n10 -p ockg -s 1025 -v recon -b api 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:08:30.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:08:30.913" level="INFO">${output} = 2023-08-30 18:08:22,228 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-30 18:08:22,420 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230830 18:08:19.574" endtime="20230830 18:08:30.913"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:08:30.915" level="INFO">2023-08-30 18:08:22,228 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-30 18:08:22,420 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-08-30 18:08:22,421 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-08-30 18:08:22,544 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg and number-of-tests 10
2023-08-30 18:08:22,638 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-08-30 18:08:23,641 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-08-30 18:08:24,642 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-08-30 18:08:24,879 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-08-30 18:08:25,380 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-08-30 18:08:25,643 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-08-30 18:08:26,643 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-08-30 18:08:27,644 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-08-30 18:08:28,647 [Thread-5] INFO freon.ProgressBar: Progress: 30.00 % (3 out of 10)
2023-08-30 18:08:29,647 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2023-08-30 18:08:30,482 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=10, min=94.941411, max=3820.013578, mean=533.1463556194336, stddev=1086.7254592729314, median=133.432345, p75=276.526075, p95=3820.013578, p98=3820.013578, p99=3820.013578, p999=3820.013578, mean_rate=1.5705964578700895, m1=1.2, m5=1.2, m15=1.2, rate_unit=events/second, duration_unit=milliseconds
2023-08-30 18:08:30,484 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 8
2023-08-30 18:08:30,484 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-08-30 18:08:30,484 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20230830 18:08:30.914" endtime="20230830 18:08:30.915"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:08:30.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:08:30.915" endtime="20230830 18:08:30.916"/>
</kw>
<status status="PASS" starttime="20230830 18:08:19.574" endtime="20230830 18:08:30.916"/>
</kw>
<msg timestamp="20230830 18:08:30.916" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:08:19.574" endtime="20230830 18:08:30.916"/>
</kw>
<msg timestamp="20230830 18:08:30.916" level="INFO">${result} = 2023-08-30 18:08:22,228 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-30 18:08:22,420 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230830 18:08:19.573" endtime="20230830 18:08:30.916"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:08:30.916" endtime="20230830 18:08:30.917"/>
</kw>
<status status="PASS" starttime="20230830 18:08:19.572" endtime="20230830 18:08:30.917"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 18:08:30.918" endtime="20230830 18:08:30.918"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:08:30.922" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:08:31.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:08:31.172" level="INFO">${output} = {"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230830 18:08:30.920" endtime="20230830 18:08:31.172"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:08:31.174" level="INFO">{"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null},{"ContainerID":4,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230830 18:08:31.173" endtime="20230830 18:08:31.174"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:08:31.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:08:31.174" endtime="20230830 18:08:31.175"/>
</kw>
<status status="PASS" starttime="20230830 18:08:30.919" endtime="20230830 18:08:31.175"/>
</kw>
<msg timestamp="20230830 18:08:31.175" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:08:30.919" endtime="20230830 18:08:31.175"/>
</kw>
<msg timestamp="20230830 18:08:31.175" level="INFO">${result} = {"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230830 18:08:30.918" endtime="20230830 18:08:31.175"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:08:31.176" endtime="20230830 18:08:31.176"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:08:31.182" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:08:31.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:08:31.210" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230830 18:08:31.178" endtime="20230830 18:08:31.210"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:08:31.212" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230830 18:08:31.211" endtime="20230830 18:08:31.212"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:08:31.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:08:31.212" endtime="20230830 18:08:31.212"/>
</kw>
<status status="PASS" starttime="20230830 18:08:31.178" endtime="20230830 18:08:31.213"/>
</kw>
<msg timestamp="20230830 18:08:31.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:08:31.177" endtime="20230830 18:08:31.213"/>
</kw>
<msg timestamp="20230830 18:08:31.213" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230830 18:08:31.176" endtime="20230830 18:08:31.213"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230830 18:08:31.214" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20230830 18:08:31.213" endtime="20230830 18:08:31.214"/>
</kw>
<status status="FAIL" starttime="20230830 18:08:30.917" endtime="20230830 18:08:31.214"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 18:08:41.216" endtime="20230830 18:08:41.216"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:08:41.221" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:08:41.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:08:41.241" level="INFO">${output} = {"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230830 18:08:41.218" endtime="20230830 18:08:41.241"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:08:41.243" level="INFO">{"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null},{"ContainerID":4,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230830 18:08:41.242" endtime="20230830 18:08:41.243"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:08:41.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:08:41.243" endtime="20230830 18:08:41.244"/>
</kw>
<status status="PASS" starttime="20230830 18:08:41.217" endtime="20230830 18:08:41.244"/>
</kw>
<msg timestamp="20230830 18:08:41.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:08:41.217" endtime="20230830 18:08:41.244"/>
</kw>
<msg timestamp="20230830 18:08:41.245" level="INFO">${result} = {"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230830 18:08:41.216" endtime="20230830 18:08:41.245"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:08:41.245" endtime="20230830 18:08:41.245"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:08:41.250" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:08:41.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:08:41.269" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230830 18:08:41.247" endtime="20230830 18:08:41.269"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:08:41.271" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230830 18:08:41.270" endtime="20230830 18:08:41.271"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:08:41.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:08:41.271" endtime="20230830 18:08:41.272"/>
</kw>
<status status="PASS" starttime="20230830 18:08:41.247" endtime="20230830 18:08:41.272"/>
</kw>
<msg timestamp="20230830 18:08:41.272" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:08:41.246" endtime="20230830 18:08:41.272"/>
</kw>
<msg timestamp="20230830 18:08:41.273" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230830 18:08:41.245" endtime="20230830 18:08:41.273"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230830 18:08:41.274" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20230830 18:08:41.273" endtime="20230830 18:08:41.274"/>
</kw>
<status status="FAIL" starttime="20230830 18:08:41.215" endtime="20230830 18:08:41.274"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 18:08:51.276" endtime="20230830 18:08:51.276"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:08:51.282" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:08:51.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:08:51.297" level="INFO">${output} = {"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230830 18:08:51.278" endtime="20230830 18:08:51.297"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:08:51.299" level="INFO">{"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null},{"ContainerID":4,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230830 18:08:51.298" endtime="20230830 18:08:51.299"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:08:51.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:08:51.299" endtime="20230830 18:08:51.300"/>
</kw>
<status status="PASS" starttime="20230830 18:08:51.277" endtime="20230830 18:08:51.300"/>
</kw>
<msg timestamp="20230830 18:08:51.300" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:08:51.277" endtime="20230830 18:08:51.300"/>
</kw>
<msg timestamp="20230830 18:08:51.300" level="INFO">${result} = {"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230830 18:08:51.276" endtime="20230830 18:08:51.300"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:08:51.301" endtime="20230830 18:08:51.301"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:08:51.305" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:08:51.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:08:51.326" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20230830 18:08:51.303" endtime="20230830 18:08:51.326"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:08:51.327" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20230830 18:08:51.326" endtime="20230830 18:08:51.328"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:08:51.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:08:51.328" endtime="20230830 18:08:51.328"/>
</kw>
<status status="PASS" starttime="20230830 18:08:51.302" endtime="20230830 18:08:51.329"/>
</kw>
<msg timestamp="20230830 18:08:51.329" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:08:51.302" endtime="20230830 18:08:51.330"/>
</kw>
<msg timestamp="20230830 18:08:51.330" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20230830 18:08:51.301" endtime="20230830 18:08:51.330"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:08:51.330" endtime="20230830 18:08:51.331"/>
</kw>
<status status="PASS" starttime="20230830 18:08:51.275" endtime="20230830 18:08:51.331"/>
</kw>
<status status="PASS" starttime="20230830 18:08:30.917" endtime="20230830 18:08:51.331"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 18:08:09.602" endtime="20230830 18:08:51.331"/>
</test>
<test id="s1-s3-s1-t2" name="Check if Recon picks up DN heartbeats" line="71">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/datanodes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:08:51.339" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:08:51.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:08:51.377" level="INFO">${output} = {"totalCount":6,"datanodes":[{"uuid":"4f9eb500-6ab0-44ca-9722-728960729809","hostname":"ozone-topology_datanode_5_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"stor...</msg>
<status status="PASS" starttime="20230830 18:08:51.336" endtime="20230830 18:08:51.377"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:08:51.379" level="INFO">{"totalCount":6,"datanodes":[{"uuid":"4f9eb500-6ab0-44ca-9722-728960729809","hostname":"ozone-topology_datanode_5_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":4096,"remaining":16209633280},"pipelines":[{"pipelineID":"e87187ee-b605-4d3d-8586-4ac5be2f0308","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"1a0c7491-a79e-4fad-be16-0d1a2dafa91b","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"f2f33501-47ac-4f0c-8f03-b33dec78aa7b","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"}],"containers":2,"openContainers":3,"leaderCount":2,"version":"1.4.0-SNAPSHOT","setupTime":1693418753137,"revision":"c75765810956cf4ad983713a032c3994bbc1b6ed","buildDate":"2023-08-30T17:28Z","layoutVersion":7,"networkLocation":"/rack2"},{"uuid":"d4cf016b-cbaf-4d61-8a33-c1c601fc3eb5","hostname":"ozone-topology_datanode_4_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":14336,"remaining":15914115072},"pipelines":[{"pipelineID":"e87187ee-b605-4d3d-8586-4ac5be2f0308","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"1a0c7491-a79e-4fad-be16-0d1a2dafa91b","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"118c8c01-a5d2-49c2-b82b-357d4bd7c810","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"}],"containers":2,"openContainers":3,"leaderCount":2,"version":"1.4.0-SNAPSHOT","setupTime":1693418753420,"revision":"c75765810956cf4ad983713a032c3994bbc1b6ed","buildDate":"2023-08-30T17:28Z","layoutVersion":7,"networkLocation":"/rack2"},{"uuid":"dec8f29d-92bd-4489-b25d-b268da6b7058","hostname":"ozone-topology_datanode_1_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":14336,"remaining":15766458368},"pipelines":[{"pipelineID":"e87187ee-b605-4d3d-8586-4ac5be2f0308","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"1a0c7491-a79e-4fad-be16-0d1a2dafa91b","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"5f4a4598-2e69-4f05-b8f7-3ba094c50f62","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"}],"containers":2,"openContainers":3,"leaderCount":1,"version":"1.4.0-SNAPSHOT","setupTime":1693418752663,"revision":"c75765810956cf4ad983713a032c3994bbc1b6ed","buildDate":"2023-08-30T17:28Z","layoutVersion":7,"networkLocation":"/rack1"},{"uuid":"3c4095cc-a3d5-4e4c-b47f-0b2587186d8b","hostname":"ozone-topology_datanode_3_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":4096,"remaining":16357416960},"pipelines":[{"pipelineID":"ebb7223d-77e0-4092-a8d1-427741b0aa1c","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"32de5d0f-96e5-4274-a9d4-c2bbb85a839e","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"1c3be98b-1818-4e91-82ca-93096bfcc799","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.4.0-SNAPSHOT","setupTime":1693418751672,"revision":"c75765810956cf4ad983713a032c3994bbc1b6ed","buildDate":"2023-08-30T17:28Z","layoutVersion":7,"networkLocation":"/rack1"},{"uuid":"15fa9b6f-07c2-4894-9c79-7cdc5350810b","hostname":"ozone-topology_datanode_2_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":8192,"remaining":15914213376},"pipelines":[{"pipelineID":"ebb7223d-77e0-4092-a8d1-427741b0aa1c","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"1c3be98b-1818-4e91-82ca-93096bfcc799","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"},{"pipelineID":"35166eb7-0928-437e-965a-0d8ec447516b","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":1,"version":"1.4.0-SNAPSHOT","setupTime":1693418753801,"revision":"c75765810956cf4ad983713a032c3994bbc1b6ed","buildDate":"2023-08-30T17:28Z","layoutVersion":7,"networkLocation":"/rack1"},{"uuid":"da37f8f1-06d9-4d54-9e91-915614140875","hostname":"ozone-topology_datanode_6_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":4096,"remaining":15914201088},"pipelines":[{"pipelineID":"ebb7223d-77e0-4092-a8d1-427741b0aa1c","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"40204bea-873f-4d1d-8733-e7ca59f621ba","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"},{"pipelineID":"1c3be98b-1818-4e91-82ca-93096bfcc799","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.4.0-SNAPSHOT","setupTime":1693418751758,"revision":"c75765810956cf4ad983713a032c3994bbc1b6ed","buildDate":"2023-08-30T17:28Z","layoutVersion":7,"networkLocation":"/rack2"}]}</msg>
<status status="PASS" starttime="20230830 18:08:51.378" endtime="20230830 18:08:51.379"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:08:51.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:08:51.379" endtime="20230830 18:08:51.380"/>
</kw>
<status status="PASS" starttime="20230830 18:08:51.335" endtime="20230830 18:08:51.380"/>
</kw>
<msg timestamp="20230830 18:08:51.380" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:08:51.335" endtime="20230830 18:08:51.380"/>
</kw>
<msg timestamp="20230830 18:08:51.381" level="INFO">${result} = {"totalCount":6,"datanodes":[{"uuid":"4f9eb500-6ab0-44ca-9722-728960729809","hostname":"ozone-topology_datanode_5_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"stor...</msg>
<status status="PASS" starttime="20230830 18:08:51.334" endtime="20230830 18:08:51.381"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanodes</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:08:51.381" endtime="20230830 18:08:51.381"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:08:51.381" endtime="20230830 18:08:51.382"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:08:51.382" endtime="20230830 18:08:51.382"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:08:51.383" endtime="20230830 18:08:51.383"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/pipelines</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:08:51.388" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:08:51.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:08:51.435" level="INFO">${output} = {"totalCount":10,"pipelines":[{"pipelineId":"ebb7223d-77e0-4092-a8d1-427741b0aa1c","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"...</msg>
<status status="PASS" starttime="20230830 18:08:51.385" endtime="20230830 18:08:51.435"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:08:51.437" level="INFO">{"totalCount":10,"pipelines":[{"pipelineId":"ebb7223d-77e0-4092-a8d1-427741b0aa1c","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"3c4095cc-a3d5-4e4c-b47f-0b2587186d8b","uuidString":"3c4095cc-a3d5-4e4c-b47f-0b2587186d8b","ipAddress":"10.5.0.6","hostName":"ozone-topology_datanode_3_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-99238882,"decommissioned":false,"maintenance":false,"networkName":"3c4095cc-a3d5-4e4c-b47f-0b2587186d8b","networkLocation":"/rack1","networkFullPath":"/rack1/3c4095cc-a3d5-4e4c-b47f-0b2587186d8b","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"da37f8f1-06d9-4d54-9e91-915614140875","uuidString":"da37f8f1-06d9-4d54-9e91-915614140875","ipAddress":"10.5.0.9","hostName":"ozone-topology_datanode_6_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-831506212,"decommissioned":false,"maintenance":false,"networkName":"da37f8f1-06d9-4d54-9e91-915614140875","networkLocation":"/rack2","networkFullPath":"/rack2/da37f8f1-06d9-4d54-9e91-915614140875","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"15fa9b6f-07c2-4894-9c79-7cdc5350810b","uuidString":"15fa9b6f-07c2-4894-9c79-7cdc5350810b","ipAddress":"10.5.0.5","hostName":"ozone-topology_datanode_2_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1370111889,"decommissioned":false,"maintenance":false,"networkName":"15fa9b6f-07c2-4894-9c79-7cdc5350810b","networkLocation":"/rack1","networkFullPath":"/rack1/15fa9b6f-07c2-4894-9c79-7cdc5350810b","numOfLeaves":1}],"lastLeaderElection":0,"duration":116463,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"e87187ee-b605-4d3d-8586-4ac5be2f0308","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"4f9eb500-6ab0-44ca-9722-728960729809","uuidString":"4f9eb500-6ab0-44ca-9722-728960729809","ipAddress":"10.5.0.8","hostName":"ozone-topology_datanode_5_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":2144363608,"decommissioned":false,"maintenance":false,"networkName":"4f9eb500-6ab0-44ca-9722-728960729809","networkLocation":"/rack2","networkFullPath":"/rack2/4f9eb500-6ab0-44ca-9722-728960729809","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"dec8f29d-92bd-4489-b25d-b268da6b7058","uuidString":"dec8f29d-92bd-4489-b25d-b268da6b7058","ipAddress":"10.5.0.4","hostName":"ozone-topology_datanode_1_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-2034461632,"decommissioned":false,"maintenance":false,"networkName":"dec8f29d-92bd-4489-b25d-b268da6b7058","networkLocation":"/rack1","networkFullPath":"/rack1/dec8f29d-92bd-4489-b25d-b268da6b7058","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"d4cf016b-cbaf-4d61-8a33-c1c601fc3eb5","uuidString":"d4cf016b-cbaf-4d61-8a33-c1c601fc3eb5","ipAddress":"10.5.0.7","hostName":"ozone-topology_datanode_4_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-343556196,"decommissioned":false,"maintenance":false,"networkName":"d4cf016b-cbaf-4d61-8a33-c1c601fc3eb5","networkLocation":"/rack2","networkFullPath":"/rack2/d4cf016b-cbaf-4d61-8a33-c1c601fc3eb5","numOfLeaves":1}],"lastLeaderElection":0,"duration":116693,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"1a0c7491-a79e-4fad-be16-0d1a2dafa91b","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"4f9eb500-6ab0-44ca-9722-728960729809","uuidString":"4f9eb500-6ab0-44ca-9722-728960729809","ipAddress":"10.5.0.8","hostName":"ozone-topology_datanode_5_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":2144363608,"decommissioned":false,"maintenance":false,"networkName":"4f9eb500-6ab0-44ca-9722-728960729809","networkLocation":"/rack2","networkFullPath":"/rack2/4f9eb500-6ab0-44ca-9722-728960729809","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"dec8f29d-92bd-4489-b25d-b268da6b7058","uuidString":"dec8f29d-92bd-4489-b25d-b268da6b7058","ipAddress":"10.5.0.4","hostName":"ozone-topology_datanode_1_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-2034461632,"decommissioned":false,"maintenance":false,"networkName":"dec8f29d-92bd-4489-b25d-b268da6b7058","networkLocation":"/rack1","networkFullPath":"/rack1/dec8f29d-92bd-4489-b25d-b268da6b7058","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"d4cf016b-cbaf-4d61-8a33-c1c601fc3eb5","uuidString":"d4cf016b-cbaf-4d61-8a33-c1c601fc3eb5","ipAddress":"10.5.0.7","hostName":"ozone-topology_datanode_4_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-343556196,"decommissioned":false,"maintenance":false,"networkName":"d4cf016b-cbaf-4d61-8a33-c1c601fc3eb5","networkLocation":"/rack2","networkFullPath":"/rack2/d4cf016b-cbaf-4d61-8a33-c1c601fc3eb5","numOfLeaves":1}],"lastLeaderElection":0,"duration":116414,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"32de5d0f-96e5-4274-a9d4-c2bbb85a839e","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"3c4095cc-a3d5-4e4c-b47f-0b2587186d8b","uuidString":"3c4095cc-a3d5-4e4c-b47f-0b2587186d8b","ipAddress":"10.5.0.6","hostName":"ozone-topology_datanode_3_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-99238882,"decommissioned":false,"maintenance":false,"networkName":"3c4095cc-a3d5-4e4c-b47f-0b2587186d8b","networkLocation":"/rack1","networkFullPath":"/rack1/3c4095cc-a3d5-4e4c-b47f-0b2587186d8b","numOfLeaves":1}],"lastLeaderElection":0,"duration":116405,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"118c8c01-a5d2-49c2-b82b-357d4bd7c810","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"d4cf016b-cbaf-4d61-8a33-c1c601fc3eb5","uuidString":"d4cf016b-cbaf-4d61-8a33-c1c601fc3eb5","ipAddress":"10.5.0.7","hostName":"ozone-topology_datanode_4_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-343556196,"decommissioned":false,"maintenance":false,"networkName":"d4cf016b-cbaf-4d61-8a33-c1c601fc3eb5","networkLocation":"/rack2","networkFullPath":"/rack2/d4cf016b-cbaf-4d61-8a33-c1c601fc3eb5","numOfLeaves":1}],"lastLeaderElection":0,"duration":116495,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"40204bea-873f-4d1d-8733-e7ca59f621ba","status":"OPEN","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"da37f8f1-06d9-4d54-9e91-915614140875","uuidString":"da37f8f1-06d9-4d54-9e91-915614140875","ipAddress":"10.5.0.9","hostName":"ozone-topology_datanode_6_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-831506212,"decommissioned":false,"maintenance":false,"networkName":"da37f8f1-06d9-4d54-9e91-915614140875","networkLocation":"/rack2","networkFullPath":"/rack2/da37f8f1-06d9-4d54-9e91-915614140875","numOfLeaves":1}],"lastLeaderElection":0,"duration":116341,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"5f4a4598-2e69-4f05-b8f7-3ba094c50f62","status":"OPEN","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"dec8f29d-92bd-4489-b25d-b268da6b7058","uuidString":"dec8f29d-92bd-4489-b25d-b268da6b7058","ipAddress":"10.5.0.4","hostName":"ozone-topology_datanode_1_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-2034461632,"decommissioned":false,"maintenance":false,"networkName":"dec8f29d-92bd-4489-b25d-b268da6b7058","networkLocation":"/rack1","networkFullPath":"/rack1/dec8f29d-92bd-4489-b25d-b268da6b7058","numOfLeaves":1}],"lastLeaderElection":0,"duration":116446,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"f2f33501-47ac-4f0c-8f03-b33dec78aa7b","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"4f9eb500-6ab0-44ca-9722-728960729809","uuidString":"4f9eb500-6ab0-44ca-9722-728960729809","ipAddress":"10.5.0.8","hostName":"ozone-topology_datanode_5_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":2144363608,"decommissioned":false,"maintenance":false,"networkName":"4f9eb500-6ab0-44ca-9722-728960729809","networkLocation":"/rack2","networkFullPath":"/rack2/4f9eb500-6ab0-44ca-9722-728960729809","numOfLeaves":1}],"lastLeaderElection":0,"duration":118480,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"1c3be98b-1818-4e91-82ca-93096bfcc799","status":"OPEN","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"3c4095cc-a3d5-4e4c-b47f-0b2587186d8b","uuidString":"3c4095cc-a3d5-4e4c-b47f-0b2587186d8b","ipAddress":"10.5.0.6","hostName":"ozone-topology_datanode_3_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-99238882,"decommissioned":false,"maintenance":false,"networkName":"3c4095cc-a3d5-4e4c-b47f-0b2587186d8b","networkLocation":"/rack1","networkFullPath":"/rack1/3c4095cc-a3d5-4e4c-b47f-0b2587186d8b","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"da37f8f1-06d9-4d54-9e91-915614140875","uuidString":"da37f8f1-06d9-4d54-9e91-915614140875","ipAddress":"10.5.0.9","hostName":"ozone-topology_datanode_6_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-831506212,"decommissioned":false,"maintenance":false,"networkName":"da37f8f1-06d9-4d54-9e91-915614140875","networkLocation":"/rack2","networkFullPath":"/rack2/da37f8f1-06d9-4d54-9e91-915614140875","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"15fa9b6f-07c2-4894-9c79-7cdc5350810b","uuidString":"15fa9b6f-07c2-4894-9c79-7cdc5350810b","ipAddress":"10.5.0.5","hostName":"ozone-topology_datanode_2_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1370111889,"decommissioned":false,"maintenance":false,"networkName":"15fa9b6f-07c2-4894-9c79-7cdc5350810b","networkLocation":"/rack1","networkFullPath":"/rack1/15fa9b6f-07c2-4894-9c79-7cdc5350810b","numOfLeaves":1}],"lastLeaderElection":0,"duration":116386,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"35166eb7-0928-437e-965a-0d8ec447516b","status":"OPEN","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"15fa9b6f-07c2-4894-9c79-7cdc5350810b","uuidString":"15fa9b6f-07c2-4894-9c79-7cdc5350810b","ipAddress":"10.5.0.5","hostName":"ozone-topology_datanode_2_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1370111889,"decommissioned":false,"maintenance":false,"networkName":"15fa9b6f-07c2-4894-9c79-7cdc5350810b","networkLocation":"/rack1","networkFullPath":"/rack1/15fa9b6f-07c2-4894-9c79-7cdc5350810b","numOfLeaves":1}],"lastLeaderElection":0,"duration":116318,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0}]}</msg>
<status status="PASS" starttime="20230830 18:08:51.436" endtime="20230830 18:08:51.437"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:08:51.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:08:51.437" endtime="20230830 18:08:51.438"/>
</kw>
<status status="PASS" starttime="20230830 18:08:51.384" endtime="20230830 18:08:51.438"/>
</kw>
<msg timestamp="20230830 18:08:51.438" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:08:51.384" endtime="20230830 18:08:51.438"/>
</kw>
<msg timestamp="20230830 18:08:51.439" level="INFO">${result} = {"totalCount":10,"pipelines":[{"pipelineId":"ebb7223d-77e0-4092-a8d1-427741b0aa1c","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"...</msg>
<status status="PASS" starttime="20230830 18:08:51.383" endtime="20230830 18:08:51.439"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>pipelines</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:08:51.439" endtime="20230830 18:08:51.439"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:08:51.440" endtime="20230830 18:08:51.440"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:08:51.440" endtime="20230830 18:08:51.441"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:08:51.441" endtime="20230830 18:08:51.441"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:08:51.441" endtime="20230830 18:08:51.442"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:08:51.442" endtime="20230830 18:08:51.442"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/clusterState</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:08:51.447" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:08:51.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:08:51.518" level="INFO">${output} = {"deletedDirs":0,"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":49152,"remaining":96076038144},"containers":4,"missingContainers":0,"openContain...</msg>
<status status="PASS" starttime="20230830 18:08:51.444" endtime="20230830 18:08:51.518"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:08:51.519" level="INFO">{"deletedDirs":0,"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":49152,"remaining":96076038144},"containers":4,"missingContainers":0,"openContainers":4,"deletedContainers":0,"volumes":3,"buckets":2,"keys":11,"keysPendingDeletion":0}</msg>
<status status="PASS" starttime="20230830 18:08:51.518" endtime="20230830 18:08:51.519"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:08:51.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:08:51.519" endtime="20230830 18:08:51.520"/>
</kw>
<status status="PASS" starttime="20230830 18:08:51.443" endtime="20230830 18:08:51.520"/>
</kw>
<msg timestamp="20230830 18:08:51.520" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:08:51.443" endtime="20230830 18:08:51.520"/>
</kw>
<msg timestamp="20230830 18:08:51.520" level="INFO">${result} = {"deletedDirs":0,"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":49152,"remaining":96076038144},"containers":4,"missingContainers":0,"openContain...</msg>
<status status="PASS" starttime="20230830 18:08:51.443" endtime="20230830 18:08:51.520"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"totalDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:08:51.521" endtime="20230830 18:08:51.521"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"healthyDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:08:51.521" endtime="20230830 18:08:51.522"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"pipelines\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:08:51.522" endtime="20230830 18:08:51.522"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:08:51.528" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:08:51.553" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:08:51.553" level="INFO">${output} = [{"containerId":1,"datanodeUuid":"4f9eb500-6ab0-44ca-9722-728960729809","datanodeHost":"ozone-topology_datanode_5_1.ozone-topology_net","firstSeenTime":1693418851419,"lastSeenTime":1693418851419,"stat...</msg>
<status status="PASS" starttime="20230830 18:08:51.525" endtime="20230830 18:08:51.553"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:08:51.554" level="INFO">[{"containerId":1,"datanodeUuid":"4f9eb500-6ab0-44ca-9722-728960729809","datanodeHost":"ozone-topology_datanode_5_1.ozone-topology_net","firstSeenTime":1693418851419,"lastSeenTime":1693418851419,"state":"OPEN","lastBcsId":0},{"containerId":1,"datanodeUuid":"d4cf016b-cbaf-4d61-8a33-c1c601fc3eb5","datanodeHost":"ozone-topology_datanode_4_1.ozone-topology_net","firstSeenTime":1693418850683,"lastSeenTime":1693418850683,"state":"OPEN","lastBcsId":0},{"containerId":1,"datanodeUuid":"dec8f29d-92bd-4489-b25d-b268da6b7058","datanodeHost":"ozone-topology_datanode_1_1.ozone-topology_net","firstSeenTime":1693418850884,"lastSeenTime":1693418850884,"state":"OPEN","lastBcsId":0}]</msg>
<status status="PASS" starttime="20230830 18:08:51.553" endtime="20230830 18:08:51.554"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:08:51.555" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:08:51.555" endtime="20230830 18:08:51.555"/>
</kw>
<status status="PASS" starttime="20230830 18:08:51.524" endtime="20230830 18:08:51.555"/>
</kw>
<msg timestamp="20230830 18:08:51.556" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:08:51.523" endtime="20230830 18:08:51.556"/>
</kw>
<msg timestamp="20230830 18:08:51.556" level="INFO">${result} = [{"containerId":1,"datanodeUuid":"4f9eb500-6ab0-44ca-9722-728960729809","datanodeHost":"ozone-topology_datanode_5_1.ozone-topology_net","firstSeenTime":1693418851419,"lastSeenTime":1693418851419,"stat...</msg>
<status status="PASS" starttime="20230830 18:08:51.522" endtime="20230830 18:08:51.556"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:08:51.556" endtime="20230830 18:08:51.557"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 18:08:51.333" endtime="20230830 18:08:51.557"/>
</test>
<test id="s1-s3-s1-t3" name="Check if Recon Web UI is up" line="94">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 18:08:51.559" endtime="20230830 18:08:51.559"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${ENDPOINT_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:08:51.565" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:08:51.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:08:51.584" level="INFO">${output} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20230830 18:08:51.561" endtime="20230830 18:08:51.584"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:08:51.586" level="INFO">&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.58b4e004.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.95934262.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.60ad2f10.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.2d1dcd24.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20230830 18:08:51.585" endtime="20230830 18:08:51.586"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:08:51.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:08:51.586" endtime="20230830 18:08:51.586"/>
</kw>
<status status="PASS" starttime="20230830 18:08:51.561" endtime="20230830 18:08:51.587"/>
</kw>
<msg timestamp="20230830 18:08:51.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:08:51.560" endtime="20230830 18:08:51.587"/>
</kw>
<msg timestamp="20230830 18:08:51.587" level="INFO">${result} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20230830 18:08:51.560" endtime="20230830 18:08:51.587"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Ozone Recon</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:08:51.587" endtime="20230830 18:08:51.588"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 18:08:51.558" endtime="20230830 18:08:51.588"/>
</test>
<test id="s1-s3-s1-t4" name="Check web UI access" line="99">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:08:51.595" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:08:51.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:08:51.602" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230830 18:08:51.592" endtime="20230830 18:08:51.602"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:08:51.603" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230830 18:08:51.602" endtime="20230830 18:08:51.603"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:08:51.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:08:51.603" endtime="20230830 18:08:51.604"/>
</kw>
<status status="PASS" starttime="20230830 18:08:51.592" endtime="20230830 18:08:51.604"/>
</kw>
<msg timestamp="20230830 18:08:51.604" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:08:51.591" endtime="20230830 18:08:51.604"/>
</kw>
<status status="PASS" starttime="20230830 18:08:51.591" endtime="20230830 18:08:51.604"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:08:51.609" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:08:51.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:08:51.623" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230830 18:08:51.606" endtime="20230830 18:08:51.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:08:51.624" level="INFO">200</msg>
<status status="PASS" starttime="20230830 18:08:51.624" endtime="20230830 18:08:51.624"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:08:51.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:08:51.624" endtime="20230830 18:08:51.625"/>
</kw>
<status status="PASS" starttime="20230830 18:08:51.606" endtime="20230830 18:08:51.626"/>
</kw>
<msg timestamp="20230830 18:08:51.626" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:08:51.606" endtime="20230830 18:08:51.626"/>
</kw>
<msg timestamp="20230830 18:08:51.626" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230830 18:08:51.605" endtime="20230830 18:08:51.626"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 18:08:51.627" endtime="20230830 18:08:51.627"/>
</kw>
<status status="NOT RUN" starttime="20230830 18:08:51.627" endtime="20230830 18:08:51.627"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:08:51.627" endtime="20230830 18:08:51.628"/>
</kw>
<status status="PASS" starttime="20230830 18:08:51.627" endtime="20230830 18:08:51.628"/>
</branch>
<status status="PASS" starttime="20230830 18:08:51.627" endtime="20230830 18:08:51.628"/>
</if>
<status status="PASS" starttime="20230830 18:08:51.604" endtime="20230830 18:08:51.628"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 18:08:51.629" endtime="20230830 18:08:51.629"/>
</kw>
<status status="PASS" starttime="20230830 18:08:51.628" endtime="20230830 18:08:51.629"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:08:51.634" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:08:51.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:08:51.648" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230830 18:08:51.631" endtime="20230830 18:08:51.648"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:08:51.650" level="INFO">200</msg>
<status status="PASS" starttime="20230830 18:08:51.649" endtime="20230830 18:08:51.650"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:08:51.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:08:51.650" endtime="20230830 18:08:51.651"/>
</kw>
<status status="PASS" starttime="20230830 18:08:51.631" endtime="20230830 18:08:51.651"/>
</kw>
<msg timestamp="20230830 18:08:51.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:08:51.630" endtime="20230830 18:08:51.651"/>
</kw>
<msg timestamp="20230830 18:08:51.651" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230830 18:08:51.630" endtime="20230830 18:08:51.651"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 18:08:51.652" endtime="20230830 18:08:51.652"/>
</kw>
<status status="NOT RUN" starttime="20230830 18:08:51.652" endtime="20230830 18:08:51.652"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:08:51.652" endtime="20230830 18:08:51.653"/>
</kw>
<status status="PASS" starttime="20230830 18:08:51.652" endtime="20230830 18:08:51.653"/>
</branch>
<status status="PASS" starttime="20230830 18:08:51.651" endtime="20230830 18:08:51.653"/>
</if>
<status status="PASS" starttime="20230830 18:08:51.629" endtime="20230830 18:08:51.653"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 18:08:51.590" endtime="20230830 18:08:51.653"/>
</test>
<test id="s1-s3-s1-t5" name="Check admin only api access" line="107">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:08:51.659" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:08:51.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:08:51.663" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230830 18:08:51.656" endtime="20230830 18:08:51.663"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:08:51.664" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230830 18:08:51.663" endtime="20230830 18:08:51.664"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:08:51.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:08:51.664" endtime="20230830 18:08:51.665"/>
</kw>
<status status="PASS" starttime="20230830 18:08:51.656" endtime="20230830 18:08:51.665"/>
</kw>
<msg timestamp="20230830 18:08:51.665" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:08:51.655" endtime="20230830 18:08:51.665"/>
</kw>
<status status="PASS" starttime="20230830 18:08:51.655" endtime="20230830 18:08:51.665"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:08:51.670" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:08:51.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:08:51.690" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230830 18:08:51.668" endtime="20230830 18:08:51.690"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:08:51.693" level="INFO">200</msg>
<status status="PASS" starttime="20230830 18:08:51.690" endtime="20230830 18:08:51.694"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:08:51.694" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:08:51.694" endtime="20230830 18:08:51.694"/>
</kw>
<status status="PASS" starttime="20230830 18:08:51.667" endtime="20230830 18:08:51.695"/>
</kw>
<msg timestamp="20230830 18:08:51.695" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:08:51.667" endtime="20230830 18:08:51.695"/>
</kw>
<msg timestamp="20230830 18:08:51.695" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230830 18:08:51.666" endtime="20230830 18:08:51.695"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 18:08:51.697" endtime="20230830 18:08:51.698"/>
</kw>
<status status="NOT RUN" starttime="20230830 18:08:51.697" endtime="20230830 18:08:51.698"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:08:51.698" endtime="20230830 18:08:51.698"/>
</kw>
<status status="PASS" starttime="20230830 18:08:51.698" endtime="20230830 18:08:51.698"/>
</branch>
<status status="PASS" starttime="20230830 18:08:51.695" endtime="20230830 18:08:51.698"/>
</if>
<status status="PASS" starttime="20230830 18:08:51.666" endtime="20230830 18:08:51.698"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 18:08:51.699" endtime="20230830 18:08:51.700"/>
</kw>
<status status="PASS" starttime="20230830 18:08:51.699" endtime="20230830 18:08:51.700"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:08:51.706" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:08:51.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:08:51.721" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230830 18:08:51.703" endtime="20230830 18:08:51.721"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:08:51.723" level="INFO">200</msg>
<status status="PASS" starttime="20230830 18:08:51.722" endtime="20230830 18:08:51.723"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:08:51.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:08:51.723" endtime="20230830 18:08:51.724"/>
</kw>
<status status="PASS" starttime="20230830 18:08:51.701" endtime="20230830 18:08:51.724"/>
</kw>
<msg timestamp="20230830 18:08:51.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:08:51.701" endtime="20230830 18:08:51.724"/>
</kw>
<msg timestamp="20230830 18:08:51.725" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230830 18:08:51.700" endtime="20230830 18:08:51.725"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 18:08:51.725" endtime="20230830 18:08:51.726"/>
</kw>
<status status="NOT RUN" starttime="20230830 18:08:51.725" endtime="20230830 18:08:51.726"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:08:51.726" endtime="20230830 18:08:51.726"/>
</kw>
<status status="PASS" starttime="20230830 18:08:51.726" endtime="20230830 18:08:51.726"/>
</branch>
<status status="PASS" starttime="20230830 18:08:51.725" endtime="20230830 18:08:51.726"/>
</if>
<status status="PASS" starttime="20230830 18:08:51.700" endtime="20230830 18:08:51.726"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 18:08:51.727" endtime="20230830 18:08:51.728"/>
</kw>
<status status="PASS" starttime="20230830 18:08:51.727" endtime="20230830 18:08:51.728"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:08:51.733" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:08:51.749" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:08:51.750" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230830 18:08:51.730" endtime="20230830 18:08:51.750"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:08:51.751" level="INFO">200</msg>
<status status="PASS" starttime="20230830 18:08:51.750" endtime="20230830 18:08:51.751"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:08:51.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:08:51.751" endtime="20230830 18:08:51.752"/>
</kw>
<status status="PASS" starttime="20230830 18:08:51.729" endtime="20230830 18:08:51.752"/>
</kw>
<msg timestamp="20230830 18:08:51.752" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:08:51.729" endtime="20230830 18:08:51.752"/>
</kw>
<msg timestamp="20230830 18:08:51.753" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230830 18:08:51.728" endtime="20230830 18:08:51.753"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 18:08:51.753" endtime="20230830 18:08:51.753"/>
</kw>
<status status="NOT RUN" starttime="20230830 18:08:51.753" endtime="20230830 18:08:51.753"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:08:51.754" endtime="20230830 18:08:51.754"/>
</kw>
<status status="PASS" starttime="20230830 18:08:51.753" endtime="20230830 18:08:51.754"/>
</branch>
<status status="PASS" starttime="20230830 18:08:51.753" endtime="20230830 18:08:51.754"/>
</if>
<status status="PASS" starttime="20230830 18:08:51.728" endtime="20230830 18:08:51.754"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 18:08:51.755" endtime="20230830 18:08:51.755"/>
</kw>
<status status="PASS" starttime="20230830 18:08:51.754" endtime="20230830 18:08:51.755"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:08:51.760" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:08:51.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:08:51.775" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230830 18:08:51.757" endtime="20230830 18:08:51.775"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:08:51.777" level="INFO">200</msg>
<status status="PASS" starttime="20230830 18:08:51.776" endtime="20230830 18:08:51.777"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:08:51.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:08:51.777" endtime="20230830 18:08:51.778"/>
</kw>
<status status="PASS" starttime="20230830 18:08:51.757" endtime="20230830 18:08:51.778"/>
</kw>
<msg timestamp="20230830 18:08:51.778" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:08:51.756" endtime="20230830 18:08:51.778"/>
</kw>
<msg timestamp="20230830 18:08:51.778" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230830 18:08:51.756" endtime="20230830 18:08:51.778"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 18:08:51.779" endtime="20230830 18:08:51.779"/>
</kw>
<status status="NOT RUN" starttime="20230830 18:08:51.778" endtime="20230830 18:08:51.779"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:08:51.779" endtime="20230830 18:08:51.780"/>
</kw>
<status status="PASS" starttime="20230830 18:08:51.779" endtime="20230830 18:08:51.780"/>
</branch>
<status status="PASS" starttime="20230830 18:08:51.778" endtime="20230830 18:08:51.780"/>
</if>
<status status="PASS" starttime="20230830 18:08:51.755" endtime="20230830 18:08:51.780"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 18:08:51.654" endtime="20230830 18:08:51.780"/>
</test>
<test id="s1-s3-s1-t6" name="Check unhealthy, (admin) api access" line="120">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:08:51.786" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:08:51.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:08:51.790" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230830 18:08:51.783" endtime="20230830 18:08:51.790"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:08:51.803" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230830 18:08:51.791" endtime="20230830 18:08:51.803"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:08:51.805" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:08:51.804" endtime="20230830 18:08:51.805"/>
</kw>
<status status="PASS" starttime="20230830 18:08:51.783" endtime="20230830 18:08:51.805"/>
</kw>
<msg timestamp="20230830 18:08:51.805" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:08:51.782" endtime="20230830 18:08:51.805"/>
</kw>
<status status="PASS" starttime="20230830 18:08:51.782" endtime="20230830 18:08:51.806"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:08:51.812" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:08:51.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:08:51.873" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230830 18:08:51.808" endtime="20230830 18:08:51.873"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:08:51.874" level="INFO">200</msg>
<status status="PASS" starttime="20230830 18:08:51.873" endtime="20230830 18:08:51.874"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:08:51.875" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:08:51.874" endtime="20230830 18:08:51.875"/>
</kw>
<status status="PASS" starttime="20230830 18:08:51.808" endtime="20230830 18:08:51.876"/>
</kw>
<msg timestamp="20230830 18:08:51.876" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:08:51.807" endtime="20230830 18:08:51.876"/>
</kw>
<msg timestamp="20230830 18:08:51.876" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230830 18:08:51.807" endtime="20230830 18:08:51.876"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 18:08:51.877" endtime="20230830 18:08:51.877"/>
</kw>
<status status="NOT RUN" starttime="20230830 18:08:51.877" endtime="20230830 18:08:51.877"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:08:51.877" endtime="20230830 18:08:51.878"/>
</kw>
<status status="PASS" starttime="20230830 18:08:51.877" endtime="20230830 18:08:51.878"/>
</branch>
<status status="PASS" starttime="20230830 18:08:51.876" endtime="20230830 18:08:51.878"/>
</if>
<status status="PASS" starttime="20230830 18:08:51.806" endtime="20230830 18:08:51.878"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 18:08:51.881" endtime="20230830 18:08:51.881"/>
</kw>
<status status="PASS" starttime="20230830 18:08:51.880" endtime="20230830 18:08:51.881"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:08:51.887" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:08:51.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:08:51.905" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230830 18:08:51.884" endtime="20230830 18:08:51.906"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:08:51.907" level="INFO">200</msg>
<status status="PASS" starttime="20230830 18:08:51.906" endtime="20230830 18:08:51.907"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:08:51.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:08:51.907" endtime="20230830 18:08:51.908"/>
</kw>
<status status="PASS" starttime="20230830 18:08:51.883" endtime="20230830 18:08:51.908"/>
</kw>
<msg timestamp="20230830 18:08:51.908" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:08:51.883" endtime="20230830 18:08:51.909"/>
</kw>
<msg timestamp="20230830 18:08:51.909" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230830 18:08:51.882" endtime="20230830 18:08:51.909"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 18:08:51.910" endtime="20230830 18:08:51.910"/>
</kw>
<status status="NOT RUN" starttime="20230830 18:08:51.909" endtime="20230830 18:08:51.910"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:08:51.910" endtime="20230830 18:08:51.911"/>
</kw>
<status status="PASS" starttime="20230830 18:08:51.910" endtime="20230830 18:08:51.911"/>
</branch>
<status status="PASS" starttime="20230830 18:08:51.909" endtime="20230830 18:08:51.911"/>
</if>
<status status="PASS" starttime="20230830 18:08:51.881" endtime="20230830 18:08:51.911"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 18:08:51.913" endtime="20230830 18:08:51.914"/>
</kw>
<status status="PASS" starttime="20230830 18:08:51.911" endtime="20230830 18:08:51.916"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:08:51.923" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:08:51.945" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:08:51.945" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230830 18:08:51.920" endtime="20230830 18:08:51.945"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:08:51.946" level="INFO">200</msg>
<status status="PASS" starttime="20230830 18:08:51.946" endtime="20230830 18:08:51.946"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:08:51.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:08:51.947" endtime="20230830 18:08:51.948"/>
</kw>
<status status="PASS" starttime="20230830 18:08:51.920" endtime="20230830 18:08:51.948"/>
</kw>
<msg timestamp="20230830 18:08:51.948" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:08:51.919" endtime="20230830 18:08:51.948"/>
</kw>
<msg timestamp="20230830 18:08:51.948" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230830 18:08:51.918" endtime="20230830 18:08:51.948"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 18:08:51.949" endtime="20230830 18:08:51.949"/>
</kw>
<status status="NOT RUN" starttime="20230830 18:08:51.948" endtime="20230830 18:08:51.949"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:08:51.949" endtime="20230830 18:08:51.950"/>
</kw>
<status status="PASS" starttime="20230830 18:08:51.949" endtime="20230830 18:08:51.950"/>
</branch>
<status status="PASS" starttime="20230830 18:08:51.948" endtime="20230830 18:08:51.950"/>
</if>
<status status="PASS" starttime="20230830 18:08:51.916" endtime="20230830 18:08:51.950"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 18:08:51.951" endtime="20230830 18:08:51.951"/>
</kw>
<status status="PASS" starttime="20230830 18:08:51.950" endtime="20230830 18:08:51.951"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:08:51.956" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:08:51.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:08:51.976" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230830 18:08:51.954" endtime="20230830 18:08:51.976"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:08:51.978" level="INFO">200</msg>
<status status="PASS" starttime="20230830 18:08:51.976" endtime="20230830 18:08:51.978"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:08:51.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:08:51.978" endtime="20230830 18:08:51.979"/>
</kw>
<status status="PASS" starttime="20230830 18:08:51.953" endtime="20230830 18:08:51.979"/>
</kw>
<msg timestamp="20230830 18:08:51.979" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:08:51.952" endtime="20230830 18:08:51.979"/>
</kw>
<msg timestamp="20230830 18:08:51.979" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230830 18:08:51.952" endtime="20230830 18:08:51.979"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 18:08:51.980" endtime="20230830 18:08:51.980"/>
</kw>
<status status="NOT RUN" starttime="20230830 18:08:51.980" endtime="20230830 18:08:51.980"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:08:51.981" endtime="20230830 18:08:51.981"/>
</kw>
<status status="PASS" starttime="20230830 18:08:51.980" endtime="20230830 18:08:51.981"/>
</branch>
<status status="PASS" starttime="20230830 18:08:51.980" endtime="20230830 18:08:51.981"/>
</if>
<status status="PASS" starttime="20230830 18:08:51.951" endtime="20230830 18:08:51.981"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 18:08:51.781" endtime="20230830 18:08:51.981"/>
</test>
<test id="s1-s3-s1-t7" name="Check normal api access" line="133">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:08:51.988" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:08:51.991" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:08:51.991" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230830 18:08:51.984" endtime="20230830 18:08:51.991"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:08:51.992" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230830 18:08:51.991" endtime="20230830 18:08:51.992"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:08:51.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:08:51.992" endtime="20230830 18:08:51.993"/>
</kw>
<status status="PASS" starttime="20230830 18:08:51.984" endtime="20230830 18:08:51.993"/>
</kw>
<msg timestamp="20230830 18:08:51.993" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:08:51.984" endtime="20230830 18:08:51.993"/>
</kw>
<status status="PASS" starttime="20230830 18:08:51.983" endtime="20230830 18:08:51.993"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:08:51.999" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:08:52.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:08:52.024" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230830 18:08:51.996" endtime="20230830 18:08:52.024"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:08:52.025" level="INFO">200</msg>
<status status="PASS" starttime="20230830 18:08:52.024" endtime="20230830 18:08:52.025"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:08:52.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:08:52.026" endtime="20230830 18:08:52.026"/>
</kw>
<status status="PASS" starttime="20230830 18:08:51.996" endtime="20230830 18:08:52.027"/>
</kw>
<msg timestamp="20230830 18:08:52.027" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:08:51.995" endtime="20230830 18:08:52.027"/>
</kw>
<msg timestamp="20230830 18:08:52.027" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230830 18:08:51.995" endtime="20230830 18:08:52.027"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 18:08:52.028" endtime="20230830 18:08:52.028"/>
</kw>
<status status="NOT RUN" starttime="20230830 18:08:52.027" endtime="20230830 18:08:52.028"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:08:52.028" endtime="20230830 18:08:52.029"/>
</kw>
<status status="PASS" starttime="20230830 18:08:52.028" endtime="20230830 18:08:52.029"/>
</branch>
<status status="PASS" starttime="20230830 18:08:52.027" endtime="20230830 18:08:52.029"/>
</if>
<status status="PASS" starttime="20230830 18:08:51.993" endtime="20230830 18:08:52.029"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 18:08:52.032" endtime="20230830 18:08:52.033"/>
</kw>
<status status="PASS" starttime="20230830 18:08:52.029" endtime="20230830 18:08:52.033"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:08:52.040" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:08:52.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:08:52.063" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230830 18:08:52.036" endtime="20230830 18:08:52.063"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:08:52.064" level="INFO">200</msg>
<status status="PASS" starttime="20230830 18:08:52.063" endtime="20230830 18:08:52.064"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:08:52.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:08:52.065" endtime="20230830 18:08:52.065"/>
</kw>
<status status="PASS" starttime="20230830 18:08:52.034" endtime="20230830 18:08:52.065"/>
</kw>
<msg timestamp="20230830 18:08:52.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:08:52.034" endtime="20230830 18:08:52.066"/>
</kw>
<msg timestamp="20230830 18:08:52.066" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230830 18:08:52.033" endtime="20230830 18:08:52.066"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 18:08:52.066" endtime="20230830 18:08:52.066"/>
</kw>
<status status="NOT RUN" starttime="20230830 18:08:52.066" endtime="20230830 18:08:52.067"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:08:52.067" endtime="20230830 18:08:52.067"/>
</kw>
<status status="PASS" starttime="20230830 18:08:52.067" endtime="20230830 18:08:52.067"/>
</branch>
<status status="PASS" starttime="20230830 18:08:52.066" endtime="20230830 18:08:52.067"/>
</if>
<status status="PASS" starttime="20230830 18:08:52.033" endtime="20230830 18:08:52.067"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 18:08:51.982" endtime="20230830 18:08:52.068"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20230830 18:08:09.566" endtime="20230830 18:08:52.070"/>
</suite>
<suite id="s1-s3-s2" name="Recon-Nssummary" source="/opt/hadoop/smoketest/recon/recon-nssummary.robot">
<test id="s1-s3-s2-t1" name="Check volume creation" line="99">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:08:52.088" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:08:52.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:08:52.093" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230830 18:08:52.085" endtime="20230830 18:08:52.093"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:08:52.095" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230830 18:08:52.094" endtime="20230830 18:08:52.095"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:08:52.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:08:52.095" endtime="20230830 18:08:52.095"/>
</kw>
<status status="PASS" starttime="20230830 18:08:52.085" endtime="20230830 18:08:52.096"/>
</kw>
<msg timestamp="20230830 18:08:52.096" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:08:52.084" endtime="20230830 18:08:52.096"/>
</kw>
<status status="PASS" starttime="20230830 18:08:52.084" endtime="20230830 18:08:52.096"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 18:08:52.097" endtime="20230830 18:08:52.097"/>
</kw>
<status status="PASS" starttime="20230830 18:08:52.096" endtime="20230830 18:08:52.097"/>
</kw>
<kw name="Create volume">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230830 18:08:52.099" level="INFO">${random} = encbv</msg>
<status status="PASS" starttime="20230830 18:08:52.098" endtime="20230830 18:08:52.099"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${VOLUME}</arg>
<arg>vol-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230830 18:08:52.099" level="INFO">${VOLUME} = vol-encbv</msg>
<status status="PASS" starttime="20230830 18:08:52.099" endtime="20230830 18:08:52.099"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:08:52.104" level="INFO">Running command 'ozone sh volume create /vol-encbv 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:08:57.057" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:08:57.057" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230830 18:08:52.101" endtime="20230830 18:08:57.057"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:08:57.059" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230830 18:08:57.058" endtime="20230830 18:08:57.059"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:08:57.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:08:57.059" endtime="20230830 18:08:57.060"/>
</kw>
<status status="PASS" starttime="20230830 18:08:52.100" endtime="20230830 18:08:57.060"/>
</kw>
<msg timestamp="20230830 18:08:57.060" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:08:52.100" endtime="20230830 18:08:57.060"/>
</kw>
<msg timestamp="20230830 18:08:57.060" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230830 18:08:52.100" endtime="20230830 18:08:57.060"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:08:57.060" endtime="20230830 18:08:57.061"/>
</kw>
<status status="PASS" starttime="20230830 18:08:52.097" endtime="20230830 18:08:57.061"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 18:08:52.083" endtime="20230830 18:08:57.061"/>
</test>
<test id="s1-s3-s2-t2" name="Check bucket creation" line="104">
<kw name="Create bucket">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230830 18:08:57.064" level="INFO">${random} = sthzf</msg>
<status status="PASS" starttime="20230830 18:08:57.063" endtime="20230830 18:08:57.064"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>buc-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230830 18:08:57.064" level="INFO">${BUCKET} = buc-sthzf</msg>
<status status="PASS" starttime="20230830 18:08:57.064" endtime="20230830 18:08:57.064"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create -l ${BUCKET_LAYOUT} /${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:08:57.069" level="INFO">Running command 'ozone sh bucket create -l FILE_SYSTEM_OPTIMIZED /vol-encbv/buc-sthzf 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:09:01.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:09:01.771" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230830 18:08:57.066" endtime="20230830 18:09:01.771"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:09:01.772" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230830 18:09:01.772" endtime="20230830 18:09:01.772"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:09:01.773" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:09:01.773" endtime="20230830 18:09:01.773"/>
</kw>
<status status="PASS" starttime="20230830 18:08:57.065" endtime="20230830 18:09:01.773"/>
</kw>
<msg timestamp="20230830 18:09:01.773" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:08:57.065" endtime="20230830 18:09:01.774"/>
</kw>
<msg timestamp="20230830 18:09:01.774" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230830 18:08:57.065" endtime="20230830 18:09:01.774"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:09:01.774" endtime="20230830 18:09:01.774"/>
</kw>
<status status="PASS" starttime="20230830 18:08:57.063" endtime="20230830 18:09:01.774"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 18:08:57.062" endtime="20230830 18:09:01.775"/>
</test>
<test id="s1-s3-s2-t3" name="Check keys creation" line="107">
<kw name="Create keys">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/file1 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:09:01.781" level="INFO">Running command 'ozone sh key put /vol-encbv/buc-sthzf/file1 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:09:09.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:09:09.595" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230830 18:09:01.778" endtime="20230830 18:09:09.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:09:09.596" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230830 18:09:09.596" endtime="20230830 18:09:09.597"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:09:09.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:09:09.597" endtime="20230830 18:09:09.597"/>
</kw>
<status status="PASS" starttime="20230830 18:09:01.777" endtime="20230830 18:09:09.597"/>
</kw>
<msg timestamp="20230830 18:09:09.597" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:09:01.777" endtime="20230830 18:09:09.598"/>
</kw>
<msg timestamp="20230830 18:09:09.598" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230830 18:09:01.777" endtime="20230830 18:09:09.598"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:09:09.598" endtime="20230830 18:09:09.598"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/dir1/dir2/file2 HISTORY.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:09:09.603" level="INFO">Running command 'ozone sh key put /vol-encbv/buc-sthzf/dir1/dir2/file2 HISTORY.md 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:09:17.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:09:17.032" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230830 18:09:09.600" endtime="20230830 18:09:17.032"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:09:17.033" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230830 18:09:17.033" endtime="20230830 18:09:17.034"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:09:17.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:09:17.034" endtime="20230830 18:09:17.034"/>
</kw>
<status status="PASS" starttime="20230830 18:09:09.600" endtime="20230830 18:09:17.035"/>
</kw>
<msg timestamp="20230830 18:09:17.035" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:09:09.599" endtime="20230830 18:09:17.035"/>
</kw>
<msg timestamp="20230830 18:09:17.035" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230830 18:09:09.599" endtime="20230830 18:09:17.035"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:09:17.035" endtime="20230830 18:09:17.035"/>
</kw>
<status status="PASS" starttime="20230830 18:09:01.776" endtime="20230830 18:09:17.036"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 18:09:01.775" endtime="20230830 18:09:17.036"/>
</test>
<test id="s1-s3-s2-t4" name="Check Summary api access" line="110">
<kw name="Check Access">
<arg>${SUMMARY_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:09:17.042" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:09:17.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:09:17.046" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230830 18:09:17.039" endtime="20230830 18:09:17.046"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:09:17.047" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230830 18:09:17.046" endtime="20230830 18:09:17.047"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:09:17.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:09:17.047" endtime="20230830 18:09:17.049"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.039" endtime="20230830 18:09:17.049"/>
</kw>
<msg timestamp="20230830 18:09:17.049" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:09:17.039" endtime="20230830 18:09:17.049"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.038" endtime="20230830 18:09:17.049"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:09:17.054" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:09:17.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:09:17.093" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230830 18:09:17.051" endtime="20230830 18:09:17.093"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:09:17.095" level="INFO">200</msg>
<status status="PASS" starttime="20230830 18:09:17.094" endtime="20230830 18:09:17.095"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:09:17.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:09:17.095" endtime="20230830 18:09:17.096"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.051" endtime="20230830 18:09:17.096"/>
</kw>
<msg timestamp="20230830 18:09:17.096" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:09:17.051" endtime="20230830 18:09:17.096"/>
</kw>
<msg timestamp="20230830 18:09:17.096" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230830 18:09:17.050" endtime="20230830 18:09:17.096"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 18:09:17.097" endtime="20230830 18:09:17.097"/>
</kw>
<status status="NOT RUN" starttime="20230830 18:09:17.096" endtime="20230830 18:09:17.097"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:09:17.097" endtime="20230830 18:09:17.098"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.097" endtime="20230830 18:09:17.098"/>
</branch>
<status status="PASS" starttime="20230830 18:09:17.096" endtime="20230830 18:09:17.098"/>
</if>
<status status="PASS" starttime="20230830 18:09:17.050" endtime="20230830 18:09:17.098"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 18:09:17.099" endtime="20230830 18:09:17.099"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.098" endtime="20230830 18:09:17.099"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:09:17.103" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:09:17.119" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:09:17.119" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230830 18:09:17.101" endtime="20230830 18:09:17.119"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:09:17.120" level="INFO">200</msg>
<status status="PASS" starttime="20230830 18:09:17.119" endtime="20230830 18:09:17.120"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:09:17.121" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:09:17.120" endtime="20230830 18:09:17.121"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.100" endtime="20230830 18:09:17.121"/>
</kw>
<msg timestamp="20230830 18:09:17.121" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:09:17.100" endtime="20230830 18:09:17.121"/>
</kw>
<msg timestamp="20230830 18:09:17.121" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230830 18:09:17.100" endtime="20230830 18:09:17.121"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 18:09:17.122" endtime="20230830 18:09:17.122"/>
</kw>
<status status="NOT RUN" starttime="20230830 18:09:17.121" endtime="20230830 18:09:17.122"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:09:17.122" endtime="20230830 18:09:17.123"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.122" endtime="20230830 18:09:17.123"/>
</branch>
<status status="PASS" starttime="20230830 18:09:17.121" endtime="20230830 18:09:17.123"/>
</if>
<status status="PASS" starttime="20230830 18:09:17.099" endtime="20230830 18:09:17.123"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 18:09:17.124" endtime="20230830 18:09:17.124"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.123" endtime="20230830 18:09:17.124"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:09:17.155" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:09:17.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:09:17.156" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230830 18:09:17.126" endtime="20230830 18:09:17.156"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:09:17.157" level="INFO">200</msg>
<status status="PASS" starttime="20230830 18:09:17.156" endtime="20230830 18:09:17.157"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:09:17.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:09:17.157" endtime="20230830 18:09:17.157"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.125" endtime="20230830 18:09:17.158"/>
</kw>
<msg timestamp="20230830 18:09:17.158" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:09:17.125" endtime="20230830 18:09:17.158"/>
</kw>
<msg timestamp="20230830 18:09:17.158" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230830 18:09:17.125" endtime="20230830 18:09:17.158"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 18:09:17.158" endtime="20230830 18:09:17.158"/>
</kw>
<status status="NOT RUN" starttime="20230830 18:09:17.158" endtime="20230830 18:09:17.159"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:09:17.159" endtime="20230830 18:09:17.159"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.159" endtime="20230830 18:09:17.159"/>
</branch>
<status status="PASS" starttime="20230830 18:09:17.158" endtime="20230830 18:09:17.159"/>
</if>
<status status="PASS" starttime="20230830 18:09:17.124" endtime="20230830 18:09:17.159"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 18:09:17.160" endtime="20230830 18:09:17.160"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.159" endtime="20230830 18:09:17.160"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:09:17.164" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:09:17.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:09:17.181" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230830 18:09:17.162" endtime="20230830 18:09:17.181"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:09:17.182" level="INFO">200</msg>
<status status="PASS" starttime="20230830 18:09:17.181" endtime="20230830 18:09:17.182"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:09:17.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:09:17.182" endtime="20230830 18:09:17.182"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.161" endtime="20230830 18:09:17.183"/>
</kw>
<msg timestamp="20230830 18:09:17.183" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:09:17.161" endtime="20230830 18:09:17.183"/>
</kw>
<msg timestamp="20230830 18:09:17.183" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230830 18:09:17.161" endtime="20230830 18:09:17.183"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 18:09:17.183" endtime="20230830 18:09:17.184"/>
</kw>
<status status="NOT RUN" starttime="20230830 18:09:17.183" endtime="20230830 18:09:17.184"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:09:17.184" endtime="20230830 18:09:17.184"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.184" endtime="20230830 18:09:17.184"/>
</branch>
<status status="PASS" starttime="20230830 18:09:17.183" endtime="20230830 18:09:17.184"/>
</if>
<status status="PASS" starttime="20230830 18:09:17.160" endtime="20230830 18:09:17.184"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.038" endtime="20230830 18:09:17.184"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 18:09:17.037" endtime="20230830 18:09:17.185"/>
</test>
<test id="s1-s3-s2-t5" name="Check Disk Usage api access" line="113">
<kw name="Check Access">
<arg>${DISK_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:09:17.190" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:09:17.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:09:17.194" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230830 18:09:17.188" endtime="20230830 18:09:17.194"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:09:17.195" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230830 18:09:17.194" endtime="20230830 18:09:17.195"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:09:17.195" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:09:17.195" endtime="20230830 18:09:17.196"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.188" endtime="20230830 18:09:17.196"/>
</kw>
<msg timestamp="20230830 18:09:17.196" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:09:17.187" endtime="20230830 18:09:17.196"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.187" endtime="20230830 18:09:17.196"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:09:17.201" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:09:17.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:09:17.223" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230830 18:09:17.198" endtime="20230830 18:09:17.223"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:09:17.224" level="INFO">200</msg>
<status status="PASS" starttime="20230830 18:09:17.223" endtime="20230830 18:09:17.224"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:09:17.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:09:17.225" endtime="20230830 18:09:17.225"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.198" endtime="20230830 18:09:17.225"/>
</kw>
<msg timestamp="20230830 18:09:17.226" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:09:17.198" endtime="20230830 18:09:17.226"/>
</kw>
<msg timestamp="20230830 18:09:17.226" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230830 18:09:17.197" endtime="20230830 18:09:17.226"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 18:09:17.227" endtime="20230830 18:09:17.227"/>
</kw>
<status status="NOT RUN" starttime="20230830 18:09:17.226" endtime="20230830 18:09:17.227"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:09:17.227" endtime="20230830 18:09:17.227"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.227" endtime="20230830 18:09:17.227"/>
</branch>
<status status="PASS" starttime="20230830 18:09:17.226" endtime="20230830 18:09:17.227"/>
</if>
<status status="PASS" starttime="20230830 18:09:17.196" endtime="20230830 18:09:17.228"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 18:09:17.228" endtime="20230830 18:09:17.229"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.228" endtime="20230830 18:09:17.229"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:09:17.235" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:09:17.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:09:17.252" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230830 18:09:17.231" endtime="20230830 18:09:17.252"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:09:17.253" level="INFO">200</msg>
<status status="PASS" starttime="20230830 18:09:17.252" endtime="20230830 18:09:17.253"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:09:17.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:09:17.253" endtime="20230830 18:09:17.254"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.231" endtime="20230830 18:09:17.254"/>
</kw>
<msg timestamp="20230830 18:09:17.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:09:17.230" endtime="20230830 18:09:17.255"/>
</kw>
<msg timestamp="20230830 18:09:17.255" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230830 18:09:17.230" endtime="20230830 18:09:17.255"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 18:09:17.256" endtime="20230830 18:09:17.256"/>
</kw>
<status status="NOT RUN" starttime="20230830 18:09:17.255" endtime="20230830 18:09:17.256"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:09:17.256" endtime="20230830 18:09:17.256"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.256" endtime="20230830 18:09:17.256"/>
</branch>
<status status="PASS" starttime="20230830 18:09:17.255" endtime="20230830 18:09:17.256"/>
</if>
<status status="PASS" starttime="20230830 18:09:17.229" endtime="20230830 18:09:17.256"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 18:09:17.257" endtime="20230830 18:09:17.258"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.257" endtime="20230830 18:09:17.258"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:09:17.263" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:09:17.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:09:17.280" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230830 18:09:17.260" endtime="20230830 18:09:17.280"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:09:17.282" level="INFO">200</msg>
<status status="PASS" starttime="20230830 18:09:17.281" endtime="20230830 18:09:17.282"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:09:17.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:09:17.282" endtime="20230830 18:09:17.283"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.259" endtime="20230830 18:09:17.283"/>
</kw>
<msg timestamp="20230830 18:09:17.283" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:09:17.259" endtime="20230830 18:09:17.283"/>
</kw>
<msg timestamp="20230830 18:09:17.283" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230830 18:09:17.258" endtime="20230830 18:09:17.283"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 18:09:17.284" endtime="20230830 18:09:17.284"/>
</kw>
<status status="NOT RUN" starttime="20230830 18:09:17.284" endtime="20230830 18:09:17.284"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:09:17.284" endtime="20230830 18:09:17.285"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.284" endtime="20230830 18:09:17.285"/>
</branch>
<status status="PASS" starttime="20230830 18:09:17.284" endtime="20230830 18:09:17.285"/>
</if>
<status status="PASS" starttime="20230830 18:09:17.258" endtime="20230830 18:09:17.285"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 18:09:17.285" endtime="20230830 18:09:17.286"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.285" endtime="20230830 18:09:17.286"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:09:17.290" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:09:17.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:09:17.307" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230830 18:09:17.288" endtime="20230830 18:09:17.307"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:09:17.308" level="INFO">200</msg>
<status status="PASS" starttime="20230830 18:09:17.308" endtime="20230830 18:09:17.308"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:09:17.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:09:17.309" endtime="20230830 18:09:17.309"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.287" endtime="20230830 18:09:17.309"/>
</kw>
<msg timestamp="20230830 18:09:17.309" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:09:17.287" endtime="20230830 18:09:17.309"/>
</kw>
<msg timestamp="20230830 18:09:17.310" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230830 18:09:17.287" endtime="20230830 18:09:17.310"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 18:09:17.311" endtime="20230830 18:09:17.311"/>
</kw>
<status status="NOT RUN" starttime="20230830 18:09:17.310" endtime="20230830 18:09:17.311"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:09:17.312" endtime="20230830 18:09:17.312"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.311" endtime="20230830 18:09:17.312"/>
</branch>
<status status="PASS" starttime="20230830 18:09:17.310" endtime="20230830 18:09:17.312"/>
</if>
<status status="PASS" starttime="20230830 18:09:17.286" endtime="20230830 18:09:17.312"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.186" endtime="20230830 18:09:17.312"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 18:09:17.186" endtime="20230830 18:09:17.313"/>
</test>
<test id="s1-s3-s2-t6" name="Check Quota Usage api access" line="116">
<kw name="Check Access">
<arg>${QUOTA_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:09:17.319" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:09:17.323" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:09:17.323" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230830 18:09:17.316" endtime="20230830 18:09:17.323"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:09:17.324" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230830 18:09:17.324" endtime="20230830 18:09:17.324"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:09:17.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:09:17.325" endtime="20230830 18:09:17.325"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.316" endtime="20230830 18:09:17.325"/>
</kw>
<msg timestamp="20230830 18:09:17.325" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:09:17.315" endtime="20230830 18:09:17.326"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.315" endtime="20230830 18:09:17.326"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:09:17.331" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:09:17.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:09:17.380" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230830 18:09:17.328" endtime="20230830 18:09:17.380"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:09:17.381" level="INFO">200</msg>
<status status="PASS" starttime="20230830 18:09:17.381" endtime="20230830 18:09:17.382"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:09:17.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:09:17.382" endtime="20230830 18:09:17.382"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.328" endtime="20230830 18:09:17.382"/>
</kw>
<msg timestamp="20230830 18:09:17.382" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:09:17.327" endtime="20230830 18:09:17.383"/>
</kw>
<msg timestamp="20230830 18:09:17.383" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230830 18:09:17.327" endtime="20230830 18:09:17.383"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 18:09:17.383" endtime="20230830 18:09:17.383"/>
</kw>
<status status="NOT RUN" starttime="20230830 18:09:17.383" endtime="20230830 18:09:17.383"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:09:17.384" endtime="20230830 18:09:17.384"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.383" endtime="20230830 18:09:17.384"/>
</branch>
<status status="PASS" starttime="20230830 18:09:17.383" endtime="20230830 18:09:17.384"/>
</if>
<status status="PASS" starttime="20230830 18:09:17.326" endtime="20230830 18:09:17.384"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 18:09:17.385" endtime="20230830 18:09:17.385"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.384" endtime="20230830 18:09:17.385"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:09:17.390" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:09:17.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:09:17.409" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230830 18:09:17.387" endtime="20230830 18:09:17.409"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:09:17.410" level="INFO">200</msg>
<status status="PASS" starttime="20230830 18:09:17.409" endtime="20230830 18:09:17.410"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:09:17.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:09:17.410" endtime="20230830 18:09:17.411"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.387" endtime="20230830 18:09:17.411"/>
</kw>
<msg timestamp="20230830 18:09:17.411" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:09:17.386" endtime="20230830 18:09:17.411"/>
</kw>
<msg timestamp="20230830 18:09:17.412" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230830 18:09:17.386" endtime="20230830 18:09:17.412"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 18:09:17.412" endtime="20230830 18:09:17.414"/>
</kw>
<status status="NOT RUN" starttime="20230830 18:09:17.412" endtime="20230830 18:09:17.414"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:09:17.414" endtime="20230830 18:09:17.415"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.414" endtime="20230830 18:09:17.415"/>
</branch>
<status status="PASS" starttime="20230830 18:09:17.412" endtime="20230830 18:09:17.415"/>
</if>
<status status="PASS" starttime="20230830 18:09:17.385" endtime="20230830 18:09:17.415"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 18:09:17.416" endtime="20230830 18:09:17.416"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.415" endtime="20230830 18:09:17.416"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:09:17.421" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:09:17.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:09:17.439" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230830 18:09:17.418" endtime="20230830 18:09:17.439"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:09:17.440" level="INFO">200</msg>
<status status="PASS" starttime="20230830 18:09:17.439" endtime="20230830 18:09:17.440"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:09:17.441" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:09:17.441" endtime="20230830 18:09:17.441"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.418" endtime="20230830 18:09:17.442"/>
</kw>
<msg timestamp="20230830 18:09:17.442" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:09:17.417" endtime="20230830 18:09:17.442"/>
</kw>
<msg timestamp="20230830 18:09:17.442" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230830 18:09:17.417" endtime="20230830 18:09:17.442"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 18:09:17.443" endtime="20230830 18:09:17.443"/>
</kw>
<status status="NOT RUN" starttime="20230830 18:09:17.442" endtime="20230830 18:09:17.443"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:09:17.443" endtime="20230830 18:09:17.443"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.443" endtime="20230830 18:09:17.443"/>
</branch>
<status status="PASS" starttime="20230830 18:09:17.442" endtime="20230830 18:09:17.444"/>
</if>
<status status="PASS" starttime="20230830 18:09:17.416" endtime="20230830 18:09:17.444"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 18:09:17.444" endtime="20230830 18:09:17.445"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.444" endtime="20230830 18:09:17.445"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:09:17.450" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:09:17.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:09:17.471" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230830 18:09:17.447" endtime="20230830 18:09:17.471"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:09:17.472" level="INFO">200</msg>
<status status="PASS" starttime="20230830 18:09:17.471" endtime="20230830 18:09:17.472"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:09:17.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:09:17.472" endtime="20230830 18:09:17.473"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.447" endtime="20230830 18:09:17.473"/>
</kw>
<msg timestamp="20230830 18:09:17.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:09:17.446" endtime="20230830 18:09:17.473"/>
</kw>
<msg timestamp="20230830 18:09:17.473" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230830 18:09:17.445" endtime="20230830 18:09:17.474"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 18:09:17.474" endtime="20230830 18:09:17.474"/>
</kw>
<status status="NOT RUN" starttime="20230830 18:09:17.474" endtime="20230830 18:09:17.475"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:09:17.475" endtime="20230830 18:09:17.475"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.475" endtime="20230830 18:09:17.475"/>
</branch>
<status status="PASS" starttime="20230830 18:09:17.474" endtime="20230830 18:09:17.475"/>
</if>
<status status="PASS" starttime="20230830 18:09:17.445" endtime="20230830 18:09:17.476"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.314" endtime="20230830 18:09:17.476"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 18:09:17.313" endtime="20230830 18:09:17.476"/>
</test>
<test id="s1-s3-s2-t7" name="Check File Size Distribution api access" line="119">
<kw name="Check Access">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:09:17.483" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:09:17.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:09:17.487" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230830 18:09:17.481" endtime="20230830 18:09:17.487"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:09:17.488" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230830 18:09:17.488" endtime="20230830 18:09:17.488"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:09:17.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:09:17.488" endtime="20230830 18:09:17.489"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.480" endtime="20230830 18:09:17.489"/>
</kw>
<msg timestamp="20230830 18:09:17.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:09:17.480" endtime="20230830 18:09:17.489"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.479" endtime="20230830 18:09:17.490"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:09:17.494" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:09:17.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:09:17.518" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230830 18:09:17.492" endtime="20230830 18:09:17.518"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:09:17.519" level="INFO">200</msg>
<status status="PASS" starttime="20230830 18:09:17.519" endtime="20230830 18:09:17.519"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:09:17.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:09:17.520" endtime="20230830 18:09:17.520"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.491" endtime="20230830 18:09:17.520"/>
</kw>
<msg timestamp="20230830 18:09:17.520" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:09:17.491" endtime="20230830 18:09:17.521"/>
</kw>
<msg timestamp="20230830 18:09:17.521" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230830 18:09:17.490" endtime="20230830 18:09:17.521"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 18:09:17.521" endtime="20230830 18:09:17.521"/>
</kw>
<status status="NOT RUN" starttime="20230830 18:09:17.521" endtime="20230830 18:09:17.521"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:09:17.522" endtime="20230830 18:09:17.522"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.522" endtime="20230830 18:09:17.522"/>
</branch>
<status status="PASS" starttime="20230830 18:09:17.521" endtime="20230830 18:09:17.522"/>
</if>
<status status="PASS" starttime="20230830 18:09:17.490" endtime="20230830 18:09:17.522"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 18:09:17.523" endtime="20230830 18:09:17.524"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.523" endtime="20230830 18:09:17.524"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:09:17.529" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:09:17.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:09:17.544" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230830 18:09:17.526" endtime="20230830 18:09:17.544"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:09:17.546" level="INFO">200</msg>
<status status="PASS" starttime="20230830 18:09:17.545" endtime="20230830 18:09:17.546"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:09:17.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:09:17.546" endtime="20230830 18:09:17.547"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.525" endtime="20230830 18:09:17.547"/>
</kw>
<msg timestamp="20230830 18:09:17.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:09:17.525" endtime="20230830 18:09:17.547"/>
</kw>
<msg timestamp="20230830 18:09:17.548" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230830 18:09:17.524" endtime="20230830 18:09:17.548"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 18:09:17.548" endtime="20230830 18:09:17.548"/>
</kw>
<status status="NOT RUN" starttime="20230830 18:09:17.548" endtime="20230830 18:09:17.548"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:09:17.549" endtime="20230830 18:09:17.549"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.548" endtime="20230830 18:09:17.549"/>
</branch>
<status status="PASS" starttime="20230830 18:09:17.548" endtime="20230830 18:09:17.549"/>
</if>
<status status="PASS" starttime="20230830 18:09:17.524" endtime="20230830 18:09:17.549"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 18:09:17.550" endtime="20230830 18:09:17.550"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.549" endtime="20230830 18:09:17.550"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:09:17.555" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:09:17.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:09:17.574" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230830 18:09:17.552" endtime="20230830 18:09:17.574"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:09:17.575" level="INFO">200</msg>
<status status="PASS" starttime="20230830 18:09:17.574" endtime="20230830 18:09:17.575"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:09:17.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:09:17.576" endtime="20230830 18:09:17.576"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.552" endtime="20230830 18:09:17.576"/>
</kw>
<msg timestamp="20230830 18:09:17.576" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:09:17.552" endtime="20230830 18:09:17.577"/>
</kw>
<msg timestamp="20230830 18:09:17.577" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230830 18:09:17.551" endtime="20230830 18:09:17.577"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 18:09:17.577" endtime="20230830 18:09:17.578"/>
</kw>
<status status="NOT RUN" starttime="20230830 18:09:17.577" endtime="20230830 18:09:17.578"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:09:17.578" endtime="20230830 18:09:17.578"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.578" endtime="20230830 18:09:17.578"/>
</branch>
<status status="PASS" starttime="20230830 18:09:17.577" endtime="20230830 18:09:17.578"/>
</if>
<status status="PASS" starttime="20230830 18:09:17.550" endtime="20230830 18:09:17.578"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 18:09:17.579" endtime="20230830 18:09:17.580"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.579" endtime="20230830 18:09:17.580"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:09:17.584" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:09:17.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:09:17.598" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230830 18:09:17.582" endtime="20230830 18:09:17.599"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:09:17.600" level="INFO">200</msg>
<status status="PASS" starttime="20230830 18:09:17.599" endtime="20230830 18:09:17.600"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:09:17.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:09:17.600" endtime="20230830 18:09:17.601"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.581" endtime="20230830 18:09:17.601"/>
</kw>
<msg timestamp="20230830 18:09:17.601" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:09:17.581" endtime="20230830 18:09:17.601"/>
</kw>
<msg timestamp="20230830 18:09:17.601" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230830 18:09:17.580" endtime="20230830 18:09:17.601"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 18:09:17.602" endtime="20230830 18:09:17.602"/>
</kw>
<status status="NOT RUN" starttime="20230830 18:09:17.602" endtime="20230830 18:09:17.602"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:09:17.602" endtime="20230830 18:09:17.603"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.602" endtime="20230830 18:09:17.603"/>
</branch>
<status status="PASS" starttime="20230830 18:09:17.601" endtime="20230830 18:09:17.603"/>
</if>
<status status="PASS" starttime="20230830 18:09:17.580" endtime="20230830 18:09:17.603"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.479" endtime="20230830 18:09:17.603"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 18:09:17.478" endtime="20230830 18:09:17.603"/>
</test>
<test id="s1-s3-s2-t8" name="Check Recon Namespace Summary Root" line="122">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/</arg>
<arg>ROOT</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:09:17.611" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:09:17.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:09:17.628" level="INFO">${output} = {"path":"","type":"ROOT","countStats":{"numVolume":3,"numBucket":2,"numDir":1,"numKey":1},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTim...</msg>
<status status="PASS" starttime="20230830 18:09:17.609" endtime="20230830 18:09:17.628"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:09:17.630" level="INFO">{"path":"","type":"ROOT","countStats":{"numVolume":3,"numBucket":2,"numDir":1,"numKey":1},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":0,"modificationTime":0,"acls":null},"status":"OK"}</msg>
<status status="PASS" starttime="20230830 18:09:17.629" endtime="20230830 18:09:17.630"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:09:17.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:09:17.630" endtime="20230830 18:09:17.630"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.608" endtime="20230830 18:09:17.631"/>
</kw>
<msg timestamp="20230830 18:09:17.631" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:09:17.608" endtime="20230830 18:09:17.631"/>
</kw>
<msg timestamp="20230830 18:09:17.631" level="INFO">${result} = {"path":"","type":"ROOT","countStats":{"numVolume":3,"numBucket":2,"numDir":1,"numKey":1},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTim...</msg>
<status status="PASS" starttime="20230830 18:09:17.608" endtime="20230830 18:09:17.631"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:09:17.631" endtime="20230830 18:09:17.631"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:09:17.632" endtime="20230830 18:09:17.632"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.607" endtime="20230830 18:09:17.632"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.606" endtime="20230830 18:09:17.632"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.606" endtime="20230830 18:09:17.632"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 18:09:17.605" endtime="20230830 18:09:17.633"/>
</test>
<test id="s1-s3-s2-t9" name="Check Recon Namespace Summary Volume" line="125">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}</arg>
<arg>VOLUME</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:09:17.640" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-encbv 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:09:17.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:09:17.655" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230830 18:09:17.638" endtime="20230830 18:09:17.655"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:09:17.656" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230830 18:09:17.655" endtime="20230830 18:09:17.656"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:09:17.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:09:17.656" endtime="20230830 18:09:17.657"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.637" endtime="20230830 18:09:17.657"/>
</kw>
<msg timestamp="20230830 18:09:17.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:09:17.637" endtime="20230830 18:09:17.657"/>
</kw>
<msg timestamp="20230830 18:09:17.658" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230830 18:09:17.637" endtime="20230830 18:09:17.658"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230830 18:09:17.658" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230830 18:09:17.658" endtime="20230830 18:09:17.658"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 18:09:17.659" endtime="20230830 18:09:17.659"/>
</kw>
<status status="FAIL" starttime="20230830 18:09:17.636" endtime="20230830 18:09:17.659"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:09:27.665" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-encbv 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:09:27.680" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:09:27.680" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230830 18:09:27.662" endtime="20230830 18:09:27.680"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:09:27.681" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230830 18:09:27.681" endtime="20230830 18:09:27.681"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:09:27.682" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:09:27.682" endtime="20230830 18:09:27.682"/>
</kw>
<status status="PASS" starttime="20230830 18:09:27.661" endtime="20230830 18:09:27.682"/>
</kw>
<msg timestamp="20230830 18:09:27.682" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:09:27.661" endtime="20230830 18:09:27.683"/>
</kw>
<msg timestamp="20230830 18:09:27.683" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230830 18:09:27.660" endtime="20230830 18:09:27.683"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230830 18:09:27.683" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230830 18:09:27.683" endtime="20230830 18:09:27.683"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 18:09:27.684" endtime="20230830 18:09:27.684"/>
</kw>
<status status="FAIL" starttime="20230830 18:09:27.659" endtime="20230830 18:09:27.684"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:09:37.690" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-encbv 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:09:37.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:09:37.705" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230830 18:09:37.687" endtime="20230830 18:09:37.705"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:09:37.706" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230830 18:09:37.706" endtime="20230830 18:09:37.707"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:09:37.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:09:37.707" endtime="20230830 18:09:37.707"/>
</kw>
<status status="PASS" starttime="20230830 18:09:37.686" endtime="20230830 18:09:37.708"/>
</kw>
<msg timestamp="20230830 18:09:37.708" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:09:37.686" endtime="20230830 18:09:37.708"/>
</kw>
<msg timestamp="20230830 18:09:37.708" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230830 18:09:37.685" endtime="20230830 18:09:37.708"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230830 18:09:37.709" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230830 18:09:37.708" endtime="20230830 18:09:37.709"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 18:09:37.709" endtime="20230830 18:09:37.709"/>
</kw>
<status status="FAIL" starttime="20230830 18:09:37.684" endtime="20230830 18:09:37.709"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:09:47.715" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-encbv 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:09:47.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:09:47.731" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230830 18:09:47.712" endtime="20230830 18:09:47.731"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:09:47.732" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230830 18:09:47.732" endtime="20230830 18:09:47.733"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:09:47.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:09:47.733" endtime="20230830 18:09:47.733"/>
</kw>
<status status="PASS" starttime="20230830 18:09:47.712" endtime="20230830 18:09:47.734"/>
</kw>
<msg timestamp="20230830 18:09:47.734" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:09:47.711" endtime="20230830 18:09:47.734"/>
</kw>
<msg timestamp="20230830 18:09:47.734" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230830 18:09:47.711" endtime="20230830 18:09:47.734"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230830 18:09:47.735" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230830 18:09:47.734" endtime="20230830 18:09:47.735"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230830 18:09:47.735" endtime="20230830 18:09:47.735"/>
</kw>
<status status="FAIL" starttime="20230830 18:09:47.710" endtime="20230830 18:09:47.736"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:09:57.742" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-encbv 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:09:57.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:09:57.776" level="INFO">${output} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-encbv","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<status status="PASS" starttime="20230830 18:09:57.739" endtime="20230830 18:09:57.776"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:09:57.777" level="INFO">{"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-encbv","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"creationTime":1693418936798,"modificationTime":1693418936798,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}],"admin":"hadoop","owner":"hadoop","volume":"vol-encbv"},"status":"OK"}</msg>
<status status="PASS" starttime="20230830 18:09:57.777" endtime="20230830 18:09:57.778"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:09:57.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:09:57.778" endtime="20230830 18:09:57.778"/>
</kw>
<status status="PASS" starttime="20230830 18:09:57.739" endtime="20230830 18:09:57.779"/>
</kw>
<msg timestamp="20230830 18:09:57.779" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:09:57.738" endtime="20230830 18:09:57.779"/>
</kw>
<msg timestamp="20230830 18:09:57.779" level="INFO">${result} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-encbv","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<status status="PASS" starttime="20230830 18:09:57.738" endtime="20230830 18:09:57.779"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:09:57.779" endtime="20230830 18:09:57.780"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:09:57.780" endtime="20230830 18:09:57.780"/>
</kw>
<status status="PASS" starttime="20230830 18:09:57.736" endtime="20230830 18:09:57.780"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.636" endtime="20230830 18:09:57.781"/>
</kw>
<status status="PASS" starttime="20230830 18:09:17.635" endtime="20230830 18:09:57.781"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 18:09:17.634" endtime="20230830 18:09:57.781"/>
</test>
<test id="s1-s3-s2-t10" name="Check Recon Namespace Summary Bucket" line="128">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>BUCKET</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:09:57.789" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-encbv/buc-sthzf 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:09:57.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:09:57.824" level="INFO">${output} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-sthzf","quotaInBytes":-1,"quotaInNamespa...</msg>
<status status="PASS" starttime="20230830 18:09:57.786" endtime="20230830 18:09:57.824"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:09:57.825" level="INFO">{"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-sthzf","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":4,"creationTime":1693418941619,"modificationTime":1693418941619,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}],"volumeName":"vol-encbv","storageType":"DISK","versioning":false,"usedBytes":null,"encryptionInfo":null,"replicationConfigInfo":null,"sourceVolume":null,"sourceBucket":null,"bucketLayout":"FILE_SYSTEM_OPTIMIZED","owner":"hadoop"},"status":"OK"}</msg>
<status status="PASS" starttime="20230830 18:09:57.824" endtime="20230830 18:09:57.825"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:09:57.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:09:57.825" endtime="20230830 18:09:57.826"/>
</kw>
<status status="PASS" starttime="20230830 18:09:57.786" endtime="20230830 18:09:57.826"/>
</kw>
<msg timestamp="20230830 18:09:57.826" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:09:57.785" endtime="20230830 18:09:57.827"/>
</kw>
<msg timestamp="20230830 18:09:57.827" level="INFO">${result} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-sthzf","quotaInBytes":-1,"quotaInNamespa...</msg>
<status status="PASS" starttime="20230830 18:09:57.785" endtime="20230830 18:09:57.827"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:09:57.827" endtime="20230830 18:09:57.827"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:09:57.828" endtime="20230830 18:09:57.828"/>
</kw>
<status status="PASS" starttime="20230830 18:09:57.784" endtime="20230830 18:09:57.828"/>
</kw>
<status status="PASS" starttime="20230830 18:09:57.784" endtime="20230830 18:09:57.828"/>
</kw>
<status status="PASS" starttime="20230830 18:09:57.783" endtime="20230830 18:09:57.828"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 18:09:57.782" endtime="20230830 18:09:57.828"/>
</test>
<test id="s1-s3-s2-t11" name="Check Recon Namespace Summary Key" line="131">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/file1</arg>
<arg>KEY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:09:57.836" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-encbv/buc-sthzf/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:09:57.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:09:57.898" level="INFO">${output} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace...</msg>
<status status="PASS" starttime="20230830 18:09:57.834" endtime="20230830 18:09:57.898"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:09:57.900" level="INFO">{"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":1693418946858,"modificationTime":1693418948937,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}],"volumeName":"vol-encbv","bucketName":"buc-sthzf","keyName":"file1","dataSize":4068,"keyLocationVersions":[{"version":0,"locationVersionMap":{"0":[{"blockID":{"containerBlockID":{"containerID":1,"localID":111677748019200012},"blockCommitSequenceId":19,"containerID":1,"localID":111677748019200012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":1,"localID":111677748019200012,"blockCommitSequenceId":19}]},"multipartKey":false,"locationListCount":1,"blocksLatestVersionOnly":[{"blockID":{"containerBlockID":{"containerID":1,"localID":111677748019200012},"blockCommitSequenceId":19,"containerID":1,"localID":111677748019200012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":1,"localID":111677748019200012,"blockCommitSequenceId":19}],"locationLists":[[{"blockID":{"containerBlockID":{"containerID":1,"localID":111677748019200012},"blockCommitSequenceId":19,"containerID":1,"localID":111677748019200012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":1,"localID":111677748019200012,"blockCommitSequenceId":19}]],"locationList":[{"blockID":{"containerBlockID":{"containerID":1,"localID":111677748019200012},"blockCommitSequenceId":19,"containerID":1,"localID":111677748019200012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":1,"localID":111677748019200012,"blockCommitSequenceId":19}]}],"replicationConfig":{"replicationFactor":"THREE","requiredNodes":3,"replicationType":"RATIS"},"encInfo":null},"status":"OK"}</msg>
<status status="PASS" starttime="20230830 18:09:57.899" endtime="20230830 18:09:57.900"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:09:57.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:09:57.900" endtime="20230830 18:09:57.901"/>
</kw>
<status status="PASS" starttime="20230830 18:09:57.833" endtime="20230830 18:09:57.902"/>
</kw>
<msg timestamp="20230830 18:09:57.902" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:09:57.832" endtime="20230830 18:09:57.902"/>
</kw>
<msg timestamp="20230830 18:09:57.903" level="INFO">${result} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace...</msg>
<status status="PASS" starttime="20230830 18:09:57.832" endtime="20230830 18:09:57.903"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:09:57.903" endtime="20230830 18:09:57.903"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:09:57.903" endtime="20230830 18:09:57.904"/>
</kw>
<status status="PASS" starttime="20230830 18:09:57.832" endtime="20230830 18:09:57.904"/>
</kw>
<status status="PASS" starttime="20230830 18:09:57.831" endtime="20230830 18:09:57.904"/>
</kw>
<status status="PASS" starttime="20230830 18:09:57.830" endtime="20230830 18:09:57.904"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 18:09:57.829" endtime="20230830 18:09:57.904"/>
</test>
<test id="s1-s3-s2-t12" name="Check Recon Namespace Summary Directory" line="134">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'LEGACY'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2/</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 18:09:57.906" endtime="20230830 18:09:57.907"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'FILE_SYSTEM_OPTIMIZED'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:09:57.913" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-encbv/buc-sthzf/dir1/dir2 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:09:57.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:09:57.941" level="INFO">${output} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<status status="PASS" starttime="20230830 18:09:57.910" endtime="20230830 18:09:57.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:09:57.943" level="INFO">{"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":1693418954454,"modificationTime":1693418954454,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}]},"status":"OK"}</msg>
<status status="PASS" starttime="20230830 18:09:57.942" endtime="20230830 18:09:57.943"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:09:57.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:09:57.943" endtime="20230830 18:09:57.943"/>
</kw>
<status status="PASS" starttime="20230830 18:09:57.910" endtime="20230830 18:09:57.943"/>
</kw>
<msg timestamp="20230830 18:09:57.944" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:09:57.909" endtime="20230830 18:09:57.944"/>
</kw>
<msg timestamp="20230830 18:09:57.944" level="INFO">${result} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<status status="PASS" starttime="20230830 18:09:57.909" endtime="20230830 18:09:57.944"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:09:57.944" endtime="20230830 18:09:57.944"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:09:57.945" endtime="20230830 18:09:57.945"/>
</kw>
<status status="PASS" starttime="20230830 18:09:57.908" endtime="20230830 18:09:57.945"/>
</kw>
<status status="PASS" starttime="20230830 18:09:57.908" endtime="20230830 18:09:57.945"/>
</kw>
<status status="PASS" starttime="20230830 18:09:57.907" endtime="20230830 18:09:57.945"/>
</kw>
<status status="PASS" starttime="20230830 18:09:57.907" endtime="20230830 18:09:57.945"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 18:09:57.905" endtime="20230830 18:09:57.945"/>
</test>
<test id="s1-s3-s2-t13" name="Check Recon Namespace Disk Usage" line="138">
<kw name="Wait For Summary">
<arg>${DISK_USAGE_URL}?path=/${VOLUME}/${BUCKET}&amp;files=true&amp;replica=true</arg>
<arg>\"sizeWithReplica\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:09:57.957" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/du?path=/vol-encbv/buc-sthzf&amp;files=true&amp;replica=true 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:09:57.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:09:57.974" level="INFO">${output} = {"status":"OK","path":"/vol-encbv/buc-sthzf","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-encbv/buc-sthzf/dir1","size":6038,"sizeWithReplica":-1,"isKey":fal...</msg>
<status status="PASS" starttime="20230830 18:09:57.954" endtime="20230830 18:09:57.974"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:09:57.975" level="INFO">{"status":"OK","path":"/vol-encbv/buc-sthzf","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-encbv/buc-sthzf/dir1","size":6038,"sizeWithReplica":-1,"isKey":false}],"sizeDirectKey":4068}</msg>
<status status="PASS" starttime="20230830 18:09:57.975" endtime="20230830 18:09:57.976"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:09:57.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:09:57.976" endtime="20230830 18:09:57.976"/>
</kw>
<status status="PASS" starttime="20230830 18:09:57.953" endtime="20230830 18:09:57.977"/>
</kw>
<msg timestamp="20230830 18:09:57.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:09:57.953" endtime="20230830 18:09:57.977"/>
</kw>
<msg timestamp="20230830 18:09:57.977" level="INFO">${result} = {"status":"OK","path":"/vol-encbv/buc-sthzf","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-encbv/buc-sthzf/dir1","size":6038,"sizeWithReplica":-1,"isKey":fal...</msg>
<status status="PASS" starttime="20230830 18:09:57.952" endtime="20230830 18:09:57.977"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:09:57.977" endtime="20230830 18:09:57.978"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:09:57.978" endtime="20230830 18:09:57.978"/>
</kw>
<status status="PASS" starttime="20230830 18:09:57.952" endtime="20230830 18:09:57.978"/>
</kw>
<status status="PASS" starttime="20230830 18:09:57.951" endtime="20230830 18:09:57.978"/>
</kw>
<status status="PASS" starttime="20230830 18:09:57.950" endtime="20230830 18:09:57.978"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 18:09:57.949" endtime="20230830 18:09:57.979"/>
</test>
<test id="s1-s3-s2-t14" name="Check Recon Namespace Volume Quota Usage" line="141">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:09:57.989" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-encbv 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:09:58.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:09:58.005" level="INFO">${output} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230830 18:09:57.985" endtime="20230830 18:09:58.005"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:09:58.007" level="INFO">{"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230830 18:09:58.006" endtime="20230830 18:09:58.007"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:09:58.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:09:58.007" endtime="20230830 18:09:58.008"/>
</kw>
<status status="PASS" starttime="20230830 18:09:57.984" endtime="20230830 18:09:58.008"/>
</kw>
<msg timestamp="20230830 18:09:58.008" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:09:57.984" endtime="20230830 18:09:58.008"/>
</kw>
<msg timestamp="20230830 18:09:58.009" level="INFO">${result} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230830 18:09:57.983" endtime="20230830 18:09:58.009"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:09:58.009" endtime="20230830 18:09:58.009"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:09:58.009" endtime="20230830 18:09:58.010"/>
</kw>
<status status="PASS" starttime="20230830 18:09:57.983" endtime="20230830 18:09:58.010"/>
</kw>
<status status="PASS" starttime="20230830 18:09:57.982" endtime="20230830 18:09:58.010"/>
</kw>
<status status="PASS" starttime="20230830 18:09:57.981" endtime="20230830 18:09:58.010"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 18:09:57.980" endtime="20230830 18:09:58.010"/>
</test>
<test id="s1-s3-s2-t15" name="Check Recon Namespace Bucket Quota Usage" line="144">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:09:58.020" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-encbv/buc-sthzf 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:09:58.040" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:09:58.040" level="INFO">${output} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230830 18:09:58.016" endtime="20230830 18:09:58.040"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:09:58.041" level="INFO">{"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230830 18:09:58.040" endtime="20230830 18:09:58.041"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:09:58.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:09:58.041" endtime="20230830 18:09:58.042"/>
</kw>
<status status="PASS" starttime="20230830 18:09:58.016" endtime="20230830 18:09:58.042"/>
</kw>
<msg timestamp="20230830 18:09:58.042" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:09:58.015" endtime="20230830 18:09:58.042"/>
</kw>
<msg timestamp="20230830 18:09:58.043" level="INFO">${result} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230830 18:09:58.015" endtime="20230830 18:09:58.043"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:09:58.043" endtime="20230830 18:09:58.043"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:09:58.043" endtime="20230830 18:09:58.044"/>
</kw>
<status status="PASS" starttime="20230830 18:09:58.014" endtime="20230830 18:09:58.044"/>
</kw>
<status status="PASS" starttime="20230830 18:09:58.013" endtime="20230830 18:09:58.044"/>
</kw>
<status status="PASS" starttime="20230830 18:09:58.013" endtime="20230830 18:09:58.044"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 18:09:58.012" endtime="20230830 18:09:58.044"/>
</test>
<test id="s1-s3-s2-t16" name="Check Recon Namespace File Size Distribution Root" line="147">
<kw name="Wait For Summary">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<arg>\"dist\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:09:58.053" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:09:58.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:09:58.068" level="INFO">${output} = {"dist":[0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20230830 18:09:58.050" endtime="20230830 18:09:58.068"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:09:58.070" level="INFO">{"dist":[0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20230830 18:09:58.069" endtime="20230830 18:09:58.070"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:09:58.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:09:58.070" endtime="20230830 18:09:58.070"/>
</kw>
<status status="PASS" starttime="20230830 18:09:58.049" endtime="20230830 18:09:58.071"/>
</kw>
<msg timestamp="20230830 18:09:58.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:09:58.049" endtime="20230830 18:09:58.071"/>
</kw>
<msg timestamp="20230830 18:09:58.071" level="INFO">${result} = {"dist":[0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20230830 18:09:58.048" endtime="20230830 18:09:58.071"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:09:58.071" endtime="20230830 18:09:58.072"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:09:58.072" endtime="20230830 18:09:58.073"/>
</kw>
<status status="PASS" starttime="20230830 18:09:58.048" endtime="20230830 18:09:58.073"/>
</kw>
<status status="PASS" starttime="20230830 18:09:58.047" endtime="20230830 18:09:58.073"/>
</kw>
<status status="PASS" starttime="20230830 18:09:58.046" endtime="20230830 18:09:58.073"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 18:09:58.046" endtime="20230830 18:09:58.073"/>
</test>
<doc>Smoke test for Recon Namespace Summary Endpoint for FILE_SYSTEM_OPTIMIZED buckets.</doc>
<status status="PASS" starttime="20230830 18:08:52.072" endtime="20230830 18:09:58.075"/>
</suite>
<status status="PASS" starttime="20230830 18:08:09.539" endtime="20230830 18:09:58.078"/>
</suite>
<suite id="s1-s4" name="Loaddata" source="/opt/hadoop/smoketest/topology/loaddata.robot">
<test id="s1-s4-t1" name="Create a volume, bucket and key" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create topvol1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:10:01.073" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:10:05.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:10:05.598" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230830 18:10:01.070" endtime="20230830 18:10:05.598"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:10:05.599" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230830 18:10:05.598" endtime="20230830 18:10:05.599"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:10:05.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:10:05.599" endtime="20230830 18:10:05.600"/>
</kw>
<status status="PASS" starttime="20230830 18:10:01.069" endtime="20230830 18:10:05.600"/>
</kw>
<msg timestamp="20230830 18:10:05.600" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:10:01.069" endtime="20230830 18:10:05.600"/>
</kw>
<msg timestamp="20230830 18:10:05.601" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230830 18:10:01.068" endtime="20230830 18:10:05.601"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:10:05.601" endtime="20230830 18:10:05.601"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:10:05.605" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:10:09.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:10:09.599" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230830 18:10:05.603" endtime="20230830 18:10:09.599"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:10:09.601" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230830 18:10:09.600" endtime="20230830 18:10:09.601"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:10:09.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:10:09.601" endtime="20230830 18:10:09.602"/>
</kw>
<status status="PASS" starttime="20230830 18:10:05.602" endtime="20230830 18:10:09.602"/>
</kw>
<msg timestamp="20230830 18:10:09.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:10:05.602" endtime="20230830 18:10:09.602"/>
</kw>
<msg timestamp="20230830 18:10:09.602" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230830 18:10:05.601" endtime="20230830 18:10:09.602"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:10:09.603" endtime="20230830 18:10:09.603"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:10:09.607" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:10:16.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:10:16.453" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230830 18:10:09.605" endtime="20230830 18:10:16.453"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:10:16.454" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230830 18:10:16.453" endtime="20230830 18:10:16.454"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:10:16.455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:10:16.454" endtime="20230830 18:10:16.455"/>
</kw>
<status status="PASS" starttime="20230830 18:10:09.604" endtime="20230830 18:10:16.455"/>
</kw>
<msg timestamp="20230830 18:10:16.455" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:10:09.604" endtime="20230830 18:10:16.455"/>
</kw>
<msg timestamp="20230830 18:10:16.455" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230830 18:10:09.603" endtime="20230830 18:10:16.456"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:10:16.456" endtime="20230830 18:10:16.456"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 18:10:01.067" endtime="20230830 18:10:16.456"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230830 18:10:01.019" endtime="20230830 18:10:16.457"/>
</suite>
<suite id="s1-s5" name="readdata-first-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s5-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230830 18:10:24.382" level="INFO">${random} = 17620</msg>
<status status="PASS" starttime="20230830 18:10:24.381" endtime="20230830 18:10:24.382"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:10:24.386" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-17620 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:11:03.571" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:11:03.571" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230830 18:10:24.384" endtime="20230830 18:11:03.571"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:11:03.573" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230830 18:11:03.572" endtime="20230830 18:11:03.573"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:11:03.573" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:11:03.573" endtime="20230830 18:11:03.573"/>
</kw>
<status status="PASS" starttime="20230830 18:10:24.383" endtime="20230830 18:11:03.573"/>
</kw>
<msg timestamp="20230830 18:11:03.574" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:10:24.383" endtime="20230830 18:11:03.574"/>
</kw>
<msg timestamp="20230830 18:11:03.574" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230830 18:10:24.382" endtime="20230830 18:11:03.574"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:11:03.574" endtime="20230830 18:11:03.574"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 18:10:24.381" endtime="20230830 18:11:03.575"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230830 18:10:24.331" endtime="20230830 18:11:03.576"/>
</suite>
<suite id="s1-s6" name="readdata-second-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s6-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230830 18:11:46.123" level="INFO">${random} = 58481</msg>
<status status="PASS" starttime="20230830 18:11:46.122" endtime="20230830 18:11:46.123"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 18:11:46.128" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-58481 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 18:11:52.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 18:11:52.701" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230830 18:11:46.125" endtime="20230830 18:11:52.701"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 18:11:52.703" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230830 18:11:52.702" endtime="20230830 18:11:52.703"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 18:11:52.703" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 18:11:52.703" endtime="20230830 18:11:52.704"/>
</kw>
<status status="PASS" starttime="20230830 18:11:46.124" endtime="20230830 18:11:52.704"/>
</kw>
<msg timestamp="20230830 18:11:52.704" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 18:11:46.124" endtime="20230830 18:11:52.704"/>
</kw>
<msg timestamp="20230830 18:11:52.704" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230830 18:11:46.123" endtime="20230830 18:11:52.704"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 18:11:52.704" endtime="20230830 18:11:52.705"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 18:11:46.122" endtime="20230830 18:11:52.705"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230830 18:11:46.072" endtime="20230830 18:11:52.707"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="227565"/>
</suite>
<statistics>
<total>
<stat pass="32" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="32" fail="0" skip="0" id="s1" name="ozone-topology">ozone-topology</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="Basic">ozone-topology.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Cli">ozone-topology.Cli</stat>
<stat pass="23" fail="0" skip="0" id="s1-s3" name="Recon">ozone-topology.Recon</stat>
<stat pass="7" fail="0" skip="0" id="s1-s3-s1" name="Recon-Api">ozone-topology.Recon.Recon-Api</stat>
<stat pass="16" fail="0" skip="0" id="s1-s3-s2" name="Recon-Nssummary">ozone-topology.Recon.Recon-Nssummary</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Loaddata">ozone-topology.Loaddata</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="readdata-first-half">ozone-topology.readdata-first-half</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="readdata-second-half">ozone-topology.readdata-second-half</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
