<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230830 07:07:57.742" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-root-ca-rotation">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 07:04:59.680" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 07:04:59.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 07:04:59.683" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230830 07:04:59.677" endtime="20230830 07:04:59.683"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 07:04:59.685" level="INFO">scm</msg>
<status status="PASS" starttime="20230830 07:04:59.684" endtime="20230830 07:04:59.685"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 07:04:59.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 07:04:59.685" endtime="20230830 07:04:59.685"/>
</kw>
<status status="PASS" starttime="20230830 07:04:59.676" endtime="20230830 07:04:59.685"/>
</kw>
<msg timestamp="20230830 07:04:59.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 07:04:59.676" endtime="20230830 07:04:59.686"/>
</kw>
<msg timestamp="20230830 07:04:59.686" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230830 07:04:59.676" endtime="20230830 07:04:59.686"/>
</kw>
<msg timestamp="20230830 07:04:59.686" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230830 07:04:59.675" endtime="20230830 07:04:59.686"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230830 07:04:59.686" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230830 07:04:59.686" endtime="20230830 07:04:59.686"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 07:04:59.691" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 07:04:59.717" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 07:04:59.717" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 07:04:59.688" endtime="20230830 07:04:59.717"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 07:04:59.718" level="INFO"/>
<status status="PASS" starttime="20230830 07:04:59.718" endtime="20230830 07:04:59.719"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 07:04:59.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 07:04:59.719" endtime="20230830 07:04:59.719"/>
</kw>
<status status="PASS" starttime="20230830 07:04:59.688" endtime="20230830 07:04:59.720"/>
</kw>
<msg timestamp="20230830 07:04:59.720" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 07:04:59.688" endtime="20230830 07:04:59.720"/>
</kw>
<status status="PASS" starttime="20230830 07:04:59.687" endtime="20230830 07:04:59.720"/>
</kw>
<status status="PASS" starttime="20230830 07:04:59.687" endtime="20230830 07:04:59.720"/>
</kw>
<status status="PASS" starttime="20230830 07:04:59.674" endtime="20230830 07:04:59.720"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230830 07:04:59.673" endtime="20230830 07:04:59.720"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230830 07:04:59.615" endtime="20230830 07:04:59.722"/>
</suite>
<suite id="s1-s2" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s2-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 07:05:37.582" level="INFO">Running command 'ozone sh volume create rootca-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 07:05:43.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 07:05:43.554" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 07:05:37.577" endtime="20230830 07:05:43.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 07:05:43.556" level="INFO"/>
<status status="PASS" starttime="20230830 07:05:43.555" endtime="20230830 07:05:43.556"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 07:05:43.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 07:05:43.556" endtime="20230830 07:05:43.557"/>
</kw>
<status status="PASS" starttime="20230830 07:05:37.577" endtime="20230830 07:05:43.557"/>
</kw>
<msg timestamp="20230830 07:05:43.557" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 07:05:37.576" endtime="20230830 07:05:43.557"/>
</kw>
<msg timestamp="20230830 07:05:43.557" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 07:05:37.576" endtime="20230830 07:05:43.557"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 07:05:43.557" endtime="20230830 07:05:43.558"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 07:05:43.562" level="INFO">Running command 'ozone sh bucket create /rootca-volume/rootca-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 07:05:49.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 07:05:49.061" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 07:05:43.560" endtime="20230830 07:05:49.061"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 07:05:49.063" level="INFO"/>
<status status="PASS" starttime="20230830 07:05:49.062" endtime="20230830 07:05:49.063"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 07:05:49.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 07:05:49.063" endtime="20230830 07:05:49.064"/>
</kw>
<status status="PASS" starttime="20230830 07:05:43.559" endtime="20230830 07:05:49.064"/>
</kw>
<msg timestamp="20230830 07:05:49.064" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 07:05:43.559" endtime="20230830 07:05:49.064"/>
</kw>
<msg timestamp="20230830 07:05:49.064" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 07:05:43.558" endtime="20230830 07:05:49.064"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 07:05:49.065" endtime="20230830 07:05:49.065"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 07:05:37.575" endtime="20230830 07:05:49.065"/>
</test>
<test id="s1-s2-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 07:05:49.070" level="INFO">Running command 'echo "rootca: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230830 07:05:49.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 07:05:49.072" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 07:05:49.067" endtime="20230830 07:05:49.072"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 07:05:49.073" level="INFO"/>
<status status="PASS" starttime="20230830 07:05:49.073" endtime="20230830 07:05:49.073"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 07:05:49.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 07:05:49.073" endtime="20230830 07:05:49.074"/>
</kw>
<status status="PASS" starttime="20230830 07:05:49.067" endtime="20230830 07:05:49.074"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 07:05:49.078" level="INFO">Running command 'ozone sh key put /rootca-volume/rootca-bucket/rootca-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 07:05:59.912" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 07:05:59.912" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 07:05:49.076" endtime="20230830 07:05:59.912"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 07:05:59.913" level="INFO"/>
<status status="PASS" starttime="20230830 07:05:59.912" endtime="20230830 07:05:59.913"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 07:05:59.914" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 07:05:59.913" endtime="20230830 07:05:59.914"/>
</kw>
<status status="PASS" starttime="20230830 07:05:49.075" endtime="20230830 07:05:59.914"/>
</kw>
<msg timestamp="20230830 07:05:59.914" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 07:05:49.075" endtime="20230830 07:05:59.914"/>
</kw>
<msg timestamp="20230830 07:05:59.915" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 07:05:49.074" endtime="20230830 07:05:59.915"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 07:05:59.915" endtime="20230830 07:05:59.915"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 07:05:59.919" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 07:05:59.921" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 07:05:59.922" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 07:05:59.916" endtime="20230830 07:05:59.922"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 07:05:59.923" level="INFO"/>
<status status="PASS" starttime="20230830 07:05:59.922" endtime="20230830 07:05:59.923"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 07:05:59.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 07:05:59.923" endtime="20230830 07:05:59.923"/>
</kw>
<status status="PASS" starttime="20230830 07:05:59.915" endtime="20230830 07:05:59.924"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 07:05:49.066" endtime="20230830 07:05:59.924"/>
</test>
<test id="s1-s2-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230830 07:05:59.926" level="INFO">${random} = 44107</msg>
<status status="PASS" starttime="20230830 07:05:59.926" endtime="20230830 07:05:59.926"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 07:05:59.930" level="INFO">Running command 'ozone sh key get /rootca-volume/rootca-bucket/rootca-key /tmp/key-44107 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 07:06:08.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 07:06:08.683" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 07:05:59.928" endtime="20230830 07:06:08.683"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 07:06:08.685" level="INFO"/>
<status status="PASS" starttime="20230830 07:06:08.684" endtime="20230830 07:06:08.685"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 07:06:08.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 07:06:08.685" endtime="20230830 07:06:08.686"/>
</kw>
<status status="PASS" starttime="20230830 07:05:59.928" endtime="20230830 07:06:08.686"/>
</kw>
<msg timestamp="20230830 07:06:08.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 07:05:59.927" endtime="20230830 07:06:08.686"/>
</kw>
<msg timestamp="20230830 07:06:08.686" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 07:05:59.926" endtime="20230830 07:06:08.686"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 07:06:08.687" endtime="20230830 07:06:08.687"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 07:06:08.691" level="INFO">Running command 'cat /tmp/key-44107 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 07:06:08.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 07:06:08.695" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230830 07:06:08.688" endtime="20230830 07:06:08.695"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 07:06:08.696" level="INFO">rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230830 07:06:08.695" endtime="20230830 07:06:08.696"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 07:06:08.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 07:06:08.696" endtime="20230830 07:06:08.696"/>
</kw>
<msg timestamp="20230830 07:06:08.697" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230830 07:06:08.688" endtime="20230830 07:06:08.697"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 07:06:08.697" endtime="20230830 07:06:08.697"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 07:06:08.701" level="INFO">Running command 'rm /tmp/key-44107 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 07:06:08.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 07:06:08.703" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 07:06:08.698" endtime="20230830 07:06:08.703"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 07:06:08.704" level="INFO"/>
<status status="PASS" starttime="20230830 07:06:08.704" endtime="20230830 07:06:08.705"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 07:06:08.705" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 07:06:08.705" endtime="20230830 07:06:08.705"/>
</kw>
<status status="PASS" starttime="20230830 07:06:08.698" endtime="20230830 07:06:08.706"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 07:05:59.925" endtime="20230830 07:06:08.706"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230830 07:05:37.524" endtime="20230830 07:06:08.708"/>
</suite>
<suite id="s1-s3" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s3-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 07:07:05.526" level="INFO">Running command 'ozone sh volume create rootca2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 07:07:11.671" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 07:07:11.671" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 07:07:05.523" endtime="20230830 07:07:11.671"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 07:07:11.672" level="INFO"/>
<status status="PASS" starttime="20230830 07:07:11.672" endtime="20230830 07:07:11.673"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 07:07:11.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 07:07:11.673" endtime="20230830 07:07:11.673"/>
</kw>
<status status="PASS" starttime="20230830 07:07:05.523" endtime="20230830 07:07:11.674"/>
</kw>
<msg timestamp="20230830 07:07:11.674" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 07:07:05.523" endtime="20230830 07:07:11.674"/>
</kw>
<msg timestamp="20230830 07:07:11.674" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 07:07:05.522" endtime="20230830 07:07:11.674"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 07:07:11.674" endtime="20230830 07:07:11.675"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 07:07:11.679" level="INFO">Running command 'ozone sh bucket create /rootca2-volume/rootca2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 07:07:16.799" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 07:07:16.799" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 07:07:11.677" endtime="20230830 07:07:16.799"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 07:07:16.801" level="INFO"/>
<status status="PASS" starttime="20230830 07:07:16.800" endtime="20230830 07:07:16.801"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 07:07:16.801" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 07:07:16.801" endtime="20230830 07:07:16.802"/>
</kw>
<status status="PASS" starttime="20230830 07:07:11.676" endtime="20230830 07:07:16.802"/>
</kw>
<msg timestamp="20230830 07:07:16.802" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 07:07:11.676" endtime="20230830 07:07:16.802"/>
</kw>
<msg timestamp="20230830 07:07:16.802" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 07:07:11.675" endtime="20230830 07:07:16.802"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 07:07:16.802" endtime="20230830 07:07:16.803"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 07:07:05.521" endtime="20230830 07:07:16.803"/>
</test>
<test id="s1-s3-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 07:07:16.808" level="INFO">Running command 'echo "rootca2: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230830 07:07:16.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 07:07:16.811" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 07:07:16.805" endtime="20230830 07:07:16.811"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 07:07:16.812" level="INFO"/>
<status status="PASS" starttime="20230830 07:07:16.811" endtime="20230830 07:07:16.812"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 07:07:16.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 07:07:16.812" endtime="20230830 07:07:16.813"/>
</kw>
<status status="PASS" starttime="20230830 07:07:16.804" endtime="20230830 07:07:16.813"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 07:07:16.817" level="INFO">Running command 'ozone sh key put /rootca2-volume/rootca2-bucket/rootca2-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 07:07:25.987" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 07:07:25.988" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 07:07:16.815" endtime="20230830 07:07:25.988"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 07:07:25.989" level="INFO"/>
<status status="PASS" starttime="20230830 07:07:25.988" endtime="20230830 07:07:25.989"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 07:07:25.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 07:07:25.989" endtime="20230830 07:07:25.990"/>
</kw>
<status status="PASS" starttime="20230830 07:07:16.814" endtime="20230830 07:07:25.990"/>
</kw>
<msg timestamp="20230830 07:07:25.990" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 07:07:16.814" endtime="20230830 07:07:25.990"/>
</kw>
<msg timestamp="20230830 07:07:25.990" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 07:07:16.813" endtime="20230830 07:07:25.990"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 07:07:25.990" endtime="20230830 07:07:25.991"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 07:07:25.994" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 07:07:25.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 07:07:25.998" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 07:07:25.992" endtime="20230830 07:07:25.998"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 07:07:25.999" level="INFO"/>
<status status="PASS" starttime="20230830 07:07:25.998" endtime="20230830 07:07:25.999"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 07:07:26.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 07:07:25.999" endtime="20230830 07:07:26.000"/>
</kw>
<status status="PASS" starttime="20230830 07:07:25.991" endtime="20230830 07:07:26.000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 07:07:16.804" endtime="20230830 07:07:26.000"/>
</test>
<test id="s1-s3-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230830 07:07:26.003" level="INFO">${random} = 49911</msg>
<status status="PASS" starttime="20230830 07:07:26.002" endtime="20230830 07:07:26.003"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 07:07:26.007" level="INFO">Running command 'ozone sh key get /rootca2-volume/rootca2-bucket/rootca2-key /tmp/key-49911 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 07:07:34.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 07:07:34.012" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 07:07:26.005" endtime="20230830 07:07:34.012"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 07:07:34.014" level="INFO"/>
<status status="PASS" starttime="20230830 07:07:34.013" endtime="20230830 07:07:34.014"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 07:07:34.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 07:07:34.014" endtime="20230830 07:07:34.015"/>
</kw>
<status status="PASS" starttime="20230830 07:07:26.004" endtime="20230830 07:07:34.015"/>
</kw>
<msg timestamp="20230830 07:07:34.015" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 07:07:26.004" endtime="20230830 07:07:34.015"/>
</kw>
<msg timestamp="20230830 07:07:34.015" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 07:07:26.003" endtime="20230830 07:07:34.015"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 07:07:34.015" endtime="20230830 07:07:34.016"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 07:07:34.020" level="INFO">Running command 'cat /tmp/key-49911 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 07:07:34.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 07:07:34.023" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230830 07:07:34.017" endtime="20230830 07:07:34.023"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 07:07:34.024" level="INFO">rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230830 07:07:34.023" endtime="20230830 07:07:34.024"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 07:07:34.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 07:07:34.024" endtime="20230830 07:07:34.024"/>
</kw>
<msg timestamp="20230830 07:07:34.025" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230830 07:07:34.016" endtime="20230830 07:07:34.025"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 07:07:34.025" endtime="20230830 07:07:34.025"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 07:07:34.028" level="INFO">Running command 'rm /tmp/key-49911 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 07:07:34.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 07:07:34.031" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 07:07:34.026" endtime="20230830 07:07:34.031"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 07:07:34.032" level="INFO"/>
<status status="PASS" starttime="20230830 07:07:34.032" endtime="20230830 07:07:34.032"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 07:07:34.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 07:07:34.032" endtime="20230830 07:07:34.033"/>
</kw>
<status status="PASS" starttime="20230830 07:07:34.025" endtime="20230830 07:07:34.033"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 07:07:26.001" endtime="20230830 07:07:34.033"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230830 07:07:05.470" endtime="20230830 07:07:34.035"/>
</suite>
<suite id="s1-s4" name="Root-Ca-Rotation" source="/opt/hadoop/smoketest/scmha/root-ca-rotation.robot">
<test id="s1-s4-t1" name="Verify root CA rotation metrics" line="26">
<kw name="Execute" library="os">
<var>${successRotationLine}</var>
<arg>curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 07:07:37.468" level="INFO">Running command 'curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 07:07:38.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 07:07:38.032" level="INFO">${output} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230830 07:07:37.465" endtime="20230830 07:07:38.032"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 07:07:38.049" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230830 07:07:38.035" endtime="20230830 07:07:38.049"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 07:07:38.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 07:07:38.049" endtime="20230830 07:07:38.051"/>
</kw>
<status status="PASS" starttime="20230830 07:07:37.464" endtime="20230830 07:07:38.052"/>
</kw>
<msg timestamp="20230830 07:07:38.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 07:07:37.464" endtime="20230830 07:07:38.052"/>
</kw>
<msg timestamp="20230830 07:07:38.054" level="INFO">${successRotationLine} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230830 07:07:37.463" endtime="20230830 07:07:38.054"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${successRotationLine}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 07:07:38.056" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230830 07:07:38.055" endtime="20230830 07:07:38.056"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_1}</var>
<arg>${successRotationLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230830 07:07:38.059" level="INFO">${temp_1} = ['    "NumSuccessRotation" ', ' 2,']</msg>
<status status="PASS" starttime="20230830 07:07:38.056" endtime="20230830 07:07:38.059"/>
</kw>
<kw name="Strip String" library="String">
<var>${temp_2}</var>
<arg>${temp_1[1]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230830 07:07:38.060" level="INFO">${temp_2} = 2,</msg>
<status status="PASS" starttime="20230830 07:07:38.059" endtime="20230830 07:07:38.060"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_3}</var>
<arg>${temp_2}</arg>
<arg>,</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230830 07:07:38.061" level="INFO">${temp_3} = ['2', '']</msg>
<status status="PASS" starttime="20230830 07:07:38.061" endtime="20230830 07:07:38.061"/>
</kw>
<kw name="Strip String" library="String">
<var>${successRotation}</var>
<arg>${temp_3[0]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230830 07:07:38.063" level="INFO">${successRotation} = 2</msg>
<status status="PASS" starttime="20230830 07:07:38.061" endtime="20230830 07:07:38.063"/>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<var>${successRotation}</var>
<arg>${successRotation}</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20230830 07:07:38.063" level="INFO">${successRotation} = 2.0</msg>
<status status="PASS" starttime="20230830 07:07:38.063" endtime="20230830 07:07:38.063"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${successRotation} &gt;= 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230830 07:07:38.063" endtime="20230830 07:07:38.064"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 07:07:37.463" endtime="20230830 07:07:38.064"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230830 07:07:37.414" endtime="20230830 07:07:38.066"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="60508"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="ozonesecure-root-ca-rotation">ozonesecure-root-ca-rotation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-root-ca-rotation.Kinit</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Root-Ca-Rotation">ozonesecure-root-ca-rotation.Root-Ca-Rotation</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
