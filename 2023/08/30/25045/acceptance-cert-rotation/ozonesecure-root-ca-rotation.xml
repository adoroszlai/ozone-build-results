<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230830 07:28:48.813" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-root-ca-rotation">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 07:25:45.467" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 07:25:45.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 07:25:45.472" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230830 07:25:45.464" endtime="20230830 07:25:45.472"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 07:25:45.473" level="INFO">scm</msg>
<status status="PASS" starttime="20230830 07:25:45.472" endtime="20230830 07:25:45.473"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 07:25:45.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 07:25:45.473" endtime="20230830 07:25:45.474"/>
</kw>
<status status="PASS" starttime="20230830 07:25:45.463" endtime="20230830 07:25:45.474"/>
</kw>
<msg timestamp="20230830 07:25:45.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 07:25:45.463" endtime="20230830 07:25:45.474"/>
</kw>
<msg timestamp="20230830 07:25:45.474" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230830 07:25:45.462" endtime="20230830 07:25:45.474"/>
</kw>
<msg timestamp="20230830 07:25:45.475" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230830 07:25:45.462" endtime="20230830 07:25:45.475"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230830 07:25:45.475" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230830 07:25:45.475" endtime="20230830 07:25:45.475"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 07:25:45.482" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 07:25:45.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 07:25:45.539" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 07:25:45.478" endtime="20230830 07:25:45.539"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 07:25:45.540" level="INFO"/>
<status status="PASS" starttime="20230830 07:25:45.539" endtime="20230830 07:25:45.541"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 07:25:45.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 07:25:45.541" endtime="20230830 07:25:45.541"/>
</kw>
<status status="PASS" starttime="20230830 07:25:45.477" endtime="20230830 07:25:45.542"/>
</kw>
<msg timestamp="20230830 07:25:45.542" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 07:25:45.477" endtime="20230830 07:25:45.542"/>
</kw>
<status status="PASS" starttime="20230830 07:25:45.476" endtime="20230830 07:25:45.542"/>
</kw>
<status status="PASS" starttime="20230830 07:25:45.475" endtime="20230830 07:25:45.542"/>
</kw>
<status status="PASS" starttime="20230830 07:25:45.461" endtime="20230830 07:25:45.542"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230830 07:25:45.460" endtime="20230830 07:25:45.543"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230830 07:25:45.402" endtime="20230830 07:25:45.544"/>
</suite>
<suite id="s1-s2" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s2-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 07:26:15.114" level="INFO">Running command 'ozone sh volume create rootca-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 07:26:21.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 07:26:21.487" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 07:26:15.110" endtime="20230830 07:26:21.487"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 07:26:21.489" level="INFO"/>
<status status="PASS" starttime="20230830 07:26:21.488" endtime="20230830 07:26:21.489"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 07:26:21.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 07:26:21.489" endtime="20230830 07:26:21.490"/>
</kw>
<status status="PASS" starttime="20230830 07:26:15.110" endtime="20230830 07:26:21.490"/>
</kw>
<msg timestamp="20230830 07:26:21.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 07:26:15.110" endtime="20230830 07:26:21.490"/>
</kw>
<msg timestamp="20230830 07:26:21.490" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 07:26:15.109" endtime="20230830 07:26:21.490"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 07:26:21.491" endtime="20230830 07:26:21.491"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 07:26:21.496" level="INFO">Running command 'ozone sh bucket create /rootca-volume/rootca-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 07:26:27.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 07:26:27.857" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 07:26:21.493" endtime="20230830 07:26:27.857"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 07:26:27.859" level="INFO"/>
<status status="PASS" starttime="20230830 07:26:27.858" endtime="20230830 07:26:27.859"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 07:26:27.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 07:26:27.859" endtime="20230830 07:26:27.860"/>
</kw>
<status status="PASS" starttime="20230830 07:26:21.492" endtime="20230830 07:26:27.860"/>
</kw>
<msg timestamp="20230830 07:26:27.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 07:26:21.492" endtime="20230830 07:26:27.860"/>
</kw>
<msg timestamp="20230830 07:26:27.860" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 07:26:21.491" endtime="20230830 07:26:27.860"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 07:26:27.860" endtime="20230830 07:26:27.861"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 07:26:15.108" endtime="20230830 07:26:27.861"/>
</test>
<test id="s1-s2-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 07:26:27.866" level="INFO">Running command 'echo "rootca: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230830 07:26:27.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 07:26:27.869" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 07:26:27.863" endtime="20230830 07:26:27.869"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 07:26:27.870" level="INFO"/>
<status status="PASS" starttime="20230830 07:26:27.869" endtime="20230830 07:26:27.870"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 07:26:27.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 07:26:27.870" endtime="20230830 07:26:27.871"/>
</kw>
<status status="PASS" starttime="20230830 07:26:27.863" endtime="20230830 07:26:27.871"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 07:26:27.876" level="INFO">Running command 'ozone sh key put /rootca-volume/rootca-bucket/rootca-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 07:26:40.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 07:26:40.490" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 07:26:27.873" endtime="20230830 07:26:40.490"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 07:26:40.492" level="INFO"/>
<status status="PASS" starttime="20230830 07:26:40.491" endtime="20230830 07:26:40.492"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 07:26:40.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 07:26:40.492" endtime="20230830 07:26:40.493"/>
</kw>
<status status="PASS" starttime="20230830 07:26:27.873" endtime="20230830 07:26:40.493"/>
</kw>
<msg timestamp="20230830 07:26:40.493" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 07:26:27.872" endtime="20230830 07:26:40.493"/>
</kw>
<msg timestamp="20230830 07:26:40.494" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 07:26:27.871" endtime="20230830 07:26:40.494"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 07:26:40.494" endtime="20230830 07:26:40.494"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 07:26:40.498" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 07:26:40.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 07:26:40.502" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 07:26:40.495" endtime="20230830 07:26:40.502"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 07:26:40.503" level="INFO"/>
<status status="PASS" starttime="20230830 07:26:40.502" endtime="20230830 07:26:40.503"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 07:26:40.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 07:26:40.503" endtime="20230830 07:26:40.504"/>
</kw>
<status status="PASS" starttime="20230830 07:26:40.494" endtime="20230830 07:26:40.504"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 07:26:27.862" endtime="20230830 07:26:40.504"/>
</test>
<test id="s1-s2-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230830 07:26:40.507" level="INFO">${random} = 76857</msg>
<status status="PASS" starttime="20230830 07:26:40.507" endtime="20230830 07:26:40.507"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 07:26:40.512" level="INFO">Running command 'ozone sh key get /rootca-volume/rootca-bucket/rootca-key /tmp/key-76857 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 07:26:48.908" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 07:26:48.908" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 07:26:40.509" endtime="20230830 07:26:48.908"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 07:26:48.910" level="INFO"/>
<status status="PASS" starttime="20230830 07:26:48.909" endtime="20230830 07:26:48.910"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 07:26:48.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 07:26:48.910" endtime="20230830 07:26:48.911"/>
</kw>
<status status="PASS" starttime="20230830 07:26:40.509" endtime="20230830 07:26:48.911"/>
</kw>
<msg timestamp="20230830 07:26:48.911" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 07:26:40.508" endtime="20230830 07:26:48.911"/>
</kw>
<msg timestamp="20230830 07:26:48.911" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 07:26:40.507" endtime="20230830 07:26:48.911"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 07:26:48.911" endtime="20230830 07:26:48.912"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 07:26:48.915" level="INFO">Running command 'cat /tmp/key-76857 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 07:26:48.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 07:26:48.919" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230830 07:26:48.913" endtime="20230830 07:26:48.919"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 07:26:48.920" level="INFO">rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230830 07:26:48.919" endtime="20230830 07:26:48.920"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 07:26:48.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 07:26:48.921" endtime="20230830 07:26:48.921"/>
</kw>
<msg timestamp="20230830 07:26:48.921" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230830 07:26:48.912" endtime="20230830 07:26:48.921"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 07:26:48.922" endtime="20230830 07:26:48.922"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 07:26:48.925" level="INFO">Running command 'rm /tmp/key-76857 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 07:26:48.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 07:26:48.929" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 07:26:48.923" endtime="20230830 07:26:48.929"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 07:26:48.930" level="INFO"/>
<status status="PASS" starttime="20230830 07:26:48.929" endtime="20230830 07:26:48.930"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 07:26:48.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 07:26:48.930" endtime="20230830 07:26:48.931"/>
</kw>
<status status="PASS" starttime="20230830 07:26:48.922" endtime="20230830 07:26:48.931"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 07:26:40.506" endtime="20230830 07:26:48.931"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230830 07:26:15.050" endtime="20230830 07:26:48.933"/>
</suite>
<suite id="s1-s3" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s3-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 07:27:50.810" level="INFO">Running command 'ozone sh volume create rootca2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 07:27:57.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 07:27:57.722" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 07:27:50.807" endtime="20230830 07:27:57.722"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 07:27:57.724" level="INFO"/>
<status status="PASS" starttime="20230830 07:27:57.723" endtime="20230830 07:27:57.724"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 07:27:57.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 07:27:57.724" endtime="20230830 07:27:57.725"/>
</kw>
<status status="PASS" starttime="20230830 07:27:50.807" endtime="20230830 07:27:57.725"/>
</kw>
<msg timestamp="20230830 07:27:57.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 07:27:50.806" endtime="20230830 07:27:57.725"/>
</kw>
<msg timestamp="20230830 07:27:57.726" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 07:27:50.806" endtime="20230830 07:27:57.726"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 07:27:57.726" endtime="20230830 07:27:57.726"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 07:27:57.731" level="INFO">Running command 'ozone sh bucket create /rootca2-volume/rootca2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 07:28:03.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 07:28:03.349" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 07:27:57.728" endtime="20230830 07:28:03.349"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 07:28:03.350" level="INFO"/>
<status status="PASS" starttime="20230830 07:28:03.349" endtime="20230830 07:28:03.350"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 07:28:03.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 07:28:03.351" endtime="20230830 07:28:03.351"/>
</kw>
<status status="PASS" starttime="20230830 07:27:57.728" endtime="20230830 07:28:03.352"/>
</kw>
<msg timestamp="20230830 07:28:03.352" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 07:27:57.727" endtime="20230830 07:28:03.352"/>
</kw>
<msg timestamp="20230830 07:28:03.352" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 07:27:57.726" endtime="20230830 07:28:03.352"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 07:28:03.352" endtime="20230830 07:28:03.353"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 07:27:50.805" endtime="20230830 07:28:03.353"/>
</test>
<test id="s1-s3-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 07:28:03.359" level="INFO">Running command 'echo "rootca2: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230830 07:28:03.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 07:28:03.373" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 07:28:03.356" endtime="20230830 07:28:03.373"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 07:28:03.375" level="INFO"/>
<status status="PASS" starttime="20230830 07:28:03.374" endtime="20230830 07:28:03.375"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 07:28:03.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 07:28:03.375" endtime="20230830 07:28:03.376"/>
</kw>
<status status="PASS" starttime="20230830 07:28:03.355" endtime="20230830 07:28:03.376"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 07:28:03.381" level="INFO">Running command 'ozone sh key put /rootca2-volume/rootca2-bucket/rootca2-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 07:28:14.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 07:28:14.254" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 07:28:03.379" endtime="20230830 07:28:14.254"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 07:28:14.256" level="INFO"/>
<status status="PASS" starttime="20230830 07:28:14.255" endtime="20230830 07:28:14.256"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 07:28:14.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 07:28:14.256" endtime="20230830 07:28:14.257"/>
</kw>
<status status="PASS" starttime="20230830 07:28:03.378" endtime="20230830 07:28:14.257"/>
</kw>
<msg timestamp="20230830 07:28:14.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 07:28:03.377" endtime="20230830 07:28:14.257"/>
</kw>
<msg timestamp="20230830 07:28:14.257" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 07:28:03.376" endtime="20230830 07:28:14.258"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 07:28:14.258" endtime="20230830 07:28:14.258"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 07:28:14.262" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 07:28:14.266" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 07:28:14.266" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 07:28:14.259" endtime="20230830 07:28:14.266"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 07:28:14.267" level="INFO"/>
<status status="PASS" starttime="20230830 07:28:14.267" endtime="20230830 07:28:14.267"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 07:28:14.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 07:28:14.268" endtime="20230830 07:28:14.268"/>
</kw>
<status status="PASS" starttime="20230830 07:28:14.258" endtime="20230830 07:28:14.268"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 07:28:03.354" endtime="20230830 07:28:14.269"/>
</test>
<test id="s1-s3-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230830 07:28:14.271" level="INFO">${random} = 63029</msg>
<status status="PASS" starttime="20230830 07:28:14.271" endtime="20230830 07:28:14.272"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 07:28:14.276" level="INFO">Running command 'ozone sh key get /rootca2-volume/rootca2-bucket/rootca2-key /tmp/key-63029 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 07:28:23.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 07:28:23.311" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 07:28:14.274" endtime="20230830 07:28:23.311"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 07:28:23.313" level="INFO"/>
<status status="PASS" starttime="20230830 07:28:23.312" endtime="20230830 07:28:23.313"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 07:28:23.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 07:28:23.313" endtime="20230830 07:28:23.314"/>
</kw>
<status status="PASS" starttime="20230830 07:28:14.273" endtime="20230830 07:28:23.314"/>
</kw>
<msg timestamp="20230830 07:28:23.314" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 07:28:14.273" endtime="20230830 07:28:23.314"/>
</kw>
<msg timestamp="20230830 07:28:23.314" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 07:28:14.272" endtime="20230830 07:28:23.314"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 07:28:23.314" endtime="20230830 07:28:23.315"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 07:28:23.319" level="INFO">Running command 'cat /tmp/key-63029 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 07:28:23.322" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 07:28:23.322" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230830 07:28:23.316" endtime="20230830 07:28:23.322"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 07:28:23.323" level="INFO">rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230830 07:28:23.323" endtime="20230830 07:28:23.323"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 07:28:23.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 07:28:23.324" endtime="20230830 07:28:23.324"/>
</kw>
<msg timestamp="20230830 07:28:23.325" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230830 07:28:23.315" endtime="20230830 07:28:23.325"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 07:28:23.325" endtime="20230830 07:28:23.325"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 07:28:23.329" level="INFO">Running command 'rm /tmp/key-63029 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 07:28:23.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 07:28:23.332" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230830 07:28:23.326" endtime="20230830 07:28:23.332"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 07:28:23.333" level="INFO"/>
<status status="PASS" starttime="20230830 07:28:23.333" endtime="20230830 07:28:23.333"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 07:28:23.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 07:28:23.334" endtime="20230830 07:28:23.334"/>
</kw>
<status status="PASS" starttime="20230830 07:28:23.326" endtime="20230830 07:28:23.334"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 07:28:14.270" endtime="20230830 07:28:23.335"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230830 07:27:50.748" endtime="20230830 07:28:23.336"/>
</suite>
<suite id="s1-s4" name="Root-Ca-Rotation" source="/opt/hadoop/smoketest/scmha/root-ca-rotation.robot">
<test id="s1-s4-t1" name="Verify root CA rotation metrics" line="26">
<kw name="Execute" library="os">
<var>${successRotationLine}</var>
<arg>curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230830 07:28:27.279" level="INFO">Running command 'curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 07:28:27.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20230830 07:28:27.969" level="INFO">${output} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230830 07:28:27.276" endtime="20230830 07:28:27.969"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 07:28:27.970" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230830 07:28:27.969" endtime="20230830 07:28:27.970"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230830 07:28:27.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230830 07:28:27.970" endtime="20230830 07:28:27.971"/>
</kw>
<status status="PASS" starttime="20230830 07:28:27.275" endtime="20230830 07:28:27.971"/>
</kw>
<msg timestamp="20230830 07:28:27.971" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230830 07:28:27.275" endtime="20230830 07:28:27.972"/>
</kw>
<msg timestamp="20230830 07:28:27.972" level="INFO">${successRotationLine} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230830 07:28:27.275" endtime="20230830 07:28:27.972"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${successRotationLine}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 07:28:27.973" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230830 07:28:27.972" endtime="20230830 07:28:27.973"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_1}</var>
<arg>${successRotationLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230830 07:28:27.973" level="INFO">${temp_1} = ['    "NumSuccessRotation" ', ' 2,']</msg>
<status status="PASS" starttime="20230830 07:28:27.973" endtime="20230830 07:28:27.973"/>
</kw>
<kw name="Strip String" library="String">
<var>${temp_2}</var>
<arg>${temp_1[1]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230830 07:28:27.975" level="INFO">${temp_2} = 2,</msg>
<status status="PASS" starttime="20230830 07:28:27.974" endtime="20230830 07:28:27.975"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_3}</var>
<arg>${temp_2}</arg>
<arg>,</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230830 07:28:27.976" level="INFO">${temp_3} = ['2', '']</msg>
<status status="PASS" starttime="20230830 07:28:27.976" endtime="20230830 07:28:27.976"/>
</kw>
<kw name="Strip String" library="String">
<var>${successRotation}</var>
<arg>${temp_3[0]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230830 07:28:27.978" level="INFO">${successRotation} = 2</msg>
<status status="PASS" starttime="20230830 07:28:27.976" endtime="20230830 07:28:27.978"/>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<var>${successRotation}</var>
<arg>${successRotation}</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20230830 07:28:27.979" level="INFO">${successRotation} = 2.0</msg>
<status status="PASS" starttime="20230830 07:28:27.978" endtime="20230830 07:28:27.979"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${successRotation} &gt;= 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230830 07:28:27.979" endtime="20230830 07:28:27.980"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230830 07:28:27.274" endtime="20230830 07:28:27.980"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230830 07:28:27.218" endtime="20230830 07:28:27.982"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="67377"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="ozonesecure-root-ca-rotation">ozonesecure-root-ca-rotation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-root-ca-rotation.Kinit</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Root-Ca-Rotation">ozonesecure-root-ca-rotation.Root-Ca-Rotation</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
