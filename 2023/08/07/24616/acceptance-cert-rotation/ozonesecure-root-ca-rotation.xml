<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230807 10:28:28.745" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-root-ca-rotation">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230807 10:25:30.511" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230807 10:25:30.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20230807 10:25:30.515" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230807 10:25:30.508" endtime="20230807 10:25:30.515"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230807 10:25:30.516" level="INFO">scm</msg>
<status status="PASS" starttime="20230807 10:25:30.516" endtime="20230807 10:25:30.516"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230807 10:25:30.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230807 10:25:30.517" endtime="20230807 10:25:30.517"/>
</kw>
<status status="PASS" starttime="20230807 10:25:30.507" endtime="20230807 10:25:30.517"/>
</kw>
<msg timestamp="20230807 10:25:30.517" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230807 10:25:30.507" endtime="20230807 10:25:30.518"/>
</kw>
<msg timestamp="20230807 10:25:30.518" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230807 10:25:30.506" endtime="20230807 10:25:30.518"/>
</kw>
<msg timestamp="20230807 10:25:30.518" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230807 10:25:30.506" endtime="20230807 10:25:30.518"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230807 10:25:30.519" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230807 10:25:30.518" endtime="20230807 10:25:30.519"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230807 10:25:30.523" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230807 10:25:30.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20230807 10:25:30.642" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230807 10:25:30.521" endtime="20230807 10:25:30.642"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230807 10:25:30.644" level="INFO"/>
<status status="PASS" starttime="20230807 10:25:30.643" endtime="20230807 10:25:30.644"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230807 10:25:30.645" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230807 10:25:30.645" endtime="20230807 10:25:30.645"/>
</kw>
<status status="PASS" starttime="20230807 10:25:30.520" endtime="20230807 10:25:30.645"/>
</kw>
<msg timestamp="20230807 10:25:30.646" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230807 10:25:30.520" endtime="20230807 10:25:30.646"/>
</kw>
<status status="PASS" starttime="20230807 10:25:30.519" endtime="20230807 10:25:30.646"/>
</kw>
<status status="PASS" starttime="20230807 10:25:30.519" endtime="20230807 10:25:30.646"/>
</kw>
<status status="PASS" starttime="20230807 10:25:30.505" endtime="20230807 10:25:30.646"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230807 10:25:30.504" endtime="20230807 10:25:30.646"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230807 10:25:30.448" endtime="20230807 10:25:30.647"/>
</suite>
<suite id="s1-s2" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s2-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230807 10:25:55.932" level="INFO">Running command 'ozone sh volume create rootca-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230807 10:26:02.994" level="INFO">${rc} = 0</msg>
<msg timestamp="20230807 10:26:02.994" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230807 10:25:55.929" endtime="20230807 10:26:02.994"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230807 10:26:02.995" level="INFO"/>
<status status="PASS" starttime="20230807 10:26:02.994" endtime="20230807 10:26:02.995"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230807 10:26:02.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230807 10:26:02.995" endtime="20230807 10:26:02.996"/>
</kw>
<status status="PASS" starttime="20230807 10:25:55.928" endtime="20230807 10:26:02.996"/>
</kw>
<msg timestamp="20230807 10:26:02.996" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230807 10:25:55.928" endtime="20230807 10:26:02.996"/>
</kw>
<msg timestamp="20230807 10:26:02.997" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230807 10:25:55.927" endtime="20230807 10:26:02.997"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230807 10:26:02.997" endtime="20230807 10:26:02.997"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230807 10:26:03.002" level="INFO">Running command 'ozone sh bucket create /rootca-volume/rootca-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230807 10:26:10.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20230807 10:26:10.728" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230807 10:26:02.999" endtime="20230807 10:26:10.728"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230807 10:26:10.729" level="INFO"/>
<status status="PASS" starttime="20230807 10:26:10.729" endtime="20230807 10:26:10.729"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230807 10:26:10.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230807 10:26:10.730" endtime="20230807 10:26:10.730"/>
</kw>
<status status="PASS" starttime="20230807 10:26:02.998" endtime="20230807 10:26:10.730"/>
</kw>
<msg timestamp="20230807 10:26:10.730" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230807 10:26:02.998" endtime="20230807 10:26:10.731"/>
</kw>
<msg timestamp="20230807 10:26:10.731" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230807 10:26:02.997" endtime="20230807 10:26:10.731"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230807 10:26:10.731" endtime="20230807 10:26:10.731"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230807 10:25:55.926" endtime="20230807 10:26:10.732"/>
</test>
<test id="s1-s2-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230807 10:26:10.738" level="INFO">Running command 'echo "rootca: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230807 10:26:10.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20230807 10:26:10.740" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230807 10:26:10.735" endtime="20230807 10:26:10.740"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230807 10:26:10.741" level="INFO"/>
<status status="PASS" starttime="20230807 10:26:10.741" endtime="20230807 10:26:10.741"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230807 10:26:10.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230807 10:26:10.742" endtime="20230807 10:26:10.742"/>
</kw>
<status status="PASS" starttime="20230807 10:26:10.734" endtime="20230807 10:26:10.742"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230807 10:26:10.747" level="INFO">Running command 'ozone sh key put /rootca-volume/rootca-bucket/rootca-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230807 10:26:23.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20230807 10:26:23.125" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230807 10:26:10.745" endtime="20230807 10:26:23.125"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230807 10:26:23.126" level="INFO"/>
<status status="PASS" starttime="20230807 10:26:23.125" endtime="20230807 10:26:23.126"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230807 10:26:23.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230807 10:26:23.127" endtime="20230807 10:26:23.127"/>
</kw>
<status status="PASS" starttime="20230807 10:26:10.744" endtime="20230807 10:26:23.128"/>
</kw>
<msg timestamp="20230807 10:26:23.128" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230807 10:26:10.743" endtime="20230807 10:26:23.128"/>
</kw>
<msg timestamp="20230807 10:26:23.128" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230807 10:26:10.743" endtime="20230807 10:26:23.128"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230807 10:26:23.128" endtime="20230807 10:26:23.129"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230807 10:26:23.133" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230807 10:26:23.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20230807 10:26:23.137" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230807 10:26:23.130" endtime="20230807 10:26:23.137"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230807 10:26:23.138" level="INFO"/>
<status status="PASS" starttime="20230807 10:26:23.137" endtime="20230807 10:26:23.138"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230807 10:26:23.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230807 10:26:23.138" endtime="20230807 10:26:23.139"/>
</kw>
<status status="PASS" starttime="20230807 10:26:23.129" endtime="20230807 10:26:23.139"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230807 10:26:10.733" endtime="20230807 10:26:23.139"/>
</test>
<test id="s1-s2-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230807 10:26:23.142" level="INFO">${random} = 28534</msg>
<status status="PASS" starttime="20230807 10:26:23.141" endtime="20230807 10:26:23.142"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230807 10:26:23.147" level="INFO">Running command 'ozone sh key get /rootca-volume/rootca-bucket/rootca-key /tmp/key-28534 2&gt;&amp;1'.</msg>
<msg timestamp="20230807 10:26:32.956" level="INFO">${rc} = 0</msg>
<msg timestamp="20230807 10:26:32.956" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230807 10:26:23.144" endtime="20230807 10:26:32.956"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230807 10:26:32.958" level="INFO"/>
<status status="PASS" starttime="20230807 10:26:32.957" endtime="20230807 10:26:32.958"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230807 10:26:32.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230807 10:26:32.958" endtime="20230807 10:26:32.959"/>
</kw>
<status status="PASS" starttime="20230807 10:26:23.143" endtime="20230807 10:26:32.959"/>
</kw>
<msg timestamp="20230807 10:26:32.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230807 10:26:23.143" endtime="20230807 10:26:32.959"/>
</kw>
<msg timestamp="20230807 10:26:32.959" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230807 10:26:23.142" endtime="20230807 10:26:32.959"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230807 10:26:32.960" endtime="20230807 10:26:32.960"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230807 10:26:32.964" level="INFO">Running command 'cat /tmp/key-28534 2&gt;&amp;1'.</msg>
<msg timestamp="20230807 10:26:32.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20230807 10:26:32.968" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230807 10:26:32.961" endtime="20230807 10:26:32.968"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230807 10:26:32.969" level="INFO">rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230807 10:26:32.968" endtime="20230807 10:26:32.969"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230807 10:26:32.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230807 10:26:32.969" endtime="20230807 10:26:32.970"/>
</kw>
<msg timestamp="20230807 10:26:32.970" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230807 10:26:32.960" endtime="20230807 10:26:32.970"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230807 10:26:32.970" endtime="20230807 10:26:32.971"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230807 10:26:32.974" level="INFO">Running command 'rm /tmp/key-28534 2&gt;&amp;1'.</msg>
<msg timestamp="20230807 10:26:32.978" level="INFO">${rc} = 0</msg>
<msg timestamp="20230807 10:26:32.978" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230807 10:26:32.972" endtime="20230807 10:26:32.978"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230807 10:26:32.979" level="INFO"/>
<status status="PASS" starttime="20230807 10:26:32.979" endtime="20230807 10:26:32.980"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230807 10:26:32.980" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230807 10:26:32.980" endtime="20230807 10:26:32.980"/>
</kw>
<status status="PASS" starttime="20230807 10:26:32.971" endtime="20230807 10:26:32.981"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230807 10:26:23.140" endtime="20230807 10:26:32.981"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230807 10:25:55.869" endtime="20230807 10:26:32.982"/>
</suite>
<suite id="s1-s3" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s3-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230807 10:27:29.492" level="INFO">Running command 'ozone sh volume create rootca2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230807 10:27:37.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20230807 10:27:37.090" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230807 10:27:29.489" endtime="20230807 10:27:37.090"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230807 10:27:37.091" level="INFO"/>
<status status="PASS" starttime="20230807 10:27:37.091" endtime="20230807 10:27:37.092"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230807 10:27:37.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230807 10:27:37.092" endtime="20230807 10:27:37.092"/>
</kw>
<status status="PASS" starttime="20230807 10:27:29.488" endtime="20230807 10:27:37.093"/>
</kw>
<msg timestamp="20230807 10:27:37.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230807 10:27:29.488" endtime="20230807 10:27:37.093"/>
</kw>
<msg timestamp="20230807 10:27:37.093" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230807 10:27:29.487" endtime="20230807 10:27:37.093"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230807 10:27:37.093" endtime="20230807 10:27:37.094"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230807 10:27:37.098" level="INFO">Running command 'ozone sh bucket create /rootca2-volume/rootca2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230807 10:27:42.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20230807 10:27:42.830" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230807 10:27:37.096" endtime="20230807 10:27:42.830"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230807 10:27:42.831" level="INFO"/>
<status status="PASS" starttime="20230807 10:27:42.831" endtime="20230807 10:27:42.832"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230807 10:27:42.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230807 10:27:42.832" endtime="20230807 10:27:42.832"/>
</kw>
<status status="PASS" starttime="20230807 10:27:37.095" endtime="20230807 10:27:42.833"/>
</kw>
<msg timestamp="20230807 10:27:42.833" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230807 10:27:37.095" endtime="20230807 10:27:42.833"/>
</kw>
<msg timestamp="20230807 10:27:42.833" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230807 10:27:37.094" endtime="20230807 10:27:42.833"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230807 10:27:42.833" endtime="20230807 10:27:42.834"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230807 10:27:29.486" endtime="20230807 10:27:42.834"/>
</test>
<test id="s1-s3-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230807 10:27:42.839" level="INFO">Running command 'echo "rootca2: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230807 10:27:42.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20230807 10:27:42.842" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230807 10:27:42.836" endtime="20230807 10:27:42.842"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230807 10:27:42.843" level="INFO"/>
<status status="PASS" starttime="20230807 10:27:42.843" endtime="20230807 10:27:42.844"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230807 10:27:42.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230807 10:27:42.844" endtime="20230807 10:27:42.844"/>
</kw>
<status status="PASS" starttime="20230807 10:27:42.836" endtime="20230807 10:27:42.845"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230807 10:27:42.850" level="INFO">Running command 'ozone sh key put /rootca2-volume/rootca2-bucket/rootca2-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230807 10:27:52.946" level="INFO">${rc} = 0</msg>
<msg timestamp="20230807 10:27:52.946" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230807 10:27:42.847" endtime="20230807 10:27:52.946"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230807 10:27:52.948" level="INFO"/>
<status status="PASS" starttime="20230807 10:27:52.947" endtime="20230807 10:27:52.948"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230807 10:27:52.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230807 10:27:52.948" endtime="20230807 10:27:52.949"/>
</kw>
<status status="PASS" starttime="20230807 10:27:42.846" endtime="20230807 10:27:52.949"/>
</kw>
<msg timestamp="20230807 10:27:52.949" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230807 10:27:42.845" endtime="20230807 10:27:52.949"/>
</kw>
<msg timestamp="20230807 10:27:52.950" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230807 10:27:42.845" endtime="20230807 10:27:52.950"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230807 10:27:52.950" endtime="20230807 10:27:52.950"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230807 10:27:52.954" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230807 10:27:52.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20230807 10:27:52.958" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230807 10:27:52.951" endtime="20230807 10:27:52.958"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230807 10:27:52.959" level="INFO"/>
<status status="PASS" starttime="20230807 10:27:52.958" endtime="20230807 10:27:52.959"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230807 10:27:52.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230807 10:27:52.959" endtime="20230807 10:27:52.960"/>
</kw>
<status status="PASS" starttime="20230807 10:27:52.951" endtime="20230807 10:27:52.960"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230807 10:27:42.835" endtime="20230807 10:27:52.960"/>
</test>
<test id="s1-s3-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230807 10:27:52.963" level="INFO">${random} = 14032</msg>
<status status="PASS" starttime="20230807 10:27:52.963" endtime="20230807 10:27:52.963"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230807 10:27:52.968" level="INFO">Running command 'ozone sh key get /rootca2-volume/rootca2-bucket/rootca2-key /tmp/key-14032 2&gt;&amp;1'.</msg>
<msg timestamp="20230807 10:28:02.105" level="INFO">${rc} = 0</msg>
<msg timestamp="20230807 10:28:02.105" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230807 10:27:52.965" endtime="20230807 10:28:02.106"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230807 10:28:02.107" level="INFO"/>
<status status="PASS" starttime="20230807 10:28:02.106" endtime="20230807 10:28:02.107"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230807 10:28:02.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230807 10:28:02.107" endtime="20230807 10:28:02.108"/>
</kw>
<status status="PASS" starttime="20230807 10:27:52.965" endtime="20230807 10:28:02.108"/>
</kw>
<msg timestamp="20230807 10:28:02.108" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230807 10:27:52.964" endtime="20230807 10:28:02.109"/>
</kw>
<msg timestamp="20230807 10:28:02.109" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230807 10:27:52.964" endtime="20230807 10:28:02.109"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230807 10:28:02.109" endtime="20230807 10:28:02.109"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230807 10:28:02.113" level="INFO">Running command 'cat /tmp/key-14032 2&gt;&amp;1'.</msg>
<msg timestamp="20230807 10:28:02.117" level="INFO">${rc} = 0</msg>
<msg timestamp="20230807 10:28:02.117" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230807 10:28:02.110" endtime="20230807 10:28:02.117"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230807 10:28:02.118" level="INFO">rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230807 10:28:02.117" endtime="20230807 10:28:02.118"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230807 10:28:02.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230807 10:28:02.118" endtime="20230807 10:28:02.119"/>
</kw>
<msg timestamp="20230807 10:28:02.119" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230807 10:28:02.110" endtime="20230807 10:28:02.119"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230807 10:28:02.119" endtime="20230807 10:28:02.120"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230807 10:28:02.123" level="INFO">Running command 'rm /tmp/key-14032 2&gt;&amp;1'.</msg>
<msg timestamp="20230807 10:28:02.126" level="INFO">${rc} = 0</msg>
<msg timestamp="20230807 10:28:02.126" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230807 10:28:02.121" endtime="20230807 10:28:02.126"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230807 10:28:02.128" level="INFO"/>
<status status="PASS" starttime="20230807 10:28:02.127" endtime="20230807 10:28:02.128"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230807 10:28:02.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230807 10:28:02.128" endtime="20230807 10:28:02.129"/>
</kw>
<status status="PASS" starttime="20230807 10:28:02.120" endtime="20230807 10:28:02.129"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230807 10:27:52.962" endtime="20230807 10:28:02.129"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230807 10:27:29.428" endtime="20230807 10:28:02.131"/>
</suite>
<suite id="s1-s4" name="Root-Ca-Rotation" source="/opt/hadoop/smoketest/scmha/root-ca-rotation.robot">
<test id="s1-s4-t1" name="Verify root CA rotation metrics" line="26">
<kw name="Execute" library="os">
<var>${successRotationLine}</var>
<arg>curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230807 10:28:06.573" level="INFO">Running command 'curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation 2&gt;&amp;1'.</msg>
<msg timestamp="20230807 10:28:07.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20230807 10:28:07.174" level="INFO">${output} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230807 10:28:06.570" endtime="20230807 10:28:07.174"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230807 10:28:07.176" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230807 10:28:07.175" endtime="20230807 10:28:07.176"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230807 10:28:07.177" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230807 10:28:07.176" endtime="20230807 10:28:07.177"/>
</kw>
<status status="PASS" starttime="20230807 10:28:06.569" endtime="20230807 10:28:07.177"/>
</kw>
<msg timestamp="20230807 10:28:07.177" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230807 10:28:06.569" endtime="20230807 10:28:07.177"/>
</kw>
<msg timestamp="20230807 10:28:07.178" level="INFO">${successRotationLine} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230807 10:28:06.568" endtime="20230807 10:28:07.178"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${successRotationLine}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230807 10:28:07.178" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230807 10:28:07.178" endtime="20230807 10:28:07.179"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_1}</var>
<arg>${successRotationLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230807 10:28:07.179" level="INFO">${temp_1} = ['    "NumSuccessRotation" ', ' 2,']</msg>
<status status="PASS" starttime="20230807 10:28:07.179" endtime="20230807 10:28:07.179"/>
</kw>
<kw name="Strip String" library="String">
<var>${temp_2}</var>
<arg>${temp_1[1]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230807 10:28:07.182" level="INFO">${temp_2} = 2,</msg>
<status status="PASS" starttime="20230807 10:28:07.179" endtime="20230807 10:28:07.182"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_3}</var>
<arg>${temp_2}</arg>
<arg>,</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230807 10:28:07.184" level="INFO">${temp_3} = ['2', '']</msg>
<status status="PASS" starttime="20230807 10:28:07.182" endtime="20230807 10:28:07.184"/>
</kw>
<kw name="Strip String" library="String">
<var>${successRotation}</var>
<arg>${temp_3[0]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230807 10:28:07.187" level="INFO">${successRotation} = 2</msg>
<status status="PASS" starttime="20230807 10:28:07.185" endtime="20230807 10:28:07.187"/>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<var>${successRotation}</var>
<arg>${successRotation}</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20230807 10:28:07.189" level="INFO">${successRotation} = 2.0</msg>
<status status="PASS" starttime="20230807 10:28:07.189" endtime="20230807 10:28:07.189"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${successRotation} &gt;= 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230807 10:28:07.189" endtime="20230807 10:28:07.190"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230807 10:28:06.567" endtime="20230807 10:28:07.190"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230807 10:28:06.509" endtime="20230807 10:28:07.192"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="70698"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="ozonesecure-root-ca-rotation">ozonesecure-root-ca-rotation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-root-ca-rotation.Kinit</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Root-Ca-Rotation">ozonesecure-root-ca-rotation.Root-Ca-Rotation</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
