<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230821 08:51:05.330" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-root-ca-rotation">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230821 08:47:47.998" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230821 08:47:48.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20230821 08:47:48.015" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230821 08:47:47.981" endtime="20230821 08:47:48.015"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230821 08:47:48.016" level="INFO">scm</msg>
<status status="PASS" starttime="20230821 08:47:48.015" endtime="20230821 08:47:48.017"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230821 08:47:48.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230821 08:47:48.017" endtime="20230821 08:47:48.026"/>
</kw>
<status status="PASS" starttime="20230821 08:47:47.980" endtime="20230821 08:47:48.026"/>
</kw>
<msg timestamp="20230821 08:47:48.026" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230821 08:47:47.979" endtime="20230821 08:47:48.027"/>
</kw>
<msg timestamp="20230821 08:47:48.027" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230821 08:47:47.979" endtime="20230821 08:47:48.027"/>
</kw>
<msg timestamp="20230821 08:47:48.027" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230821 08:47:47.976" endtime="20230821 08:47:48.027"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230821 08:47:48.034" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230821 08:47:48.028" endtime="20230821 08:47:48.034"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230821 08:47:48.057" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230821 08:47:48.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20230821 08:47:48.127" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230821 08:47:48.039" endtime="20230821 08:47:48.127"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230821 08:47:48.129" level="INFO"/>
<status status="PASS" starttime="20230821 08:47:48.127" endtime="20230821 08:47:48.129"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230821 08:47:48.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230821 08:47:48.130" endtime="20230821 08:47:48.141"/>
</kw>
<status status="PASS" starttime="20230821 08:47:48.038" endtime="20230821 08:47:48.142"/>
</kw>
<msg timestamp="20230821 08:47:48.142" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230821 08:47:48.035" endtime="20230821 08:47:48.142"/>
</kw>
<status status="PASS" starttime="20230821 08:47:48.035" endtime="20230821 08:47:48.143"/>
</kw>
<status status="PASS" starttime="20230821 08:47:48.034" endtime="20230821 08:47:48.143"/>
</kw>
<status status="PASS" starttime="20230821 08:47:47.968" endtime="20230821 08:47:48.149"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230821 08:47:47.965" endtime="20230821 08:47:48.150"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230821 08:47:47.642" endtime="20230821 08:47:48.155"/>
</suite>
<suite id="s1-s2" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s2-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230821 08:48:11.650" level="INFO">Running command 'ozone sh volume create rootca-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230821 08:48:21.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20230821 08:48:21.595" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230821 08:48:11.628" endtime="20230821 08:48:21.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230821 08:48:21.598" level="INFO"/>
<status status="PASS" starttime="20230821 08:48:21.596" endtime="20230821 08:48:21.599"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230821 08:48:21.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230821 08:48:21.599" endtime="20230821 08:48:21.600"/>
</kw>
<status status="PASS" starttime="20230821 08:48:11.628" endtime="20230821 08:48:21.600"/>
</kw>
<msg timestamp="20230821 08:48:21.601" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230821 08:48:11.627" endtime="20230821 08:48:21.601"/>
</kw>
<msg timestamp="20230821 08:48:21.601" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230821 08:48:11.626" endtime="20230821 08:48:21.601"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230821 08:48:21.601" endtime="20230821 08:48:21.602"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230821 08:48:21.609" level="INFO">Running command 'ozone sh bucket create /rootca-volume/rootca-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230821 08:48:31.848" level="INFO">${rc} = 0</msg>
<msg timestamp="20230821 08:48:31.848" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230821 08:48:21.605" endtime="20230821 08:48:31.848"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230821 08:48:31.850" level="INFO"/>
<status status="PASS" starttime="20230821 08:48:31.849" endtime="20230821 08:48:31.851"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230821 08:48:31.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230821 08:48:31.851" endtime="20230821 08:48:31.852"/>
</kw>
<status status="PASS" starttime="20230821 08:48:21.604" endtime="20230821 08:48:31.852"/>
</kw>
<msg timestamp="20230821 08:48:31.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230821 08:48:21.603" endtime="20230821 08:48:31.855"/>
</kw>
<msg timestamp="20230821 08:48:31.855" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230821 08:48:21.603" endtime="20230821 08:48:31.855"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230821 08:48:31.856" endtime="20230821 08:48:31.858"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230821 08:48:11.591" endtime="20230821 08:48:31.858"/>
</test>
<test id="s1-s2-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230821 08:48:31.912" level="INFO">Running command 'echo "rootca: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230821 08:48:31.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20230821 08:48:31.919" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230821 08:48:31.906" endtime="20230821 08:48:31.919"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230821 08:48:31.923" level="INFO"/>
<status status="PASS" starttime="20230821 08:48:31.920" endtime="20230821 08:48:31.923"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230821 08:48:31.926" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230821 08:48:31.925" endtime="20230821 08:48:31.928"/>
</kw>
<status status="PASS" starttime="20230821 08:48:31.899" endtime="20230821 08:48:31.928"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230821 08:48:31.940" level="INFO">Running command 'ozone sh key put /rootca-volume/rootca-bucket/rootca-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230821 08:48:48.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20230821 08:48:48.723" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230821 08:48:31.933" endtime="20230821 08:48:48.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230821 08:48:48.725" level="INFO"/>
<status status="PASS" starttime="20230821 08:48:48.723" endtime="20230821 08:48:48.725"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230821 08:48:48.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230821 08:48:48.725" endtime="20230821 08:48:48.727"/>
</kw>
<status status="PASS" starttime="20230821 08:48:31.932" endtime="20230821 08:48:48.727"/>
</kw>
<msg timestamp="20230821 08:48:48.727" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230821 08:48:31.930" endtime="20230821 08:48:48.728"/>
</kw>
<msg timestamp="20230821 08:48:48.728" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230821 08:48:31.928" endtime="20230821 08:48:48.728"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230821 08:48:48.729" endtime="20230821 08:48:48.729"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230821 08:48:48.734" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230821 08:48:48.738" level="INFO">${rc} = 0</msg>
<msg timestamp="20230821 08:48:48.738" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230821 08:48:48.730" endtime="20230821 08:48:48.738"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230821 08:48:48.740" level="INFO"/>
<status status="PASS" starttime="20230821 08:48:48.739" endtime="20230821 08:48:48.740"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230821 08:48:48.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230821 08:48:48.740" endtime="20230821 08:48:48.741"/>
</kw>
<status status="PASS" starttime="20230821 08:48:48.729" endtime="20230821 08:48:48.741"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230821 08:48:31.895" endtime="20230821 08:48:48.741"/>
</test>
<test id="s1-s2-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230821 08:48:48.745" level="INFO">${random} = 93947</msg>
<status status="PASS" starttime="20230821 08:48:48.744" endtime="20230821 08:48:48.745"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230821 08:48:48.752" level="INFO">Running command 'ozone sh key get /rootca-volume/rootca-bucket/rootca-key /tmp/key-93947 2&gt;&amp;1'.</msg>
<msg timestamp="20230821 08:49:01.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20230821 08:49:01.227" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230821 08:48:48.747" endtime="20230821 08:49:01.227"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230821 08:49:01.229" level="INFO"/>
<status status="PASS" starttime="20230821 08:49:01.228" endtime="20230821 08:49:01.229"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230821 08:49:01.230" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230821 08:49:01.230" endtime="20230821 08:49:01.231"/>
</kw>
<status status="PASS" starttime="20230821 08:48:48.747" endtime="20230821 08:49:01.231"/>
</kw>
<msg timestamp="20230821 08:49:01.231" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230821 08:48:48.746" endtime="20230821 08:49:01.231"/>
</kw>
<msg timestamp="20230821 08:49:01.231" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230821 08:48:48.745" endtime="20230821 08:49:01.232"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230821 08:49:01.232" endtime="20230821 08:49:01.233"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230821 08:49:01.238" level="INFO">Running command 'cat /tmp/key-93947 2&gt;&amp;1'.</msg>
<msg timestamp="20230821 08:49:01.243" level="INFO">${rc} = 0</msg>
<msg timestamp="20230821 08:49:01.244" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230821 08:49:01.234" endtime="20230821 08:49:01.244"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230821 08:49:01.246" level="INFO">rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230821 08:49:01.244" endtime="20230821 08:49:01.246"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230821 08:49:01.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230821 08:49:01.246" endtime="20230821 08:49:01.248"/>
</kw>
<msg timestamp="20230821 08:49:01.248" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230821 08:49:01.233" endtime="20230821 08:49:01.248"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230821 08:49:01.249" endtime="20230821 08:49:01.251"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230821 08:49:01.262" level="INFO">Running command 'rm /tmp/key-93947 2&gt;&amp;1'.</msg>
<msg timestamp="20230821 08:49:01.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20230821 08:49:01.274" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230821 08:49:01.252" endtime="20230821 08:49:01.274"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230821 08:49:01.277" level="INFO"/>
<status status="PASS" starttime="20230821 08:49:01.275" endtime="20230821 08:49:01.277"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230821 08:49:01.279" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230821 08:49:01.277" endtime="20230821 08:49:01.279"/>
</kw>
<status status="PASS" starttime="20230821 08:49:01.251" endtime="20230821 08:49:01.279"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230821 08:48:48.743" endtime="20230821 08:49:01.280"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230821 08:48:11.255" endtime="20230821 08:49:01.283"/>
</suite>
<suite id="s1-s3" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s3-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230821 08:49:49.310" level="INFO">Running command 'ozone sh volume create rootca2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230821 08:49:57.921" level="INFO">${rc} = 0</msg>
<msg timestamp="20230821 08:49:57.921" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230821 08:49:49.306" endtime="20230821 08:49:57.921"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230821 08:49:57.923" level="INFO"/>
<status status="PASS" starttime="20230821 08:49:57.922" endtime="20230821 08:49:57.923"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230821 08:49:57.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230821 08:49:57.923" endtime="20230821 08:49:57.924"/>
</kw>
<status status="PASS" starttime="20230821 08:49:49.306" endtime="20230821 08:49:57.924"/>
</kw>
<msg timestamp="20230821 08:49:57.924" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230821 08:49:49.305" endtime="20230821 08:49:57.925"/>
</kw>
<msg timestamp="20230821 08:49:57.925" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230821 08:49:49.304" endtime="20230821 08:49:57.925"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230821 08:49:57.925" endtime="20230821 08:49:57.926"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230821 08:49:57.932" level="INFO">Running command 'ozone sh bucket create /rootca2-volume/rootca2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230821 08:50:06.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20230821 08:50:06.938" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230821 08:49:57.928" endtime="20230821 08:50:06.938"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230821 08:50:06.942" level="INFO"/>
<status status="PASS" starttime="20230821 08:50:06.939" endtime="20230821 08:50:06.942"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230821 08:50:06.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230821 08:50:06.942" endtime="20230821 08:50:06.943"/>
</kw>
<status status="PASS" starttime="20230821 08:49:57.928" endtime="20230821 08:50:06.943"/>
</kw>
<msg timestamp="20230821 08:50:06.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230821 08:49:57.927" endtime="20230821 08:50:06.943"/>
</kw>
<msg timestamp="20230821 08:50:06.944" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230821 08:49:57.926" endtime="20230821 08:50:06.944"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230821 08:50:06.944" endtime="20230821 08:50:06.945"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230821 08:49:49.303" endtime="20230821 08:50:06.946"/>
</test>
<test id="s1-s3-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230821 08:50:06.954" level="INFO">Running command 'echo "rootca2: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230821 08:50:06.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20230821 08:50:06.958" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230821 08:50:06.950" endtime="20230821 08:50:06.958"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230821 08:50:06.960" level="INFO"/>
<status status="PASS" starttime="20230821 08:50:06.959" endtime="20230821 08:50:06.960"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230821 08:50:06.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230821 08:50:06.961" endtime="20230821 08:50:06.962"/>
</kw>
<status status="PASS" starttime="20230821 08:50:06.949" endtime="20230821 08:50:06.962"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230821 08:50:06.969" level="INFO">Running command 'ozone sh key put /rootca2-volume/rootca2-bucket/rootca2-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230821 08:50:21.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20230821 08:50:21.350" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230821 08:50:06.965" endtime="20230821 08:50:21.350"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230821 08:50:21.351" level="INFO"/>
<status status="PASS" starttime="20230821 08:50:21.350" endtime="20230821 08:50:21.351"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230821 08:50:21.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230821 08:50:21.352" endtime="20230821 08:50:21.354"/>
</kw>
<status status="PASS" starttime="20230821 08:50:06.964" endtime="20230821 08:50:21.354"/>
</kw>
<msg timestamp="20230821 08:50:21.354" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230821 08:50:06.963" endtime="20230821 08:50:21.354"/>
</kw>
<msg timestamp="20230821 08:50:21.354" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230821 08:50:06.962" endtime="20230821 08:50:21.354"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230821 08:50:21.355" endtime="20230821 08:50:21.355"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230821 08:50:21.365" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230821 08:50:21.369" level="INFO">${rc} = 0</msg>
<msg timestamp="20230821 08:50:21.369" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230821 08:50:21.356" endtime="20230821 08:50:21.369"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230821 08:50:21.371" level="INFO"/>
<status status="PASS" starttime="20230821 08:50:21.370" endtime="20230821 08:50:21.371"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230821 08:50:21.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230821 08:50:21.371" endtime="20230821 08:50:21.372"/>
</kw>
<status status="PASS" starttime="20230821 08:50:21.355" endtime="20230821 08:50:21.372"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230821 08:50:06.947" endtime="20230821 08:50:21.372"/>
</test>
<test id="s1-s3-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230821 08:50:21.375" level="INFO">${random} = 30931</msg>
<status status="PASS" starttime="20230821 08:50:21.374" endtime="20230821 08:50:21.375"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230821 08:50:21.380" level="INFO">Running command 'ozone sh key get /rootca2-volume/rootca2-bucket/rootca2-key /tmp/key-30931 2&gt;&amp;1'.</msg>
<msg timestamp="20230821 08:50:33.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20230821 08:50:33.554" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230821 08:50:21.377" endtime="20230821 08:50:33.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230821 08:50:33.556" level="INFO"/>
<status status="PASS" starttime="20230821 08:50:33.555" endtime="20230821 08:50:33.556"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230821 08:50:33.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230821 08:50:33.556" endtime="20230821 08:50:33.557"/>
</kw>
<status status="PASS" starttime="20230821 08:50:21.376" endtime="20230821 08:50:33.558"/>
</kw>
<msg timestamp="20230821 08:50:33.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230821 08:50:21.376" endtime="20230821 08:50:33.558"/>
</kw>
<msg timestamp="20230821 08:50:33.558" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230821 08:50:21.375" endtime="20230821 08:50:33.558"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230821 08:50:33.559" endtime="20230821 08:50:33.559"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230821 08:50:33.566" level="INFO">Running command 'cat /tmp/key-30931 2&gt;&amp;1'.</msg>
<msg timestamp="20230821 08:50:33.571" level="INFO">${rc} = 0</msg>
<msg timestamp="20230821 08:50:33.572" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230821 08:50:33.561" endtime="20230821 08:50:33.572"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230821 08:50:33.574" level="INFO">rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230821 08:50:33.572" endtime="20230821 08:50:33.574"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230821 08:50:33.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230821 08:50:33.574" endtime="20230821 08:50:33.575"/>
</kw>
<msg timestamp="20230821 08:50:33.575" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230821 08:50:33.559" endtime="20230821 08:50:33.576"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230821 08:50:33.576" endtime="20230821 08:50:33.576"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230821 08:50:33.581" level="INFO">Running command 'rm /tmp/key-30931 2&gt;&amp;1'.</msg>
<msg timestamp="20230821 08:50:33.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20230821 08:50:33.585" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230821 08:50:33.578" endtime="20230821 08:50:33.586"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230821 08:50:33.588" level="INFO"/>
<status status="PASS" starttime="20230821 08:50:33.586" endtime="20230821 08:50:33.588"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230821 08:50:33.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230821 08:50:33.588" endtime="20230821 08:50:33.589"/>
</kw>
<status status="PASS" starttime="20230821 08:50:33.577" endtime="20230821 08:50:33.590"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230821 08:50:21.373" endtime="20230821 08:50:33.595"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230821 08:49:49.204" endtime="20230821 08:50:33.597"/>
</suite>
<suite id="s1-s4" name="Root-Ca-Rotation" source="/opt/hadoop/smoketest/scmha/root-ca-rotation.robot">
<test id="s1-s4-t1" name="Verify root CA rotation metrics" line="26">
<kw name="Execute" library="os">
<var>${successRotationLine}</var>
<arg>curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230821 08:50:38.691" level="INFO">Running command 'curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation 2&gt;&amp;1'.</msg>
<msg timestamp="20230821 08:50:39.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20230821 08:50:39.708" level="INFO">${output} =     "NumSuccessRotation" : 3,</msg>
<status status="PASS" starttime="20230821 08:50:38.688" endtime="20230821 08:50:39.708"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230821 08:50:39.710" level="INFO">    "NumSuccessRotation" : 3,</msg>
<status status="PASS" starttime="20230821 08:50:39.709" endtime="20230821 08:50:39.710"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230821 08:50:39.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230821 08:50:39.710" endtime="20230821 08:50:39.711"/>
</kw>
<status status="PASS" starttime="20230821 08:50:38.687" endtime="20230821 08:50:39.712"/>
</kw>
<msg timestamp="20230821 08:50:39.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230821 08:50:38.686" endtime="20230821 08:50:39.712"/>
</kw>
<msg timestamp="20230821 08:50:39.712" level="INFO">${successRotationLine} =     "NumSuccessRotation" : 3,</msg>
<status status="PASS" starttime="20230821 08:50:38.686" endtime="20230821 08:50:39.712"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${successRotationLine}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230821 08:50:39.713" level="INFO">    "NumSuccessRotation" : 3,</msg>
<status status="PASS" starttime="20230821 08:50:39.712" endtime="20230821 08:50:39.713"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_1}</var>
<arg>${successRotationLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230821 08:50:39.715" level="INFO">${temp_1} = ['    "NumSuccessRotation" ', ' 3,']</msg>
<status status="PASS" starttime="20230821 08:50:39.713" endtime="20230821 08:50:39.715"/>
</kw>
<kw name="Strip String" library="String">
<var>${temp_2}</var>
<arg>${temp_1[1]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230821 08:50:39.720" level="INFO">${temp_2} = 3,</msg>
<status status="PASS" starttime="20230821 08:50:39.715" endtime="20230821 08:50:39.720"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_3}</var>
<arg>${temp_2}</arg>
<arg>,</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230821 08:50:39.721" level="INFO">${temp_3} = ['3', '']</msg>
<status status="PASS" starttime="20230821 08:50:39.720" endtime="20230821 08:50:39.721"/>
</kw>
<kw name="Strip String" library="String">
<var>${successRotation}</var>
<arg>${temp_3[0]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230821 08:50:39.723" level="INFO">${successRotation} = 3</msg>
<status status="PASS" starttime="20230821 08:50:39.722" endtime="20230821 08:50:39.723"/>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<var>${successRotation}</var>
<arg>${successRotation}</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20230821 08:50:39.724" level="INFO">${successRotation} = 3.0</msg>
<status status="PASS" starttime="20230821 08:50:39.724" endtime="20230821 08:50:39.725"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${successRotation} &gt;= 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230821 08:50:39.725" endtime="20230821 08:50:39.726"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230821 08:50:38.685" endtime="20230821 08:50:39.726"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230821 08:50:38.557" endtime="20230821 08:50:39.729"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="96106"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="ozonesecure-root-ca-rotation">ozonesecure-root-ca-rotation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-root-ca-rotation.Kinit</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Root-Ca-Rotation">ozonesecure-root-ca-rotation.Root-Ca-Rotation</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
