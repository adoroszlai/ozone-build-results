<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230821 08:44:45.996" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-certificate-rotation" source="/opt/hadoop/smoketest/certrotation">
<suite id="s1-s1" name="Cert-Rotation" source="/opt/hadoop/smoketest/certrotation/cert-rotation.robot">
<kw name="Setup Test" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230821 08:42:24.681" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230821 08:42:24.693" level="INFO">${rc} = 0</msg>
<msg timestamp="20230821 08:42:24.693" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230821 08:42:24.674" endtime="20230821 08:42:24.693"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230821 08:42:24.697" level="INFO">scm</msg>
<status status="PASS" starttime="20230821 08:42:24.695" endtime="20230821 08:42:24.698"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230821 08:42:24.700" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230821 08:42:24.699" endtime="20230821 08:42:24.701"/>
</kw>
<status status="PASS" starttime="20230821 08:42:24.674" endtime="20230821 08:42:24.702"/>
</kw>
<msg timestamp="20230821 08:42:24.702" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230821 08:42:24.673" endtime="20230821 08:42:24.702"/>
</kw>
<msg timestamp="20230821 08:42:24.703" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230821 08:42:24.671" endtime="20230821 08:42:24.703"/>
</kw>
<msg timestamp="20230821 08:42:24.703" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230821 08:42:24.671" endtime="20230821 08:42:24.703"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230821 08:42:24.704" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230821 08:42:24.703" endtime="20230821 08:42:24.704"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230821 08:42:24.717" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230821 08:42:24.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20230821 08:42:24.785" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230821 08:42:24.712" endtime="20230821 08:42:24.785"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230821 08:42:24.787" level="INFO"/>
<status status="PASS" starttime="20230821 08:42:24.786" endtime="20230821 08:42:24.787"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230821 08:42:24.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230821 08:42:24.787" endtime="20230821 08:42:24.788"/>
</kw>
<status status="PASS" starttime="20230821 08:42:24.710" endtime="20230821 08:42:24.788"/>
</kw>
<msg timestamp="20230821 08:42:24.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230821 08:42:24.708" endtime="20230821 08:42:24.788"/>
</kw>
<status status="PASS" starttime="20230821 08:42:24.706" endtime="20230821 08:42:24.788"/>
</kw>
<status status="PASS" starttime="20230821 08:42:24.705" endtime="20230821 08:42:24.789"/>
</kw>
<status status="PASS" starttime="20230821 08:42:24.670" endtime="20230821 08:42:24.789"/>
</kw>
<status status="PASS" starttime="20230821 08:42:24.668" endtime="20230821 08:42:24.789"/>
</kw>
<status status="PASS" starttime="20230821 08:42:24.667" endtime="20230821 08:42:24.789"/>
</kw>
<test id="s1-s1-t1" name="Test datanode functions before and after certificate rotation" line="55">
<kw name="Basic key generation and validation">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230821 08:42:24.793" level="INFO">${random} = hhD4SHLDVF</msg>
<status status="PASS" starttime="20230821 08:42:24.792" endtime="20230821 08:42:24.793"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230821 08:42:24.810" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p hhD4SHLDVF  2&gt;&amp;1'.</msg>
<msg timestamp="20230821 08:42:48.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20230821 08:42:48.365" level="INFO">${output} = 2023-08-21 08:42:29,946 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-21 08:42:30,490 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230821 08:42:24.803" endtime="20230821 08:42:48.365"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230821 08:42:48.367" level="INFO">2023-08-21 08:42:29,946 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-21 08:42:30,490 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-08-21 08:42:30,490 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-08-21 08:42:30,922 [main] INFO freon.BaseFreonGenerator: Executing test with prefix hhD4SHLDVF and number-of-tests 1
2023-08-21 08:42:31,517 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-21 08:42:32,561 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-21 08:42:33,562 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-21 08:42:34,563 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-21 08:42:35,563 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-21 08:42:36,564 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-21 08:42:37,568 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-21 08:42:38,569 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-21 08:42:39,570 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-21 08:42:39,985 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser as owner and space quota set to -1 bytes, counts quota set to -1
2023-08-21 08:42:40,457 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2023-08-21 08:42:40,577 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-21 08:42:41,578 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-21 08:42:42,323 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-08-21 08:42:42,418 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2023-08-21 08:42:42,582 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-21 08:42:42,855 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-08-21 08:42:43,582 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-21 08:42:44,583 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-21 08:42:45,584 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-21 08:42:46,585 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-21 08:42:47,586 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-08-21 08:42:47,979 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=6712.986514, max=6712.986514, mean=6712.986514, stddev=0.0, median=6712.986514, p75=6712.986514, p95=6712.986514, p98=6712.986514, p99=6712.986514, p999=6712.986514, mean_rate=0.1376406343301704, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-08-21 08:42:47,980 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 16
2023-08-21 08:42:47,981 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-08-21 08:42:47,981 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230821 08:42:48.366" endtime="20230821 08:42:48.369"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230821 08:42:48.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230821 08:42:48.371" endtime="20230821 08:42:48.372"/>
</kw>
<status status="PASS" starttime="20230821 08:42:24.802" endtime="20230821 08:42:48.372"/>
</kw>
<msg timestamp="20230821 08:42:48.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230821 08:42:24.801" endtime="20230821 08:42:48.372"/>
</kw>
<msg timestamp="20230821 08:42:48.373" level="INFO">${result} = 2023-08-21 08:42:29,946 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-21 08:42:30,490 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230821 08:42:24.799" endtime="20230821 08:42:48.373"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230821 08:42:48.373" endtime="20230821 08:42:48.374"/>
</kw>
<status status="PASS" starttime="20230821 08:42:24.793" endtime="20230821 08:42:48.374"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230821 08:42:48.382" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p hhD4SHLDVF  2&gt;&amp;1'.</msg>
<msg timestamp="20230821 08:43:04.338" level="INFO">${rc} = 0</msg>
<msg timestamp="20230821 08:43:04.338" level="INFO">${output} = 2023-08-21 08:42:54,782 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-21 08:42:55,038 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230821 08:42:48.378" endtime="20230821 08:43:04.338"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230821 08:43:04.340" level="INFO">2023-08-21 08:42:54,782 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-21 08:42:55,038 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-08-21 08:42:55,038 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-08-21 08:42:55,176 [main] INFO freon.BaseFreonGenerator: Executing test with prefix hhD4SHLDVF and number-of-tests 1
2023-08-21 08:42:55,264 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-21 08:42:56,271 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-21 08:42:57,272 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-21 08:42:58,273 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-21 08:42:59,081 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-08-21 08:42:59,296 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-21 08:43:00,299 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-21 08:43:01,299 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-21 08:43:02,300 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-21 08:43:03,300 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-08-21 08:43:03,929 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=82.260343, max=82.260343, mean=82.260343, stddev=0.0, median=82.260343, p75=82.260343, p95=82.260343, p98=82.260343, p99=82.260343, p999=82.260343, mean_rate=0.8236794803518178, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-08-21 08:43:03,930 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 9
2023-08-21 08:43:03,931 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-08-21 08:43:03,931 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230821 08:43:04.339" endtime="20230821 08:43:04.340"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230821 08:43:04.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230821 08:43:04.340" endtime="20230821 08:43:04.342"/>
</kw>
<status status="PASS" starttime="20230821 08:42:48.378" endtime="20230821 08:43:04.342"/>
</kw>
<msg timestamp="20230821 08:43:04.342" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230821 08:42:48.377" endtime="20230821 08:43:04.342"/>
</kw>
<msg timestamp="20230821 08:43:04.343" level="INFO">${result} = 2023-08-21 08:42:54,782 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-21 08:42:55,038 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230821 08:42:48.376" endtime="20230821 08:43:04.343"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230821 08:43:04.343" endtime="20230821 08:43:04.344"/>
</kw>
<status status="PASS" starttime="20230821 08:42:48.375" endtime="20230821 08:43:04.344"/>
</kw>
<status status="PASS" starttime="20230821 08:42:24.791" endtime="20230821 08:43:04.344"/>
</kw>
<kw name="Find certificate duration">
<var>${certDuration}</var>
<kw name="Execute" library="os">
<var>${waitTime}</var>
<arg>ozone getconf confKey hdds.x509.default.duration | sed 's/PT//'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230821 08:43:04.352" level="INFO">Running command 'ozone getconf confKey hdds.x509.default.duration | sed 's/PT//' 2&gt;&amp;1'.</msg>
<msg timestamp="20230821 08:43:06.891" level="INFO">${rc} = 0</msg>
<msg timestamp="20230821 08:43:06.891" level="INFO">${output} = 40s</msg>
<status status="PASS" starttime="20230821 08:43:04.348" endtime="20230821 08:43:06.892"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230821 08:43:06.893" level="INFO">40s</msg>
<status status="PASS" starttime="20230821 08:43:06.892" endtime="20230821 08:43:06.894"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230821 08:43:06.894" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230821 08:43:06.894" endtime="20230821 08:43:06.895"/>
</kw>
<status status="PASS" starttime="20230821 08:43:04.347" endtime="20230821 08:43:06.895"/>
</kw>
<msg timestamp="20230821 08:43:06.895" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230821 08:43:04.346" endtime="20230821 08:43:06.895"/>
</kw>
<msg timestamp="20230821 08:43:06.895" level="INFO">${waitTime} = 40s</msg>
<status status="PASS" starttime="20230821 08:43:04.346" endtime="20230821 08:43:06.895"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>"${waitTime}" != "${EMPTY}"</arg>
<arg>${waitTime}</arg>
<arg>0s</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230821 08:43:06.897" level="INFO">${result} = 40s</msg>
<status status="PASS" starttime="20230821 08:43:06.896" endtime="20230821 08:43:06.897"/>
</kw>
<msg timestamp="20230821 08:43:06.898" level="INFO">${certDuration} = 40s</msg>
<status status="PASS" starttime="20230821 08:43:04.345" endtime="20230821 08:43:06.898"/>
</kw>
<kw name="Double duration">
<var>${doubleDuration}</var>
<arg>${certDuration}</arg>
<kw name="Add Time To Time" library="DateTime">
<var>${doubleDuration}</var>
<arg>${duration}</arg>
<arg>${duration}</arg>
<doc>Adds time to another time and returns the resulting time.</doc>
<msg timestamp="20230821 08:43:06.899" level="INFO">${doubleDuration} = 80.0</msg>
<status status="PASS" starttime="20230821 08:43:06.899" endtime="20230821 08:43:06.899"/>
</kw>
<msg timestamp="20230821 08:43:06.900" level="INFO">${doubleDuration} = 80.0</msg>
<status status="PASS" starttime="20230821 08:43:06.898" endtime="20230821 08:43:06.900"/>
</kw>
<kw name="Get datanode cert serial">
<var>${certId1}</var>
<kw name="Execute" library="os">
<var>${certSerial}</var>
<arg>openssl s_client -connect "${datanode}":"${port}" -showcerts | openssl x509 -noout -serial | grep serial | sed 's/serial=//'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230821 08:43:06.905" level="INFO">Running command 'openssl s_client -connect "datanode":"9859" -showcerts | openssl x509 -noout -serial | grep serial | sed 's/serial=//' 2&gt;&amp;1'.</msg>
<msg timestamp="20230821 08:43:07.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20230821 08:43:07.058" level="INFO">${output} = B88D52EC76</msg>
<status status="PASS" starttime="20230821 08:43:06.902" endtime="20230821 08:43:07.058"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230821 08:43:07.060" level="INFO">B88D52EC76</msg>
<status status="PASS" starttime="20230821 08:43:07.059" endtime="20230821 08:43:07.060"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230821 08:43:07.061" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230821 08:43:07.060" endtime="20230821 08:43:07.061"/>
</kw>
<status status="PASS" starttime="20230821 08:43:06.902" endtime="20230821 08:43:07.061"/>
</kw>
<msg timestamp="20230821 08:43:07.062" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230821 08:43:06.901" endtime="20230821 08:43:07.062"/>
</kw>
<msg timestamp="20230821 08:43:07.062" level="INFO">${certSerial} = B88D52EC76</msg>
<status status="PASS" starttime="20230821 08:43:06.900" endtime="20230821 08:43:07.062"/>
</kw>
<msg timestamp="20230821 08:43:07.062" level="INFO">${certId1} = B88D52EC76</msg>
<status status="PASS" starttime="20230821 08:43:06.900" endtime="20230821 08:43:07.062"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${doubleDuration}</arg>
<arg>5sec</arg>
<arg>Datanode has new certificate</arg>
<arg>${certId1}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Datanode has new certificate">
<arg>${certId1}</arg>
<kw name="Get datanode cert serial">
<var>${newCertId}</var>
<kw name="Execute" library="os">
<var>${certSerial}</var>
<arg>openssl s_client -connect "${datanode}":"${port}" -showcerts | openssl x509 -noout -serial | grep serial | sed 's/serial=//'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230821 08:43:07.072" level="INFO">Running command 'openssl s_client -connect "datanode":"9859" -showcerts | openssl x509 -noout -serial | grep serial | sed 's/serial=//' 2&gt;&amp;1'.</msg>
<msg timestamp="20230821 08:43:07.190" level="INFO">${rc} = 0</msg>
<msg timestamp="20230821 08:43:07.190" level="INFO">${output} = B5461965EA</msg>
<status status="PASS" starttime="20230821 08:43:07.068" endtime="20230821 08:43:07.190"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230821 08:43:07.192" level="INFO">B5461965EA</msg>
<status status="PASS" starttime="20230821 08:43:07.191" endtime="20230821 08:43:07.192"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230821 08:43:07.193" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230821 08:43:07.192" endtime="20230821 08:43:07.193"/>
</kw>
<status status="PASS" starttime="20230821 08:43:07.068" endtime="20230821 08:43:07.193"/>
</kw>
<msg timestamp="20230821 08:43:07.193" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230821 08:43:07.067" endtime="20230821 08:43:07.194"/>
</kw>
<msg timestamp="20230821 08:43:07.194" level="INFO">${certSerial} = B5461965EA</msg>
<status status="PASS" starttime="20230821 08:43:07.066" endtime="20230821 08:43:07.194"/>
</kw>
<msg timestamp="20230821 08:43:07.194" level="INFO">${newCertId} = B5461965EA</msg>
<status status="PASS" starttime="20230821 08:43:07.066" endtime="20230821 08:43:07.194"/>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${certId}</arg>
<arg>${newCertId}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="PASS" starttime="20230821 08:43:07.195" endtime="20230821 08:43:07.195"/>
</kw>
<status status="PASS" starttime="20230821 08:43:07.065" endtime="20230821 08:43:07.195"/>
</kw>
<status status="PASS" starttime="20230821 08:43:07.063" endtime="20230821 08:43:07.196"/>
</kw>
<kw name="Basic key generation and validation">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230821 08:43:07.197" level="INFO">${random} = uW6uz6ab1i</msg>
<status status="PASS" starttime="20230821 08:43:07.197" endtime="20230821 08:43:07.197"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230821 08:43:07.207" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p uW6uz6ab1i  2&gt;&amp;1'.</msg>
<msg timestamp="20230821 08:43:22.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20230821 08:43:22.237" level="INFO">${output} = 2023-08-21 08:43:12,047 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-21 08:43:12,360 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230821 08:43:07.203" endtime="20230821 08:43:22.238"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230821 08:43:22.241" level="INFO">2023-08-21 08:43:12,047 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-21 08:43:12,360 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-08-21 08:43:12,360 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-08-21 08:43:12,522 [main] INFO freon.BaseFreonGenerator: Executing test with prefix uW6uz6ab1i and number-of-tests 1
2023-08-21 08:43:12,626 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-21 08:43:13,632 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-21 08:43:14,632 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-21 08:43:15,633 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-21 08:43:16,638 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-21 08:43:17,492 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-08-21 08:43:17,598 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2023-08-21 08:43:17,639 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-21 08:43:17,964 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-08-21 08:43:18,639 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-21 08:43:19,642 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-21 08:43:20,644 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-08-21 08:43:21,749 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=4076.890521, max=4076.890521, mean=4076.890521, stddev=0.0, median=4076.890521, p75=4076.890521, p95=4076.890521, p98=4076.890521, p99=4076.890521, p999=4076.890521, mean_rate=0.18910729388872996, m1=0.2, m5=0.2, m15=0.2, rate_unit=events/second, duration_unit=milliseconds
2023-08-21 08:43:21,768 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 9
2023-08-21 08:43:21,769 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-08-21 08:43:21,769 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230821 08:43:22.239" endtime="20230821 08:43:22.242"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230821 08:43:22.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230821 08:43:22.242" endtime="20230821 08:43:22.245"/>
</kw>
<status status="PASS" starttime="20230821 08:43:07.202" endtime="20230821 08:43:22.246"/>
</kw>
<msg timestamp="20230821 08:43:22.246" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230821 08:43:07.201" endtime="20230821 08:43:22.246"/>
</kw>
<msg timestamp="20230821 08:43:22.248" level="INFO">${result} = 2023-08-21 08:43:12,047 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-21 08:43:12,360 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230821 08:43:07.200" endtime="20230821 08:43:22.249"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230821 08:43:22.250" endtime="20230821 08:43:22.254"/>
</kw>
<status status="PASS" starttime="20230821 08:43:07.198" endtime="20230821 08:43:22.254"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230821 08:43:22.276" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p uW6uz6ab1i  2&gt;&amp;1'.</msg>
<msg timestamp="20230821 08:43:35.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20230821 08:43:35.390" level="INFO">${output} = 2023-08-21 08:43:26,369 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-21 08:43:26,636 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230821 08:43:22.268" endtime="20230821 08:43:35.390"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230821 08:43:35.392" level="INFO">2023-08-21 08:43:26,369 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-21 08:43:26,636 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-08-21 08:43:26,637 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-08-21 08:43:26,783 [main] INFO freon.BaseFreonGenerator: Executing test with prefix uW6uz6ab1i and number-of-tests 1
2023-08-21 08:43:26,876 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-21 08:43:27,884 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-21 08:43:28,885 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-21 08:43:29,888 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-21 08:43:30,889 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-21 08:43:31,340 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-08-21 08:43:31,889 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-21 08:43:32,890 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-21 08:43:33,891 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-21 08:43:34,892 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-08-21 08:43:35,018 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=87.860107, max=87.860107, mean=87.860107, stddev=0.0, median=87.860107, p75=87.860107, p95=87.860107, p98=87.860107, p99=87.860107, p999=87.860107, mean_rate=0.8265141494155849, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-08-21 08:43:35,019 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 8
2023-08-21 08:43:35,019 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-08-21 08:43:35,019 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230821 08:43:35.390" endtime="20230821 08:43:35.392"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230821 08:43:35.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230821 08:43:35.392" endtime="20230821 08:43:35.393"/>
</kw>
<status status="PASS" starttime="20230821 08:43:22.266" endtime="20230821 08:43:35.394"/>
</kw>
<msg timestamp="20230821 08:43:35.394" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230821 08:43:22.263" endtime="20230821 08:43:35.394"/>
</kw>
<msg timestamp="20230821 08:43:35.394" level="INFO">${result} = 2023-08-21 08:43:26,369 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-21 08:43:26,636 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230821 08:43:22.259" endtime="20230821 08:43:35.394"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230821 08:43:35.395" endtime="20230821 08:43:35.396"/>
</kw>
<status status="PASS" starttime="20230821 08:43:22.254" endtime="20230821 08:43:35.396"/>
</kw>
<status status="PASS" starttime="20230821 08:43:07.196" endtime="20230821 08:43:35.396"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230821 08:42:24.789" endtime="20230821 08:43:35.396"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230821 08:42:24.532" endtime="20230821 08:43:35.399"/>
</suite>
<suite id="s1-s2" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s2-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230821 08:43:35.418" level="INFO">Running command 'ozone sh volume create rootca-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230821 08:43:46.800" level="INFO">${rc} = 0</msg>
<msg timestamp="20230821 08:43:46.800" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230821 08:43:35.415" endtime="20230821 08:43:46.800"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230821 08:43:46.802" level="INFO"/>
<status status="PASS" starttime="20230821 08:43:46.800" endtime="20230821 08:43:46.802"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230821 08:43:46.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230821 08:43:46.802" endtime="20230821 08:43:46.803"/>
</kw>
<status status="PASS" starttime="20230821 08:43:35.415" endtime="20230821 08:43:46.803"/>
</kw>
<msg timestamp="20230821 08:43:46.803" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230821 08:43:35.414" endtime="20230821 08:43:46.803"/>
</kw>
<msg timestamp="20230821 08:43:46.804" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230821 08:43:35.413" endtime="20230821 08:43:46.804"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230821 08:43:46.804" endtime="20230821 08:43:46.805"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230821 08:43:46.813" level="INFO">Running command 'ozone sh bucket create /rootca-volume/rootca-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230821 08:43:56.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20230821 08:43:56.289" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230821 08:43:46.809" endtime="20230821 08:43:56.290"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230821 08:43:56.291" level="INFO"/>
<status status="PASS" starttime="20230821 08:43:56.290" endtime="20230821 08:43:56.291"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230821 08:43:56.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230821 08:43:56.291" endtime="20230821 08:43:56.292"/>
</kw>
<status status="PASS" starttime="20230821 08:43:46.807" endtime="20230821 08:43:56.292"/>
</kw>
<msg timestamp="20230821 08:43:56.292" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230821 08:43:46.807" endtime="20230821 08:43:56.293"/>
</kw>
<msg timestamp="20230821 08:43:56.293" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230821 08:43:46.806" endtime="20230821 08:43:56.293"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230821 08:43:56.293" endtime="20230821 08:43:56.294"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230821 08:43:35.412" endtime="20230821 08:43:56.294"/>
</test>
<test id="s1-s2-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230821 08:43:56.301" level="INFO">Running command 'echo "rootca: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230821 08:43:56.304" level="INFO">${rc} = 0</msg>
<msg timestamp="20230821 08:43:56.304" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230821 08:43:56.298" endtime="20230821 08:43:56.304"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230821 08:43:56.305" level="INFO"/>
<status status="PASS" starttime="20230821 08:43:56.305" endtime="20230821 08:43:56.306"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230821 08:43:56.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230821 08:43:56.306" endtime="20230821 08:43:56.307"/>
</kw>
<status status="PASS" starttime="20230821 08:43:56.297" endtime="20230821 08:43:56.307"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230821 08:43:56.313" level="INFO">Running command 'ozone sh key put /rootca-volume/rootca-bucket/rootca-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230821 08:44:11.263" level="INFO">${rc} = 0</msg>
<msg timestamp="20230821 08:44:11.263" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230821 08:43:56.310" endtime="20230821 08:44:11.263"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230821 08:44:11.267" level="INFO"/>
<status status="PASS" starttime="20230821 08:44:11.266" endtime="20230821 08:44:11.267"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230821 08:44:11.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230821 08:44:11.267" endtime="20230821 08:44:11.268"/>
</kw>
<status status="PASS" starttime="20230821 08:43:56.309" endtime="20230821 08:44:11.268"/>
</kw>
<msg timestamp="20230821 08:44:11.268" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230821 08:43:56.308" endtime="20230821 08:44:11.268"/>
</kw>
<msg timestamp="20230821 08:44:11.274" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230821 08:43:56.307" endtime="20230821 08:44:11.274"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230821 08:44:11.275" endtime="20230821 08:44:11.275"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230821 08:44:11.287" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230821 08:44:11.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20230821 08:44:11.295" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230821 08:44:11.279" endtime="20230821 08:44:11.295"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230821 08:44:11.297" level="INFO"/>
<status status="PASS" starttime="20230821 08:44:11.296" endtime="20230821 08:44:11.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230821 08:44:11.304" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230821 08:44:11.303" endtime="20230821 08:44:11.304"/>
</kw>
<status status="PASS" starttime="20230821 08:44:11.276" endtime="20230821 08:44:11.304"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230821 08:43:56.296" endtime="20230821 08:44:11.305"/>
</test>
<test id="s1-s2-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230821 08:44:11.317" level="INFO">${random} = 25897</msg>
<status status="PASS" starttime="20230821 08:44:11.316" endtime="20230821 08:44:11.317"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230821 08:44:11.338" level="INFO">Running command 'ozone sh key get /rootca-volume/rootca-bucket/rootca-key /tmp/key-25897 2&gt;&amp;1'.</msg>
<msg timestamp="20230821 08:44:24.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20230821 08:44:24.881" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230821 08:44:11.329" endtime="20230821 08:44:24.881"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230821 08:44:24.883" level="INFO"/>
<status status="PASS" starttime="20230821 08:44:24.882" endtime="20230821 08:44:24.883"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230821 08:44:24.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230821 08:44:24.883" endtime="20230821 08:44:24.884"/>
</kw>
<status status="PASS" starttime="20230821 08:44:11.328" endtime="20230821 08:44:24.884"/>
</kw>
<msg timestamp="20230821 08:44:24.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230821 08:44:11.318" endtime="20230821 08:44:24.884"/>
</kw>
<msg timestamp="20230821 08:44:24.885" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230821 08:44:11.317" endtime="20230821 08:44:24.885"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230821 08:44:24.885" endtime="20230821 08:44:24.886"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230821 08:44:24.890" level="INFO">Running command 'cat /tmp/key-25897 2&gt;&amp;1'.</msg>
<msg timestamp="20230821 08:44:24.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20230821 08:44:24.901" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230821 08:44:24.887" endtime="20230821 08:44:24.902"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230821 08:44:24.903" level="INFO">rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230821 08:44:24.902" endtime="20230821 08:44:24.904"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230821 08:44:24.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230821 08:44:24.904" endtime="20230821 08:44:24.905"/>
</kw>
<msg timestamp="20230821 08:44:24.905" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230821 08:44:24.886" endtime="20230821 08:44:24.905"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230821 08:44:24.906" endtime="20230821 08:44:24.906"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230821 08:44:24.911" level="INFO">Running command 'rm /tmp/key-25897 2&gt;&amp;1'.</msg>
<msg timestamp="20230821 08:44:24.914" level="INFO">${rc} = 0</msg>
<msg timestamp="20230821 08:44:24.914" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230821 08:44:24.907" endtime="20230821 08:44:24.914"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230821 08:44:24.916" level="INFO"/>
<status status="PASS" starttime="20230821 08:44:24.915" endtime="20230821 08:44:24.917"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230821 08:44:24.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230821 08:44:24.917" endtime="20230821 08:44:24.917"/>
</kw>
<status status="PASS" starttime="20230821 08:44:24.906" endtime="20230821 08:44:24.918"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230821 08:44:11.312" endtime="20230821 08:44:24.918"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230821 08:43:35.402" endtime="20230821 08:44:24.923"/>
</suite>
<status status="PASS" starttime="20230821 08:42:24.445" endtime="20230821 08:44:24.927"/>
</suite>
<statistics>
<total>
<stat pass="4" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="4" fail="0" skip="0" id="s1" name="ozonesecure-certificate-rotation">ozonesecure-certificate-rotation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Cert-Rotation">ozonesecure-certificate-rotation.Cert-Rotation</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Root-Ca-Rotation-Client-Checks">ozonesecure-certificate-rotation.Root-Ca-Rotation-Client-Checks</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
