<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230825 07:17:42.036" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-root-ca-rotation">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230825 07:14:32.422" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230825 07:14:32.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20230825 07:14:32.435" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230825 07:14:32.417" endtime="20230825 07:14:32.435"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230825 07:14:32.437" level="INFO">scm</msg>
<status status="PASS" starttime="20230825 07:14:32.436" endtime="20230825 07:14:32.440"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230825 07:14:32.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230825 07:14:32.441" endtime="20230825 07:14:32.443"/>
</kw>
<status status="PASS" starttime="20230825 07:14:32.416" endtime="20230825 07:14:32.444"/>
</kw>
<msg timestamp="20230825 07:14:32.444" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230825 07:14:32.415" endtime="20230825 07:14:32.444"/>
</kw>
<msg timestamp="20230825 07:14:32.445" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230825 07:14:32.414" endtime="20230825 07:14:32.445"/>
</kw>
<msg timestamp="20230825 07:14:32.446" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230825 07:14:32.413" endtime="20230825 07:14:32.446"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230825 07:14:32.447" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230825 07:14:32.446" endtime="20230825 07:14:32.447"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230825 07:14:32.457" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230825 07:14:32.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20230825 07:14:32.664" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230825 07:14:32.453" endtime="20230825 07:14:32.664"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230825 07:14:32.666" level="INFO"/>
<status status="PASS" starttime="20230825 07:14:32.665" endtime="20230825 07:14:32.666"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230825 07:14:32.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230825 07:14:32.666" endtime="20230825 07:14:32.667"/>
</kw>
<status status="PASS" starttime="20230825 07:14:32.452" endtime="20230825 07:14:32.668"/>
</kw>
<msg timestamp="20230825 07:14:32.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230825 07:14:32.451" endtime="20230825 07:14:32.668"/>
</kw>
<status status="PASS" starttime="20230825 07:14:32.449" endtime="20230825 07:14:32.668"/>
</kw>
<status status="PASS" starttime="20230825 07:14:32.447" endtime="20230825 07:14:32.668"/>
</kw>
<status status="PASS" starttime="20230825 07:14:32.411" endtime="20230825 07:14:32.668"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230825 07:14:32.410" endtime="20230825 07:14:32.669"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230825 07:14:31.918" endtime="20230825 07:14:32.675"/>
</suite>
<suite id="s1-s2" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s2-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230825 07:14:54.194" level="INFO">Running command 'ozone sh volume create rootca-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230825 07:15:04.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20230825 07:15:04.330" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230825 07:14:54.191" endtime="20230825 07:15:04.330"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230825 07:15:04.332" level="INFO"/>
<status status="PASS" starttime="20230825 07:15:04.331" endtime="20230825 07:15:04.332"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230825 07:15:04.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230825 07:15:04.333" endtime="20230825 07:15:04.333"/>
</kw>
<status status="PASS" starttime="20230825 07:14:54.190" endtime="20230825 07:15:04.334"/>
</kw>
<msg timestamp="20230825 07:15:04.334" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230825 07:14:54.189" endtime="20230825 07:15:04.334"/>
</kw>
<msg timestamp="20230825 07:15:04.334" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230825 07:14:54.188" endtime="20230825 07:15:04.334"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230825 07:15:04.334" endtime="20230825 07:15:04.335"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230825 07:15:04.341" level="INFO">Running command 'ozone sh bucket create /rootca-volume/rootca-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230825 07:15:13.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20230825 07:15:13.463" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230825 07:15:04.337" endtime="20230825 07:15:13.463"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230825 07:15:13.466" level="INFO"/>
<status status="PASS" starttime="20230825 07:15:13.464" endtime="20230825 07:15:13.466"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230825 07:15:13.467" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230825 07:15:13.466" endtime="20230825 07:15:13.467"/>
</kw>
<status status="PASS" starttime="20230825 07:15:04.337" endtime="20230825 07:15:13.467"/>
</kw>
<msg timestamp="20230825 07:15:13.467" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230825 07:15:04.336" endtime="20230825 07:15:13.467"/>
</kw>
<msg timestamp="20230825 07:15:13.468" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230825 07:15:04.335" endtime="20230825 07:15:13.468"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230825 07:15:13.468" endtime="20230825 07:15:13.468"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230825 07:14:54.187" endtime="20230825 07:15:13.469"/>
</test>
<test id="s1-s2-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230825 07:15:13.475" level="INFO">Running command 'echo "rootca: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230825 07:15:13.478" level="INFO">${rc} = 0</msg>
<msg timestamp="20230825 07:15:13.478" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230825 07:15:13.472" endtime="20230825 07:15:13.478"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230825 07:15:13.480" level="INFO"/>
<status status="PASS" starttime="20230825 07:15:13.479" endtime="20230825 07:15:13.480"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230825 07:15:13.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230825 07:15:13.480" endtime="20230825 07:15:13.481"/>
</kw>
<status status="PASS" starttime="20230825 07:15:13.471" endtime="20230825 07:15:13.481"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230825 07:15:13.487" level="INFO">Running command 'ozone sh key put /rootca-volume/rootca-bucket/rootca-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230825 07:15:29.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20230825 07:15:29.343" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230825 07:15:13.484" endtime="20230825 07:15:29.343"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230825 07:15:29.344" level="INFO"/>
<status status="PASS" starttime="20230825 07:15:29.343" endtime="20230825 07:15:29.344"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230825 07:15:29.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230825 07:15:29.345" endtime="20230825 07:15:29.346"/>
</kw>
<status status="PASS" starttime="20230825 07:15:13.483" endtime="20230825 07:15:29.346"/>
</kw>
<msg timestamp="20230825 07:15:29.346" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230825 07:15:13.483" endtime="20230825 07:15:29.346"/>
</kw>
<msg timestamp="20230825 07:15:29.347" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230825 07:15:13.482" endtime="20230825 07:15:29.347"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230825 07:15:29.347" endtime="20230825 07:15:29.347"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230825 07:15:29.360" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230825 07:15:29.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20230825 07:15:29.391" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230825 07:15:29.349" endtime="20230825 07:15:29.391"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230825 07:15:29.393" level="INFO"/>
<status status="PASS" starttime="20230825 07:15:29.392" endtime="20230825 07:15:29.393"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230825 07:15:29.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230825 07:15:29.393" endtime="20230825 07:15:29.420"/>
</kw>
<status status="PASS" starttime="20230825 07:15:29.348" endtime="20230825 07:15:29.421"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230825 07:15:13.470" endtime="20230825 07:15:29.422"/>
</test>
<test id="s1-s2-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230825 07:15:29.448" level="INFO">${random} = 82043</msg>
<status status="PASS" starttime="20230825 07:15:29.447" endtime="20230825 07:15:29.448"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230825 07:15:29.471" level="INFO">Running command 'ozone sh key get /rootca-volume/rootca-bucket/rootca-key /tmp/key-82043 2&gt;&amp;1'.</msg>
<msg timestamp="20230825 07:15:42.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20230825 07:15:42.534" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230825 07:15:29.459" endtime="20230825 07:15:42.535"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230825 07:15:42.536" level="INFO"/>
<status status="PASS" starttime="20230825 07:15:42.535" endtime="20230825 07:15:42.536"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230825 07:15:42.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230825 07:15:42.537" endtime="20230825 07:15:42.537"/>
</kw>
<status status="PASS" starttime="20230825 07:15:29.458" endtime="20230825 07:15:42.537"/>
</kw>
<msg timestamp="20230825 07:15:42.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230825 07:15:29.449" endtime="20230825 07:15:42.538"/>
</kw>
<msg timestamp="20230825 07:15:42.538" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230825 07:15:29.448" endtime="20230825 07:15:42.538"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230825 07:15:42.538" endtime="20230825 07:15:42.539"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230825 07:15:42.543" level="INFO">Running command 'cat /tmp/key-82043 2&gt;&amp;1'.</msg>
<msg timestamp="20230825 07:15:42.547" level="INFO">${rc} = 0</msg>
<msg timestamp="20230825 07:15:42.547" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230825 07:15:42.540" endtime="20230825 07:15:42.548"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230825 07:15:42.549" level="INFO">rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230825 07:15:42.548" endtime="20230825 07:15:42.549"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230825 07:15:42.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230825 07:15:42.549" endtime="20230825 07:15:42.550"/>
</kw>
<msg timestamp="20230825 07:15:42.550" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230825 07:15:42.539" endtime="20230825 07:15:42.550"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230825 07:15:42.551" endtime="20230825 07:15:42.551"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230825 07:15:42.556" level="INFO">Running command 'rm /tmp/key-82043 2&gt;&amp;1'.</msg>
<msg timestamp="20230825 07:15:42.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20230825 07:15:42.560" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230825 07:15:42.552" endtime="20230825 07:15:42.560"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230825 07:15:42.561" level="INFO"/>
<status status="PASS" starttime="20230825 07:15:42.560" endtime="20230825 07:15:42.561"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230825 07:15:42.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230825 07:15:42.561" endtime="20230825 07:15:42.562"/>
</kw>
<status status="PASS" starttime="20230825 07:15:42.552" endtime="20230825 07:15:42.562"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230825 07:15:29.436" endtime="20230825 07:15:42.563"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230825 07:14:54.102" endtime="20230825 07:15:42.564"/>
</suite>
<suite id="s1-s3" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s3-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230825 07:16:30.568" level="INFO">Running command 'ozone sh volume create rootca2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230825 07:16:39.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20230825 07:16:39.143" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230825 07:16:30.565" endtime="20230825 07:16:39.143"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230825 07:16:39.145" level="INFO"/>
<status status="PASS" starttime="20230825 07:16:39.144" endtime="20230825 07:16:39.145"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230825 07:16:39.147" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230825 07:16:39.146" endtime="20230825 07:16:39.147"/>
</kw>
<status status="PASS" starttime="20230825 07:16:30.565" endtime="20230825 07:16:39.147"/>
</kw>
<msg timestamp="20230825 07:16:39.147" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230825 07:16:30.564" endtime="20230825 07:16:39.147"/>
</kw>
<msg timestamp="20230825 07:16:39.148" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230825 07:16:30.563" endtime="20230825 07:16:39.148"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230825 07:16:39.148" endtime="20230825 07:16:39.148"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230825 07:16:39.155" level="INFO">Running command 'ozone sh bucket create /rootca2-volume/rootca2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230825 07:16:48.233" level="INFO">${rc} = 0</msg>
<msg timestamp="20230825 07:16:48.233" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230825 07:16:39.151" endtime="20230825 07:16:48.234"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230825 07:16:48.236" level="INFO"/>
<status status="PASS" starttime="20230825 07:16:48.235" endtime="20230825 07:16:48.236"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230825 07:16:48.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230825 07:16:48.237" endtime="20230825 07:16:48.237"/>
</kw>
<status status="PASS" starttime="20230825 07:16:39.150" endtime="20230825 07:16:48.238"/>
</kw>
<msg timestamp="20230825 07:16:48.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230825 07:16:39.149" endtime="20230825 07:16:48.238"/>
</kw>
<msg timestamp="20230825 07:16:48.239" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230825 07:16:39.149" endtime="20230825 07:16:48.239"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230825 07:16:48.239" endtime="20230825 07:16:48.240"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230825 07:16:30.562" endtime="20230825 07:16:48.240"/>
</test>
<test id="s1-s3-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230825 07:16:48.250" level="INFO">Running command 'echo "rootca2: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230825 07:16:48.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20230825 07:16:48.253" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230825 07:16:48.246" endtime="20230825 07:16:48.254"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230825 07:16:48.257" level="INFO"/>
<status status="PASS" starttime="20230825 07:16:48.255" endtime="20230825 07:16:48.257"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230825 07:16:48.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230825 07:16:48.257" endtime="20230825 07:16:48.258"/>
</kw>
<status status="PASS" starttime="20230825 07:16:48.245" endtime="20230825 07:16:48.258"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230825 07:16:48.265" level="INFO">Running command 'ozone sh key put /rootca2-volume/rootca2-bucket/rootca2-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230825 07:17:01.982" level="INFO">${rc} = 0</msg>
<msg timestamp="20230825 07:17:01.982" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230825 07:16:48.261" endtime="20230825 07:17:01.982"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230825 07:17:01.983" level="INFO"/>
<status status="PASS" starttime="20230825 07:17:01.982" endtime="20230825 07:17:01.983"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230825 07:17:01.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230825 07:17:01.984" endtime="20230825 07:17:01.984"/>
</kw>
<status status="PASS" starttime="20230825 07:16:48.260" endtime="20230825 07:17:01.985"/>
</kw>
<msg timestamp="20230825 07:17:01.985" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230825 07:16:48.260" endtime="20230825 07:17:01.985"/>
</kw>
<msg timestamp="20230825 07:17:01.985" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230825 07:16:48.259" endtime="20230825 07:17:01.985"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230825 07:17:01.986" endtime="20230825 07:17:01.986"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230825 07:17:01.991" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230825 07:17:01.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20230825 07:17:01.996" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230825 07:17:01.987" endtime="20230825 07:17:01.996"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230825 07:17:01.998" level="INFO"/>
<status status="PASS" starttime="20230825 07:17:01.997" endtime="20230825 07:17:01.998"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230825 07:17:01.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230825 07:17:01.998" endtime="20230825 07:17:01.999"/>
</kw>
<status status="PASS" starttime="20230825 07:17:01.986" endtime="20230825 07:17:02.000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230825 07:16:48.242" endtime="20230825 07:17:02.000"/>
</test>
<test id="s1-s3-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230825 07:17:02.005" level="INFO">${random} = 06066</msg>
<status status="PASS" starttime="20230825 07:17:02.004" endtime="20230825 07:17:02.005"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230825 07:17:02.012" level="INFO">Running command 'ozone sh key get /rootca2-volume/rootca2-bucket/rootca2-key /tmp/key-06066 2&gt;&amp;1'.</msg>
<msg timestamp="20230825 07:17:13.340" level="INFO">${rc} = 0</msg>
<msg timestamp="20230825 07:17:13.340" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230825 07:17:02.008" endtime="20230825 07:17:13.340"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230825 07:17:13.343" level="INFO"/>
<status status="PASS" starttime="20230825 07:17:13.341" endtime="20230825 07:17:13.343"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230825 07:17:13.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230825 07:17:13.343" endtime="20230825 07:17:13.344"/>
</kw>
<status status="PASS" starttime="20230825 07:17:02.007" endtime="20230825 07:17:13.345"/>
</kw>
<msg timestamp="20230825 07:17:13.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230825 07:17:02.006" endtime="20230825 07:17:13.345"/>
</kw>
<msg timestamp="20230825 07:17:13.345" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230825 07:17:02.005" endtime="20230825 07:17:13.345"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230825 07:17:13.346" endtime="20230825 07:17:13.347"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230825 07:17:13.352" level="INFO">Running command 'cat /tmp/key-06066 2&gt;&amp;1'.</msg>
<msg timestamp="20230825 07:17:13.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20230825 07:17:13.357" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230825 07:17:13.348" endtime="20230825 07:17:13.357"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230825 07:17:13.359" level="INFO">rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230825 07:17:13.358" endtime="20230825 07:17:13.359"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230825 07:17:13.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230825 07:17:13.359" endtime="20230825 07:17:13.362"/>
</kw>
<msg timestamp="20230825 07:17:13.363" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230825 07:17:13.347" endtime="20230825 07:17:13.363"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230825 07:17:13.363" endtime="20230825 07:17:13.364"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230825 07:17:13.370" level="INFO">Running command 'rm /tmp/key-06066 2&gt;&amp;1'.</msg>
<msg timestamp="20230825 07:17:13.375" level="INFO">${rc} = 0</msg>
<msg timestamp="20230825 07:17:13.375" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230825 07:17:13.366" endtime="20230825 07:17:13.375"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230825 07:17:13.377" level="INFO"/>
<status status="PASS" starttime="20230825 07:17:13.376" endtime="20230825 07:17:13.377"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230825 07:17:13.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230825 07:17:13.378" endtime="20230825 07:17:13.379"/>
</kw>
<status status="PASS" starttime="20230825 07:17:13.364" endtime="20230825 07:17:13.379"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230825 07:17:02.002" endtime="20230825 07:17:13.380"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230825 07:16:30.467" endtime="20230825 07:17:13.382"/>
</suite>
<suite id="s1-s4" name="Root-Ca-Rotation" source="/opt/hadoop/smoketest/scmha/root-ca-rotation.robot">
<test id="s1-s4-t1" name="Verify root CA rotation metrics" line="26">
<kw name="Execute" library="os">
<var>${successRotationLine}</var>
<arg>curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230825 07:17:18.128" level="INFO">Running command 'curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation 2&gt;&amp;1'.</msg>
<msg timestamp="20230825 07:17:18.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20230825 07:17:18.859" level="INFO">${output} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230825 07:17:18.124" endtime="20230825 07:17:18.859"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230825 07:17:18.861" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230825 07:17:18.860" endtime="20230825 07:17:18.861"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230825 07:17:18.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230825 07:17:18.861" endtime="20230825 07:17:18.862"/>
</kw>
<status status="PASS" starttime="20230825 07:17:18.123" endtime="20230825 07:17:18.862"/>
</kw>
<msg timestamp="20230825 07:17:18.863" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230825 07:17:18.123" endtime="20230825 07:17:18.863"/>
</kw>
<msg timestamp="20230825 07:17:18.863" level="INFO">${successRotationLine} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230825 07:17:18.122" endtime="20230825 07:17:18.863"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${successRotationLine}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230825 07:17:18.864" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230825 07:17:18.863" endtime="20230825 07:17:18.864"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_1}</var>
<arg>${successRotationLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230825 07:17:18.865" level="INFO">${temp_1} = ['    "NumSuccessRotation" ', ' 2,']</msg>
<status status="PASS" starttime="20230825 07:17:18.864" endtime="20230825 07:17:18.865"/>
</kw>
<kw name="Strip String" library="String">
<var>${temp_2}</var>
<arg>${temp_1[1]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230825 07:17:18.867" level="INFO">${temp_2} = 2,</msg>
<status status="PASS" starttime="20230825 07:17:18.865" endtime="20230825 07:17:18.867"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_3}</var>
<arg>${temp_2}</arg>
<arg>,</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230825 07:17:18.868" level="INFO">${temp_3} = ['2', '']</msg>
<status status="PASS" starttime="20230825 07:17:18.867" endtime="20230825 07:17:18.868"/>
</kw>
<kw name="Strip String" library="String">
<var>${successRotation}</var>
<arg>${temp_3[0]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230825 07:17:18.870" level="INFO">${successRotation} = 2</msg>
<status status="PASS" starttime="20230825 07:17:18.868" endtime="20230825 07:17:18.870"/>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<var>${successRotation}</var>
<arg>${successRotation}</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20230825 07:17:18.871" level="INFO">${successRotation} = 2.0</msg>
<status status="PASS" starttime="20230825 07:17:18.870" endtime="20230825 07:17:18.871"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${successRotation} &gt;= 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230825 07:17:18.871" endtime="20230825 07:17:18.872"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230825 07:17:18.115" endtime="20230825 07:17:18.872"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230825 07:17:18.015" endtime="20230825 07:17:18.875"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="92994"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="ozonesecure-root-ca-rotation">ozonesecure-root-ca-rotation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-root-ca-rotation.Kinit</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Root-Ca-Rotation">ozonesecure-root-ca-rotation.Root-Ca-Rotation</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
