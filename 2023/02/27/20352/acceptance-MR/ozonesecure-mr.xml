<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.0.2 (Python 3.8.10 on linux)" generated="20230227 12:20:43.770" rpa="false" schemaversion="3">
<suite id="s1" name="ozonesecure-mr">
<suite id="s1-s1" name="Createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-s1-t1" name="Create test volume, bucket and key" line="38">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230227 12:17:39.249" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230227 12:17:58.404" level="INFO">${rc} = 255</msg>
<msg timestamp="20230227 12:17:58.404" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20230227 12:17:39.243" endtime="20230227 12:17:58.404"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230227 12:17:58.406" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20230227 12:17:58.405" endtime="20230227 12:17:58.406"/>
</kw>
<msg timestamp="20230227 12:17:58.407" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20230227 12:17:39.236" endtime="20230227 12:17:58.407"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create volume">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230227 12:17:58.419" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230227 12:18:10.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20230227 12:18:10.867" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230227 12:17:58.413" endtime="20230227 12:18:10.867"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230227 12:18:10.868" level="INFO"/>
<status status="PASS" starttime="20230227 12:18:10.867" endtime="20230227 12:18:10.868"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230227 12:18:10.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230227 12:18:10.869" endtime="20230227 12:18:10.869"/>
</kw>
<status status="PASS" starttime="20230227 12:17:58.411" endtime="20230227 12:18:10.870"/>
</kw>
<msg timestamp="20230227 12:18:10.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230227 12:17:58.411" endtime="20230227 12:18:10.872"/>
</kw>
<msg timestamp="20230227 12:18:10.873" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230227 12:17:58.409" endtime="20230227 12:18:10.873"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230227 12:18:10.873" endtime="20230227 12:18:10.874"/>
</kw>
<status status="PASS" starttime="20230227 12:17:58.408" endtime="20230227 12:18:10.874"/>
</kw>
<status status="PASS" starttime="20230227 12:17:58.407" endtime="20230227 12:18:10.874"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/${bucket} --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230227 12:18:10.881" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20230227 12:18:23.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20230227 12:18:23.315" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230227 12:18:10.878" endtime="20230227 12:18:23.315"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230227 12:18:23.316" level="INFO"/>
<status status="PASS" starttime="20230227 12:18:23.315" endtime="20230227 12:18:23.316"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230227 12:18:23.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230227 12:18:23.317" endtime="20230227 12:18:23.317"/>
</kw>
<status status="PASS" starttime="20230227 12:18:10.877" endtime="20230227 12:18:23.318"/>
</kw>
<msg timestamp="20230227 12:18:23.318" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230227 12:18:10.877" endtime="20230227 12:18:23.322"/>
</kw>
<status status="PASS" starttime="20230227 12:18:10.876" endtime="20230227 12:18:23.322"/>
</kw>
<status status="PASS" starttime="20230227 12:18:10.875" endtime="20230227 12:18:23.322"/>
</kw>
<status status="PASS" starttime="20230227 12:18:10.874" endtime="20230227 12:18:23.323"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230227 12:18:23.323" endtime="20230227 12:18:23.324"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230227 12:18:23.329" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230227 12:18:35.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20230227 12:18:35.925" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023-02-27T12:18...</msg>
<status status="PASS" starttime="20230227 12:18:23.326" endtime="20230227 12:18:35.925"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230227 12:18:35.929" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023-02-27T12:18:23.184Z",
  "modificationTime" : "2023-02-27T12:18:23.184Z",
  "quotaInBytes" : 1099511627776,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "testuser",
  "link" : false
}</msg>
<status status="PASS" starttime="20230227 12:18:35.926" endtime="20230227 12:18:35.929"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230227 12:18:35.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230227 12:18:35.930" endtime="20230227 12:18:35.931"/>
</kw>
<status status="PASS" starttime="20230227 12:18:23.325" endtime="20230227 12:18:35.932"/>
</kw>
<msg timestamp="20230227 12:18:35.932" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230227 12:18:23.325" endtime="20230227 12:18:35.933"/>
</kw>
<msg timestamp="20230227 12:18:35.933" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023-02-27T12:18...</msg>
<status status="PASS" starttime="20230227 12:18:23.324" endtime="20230227 12:18:35.933"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230227 12:18:35.933" endtime="20230227 12:18:35.934"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230227 12:18:35.941" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230227 12:18:35.940" endtime="20230227 12:18:35.941"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230227 12:18:35.942" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20230227 12:18:35.941" endtime="20230227 12:18:35.942"/>
</kw>
<status status="PASS" starttime="20230227 12:18:35.939" endtime="20230227 12:18:35.942"/>
</kw>
<msg timestamp="20230227 12:18:35.943" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20230227 12:18:35.937" endtime="20230227 12:18:35.943"/>
</kw>
<status status="PASS" starttime="20230227 12:18:35.936" endtime="20230227 12:18:35.943"/>
</kw>
<msg timestamp="20230227 12:18:35.943" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20230227 12:18:35.935" endtime="20230227 12:18:35.943"/>
</kw>
<msg timestamp="20230227 12:18:35.944" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20230227 12:18:35.934" endtime="20230227 12:18:35.944"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230227 12:18:35.949" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20230227 12:18:47.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20230227 12:18:47.266" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230227 12:18:35.946" endtime="20230227 12:18:47.266"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230227 12:18:47.267" level="INFO"/>
<status status="PASS" starttime="20230227 12:18:47.266" endtime="20230227 12:18:47.267"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230227 12:18:47.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230227 12:18:47.267" endtime="20230227 12:18:47.268"/>
</kw>
<status status="PASS" starttime="20230227 12:18:35.945" endtime="20230227 12:18:47.268"/>
</kw>
<msg timestamp="20230227 12:18:47.268" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230227 12:18:35.945" endtime="20230227 12:18:47.269"/>
</kw>
<status status="PASS" starttime="20230227 12:18:35.944" endtime="20230227 12:18:47.269"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230227 12:18:47.275" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230227 12:19:10.003" level="INFO">${rc} = 0</msg>
<msg timestamp="20230227 12:19:10.003" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230227 12:18:47.272" endtime="20230227 12:19:10.003"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230227 12:19:10.005" level="INFO"/>
<status status="PASS" starttime="20230227 12:19:10.004" endtime="20230227 12:19:10.005"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230227 12:19:10.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230227 12:19:10.005" endtime="20230227 12:19:10.006"/>
</kw>
<status status="PASS" starttime="20230227 12:18:47.271" endtime="20230227 12:19:10.007"/>
</kw>
<msg timestamp="20230227 12:19:10.007" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230227 12:18:47.271" endtime="20230227 12:19:10.007"/>
</kw>
<status status="PASS" starttime="20230227 12:18:47.270" endtime="20230227 12:19:10.007"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230227 12:19:10.024" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230227 12:19:28.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20230227 12:19:28.275" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230227 12:19:10.009" endtime="20230227 12:19:28.275"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230227 12:19:28.277" level="INFO"/>
<status status="PASS" starttime="20230227 12:19:28.276" endtime="20230227 12:19:28.277"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230227 12:19:28.279" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230227 12:19:28.278" endtime="20230227 12:19:28.279"/>
</kw>
<status status="PASS" starttime="20230227 12:19:10.009" endtime="20230227 12:19:28.280"/>
</kw>
<msg timestamp="20230227 12:19:28.280" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230227 12:19:10.008" endtime="20230227 12:19:28.281"/>
</kw>
<status status="PASS" starttime="20230227 12:19:10.008" endtime="20230227 12:19:28.281"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230227 12:19:28.287" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20230227 12:19:39.235" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20230227 12:19:28.284" endtime="20230227 12:19:39.236"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230227 12:19:39.236" endtime="20230227 12:19:39.236"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20230227 12:19:39.237" endtime="20230227 12:19:39.237"/>
</kw>
<status status="FAIL" starttime="20230227 12:19:28.283" endtime="20230227 12:19:39.237"/>
</kw>
<msg timestamp="20230227 12:19:39.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20230227 12:19:28.282" endtime="20230227 12:19:39.238"/>
</kw>
<status status="FAIL" starttime="20230227 12:19:28.281" endtime="20230227 12:19:39.238"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20230227 12:17:39.234" endtime="20230227 12:19:39.241">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop" line="51">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230227 12:19:39.284" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230227 12:19:39.277" endtime="20230227 12:19:39.284"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230227 12:19:39.287" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20230227 12:19:39.286" endtime="20230227 12:19:39.287"/>
</kw>
<status status="PASS" starttime="20230227 12:19:39.273" endtime="20230227 12:19:39.287"/>
</kw>
<msg timestamp="20230227 12:19:39.287" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20230227 12:19:39.269" endtime="20230227 12:19:39.287"/>
</kw>
<status status="PASS" starttime="20230227 12:19:39.265" endtime="20230227 12:19:39.288"/>
</kw>
<msg timestamp="20230227 12:19:39.290" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20230227 12:19:39.262" endtime="20230227 12:19:39.290"/>
</kw>
<msg timestamp="20230227 12:19:39.291" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20230227 12:19:39.256" endtime="20230227 12:19:39.291"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230227 12:19:39.307" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20230227 12:19:59.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20230227 12:19:59.047" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230227 12:19:39.295" endtime="20230227 12:19:59.047"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230227 12:19:59.048" level="INFO"/>
<status status="PASS" starttime="20230227 12:19:59.047" endtime="20230227 12:19:59.049"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230227 12:19:59.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230227 12:19:59.049" endtime="20230227 12:19:59.050"/>
</kw>
<status status="PASS" starttime="20230227 12:19:39.293" endtime="20230227 12:19:59.050"/>
</kw>
<msg timestamp="20230227 12:19:59.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230227 12:19:39.293" endtime="20230227 12:19:59.051"/>
</kw>
<status status="PASS" starttime="20230227 12:19:39.291" endtime="20230227 12:19:59.051"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230227 12:19:59.056" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20230227 12:20:10.358" level="INFO">${rc} = 0</msg>
<msg timestamp="20230227 12:20:10.359" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230227 12:19:59.053" endtime="20230227 12:20:10.359"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230227 12:20:10.360" level="INFO"/>
<status status="PASS" starttime="20230227 12:20:10.359" endtime="20230227 12:20:10.360"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230227 12:20:10.361" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230227 12:20:10.361" endtime="20230227 12:20:10.361"/>
</kw>
<status status="PASS" starttime="20230227 12:19:59.052" endtime="20230227 12:20:10.362"/>
</kw>
<msg timestamp="20230227 12:20:10.362" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230227 12:19:59.052" endtime="20230227 12:20:10.363"/>
</kw>
<status status="PASS" starttime="20230227 12:19:59.051" endtime="20230227 12:20:10.363"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230227 12:19:39.252" endtime="20230227 12:20:10.364"/>
</test>
<doc>Create directories required for MR test</doc>
<status status="FAIL" starttime="20230227 12:17:39.040" endtime="20230227 12:20:10.375"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230227 12:17:27.533" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230227 12:17:27.562" level="INFO">${rc} = 0</msg>
<msg timestamp="20230227 12:17:27.562" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20230227 12:17:27.517" endtime="20230227 12:17:27.562"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230227 12:17:27.564" level="INFO">om</msg>
<status status="PASS" starttime="20230227 12:17:27.563" endtime="20230227 12:17:27.564"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230227 12:17:27.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230227 12:17:27.565" endtime="20230227 12:17:27.567"/>
</kw>
<status status="PASS" starttime="20230227 12:17:27.514" endtime="20230227 12:17:27.567"/>
</kw>
<msg timestamp="20230227 12:17:27.567" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230227 12:17:27.511" endtime="20230227 12:17:27.574"/>
</kw>
<msg timestamp="20230227 12:17:27.575" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20230227 12:17:27.511" endtime="20230227 12:17:27.575"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230227 12:17:27.578" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230227 12:17:27.576" endtime="20230227 12:17:27.578"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230227 12:17:27.617" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230227 12:17:27.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20230227 12:17:27.662" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230227 12:17:27.603" endtime="20230227 12:17:27.662"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230227 12:17:27.665" level="INFO"/>
<status status="PASS" starttime="20230227 12:17:27.663" endtime="20230227 12:17:27.665"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230227 12:17:27.666" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230227 12:17:27.665" endtime="20230227 12:17:27.667"/>
</kw>
<status status="PASS" starttime="20230227 12:17:27.592" endtime="20230227 12:17:27.667"/>
</kw>
<msg timestamp="20230227 12:17:27.667" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230227 12:17:27.582" endtime="20230227 12:17:27.668"/>
</kw>
<status status="PASS" starttime="20230227 12:17:27.580" endtime="20230227 12:17:27.668"/>
</kw>
<status status="PASS" starttime="20230227 12:17:27.578" endtime="20230227 12:17:27.668"/>
</kw>
<status status="PASS" starttime="20230227 12:17:27.507" endtime="20230227 12:17:27.668"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230227 12:17:27.504" endtime="20230227 12:17:27.672"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230227 12:17:27.161" endtime="20230227 12:17:27.685"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="151859"/>
</suite>
<statistics>
<total>
<stat pass="2" fail="1" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="2" fail="1" skip="0" id="s1" name="ozonesecure-mr">ozonesecure-mr</stat>
<stat pass="1" fail="1" skip="0" id="s1-s1" name="Createmrenv">ozonesecure-mr.Createmrenv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure-mr.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
