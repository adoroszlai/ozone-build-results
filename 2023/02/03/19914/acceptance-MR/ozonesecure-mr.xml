<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.0.2 (Python 3.8.10 on linux)" generated="20230203 02:40:10.731" rpa="false" schemaversion="3">
<suite id="s1" name="ozonesecure-mr">
<suite id="s1-s1" name="Createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-s1-t1" name="Create test volume, bucket and key" line="38">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230203 02:37:13.926" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230203 02:37:27.166" level="INFO">${rc} = 255</msg>
<msg timestamp="20230203 02:37:27.166" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20230203 02:37:13.921" endtime="20230203 02:37:27.166"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230203 02:37:27.168" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20230203 02:37:27.167" endtime="20230203 02:37:27.168"/>
</kw>
<msg timestamp="20230203 02:37:27.169" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20230203 02:37:13.920" endtime="20230203 02:37:27.169"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create volume">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230203 02:37:27.187" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230203 02:37:38.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20230203 02:37:38.691" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230203 02:37:27.175" endtime="20230203 02:37:38.692"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230203 02:37:38.693" level="INFO"/>
<status status="PASS" starttime="20230203 02:37:38.692" endtime="20230203 02:37:38.693"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230203 02:37:38.694" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230203 02:37:38.694" endtime="20230203 02:37:38.695"/>
</kw>
<status status="PASS" starttime="20230203 02:37:27.173" endtime="20230203 02:37:38.695"/>
</kw>
<msg timestamp="20230203 02:37:38.695" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230203 02:37:27.171" endtime="20230203 02:37:38.698"/>
</kw>
<msg timestamp="20230203 02:37:38.699" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230203 02:37:27.170" endtime="20230203 02:37:38.699"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230203 02:37:38.700" endtime="20230203 02:37:38.700"/>
</kw>
<status status="PASS" starttime="20230203 02:37:27.170" endtime="20230203 02:37:38.701"/>
</kw>
<status status="PASS" starttime="20230203 02:37:27.169" endtime="20230203 02:37:38.701"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/${bucket} --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230203 02:37:38.708" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20230203 02:37:50.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20230203 02:37:50.175" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230203 02:37:38.705" endtime="20230203 02:37:50.175"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230203 02:37:50.177" level="INFO"/>
<status status="PASS" starttime="20230203 02:37:50.176" endtime="20230203 02:37:50.177"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230203 02:37:50.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230203 02:37:50.177" endtime="20230203 02:37:50.178"/>
</kw>
<status status="PASS" starttime="20230203 02:37:38.704" endtime="20230203 02:37:50.178"/>
</kw>
<msg timestamp="20230203 02:37:50.178" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230203 02:37:38.703" endtime="20230203 02:37:50.179"/>
</kw>
<status status="PASS" starttime="20230203 02:37:38.702" endtime="20230203 02:37:50.180"/>
</kw>
<status status="PASS" starttime="20230203 02:37:38.701" endtime="20230203 02:37:50.180"/>
</kw>
<status status="PASS" starttime="20230203 02:37:38.701" endtime="20230203 02:37:50.180"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230203 02:37:50.180" endtime="20230203 02:37:50.182"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230203 02:37:50.192" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230203 02:38:02.508" level="INFO">${rc} = 0</msg>
<msg timestamp="20230203 02:38:02.508" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023-02-03T02:37...</msg>
<status status="PASS" starttime="20230203 02:37:50.186" endtime="20230203 02:38:02.509"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230203 02:38:02.510" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023-02-03T02:37:49.832Z",
  "modificationTime" : "2023-02-03T02:37:49.832Z",
  "quotaInBytes" : 1099511627776,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "testuser",
  "link" : false
}</msg>
<status status="PASS" starttime="20230203 02:38:02.509" endtime="20230203 02:38:02.511"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230203 02:38:02.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230203 02:38:02.511" endtime="20230203 02:38:02.511"/>
</kw>
<status status="PASS" starttime="20230203 02:37:50.185" endtime="20230203 02:38:02.512"/>
</kw>
<msg timestamp="20230203 02:38:02.512" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230203 02:37:50.184" endtime="20230203 02:38:02.513"/>
</kw>
<msg timestamp="20230203 02:38:02.513" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023-02-03T02:37...</msg>
<status status="PASS" starttime="20230203 02:37:50.182" endtime="20230203 02:38:02.513"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230203 02:38:02.513" endtime="20230203 02:38:02.514"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230203 02:38:02.520" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230203 02:38:02.519" endtime="20230203 02:38:02.520"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230203 02:38:02.521" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20230203 02:38:02.521" endtime="20230203 02:38:02.521"/>
</kw>
<status status="PASS" starttime="20230203 02:38:02.519" endtime="20230203 02:38:02.522"/>
</kw>
<msg timestamp="20230203 02:38:02.522" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20230203 02:38:02.517" endtime="20230203 02:38:02.522"/>
</kw>
<status status="PASS" starttime="20230203 02:38:02.516" endtime="20230203 02:38:02.523"/>
</kw>
<msg timestamp="20230203 02:38:02.523" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20230203 02:38:02.515" endtime="20230203 02:38:02.523"/>
</kw>
<msg timestamp="20230203 02:38:02.523" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20230203 02:38:02.514" endtime="20230203 02:38:02.523"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230203 02:38:02.528" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20230203 02:38:13.192" level="INFO">${rc} = 0</msg>
<msg timestamp="20230203 02:38:13.192" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230203 02:38:02.525" endtime="20230203 02:38:13.193"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230203 02:38:13.194" level="INFO"/>
<status status="PASS" starttime="20230203 02:38:13.193" endtime="20230203 02:38:13.195"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230203 02:38:13.195" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230203 02:38:13.195" endtime="20230203 02:38:13.196"/>
</kw>
<status status="PASS" starttime="20230203 02:38:02.525" endtime="20230203 02:38:13.196"/>
</kw>
<msg timestamp="20230203 02:38:13.196" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230203 02:38:02.524" endtime="20230203 02:38:13.197"/>
</kw>
<status status="PASS" starttime="20230203 02:38:02.524" endtime="20230203 02:38:13.197"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230203 02:38:13.211" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230203 02:38:35.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20230203 02:38:35.303" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230203 02:38:13.200" endtime="20230203 02:38:35.303"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230203 02:38:35.305" level="INFO"/>
<status status="PASS" starttime="20230203 02:38:35.304" endtime="20230203 02:38:35.305"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230203 02:38:35.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230203 02:38:35.305" endtime="20230203 02:38:35.307"/>
</kw>
<status status="PASS" starttime="20230203 02:38:13.199" endtime="20230203 02:38:35.307"/>
</kw>
<msg timestamp="20230203 02:38:35.307" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230203 02:38:13.198" endtime="20230203 02:38:35.308"/>
</kw>
<status status="PASS" starttime="20230203 02:38:13.197" endtime="20230203 02:38:35.308"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230203 02:38:35.316" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230203 02:38:54.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20230203 02:38:54.669" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230203 02:38:35.312" endtime="20230203 02:38:54.669"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230203 02:38:54.670" level="INFO"/>
<status status="PASS" starttime="20230203 02:38:54.670" endtime="20230203 02:38:54.671"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230203 02:38:54.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230203 02:38:54.671" endtime="20230203 02:38:54.671"/>
</kw>
<status status="PASS" starttime="20230203 02:38:35.311" endtime="20230203 02:38:54.672"/>
</kw>
<msg timestamp="20230203 02:38:54.672" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230203 02:38:35.310" endtime="20230203 02:38:54.673"/>
</kw>
<status status="PASS" starttime="20230203 02:38:35.308" endtime="20230203 02:38:54.673"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230203 02:38:54.686" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20230203 02:39:13.920" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20230203 02:38:54.675" endtime="20230203 02:39:13.920"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230203 02:39:13.921" endtime="20230203 02:39:13.921"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20230203 02:39:13.921" endtime="20230203 02:39:13.921"/>
</kw>
<status status="FAIL" starttime="20230203 02:38:54.674" endtime="20230203 02:39:13.923"/>
</kw>
<msg timestamp="20230203 02:39:13.923" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20230203 02:38:54.674" endtime="20230203 02:39:13.926"/>
</kw>
<status status="FAIL" starttime="20230203 02:38:54.673" endtime="20230203 02:39:13.926"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20230203 02:37:13.919" endtime="20230203 02:39:13.928">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop" line="51">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230203 02:39:13.990" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230203 02:39:13.988" endtime="20230203 02:39:13.990"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230203 02:39:13.993" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20230203 02:39:13.991" endtime="20230203 02:39:13.994"/>
</kw>
<status status="PASS" starttime="20230203 02:39:13.977" endtime="20230203 02:39:13.995"/>
</kw>
<msg timestamp="20230203 02:39:13.995" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20230203 02:39:13.968" endtime="20230203 02:39:13.995"/>
</kw>
<status status="PASS" starttime="20230203 02:39:13.963" endtime="20230203 02:39:13.999"/>
</kw>
<msg timestamp="20230203 02:39:14.003" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20230203 02:39:13.945" endtime="20230203 02:39:14.003"/>
</kw>
<msg timestamp="20230203 02:39:14.004" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20230203 02:39:13.939" endtime="20230203 02:39:14.004"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230203 02:39:14.040" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20230203 02:39:26.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20230203 02:39:26.513" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230203 02:39:14.026" endtime="20230203 02:39:26.514"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230203 02:39:26.515" level="INFO"/>
<status status="PASS" starttime="20230203 02:39:26.514" endtime="20230203 02:39:26.515"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230203 02:39:26.516" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230203 02:39:26.516" endtime="20230203 02:39:26.517"/>
</kw>
<status status="PASS" starttime="20230203 02:39:14.019" endtime="20230203 02:39:26.517"/>
</kw>
<msg timestamp="20230203 02:39:26.517" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230203 02:39:14.014" endtime="20230203 02:39:26.518"/>
</kw>
<status status="PASS" starttime="20230203 02:39:14.010" endtime="20230203 02:39:26.518"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230203 02:39:26.524" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20230203 02:39:37.855" level="INFO">${rc} = 0</msg>
<msg timestamp="20230203 02:39:37.855" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230203 02:39:26.520" endtime="20230203 02:39:37.855"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230203 02:39:37.857" level="INFO"/>
<status status="PASS" starttime="20230203 02:39:37.856" endtime="20230203 02:39:37.858"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230203 02:39:37.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230203 02:39:37.858" endtime="20230203 02:39:37.859"/>
</kw>
<status status="PASS" starttime="20230203 02:39:26.520" endtime="20230203 02:39:37.859"/>
</kw>
<msg timestamp="20230203 02:39:37.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230203 02:39:26.519" endtime="20230203 02:39:37.860"/>
</kw>
<status status="PASS" starttime="20230203 02:39:26.518" endtime="20230203 02:39:37.861"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230203 02:39:13.934" endtime="20230203 02:39:37.861"/>
</test>
<doc>Create directories required for MR test</doc>
<status status="FAIL" starttime="20230203 02:37:13.790" endtime="20230203 02:39:37.863"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230203 02:37:05.054" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230203 02:37:05.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20230203 02:37:05.062" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20230203 02:37:05.046" endtime="20230203 02:37:05.063"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230203 02:37:05.064" level="INFO">om</msg>
<status status="PASS" starttime="20230203 02:37:05.063" endtime="20230203 02:37:05.064"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230203 02:37:05.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230203 02:37:05.065" endtime="20230203 02:37:05.065"/>
</kw>
<status status="PASS" starttime="20230203 02:37:05.045" endtime="20230203 02:37:05.066"/>
</kw>
<msg timestamp="20230203 02:37:05.066" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230203 02:37:05.045" endtime="20230203 02:37:05.068"/>
</kw>
<msg timestamp="20230203 02:37:05.068" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20230203 02:37:05.044" endtime="20230203 02:37:05.068"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230203 02:37:05.069" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230203 02:37:05.069" endtime="20230203 02:37:05.070"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230203 02:37:05.077" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230203 02:37:05.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20230203 02:37:05.108" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230203 02:37:05.073" endtime="20230203 02:37:05.108"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230203 02:37:05.109" level="INFO"/>
<status status="PASS" starttime="20230203 02:37:05.108" endtime="20230203 02:37:05.110"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230203 02:37:05.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230203 02:37:05.110" endtime="20230203 02:37:05.111"/>
</kw>
<status status="PASS" starttime="20230203 02:37:05.072" endtime="20230203 02:37:05.111"/>
</kw>
<msg timestamp="20230203 02:37:05.111" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230203 02:37:05.072" endtime="20230203 02:37:05.112"/>
</kw>
<status status="PASS" starttime="20230203 02:37:05.071" endtime="20230203 02:37:05.112"/>
</kw>
<status status="PASS" starttime="20230203 02:37:05.070" endtime="20230203 02:37:05.112"/>
</kw>
<status status="PASS" starttime="20230203 02:37:05.043" endtime="20230203 02:37:05.112"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230203 02:37:05.041" endtime="20230203 02:37:05.113"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230203 02:37:04.945" endtime="20230203 02:37:05.115"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="144243"/>
</suite>
<statistics>
<total>
<stat pass="2" fail="1" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="2" fail="1" skip="0" id="s1" name="ozonesecure-mr">ozonesecure-mr</stat>
<stat pass="1" fail="1" skip="0" id="s1-s1" name="Createmrenv">ozonesecure-mr.Createmrenv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure-mr.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
