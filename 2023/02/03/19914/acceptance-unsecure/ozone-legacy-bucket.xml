<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.0.2 (Python 3.8.10 on linux)" generated="20230203 02:08:14.580" rpa="false" schemaversion="3">
<suite id="s1" name="ozone-legacy-bucket" source="/opt/hadoop/smoketest/recon/recon-nssummary.robot">
<test id="s1-t1" name="Check volume creation" line="99">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230203 02:06:26.586" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230203 02:06:26.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20230203 02:06:26.600" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230203 02:06:26.578" endtime="20230203 02:06:26.600"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230203 02:06:26.603" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230203 02:06:26.601" endtime="20230203 02:06:26.603"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230203 02:06:26.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230203 02:06:26.603" endtime="20230203 02:06:26.604"/>
</kw>
<status status="PASS" starttime="20230203 02:06:26.577" endtime="20230203 02:06:26.605"/>
</kw>
<msg timestamp="20230203 02:06:26.606" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230203 02:06:26.577" endtime="20230203 02:06:26.610"/>
</kw>
<status status="PASS" starttime="20230203 02:06:26.575" endtime="20230203 02:06:26.610"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230203 02:06:26.611" endtime="20230203 02:06:26.613"/>
</kw>
<status status="PASS" starttime="20230203 02:06:26.611" endtime="20230203 02:06:26.614"/>
</kw>
<kw name="Create volume">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230203 02:06:26.616" level="INFO">${random} = iedsd</msg>
<status status="PASS" starttime="20230203 02:06:26.614" endtime="20230203 02:06:26.616"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${VOLUME}</arg>
<arg>vol-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230203 02:06:26.619" level="INFO">${VOLUME} = vol-iedsd</msg>
<status status="PASS" starttime="20230203 02:06:26.617" endtime="20230203 02:06:26.619"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230203 02:06:26.625" level="INFO">Running command 'ozone sh volume create /vol-iedsd 2&gt;&amp;1'.</msg>
<msg timestamp="20230203 02:06:36.026" level="INFO">${rc} = 0</msg>
<msg timestamp="20230203 02:06:36.027" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230203 02:06:26.622" endtime="20230203 02:06:36.027"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230203 02:06:36.029" level="INFO"/>
<status status="PASS" starttime="20230203 02:06:36.028" endtime="20230203 02:06:36.030"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230203 02:06:36.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230203 02:06:36.030" endtime="20230203 02:06:36.031"/>
</kw>
<status status="PASS" starttime="20230203 02:06:26.620" endtime="20230203 02:06:36.032"/>
</kw>
<msg timestamp="20230203 02:06:36.032" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230203 02:06:26.620" endtime="20230203 02:06:36.033"/>
</kw>
<msg timestamp="20230203 02:06:36.033" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230203 02:06:26.619" endtime="20230203 02:06:36.034"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230203 02:06:36.034" endtime="20230203 02:06:36.035"/>
</kw>
<status status="PASS" starttime="20230203 02:06:26.614" endtime="20230203 02:06:36.035"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230203 02:06:26.574" endtime="20230203 02:06:36.035"/>
</test>
<test id="s1-t2" name="Check bucket creation" line="104">
<kw name="Create bucket">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230203 02:06:36.042" level="INFO">${random} = ygxtw</msg>
<status status="PASS" starttime="20230203 02:06:36.041" endtime="20230203 02:06:36.042"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>buc-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230203 02:06:36.043" level="INFO">${BUCKET} = buc-ygxtw</msg>
<status status="PASS" starttime="20230203 02:06:36.042" endtime="20230203 02:06:36.044"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create -l ${BUCKET_LAYOUT} /${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230203 02:06:36.050" level="INFO">Running command 'ozone sh bucket create -l LEGACY /vol-iedsd/buc-ygxtw 2&gt;&amp;1'.</msg>
<msg timestamp="20230203 02:06:41.803" level="INFO">${rc} = 0</msg>
<msg timestamp="20230203 02:06:41.803" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230203 02:06:36.046" endtime="20230203 02:06:41.803"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230203 02:06:41.805" level="INFO"/>
<status status="PASS" starttime="20230203 02:06:41.804" endtime="20230203 02:06:41.805"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230203 02:06:41.806" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230203 02:06:41.805" endtime="20230203 02:06:41.806"/>
</kw>
<status status="PASS" starttime="20230203 02:06:36.045" endtime="20230203 02:06:41.807"/>
</kw>
<msg timestamp="20230203 02:06:41.807" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230203 02:06:36.045" endtime="20230203 02:06:41.807"/>
</kw>
<msg timestamp="20230203 02:06:41.808" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230203 02:06:36.044" endtime="20230203 02:06:41.808"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230203 02:06:41.808" endtime="20230203 02:06:41.809"/>
</kw>
<status status="PASS" starttime="20230203 02:06:36.040" endtime="20230203 02:06:41.809"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230203 02:06:36.038" endtime="20230203 02:06:41.810"/>
</test>
<test id="s1-t3" name="Check keys creation" line="107">
<kw name="Create keys">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/file1 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230203 02:06:41.819" level="INFO">Running command 'ozone sh key put /vol-iedsd/buc-ygxtw/file1 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20230203 02:06:54.652" level="INFO">${rc} = 0</msg>
<msg timestamp="20230203 02:06:54.652" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230203 02:06:41.815" endtime="20230203 02:06:54.652"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230203 02:06:54.654" level="INFO"/>
<status status="PASS" starttime="20230203 02:06:54.653" endtime="20230203 02:06:54.654"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230203 02:06:54.655" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230203 02:06:54.655" endtime="20230203 02:06:54.656"/>
</kw>
<status status="PASS" starttime="20230203 02:06:41.814" endtime="20230203 02:06:54.656"/>
</kw>
<msg timestamp="20230203 02:06:54.656" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230203 02:06:41.813" endtime="20230203 02:06:54.657"/>
</kw>
<msg timestamp="20230203 02:06:54.657" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230203 02:06:41.813" endtime="20230203 02:06:54.657"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230203 02:06:54.658" endtime="20230203 02:06:54.658"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/dir1/dir2/file2 HISTORY.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230203 02:06:54.663" level="INFO">Running command 'ozone sh key put /vol-iedsd/buc-ygxtw/dir1/dir2/file2 HISTORY.md 2&gt;&amp;1'.</msg>
<msg timestamp="20230203 02:07:04.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20230203 02:07:04.121" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230203 02:06:54.660" endtime="20230203 02:07:04.121"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230203 02:07:04.123" level="INFO"/>
<status status="PASS" starttime="20230203 02:07:04.122" endtime="20230203 02:07:04.123"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230203 02:07:04.124" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230203 02:07:04.123" endtime="20230203 02:07:04.124"/>
</kw>
<status status="PASS" starttime="20230203 02:06:54.660" endtime="20230203 02:07:04.124"/>
</kw>
<msg timestamp="20230203 02:07:04.124" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230203 02:06:54.659" endtime="20230203 02:07:04.125"/>
</kw>
<msg timestamp="20230203 02:07:04.125" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230203 02:06:54.658" endtime="20230203 02:07:04.125"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230203 02:07:04.126" endtime="20230203 02:07:04.126"/>
</kw>
<status status="PASS" starttime="20230203 02:06:41.812" endtime="20230203 02:07:04.126"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230203 02:06:41.811" endtime="20230203 02:07:04.127"/>
</test>
<test id="s1-t4" name="Check Summary api access" line="110">
<kw name="Check Access">
<arg>${SUMMARY_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230203 02:07:04.135" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230203 02:07:04.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20230203 02:07:04.140" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230203 02:07:04.132" endtime="20230203 02:07:04.140"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230203 02:07:04.142" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230203 02:07:04.141" endtime="20230203 02:07:04.142"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230203 02:07:04.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230203 02:07:04.142" endtime="20230203 02:07:04.143"/>
</kw>
<status status="PASS" starttime="20230203 02:07:04.131" endtime="20230203 02:07:04.144"/>
</kw>
<msg timestamp="20230203 02:07:04.144" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230203 02:07:04.131" endtime="20230203 02:07:04.145"/>
</kw>
<status status="PASS" starttime="20230203 02:07:04.130" endtime="20230203 02:07:04.145"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230203 02:07:04.151" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230203 02:07:04.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20230203 02:07:04.536" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230203 02:07:04.148" endtime="20230203 02:07:04.536"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230203 02:07:04.538" level="INFO">200</msg>
<status status="PASS" starttime="20230203 02:07:04.537" endtime="20230203 02:07:04.538"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230203 02:07:04.539" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230203 02:07:04.538" endtime="20230203 02:07:04.539"/>
</kw>
<status status="PASS" starttime="20230203 02:07:04.147" endtime="20230203 02:07:04.539"/>
</kw>
<msg timestamp="20230203 02:07:04.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230203 02:07:04.147" endtime="20230203 02:07:04.540"/>
</kw>
<msg timestamp="20230203 02:07:04.541" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230203 02:07:04.146" endtime="20230203 02:07:04.541"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230203 02:07:04.542" endtime="20230203 02:07:04.542"/>
</kw>
<status status="NOT RUN" starttime="20230203 02:07:04.542" endtime="20230203 02:07:04.542"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230203 02:07:04.543" endtime="20230203 02:07:04.544"/>
</kw>
<status status="PASS" starttime="20230203 02:07:04.542" endtime="20230203 02:07:04.544"/>
</branch>
<status status="PASS" starttime="20230203 02:07:04.541" endtime="20230203 02:07:04.544"/>
</if>
<status status="PASS" starttime="20230203 02:07:04.145" endtime="20230203 02:07:04.544"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230203 02:07:04.545" endtime="20230203 02:07:04.545"/>
</kw>
<status status="PASS" starttime="20230203 02:07:04.544" endtime="20230203 02:07:04.546"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230203 02:07:04.553" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230203 02:07:04.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20230203 02:07:04.585" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230203 02:07:04.549" endtime="20230203 02:07:04.585"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230203 02:07:04.587" level="INFO">200</msg>
<status status="PASS" starttime="20230203 02:07:04.585" endtime="20230203 02:07:04.587"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230203 02:07:04.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230203 02:07:04.587" endtime="20230203 02:07:04.588"/>
</kw>
<status status="PASS" starttime="20230203 02:07:04.548" endtime="20230203 02:07:04.588"/>
</kw>
<msg timestamp="20230203 02:07:04.588" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230203 02:07:04.548" endtime="20230203 02:07:04.589"/>
</kw>
<msg timestamp="20230203 02:07:04.590" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230203 02:07:04.547" endtime="20230203 02:07:04.590"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230203 02:07:04.592" endtime="20230203 02:07:04.592"/>
</kw>
<status status="NOT RUN" starttime="20230203 02:07:04.591" endtime="20230203 02:07:04.592"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230203 02:07:04.592" endtime="20230203 02:07:04.592"/>
</kw>
<status status="PASS" starttime="20230203 02:07:04.592" endtime="20230203 02:07:04.593"/>
</branch>
<status status="PASS" starttime="20230203 02:07:04.590" endtime="20230203 02:07:04.593"/>
</if>
<status status="PASS" starttime="20230203 02:07:04.546" endtime="20230203 02:07:04.593"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230203 02:07:04.594" endtime="20230203 02:07:04.596"/>
</kw>
<status status="PASS" starttime="20230203 02:07:04.593" endtime="20230203 02:07:04.596"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230203 02:07:04.604" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230203 02:07:04.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20230203 02:07:04.625" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230203 02:07:04.600" endtime="20230203 02:07:04.625"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230203 02:07:04.626" level="INFO">200</msg>
<status status="PASS" starttime="20230203 02:07:04.625" endtime="20230203 02:07:04.626"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230203 02:07:04.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230203 02:07:04.627" endtime="20230203 02:07:04.628"/>
</kw>
<status status="PASS" starttime="20230203 02:07:04.600" endtime="20230203 02:07:04.628"/>
</kw>
<msg timestamp="20230203 02:07:04.628" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230203 02:07:04.599" endtime="20230203 02:07:04.630"/>
</kw>
<msg timestamp="20230203 02:07:04.630" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230203 02:07:04.598" endtime="20230203 02:07:04.631"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230203 02:07:04.631" endtime="20230203 02:07:04.631"/>
</kw>
<status status="NOT RUN" starttime="20230203 02:07:04.631" endtime="20230203 02:07:04.631"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230203 02:07:04.632" endtime="20230203 02:07:04.632"/>
</kw>
<status status="PASS" starttime="20230203 02:07:04.631" endtime="20230203 02:07:04.632"/>
</branch>
<status status="PASS" starttime="20230203 02:07:04.631" endtime="20230203 02:07:04.632"/>
</if>
<status status="PASS" starttime="20230203 02:07:04.597" endtime="20230203 02:07:04.633"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230203 02:07:04.634" endtime="20230203 02:07:04.634"/>
</kw>
<status status="PASS" starttime="20230203 02:07:04.633" endtime="20230203 02:07:04.635"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230203 02:07:04.644" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230203 02:07:04.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20230203 02:07:04.665" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230203 02:07:04.639" endtime="20230203 02:07:04.665"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230203 02:07:04.667" level="INFO">200</msg>
<status status="PASS" starttime="20230203 02:07:04.666" endtime="20230203 02:07:04.667"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230203 02:07:04.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230203 02:07:04.667" endtime="20230203 02:07:04.668"/>
</kw>
<status status="PASS" starttime="20230203 02:07:04.637" endtime="20230203 02:07:04.668"/>
</kw>
<msg timestamp="20230203 02:07:04.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230203 02:07:04.637" endtime="20230203 02:07:04.669"/>
</kw>
<msg timestamp="20230203 02:07:04.670" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230203 02:07:04.636" endtime="20230203 02:07:04.670"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230203 02:07:04.670" endtime="20230203 02:07:04.670"/>
</kw>
<status status="NOT RUN" starttime="20230203 02:07:04.670" endtime="20230203 02:07:04.671"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230203 02:07:04.671" endtime="20230203 02:07:04.672"/>
</kw>
<status status="PASS" starttime="20230203 02:07:04.671" endtime="20230203 02:07:04.672"/>
</branch>
<status status="PASS" starttime="20230203 02:07:04.670" endtime="20230203 02:07:04.672"/>
</if>
<status status="PASS" starttime="20230203 02:07:04.635" endtime="20230203 02:07:04.672"/>
</kw>
<status status="PASS" starttime="20230203 02:07:04.129" endtime="20230203 02:07:04.672"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230203 02:07:04.128" endtime="20230203 02:07:04.673"/>
</test>
<test id="s1-t5" name="Check Disk Usage api access" line="113">
<kw name="Check Access">
<arg>${DISK_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230203 02:07:04.682" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230203 02:07:04.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20230203 02:07:04.688" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230203 02:07:04.679" endtime="20230203 02:07:04.688"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230203 02:07:04.698" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230203 02:07:04.689" endtime="20230203 02:07:04.698"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230203 02:07:04.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230203 02:07:04.698" endtime="20230203 02:07:04.699"/>
</kw>
<status status="PASS" starttime="20230203 02:07:04.678" endtime="20230203 02:07:04.699"/>
</kw>
<msg timestamp="20230203 02:07:04.700" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230203 02:07:04.678" endtime="20230203 02:07:04.700"/>
</kw>
<status status="PASS" starttime="20230203 02:07:04.677" endtime="20230203 02:07:04.701"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230203 02:07:04.708" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230203 02:07:04.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20230203 02:07:04.741" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230203 02:07:04.705" endtime="20230203 02:07:04.741"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230203 02:07:04.744" level="INFO">200</msg>
<status status="PASS" starttime="20230203 02:07:04.742" endtime="20230203 02:07:04.744"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230203 02:07:04.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230203 02:07:04.744" endtime="20230203 02:07:04.745"/>
</kw>
<status status="PASS" starttime="20230203 02:07:04.704" endtime="20230203 02:07:04.746"/>
</kw>
<msg timestamp="20230203 02:07:04.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230203 02:07:04.703" endtime="20230203 02:07:04.747"/>
</kw>
<msg timestamp="20230203 02:07:04.747" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230203 02:07:04.702" endtime="20230203 02:07:04.747"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230203 02:07:04.748" endtime="20230203 02:07:04.748"/>
</kw>
<status status="NOT RUN" starttime="20230203 02:07:04.748" endtime="20230203 02:07:04.748"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230203 02:07:04.748" endtime="20230203 02:07:04.749"/>
</kw>
<status status="PASS" starttime="20230203 02:07:04.748" endtime="20230203 02:07:04.749"/>
</branch>
<status status="PASS" starttime="20230203 02:07:04.747" endtime="20230203 02:07:04.749"/>
</if>
<status status="PASS" starttime="20230203 02:07:04.701" endtime="20230203 02:07:04.750"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230203 02:07:04.751" endtime="20230203 02:07:04.751"/>
</kw>
<status status="PASS" starttime="20230203 02:07:04.750" endtime="20230203 02:07:04.751"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230203 02:07:04.757" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230203 02:07:04.777" level="INFO">${rc} = 0</msg>
<msg timestamp="20230203 02:07:04.777" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230203 02:07:04.754" endtime="20230203 02:07:04.777"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230203 02:07:04.779" level="INFO">200</msg>
<status status="PASS" starttime="20230203 02:07:04.778" endtime="20230203 02:07:04.779"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230203 02:07:04.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230203 02:07:04.780" endtime="20230203 02:07:04.780"/>
</kw>
<status status="PASS" starttime="20230203 02:07:04.754" endtime="20230203 02:07:04.781"/>
</kw>
<msg timestamp="20230203 02:07:04.781" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230203 02:07:04.753" endtime="20230203 02:07:04.783"/>
</kw>
<msg timestamp="20230203 02:07:04.783" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230203 02:07:04.752" endtime="20230203 02:07:04.783"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230203 02:07:04.784" endtime="20230203 02:07:04.784"/>
</kw>
<status status="NOT RUN" starttime="20230203 02:07:04.784" endtime="20230203 02:07:04.784"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230203 02:07:04.785" endtime="20230203 02:07:04.785"/>
</kw>
<status status="PASS" starttime="20230203 02:07:04.784" endtime="20230203 02:07:04.785"/>
</branch>
<status status="PASS" starttime="20230203 02:07:04.784" endtime="20230203 02:07:04.785"/>
</if>
<status status="PASS" starttime="20230203 02:07:04.752" endtime="20230203 02:07:04.786"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230203 02:07:04.786" endtime="20230203 02:07:04.787"/>
</kw>
<status status="PASS" starttime="20230203 02:07:04.786" endtime="20230203 02:07:04.787"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230203 02:07:04.794" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230203 02:07:04.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20230203 02:07:04.819" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230203 02:07:04.790" endtime="20230203 02:07:04.820"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230203 02:07:04.821" level="INFO">200</msg>
<status status="PASS" starttime="20230203 02:07:04.820" endtime="20230203 02:07:04.821"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230203 02:07:04.822" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230203 02:07:04.822" endtime="20230203 02:07:04.822"/>
</kw>
<status status="PASS" starttime="20230203 02:07:04.789" endtime="20230203 02:07:04.823"/>
</kw>
<msg timestamp="20230203 02:07:04.823" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230203 02:07:04.789" endtime="20230203 02:07:04.824"/>
</kw>
<msg timestamp="20230203 02:07:04.824" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230203 02:07:04.788" endtime="20230203 02:07:04.824"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230203 02:07:04.825" endtime="20230203 02:07:04.825"/>
</kw>
<status status="NOT RUN" starttime="20230203 02:07:04.824" endtime="20230203 02:07:04.825"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230203 02:07:04.825" endtime="20230203 02:07:04.826"/>
</kw>
<status status="PASS" starttime="20230203 02:07:04.825" endtime="20230203 02:07:04.826"/>
</branch>
<status status="PASS" starttime="20230203 02:07:04.824" endtime="20230203 02:07:04.826"/>
</if>
<status status="PASS" starttime="20230203 02:07:04.787" endtime="20230203 02:07:04.826"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230203 02:07:04.827" endtime="20230203 02:07:04.828"/>
</kw>
<status status="PASS" starttime="20230203 02:07:04.826" endtime="20230203 02:07:04.828"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230203 02:07:04.835" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230203 02:07:04.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20230203 02:07:04.854" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230203 02:07:04.832" endtime="20230203 02:07:04.854"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230203 02:07:04.856" level="INFO">200</msg>
<status status="PASS" starttime="20230203 02:07:04.855" endtime="20230203 02:07:04.856"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230203 02:07:04.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230203 02:07:04.856" endtime="20230203 02:07:04.857"/>
</kw>
<status status="PASS" starttime="20230203 02:07:04.831" endtime="20230203 02:07:04.857"/>
</kw>
<msg timestamp="20230203 02:07:04.858" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230203 02:07:04.831" endtime="20230203 02:07:04.858"/>
</kw>
<msg timestamp="20230203 02:07:04.859" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230203 02:07:04.830" endtime="20230203 02:07:04.859"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230203 02:07:04.860" endtime="20230203 02:07:04.860"/>
</kw>
<status status="NOT RUN" starttime="20230203 02:07:04.859" endtime="20230203 02:07:04.860"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230203 02:07:04.860" endtime="20230203 02:07:04.861"/>
</kw>
<status status="PASS" starttime="20230203 02:07:04.860" endtime="20230203 02:07:04.861"/>
</branch>
<status status="PASS" starttime="20230203 02:07:04.859" endtime="20230203 02:07:04.861"/>
</if>
<status status="PASS" starttime="20230203 02:07:04.828" endtime="20230203 02:07:04.862"/>
</kw>
<status status="PASS" starttime="20230203 02:07:04.676" endtime="20230203 02:07:04.862"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230203 02:07:04.675" endtime="20230203 02:07:04.862"/>
</test>
<test id="s1-t6" name="Check Quota Usage api access" line="116">
<kw name="Check Access">
<arg>${QUOTA_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230203 02:07:04.871" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230203 02:07:04.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20230203 02:07:04.877" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230203 02:07:04.867" endtime="20230203 02:07:04.877"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230203 02:07:04.879" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230203 02:07:04.878" endtime="20230203 02:07:04.879"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230203 02:07:04.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230203 02:07:04.880" endtime="20230203 02:07:04.880"/>
</kw>
<status status="PASS" starttime="20230203 02:07:04.867" endtime="20230203 02:07:04.881"/>
</kw>
<msg timestamp="20230203 02:07:04.881" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230203 02:07:04.866" endtime="20230203 02:07:04.882"/>
</kw>
<status status="PASS" starttime="20230203 02:07:04.866" endtime="20230203 02:07:04.882"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230203 02:07:04.888" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230203 02:07:04.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20230203 02:07:04.932" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230203 02:07:04.885" endtime="20230203 02:07:04.932"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230203 02:07:04.934" level="INFO">200</msg>
<status status="PASS" starttime="20230203 02:07:04.932" endtime="20230203 02:07:04.934"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230203 02:07:04.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230203 02:07:04.934" endtime="20230203 02:07:04.936"/>
</kw>
<status status="PASS" starttime="20230203 02:07:04.884" endtime="20230203 02:07:04.937"/>
</kw>
<msg timestamp="20230203 02:07:04.937" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230203 02:07:04.884" endtime="20230203 02:07:04.943"/>
</kw>
<msg timestamp="20230203 02:07:04.944" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230203 02:07:04.883" endtime="20230203 02:07:04.944"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230203 02:07:04.945" endtime="20230203 02:07:04.945"/>
</kw>
<status status="NOT RUN" starttime="20230203 02:07:04.945" endtime="20230203 02:07:04.945"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230203 02:07:04.946" endtime="20230203 02:07:04.947"/>
</kw>
<status status="PASS" starttime="20230203 02:07:04.945" endtime="20230203 02:07:04.947"/>
</branch>
<status status="PASS" starttime="20230203 02:07:04.944" endtime="20230203 02:07:04.947"/>
</if>
<status status="PASS" starttime="20230203 02:07:04.882" endtime="20230203 02:07:04.947"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230203 02:07:04.948" endtime="20230203 02:07:04.948"/>
</kw>
<status status="PASS" starttime="20230203 02:07:04.947" endtime="20230203 02:07:04.949"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230203 02:07:04.959" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230203 02:07:04.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20230203 02:07:04.984" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230203 02:07:04.953" endtime="20230203 02:07:04.984"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230203 02:07:04.986" level="INFO">200</msg>
<status status="PASS" starttime="20230203 02:07:04.985" endtime="20230203 02:07:04.986"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230203 02:07:04.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230203 02:07:04.986" endtime="20230203 02:07:04.987"/>
</kw>
<status status="PASS" starttime="20230203 02:07:04.952" endtime="20230203 02:07:04.988"/>
</kw>
<msg timestamp="20230203 02:07:04.989" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230203 02:07:04.951" endtime="20230203 02:07:04.992"/>
</kw>
<msg timestamp="20230203 02:07:04.992" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230203 02:07:04.949" endtime="20230203 02:07:04.992"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230203 02:07:04.993" endtime="20230203 02:07:04.993"/>
</kw>
<status status="NOT RUN" starttime="20230203 02:07:04.993" endtime="20230203 02:07:04.993"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230203 02:07:04.994" endtime="20230203 02:07:04.994"/>
</kw>
<status status="PASS" starttime="20230203 02:07:04.994" endtime="20230203 02:07:04.994"/>
</branch>
<status status="PASS" starttime="20230203 02:07:04.993" endtime="20230203 02:07:04.994"/>
</if>
<status status="PASS" starttime="20230203 02:07:04.949" endtime="20230203 02:07:04.996"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230203 02:07:04.997" endtime="20230203 02:07:04.997"/>
</kw>
<status status="PASS" starttime="20230203 02:07:04.996" endtime="20230203 02:07:04.998"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230203 02:07:05.008" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230203 02:07:05.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20230203 02:07:05.027" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230203 02:07:05.003" endtime="20230203 02:07:05.027"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230203 02:07:05.029" level="INFO">200</msg>
<status status="PASS" starttime="20230203 02:07:05.028" endtime="20230203 02:07:05.029"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230203 02:07:05.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230203 02:07:05.029" endtime="20230203 02:07:05.030"/>
</kw>
<status status="PASS" starttime="20230203 02:07:05.002" endtime="20230203 02:07:05.030"/>
</kw>
<msg timestamp="20230203 02:07:05.031" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230203 02:07:04.999" endtime="20230203 02:07:05.031"/>
</kw>
<msg timestamp="20230203 02:07:05.032" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230203 02:07:04.999" endtime="20230203 02:07:05.032"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230203 02:07:05.033" endtime="20230203 02:07:05.033"/>
</kw>
<status status="NOT RUN" starttime="20230203 02:07:05.033" endtime="20230203 02:07:05.033"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230203 02:07:05.033" endtime="20230203 02:07:05.034"/>
</kw>
<status status="PASS" starttime="20230203 02:07:05.033" endtime="20230203 02:07:05.034"/>
</branch>
<status status="PASS" starttime="20230203 02:07:05.032" endtime="20230203 02:07:05.034"/>
</if>
<status status="PASS" starttime="20230203 02:07:04.998" endtime="20230203 02:07:05.034"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230203 02:07:05.035" endtime="20230203 02:07:05.036"/>
</kw>
<status status="PASS" starttime="20230203 02:07:05.034" endtime="20230203 02:07:05.036"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230203 02:07:05.045" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230203 02:07:05.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20230203 02:07:05.069" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230203 02:07:05.040" endtime="20230203 02:07:05.069"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230203 02:07:05.071" level="INFO">200</msg>
<status status="PASS" starttime="20230203 02:07:05.070" endtime="20230203 02:07:05.071"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230203 02:07:05.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230203 02:07:05.072" endtime="20230203 02:07:05.074"/>
</kw>
<status status="PASS" starttime="20230203 02:07:05.039" endtime="20230203 02:07:05.074"/>
</kw>
<msg timestamp="20230203 02:07:05.074" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230203 02:07:05.038" endtime="20230203 02:07:05.075"/>
</kw>
<msg timestamp="20230203 02:07:05.078" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230203 02:07:05.037" endtime="20230203 02:07:05.078"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230203 02:07:05.079" endtime="20230203 02:07:05.079"/>
</kw>
<status status="NOT RUN" starttime="20230203 02:07:05.078" endtime="20230203 02:07:05.079"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230203 02:07:05.079" endtime="20230203 02:07:05.080"/>
</kw>
<status status="PASS" starttime="20230203 02:07:05.079" endtime="20230203 02:07:05.080"/>
</branch>
<status status="PASS" starttime="20230203 02:07:05.078" endtime="20230203 02:07:05.080"/>
</if>
<status status="PASS" starttime="20230203 02:07:05.036" endtime="20230203 02:07:05.080"/>
</kw>
<status status="PASS" starttime="20230203 02:07:04.865" endtime="20230203 02:07:05.080"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230203 02:07:04.864" endtime="20230203 02:07:05.081"/>
</test>
<test id="s1-t7" name="Check File Size Distribution api access" line="119">
<kw name="Check Access">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230203 02:07:05.092" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230203 02:07:05.100" level="INFO">${rc} = 0</msg>
<msg timestamp="20230203 02:07:05.100" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230203 02:07:05.089" endtime="20230203 02:07:05.100"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230203 02:07:05.102" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230203 02:07:05.101" endtime="20230203 02:07:05.102"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230203 02:07:05.103" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230203 02:07:05.102" endtime="20230203 02:07:05.103"/>
</kw>
<status status="PASS" starttime="20230203 02:07:05.088" endtime="20230203 02:07:05.104"/>
</kw>
<msg timestamp="20230203 02:07:05.104" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230203 02:07:05.088" endtime="20230203 02:07:05.104"/>
</kw>
<status status="PASS" starttime="20230203 02:07:05.087" endtime="20230203 02:07:05.105"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230203 02:07:05.112" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230203 02:07:05.148" level="INFO">${rc} = 0</msg>
<msg timestamp="20230203 02:07:05.148" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230203 02:07:05.108" endtime="20230203 02:07:05.148"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230203 02:07:05.150" level="INFO">200</msg>
<status status="PASS" starttime="20230203 02:07:05.149" endtime="20230203 02:07:05.150"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230203 02:07:05.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230203 02:07:05.151" endtime="20230203 02:07:05.152"/>
</kw>
<status status="PASS" starttime="20230203 02:07:05.107" endtime="20230203 02:07:05.153"/>
</kw>
<msg timestamp="20230203 02:07:05.153" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230203 02:07:05.107" endtime="20230203 02:07:05.154"/>
</kw>
<msg timestamp="20230203 02:07:05.154" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230203 02:07:05.106" endtime="20230203 02:07:05.155"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230203 02:07:05.155" endtime="20230203 02:07:05.156"/>
</kw>
<status status="NOT RUN" starttime="20230203 02:07:05.155" endtime="20230203 02:07:05.156"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230203 02:07:05.156" endtime="20230203 02:07:05.157"/>
</kw>
<status status="PASS" starttime="20230203 02:07:05.156" endtime="20230203 02:07:05.157"/>
</branch>
<status status="PASS" starttime="20230203 02:07:05.155" endtime="20230203 02:07:05.157"/>
</if>
<status status="PASS" starttime="20230203 02:07:05.105" endtime="20230203 02:07:05.157"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230203 02:07:05.158" endtime="20230203 02:07:05.159"/>
</kw>
<status status="PASS" starttime="20230203 02:07:05.158" endtime="20230203 02:07:05.159"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230203 02:07:05.167" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230203 02:07:05.190" level="INFO">${rc} = 0</msg>
<msg timestamp="20230203 02:07:05.190" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230203 02:07:05.164" endtime="20230203 02:07:05.190"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230203 02:07:05.193" level="INFO">200</msg>
<status status="PASS" starttime="20230203 02:07:05.191" endtime="20230203 02:07:05.194"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230203 02:07:05.195" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230203 02:07:05.194" endtime="20230203 02:07:05.195"/>
</kw>
<status status="PASS" starttime="20230203 02:07:05.162" endtime="20230203 02:07:05.195"/>
</kw>
<msg timestamp="20230203 02:07:05.195" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230203 02:07:05.161" endtime="20230203 02:07:05.196"/>
</kw>
<msg timestamp="20230203 02:07:05.197" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230203 02:07:05.160" endtime="20230203 02:07:05.197"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230203 02:07:05.198" endtime="20230203 02:07:05.198"/>
</kw>
<status status="NOT RUN" starttime="20230203 02:07:05.197" endtime="20230203 02:07:05.198"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230203 02:07:05.198" endtime="20230203 02:07:05.199"/>
</kw>
<status status="PASS" starttime="20230203 02:07:05.198" endtime="20230203 02:07:05.199"/>
</branch>
<status status="PASS" starttime="20230203 02:07:05.197" endtime="20230203 02:07:05.199"/>
</if>
<status status="PASS" starttime="20230203 02:07:05.160" endtime="20230203 02:07:05.199"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230203 02:07:05.200" endtime="20230203 02:07:05.201"/>
</kw>
<status status="PASS" starttime="20230203 02:07:05.199" endtime="20230203 02:07:05.201"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230203 02:07:05.207" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230203 02:07:05.226" level="INFO">${rc} = 0</msg>
<msg timestamp="20230203 02:07:05.228" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230203 02:07:05.204" endtime="20230203 02:07:05.228"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230203 02:07:05.229" level="INFO">200</msg>
<status status="PASS" starttime="20230203 02:07:05.228" endtime="20230203 02:07:05.230"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230203 02:07:05.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230203 02:07:05.230" endtime="20230203 02:07:05.232"/>
</kw>
<status status="PASS" starttime="20230203 02:07:05.203" endtime="20230203 02:07:05.232"/>
</kw>
<msg timestamp="20230203 02:07:05.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230203 02:07:05.203" endtime="20230203 02:07:05.233"/>
</kw>
<msg timestamp="20230203 02:07:05.233" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230203 02:07:05.202" endtime="20230203 02:07:05.234"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230203 02:07:05.234" endtime="20230203 02:07:05.235"/>
</kw>
<status status="NOT RUN" starttime="20230203 02:07:05.234" endtime="20230203 02:07:05.235"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230203 02:07:05.235" endtime="20230203 02:07:05.235"/>
</kw>
<status status="PASS" starttime="20230203 02:07:05.235" endtime="20230203 02:07:05.236"/>
</branch>
<status status="PASS" starttime="20230203 02:07:05.234" endtime="20230203 02:07:05.236"/>
</if>
<status status="PASS" starttime="20230203 02:07:05.201" endtime="20230203 02:07:05.236"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230203 02:07:05.237" endtime="20230203 02:07:05.237"/>
</kw>
<status status="PASS" starttime="20230203 02:07:05.236" endtime="20230203 02:07:05.238"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230203 02:07:05.244" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230203 02:07:05.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20230203 02:07:05.269" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230203 02:07:05.241" endtime="20230203 02:07:05.269"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230203 02:07:05.271" level="INFO">200</msg>
<status status="PASS" starttime="20230203 02:07:05.270" endtime="20230203 02:07:05.272"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230203 02:07:05.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230203 02:07:05.272" endtime="20230203 02:07:05.274"/>
</kw>
<status status="PASS" starttime="20230203 02:07:05.240" endtime="20230203 02:07:05.274"/>
</kw>
<msg timestamp="20230203 02:07:05.274" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230203 02:07:05.239" endtime="20230203 02:07:05.275"/>
</kw>
<msg timestamp="20230203 02:07:05.276" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230203 02:07:05.238" endtime="20230203 02:07:05.276"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230203 02:07:05.277" endtime="20230203 02:07:05.277"/>
</kw>
<status status="NOT RUN" starttime="20230203 02:07:05.277" endtime="20230203 02:07:05.277"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230203 02:07:05.278" endtime="20230203 02:07:05.279"/>
</kw>
<status status="PASS" starttime="20230203 02:07:05.278" endtime="20230203 02:07:05.279"/>
</branch>
<status status="PASS" starttime="20230203 02:07:05.277" endtime="20230203 02:07:05.279"/>
</if>
<status status="PASS" starttime="20230203 02:07:05.238" endtime="20230203 02:07:05.279"/>
</kw>
<status status="PASS" starttime="20230203 02:07:05.086" endtime="20230203 02:07:05.279"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230203 02:07:05.084" endtime="20230203 02:07:05.280"/>
</test>
<test id="s1-t8" name="Check Recon Namespace Summary Root" line="122">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/</arg>
<arg>ROOT</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230203 02:07:05.292" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230203 02:07:05.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20230203 02:07:05.313" level="INFO">${output} = {"path":"","type":"ROOT","countStats":{"numVolume":2,"numBucket":1,"numDir":0,"numKey":0},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTim...</msg>
<status status="PASS" starttime="20230203 02:07:05.288" endtime="20230203 02:07:05.313"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230203 02:07:05.315" level="INFO">{"path":"","type":"ROOT","countStats":{"numVolume":2,"numBucket":1,"numDir":0,"numKey":0},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":0,"modificationTime":0,"acls":null},"status":"OK"}</msg>
<status status="PASS" starttime="20230203 02:07:05.314" endtime="20230203 02:07:05.315"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230203 02:07:05.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230203 02:07:05.315" endtime="20230203 02:07:05.316"/>
</kw>
<status status="PASS" starttime="20230203 02:07:05.287" endtime="20230203 02:07:05.317"/>
</kw>
<msg timestamp="20230203 02:07:05.317" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230203 02:07:05.287" endtime="20230203 02:07:05.318"/>
</kw>
<msg timestamp="20230203 02:07:05.318" level="INFO">${result} = {"path":"","type":"ROOT","countStats":{"numVolume":2,"numBucket":1,"numDir":0,"numKey":0},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTim...</msg>
<status status="PASS" starttime="20230203 02:07:05.286" endtime="20230203 02:07:05.318"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230203 02:07:05.318" endtime="20230203 02:07:05.319"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230203 02:07:05.319" endtime="20230203 02:07:05.320"/>
</kw>
<status status="PASS" starttime="20230203 02:07:05.284" endtime="20230203 02:07:05.320"/>
</kw>
<status status="PASS" starttime="20230203 02:07:05.284" endtime="20230203 02:07:05.320"/>
</kw>
<status status="PASS" starttime="20230203 02:07:05.282" endtime="20230203 02:07:05.321"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230203 02:07:05.281" endtime="20230203 02:07:05.321"/>
</test>
<test id="s1-t9" name="Check Recon Namespace Summary Volume" line="125">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}</arg>
<arg>VOLUME</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230203 02:07:05.333" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-iedsd 2&gt;&amp;1'.</msg>
<msg timestamp="20230203 02:07:05.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20230203 02:07:05.392" level="INFO">${output} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":0,"numKey":0},"objectInfo":{"metadata":{},"name":"vol-iedsd","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<status status="PASS" starttime="20230203 02:07:05.330" endtime="20230203 02:07:05.392"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230203 02:07:05.397" level="INFO">{"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":0,"numKey":0},"objectInfo":{"metadata":{},"name":"vol-iedsd","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"creationTime":1675389995712,"modificationTime":1675389995712,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}],"admin":"hadoop","owner":"hadoop","volume":"vol-iedsd"},"status":"OK"}</msg>
<status status="PASS" starttime="20230203 02:07:05.394" endtime="20230203 02:07:05.398"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230203 02:07:05.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230203 02:07:05.398" endtime="20230203 02:07:05.399"/>
</kw>
<status status="PASS" starttime="20230203 02:07:05.329" endtime="20230203 02:07:05.399"/>
</kw>
<msg timestamp="20230203 02:07:05.399" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230203 02:07:05.328" endtime="20230203 02:07:05.400"/>
</kw>
<msg timestamp="20230203 02:07:05.401" level="INFO">${result} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":0,"numKey":0},"objectInfo":{"metadata":{},"name":"vol-iedsd","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<status status="PASS" starttime="20230203 02:07:05.327" endtime="20230203 02:07:05.401"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230203 02:07:05.401" endtime="20230203 02:07:05.402"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230203 02:07:05.402" endtime="20230203 02:07:05.403"/>
</kw>
<status status="PASS" starttime="20230203 02:07:05.326" endtime="20230203 02:07:05.403"/>
</kw>
<status status="PASS" starttime="20230203 02:07:05.326" endtime="20230203 02:07:05.404"/>
</kw>
<status status="PASS" starttime="20230203 02:07:05.325" endtime="20230203 02:07:05.404"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230203 02:07:05.322" endtime="20230203 02:07:05.404"/>
</test>
<test id="s1-t10" name="Check Recon Namespace Summary Bucket" line="128">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>BUCKET</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230203 02:07:05.416" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-iedsd/buc-ygxtw 2&gt;&amp;1'.</msg>
<msg timestamp="20230203 02:07:05.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20230203 02:07:05.460" level="INFO">${output} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":0},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-ygxtw","quotaInBytes":-1,"quotaInNamespa...</msg>
<status status="PASS" starttime="20230203 02:07:05.412" endtime="20230203 02:07:05.460"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230203 02:07:05.461" level="INFO">{"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":0},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-ygxtw","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":0,"creationTime":1675390001388,"modificationTime":1675390001388,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}],"volumeName":"vol-iedsd","storageType":"DISK","versioning":false,"usedBytes":null,"encryptionInfo":null,"replicationConfigInfo":null,"sourceVolume":null,"sourceBucket":null,"bucketLayout":"LEGACY","owner":"hadoop"},"status":"OK"}</msg>
<status status="PASS" starttime="20230203 02:07:05.460" endtime="20230203 02:07:05.461"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230203 02:07:05.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230203 02:07:05.461" endtime="20230203 02:07:05.463"/>
</kw>
<status status="PASS" starttime="20230203 02:07:05.411" endtime="20230203 02:07:05.464"/>
</kw>
<msg timestamp="20230203 02:07:05.464" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230203 02:07:05.411" endtime="20230203 02:07:05.465"/>
</kw>
<msg timestamp="20230203 02:07:05.466" level="INFO">${result} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":0},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-ygxtw","quotaInBytes":-1,"quotaInNamespa...</msg>
<status status="PASS" starttime="20230203 02:07:05.410" endtime="20230203 02:07:05.466"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230203 02:07:05.466" endtime="20230203 02:07:05.467"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230203 02:07:05.467" endtime="20230203 02:07:05.468"/>
</kw>
<status status="PASS" starttime="20230203 02:07:05.409" endtime="20230203 02:07:05.468"/>
</kw>
<status status="PASS" starttime="20230203 02:07:05.408" endtime="20230203 02:07:05.468"/>
</kw>
<status status="PASS" starttime="20230203 02:07:05.407" endtime="20230203 02:07:05.468"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230203 02:07:05.406" endtime="20230203 02:07:05.468"/>
</test>
<test id="s1-t11" name="Check Recon Namespace Summary Key" line="131">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/file1</arg>
<arg>KEY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230203 02:07:05.480" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-iedsd/buc-ygxtw/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20230203 02:07:05.517" level="INFO">${rc} = 0</msg>
<msg timestamp="20230203 02:07:05.517" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230203 02:07:05.477" endtime="20230203 02:07:05.517"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230203 02:07:05.518" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230203 02:07:05.517" endtime="20230203 02:07:05.518"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230203 02:07:05.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230203 02:07:05.519" endtime="20230203 02:07:05.519"/>
</kw>
<status status="PASS" starttime="20230203 02:07:05.476" endtime="20230203 02:07:05.522"/>
</kw>
<msg timestamp="20230203 02:07:05.522" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230203 02:07:05.475" endtime="20230203 02:07:05.524"/>
</kw>
<msg timestamp="20230203 02:07:05.525" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230203 02:07:05.475" endtime="20230203 02:07:05.525"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230203 02:07:05.526" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230203 02:07:05.525" endtime="20230203 02:07:05.527"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230203 02:07:05.527" endtime="20230203 02:07:05.528"/>
</kw>
<status status="FAIL" starttime="20230203 02:07:05.474" endtime="20230203 02:07:05.529"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230203 02:07:15.536" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-iedsd/buc-ygxtw/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20230203 02:07:15.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20230203 02:07:15.555" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230203 02:07:15.533" endtime="20230203 02:07:15.555"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230203 02:07:15.557" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230203 02:07:15.556" endtime="20230203 02:07:15.557"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230203 02:07:15.558" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230203 02:07:15.558" endtime="20230203 02:07:15.558"/>
</kw>
<status status="PASS" starttime="20230203 02:07:15.532" endtime="20230203 02:07:15.559"/>
</kw>
<msg timestamp="20230203 02:07:15.559" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230203 02:07:15.532" endtime="20230203 02:07:15.560"/>
</kw>
<msg timestamp="20230203 02:07:15.561" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230203 02:07:15.531" endtime="20230203 02:07:15.561"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230203 02:07:15.562" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230203 02:07:15.561" endtime="20230203 02:07:15.562"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230203 02:07:15.563" endtime="20230203 02:07:15.563"/>
</kw>
<status status="FAIL" starttime="20230203 02:07:15.530" endtime="20230203 02:07:15.564"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230203 02:07:25.571" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-iedsd/buc-ygxtw/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20230203 02:07:25.591" level="INFO">${rc} = 0</msg>
<msg timestamp="20230203 02:07:25.591" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230203 02:07:25.568" endtime="20230203 02:07:25.591"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230203 02:07:25.593" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230203 02:07:25.592" endtime="20230203 02:07:25.593"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230203 02:07:25.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230203 02:07:25.593" endtime="20230203 02:07:25.594"/>
</kw>
<status status="PASS" starttime="20230203 02:07:25.567" endtime="20230203 02:07:25.595"/>
</kw>
<msg timestamp="20230203 02:07:25.595" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230203 02:07:25.567" endtime="20230203 02:07:25.596"/>
</kw>
<msg timestamp="20230203 02:07:25.597" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230203 02:07:25.566" endtime="20230203 02:07:25.597"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230203 02:07:25.599" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230203 02:07:25.598" endtime="20230203 02:07:25.599"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230203 02:07:25.600" endtime="20230203 02:07:25.600"/>
</kw>
<status status="FAIL" starttime="20230203 02:07:25.565" endtime="20230203 02:07:25.601"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230203 02:07:35.608" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-iedsd/buc-ygxtw/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20230203 02:07:35.626" level="INFO">${rc} = 0</msg>
<msg timestamp="20230203 02:07:35.627" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230203 02:07:35.605" endtime="20230203 02:07:35.627"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230203 02:07:35.628" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230203 02:07:35.627" endtime="20230203 02:07:35.628"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230203 02:07:35.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230203 02:07:35.629" endtime="20230203 02:07:35.630"/>
</kw>
<status status="PASS" starttime="20230203 02:07:35.604" endtime="20230203 02:07:35.630"/>
</kw>
<msg timestamp="20230203 02:07:35.631" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230203 02:07:35.604" endtime="20230203 02:07:35.632"/>
</kw>
<msg timestamp="20230203 02:07:35.632" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230203 02:07:35.603" endtime="20230203 02:07:35.632"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230203 02:07:35.634" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230203 02:07:35.632" endtime="20230203 02:07:35.634"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230203 02:07:35.635" endtime="20230203 02:07:35.635"/>
</kw>
<status status="FAIL" starttime="20230203 02:07:35.602" endtime="20230203 02:07:35.636"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230203 02:07:45.643" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-iedsd/buc-ygxtw/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20230203 02:07:45.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20230203 02:07:45.663" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230203 02:07:45.640" endtime="20230203 02:07:45.663"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230203 02:07:45.664" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230203 02:07:45.663" endtime="20230203 02:07:45.664"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230203 02:07:45.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230203 02:07:45.665" endtime="20230203 02:07:45.665"/>
</kw>
<status status="PASS" starttime="20230203 02:07:45.639" endtime="20230203 02:07:45.666"/>
</kw>
<msg timestamp="20230203 02:07:45.666" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230203 02:07:45.639" endtime="20230203 02:07:45.667"/>
</kw>
<msg timestamp="20230203 02:07:45.667" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230203 02:07:45.638" endtime="20230203 02:07:45.667"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230203 02:07:45.669" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230203 02:07:45.667" endtime="20230203 02:07:45.669"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230203 02:07:45.669" endtime="20230203 02:07:45.669"/>
</kw>
<status status="FAIL" starttime="20230203 02:07:45.636" endtime="20230203 02:07:45.670"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230203 02:07:55.678" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-iedsd/buc-ygxtw/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20230203 02:07:55.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20230203 02:07:55.755" level="INFO">${output} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":false,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespac...</msg>
<status status="PASS" starttime="20230203 02:07:55.675" endtime="20230203 02:07:55.755"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230203 02:07:55.757" level="INFO">{"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":false,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":1675390009024,"modificationTime":1675390013925,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}],"volumeName":"vol-iedsd","bucketName":"buc-ygxtw","keyName":"file1","dataSize":3879,"keyLocationVersions":[{"version":0,"locationList":[{"blockID":{"containerBlockID":{"containerID":1,"localID":111677748019200001},"blockCommitSequenceId":4,"containerID":1,"localID":111677748019200001},"length":3879,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"blockCommitSequenceId":4,"containerID":1,"localID":111677748019200001}],"multipartKey":false,"blocksLatestVersionOnly":[{"blockID":{"containerBlockID":{"containerID":1,"localID":111677748019200001},"blockCommitSequenceId":4,"containerID":1,"localID":111677748019200001},"length":3879,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"blockCommitSequenceId":4,"containerID":1,"localID":111677748019200001}],"locationLists":[[{"blockID":{"containerBlockID":{"containerID":1,"localID":111677748019200001},"blockCommitSequenceId":4,"containerID":1,"localID":111677748019200001},"length":3879,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"blockCommitSequenceId":4,"containerID":1,"localID":111677748019200001}]],"locationListCount":1}],"replicationConfig":{"replicationFactor":"THREE","requiredNodes":3,"replicationType":"RATIS"},"encInfo":null},"status":"OK"}</msg>
<status status="PASS" starttime="20230203 02:07:55.756" endtime="20230203 02:07:55.758"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230203 02:07:55.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230203 02:07:55.758" endtime="20230203 02:07:55.759"/>
</kw>
<status status="PASS" starttime="20230203 02:07:55.674" endtime="20230203 02:07:55.759"/>
</kw>
<msg timestamp="20230203 02:07:55.759" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230203 02:07:55.674" endtime="20230203 02:07:55.760"/>
</kw>
<msg timestamp="20230203 02:07:55.761" level="INFO">${result} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":false,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespac...</msg>
<status status="PASS" starttime="20230203 02:07:55.673" endtime="20230203 02:07:55.761"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230203 02:07:55.761" endtime="20230203 02:07:55.762"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230203 02:07:55.762" endtime="20230203 02:07:55.763"/>
</kw>
<status status="PASS" starttime="20230203 02:07:55.671" endtime="20230203 02:07:55.763"/>
</kw>
<status status="PASS" starttime="20230203 02:07:05.473" endtime="20230203 02:07:55.763"/>
</kw>
<status status="PASS" starttime="20230203 02:07:05.472" endtime="20230203 02:07:55.763"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230203 02:07:05.470" endtime="20230203 02:07:55.764"/>
</test>
<test id="s1-t12" name="Check Recon Namespace Summary Directory" line="134">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'LEGACY'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2/</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2/</arg>
<arg>DIRECTORY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230203 02:07:55.777" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-iedsd/buc-ygxtw/dir1/dir2/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230203 02:07:55.803" level="INFO">${rc} = 0</msg>
<msg timestamp="20230203 02:07:55.803" level="INFO">${output} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<status status="PASS" starttime="20230203 02:07:55.773" endtime="20230203 02:07:55.803"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230203 02:07:55.805" level="INFO">{"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":0,"modificationTime":0,"acls":[]},"status":"OK"}</msg>
<status status="PASS" starttime="20230203 02:07:55.803" endtime="20230203 02:07:55.805"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230203 02:07:55.806" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230203 02:07:55.805" endtime="20230203 02:07:55.806"/>
</kw>
<status status="PASS" starttime="20230203 02:07:55.772" endtime="20230203 02:07:55.806"/>
</kw>
<msg timestamp="20230203 02:07:55.806" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230203 02:07:55.772" endtime="20230203 02:07:55.807"/>
</kw>
<msg timestamp="20230203 02:07:55.808" level="INFO">${result} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<status status="PASS" starttime="20230203 02:07:55.771" endtime="20230203 02:07:55.808"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230203 02:07:55.808" endtime="20230203 02:07:55.808"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230203 02:07:55.809" endtime="20230203 02:07:55.809"/>
</kw>
<status status="PASS" starttime="20230203 02:07:55.770" endtime="20230203 02:07:55.809"/>
</kw>
<status status="PASS" starttime="20230203 02:07:55.769" endtime="20230203 02:07:55.810"/>
</kw>
<status status="PASS" starttime="20230203 02:07:55.768" endtime="20230203 02:07:55.810"/>
</kw>
<status status="PASS" starttime="20230203 02:07:55.767" endtime="20230203 02:07:55.810"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'FILE_SYSTEM_OPTIMIZED'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230203 02:07:55.810" endtime="20230203 02:07:55.811"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230203 02:07:55.766" endtime="20230203 02:07:55.811"/>
</test>
<test id="s1-t13" name="Check Recon Namespace Disk Usage" line="138">
<kw name="Wait For Summary">
<arg>${DISK_USAGE_URL}?path=/${VOLUME}/${BUCKET}&amp;files=true&amp;replica=true</arg>
<arg>\"sizeWithReplica\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230203 02:07:55.820" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/du?path=/vol-iedsd/buc-ygxtw&amp;files=true&amp;replica=true 2&gt;&amp;1'.</msg>
<msg timestamp="20230203 02:07:55.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20230203 02:07:55.839" level="INFO">${output} = {"status":"OK","path":"/vol-iedsd/buc-ygxtw","size":9917,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-iedsd/buc-ygxtw/dir1","size":6038,"sizeWithReplica":-1,"isKey":fals...</msg>
<status status="PASS" starttime="20230203 02:07:55.817" endtime="20230203 02:07:55.839"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230203 02:07:55.842" level="INFO">{"status":"OK","path":"/vol-iedsd/buc-ygxtw","size":9917,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-iedsd/buc-ygxtw/dir1","size":6038,"sizeWithReplica":-1,"isKey":false}],"sizeDirectKey":3879}</msg>
<status status="PASS" starttime="20230203 02:07:55.839" endtime="20230203 02:07:55.842"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230203 02:07:55.843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230203 02:07:55.842" endtime="20230203 02:07:55.845"/>
</kw>
<status status="PASS" starttime="20230203 02:07:55.817" endtime="20230203 02:07:55.845"/>
</kw>
<msg timestamp="20230203 02:07:55.846" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230203 02:07:55.816" endtime="20230203 02:07:55.846"/>
</kw>
<msg timestamp="20230203 02:07:55.847" level="INFO">${result} = {"status":"OK","path":"/vol-iedsd/buc-ygxtw","size":9917,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-iedsd/buc-ygxtw/dir1","size":6038,"sizeWithReplica":-1,"isKey":fals...</msg>
<status status="PASS" starttime="20230203 02:07:55.816" endtime="20230203 02:07:55.847"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230203 02:07:55.847" endtime="20230203 02:07:55.847"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230203 02:07:55.847" endtime="20230203 02:07:55.848"/>
</kw>
<status status="PASS" starttime="20230203 02:07:55.815" endtime="20230203 02:07:55.848"/>
</kw>
<status status="PASS" starttime="20230203 02:07:55.815" endtime="20230203 02:07:55.849"/>
</kw>
<status status="PASS" starttime="20230203 02:07:55.813" endtime="20230203 02:07:55.849"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230203 02:07:55.812" endtime="20230203 02:07:55.849"/>
</test>
<test id="s1-t14" name="Check Recon Namespace Volume Quota Usage" line="141">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230203 02:07:55.861" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-iedsd 2&gt;&amp;1'.</msg>
<msg timestamp="20230203 02:07:55.879" level="INFO">${rc} = 0</msg>
<msg timestamp="20230203 02:07:55.879" level="INFO">${output} = {"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20230203 02:07:55.858" endtime="20230203 02:07:55.879"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230203 02:07:55.881" level="INFO">{"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20230203 02:07:55.880" endtime="20230203 02:07:55.881"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230203 02:07:55.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230203 02:07:55.881" endtime="20230203 02:07:55.886"/>
</kw>
<status status="PASS" starttime="20230203 02:07:55.857" endtime="20230203 02:07:55.887"/>
</kw>
<msg timestamp="20230203 02:07:55.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230203 02:07:55.857" endtime="20230203 02:07:55.888"/>
</kw>
<msg timestamp="20230203 02:07:55.888" level="INFO">${result} = {"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20230203 02:07:55.856" endtime="20230203 02:07:55.888"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230203 02:07:55.888" endtime="20230203 02:07:55.889"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230203 02:07:55.889" endtime="20230203 02:07:55.890"/>
</kw>
<status status="PASS" starttime="20230203 02:07:55.855" endtime="20230203 02:07:55.890"/>
</kw>
<status status="PASS" starttime="20230203 02:07:55.854" endtime="20230203 02:07:55.890"/>
</kw>
<status status="PASS" starttime="20230203 02:07:55.853" endtime="20230203 02:07:55.890"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230203 02:07:55.852" endtime="20230203 02:07:55.892"/>
</test>
<test id="s1-t15" name="Check Recon Namespace Bucket Quota Usage" line="144">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230203 02:07:55.904" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-iedsd/buc-ygxtw 2&gt;&amp;1'.</msg>
<msg timestamp="20230203 02:07:55.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20230203 02:07:55.925" level="INFO">${output} = {"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20230203 02:07:55.900" endtime="20230203 02:07:55.925"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230203 02:07:55.928" level="INFO">{"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20230203 02:07:55.927" endtime="20230203 02:07:55.928"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230203 02:07:55.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230203 02:07:55.928" endtime="20230203 02:07:55.929"/>
</kw>
<status status="PASS" starttime="20230203 02:07:55.899" endtime="20230203 02:07:55.930"/>
</kw>
<msg timestamp="20230203 02:07:55.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230203 02:07:55.898" endtime="20230203 02:07:55.931"/>
</kw>
<msg timestamp="20230203 02:07:55.931" level="INFO">${result} = {"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20230203 02:07:55.898" endtime="20230203 02:07:55.932"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230203 02:07:55.932" endtime="20230203 02:07:55.932"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230203 02:07:55.933" endtime="20230203 02:07:55.933"/>
</kw>
<status status="PASS" starttime="20230203 02:07:55.897" endtime="20230203 02:07:55.934"/>
</kw>
<status status="PASS" starttime="20230203 02:07:55.896" endtime="20230203 02:07:55.934"/>
</kw>
<status status="PASS" starttime="20230203 02:07:55.895" endtime="20230203 02:07:55.934"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230203 02:07:55.894" endtime="20230203 02:07:55.934"/>
</test>
<test id="s1-t16" name="Check Recon Namespace File Size Distribution Root" line="147">
<kw name="Wait For Summary">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<arg>\"dist\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230203 02:07:55.948" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230203 02:07:55.966" level="INFO">${rc} = 0</msg>
<msg timestamp="20230203 02:07:55.967" level="INFO">${output} = {"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20230203 02:07:55.945" endtime="20230203 02:07:55.967"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230203 02:07:55.968" level="INFO">{"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20230203 02:07:55.967" endtime="20230203 02:07:55.968"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230203 02:07:55.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230203 02:07:55.969" endtime="20230203 02:07:55.969"/>
</kw>
<status status="PASS" starttime="20230203 02:07:55.942" endtime="20230203 02:07:55.970"/>
</kw>
<msg timestamp="20230203 02:07:55.970" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230203 02:07:55.942" endtime="20230203 02:07:55.971"/>
</kw>
<msg timestamp="20230203 02:07:55.971" level="INFO">${result} = {"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20230203 02:07:55.941" endtime="20230203 02:07:55.972"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230203 02:07:55.972" endtime="20230203 02:07:55.973"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230203 02:07:55.973" endtime="20230203 02:07:55.973"/>
</kw>
<status status="PASS" starttime="20230203 02:07:55.940" endtime="20230203 02:07:55.974"/>
</kw>
<status status="PASS" starttime="20230203 02:07:55.939" endtime="20230203 02:07:55.974"/>
</kw>
<status status="PASS" starttime="20230203 02:07:55.938" endtime="20230203 02:07:55.974"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230203 02:07:55.936" endtime="20230203 02:07:55.974"/>
</test>
<doc>Smoke test for Recon Namespace Summary Endpoint for LEGACY buckets.</doc>
<status status="PASS" starttime="20230203 02:06:26.462" endtime="20230203 02:07:55.977"/>
</suite>
<statistics>
<total>
<stat pass="16" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="16" fail="0" skip="0" id="s1" name="ozone-legacy-bucket">ozone-legacy-bucket</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
