<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.0.2 (Python 3.8.10 on linux)" generated="20230320 06:38:37.592" rpa="false" schemaversion="3">
<suite id="s1" name="ozone-topology">
<suite id="s1-s1" name="Cli" source="/opt/hadoop/smoketest/topology/cli.robot">
<test id="s1-s1-t1" name="Run printTopology" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:34:11.072" level="INFO">Running command 'ozone admin printTopology 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:34:16.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:34:16.744" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.9(ozone-topolog...</msg>
<status status="PASS" starttime="20230320 06:34:11.066" endtime="20230320 06:34:16.744"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:34:16.746" level="INFO">State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1</msg>
<status status="PASS" starttime="20230320 06:34:16.745" endtime="20230320 06:34:16.746"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:34:16.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:34:16.747" endtime="20230320 06:34:16.748"/>
</kw>
<status status="PASS" starttime="20230320 06:34:11.065" endtime="20230320 06:34:16.748"/>
</kw>
<msg timestamp="20230320 06:34:16.748" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:34:11.065" endtime="20230320 06:34:16.750"/>
</kw>
<msg timestamp="20230320 06:34:16.750" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.9(ozone-topolog...</msg>
<status status="PASS" starttime="20230320 06:34:11.064" endtime="20230320 06:34:16.750"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:34:16.751" endtime="20230320 06:34:16.752"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230320 06:34:11.063" endtime="20230320 06:34:16.752"/>
</test>
<test id="s1-s1-t2" name="Run printTopology -o" line="30">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology -o</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:34:16.759" level="INFO">Running command 'ozone admin printTopology -o 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:34:22.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:34:22.877" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_data...</msg>
<status status="PASS" starttime="20230320 06:34:16.756" endtime="20230320 06:34:22.877"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:34:22.878" level="INFO">State = HEALTHY
Location: /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
Location: /rack2
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net) IN_SERVICE
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net) IN_SERVICE
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE</msg>
<status status="PASS" starttime="20230320 06:34:22.877" endtime="20230320 06:34:22.878"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:34:22.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:34:22.878" endtime="20230320 06:34:22.879"/>
</kw>
<status status="PASS" starttime="20230320 06:34:16.755" endtime="20230320 06:34:22.880"/>
</kw>
<msg timestamp="20230320 06:34:22.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:34:16.755" endtime="20230320 06:34:22.880"/>
</kw>
<msg timestamp="20230320 06:34:22.881" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_data...</msg>
<status status="PASS" starttime="20230320 06:34:16.754" endtime="20230320 06:34:22.881"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Location: /rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:34:22.881" endtime="20230320 06:34:22.881"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:34:22.882" endtime="20230320 06:34:22.882"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230320 06:34:16.754" endtime="20230320 06:34:22.882"/>
</test>
<test id="s1-s1-t3" name="Run printTopology --operational-state IN_SERVICE" line="34">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --operational-state IN_SERVICE</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:34:22.892" level="INFO">Running command 'ozone admin printTopology --operational-state IN_SERVICE 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:34:28.870" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:34:28.870" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.9(ozone-topolog...</msg>
<status status="PASS" starttime="20230320 06:34:22.889" endtime="20230320 06:34:28.870"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:34:28.872" level="INFO">State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1</msg>
<status status="PASS" starttime="20230320 06:34:28.871" endtime="20230320 06:34:28.872"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:34:28.873" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:34:28.872" endtime="20230320 06:34:28.873"/>
</kw>
<status status="PASS" starttime="20230320 06:34:22.888" endtime="20230320 06:34:28.874"/>
</kw>
<msg timestamp="20230320 06:34:28.874" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:34:22.887" endtime="20230320 06:34:28.875"/>
</kw>
<msg timestamp="20230320 06:34:28.875" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.9(ozone-topolog...</msg>
<status status="PASS" starttime="20230320 06:34:22.886" endtime="20230320 06:34:28.875"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:34:28.875" endtime="20230320 06:34:28.876"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230320 06:34:22.884" endtime="20230320 06:34:28.876"/>
</test>
<test id="s1-s1-t4" name="Run printTopology --node-state HEALTHY" line="37">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --node-state HEALTHY</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:34:28.888" level="INFO">Running command 'ozone admin printTopology --node-state HEALTHY 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:34:35.569" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:34:35.569" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.9(ozone-topolog...</msg>
<status status="PASS" starttime="20230320 06:34:28.881" endtime="20230320 06:34:35.569"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:34:35.571" level="INFO">State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1</msg>
<status status="PASS" starttime="20230320 06:34:35.570" endtime="20230320 06:34:35.572"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:34:35.573" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:34:35.572" endtime="20230320 06:34:35.573"/>
</kw>
<status status="PASS" starttime="20230320 06:34:28.879" endtime="20230320 06:34:35.574"/>
</kw>
<msg timestamp="20230320 06:34:35.574" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:34:28.879" endtime="20230320 06:34:35.575"/>
</kw>
<msg timestamp="20230320 06:34:35.576" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.9(ozone-topolog...</msg>
<status status="PASS" starttime="20230320 06:34:28.878" endtime="20230320 06:34:35.576"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:34:35.576" endtime="20230320 06:34:35.577"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230320 06:34:28.877" endtime="20230320 06:34:35.578"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230320 06:34:10.962" endtime="20230320 06:34:35.581"/>
</suite>
<suite id="s1-s2" name="Recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s2-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s2-s1-t1" name="Check if Recon picks up OM data" line="61">
<kw name="Execute" library="os">
<arg>ozone sh volume create recon</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:34:43.331" level="INFO">Running command 'ozone sh volume create recon 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:34:49.562" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:34:49.562" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230320 06:34:43.326" endtime="20230320 06:34:49.562"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:34:49.563" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230320 06:34:49.562" endtime="20230320 06:34:49.563"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:34:49.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:34:49.563" endtime="20230320 06:34:49.564"/>
</kw>
<status status="PASS" starttime="20230320 06:34:43.325" endtime="20230320 06:34:49.565"/>
</kw>
<msg timestamp="20230320 06:34:49.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:34:43.325" endtime="20230320 06:34:49.566"/>
</kw>
<status status="PASS" starttime="20230320 06:34:43.324" endtime="20230320 06:34:49.567"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create recon/api --layout=LEGACY</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:34:49.573" level="INFO">Running command 'ozone sh bucket create recon/api --layout=LEGACY 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:34:55.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:34:55.461" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230320 06:34:49.569" endtime="20230320 06:34:55.461"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:34:55.463" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230320 06:34:55.462" endtime="20230320 06:34:55.463"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:34:55.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:34:55.463" endtime="20230320 06:34:55.464"/>
</kw>
<status status="PASS" starttime="20230320 06:34:49.568" endtime="20230320 06:34:55.465"/>
</kw>
<msg timestamp="20230320 06:34:55.465" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:34:49.568" endtime="20230320 06:34:55.465"/>
</kw>
<status status="PASS" starttime="20230320 06:34:49.567" endtime="20230320 06:34:55.465"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>n=10</arg>
<arg>args=-s 1025 -v recon -b api</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:34:55.472" level="INFO">Running command 'ozone freon ockg  -t 1 -n10 -p ockg -s 1025 -v recon -b api 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:35:11.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:35:11.551" level="INFO">${output} = 2023-03-20 06:34:59,087 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-03-20 06:34:59,370 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230320 06:34:55.469" endtime="20230320 06:35:11.551"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:35:11.553" level="INFO">2023-03-20 06:34:59,087 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-03-20 06:34:59,370 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-03-20 06:34:59,370 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-03-20 06:34:59,721 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg and number-of-tests 10
2023-03-20 06:34:59,903 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-03-20 06:35:00,909 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-03-20 06:35:01,910 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-03-20 06:35:02,911 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-03-20 06:35:03,099 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-03-20 06:35:03,562 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-03-20 06:35:03,912 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-03-20 06:35:04,913 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-03-20 06:35:05,913 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-03-20 06:35:06,914 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-03-20 06:35:07,915 [Thread-5] INFO freon.ProgressBar: Progress: 10.00 % (1 out of 10)
2023-03-20 06:35:08,918 [Thread-5] INFO freon.ProgressBar: Progress: 30.00 % (3 out of 10)
2023-03-20 06:35:09,921 [Thread-5] INFO freon.ProgressBar: Progress: 60.00 % (6 out of 10)
2023-03-20 06:35:10,921 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2023-03-20 06:35:11,187 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=10, min=162.244563, max=6031.28721, mean=850.3254666852774, stddev=1706.3404940903038, median=204.131966, p75=530.680411, p95=6031.28721, p98=6031.28721, p99=6031.28721, p999=6031.28721, mean_rate=1.0699463038534758, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-03-20 06:35:11,188 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 11
2023-03-20 06:35:11,189 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-03-20 06:35:11,189 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20230320 06:35:11.552" endtime="20230320 06:35:11.554"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:35:11.555" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:35:11.554" endtime="20230320 06:35:11.555"/>
</kw>
<status status="PASS" starttime="20230320 06:34:55.468" endtime="20230320 06:35:11.556"/>
</kw>
<msg timestamp="20230320 06:35:11.556" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:34:55.467" endtime="20230320 06:35:11.557"/>
</kw>
<msg timestamp="20230320 06:35:11.557" level="INFO">${result} = 2023-03-20 06:34:59,087 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-03-20 06:34:59,370 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230320 06:34:55.467" endtime="20230320 06:35:11.557"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:35:11.558" endtime="20230320 06:35:11.558"/>
</kw>
<status status="PASS" starttime="20230320 06:34:55.466" endtime="20230320 06:35:11.559"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230320 06:35:11.560" endtime="20230320 06:35:11.560"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:35:11.565" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:35:12.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:35:12.038" level="INFO">${output} = {"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":0},{"ContainerID":2,"NumberOfKeys":0},{"ContainerID":3,"NumberOfKeys":0},{"ContainerID":4,"NumberOfKeys":0}]}}</msg>
<status status="PASS" starttime="20230320 06:35:11.562" endtime="20230320 06:35:12.038"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:35:12.040" level="INFO">{"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":0},{"ContainerID":2,"NumberOfKeys":0},{"ContainerID":3,"NumberOfKeys":0},{"ContainerID":4,"NumberOfKeys":0}]}}</msg>
<status status="PASS" starttime="20230320 06:35:12.039" endtime="20230320 06:35:12.040"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:35:12.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:35:12.041" endtime="20230320 06:35:12.042"/>
</kw>
<status status="PASS" starttime="20230320 06:35:11.561" endtime="20230320 06:35:12.042"/>
</kw>
<msg timestamp="20230320 06:35:12.043" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:35:11.561" endtime="20230320 06:35:12.044"/>
</kw>
<msg timestamp="20230320 06:35:12.044" level="INFO">${result} = {"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":0},{"ContainerID":2,"NumberOfKeys":0},{"ContainerID":3,"NumberOfKeys":0},{"ContainerID":4,"NumberOfKeys":0}]}}</msg>
<status status="PASS" starttime="20230320 06:35:11.560" endtime="20230320 06:35:12.045"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:35:12.045" endtime="20230320 06:35:12.046"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:35:12.057" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:35:12.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:35:12.121" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230320 06:35:12.051" endtime="20230320 06:35:12.123"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:35:12.125" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230320 06:35:12.124" endtime="20230320 06:35:12.126"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:35:12.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:35:12.126" endtime="20230320 06:35:12.129"/>
</kw>
<status status="PASS" starttime="20230320 06:35:12.047" endtime="20230320 06:35:12.130"/>
</kw>
<msg timestamp="20230320 06:35:12.130" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:35:12.047" endtime="20230320 06:35:12.133"/>
</kw>
<msg timestamp="20230320 06:35:12.133" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230320 06:35:12.046" endtime="20230320 06:35:12.133"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230320 06:35:12.139" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20230320 06:35:12.137" endtime="20230320 06:35:12.139"/>
</kw>
<status status="FAIL" starttime="20230320 06:35:11.559" endtime="20230320 06:35:12.142"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230320 06:35:22.144" endtime="20230320 06:35:22.145"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:35:22.151" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:35:22.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:35:22.172" level="INFO">${output} = {"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":0},{"ContainerID":2,"NumberOfKeys":0},{"ContainerID":3,"NumberOfKeys":0},{"ContainerID":4,"NumberOfKeys":0}]}}</msg>
<status status="PASS" starttime="20230320 06:35:22.148" endtime="20230320 06:35:22.172"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:35:22.174" level="INFO">{"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":0},{"ContainerID":2,"NumberOfKeys":0},{"ContainerID":3,"NumberOfKeys":0},{"ContainerID":4,"NumberOfKeys":0}]}}</msg>
<status status="PASS" starttime="20230320 06:35:22.173" endtime="20230320 06:35:22.174"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:35:22.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:35:22.174" endtime="20230320 06:35:22.175"/>
</kw>
<status status="PASS" starttime="20230320 06:35:22.147" endtime="20230320 06:35:22.176"/>
</kw>
<msg timestamp="20230320 06:35:22.176" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:35:22.146" endtime="20230320 06:35:22.177"/>
</kw>
<msg timestamp="20230320 06:35:22.177" level="INFO">${result} = {"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":0},{"ContainerID":2,"NumberOfKeys":0},{"ContainerID":3,"NumberOfKeys":0},{"ContainerID":4,"NumberOfKeys":0}]}}</msg>
<status status="PASS" starttime="20230320 06:35:22.145" endtime="20230320 06:35:22.177"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:35:22.177" endtime="20230320 06:35:22.178"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:35:22.183" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:35:22.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:35:22.206" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230320 06:35:22.180" endtime="20230320 06:35:22.206"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:35:22.208" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230320 06:35:22.207" endtime="20230320 06:35:22.208"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:35:22.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:35:22.209" endtime="20230320 06:35:22.210"/>
</kw>
<status status="PASS" starttime="20230320 06:35:22.179" endtime="20230320 06:35:22.210"/>
</kw>
<msg timestamp="20230320 06:35:22.210" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:35:22.179" endtime="20230320 06:35:22.211"/>
</kw>
<msg timestamp="20230320 06:35:22.212" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230320 06:35:22.178" endtime="20230320 06:35:22.212"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230320 06:35:22.213" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20230320 06:35:22.212" endtime="20230320 06:35:22.213"/>
</kw>
<status status="FAIL" starttime="20230320 06:35:22.143" endtime="20230320 06:35:22.215"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230320 06:35:32.216" endtime="20230320 06:35:32.217"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:35:32.224" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:35:32.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:35:32.245" level="INFO">${output} = {"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":0},{"ContainerID":2,"NumberOfKeys":0},{"ContainerID":3,"NumberOfKeys":0},{"ContainerID":4,"NumberOfKeys":0}]}}</msg>
<status status="PASS" starttime="20230320 06:35:32.220" endtime="20230320 06:35:32.245"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:35:32.247" level="INFO">{"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":0},{"ContainerID":2,"NumberOfKeys":0},{"ContainerID":3,"NumberOfKeys":0},{"ContainerID":4,"NumberOfKeys":0}]}}</msg>
<status status="PASS" starttime="20230320 06:35:32.246" endtime="20230320 06:35:32.247"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:35:32.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:35:32.247" endtime="20230320 06:35:32.248"/>
</kw>
<status status="PASS" starttime="20230320 06:35:32.219" endtime="20230320 06:35:32.249"/>
</kw>
<msg timestamp="20230320 06:35:32.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:35:32.218" endtime="20230320 06:35:32.251"/>
</kw>
<msg timestamp="20230320 06:35:32.252" level="INFO">${result} = {"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":0},{"ContainerID":2,"NumberOfKeys":0},{"ContainerID":3,"NumberOfKeys":0},{"ContainerID":4,"NumberOfKeys":0}]}}</msg>
<status status="PASS" starttime="20230320 06:35:32.217" endtime="20230320 06:35:32.252"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:35:32.252" endtime="20230320 06:35:32.253"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:35:32.258" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:35:32.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:35:32.279" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20230320 06:35:32.255" endtime="20230320 06:35:32.279"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:35:32.281" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20230320 06:35:32.280" endtime="20230320 06:35:32.281"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:35:32.282" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:35:32.281" endtime="20230320 06:35:32.282"/>
</kw>
<status status="PASS" starttime="20230320 06:35:32.254" endtime="20230320 06:35:32.283"/>
</kw>
<msg timestamp="20230320 06:35:32.283" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:35:32.254" endtime="20230320 06:35:32.284"/>
</kw>
<msg timestamp="20230320 06:35:32.284" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20230320 06:35:32.253" endtime="20230320 06:35:32.284"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:35:32.284" endtime="20230320 06:35:32.286"/>
</kw>
<status status="PASS" starttime="20230320 06:35:32.215" endtime="20230320 06:35:32.286"/>
</kw>
<status status="PASS" starttime="20230320 06:35:11.559" endtime="20230320 06:35:32.286"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230320 06:34:43.322" endtime="20230320 06:35:32.287"/>
</test>
<test id="s1-s2-s1-t2" name="Check if Recon picks up DN heartbeats" line="71">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/datanodes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:35:32.295" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:35:32.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:35:32.365" level="INFO">${output} = {"totalCount":6,"datanodes":[{"uuid":"ed6c9759-3f62-4250-9956-4fc35458bc5a","hostname":"ozone-topology_datanode_4_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"stor...</msg>
<status status="PASS" starttime="20230320 06:35:32.292" endtime="20230320 06:35:32.366"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:35:32.367" level="INFO">{"totalCount":6,"datanodes":[{"uuid":"ed6c9759-3f62-4250-9956-4fc35458bc5a","hostname":"ozone-topology_datanode_4_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":14336,"remaining":23722692608},"pipelines":[{"pipelineID":"3176b8e4-42d9-48a8-9ecc-f9e009cd9673","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"acb78bc7-c3b8-4cbb-a051-396da91c6d41","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"a61dcace-d8e8-4d54-8e15-925eaf0dc1d0","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"}],"containers":2,"openContainers":3,"leaderCount":2,"version":"1.4.0-SNAPSHOT","setupTime":1679293886409,"revision":"8202b4184e57dede01f21bc5be5563ae85d1dc5b","buildDate":"2023-03-20T06:05Z","layoutVersion":4,"networkLocation":"/rack2"},{"uuid":"a647750f-1eb8-4a70-9d32-742de5ead351","hostname":"ozone-topology_datanode_6_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":14336,"remaining":23722713088},"pipelines":[{"pipelineID":"3176b8e4-42d9-48a8-9ecc-f9e009cd9673","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"f88ea7d3-99b5-4755-b7da-101d3d9fb5b4","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"},{"pipelineID":"8a9bd57b-4e0f-4923-853c-e49f78be9043","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":1,"version":"1.4.0-SNAPSHOT","setupTime":1679293886175,"revision":"8202b4184e57dede01f21bc5be5563ae85d1dc5b","buildDate":"2023-03-20T06:05Z","layoutVersion":4,"networkLocation":"/rack2"},{"uuid":"9af04660-6a80-4be8-a267-f75591b926f4","hostname":"ozone-topology_datanode_5_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":4096,"remaining":23722713088},"pipelines":[{"pipelineID":"352b78f4-0d1d-40c1-936e-256bf26a8acc","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"},{"pipelineID":"a61dcace-d8e8-4d54-8e15-925eaf0dc1d0","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"e9679df0-e0f4-4ee4-ae41-bb3c4819f569","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"}],"containers":2,"openContainers":3,"leaderCount":1,"version":"1.4.0-SNAPSHOT","setupTime":1679293886089,"revision":"8202b4184e57dede01f21bc5be5563ae85d1dc5b","buildDate":"2023-03-20T06:05Z","layoutVersion":4,"networkLocation":"/rack2"},{"uuid":"fb4e5c62-fbeb-48a1-ac5f-a6850eabcacd","hostname":"ozone-topology_datanode_2_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":14336,"remaining":23722713088},"pipelines":[{"pipelineID":"3176b8e4-42d9-48a8-9ecc-f9e009cd9673","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"f88ea7d3-99b5-4755-b7da-101d3d9fb5b4","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"},{"pipelineID":"e2f5ead6-ab36-4430-9b70-6db669a85825","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.4.0-SNAPSHOT","setupTime":1679293883874,"revision":"8202b4184e57dede01f21bc5be5563ae85d1dc5b","buildDate":"2023-03-20T06:05Z","layoutVersion":4,"networkLocation":"/rack1"},{"uuid":"b40da148-61a6-423b-9e29-a60aa618718f","hostname":"ozone-topology_datanode_3_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":4096,"remaining":23722811392},"pipelines":[{"pipelineID":"352b78f4-0d1d-40c1-936e-256bf26a8acc","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"},{"pipelineID":"a61dcace-d8e8-4d54-8e15-925eaf0dc1d0","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"1a55af7e-b5c4-42c8-85ba-4a4e7a680e42","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"}],"containers":2,"openContainers":3,"leaderCount":2,"version":"1.4.0-SNAPSHOT","setupTime":1679293882494,"revision":"8202b4184e57dede01f21bc5be5563ae85d1dc5b","buildDate":"2023-03-20T06:05Z","layoutVersion":4,"networkLocation":"/rack1"},{"uuid":"27335022-a5cc-4a70-8a61-4a7492a70b21","hostname":"ozone-topology_datanode_1_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":4096,"remaining":23722713088},"pipelines":[{"pipelineID":"352b78f4-0d1d-40c1-936e-256bf26a8acc","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"},{"pipelineID":"e2e9e354-bcbb-492c-8295-2a43ccdeb032","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"},{"pipelineID":"f88ea7d3-99b5-4755-b7da-101d3d9fb5b4","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.4.0-SNAPSHOT","setupTime":1679293886014,"revision":"8202b4184e57dede01f21bc5be5563ae85d1dc5b","buildDate":"2023-03-20T06:05Z","layoutVersion":4,"networkLocation":"/rack1"}]}</msg>
<status status="PASS" starttime="20230320 06:35:32.366" endtime="20230320 06:35:32.367"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:35:32.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:35:32.368" endtime="20230320 06:35:32.377"/>
</kw>
<status status="PASS" starttime="20230320 06:35:32.291" endtime="20230320 06:35:32.378"/>
</kw>
<msg timestamp="20230320 06:35:32.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:35:32.290" endtime="20230320 06:35:32.385"/>
</kw>
<msg timestamp="20230320 06:35:32.385" level="INFO">${result} = {"totalCount":6,"datanodes":[{"uuid":"ed6c9759-3f62-4250-9956-4fc35458bc5a","hostname":"ozone-topology_datanode_4_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"stor...</msg>
<status status="PASS" starttime="20230320 06:35:32.289" endtime="20230320 06:35:32.385"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanodes</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:35:32.386" endtime="20230320 06:35:32.392"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:35:32.394" endtime="20230320 06:35:32.395"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:35:32.395" endtime="20230320 06:35:32.395"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:35:32.396" endtime="20230320 06:35:32.399"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/pipelines</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:35:32.408" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:35:32.521" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:35:32.521" level="INFO">${output} = {"totalCount":10,"pipelines":[{"pipelineId":"352b78f4-0d1d-40c1-936e-256bf26a8acc","status":"OPEN","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"...</msg>
<status status="PASS" starttime="20230320 06:35:32.404" endtime="20230320 06:35:32.521"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:35:32.523" level="INFO">{"totalCount":10,"pipelines":[{"pipelineId":"352b78f4-0d1d-40c1-936e-256bf26a8acc","status":"OPEN","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"9af04660-6a80-4be8-a267-f75591b926f4","uuidString":"9af04660-6a80-4be8-a267-f75591b926f4","ipAddress":"10.5.0.8","hostName":"ozone-topology_datanode_5_1.ozone-topology_net","ports":[{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":2036783444,"decomissioned":false,"networkName":"9af04660-6a80-4be8-a267-f75591b926f4","networkFullPath":"/rack2/9af04660-6a80-4be8-a267-f75591b926f4","networkLocation":"/rack2","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"b40da148-61a6-423b-9e29-a60aa618718f","uuidString":"b40da148-61a6-423b-9e29-a60aa618718f","ipAddress":"10.5.0.6","hostName":"ozone-topology_datanode_3_1.ozone-topology_net","ports":[{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":1921884397,"decomissioned":false,"networkName":"b40da148-61a6-423b-9e29-a60aa618718f","networkFullPath":"/rack1/b40da148-61a6-423b-9e29-a60aa618718f","networkLocation":"/rack1","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"27335022-a5cc-4a70-8a61-4a7492a70b21","uuidString":"27335022-a5cc-4a70-8a61-4a7492a70b21","ipAddress":"10.5.0.4","hostName":"ozone-topology_datanode_1_1.ozone-topology_net","ports":[{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1478021014,"decomissioned":false,"networkName":"27335022-a5cc-4a70-8a61-4a7492a70b21","networkFullPath":"/rack1/27335022-a5cc-4a70-8a61-4a7492a70b21","networkLocation":"/rack1","numOfLeaves":1}],"lastLeaderElection":0,"duration":174607,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"e2e9e354-bcbb-492c-8295-2a43ccdeb032","status":"OPEN","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"27335022-a5cc-4a70-8a61-4a7492a70b21","uuidString":"27335022-a5cc-4a70-8a61-4a7492a70b21","ipAddress":"10.5.0.4","hostName":"ozone-topology_datanode_1_1.ozone-topology_net","ports":[{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1478021014,"decomissioned":false,"networkName":"27335022-a5cc-4a70-8a61-4a7492a70b21","networkFullPath":"/rack1/27335022-a5cc-4a70-8a61-4a7492a70b21","networkLocation":"/rack1","numOfLeaves":1}],"lastLeaderElection":0,"duration":174553,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"3176b8e4-42d9-48a8-9ecc-f9e009cd9673","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"ed6c9759-3f62-4250-9956-4fc35458bc5a","uuidString":"ed6c9759-3f62-4250-9956-4fc35458bc5a","ipAddress":"10.5.0.7","hostName":"ozone-topology_datanode_4_1.ozone-topology_net","ports":[{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":697299883,"decomissioned":false,"networkName":"ed6c9759-3f62-4250-9956-4fc35458bc5a","networkFullPath":"/rack2/ed6c9759-3f62-4250-9956-4fc35458bc5a","networkLocation":"/rack2","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"fb4e5c62-fbeb-48a1-ac5f-a6850eabcacd","uuidString":"fb4e5c62-fbeb-48a1-ac5f-a6850eabcacd","ipAddress":"10.5.0.5","hostName":"ozone-topology_datanode_2_1.ozone-topology_net","ports":[{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1786457550,"decomissioned":false,"networkName":"fb4e5c62-fbeb-48a1-ac5f-a6850eabcacd","networkFullPath":"/rack1/fb4e5c62-fbeb-48a1-ac5f-a6850eabcacd","networkLocation":"/rack1","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"a647750f-1eb8-4a70-9d32-742de5ead351","uuidString":"a647750f-1eb8-4a70-9d32-742de5ead351","ipAddress":"10.5.0.9","hostName":"ozone-topology_datanode_6_1.ozone-topology_net","ports":[{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1858932784,"decomissioned":false,"networkName":"a647750f-1eb8-4a70-9d32-742de5ead351","networkFullPath":"/rack2/a647750f-1eb8-4a70-9d32-742de5ead351","networkLocation":"/rack2","numOfLeaves":1}],"lastLeaderElection":0,"duration":174914,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"f88ea7d3-99b5-4755-b7da-101d3d9fb5b4","status":"OPEN","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"27335022-a5cc-4a70-8a61-4a7492a70b21","uuidString":"27335022-a5cc-4a70-8a61-4a7492a70b21","ipAddress":"10.5.0.4","hostName":"ozone-topology_datanode_1_1.ozone-topology_net","ports":[{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1478021014,"decomissioned":false,"networkName":"27335022-a5cc-4a70-8a61-4a7492a70b21","networkFullPath":"/rack1/27335022-a5cc-4a70-8a61-4a7492a70b21","networkLocation":"/rack1","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"a647750f-1eb8-4a70-9d32-742de5ead351","uuidString":"a647750f-1eb8-4a70-9d32-742de5ead351","ipAddress":"10.5.0.9","hostName":"ozone-topology_datanode_6_1.ozone-topology_net","ports":[{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1858932784,"decomissioned":false,"networkName":"a647750f-1eb8-4a70-9d32-742de5ead351","networkFullPath":"/rack2/a647750f-1eb8-4a70-9d32-742de5ead351","networkLocation":"/rack2","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"fb4e5c62-fbeb-48a1-ac5f-a6850eabcacd","uuidString":"fb4e5c62-fbeb-48a1-ac5f-a6850eabcacd","ipAddress":"10.5.0.5","hostName":"ozone-topology_datanode_2_1.ozone-topology_net","ports":[{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1786457550,"decomissioned":false,"networkName":"fb4e5c62-fbeb-48a1-ac5f-a6850eabcacd","networkFullPath":"/rack1/fb4e5c62-fbeb-48a1-ac5f-a6850eabcacd","networkLocation":"/rack1","numOfLeaves":1}],"lastLeaderElection":0,"duration":174645,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"acb78bc7-c3b8-4cbb-a051-396da91c6d41","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"ed6c9759-3f62-4250-9956-4fc35458bc5a","uuidString":"ed6c9759-3f62-4250-9956-4fc35458bc5a","ipAddress":"10.5.0.7","hostName":"ozone-topology_datanode_4_1.ozone-topology_net","ports":[{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":697299883,"decomissioned":false,"networkName":"ed6c9759-3f62-4250-9956-4fc35458bc5a","networkFullPath":"/rack2/ed6c9759-3f62-4250-9956-4fc35458bc5a","networkLocation":"/rack2","numOfLeaves":1}],"lastLeaderElection":0,"duration":174837,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"8a9bd57b-4e0f-4923-853c-e49f78be9043","status":"OPEN","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"a647750f-1eb8-4a70-9d32-742de5ead351","uuidString":"a647750f-1eb8-4a70-9d32-742de5ead351","ipAddress":"10.5.0.9","hostName":"ozone-topology_datanode_6_1.ozone-topology_net","ports":[{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1858932784,"decomissioned":false,"networkName":"a647750f-1eb8-4a70-9d32-742de5ead351","networkFullPath":"/rack2/a647750f-1eb8-4a70-9d32-742de5ead351","networkLocation":"/rack2","numOfLeaves":1}],"lastLeaderElection":0,"duration":174676,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"a61dcace-d8e8-4d54-8e15-925eaf0dc1d0","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"9af04660-6a80-4be8-a267-f75591b926f4","uuidString":"9af04660-6a80-4be8-a267-f75591b926f4","ipAddress":"10.5.0.8","hostName":"ozone-topology_datanode_5_1.ozone-topology_net","ports":[{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":2036783444,"decomissioned":false,"networkName":"9af04660-6a80-4be8-a267-f75591b926f4","networkFullPath":"/rack2/9af04660-6a80-4be8-a267-f75591b926f4","networkLocation":"/rack2","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"b40da148-61a6-423b-9e29-a60aa618718f","uuidString":"b40da148-61a6-423b-9e29-a60aa618718f","ipAddress":"10.5.0.6","hostName":"ozone-topology_datanode_3_1.ozone-topology_net","ports":[{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":1921884397,"decomissioned":false,"networkName":"b40da148-61a6-423b-9e29-a60aa618718f","networkFullPath":"/rack1/b40da148-61a6-423b-9e29-a60aa618718f","networkLocation":"/rack1","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"ed6c9759-3f62-4250-9956-4fc35458bc5a","uuidString":"ed6c9759-3f62-4250-9956-4fc35458bc5a","ipAddress":"10.5.0.7","hostName":"ozone-topology_datanode_4_1.ozone-topology_net","ports":[{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":697299883,"decomissioned":false,"networkName":"ed6c9759-3f62-4250-9956-4fc35458bc5a","networkFullPath":"/rack2/ed6c9759-3f62-4250-9956-4fc35458bc5a","networkLocation":"/rack2","numOfLeaves":1}],"lastLeaderElection":0,"duration":174756,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"1a55af7e-b5c4-42c8-85ba-4a4e7a680e42","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"b40da148-61a6-423b-9e29-a60aa618718f","uuidString":"b40da148-61a6-423b-9e29-a60aa618718f","ipAddress":"10.5.0.6","hostName":"ozone-topology_datanode_3_1.ozone-topology_net","ports":[{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":1921884397,"decomissioned":false,"networkName":"b40da148-61a6-423b-9e29-a60aa618718f","networkFullPath":"/rack1/b40da148-61a6-423b-9e29-a60aa618718f","networkLocation":"/rack1","numOfLeaves":1}],"lastLeaderElection":0,"duration":174584,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"e9679df0-e0f4-4ee4-ae41-bb3c4819f569","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"9af04660-6a80-4be8-a267-f75591b926f4","uuidString":"9af04660-6a80-4be8-a267-f75591b926f4","ipAddress":"10.5.0.8","hostName":"ozone-topology_datanode_5_1.ozone-topology_net","ports":[{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":2036783444,"decomissioned":false,"networkName":"9af04660-6a80-4be8-a267-f75591b926f4","networkFullPath":"/rack2/9af04660-6a80-4be8-a267-f75591b926f4","networkLocation":"/rack2","numOfLeaves":1}],"lastLeaderElection":0,"duration":178935,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"e2f5ead6-ab36-4430-9b70-6db669a85825","status":"OPEN","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"fb4e5c62-fbeb-48a1-ac5f-a6850eabcacd","uuidString":"fb4e5c62-fbeb-48a1-ac5f-a6850eabcacd","ipAddress":"10.5.0.5","hostName":"ozone-topology_datanode_2_1.ozone-topology_net","ports":[{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1786457550,"decomissioned":false,"networkName":"fb4e5c62-fbeb-48a1-ac5f-a6850eabcacd","networkFullPath":"/rack1/fb4e5c62-fbeb-48a1-ac5f-a6850eabcacd","networkLocation":"/rack1","numOfLeaves":1}],"lastLeaderElection":0,"duration":174627,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0}]}</msg>
<status status="PASS" starttime="20230320 06:35:32.521" endtime="20230320 06:35:32.523"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:35:32.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:35:32.523" endtime="20230320 06:35:32.525"/>
</kw>
<status status="PASS" starttime="20230320 06:35:32.403" endtime="20230320 06:35:32.525"/>
</kw>
<msg timestamp="20230320 06:35:32.526" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:35:32.402" endtime="20230320 06:35:32.526"/>
</kw>
<msg timestamp="20230320 06:35:32.527" level="INFO">${result} = {"totalCount":10,"pipelines":[{"pipelineId":"352b78f4-0d1d-40c1-936e-256bf26a8acc","status":"OPEN","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"...</msg>
<status status="PASS" starttime="20230320 06:35:32.399" endtime="20230320 06:35:32.527"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>pipelines</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:35:32.527" endtime="20230320 06:35:32.528"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:35:32.528" endtime="20230320 06:35:32.528"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:35:32.530" endtime="20230320 06:35:32.531"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:35:32.531" endtime="20230320 06:35:32.532"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:35:32.533" endtime="20230320 06:35:32.533"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:35:32.533" endtime="20230320 06:35:32.534"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/clusterState</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:35:32.541" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:35:32.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:35:32.610" level="INFO">${output} = {"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":55296,"remaining":142336356352},"containers":4,"missingContainers":0,"openContainers":4,"volumes...</msg>
<status status="PASS" starttime="20230320 06:35:32.537" endtime="20230320 06:35:32.610"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:35:32.611" level="INFO">{"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":55296,"remaining":142336356352},"containers":4,"missingContainers":0,"openContainers":4,"volumes":3,"buckets":2,"keys":11}</msg>
<status status="PASS" starttime="20230320 06:35:32.610" endtime="20230320 06:35:32.611"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:35:32.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:35:32.612" endtime="20230320 06:35:32.613"/>
</kw>
<status status="PASS" starttime="20230320 06:35:32.536" endtime="20230320 06:35:32.613"/>
</kw>
<msg timestamp="20230320 06:35:32.613" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:35:32.536" endtime="20230320 06:35:32.614"/>
</kw>
<msg timestamp="20230320 06:35:32.614" level="INFO">${result} = {"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":55296,"remaining":142336356352},"containers":4,"missingContainers":0,"openContainers":4,"volumes...</msg>
<status status="PASS" starttime="20230320 06:35:32.535" endtime="20230320 06:35:32.614"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"totalDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:35:32.615" endtime="20230320 06:35:32.615"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"healthyDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:35:32.616" endtime="20230320 06:35:32.617"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"pipelines\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:35:32.617" endtime="20230320 06:35:32.617"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:35:32.624" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:35:32.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:35:32.662" level="INFO">${output} = [{"containerId":1,"datanodeUuid":"ed6c9759-3f62-4250-9956-4fc35458bc5a","datanodeHost":"ozone-topology_datanode_4_1.ozone-topology_net","firstSeenTime":1679294027455,"lastSeenTime":1679294027455,"last...</msg>
<status status="PASS" starttime="20230320 06:35:32.620" endtime="20230320 06:35:32.662"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:35:32.665" level="INFO">[{"containerId":1,"datanodeUuid":"ed6c9759-3f62-4250-9956-4fc35458bc5a","datanodeHost":"ozone-topology_datanode_4_1.ozone-topology_net","firstSeenTime":1679294027455,"lastSeenTime":1679294027455,"lastBcsId":0},{"containerId":1,"datanodeUuid":"a647750f-1eb8-4a70-9d32-742de5ead351","datanodeHost":"ozone-topology_datanode_6_1.ozone-topology_net","firstSeenTime":1679294028106,"lastSeenTime":1679294028106,"lastBcsId":0},{"containerId":1,"datanodeUuid":"fb4e5c62-fbeb-48a1-ac5f-a6850eabcacd","datanodeHost":"ozone-topology_datanode_2_1.ozone-topology_net","firstSeenTime":1679294028160,"lastSeenTime":1679294028160,"lastBcsId":0}]</msg>
<status status="PASS" starttime="20230320 06:35:32.664" endtime="20230320 06:35:32.665"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:35:32.666" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:35:32.665" endtime="20230320 06:35:32.666"/>
</kw>
<status status="PASS" starttime="20230320 06:35:32.620" endtime="20230320 06:35:32.667"/>
</kw>
<msg timestamp="20230320 06:35:32.667" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:35:32.619" endtime="20230320 06:35:32.668"/>
</kw>
<msg timestamp="20230320 06:35:32.668" level="INFO">${result} = [{"containerId":1,"datanodeUuid":"ed6c9759-3f62-4250-9956-4fc35458bc5a","datanodeHost":"ozone-topology_datanode_4_1.ozone-topology_net","firstSeenTime":1679294027455,"lastSeenTime":1679294027455,"last...</msg>
<status status="PASS" starttime="20230320 06:35:32.618" endtime="20230320 06:35:32.668"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:35:32.668" endtime="20230320 06:35:32.669"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230320 06:35:32.288" endtime="20230320 06:35:32.669"/>
</test>
<test id="s1-s2-s1-t3" name="Check if Recon Web UI is up" line="94">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230320 06:35:32.672" endtime="20230320 06:35:32.673"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${ENDPOINT_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:35:32.678" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:35:32.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:35:32.707" level="INFO">${output} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20230320 06:35:32.675" endtime="20230320 06:35:32.707"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:35:32.709" level="INFO">&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.7465223f.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.63708a22.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.8b35f006.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.cc783db0.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20230320 06:35:32.708" endtime="20230320 06:35:32.710"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:35:32.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:35:32.710" endtime="20230320 06:35:32.713"/>
</kw>
<status status="PASS" starttime="20230320 06:35:32.674" endtime="20230320 06:35:32.714"/>
</kw>
<msg timestamp="20230320 06:35:32.714" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:35:32.674" endtime="20230320 06:35:32.714"/>
</kw>
<msg timestamp="20230320 06:35:32.715" level="INFO">${result} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20230320 06:35:32.673" endtime="20230320 06:35:32.715"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Ozone Recon</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:35:32.715" endtime="20230320 06:35:32.716"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230320 06:35:32.671" endtime="20230320 06:35:32.717"/>
</test>
<test id="s1-s2-s1-t4" name="Check web UI access" line="99">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:35:32.726" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:35:32.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:35:32.737" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230320 06:35:32.723" endtime="20230320 06:35:32.737"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:35:32.739" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230320 06:35:32.738" endtime="20230320 06:35:32.739"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:35:32.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:35:32.739" endtime="20230320 06:35:32.740"/>
</kw>
<status status="PASS" starttime="20230320 06:35:32.722" endtime="20230320 06:35:32.741"/>
</kw>
<msg timestamp="20230320 06:35:32.741" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:35:32.720" endtime="20230320 06:35:32.742"/>
</kw>
<status status="PASS" starttime="20230320 06:35:32.719" endtime="20230320 06:35:32.743"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:35:32.749" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:35:32.773" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:35:32.773" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230320 06:35:32.746" endtime="20230320 06:35:32.773"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:35:32.775" level="INFO">200</msg>
<status status="PASS" starttime="20230320 06:35:32.774" endtime="20230320 06:35:32.775"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:35:32.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:35:32.775" endtime="20230320 06:35:32.776"/>
</kw>
<status status="PASS" starttime="20230320 06:35:32.745" endtime="20230320 06:35:32.777"/>
</kw>
<msg timestamp="20230320 06:35:32.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:35:32.745" endtime="20230320 06:35:32.777"/>
</kw>
<msg timestamp="20230320 06:35:32.778" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230320 06:35:32.744" endtime="20230320 06:35:32.778"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230320 06:35:32.779" endtime="20230320 06:35:32.779"/>
</kw>
<status status="NOT RUN" starttime="20230320 06:35:32.778" endtime="20230320 06:35:32.779"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:35:32.779" endtime="20230320 06:35:32.780"/>
</kw>
<status status="PASS" starttime="20230320 06:35:32.779" endtime="20230320 06:35:32.780"/>
</branch>
<status status="PASS" starttime="20230320 06:35:32.778" endtime="20230320 06:35:32.780"/>
</if>
<status status="PASS" starttime="20230320 06:35:32.743" endtime="20230320 06:35:32.780"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230320 06:35:32.781" endtime="20230320 06:35:32.782"/>
</kw>
<status status="PASS" starttime="20230320 06:35:32.780" endtime="20230320 06:35:32.782"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:35:32.789" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:35:32.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:35:32.807" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230320 06:35:32.785" endtime="20230320 06:35:32.807"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:35:32.809" level="INFO">200</msg>
<status status="PASS" starttime="20230320 06:35:32.808" endtime="20230320 06:35:32.809"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:35:32.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:35:32.809" endtime="20230320 06:35:32.810"/>
</kw>
<status status="PASS" starttime="20230320 06:35:32.784" endtime="20230320 06:35:32.811"/>
</kw>
<msg timestamp="20230320 06:35:32.811" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:35:32.784" endtime="20230320 06:35:32.812"/>
</kw>
<msg timestamp="20230320 06:35:32.812" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230320 06:35:32.783" endtime="20230320 06:35:32.812"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230320 06:35:32.813" endtime="20230320 06:35:32.814"/>
</kw>
<status status="NOT RUN" starttime="20230320 06:35:32.813" endtime="20230320 06:35:32.814"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:35:32.814" endtime="20230320 06:35:32.815"/>
</kw>
<status status="PASS" starttime="20230320 06:35:32.814" endtime="20230320 06:35:32.815"/>
</branch>
<status status="PASS" starttime="20230320 06:35:32.813" endtime="20230320 06:35:32.815"/>
</if>
<status status="PASS" starttime="20230320 06:35:32.782" endtime="20230320 06:35:32.815"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230320 06:35:32.718" endtime="20230320 06:35:32.816"/>
</test>
<test id="s1-s2-s1-t5" name="Check admin only api access" line="107">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:35:32.825" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:35:32.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:35:32.831" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230320 06:35:32.821" endtime="20230320 06:35:32.831"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:35:32.833" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230320 06:35:32.831" endtime="20230320 06:35:32.833"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:35:32.834" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:35:32.833" endtime="20230320 06:35:32.834"/>
</kw>
<status status="PASS" starttime="20230320 06:35:32.820" endtime="20230320 06:35:32.835"/>
</kw>
<msg timestamp="20230320 06:35:32.835" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:35:32.819" endtime="20230320 06:35:32.847"/>
</kw>
<status status="PASS" starttime="20230320 06:35:32.819" endtime="20230320 06:35:32.847"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:35:32.860" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:35:32.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:35:32.880" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230320 06:35:32.851" endtime="20230320 06:35:32.880"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:35:32.882" level="INFO">200</msg>
<status status="PASS" starttime="20230320 06:35:32.881" endtime="20230320 06:35:32.882"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:35:32.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:35:32.883" endtime="20230320 06:35:32.883"/>
</kw>
<status status="PASS" starttime="20230320 06:35:32.850" endtime="20230320 06:35:32.884"/>
</kw>
<msg timestamp="20230320 06:35:32.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:35:32.850" endtime="20230320 06:35:32.886"/>
</kw>
<msg timestamp="20230320 06:35:32.886" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230320 06:35:32.849" endtime="20230320 06:35:32.886"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230320 06:35:32.888" endtime="20230320 06:35:32.888"/>
</kw>
<status status="NOT RUN" starttime="20230320 06:35:32.887" endtime="20230320 06:35:32.888"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:35:32.888" endtime="20230320 06:35:32.889"/>
</kw>
<status status="PASS" starttime="20230320 06:35:32.888" endtime="20230320 06:35:32.889"/>
</branch>
<status status="PASS" starttime="20230320 06:35:32.886" endtime="20230320 06:35:32.889"/>
</if>
<status status="PASS" starttime="20230320 06:35:32.848" endtime="20230320 06:35:32.889"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230320 06:35:32.891" endtime="20230320 06:35:32.891"/>
</kw>
<status status="PASS" starttime="20230320 06:35:32.889" endtime="20230320 06:35:32.892"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:35:32.911" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:35:32.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:35:32.942" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230320 06:35:32.907" endtime="20230320 06:35:32.942"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:35:32.946" level="INFO">200</msg>
<status status="PASS" starttime="20230320 06:35:32.944" endtime="20230320 06:35:32.946"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:35:32.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:35:32.946" endtime="20230320 06:35:32.947"/>
</kw>
<status status="PASS" starttime="20230320 06:35:32.895" endtime="20230320 06:35:32.948"/>
</kw>
<msg timestamp="20230320 06:35:32.948" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:35:32.895" endtime="20230320 06:35:32.949"/>
</kw>
<msg timestamp="20230320 06:35:32.950" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230320 06:35:32.893" endtime="20230320 06:35:32.950"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230320 06:35:32.950" endtime="20230320 06:35:32.951"/>
</kw>
<status status="NOT RUN" starttime="20230320 06:35:32.950" endtime="20230320 06:35:32.951"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:35:32.951" endtime="20230320 06:35:32.952"/>
</kw>
<status status="PASS" starttime="20230320 06:35:32.951" endtime="20230320 06:35:32.952"/>
</branch>
<status status="PASS" starttime="20230320 06:35:32.950" endtime="20230320 06:35:32.952"/>
</if>
<status status="PASS" starttime="20230320 06:35:32.892" endtime="20230320 06:35:32.952"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230320 06:35:32.953" endtime="20230320 06:35:32.954"/>
</kw>
<status status="PASS" starttime="20230320 06:35:32.952" endtime="20230320 06:35:32.954"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:35:32.962" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:35:32.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:35:32.985" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230320 06:35:32.957" endtime="20230320 06:35:32.985"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:35:32.986" level="INFO">200</msg>
<status status="PASS" starttime="20230320 06:35:32.985" endtime="20230320 06:35:32.986"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:35:32.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:35:32.987" endtime="20230320 06:35:32.988"/>
</kw>
<status status="PASS" starttime="20230320 06:35:32.956" endtime="20230320 06:35:32.988"/>
</kw>
<msg timestamp="20230320 06:35:32.988" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:35:32.956" endtime="20230320 06:35:32.990"/>
</kw>
<msg timestamp="20230320 06:35:32.991" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230320 06:35:32.955" endtime="20230320 06:35:32.991"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230320 06:35:32.992" endtime="20230320 06:35:32.992"/>
</kw>
<status status="NOT RUN" starttime="20230320 06:35:32.992" endtime="20230320 06:35:32.992"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:35:32.992" endtime="20230320 06:35:32.993"/>
</kw>
<status status="PASS" starttime="20230320 06:35:32.992" endtime="20230320 06:35:32.993"/>
</branch>
<status status="PASS" starttime="20230320 06:35:32.991" endtime="20230320 06:35:32.993"/>
</if>
<status status="PASS" starttime="20230320 06:35:32.954" endtime="20230320 06:35:32.994"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230320 06:35:32.995" endtime="20230320 06:35:32.996"/>
</kw>
<status status="PASS" starttime="20230320 06:35:32.994" endtime="20230320 06:35:32.996"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:35:33.004" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:35:33.035" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:35:33.035" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230320 06:35:33.000" endtime="20230320 06:35:33.035"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:35:33.039" level="INFO">200</msg>
<status status="PASS" starttime="20230320 06:35:33.036" endtime="20230320 06:35:33.040"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:35:33.043" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:35:33.042" endtime="20230320 06:35:33.043"/>
</kw>
<status status="PASS" starttime="20230320 06:35:32.999" endtime="20230320 06:35:33.046"/>
</kw>
<msg timestamp="20230320 06:35:33.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:35:32.998" endtime="20230320 06:35:33.049"/>
</kw>
<msg timestamp="20230320 06:35:33.051" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230320 06:35:32.997" endtime="20230320 06:35:33.051"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230320 06:35:33.053" endtime="20230320 06:35:33.056"/>
</kw>
<status status="NOT RUN" starttime="20230320 06:35:33.052" endtime="20230320 06:35:33.056"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:35:33.056" endtime="20230320 06:35:33.060"/>
</kw>
<status status="PASS" starttime="20230320 06:35:33.056" endtime="20230320 06:35:33.060"/>
</branch>
<status status="PASS" starttime="20230320 06:35:33.052" endtime="20230320 06:35:33.066"/>
</if>
<status status="PASS" starttime="20230320 06:35:32.996" endtime="20230320 06:35:33.067"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230320 06:35:32.817" endtime="20230320 06:35:33.067"/>
</test>
<test id="s1-s2-s1-t6" name="Check unhealthy, (admin) api access" line="120">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:35:33.084" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:35:33.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:35:33.090" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230320 06:35:33.080" endtime="20230320 06:35:33.090"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:35:33.092" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230320 06:35:33.091" endtime="20230320 06:35:33.092"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:35:33.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:35:33.092" endtime="20230320 06:35:33.093"/>
</kw>
<status status="PASS" starttime="20230320 06:35:33.079" endtime="20230320 06:35:33.094"/>
</kw>
<msg timestamp="20230320 06:35:33.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:35:33.079" endtime="20230320 06:35:33.094"/>
</kw>
<status status="PASS" starttime="20230320 06:35:33.078" endtime="20230320 06:35:33.095"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:35:33.101" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:35:33.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:35:33.203" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230320 06:35:33.098" endtime="20230320 06:35:33.203"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:35:33.205" level="INFO">200</msg>
<status status="PASS" starttime="20230320 06:35:33.204" endtime="20230320 06:35:33.205"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:35:33.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:35:33.205" endtime="20230320 06:35:33.207"/>
</kw>
<status status="PASS" starttime="20230320 06:35:33.098" endtime="20230320 06:35:33.207"/>
</kw>
<msg timestamp="20230320 06:35:33.208" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:35:33.097" endtime="20230320 06:35:33.209"/>
</kw>
<msg timestamp="20230320 06:35:33.210" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230320 06:35:33.096" endtime="20230320 06:35:33.210"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230320 06:35:33.210" endtime="20230320 06:35:33.211"/>
</kw>
<status status="NOT RUN" starttime="20230320 06:35:33.210" endtime="20230320 06:35:33.211"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:35:33.211" endtime="20230320 06:35:33.212"/>
</kw>
<status status="PASS" starttime="20230320 06:35:33.211" endtime="20230320 06:35:33.212"/>
</branch>
<status status="PASS" starttime="20230320 06:35:33.210" endtime="20230320 06:35:33.212"/>
</if>
<status status="PASS" starttime="20230320 06:35:33.095" endtime="20230320 06:35:33.212"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230320 06:35:33.213" endtime="20230320 06:35:33.214"/>
</kw>
<status status="PASS" starttime="20230320 06:35:33.212" endtime="20230320 06:35:33.214"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:35:33.221" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:35:33.246" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:35:33.246" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230320 06:35:33.217" endtime="20230320 06:35:33.246"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:35:33.248" level="INFO">200</msg>
<status status="PASS" starttime="20230320 06:35:33.247" endtime="20230320 06:35:33.248"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:35:33.249" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:35:33.249" endtime="20230320 06:35:33.250"/>
</kw>
<status status="PASS" starttime="20230320 06:35:33.216" endtime="20230320 06:35:33.250"/>
</kw>
<msg timestamp="20230320 06:35:33.250" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:35:33.215" endtime="20230320 06:35:33.251"/>
</kw>
<msg timestamp="20230320 06:35:33.252" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230320 06:35:33.215" endtime="20230320 06:35:33.252"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230320 06:35:33.253" endtime="20230320 06:35:33.253"/>
</kw>
<status status="NOT RUN" starttime="20230320 06:35:33.252" endtime="20230320 06:35:33.253"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:35:33.253" endtime="20230320 06:35:33.254"/>
</kw>
<status status="PASS" starttime="20230320 06:35:33.253" endtime="20230320 06:35:33.254"/>
</branch>
<status status="PASS" starttime="20230320 06:35:33.252" endtime="20230320 06:35:33.254"/>
</if>
<status status="PASS" starttime="20230320 06:35:33.214" endtime="20230320 06:35:33.254"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230320 06:35:33.255" endtime="20230320 06:35:33.256"/>
</kw>
<status status="PASS" starttime="20230320 06:35:33.255" endtime="20230320 06:35:33.256"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:35:33.265" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:35:33.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:35:33.295" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230320 06:35:33.260" endtime="20230320 06:35:33.295"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:35:33.297" level="INFO">200</msg>
<status status="PASS" starttime="20230320 06:35:33.295" endtime="20230320 06:35:33.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:35:33.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:35:33.297" endtime="20230320 06:35:33.298"/>
</kw>
<status status="PASS" starttime="20230320 06:35:33.259" endtime="20230320 06:35:33.299"/>
</kw>
<msg timestamp="20230320 06:35:33.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:35:33.258" endtime="20230320 06:35:33.300"/>
</kw>
<msg timestamp="20230320 06:35:33.301" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230320 06:35:33.257" endtime="20230320 06:35:33.301"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230320 06:35:33.302" endtime="20230320 06:35:33.302"/>
</kw>
<status status="NOT RUN" starttime="20230320 06:35:33.301" endtime="20230320 06:35:33.302"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:35:33.302" endtime="20230320 06:35:33.303"/>
</kw>
<status status="PASS" starttime="20230320 06:35:33.302" endtime="20230320 06:35:33.303"/>
</branch>
<status status="PASS" starttime="20230320 06:35:33.301" endtime="20230320 06:35:33.303"/>
</if>
<status status="PASS" starttime="20230320 06:35:33.256" endtime="20230320 06:35:33.303"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230320 06:35:33.305" endtime="20230320 06:35:33.305"/>
</kw>
<status status="PASS" starttime="20230320 06:35:33.304" endtime="20230320 06:35:33.305"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:35:33.313" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:35:33.338" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:35:33.338" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230320 06:35:33.309" endtime="20230320 06:35:33.338"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:35:33.341" level="INFO">200</msg>
<status status="PASS" starttime="20230320 06:35:33.340" endtime="20230320 06:35:33.341"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:35:33.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:35:33.341" endtime="20230320 06:35:33.342"/>
</kw>
<status status="PASS" starttime="20230320 06:35:33.308" endtime="20230320 06:35:33.343"/>
</kw>
<msg timestamp="20230320 06:35:33.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:35:33.307" endtime="20230320 06:35:33.344"/>
</kw>
<msg timestamp="20230320 06:35:33.345" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230320 06:35:33.306" endtime="20230320 06:35:33.345"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230320 06:35:33.346" endtime="20230320 06:35:33.346"/>
</kw>
<status status="NOT RUN" starttime="20230320 06:35:33.345" endtime="20230320 06:35:33.346"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:35:33.346" endtime="20230320 06:35:33.347"/>
</kw>
<status status="PASS" starttime="20230320 06:35:33.346" endtime="20230320 06:35:33.347"/>
</branch>
<status status="PASS" starttime="20230320 06:35:33.345" endtime="20230320 06:35:33.347"/>
</if>
<status status="PASS" starttime="20230320 06:35:33.306" endtime="20230320 06:35:33.347"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230320 06:35:33.077" endtime="20230320 06:35:33.347"/>
</test>
<test id="s1-s2-s1-t7" name="Check normal api access" line="133">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:35:33.357" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:35:33.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:35:33.363" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230320 06:35:33.354" endtime="20230320 06:35:33.364"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:35:33.366" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230320 06:35:33.365" endtime="20230320 06:35:33.366"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:35:33.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:35:33.366" endtime="20230320 06:35:33.367"/>
</kw>
<status status="PASS" starttime="20230320 06:35:33.353" endtime="20230320 06:35:33.368"/>
</kw>
<msg timestamp="20230320 06:35:33.368" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:35:33.352" endtime="20230320 06:35:33.369"/>
</kw>
<status status="PASS" starttime="20230320 06:35:33.351" endtime="20230320 06:35:33.369"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:35:33.378" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:35:33.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:35:33.415" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230320 06:35:33.373" endtime="20230320 06:35:33.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:35:33.418" level="INFO">200</msg>
<status status="PASS" starttime="20230320 06:35:33.415" endtime="20230320 06:35:33.418"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:35:33.419" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:35:33.418" endtime="20230320 06:35:33.419"/>
</kw>
<status status="PASS" starttime="20230320 06:35:33.372" endtime="20230320 06:35:33.420"/>
</kw>
<msg timestamp="20230320 06:35:33.420" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:35:33.372" endtime="20230320 06:35:33.421"/>
</kw>
<msg timestamp="20230320 06:35:33.421" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230320 06:35:33.371" endtime="20230320 06:35:33.421"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230320 06:35:33.422" endtime="20230320 06:35:33.422"/>
</kw>
<status status="NOT RUN" starttime="20230320 06:35:33.422" endtime="20230320 06:35:33.422"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:35:33.422" endtime="20230320 06:35:33.423"/>
</kw>
<status status="PASS" starttime="20230320 06:35:33.422" endtime="20230320 06:35:33.423"/>
</branch>
<status status="PASS" starttime="20230320 06:35:33.421" endtime="20230320 06:35:33.424"/>
</if>
<status status="PASS" starttime="20230320 06:35:33.370" endtime="20230320 06:35:33.424"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230320 06:35:33.425" endtime="20230320 06:35:33.425"/>
</kw>
<status status="PASS" starttime="20230320 06:35:33.424" endtime="20230320 06:35:33.426"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:35:33.432" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:35:33.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:35:33.465" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230320 06:35:33.429" endtime="20230320 06:35:33.466"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:35:33.467" level="INFO">200</msg>
<status status="PASS" starttime="20230320 06:35:33.466" endtime="20230320 06:35:33.467"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:35:33.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:35:33.468" endtime="20230320 06:35:33.468"/>
</kw>
<status status="PASS" starttime="20230320 06:35:33.428" endtime="20230320 06:35:33.469"/>
</kw>
<msg timestamp="20230320 06:35:33.469" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:35:33.427" endtime="20230320 06:35:33.470"/>
</kw>
<msg timestamp="20230320 06:35:33.470" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230320 06:35:33.426" endtime="20230320 06:35:33.470"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230320 06:35:33.471" endtime="20230320 06:35:33.471"/>
</kw>
<status status="NOT RUN" starttime="20230320 06:35:33.471" endtime="20230320 06:35:33.471"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:35:33.472" endtime="20230320 06:35:33.472"/>
</kw>
<status status="PASS" starttime="20230320 06:35:33.471" endtime="20230320 06:35:33.472"/>
</branch>
<status status="PASS" starttime="20230320 06:35:33.471" endtime="20230320 06:35:33.472"/>
</if>
<status status="PASS" starttime="20230320 06:35:33.426" endtime="20230320 06:35:33.472"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230320 06:35:33.350" endtime="20230320 06:35:33.473"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20230320 06:34:43.259" endtime="20230320 06:35:33.476"/>
</suite>
<suite id="s1-s2-s2" name="Recon-Nssummary" source="/opt/hadoop/smoketest/recon/recon-nssummary.robot">
<test id="s1-s2-s2-t1" name="Check volume creation" line="99">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:35:33.499" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:35:33.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:35:33.506" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230320 06:35:33.496" endtime="20230320 06:35:33.506"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:35:33.507" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230320 06:35:33.506" endtime="20230320 06:35:33.508"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:35:33.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:35:33.508" endtime="20230320 06:35:33.509"/>
</kw>
<status status="PASS" starttime="20230320 06:35:33.495" endtime="20230320 06:35:33.509"/>
</kw>
<msg timestamp="20230320 06:35:33.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:35:33.495" endtime="20230320 06:35:33.510"/>
</kw>
<status status="PASS" starttime="20230320 06:35:33.494" endtime="20230320 06:35:33.510"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230320 06:35:33.511" endtime="20230320 06:35:33.512"/>
</kw>
<status status="PASS" starttime="20230320 06:35:33.510" endtime="20230320 06:35:33.512"/>
</kw>
<kw name="Create volume">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230320 06:35:33.513" level="INFO">${random} = fduht</msg>
<status status="PASS" starttime="20230320 06:35:33.513" endtime="20230320 06:35:33.514"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${VOLUME}</arg>
<arg>vol-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230320 06:35:33.514" level="INFO">${VOLUME} = vol-fduht</msg>
<status status="PASS" starttime="20230320 06:35:33.514" endtime="20230320 06:35:33.514"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:35:33.521" level="INFO">Running command 'ozone sh volume create /vol-fduht 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:35:40.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:35:40.638" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230320 06:35:33.517" endtime="20230320 06:35:40.639"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:35:40.640" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230320 06:35:40.639" endtime="20230320 06:35:40.641"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:35:40.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:35:40.641" endtime="20230320 06:35:40.642"/>
</kw>
<status status="PASS" starttime="20230320 06:35:33.516" endtime="20230320 06:35:40.642"/>
</kw>
<msg timestamp="20230320 06:35:40.642" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:35:33.516" endtime="20230320 06:35:40.643"/>
</kw>
<msg timestamp="20230320 06:35:40.644" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230320 06:35:33.515" endtime="20230320 06:35:40.644"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:35:40.644" endtime="20230320 06:35:40.645"/>
</kw>
<status status="PASS" starttime="20230320 06:35:33.512" endtime="20230320 06:35:40.645"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230320 06:35:33.493" endtime="20230320 06:35:40.645"/>
</test>
<test id="s1-s2-s2-t2" name="Check bucket creation" line="104">
<kw name="Create bucket">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230320 06:35:40.649" level="INFO">${random} = jzefp</msg>
<status status="PASS" starttime="20230320 06:35:40.649" endtime="20230320 06:35:40.649"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>buc-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230320 06:35:40.650" level="INFO">${BUCKET} = buc-jzefp</msg>
<status status="PASS" starttime="20230320 06:35:40.650" endtime="20230320 06:35:40.650"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create -l ${BUCKET_LAYOUT} /${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:35:40.656" level="INFO">Running command 'ozone sh bucket create -l FILE_SYSTEM_OPTIMIZED /vol-fduht/buc-jzefp 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:35:47.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:35:47.090" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230320 06:35:40.652" endtime="20230320 06:35:47.090"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:35:47.093" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230320 06:35:47.091" endtime="20230320 06:35:47.093"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:35:47.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:35:47.094" endtime="20230320 06:35:47.094"/>
</kw>
<status status="PASS" starttime="20230320 06:35:40.652" endtime="20230320 06:35:47.096"/>
</kw>
<msg timestamp="20230320 06:35:47.096" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:35:40.651" endtime="20230320 06:35:47.097"/>
</kw>
<msg timestamp="20230320 06:35:47.097" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230320 06:35:40.650" endtime="20230320 06:35:47.097"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:35:47.098" endtime="20230320 06:35:47.098"/>
</kw>
<status status="PASS" starttime="20230320 06:35:40.648" endtime="20230320 06:35:47.098"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230320 06:35:40.647" endtime="20230320 06:35:47.099"/>
</test>
<test id="s1-s2-s2-t3" name="Check keys creation" line="107">
<kw name="Create keys">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/file1 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:35:47.107" level="INFO">Running command 'ozone sh key put /vol-fduht/buc-jzefp/file1 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:35:57.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:35:57.186" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230320 06:35:47.104" endtime="20230320 06:35:57.186"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:35:57.188" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230320 06:35:57.186" endtime="20230320 06:35:57.188"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:35:57.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:35:57.188" endtime="20230320 06:35:57.189"/>
</kw>
<status status="PASS" starttime="20230320 06:35:47.103" endtime="20230320 06:35:57.189"/>
</kw>
<msg timestamp="20230320 06:35:57.189" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:35:47.103" endtime="20230320 06:35:57.190"/>
</kw>
<msg timestamp="20230320 06:35:57.191" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230320 06:35:47.102" endtime="20230320 06:35:57.191"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:35:57.191" endtime="20230320 06:35:57.191"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/dir1/dir2/file2 HISTORY.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:35:57.197" level="INFO">Running command 'ozone sh key put /vol-fduht/buc-jzefp/dir1/dir2/file2 HISTORY.md 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:36:07.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:36:07.080" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230320 06:35:57.194" endtime="20230320 06:36:07.080"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:36:07.082" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230320 06:36:07.080" endtime="20230320 06:36:07.082"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:36:07.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:36:07.082" endtime="20230320 06:36:07.083"/>
</kw>
<status status="PASS" starttime="20230320 06:35:57.193" endtime="20230320 06:36:07.083"/>
</kw>
<msg timestamp="20230320 06:36:07.083" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:35:57.192" endtime="20230320 06:36:07.084"/>
</kw>
<msg timestamp="20230320 06:36:07.085" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230320 06:35:57.191" endtime="20230320 06:36:07.085"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:36:07.085" endtime="20230320 06:36:07.085"/>
</kw>
<status status="PASS" starttime="20230320 06:35:47.101" endtime="20230320 06:36:07.086"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230320 06:35:47.100" endtime="20230320 06:36:07.086"/>
</test>
<test id="s1-s2-s2-t4" name="Check Summary api access" line="110">
<kw name="Check Access">
<arg>${SUMMARY_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:36:07.095" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:36:07.100" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:36:07.100" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230320 06:36:07.092" endtime="20230320 06:36:07.100"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:36:07.101" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230320 06:36:07.100" endtime="20230320 06:36:07.101"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:36:07.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:36:07.102" endtime="20230320 06:36:07.103"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.091" endtime="20230320 06:36:07.103"/>
</kw>
<msg timestamp="20230320 06:36:07.103" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:36:07.091" endtime="20230320 06:36:07.104"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.090" endtime="20230320 06:36:07.104"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:36:07.111" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:36:07.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:36:07.177" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230320 06:36:07.107" endtime="20230320 06:36:07.177"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:36:07.179" level="INFO">200</msg>
<status status="PASS" starttime="20230320 06:36:07.178" endtime="20230320 06:36:07.179"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:36:07.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:36:07.179" endtime="20230320 06:36:07.181"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.106" endtime="20230320 06:36:07.181"/>
</kw>
<msg timestamp="20230320 06:36:07.181" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:36:07.106" endtime="20230320 06:36:07.182"/>
</kw>
<msg timestamp="20230320 06:36:07.182" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230320 06:36:07.105" endtime="20230320 06:36:07.182"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230320 06:36:07.183" endtime="20230320 06:36:07.183"/>
</kw>
<status status="NOT RUN" starttime="20230320 06:36:07.183" endtime="20230320 06:36:07.183"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:36:07.184" endtime="20230320 06:36:07.184"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.183" endtime="20230320 06:36:07.184"/>
</branch>
<status status="PASS" starttime="20230320 06:36:07.183" endtime="20230320 06:36:07.184"/>
</if>
<status status="PASS" starttime="20230320 06:36:07.104" endtime="20230320 06:36:07.185"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230320 06:36:07.185" endtime="20230320 06:36:07.186"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.185" endtime="20230320 06:36:07.186"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:36:07.196" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:36:07.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:36:07.218" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230320 06:36:07.189" endtime="20230320 06:36:07.218"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:36:07.221" level="INFO">200</msg>
<status status="PASS" starttime="20230320 06:36:07.219" endtime="20230320 06:36:07.221"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:36:07.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:36:07.221" endtime="20230320 06:36:07.222"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.189" endtime="20230320 06:36:07.222"/>
</kw>
<msg timestamp="20230320 06:36:07.223" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:36:07.188" endtime="20230320 06:36:07.223"/>
</kw>
<msg timestamp="20230320 06:36:07.224" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230320 06:36:07.187" endtime="20230320 06:36:07.224"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230320 06:36:07.225" endtime="20230320 06:36:07.225"/>
</kw>
<status status="NOT RUN" starttime="20230320 06:36:07.225" endtime="20230320 06:36:07.225"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:36:07.226" endtime="20230320 06:36:07.226"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.225" endtime="20230320 06:36:07.226"/>
</branch>
<status status="PASS" starttime="20230320 06:36:07.224" endtime="20230320 06:36:07.226"/>
</if>
<status status="PASS" starttime="20230320 06:36:07.186" endtime="20230320 06:36:07.227"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230320 06:36:07.227" endtime="20230320 06:36:07.228"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.227" endtime="20230320 06:36:07.228"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:36:07.235" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:36:07.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:36:07.258" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230320 06:36:07.231" endtime="20230320 06:36:07.258"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:36:07.260" level="INFO">200</msg>
<status status="PASS" starttime="20230320 06:36:07.259" endtime="20230320 06:36:07.260"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:36:07.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:36:07.260" endtime="20230320 06:36:07.262"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.231" endtime="20230320 06:36:07.262"/>
</kw>
<msg timestamp="20230320 06:36:07.263" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:36:07.230" endtime="20230320 06:36:07.264"/>
</kw>
<msg timestamp="20230320 06:36:07.265" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230320 06:36:07.229" endtime="20230320 06:36:07.265"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230320 06:36:07.266" endtime="20230320 06:36:07.266"/>
</kw>
<status status="NOT RUN" starttime="20230320 06:36:07.266" endtime="20230320 06:36:07.266"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:36:07.266" endtime="20230320 06:36:07.267"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.266" endtime="20230320 06:36:07.267"/>
</branch>
<status status="PASS" starttime="20230320 06:36:07.265" endtime="20230320 06:36:07.267"/>
</if>
<status status="PASS" starttime="20230320 06:36:07.228" endtime="20230320 06:36:07.267"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230320 06:36:07.268" endtime="20230320 06:36:07.269"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.268" endtime="20230320 06:36:07.269"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:36:07.276" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:36:07.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:36:07.297" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230320 06:36:07.273" endtime="20230320 06:36:07.297"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:36:07.299" level="INFO">200</msg>
<status status="PASS" starttime="20230320 06:36:07.298" endtime="20230320 06:36:07.299"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:36:07.301" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:36:07.300" endtime="20230320 06:36:07.301"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.272" endtime="20230320 06:36:07.302"/>
</kw>
<msg timestamp="20230320 06:36:07.302" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:36:07.271" endtime="20230320 06:36:07.303"/>
</kw>
<msg timestamp="20230320 06:36:07.303" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230320 06:36:07.270" endtime="20230320 06:36:07.303"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230320 06:36:07.304" endtime="20230320 06:36:07.305"/>
</kw>
<status status="NOT RUN" starttime="20230320 06:36:07.304" endtime="20230320 06:36:07.305"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:36:07.305" endtime="20230320 06:36:07.306"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.305" endtime="20230320 06:36:07.306"/>
</branch>
<status status="PASS" starttime="20230320 06:36:07.304" endtime="20230320 06:36:07.306"/>
</if>
<status status="PASS" starttime="20230320 06:36:07.269" endtime="20230320 06:36:07.306"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.089" endtime="20230320 06:36:07.307"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230320 06:36:07.088" endtime="20230320 06:36:07.307"/>
</test>
<test id="s1-s2-s2-t5" name="Check Disk Usage api access" line="113">
<kw name="Check Access">
<arg>${DISK_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:36:07.317" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:36:07.322" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:36:07.323" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230320 06:36:07.313" endtime="20230320 06:36:07.323"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:36:07.324" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230320 06:36:07.323" endtime="20230320 06:36:07.324"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:36:07.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:36:07.325" endtime="20230320 06:36:07.325"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.313" endtime="20230320 06:36:07.326"/>
</kw>
<msg timestamp="20230320 06:36:07.326" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:36:07.312" endtime="20230320 06:36:07.327"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.311" endtime="20230320 06:36:07.327"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:36:07.335" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:36:07.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:36:07.370" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230320 06:36:07.331" endtime="20230320 06:36:07.370"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:36:07.373" level="INFO">200</msg>
<status status="PASS" starttime="20230320 06:36:07.371" endtime="20230320 06:36:07.373"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:36:07.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:36:07.373" endtime="20230320 06:36:07.375"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.330" endtime="20230320 06:36:07.376"/>
</kw>
<msg timestamp="20230320 06:36:07.376" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:36:07.329" endtime="20230320 06:36:07.377"/>
</kw>
<msg timestamp="20230320 06:36:07.377" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230320 06:36:07.328" endtime="20230320 06:36:07.378"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230320 06:36:07.379" endtime="20230320 06:36:07.379"/>
</kw>
<status status="NOT RUN" starttime="20230320 06:36:07.378" endtime="20230320 06:36:07.379"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:36:07.379" endtime="20230320 06:36:07.380"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.379" endtime="20230320 06:36:07.380"/>
</branch>
<status status="PASS" starttime="20230320 06:36:07.378" endtime="20230320 06:36:07.380"/>
</if>
<status status="PASS" starttime="20230320 06:36:07.327" endtime="20230320 06:36:07.380"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230320 06:36:07.383" endtime="20230320 06:36:07.384"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.381" endtime="20230320 06:36:07.384"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:36:07.392" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:36:07.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:36:07.412" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230320 06:36:07.388" endtime="20230320 06:36:07.412"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:36:07.415" level="INFO">200</msg>
<status status="PASS" starttime="20230320 06:36:07.413" endtime="20230320 06:36:07.415"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:36:07.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:36:07.415" endtime="20230320 06:36:07.416"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.387" endtime="20230320 06:36:07.416"/>
</kw>
<msg timestamp="20230320 06:36:07.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:36:07.387" endtime="20230320 06:36:07.417"/>
</kw>
<msg timestamp="20230320 06:36:07.418" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230320 06:36:07.386" endtime="20230320 06:36:07.418"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230320 06:36:07.419" endtime="20230320 06:36:07.419"/>
</kw>
<status status="NOT RUN" starttime="20230320 06:36:07.419" endtime="20230320 06:36:07.419"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:36:07.420" endtime="20230320 06:36:07.421"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.419" endtime="20230320 06:36:07.421"/>
</branch>
<status status="PASS" starttime="20230320 06:36:07.418" endtime="20230320 06:36:07.421"/>
</if>
<status status="PASS" starttime="20230320 06:36:07.384" endtime="20230320 06:36:07.421"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230320 06:36:07.422" endtime="20230320 06:36:07.423"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.421" endtime="20230320 06:36:07.423"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:36:07.430" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:36:07.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:36:07.452" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230320 06:36:07.427" endtime="20230320 06:36:07.452"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:36:07.454" level="INFO">200</msg>
<status status="PASS" starttime="20230320 06:36:07.453" endtime="20230320 06:36:07.454"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:36:07.455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:36:07.455" endtime="20230320 06:36:07.455"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.426" endtime="20230320 06:36:07.456"/>
</kw>
<msg timestamp="20230320 06:36:07.456" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:36:07.425" endtime="20230320 06:36:07.457"/>
</kw>
<msg timestamp="20230320 06:36:07.458" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230320 06:36:07.424" endtime="20230320 06:36:07.458"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230320 06:36:07.459" endtime="20230320 06:36:07.459"/>
</kw>
<status status="NOT RUN" starttime="20230320 06:36:07.458" endtime="20230320 06:36:07.459"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:36:07.459" endtime="20230320 06:36:07.460"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.459" endtime="20230320 06:36:07.460"/>
</branch>
<status status="PASS" starttime="20230320 06:36:07.458" endtime="20230320 06:36:07.460"/>
</if>
<status status="PASS" starttime="20230320 06:36:07.423" endtime="20230320 06:36:07.460"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230320 06:36:07.461" endtime="20230320 06:36:07.462"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.460" endtime="20230320 06:36:07.462"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:36:07.468" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:36:07.489" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:36:07.489" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230320 06:36:07.465" endtime="20230320 06:36:07.489"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:36:07.491" level="INFO">200</msg>
<status status="PASS" starttime="20230320 06:36:07.490" endtime="20230320 06:36:07.492"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:36:07.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:36:07.492" endtime="20230320 06:36:07.493"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.464" endtime="20230320 06:36:07.493"/>
</kw>
<msg timestamp="20230320 06:36:07.493" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:36:07.464" endtime="20230320 06:36:07.494"/>
</kw>
<msg timestamp="20230320 06:36:07.495" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230320 06:36:07.463" endtime="20230320 06:36:07.495"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230320 06:36:07.496" endtime="20230320 06:36:07.496"/>
</kw>
<status status="NOT RUN" starttime="20230320 06:36:07.495" endtime="20230320 06:36:07.496"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:36:07.496" endtime="20230320 06:36:07.497"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.496" endtime="20230320 06:36:07.497"/>
</branch>
<status status="PASS" starttime="20230320 06:36:07.495" endtime="20230320 06:36:07.497"/>
</if>
<status status="PASS" starttime="20230320 06:36:07.462" endtime="20230320 06:36:07.497"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.310" endtime="20230320 06:36:07.497"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230320 06:36:07.309" endtime="20230320 06:36:07.498"/>
</test>
<test id="s1-s2-s2-t6" name="Check Quota Usage api access" line="116">
<kw name="Check Access">
<arg>${QUOTA_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:36:07.508" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:36:07.514" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:36:07.515" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230320 06:36:07.505" endtime="20230320 06:36:07.515"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:36:07.516" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230320 06:36:07.515" endtime="20230320 06:36:07.517"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:36:07.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:36:07.517" endtime="20230320 06:36:07.518"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.504" endtime="20230320 06:36:07.518"/>
</kw>
<msg timestamp="20230320 06:36:07.518" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:36:07.503" endtime="20230320 06:36:07.519"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.502" endtime="20230320 06:36:07.519"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:36:07.528" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:36:07.577" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:36:07.577" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230320 06:36:07.523" endtime="20230320 06:36:07.577"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:36:07.579" level="INFO">200</msg>
<status status="PASS" starttime="20230320 06:36:07.578" endtime="20230320 06:36:07.579"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:36:07.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:36:07.580" endtime="20230320 06:36:07.580"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.522" endtime="20230320 06:36:07.581"/>
</kw>
<msg timestamp="20230320 06:36:07.581" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:36:07.522" endtime="20230320 06:36:07.582"/>
</kw>
<msg timestamp="20230320 06:36:07.583" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230320 06:36:07.521" endtime="20230320 06:36:07.583"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230320 06:36:07.583" endtime="20230320 06:36:07.584"/>
</kw>
<status status="NOT RUN" starttime="20230320 06:36:07.583" endtime="20230320 06:36:07.584"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:36:07.584" endtime="20230320 06:36:07.585"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.584" endtime="20230320 06:36:07.585"/>
</branch>
<status status="PASS" starttime="20230320 06:36:07.583" endtime="20230320 06:36:07.585"/>
</if>
<status status="PASS" starttime="20230320 06:36:07.520" endtime="20230320 06:36:07.585"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230320 06:36:07.586" endtime="20230320 06:36:07.587"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.586" endtime="20230320 06:36:07.587"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:36:07.593" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:36:07.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:36:07.618" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230320 06:36:07.590" endtime="20230320 06:36:07.618"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:36:07.620" level="INFO">200</msg>
<status status="PASS" starttime="20230320 06:36:07.618" endtime="20230320 06:36:07.620"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:36:07.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:36:07.620" endtime="20230320 06:36:07.621"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.589" endtime="20230320 06:36:07.621"/>
</kw>
<msg timestamp="20230320 06:36:07.622" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:36:07.589" endtime="20230320 06:36:07.622"/>
</kw>
<msg timestamp="20230320 06:36:07.623" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230320 06:36:07.588" endtime="20230320 06:36:07.623"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230320 06:36:07.624" endtime="20230320 06:36:07.624"/>
</kw>
<status status="NOT RUN" starttime="20230320 06:36:07.623" endtime="20230320 06:36:07.624"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:36:07.624" endtime="20230320 06:36:07.625"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.624" endtime="20230320 06:36:07.625"/>
</branch>
<status status="PASS" starttime="20230320 06:36:07.623" endtime="20230320 06:36:07.625"/>
</if>
<status status="PASS" starttime="20230320 06:36:07.587" endtime="20230320 06:36:07.625"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230320 06:36:07.626" endtime="20230320 06:36:07.627"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.626" endtime="20230320 06:36:07.627"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:36:07.633" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:36:07.653" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:36:07.653" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230320 06:36:07.630" endtime="20230320 06:36:07.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:36:07.655" level="INFO">200</msg>
<status status="PASS" starttime="20230320 06:36:07.654" endtime="20230320 06:36:07.655"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:36:07.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:36:07.657" endtime="20230320 06:36:07.658"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.629" endtime="20230320 06:36:07.658"/>
</kw>
<msg timestamp="20230320 06:36:07.658" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:36:07.629" endtime="20230320 06:36:07.659"/>
</kw>
<msg timestamp="20230320 06:36:07.660" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230320 06:36:07.628" endtime="20230320 06:36:07.660"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230320 06:36:07.660" endtime="20230320 06:36:07.661"/>
</kw>
<status status="NOT RUN" starttime="20230320 06:36:07.660" endtime="20230320 06:36:07.661"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:36:07.661" endtime="20230320 06:36:07.661"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.661" endtime="20230320 06:36:07.661"/>
</branch>
<status status="PASS" starttime="20230320 06:36:07.660" endtime="20230320 06:36:07.661"/>
</if>
<status status="PASS" starttime="20230320 06:36:07.627" endtime="20230320 06:36:07.662"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230320 06:36:07.663" endtime="20230320 06:36:07.663"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.662" endtime="20230320 06:36:07.664"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:36:07.670" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:36:07.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:36:07.701" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230320 06:36:07.666" endtime="20230320 06:36:07.701"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:36:07.706" level="INFO">200</msg>
<status status="PASS" starttime="20230320 06:36:07.701" endtime="20230320 06:36:07.706"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:36:07.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:36:07.706" endtime="20230320 06:36:07.707"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.665" endtime="20230320 06:36:07.707"/>
</kw>
<msg timestamp="20230320 06:36:07.708" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:36:07.665" endtime="20230320 06:36:07.708"/>
</kw>
<msg timestamp="20230320 06:36:07.709" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230320 06:36:07.664" endtime="20230320 06:36:07.709"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230320 06:36:07.710" endtime="20230320 06:36:07.710"/>
</kw>
<status status="NOT RUN" starttime="20230320 06:36:07.709" endtime="20230320 06:36:07.710"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:36:07.710" endtime="20230320 06:36:07.710"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.710" endtime="20230320 06:36:07.711"/>
</branch>
<status status="PASS" starttime="20230320 06:36:07.709" endtime="20230320 06:36:07.711"/>
</if>
<status status="PASS" starttime="20230320 06:36:07.664" endtime="20230320 06:36:07.711"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.501" endtime="20230320 06:36:07.711"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230320 06:36:07.500" endtime="20230320 06:36:07.711"/>
</test>
<test id="s1-s2-s2-t7" name="Check File Size Distribution api access" line="119">
<kw name="Check Access">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:36:07.721" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:36:07.726" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:36:07.726" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230320 06:36:07.717" endtime="20230320 06:36:07.727"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:36:07.728" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230320 06:36:07.727" endtime="20230320 06:36:07.728"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:36:07.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:36:07.729" endtime="20230320 06:36:07.730"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.717" endtime="20230320 06:36:07.730"/>
</kw>
<msg timestamp="20230320 06:36:07.730" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:36:07.716" endtime="20230320 06:36:07.731"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.715" endtime="20230320 06:36:07.731"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:36:07.738" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:36:07.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:36:07.770" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230320 06:36:07.735" endtime="20230320 06:36:07.770"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:36:07.774" level="INFO">200</msg>
<status status="PASS" starttime="20230320 06:36:07.771" endtime="20230320 06:36:07.774"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:36:07.775" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:36:07.774" endtime="20230320 06:36:07.775"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.734" endtime="20230320 06:36:07.775"/>
</kw>
<msg timestamp="20230320 06:36:07.775" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:36:07.733" endtime="20230320 06:36:07.776"/>
</kw>
<msg timestamp="20230320 06:36:07.776" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230320 06:36:07.733" endtime="20230320 06:36:07.777"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230320 06:36:07.777" endtime="20230320 06:36:07.778"/>
</kw>
<status status="NOT RUN" starttime="20230320 06:36:07.777" endtime="20230320 06:36:07.778"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:36:07.778" endtime="20230320 06:36:07.779"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.778" endtime="20230320 06:36:07.779"/>
</branch>
<status status="PASS" starttime="20230320 06:36:07.777" endtime="20230320 06:36:07.779"/>
</if>
<status status="PASS" starttime="20230320 06:36:07.732" endtime="20230320 06:36:07.779"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230320 06:36:07.780" endtime="20230320 06:36:07.781"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.779" endtime="20230320 06:36:07.781"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:36:07.787" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:36:07.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:36:07.807" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230320 06:36:07.783" endtime="20230320 06:36:07.807"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:36:07.809" level="INFO">200</msg>
<status status="PASS" starttime="20230320 06:36:07.807" endtime="20230320 06:36:07.809"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:36:07.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:36:07.809" endtime="20230320 06:36:07.810"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.783" endtime="20230320 06:36:07.810"/>
</kw>
<msg timestamp="20230320 06:36:07.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:36:07.782" endtime="20230320 06:36:07.811"/>
</kw>
<msg timestamp="20230320 06:36:07.811" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230320 06:36:07.781" endtime="20230320 06:36:07.811"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230320 06:36:07.812" endtime="20230320 06:36:07.812"/>
</kw>
<status status="NOT RUN" starttime="20230320 06:36:07.812" endtime="20230320 06:36:07.812"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:36:07.813" endtime="20230320 06:36:07.813"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.812" endtime="20230320 06:36:07.813"/>
</branch>
<status status="PASS" starttime="20230320 06:36:07.812" endtime="20230320 06:36:07.813"/>
</if>
<status status="PASS" starttime="20230320 06:36:07.781" endtime="20230320 06:36:07.813"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230320 06:36:07.814" endtime="20230320 06:36:07.815"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.814" endtime="20230320 06:36:07.815"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:36:07.822" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:36:07.841" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:36:07.842" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230320 06:36:07.818" endtime="20230320 06:36:07.842"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:36:07.844" level="INFO">200</msg>
<status status="PASS" starttime="20230320 06:36:07.842" endtime="20230320 06:36:07.844"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:36:07.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:36:07.844" endtime="20230320 06:36:07.845"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.817" endtime="20230320 06:36:07.845"/>
</kw>
<msg timestamp="20230320 06:36:07.846" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:36:07.817" endtime="20230320 06:36:07.846"/>
</kw>
<msg timestamp="20230320 06:36:07.847" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230320 06:36:07.816" endtime="20230320 06:36:07.847"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230320 06:36:07.848" endtime="20230320 06:36:07.848"/>
</kw>
<status status="NOT RUN" starttime="20230320 06:36:07.847" endtime="20230320 06:36:07.848"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:36:07.848" endtime="20230320 06:36:07.849"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.848" endtime="20230320 06:36:07.849"/>
</branch>
<status status="PASS" starttime="20230320 06:36:07.847" endtime="20230320 06:36:07.849"/>
</if>
<status status="PASS" starttime="20230320 06:36:07.815" endtime="20230320 06:36:07.849"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230320 06:36:07.850" endtime="20230320 06:36:07.850"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.849" endtime="20230320 06:36:07.851"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:36:07.857" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:36:07.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:36:07.877" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230320 06:36:07.854" endtime="20230320 06:36:07.877"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:36:07.879" level="INFO">200</msg>
<status status="PASS" starttime="20230320 06:36:07.878" endtime="20230320 06:36:07.879"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:36:07.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:36:07.879" endtime="20230320 06:36:07.880"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.853" endtime="20230320 06:36:07.881"/>
</kw>
<msg timestamp="20230320 06:36:07.881" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:36:07.853" endtime="20230320 06:36:07.882"/>
</kw>
<msg timestamp="20230320 06:36:07.882" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230320 06:36:07.852" endtime="20230320 06:36:07.882"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230320 06:36:07.883" endtime="20230320 06:36:07.883"/>
</kw>
<status status="NOT RUN" starttime="20230320 06:36:07.883" endtime="20230320 06:36:07.883"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:36:07.883" endtime="20230320 06:36:07.884"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.883" endtime="20230320 06:36:07.884"/>
</branch>
<status status="PASS" starttime="20230320 06:36:07.882" endtime="20230320 06:36:07.884"/>
</if>
<status status="PASS" starttime="20230320 06:36:07.851" endtime="20230320 06:36:07.884"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.714" endtime="20230320 06:36:07.884"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230320 06:36:07.713" endtime="20230320 06:36:07.885"/>
</test>
<test id="s1-s2-s2-t8" name="Check Recon Namespace Summary Root" line="122">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/</arg>
<arg>ROOT</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:36:07.903" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:36:07.926" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:36:07.926" level="INFO">${output} = {"path":"","type":"ROOT","countStats":{"numVolume":3,"numBucket":2,"numDir":1,"numKey":1},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTim...</msg>
<status status="PASS" starttime="20230320 06:36:07.899" endtime="20230320 06:36:07.926"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:36:07.929" level="INFO">{"path":"","type":"ROOT","countStats":{"numVolume":3,"numBucket":2,"numDir":1,"numKey":1},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":0,"modificationTime":0,"acls":null},"status":"OK"}</msg>
<status status="PASS" starttime="20230320 06:36:07.927" endtime="20230320 06:36:07.929"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:36:07.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:36:07.929" endtime="20230320 06:36:07.930"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.898" endtime="20230320 06:36:07.931"/>
</kw>
<msg timestamp="20230320 06:36:07.931" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:36:07.898" endtime="20230320 06:36:07.932"/>
</kw>
<msg timestamp="20230320 06:36:07.933" level="INFO">${result} = {"path":"","type":"ROOT","countStats":{"numVolume":3,"numBucket":2,"numDir":1,"numKey":1},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTim...</msg>
<status status="PASS" starttime="20230320 06:36:07.896" endtime="20230320 06:36:07.933"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:36:07.933" endtime="20230320 06:36:07.934"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:36:07.934" endtime="20230320 06:36:07.935"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.895" endtime="20230320 06:36:07.935"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.895" endtime="20230320 06:36:07.935"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.893" endtime="20230320 06:36:07.936"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230320 06:36:07.889" endtime="20230320 06:36:07.936"/>
</test>
<test id="s1-s2-s2-t9" name="Check Recon Namespace Summary Volume" line="125">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}</arg>
<arg>VOLUME</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:36:07.952" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-fduht 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:36:07.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:36:07.975" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230320 06:36:07.948" endtime="20230320 06:36:07.975"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:36:07.977" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230320 06:36:07.976" endtime="20230320 06:36:07.977"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:36:07.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:36:07.977" endtime="20230320 06:36:07.979"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.948" endtime="20230320 06:36:07.979"/>
</kw>
<msg timestamp="20230320 06:36:07.979" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:36:07.947" endtime="20230320 06:36:07.980"/>
</kw>
<msg timestamp="20230320 06:36:07.981" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230320 06:36:07.946" endtime="20230320 06:36:07.981"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230320 06:36:07.983" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230320 06:36:07.981" endtime="20230320 06:36:07.983"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230320 06:36:07.984" endtime="20230320 06:36:07.984"/>
</kw>
<status status="FAIL" starttime="20230320 06:36:07.945" endtime="20230320 06:36:07.986"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:36:17.994" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-fduht 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:36:18.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:36:18.014" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230320 06:36:17.990" endtime="20230320 06:36:18.014"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:36:18.016" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230320 06:36:18.015" endtime="20230320 06:36:18.016"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:36:18.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:36:18.016" endtime="20230320 06:36:18.018"/>
</kw>
<status status="PASS" starttime="20230320 06:36:17.989" endtime="20230320 06:36:18.018"/>
</kw>
<msg timestamp="20230320 06:36:18.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:36:17.989" endtime="20230320 06:36:18.019"/>
</kw>
<msg timestamp="20230320 06:36:18.020" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230320 06:36:17.988" endtime="20230320 06:36:18.020"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230320 06:36:18.022" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230320 06:36:18.020" endtime="20230320 06:36:18.022"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230320 06:36:18.023" endtime="20230320 06:36:18.023"/>
</kw>
<status status="FAIL" starttime="20230320 06:36:17.987" endtime="20230320 06:36:18.024"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:36:28.033" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-fduht 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:36:28.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:36:28.054" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230320 06:36:28.029" endtime="20230320 06:36:28.054"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:36:28.056" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230320 06:36:28.055" endtime="20230320 06:36:28.056"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:36:28.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:36:28.056" endtime="20230320 06:36:28.057"/>
</kw>
<status status="PASS" starttime="20230320 06:36:28.029" endtime="20230320 06:36:28.058"/>
</kw>
<msg timestamp="20230320 06:36:28.058" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:36:28.028" endtime="20230320 06:36:28.058"/>
</kw>
<msg timestamp="20230320 06:36:28.059" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230320 06:36:28.028" endtime="20230320 06:36:28.059"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230320 06:36:28.060" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230320 06:36:28.059" endtime="20230320 06:36:28.060"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230320 06:36:28.061" endtime="20230320 06:36:28.061"/>
</kw>
<status status="FAIL" starttime="20230320 06:36:28.026" endtime="20230320 06:36:28.062"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:36:38.069" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-fduht 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:36:38.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:36:38.103" level="INFO">${output} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-fduht","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<status status="PASS" starttime="20230320 06:36:38.066" endtime="20230320 06:36:38.103"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:36:38.104" level="INFO">{"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-fduht","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"creationTime":1679294140233,"modificationTime":1679294140233,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}],"admin":"hadoop","owner":"hadoop","volume":"vol-fduht"},"status":"OK"}</msg>
<status status="PASS" starttime="20230320 06:36:38.103" endtime="20230320 06:36:38.106"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:36:38.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:36:38.106" endtime="20230320 06:36:38.107"/>
</kw>
<status status="PASS" starttime="20230320 06:36:38.065" endtime="20230320 06:36:38.107"/>
</kw>
<msg timestamp="20230320 06:36:38.107" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:36:38.065" endtime="20230320 06:36:38.108"/>
</kw>
<msg timestamp="20230320 06:36:38.109" level="INFO">${result} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-fduht","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<status status="PASS" starttime="20230320 06:36:38.064" endtime="20230320 06:36:38.109"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:36:38.109" endtime="20230320 06:36:38.109"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:36:38.110" endtime="20230320 06:36:38.110"/>
</kw>
<status status="PASS" starttime="20230320 06:36:38.062" endtime="20230320 06:36:38.110"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.945" endtime="20230320 06:36:38.111"/>
</kw>
<status status="PASS" starttime="20230320 06:36:07.942" endtime="20230320 06:36:38.111"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230320 06:36:07.939" endtime="20230320 06:36:38.111"/>
</test>
<test id="s1-s2-s2-t10" name="Check Recon Namespace Summary Bucket" line="128">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>BUCKET</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:36:38.122" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-fduht/buc-jzefp 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:36:38.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:36:38.153" level="INFO">${output} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-jzefp","quotaInBytes":-1,"quotaInNamespa...</msg>
<status status="PASS" starttime="20230320 06:36:38.119" endtime="20230320 06:36:38.153"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:36:38.155" level="INFO">{"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-jzefp","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":4,"creationTime":1679294146885,"modificationTime":1679294146885,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}],"volumeName":"vol-fduht","storageType":"DISK","versioning":false,"usedBytes":null,"encryptionInfo":null,"replicationConfigInfo":null,"sourceVolume":null,"sourceBucket":null,"bucketLayout":"FILE_SYSTEM_OPTIMIZED","owner":"hadoop"},"status":"OK"}</msg>
<status status="PASS" starttime="20230320 06:36:38.154" endtime="20230320 06:36:38.156"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:36:38.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:36:38.156" endtime="20230320 06:36:38.157"/>
</kw>
<status status="PASS" starttime="20230320 06:36:38.118" endtime="20230320 06:36:38.157"/>
</kw>
<msg timestamp="20230320 06:36:38.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:36:38.118" endtime="20230320 06:36:38.158"/>
</kw>
<msg timestamp="20230320 06:36:38.159" level="INFO">${result} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-jzefp","quotaInBytes":-1,"quotaInNamespa...</msg>
<status status="PASS" starttime="20230320 06:36:38.118" endtime="20230320 06:36:38.159"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:36:38.159" endtime="20230320 06:36:38.160"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:36:38.160" endtime="20230320 06:36:38.161"/>
</kw>
<status status="PASS" starttime="20230320 06:36:38.117" endtime="20230320 06:36:38.161"/>
</kw>
<status status="PASS" starttime="20230320 06:36:38.116" endtime="20230320 06:36:38.161"/>
</kw>
<status status="PASS" starttime="20230320 06:36:38.114" endtime="20230320 06:36:38.161"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230320 06:36:38.113" endtime="20230320 06:36:38.162"/>
</test>
<test id="s1-s2-s2-t11" name="Check Recon Namespace Summary Key" line="131">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/file1</arg>
<arg>KEY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:36:38.174" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-fduht/buc-jzefp/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:36:38.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:36:38.238" level="INFO">${output} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":false,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespac...</msg>
<status status="PASS" starttime="20230320 06:36:38.170" endtime="20230320 06:36:38.238"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:36:38.240" level="INFO">{"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":false,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":1679294153330,"modificationTime":1679294156678,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}],"volumeName":"vol-fduht","bucketName":"buc-jzefp","keyName":"file1","dataSize":3879,"keyLocationVersions":[{"version":0,"locationList":[{"blockID":{"containerBlockID":{"containerID":3,"localID":111677748019200012},"blockCommitSequenceId":23,"containerID":3,"localID":111677748019200012},"length":3879,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":3,"localID":111677748019200012,"blockCommitSequenceId":23}],"blocksLatestVersionOnly":[{"blockID":{"containerBlockID":{"containerID":3,"localID":111677748019200012},"blockCommitSequenceId":23,"containerID":3,"localID":111677748019200012},"length":3879,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":3,"localID":111677748019200012,"blockCommitSequenceId":23}],"locationLists":[[{"blockID":{"containerBlockID":{"containerID":3,"localID":111677748019200012},"blockCommitSequenceId":23,"containerID":3,"localID":111677748019200012},"length":3879,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":3,"localID":111677748019200012,"blockCommitSequenceId":23}]],"locationListCount":1,"multipartKey":false}],"replicationConfig":{"replicationFactor":"THREE","requiredNodes":3,"replicationType":"RATIS"},"encInfo":null},"status":"OK"}</msg>
<status status="PASS" starttime="20230320 06:36:38.239" endtime="20230320 06:36:38.240"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:36:38.241" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:36:38.240" endtime="20230320 06:36:38.241"/>
</kw>
<status status="PASS" starttime="20230320 06:36:38.169" endtime="20230320 06:36:38.241"/>
</kw>
<msg timestamp="20230320 06:36:38.242" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:36:38.169" endtime="20230320 06:36:38.243"/>
</kw>
<msg timestamp="20230320 06:36:38.243" level="INFO">${result} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":false,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespac...</msg>
<status status="PASS" starttime="20230320 06:36:38.168" endtime="20230320 06:36:38.243"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:36:38.244" endtime="20230320 06:36:38.244"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:36:38.245" endtime="20230320 06:36:38.245"/>
</kw>
<status status="PASS" starttime="20230320 06:36:38.167" endtime="20230320 06:36:38.246"/>
</kw>
<status status="PASS" starttime="20230320 06:36:38.167" endtime="20230320 06:36:38.246"/>
</kw>
<status status="PASS" starttime="20230320 06:36:38.165" endtime="20230320 06:36:38.247"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230320 06:36:38.164" endtime="20230320 06:36:38.247"/>
</test>
<test id="s1-s2-s2-t12" name="Check Recon Namespace Summary Directory" line="134">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'LEGACY'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2/</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230320 06:36:38.250" endtime="20230320 06:36:38.251"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'FILE_SYSTEM_OPTIMIZED'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:36:38.262" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-fduht/buc-jzefp/dir1/dir2 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:36:38.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:36:38.295" level="INFO">${output} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<status status="PASS" starttime="20230320 06:36:38.259" endtime="20230320 06:36:38.295"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:36:38.297" level="INFO">{"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":1679294162960,"modificationTime":1679294162960,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}]},"status":"OK"}</msg>
<status status="PASS" starttime="20230320 06:36:38.295" endtime="20230320 06:36:38.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:36:38.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:36:38.297" endtime="20230320 06:36:38.298"/>
</kw>
<status status="PASS" starttime="20230320 06:36:38.258" endtime="20230320 06:36:38.299"/>
</kw>
<msg timestamp="20230320 06:36:38.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:36:38.257" endtime="20230320 06:36:38.300"/>
</kw>
<msg timestamp="20230320 06:36:38.301" level="INFO">${result} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<status status="PASS" starttime="20230320 06:36:38.256" endtime="20230320 06:36:38.301"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:36:38.301" endtime="20230320 06:36:38.302"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:36:38.302" endtime="20230320 06:36:38.303"/>
</kw>
<status status="PASS" starttime="20230320 06:36:38.255" endtime="20230320 06:36:38.303"/>
</kw>
<status status="PASS" starttime="20230320 06:36:38.254" endtime="20230320 06:36:38.303"/>
</kw>
<status status="PASS" starttime="20230320 06:36:38.252" endtime="20230320 06:36:38.303"/>
</kw>
<status status="PASS" starttime="20230320 06:36:38.252" endtime="20230320 06:36:38.303"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230320 06:36:38.249" endtime="20230320 06:36:38.304"/>
</test>
<test id="s1-s2-s2-t13" name="Check Recon Namespace Disk Usage" line="138">
<kw name="Wait For Summary">
<arg>${DISK_USAGE_URL}?path=/${VOLUME}/${BUCKET}&amp;files=true&amp;replica=true</arg>
<arg>\"sizeWithReplica\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:36:38.315" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/du?path=/vol-fduht/buc-jzefp&amp;files=true&amp;replica=true 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:36:38.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:36:38.337" level="INFO">${output} = {"status":"OK","path":"/vol-fduht/buc-jzefp","size":9917,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-fduht/buc-jzefp/dir1","size":6038,"sizeWithReplica":-1,"isKey":fals...</msg>
<status status="PASS" starttime="20230320 06:36:38.312" endtime="20230320 06:36:38.337"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:36:38.339" level="INFO">{"status":"OK","path":"/vol-fduht/buc-jzefp","size":9917,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-fduht/buc-jzefp/dir1","size":6038,"sizeWithReplica":-1,"isKey":false}],"sizeDirectKey":3879}</msg>
<status status="PASS" starttime="20230320 06:36:38.338" endtime="20230320 06:36:38.339"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:36:38.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:36:38.340" endtime="20230320 06:36:38.341"/>
</kw>
<status status="PASS" starttime="20230320 06:36:38.311" endtime="20230320 06:36:38.341"/>
</kw>
<msg timestamp="20230320 06:36:38.342" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:36:38.311" endtime="20230320 06:36:38.342"/>
</kw>
<msg timestamp="20230320 06:36:38.343" level="INFO">${result} = {"status":"OK","path":"/vol-fduht/buc-jzefp","size":9917,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-fduht/buc-jzefp/dir1","size":6038,"sizeWithReplica":-1,"isKey":fals...</msg>
<status status="PASS" starttime="20230320 06:36:38.310" endtime="20230320 06:36:38.343"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:36:38.343" endtime="20230320 06:36:38.344"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:36:38.345" endtime="20230320 06:36:38.346"/>
</kw>
<status status="PASS" starttime="20230320 06:36:38.309" endtime="20230320 06:36:38.346"/>
</kw>
<status status="PASS" starttime="20230320 06:36:38.309" endtime="20230320 06:36:38.346"/>
</kw>
<status status="PASS" starttime="20230320 06:36:38.307" endtime="20230320 06:36:38.346"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230320 06:36:38.306" endtime="20230320 06:36:38.347"/>
</test>
<test id="s1-s2-s2-t14" name="Check Recon Namespace Volume Quota Usage" line="141">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:36:38.360" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-fduht 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:36:38.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:36:38.378" level="INFO">${output} = {"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20230320 06:36:38.355" endtime="20230320 06:36:38.378"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:36:38.380" level="INFO">{"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20230320 06:36:38.379" endtime="20230320 06:36:38.380"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:36:38.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:36:38.380" endtime="20230320 06:36:38.381"/>
</kw>
<status status="PASS" starttime="20230320 06:36:38.354" endtime="20230320 06:36:38.382"/>
</kw>
<msg timestamp="20230320 06:36:38.382" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:36:38.354" endtime="20230320 06:36:38.383"/>
</kw>
<msg timestamp="20230320 06:36:38.383" level="INFO">${result} = {"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20230320 06:36:38.353" endtime="20230320 06:36:38.383"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:36:38.383" endtime="20230320 06:36:38.384"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:36:38.384" endtime="20230320 06:36:38.385"/>
</kw>
<status status="PASS" starttime="20230320 06:36:38.352" endtime="20230320 06:36:38.385"/>
</kw>
<status status="PASS" starttime="20230320 06:36:38.352" endtime="20230320 06:36:38.385"/>
</kw>
<status status="PASS" starttime="20230320 06:36:38.350" endtime="20230320 06:36:38.386"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230320 06:36:38.349" endtime="20230320 06:36:38.386"/>
</test>
<test id="s1-s2-s2-t15" name="Check Recon Namespace Bucket Quota Usage" line="144">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:36:38.399" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-fduht/buc-jzefp 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:36:38.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:36:38.424" level="INFO">${output} = {"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20230320 06:36:38.396" endtime="20230320 06:36:38.424"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:36:38.425" level="INFO">{"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20230320 06:36:38.424" endtime="20230320 06:36:38.425"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:36:38.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:36:38.426" endtime="20230320 06:36:38.427"/>
</kw>
<status status="PASS" starttime="20230320 06:36:38.395" endtime="20230320 06:36:38.427"/>
</kw>
<msg timestamp="20230320 06:36:38.427" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:36:38.394" endtime="20230320 06:36:38.428"/>
</kw>
<msg timestamp="20230320 06:36:38.429" level="INFO">${result} = {"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20230320 06:36:38.394" endtime="20230320 06:36:38.429"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:36:38.429" endtime="20230320 06:36:38.430"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:36:38.430" endtime="20230320 06:36:38.430"/>
</kw>
<status status="PASS" starttime="20230320 06:36:38.393" endtime="20230320 06:36:38.431"/>
</kw>
<status status="PASS" starttime="20230320 06:36:38.392" endtime="20230320 06:36:38.431"/>
</kw>
<status status="PASS" starttime="20230320 06:36:38.390" endtime="20230320 06:36:38.431"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230320 06:36:38.389" endtime="20230320 06:36:38.431"/>
</test>
<test id="s1-s2-s2-t16" name="Check Recon Namespace File Size Distribution Root" line="147">
<kw name="Wait For Summary">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<arg>\"dist\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:36:38.450" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:36:38.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:36:38.481" level="INFO">${output} = {"dist":[0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20230320 06:36:38.440" endtime="20230320 06:36:38.481"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:36:38.482" level="INFO">{"dist":[0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20230320 06:36:38.482" endtime="20230320 06:36:38.483"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:36:38.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:36:38.483" endtime="20230320 06:36:38.484"/>
</kw>
<status status="PASS" starttime="20230320 06:36:38.438" endtime="20230320 06:36:38.485"/>
</kw>
<msg timestamp="20230320 06:36:38.485" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:36:38.438" endtime="20230320 06:36:38.486"/>
</kw>
<msg timestamp="20230320 06:36:38.487" level="INFO">${result} = {"dist":[0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20230320 06:36:38.437" endtime="20230320 06:36:38.487"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:36:38.487" endtime="20230320 06:36:38.488"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:36:38.488" endtime="20230320 06:36:38.489"/>
</kw>
<status status="PASS" starttime="20230320 06:36:38.436" endtime="20230320 06:36:38.489"/>
</kw>
<status status="PASS" starttime="20230320 06:36:38.435" endtime="20230320 06:36:38.489"/>
</kw>
<status status="PASS" starttime="20230320 06:36:38.434" endtime="20230320 06:36:38.489"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230320 06:36:38.433" endtime="20230320 06:36:38.490"/>
</test>
<doc>Smoke test for Recon Namespace Summary Endpoint for FILE_SYSTEM_OPTIMIZED buckets.</doc>
<status status="PASS" starttime="20230320 06:35:33.479" endtime="20230320 06:36:38.492"/>
</suite>
<status status="PASS" starttime="20230320 06:34:43.223" endtime="20230320 06:36:38.497"/>
</suite>
<suite id="s1-s3" name="Loaddata" source="/opt/hadoop/smoketest/topology/loaddata.robot">
<test id="s1-s3-t1" name="Create a volume, bucket and key" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create topvol1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:36:46.055" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:36:51.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:36:51.550" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230320 06:36:46.047" endtime="20230320 06:36:51.550"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:36:51.551" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230320 06:36:51.550" endtime="20230320 06:36:51.551"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:36:51.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:36:51.552" endtime="20230320 06:36:51.552"/>
</kw>
<status status="PASS" starttime="20230320 06:36:46.046" endtime="20230320 06:36:51.553"/>
</kw>
<msg timestamp="20230320 06:36:51.553" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:36:46.046" endtime="20230320 06:36:51.555"/>
</kw>
<msg timestamp="20230320 06:36:51.555" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230320 06:36:46.045" endtime="20230320 06:36:51.555"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:36:51.555" endtime="20230320 06:36:51.557"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:36:51.562" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:36:57.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:36:57.374" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230320 06:36:51.559" endtime="20230320 06:36:57.374"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:36:57.375" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230320 06:36:57.375" endtime="20230320 06:36:57.376"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:36:57.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:36:57.376" endtime="20230320 06:36:57.377"/>
</kw>
<status status="PASS" starttime="20230320 06:36:51.558" endtime="20230320 06:36:57.377"/>
</kw>
<msg timestamp="20230320 06:36:57.377" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:36:51.558" endtime="20230320 06:36:57.378"/>
</kw>
<msg timestamp="20230320 06:36:57.378" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230320 06:36:51.557" endtime="20230320 06:36:57.378"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:36:57.378" endtime="20230320 06:36:57.379"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:36:57.384" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:37:07.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:37:07.311" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230320 06:36:57.380" endtime="20230320 06:37:07.311"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:37:07.313" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230320 06:37:07.312" endtime="20230320 06:37:07.313"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:37:07.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:37:07.313" endtime="20230320 06:37:07.314"/>
</kw>
<status status="PASS" starttime="20230320 06:36:57.380" endtime="20230320 06:37:07.314"/>
</kw>
<msg timestamp="20230320 06:37:07.314" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:36:57.379" endtime="20230320 06:37:07.315"/>
</kw>
<msg timestamp="20230320 06:37:07.315" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230320 06:36:57.379" endtime="20230320 06:37:07.315"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:37:07.315" endtime="20230320 06:37:07.316"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230320 06:36:46.043" endtime="20230320 06:37:07.316"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230320 06:36:45.957" endtime="20230320 06:37:07.318"/>
</suite>
<suite id="s1-s4" name="readdata-first-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s4-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230320 06:37:20.236" level="INFO">${random} = 14128</msg>
<status status="PASS" starttime="20230320 06:37:20.235" endtime="20230320 06:37:20.236"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:37:20.245" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-14128 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:37:29.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:37:29.452" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230320 06:37:20.239" endtime="20230320 06:37:29.452"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:37:29.453" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230320 06:37:29.452" endtime="20230320 06:37:29.454"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:37:29.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:37:29.454" endtime="20230320 06:37:29.454"/>
</kw>
<status status="PASS" starttime="20230320 06:37:20.238" endtime="20230320 06:37:29.455"/>
</kw>
<msg timestamp="20230320 06:37:29.455" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:37:20.238" endtime="20230320 06:37:29.457"/>
</kw>
<msg timestamp="20230320 06:37:29.457" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230320 06:37:20.237" endtime="20230320 06:37:29.457"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:37:29.457" endtime="20230320 06:37:29.458"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230320 06:37:20.233" endtime="20230320 06:37:29.458"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230320 06:37:20.134" endtime="20230320 06:37:29.461"/>
</suite>
<suite id="s1-s5" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s5-t1" name="Check webui static resources" line="29">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230320 06:33:33.022" endtime="20230320 06:33:33.023"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:33:33.032" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:33:33.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:33:33.185" level="INFO">${output} = HTTP/1.1 200 OK
Date: Mon, 20 Mar 2023 06:33:33 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Mon, 20 Mar 2023 06:05:40 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20230320 06:33:33.025" endtime="20230320 06:33:33.185"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:33:33.191" level="INFO">HTTP/1.1 200 OK
Date: Mon, 20 Mar 2023 06:33:33 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Mon, 20 Mar 2023 06:05:40 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20230320 06:33:33.188" endtime="20230320 06:33:33.191"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:33:33.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:33:33.192" endtime="20230320 06:33:33.194"/>
</kw>
<status status="PASS" starttime="20230320 06:33:33.024" endtime="20230320 06:33:33.196"/>
</kw>
<msg timestamp="20230320 06:33:33.196" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:33:33.024" endtime="20230320 06:33:33.205"/>
</kw>
<msg timestamp="20230320 06:33:33.209" level="INFO">${result} = HTTP/1.1 200 OK
Date: Mon, 20 Mar 2023 06:33:33 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Mon, 20 Mar 2023 06:05:40 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20230320 06:33:33.023" endtime="20230320 06:33:33.209"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:33:33.209" endtime="20230320 06:33:33.215"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230320 06:33:33.020" endtime="20230320 06:33:33.215"/>
</test>
<test id="s1-s5-t2" name="Basic Freon smoketest" line="34">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230320 06:33:33.229" endtime="20230320 06:33:33.233"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230320 06:33:33.234" level="INFO">${random} = MdFIiuWAwx</msg>
<status status="PASS" starttime="20230320 06:33:33.233" endtime="20230320 06:33:33.234"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:33:33.246" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p MdFIiuWAwx  2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:33:50.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:33:50.788" level="INFO">${output} = 2023-03-20 06:33:38,833 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-03-20 06:33:39,120 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230320 06:33:33.239" endtime="20230320 06:33:50.788"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:33:50.790" level="INFO">2023-03-20 06:33:38,833 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-03-20 06:33:39,120 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-03-20 06:33:39,120 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-03-20 06:33:39,492 [main] INFO freon.BaseFreonGenerator: Executing test with prefix MdFIiuWAwx and number-of-tests 1
2023-03-20 06:33:39,744 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-20 06:33:40,747 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-20 06:33:41,748 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-20 06:33:42,265 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2023-03-20 06:33:42,652 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2023-03-20 06:33:42,749 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-20 06:33:43,750 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-20 06:33:44,503 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-03-20 06:33:44,750 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-20 06:33:45,202 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-03-20 06:33:45,752 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-20 06:33:46,754 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-20 06:33:47,754 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-20 06:33:48,756 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-20 06:33:49,757 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-03-20 06:33:50,115 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=6858.872786, max=6858.872786, mean=6858.872786, stddev=0.0, median=6858.872786, p75=6858.872786, p95=6858.872786, p98=6858.872786, p99=6858.872786, p999=6858.872786, mean_rate=0.1368511106568597, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-03-20 06:33:50,146 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 10
2023-03-20 06:33:50,151 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-03-20 06:33:50,151 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230320 06:33:50.789" endtime="20230320 06:33:50.790"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:33:50.791" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:33:50.790" endtime="20230320 06:33:50.791"/>
</kw>
<status status="PASS" starttime="20230320 06:33:33.238" endtime="20230320 06:33:50.791"/>
</kw>
<msg timestamp="20230320 06:33:50.792" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:33:33.237" endtime="20230320 06:33:50.793"/>
</kw>
<msg timestamp="20230320 06:33:50.793" level="INFO">${result} = 2023-03-20 06:33:38,833 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-03-20 06:33:39,120 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230320 06:33:33.236" endtime="20230320 06:33:50.793"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:33:50.793" endtime="20230320 06:33:50.794"/>
</kw>
<status status="PASS" starttime="20230320 06:33:33.234" endtime="20230320 06:33:50.794"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:33:50.801" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p MdFIiuWAwx  2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:34:03.255" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:34:03.255" level="INFO">${output} = 2023-03-20 06:33:55,348 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-03-20 06:33:55,702 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230320 06:33:50.798" endtime="20230320 06:34:03.255"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:34:03.257" level="INFO">2023-03-20 06:33:55,348 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-03-20 06:33:55,702 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-03-20 06:33:55,702 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-03-20 06:33:55,998 [main] INFO freon.BaseFreonGenerator: Executing test with prefix MdFIiuWAwx and number-of-tests 1
2023-03-20 06:33:56,159 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-20 06:33:57,163 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-20 06:33:58,163 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-20 06:33:59,164 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-20 06:33:59,702 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-03-20 06:34:00,175 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-20 06:34:01,176 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-20 06:34:02,176 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-03-20 06:34:02,844 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=123.913784, max=123.913784, mean=123.913784, stddev=0.0, median=123.913784, p75=123.913784, p95=123.913784, p98=123.913784, p99=123.913784, p999=123.913784, mean_rate=0.9017460180814306, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-03-20 06:34:02,853 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 7
2023-03-20 06:34:02,856 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-03-20 06:34:02,856 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230320 06:34:03.256" endtime="20230320 06:34:03.257"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:34:03.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:34:03.257" endtime="20230320 06:34:03.258"/>
</kw>
<status status="PASS" starttime="20230320 06:33:50.797" endtime="20230320 06:34:03.258"/>
</kw>
<msg timestamp="20230320 06:34:03.258" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:33:50.797" endtime="20230320 06:34:03.259"/>
</kw>
<msg timestamp="20230320 06:34:03.259" level="INFO">${result} = 2023-03-20 06:33:55,348 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-03-20 06:33:55,702 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230320 06:33:50.796" endtime="20230320 06:34:03.259"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:34:03.260" endtime="20230320 06:34:03.260"/>
</kw>
<status status="PASS" starttime="20230320 06:33:50.794" endtime="20230320 06:34:03.260"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230320 06:33:33.224" endtime="20230320 06:34:03.261"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230320 06:33:32.918" endtime="20230320 06:34:03.264"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="200927"/>
</suite>
<statistics>
<total>
<stat pass="31" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="31" fail="0" skip="0" id="s1" name="ozone-topology">ozone-topology</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1" name="Cli">ozone-topology.Cli</stat>
<stat pass="23" fail="0" skip="0" id="s1-s2" name="Recon">ozone-topology.Recon</stat>
<stat pass="7" fail="0" skip="0" id="s1-s2-s1" name="Recon-Api">ozone-topology.Recon.Recon-Api</stat>
<stat pass="16" fail="0" skip="0" id="s1-s2-s2" name="Recon-Nssummary">ozone-topology.Recon.Recon-Nssummary</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Loaddata">ozone-topology.Loaddata</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="readdata-first-half">ozone-topology.readdata-first-half</stat>
<stat pass="2" fail="0" skip="0" id="s1-s5" name="Basic">ozone-topology.Basic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
