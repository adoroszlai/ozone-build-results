<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.0.2 (Python 3.8.10 on linux)" generated="20230320 06:30:57.106" rpa="false" schemaversion="3">
<suite id="s1" name="ozone-om-prepare">
<suite id="s1-s1" name="Om-Cancel-Prepare" source="/opt/hadoop/smoketest/omha/om-cancel-prepare.robot">
<kw name="Generate volume and bucket names" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230320 06:24:17.673" level="INFO">${random} = 52905</msg>
<status status="PASS" starttime="20230320 06:24:17.673" endtime="20230320 06:24:17.673"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-cancel</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230320 06:24:17.676" level="INFO">${volume_name} = 52905-volume-for-cancel</msg>
<status status="PASS" starttime="20230320 06:24:17.674" endtime="20230320 06:24:17.676"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-cancel</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230320 06:24:17.678" level="INFO">${bucket_name} = 52905-bucket-for-cancel</msg>
<status status="PASS" starttime="20230320 06:24:17.676" endtime="20230320 06:24:17.678"/>
</kw>
<status status="PASS" starttime="20230320 06:24:17.672" endtime="20230320 06:24:17.678"/>
</kw>
<test id="s1-s1-t1" name="Cancel Ozone Manager Prepare" line="33">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230320 06:24:17.680" endtime="20230320 06:24:17.681"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om cancelprepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:24:17.690" level="INFO">Running command 'ozone admin om cancelprepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:24:21.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:24:21.842" level="INFO">${output} = com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3[om3/10.9.0...</msg>
<status status="PASS" starttime="20230320 06:24:17.682" endtime="20230320 06:24:21.842"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:24:21.844" level="INFO">com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3[om3/10.9.0.16].
	at org.apache.hadoop.ozone.om.OzoneManager.checkLeaderStatus(OzoneManager.java:3954)
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.checkLeaderStatus(OzoneManagerRatisUtils.java:451)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:183)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:147)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:465)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:578)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:556)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1043)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:971)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2976)
, while invoking $Proxy20.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20230320 06:24:21.843" endtime="20230320 06:24:21.844"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:24:21.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:24:21.844" endtime="20230320 06:24:21.845"/>
</kw>
<status status="PASS" starttime="20230320 06:24:17.682" endtime="20230320 06:24:21.846"/>
</kw>
<msg timestamp="20230320 06:24:21.846" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:24:17.681" endtime="20230320 06:24:21.847"/>
</kw>
<msg timestamp="20230320 06:24:21.848" level="INFO">${result} = com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3[om3/10.9.0...</msg>
<status status="PASS" starttime="20230320 06:24:17.681" endtime="20230320 06:24:21.848"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>5sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Cancel prepare succeeded</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Cancel prepare succeeded</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:24:21.849" endtime="20230320 06:24:21.849"/>
</kw>
<status status="PASS" starttime="20230320 06:24:21.848" endtime="20230320 06:24:21.849"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230320 06:24:17.679" endtime="20230320 06:24:21.849"/>
</test>
<test id="s1-s1-t2" name="Test write operations" line="37">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230320 06:24:21.852" endtime="20230320 06:24:21.852"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:24:21.857" level="INFO">Running command 'ozone sh volume create /52905-volume-for-cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:24:25.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:24:25.863" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230320 06:24:21.854" endtime="20230320 06:24:25.863"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:24:25.865" level="INFO"/>
<status status="PASS" starttime="20230320 06:24:25.864" endtime="20230320 06:24:25.865"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:24:25.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:24:25.865" endtime="20230320 06:24:25.866"/>
</kw>
<status status="PASS" starttime="20230320 06:24:21.854" endtime="20230320 06:24:25.867"/>
</kw>
<msg timestamp="20230320 06:24:25.867" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:24:21.853" endtime="20230320 06:24:25.867"/>
</kw>
<status status="PASS" starttime="20230320 06:24:21.853" endtime="20230320 06:24:25.867"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:24:25.875" level="INFO">Running command 'ozone sh bucket create /52905-volume-for-cancel/52905-bucket-for-cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:24:29.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:24:29.828" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230320 06:24:25.871" endtime="20230320 06:24:29.828"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:24:29.830" level="INFO"/>
<status status="PASS" starttime="20230320 06:24:29.829" endtime="20230320 06:24:29.831"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:24:29.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:24:29.831" endtime="20230320 06:24:29.832"/>
</kw>
<status status="PASS" starttime="20230320 06:24:25.870" endtime="20230320 06:24:29.832"/>
</kw>
<msg timestamp="20230320 06:24:29.832" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:24:25.869" endtime="20230320 06:24:29.833"/>
</kw>
<status status="PASS" starttime="20230320 06:24:25.868" endtime="20230320 06:24:29.833"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/cancel-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:24:29.838" level="INFO">Running command 'ozone sh key put /52905-volume-for-cancel/52905-bucket-for-cancel/cancel-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:24:36.987" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:24:36.987" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230320 06:24:29.835" endtime="20230320 06:24:36.988"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:24:36.989" level="INFO"/>
<status status="PASS" starttime="20230320 06:24:36.988" endtime="20230320 06:24:36.989"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:24:36.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:24:36.990" endtime="20230320 06:24:36.990"/>
</kw>
<status status="PASS" starttime="20230320 06:24:29.834" endtime="20230320 06:24:36.991"/>
</kw>
<msg timestamp="20230320 06:24:36.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:24:29.834" endtime="20230320 06:24:36.992"/>
</kw>
<msg timestamp="20230320 06:24:36.992" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230320 06:24:29.833" endtime="20230320 06:24:36.992"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/cancel-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:24:36.997" level="INFO">Running command 'ozone sh key info /52905-volume-for-cancel/52905-bucket-for-cancel/cancel-key 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:24:41.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:24:41.318" level="INFO">${output} = {
  "volumeName" : "52905-volume-for-cancel",
  "bucketName" : "52905-bucket-for-cancel",
  "name" : "cancel-key",
  "dataSize" : 17539,
  "creationTime" : "2023-03-20T06:24:33.750Z",
  "modificationT...</msg>
<status status="PASS" starttime="20230320 06:24:36.994" endtime="20230320 06:24:41.318"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:24:41.319" level="INFO">{
  "volumeName" : "52905-volume-for-cancel",
  "bucketName" : "52905-bucket-for-cancel",
  "name" : "cancel-key",
  "dataSize" : 17539,
  "creationTime" : "2023-03-20T06:24:33.750Z",
  "modificationTime" : "2023-03-20T06:24:36.579Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 2,
    "localID" : 111677748019200103,
    "length" : 17539,
    "offset" : 0,
    "keyOffset" : 0
  } ]
}</msg>
<status status="PASS" starttime="20230320 06:24:41.318" endtime="20230320 06:24:41.320"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:24:41.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:24:41.320" endtime="20230320 06:24:41.321"/>
</kw>
<status status="PASS" starttime="20230320 06:24:36.994" endtime="20230320 06:24:41.321"/>
</kw>
<msg timestamp="20230320 06:24:41.321" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:24:36.993" endtime="20230320 06:24:41.322"/>
</kw>
<msg timestamp="20230320 06:24:41.322" level="INFO">${result} = {
  "volumeName" : "52905-volume-for-cancel",
  "bucketName" : "52905-bucket-for-cancel",
  "name" : "cancel-key",
  "dataSize" : 17539,
  "creationTime" : "2023-03-20T06:24:33.750Z",
  "modificationT...</msg>
<status status="PASS" starttime="20230320 06:24:36.993" endtime="20230320 06:24:41.322"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"cancel-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:24:41.323" endtime="20230320 06:24:41.323"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230320 06:24:21.851" endtime="20230320 06:24:41.324"/>
</test>
<doc>Smoke test for ozone manager cancel prepare</doc>
<status status="PASS" starttime="20230320 06:24:17.603" endtime="20230320 06:24:41.326"/>
</suite>
<suite id="s1-s2" name="Om-Prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Create Specific OM data for prepare" type="SETUP">
<kw name="Freon OCKG" library="freon">
<arg>prefix=om-prepare</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:24:48.202" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p om-prepare  2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:25:12.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:25:12.524" level="INFO">${output} = 2023-03-20 06:24:50,412 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-03-20 06:24:50,638 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230320 06:24:48.197" endtime="20230320 06:25:12.524"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:25:12.525" level="INFO">2023-03-20 06:24:50,412 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-03-20 06:24:50,638 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-03-20 06:24:50,638 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-03-20 06:24:50,879 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2023-03-20 06:24:51,009 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-03-20 06:24:51,784 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3[om3/10.9.0.16].
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:245)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:232)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:225)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:177)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:147)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:465)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:578)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:556)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1043)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:971)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2976)
, while invoking $Proxy23.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2023-03-20 06:24:52,011 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-03-20 06:24:53,020 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-03-20 06:24:53,227 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-03-20 06:24:53,707 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-03-20 06:24:54,021 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-03-20 06:24:55,027 [Thread-3] INFO freon.ProgressBar: Progress: 1.00 % (1 out of 100)
2023-03-20 06:24:56,029 [Thread-3] INFO freon.ProgressBar: Progress: 7.00 % (7 out of 100)
2023-03-20 06:24:57,032 [Thread-3] INFO freon.ProgressBar: Progress: 14.00 % (14 out of 100)
2023-03-20 06:24:58,032 [Thread-3] INFO freon.ProgressBar: Progress: 22.00 % (22 out of 100)
2023-03-20 06:24:59,033 [Thread-3] INFO freon.ProgressBar: Progress: 29.00 % (29 out of 100)
2023-03-20 06:25:00,033 [Thread-3] INFO freon.ProgressBar: Progress: 35.00 % (35 out of 100)
2023-03-20 06:25:01,034 [Thread-3] INFO freon.ProgressBar: Progress: 35.00 % (35 out of 100)
2023-03-20 06:25:02,034 [Thread-3] INFO freon.ProgressBar: Progress: 35.00 % (35 out of 100)
2023-03-20 06:25:03,035 [Thread-3] INFO freon.ProgressBar: Progress: 40.00 % (40 out of 100)
2023-03-20 06:25:04,036 [Thread-3] INFO freon.ProgressBar: Progress: 49.00 % (49 out of 100)
2023-03-20 06:25:05,037 [Thread-3] INFO freon.ProgressBar: Progress: 52.00 % (52 out of 100)
2023-03-20 06:25:06,037 [Thread-3] INFO freon.ProgressBar: Progress: 52.00 % (52 out of 100)
2023-03-20 06:25:07,038 [Thread-3] INFO freon.ProgressBar: Progress: 53.00 % (53 out of 100)
2023-03-20 06:25:08,041 [Thread-3] INFO freon.ProgressBar: Progress: 62.00 % (62 out of 100)
2023-03-20 06:25:09,041 [Thread-3] INFO freon.ProgressBar: Progress: 71.00 % (71 out of 100)
2023-03-20 06:25:10,043 [Thread-3] INFO freon.ProgressBar: Progress: 81.00 % (81 out of 100)
2023-03-20 06:25:11,045 [Thread-3] INFO freon.ProgressBar: Progress: 89.00 % (89 out of 100)
2023-03-20 06:25:12,052 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-03-20 06:25:12,165 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=73.119821, max=2821.024541, mean=194.69657789884323, stddev=427.4838592772055, median=114.942876, p75=144.141425, p95=196.253273, p98=2611.842794, p99=2618.808851, p999=2821.024541, mean_rate=4.965662207976622, m1=3.4653192167101907, m5=2.941168324587146, m15=2.8475350493986675, rate_unit=events/second, duration_unit=milliseconds
2023-03-20 06:25:12,166 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 21
2023-03-20 06:25:12,167 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-03-20 06:25:12,167 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20230320 06:25:12.525" endtime="20230320 06:25:12.526"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:25:12.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:25:12.526" endtime="20230320 06:25:12.527"/>
</kw>
<status status="PASS" starttime="20230320 06:24:48.197" endtime="20230320 06:25:12.527"/>
</kw>
<msg timestamp="20230320 06:25:12.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:24:48.196" endtime="20230320 06:25:12.529"/>
</kw>
<msg timestamp="20230320 06:25:12.529" level="INFO">${result} = 2023-03-20 06:24:50,412 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-03-20 06:24:50,638 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230320 06:24:48.195" endtime="20230320 06:25:12.529"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:25:12.530" endtime="20230320 06:25:12.530"/>
</kw>
<status status="PASS" starttime="20230320 06:24:48.194" endtime="20230320 06:25:12.530"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230320 06:25:12.531" level="INFO">${random} = 77957</msg>
<status status="PASS" starttime="20230320 06:25:12.531" endtime="20230320 06:25:12.531"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230320 06:25:12.533" level="INFO">${volume_name} = 77957-volume-for-prepare</msg>
<status status="PASS" starttime="20230320 06:25:12.531" endtime="20230320 06:25:12.533"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230320 06:25:12.535" level="INFO">${bucket_name} = 77957-bucket-for-prepare</msg>
<status status="PASS" starttime="20230320 06:25:12.533" endtime="20230320 06:25:12.535"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:25:12.540" level="INFO">Running command 'ozone sh volume create /77957-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:25:16.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:25:16.279" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230320 06:25:12.537" endtime="20230320 06:25:16.279"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:25:16.280" level="INFO"/>
<status status="PASS" starttime="20230320 06:25:16.280" endtime="20230320 06:25:16.280"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:25:16.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:25:16.281" endtime="20230320 06:25:16.281"/>
</kw>
<status status="PASS" starttime="20230320 06:25:12.537" endtime="20230320 06:25:16.282"/>
</kw>
<msg timestamp="20230320 06:25:16.282" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:25:12.536" endtime="20230320 06:25:16.282"/>
</kw>
<status status="PASS" starttime="20230320 06:25:12.535" endtime="20230320 06:25:16.282"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:25:16.287" level="INFO">Running command 'ozone sh bucket create /77957-volume-for-prepare/77957-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:25:20.316" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:25:20.316" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230320 06:25:16.284" endtime="20230320 06:25:20.316"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:25:20.317" level="INFO"/>
<status status="PASS" starttime="20230320 06:25:20.317" endtime="20230320 06:25:20.318"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:25:20.318" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:25:20.318" endtime="20230320 06:25:20.318"/>
</kw>
<status status="PASS" starttime="20230320 06:25:16.284" endtime="20230320 06:25:20.319"/>
</kw>
<msg timestamp="20230320 06:25:20.319" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:25:16.283" endtime="20230320 06:25:20.320"/>
</kw>
<status status="PASS" starttime="20230320 06:25:16.283" endtime="20230320 06:25:20.320"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:25:20.325" level="INFO">Running command 'ozone sh key put /77957-volume-for-prepare/77957-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:25:27.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:25:27.512" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230320 06:25:20.322" endtime="20230320 06:25:27.512"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:25:27.513" level="INFO"/>
<status status="PASS" starttime="20230320 06:25:27.512" endtime="20230320 06:25:27.513"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:25:27.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:25:27.513" endtime="20230320 06:25:27.514"/>
</kw>
<status status="PASS" starttime="20230320 06:25:20.322" endtime="20230320 06:25:27.514"/>
</kw>
<msg timestamp="20230320 06:25:27.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:25:20.321" endtime="20230320 06:25:27.515"/>
</kw>
<status status="PASS" starttime="20230320 06:25:20.320" endtime="20230320 06:25:27.515"/>
</kw>
<status status="PASS" starttime="20230320 06:24:48.193" endtime="20230320 06:25:27.516"/>
</kw>
<test id="s1-s2-t1" name="Prepare Ozone Manager" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230320 06:25:27.519" endtime="20230320 06:25:27.519"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:25:27.528" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:25:36.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:25:36.603" level="INFO">${output} = com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3[om3/10.9.0...</msg>
<status status="PASS" starttime="20230320 06:25:27.524" endtime="20230320 06:25:36.603"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:25:36.605" level="INFO">com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3[om3/10.9.0.16].
	at org.apache.hadoop.ozone.om.OzoneManager.checkLeaderStatus(OzoneManager.java:3954)
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.checkLeaderStatus(OzoneManagerRatisUtils.java:451)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:183)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:147)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:465)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:578)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:556)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1043)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:971)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2976)
, while invoking $Proxy20.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
Ozone Manager Prepare Request successfully returned with Transaction Id : [837].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [837]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [837]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [837]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20230320 06:25:36.603" endtime="20230320 06:25:36.605"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:25:36.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:25:36.605" endtime="20230320 06:25:36.606"/>
</kw>
<status status="PASS" starttime="20230320 06:25:27.521" endtime="20230320 06:25:36.606"/>
</kw>
<msg timestamp="20230320 06:25:36.607" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:25:27.520" endtime="20230320 06:25:36.607"/>
</kw>
<msg timestamp="20230320 06:25:36.608" level="INFO">${result} = com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3[om3/10.9.0...</msg>
<status status="PASS" starttime="20230320 06:25:27.519" endtime="20230320 06:25:36.608"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:25:36.609" endtime="20230320 06:25:36.609"/>
</kw>
<status status="PASS" starttime="20230320 06:25:36.608" endtime="20230320 06:25:36.609"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230320 06:25:27.517" endtime="20230320 06:25:36.610"/>
</test>
<test id="s1-s2-t2" name="Checks if the expected data is present in OM" line="43">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230320 06:25:36.613" endtime="20230320 06:25:36.613"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:25:36.618" level="INFO">Running command 'ozone sh key info /77957-volume-for-prepare/77957-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:25:40.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:25:40.377" level="INFO">${output} = {
  "volumeName" : "77957-volume-for-prepare",
  "bucketName" : "77957-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17539,
  "creationTime" : "2023-03-20T06:25:24.489Z",
  "modificati...</msg>
<status status="PASS" starttime="20230320 06:25:36.615" endtime="20230320 06:25:40.377"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:25:40.378" level="INFO">{
  "volumeName" : "77957-volume-for-prepare",
  "bucketName" : "77957-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17539,
  "creationTime" : "2023-03-20T06:25:24.489Z",
  "modificationTime" : "2023-03-20T06:25:27.115Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 4,
    "localID" : 111677748019200204,
    "length" : 17539,
    "offset" : 0,
    "keyOffset" : 0
  } ]
}</msg>
<status status="PASS" starttime="20230320 06:25:40.378" endtime="20230320 06:25:40.379"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:25:40.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:25:40.379" endtime="20230320 06:25:40.380"/>
</kw>
<status status="PASS" starttime="20230320 06:25:36.615" endtime="20230320 06:25:40.380"/>
</kw>
<msg timestamp="20230320 06:25:40.380" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:25:36.614" endtime="20230320 06:25:40.381"/>
</kw>
<msg timestamp="20230320 06:25:40.381" level="INFO">${result} = {
  "volumeName" : "77957-volume-for-prepare",
  "bucketName" : "77957-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17539,
  "creationTime" : "2023-03-20T06:25:24.489Z",
  "modificati...</msg>
<status status="PASS" starttime="20230320 06:25:36.613" endtime="20230320 06:25:40.381"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:25:40.381" endtime="20230320 06:25:40.382"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230320 06:25:36.611" endtime="20230320 06:25:40.382"/>
</test>
<test id="s1-s2-t3" name="Test write operation fails" line="47">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230320 06:25:40.386" endtime="20230320 06:25:40.386"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:25:40.390" level="INFO">Running command 'ozone sh key put /77957-volume-for-prepare/77957-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:25:44.154" level="INFO">${rc} = 255</msg>
<msg timestamp="20230320 06:25:44.154" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230320 06:25:40.387" endtime="20230320 06:25:44.154"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:25:44.155" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230320 06:25:44.154" endtime="20230320 06:25:44.155"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:25:44.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:25:44.156" endtime="20230320 06:25:44.156"/>
</kw>
<msg timestamp="20230320 06:25:44.157" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230320 06:25:40.386" endtime="20230320 06:25:44.157"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:25:44.157" endtime="20230320 06:25:44.158"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:25:44.162" level="INFO">Running command 'ozone sh key info /77957-volume-for-prepare/77957-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:25:48.146" level="INFO">${rc} = 255</msg>
<msg timestamp="20230320 06:25:48.146" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20230320 06:25:44.159" endtime="20230320 06:25:48.146"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:25:48.148" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20230320 06:25:48.146" endtime="20230320 06:25:48.148"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:25:48.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:25:48.148" endtime="20230320 06:25:48.149"/>
</kw>
<status status="PASS" starttime="20230320 06:25:44.158" endtime="20230320 06:25:48.149"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230320 06:25:40.384" endtime="20230320 06:25:48.150"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="PASS" starttime="20230320 06:24:48.110" endtime="20230320 06:25:48.152"/>
</suite>
<suite id="s1-s3" name="Om-Prepared" source="/opt/hadoop/smoketest/omha/om-prepared.robot">
<test id="s1-s3-t1" name="Test create volume fails" line="26">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230320 06:25:55.079" endtime="20230320 06:25:55.079"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230320 06:25:55.080" level="INFO">${random} = 69562</msg>
<status status="PASS" starttime="20230320 06:25:55.080" endtime="20230320 06:25:55.080"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230320 06:25:55.082" level="INFO">${volume_name} = 69562-volume-for-prepare</msg>
<status status="PASS" starttime="20230320 06:25:55.081" endtime="20230320 06:25:55.082"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:25:55.088" level="INFO">Running command 'ozone sh volume create /69562-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:25:58.958" level="INFO">${rc} = 255</msg>
<msg timestamp="20230320 06:25:58.959" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230320 06:25:55.083" endtime="20230320 06:25:58.959"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:25:58.961" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230320 06:25:58.959" endtime="20230320 06:25:58.961"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:25:58.962" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:25:58.961" endtime="20230320 06:25:58.962"/>
</kw>
<msg timestamp="20230320 06:25:58.963" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230320 06:25:55.082" endtime="20230320 06:25:58.963"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:25:58.963" endtime="20230320 06:25:58.964"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:25:58.968" level="INFO">Running command 'ozone sh volume info /69562-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:26:02.513" level="INFO">${rc} = 255</msg>
<msg timestamp="20230320 06:26:02.514" level="INFO">${output} = VOLUME_NOT_FOUND Volume 69562-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230320 06:25:58.965" endtime="20230320 06:26:02.514"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:26:02.515" level="INFO">VOLUME_NOT_FOUND Volume 69562-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230320 06:26:02.514" endtime="20230320 06:26:02.516"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:26:02.516" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:26:02.516" endtime="20230320 06:26:02.517"/>
</kw>
<msg timestamp="20230320 06:26:02.517" level="INFO">${result} = VOLUME_NOT_FOUND Volume 69562-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230320 06:25:58.964" endtime="20230320 06:26:02.517"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:26:02.517" endtime="20230320 06:26:02.518"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230320 06:25:55.077" endtime="20230320 06:26:02.519"/>
</test>
<test id="s1-s3-t2" name="Test list volumes succeeds" line="34">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230320 06:26:02.522" endtime="20230320 06:26:02.523"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:26:02.528" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:26:07.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:26:07.058" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "77957-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "...</msg>
<status status="PASS" starttime="20230320 06:26:02.525" endtime="20230320 06:26:07.058"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:26:07.060" level="INFO">[ {
  "metadata" : { },
  "name" : "77957-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-03-20T06:25:16.201Z",
  "modificationTime" : "2023-03-20T06:25:16.201Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2023-03-20T06:22:32.815Z",
  "modificationTime" : "2023-03-20T06:22:32.815Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-03-20T06:23:05.002Z",
  "modificationTime" : "2023-03-20T06:23:05.002Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "52905-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-03-20T06:24:25.782Z",
  "modificationTime" : "2023-03-20T06:24:25.782Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "33788-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-03-20T06:23:36.808Z",
  "modificationTime" : "2023-03-20T06:23:36.808Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
} ]</msg>
<status status="PASS" starttime="20230320 06:26:07.059" endtime="20230320 06:26:07.060"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:26:07.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:26:07.060" endtime="20230320 06:26:07.062"/>
</kw>
<status status="PASS" starttime="20230320 06:26:02.524" endtime="20230320 06:26:07.062"/>
</kw>
<msg timestamp="20230320 06:26:07.062" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:26:02.523" endtime="20230320 06:26:07.064"/>
</kw>
<msg timestamp="20230320 06:26:07.064" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "77957-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "...</msg>
<status status="PASS" starttime="20230320 06:26:02.523" endtime="20230320 06:26:07.064"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230320 06:26:02.521" endtime="20230320 06:26:07.065"/>
</test>
<doc>Smoke test to test that OMs are prepared in an OM HA cluster.</doc>
<status status="PASS" starttime="20230320 06:25:54.996" endtime="20230320 06:26:07.067"/>
</suite>
<suite id="s1-s4" name="Om-Prepared" source="/opt/hadoop/smoketest/omha/om-prepared.robot">
<test id="s1-s4-t1" name="Test create volume fails" line="26">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230320 06:27:59.455" endtime="20230320 06:27:59.456"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230320 06:27:59.457" level="INFO">${random} = 95861</msg>
<status status="PASS" starttime="20230320 06:27:59.456" endtime="20230320 06:27:59.457"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230320 06:27:59.459" level="INFO">${volume_name} = 95861-volume-for-prepare</msg>
<status status="PASS" starttime="20230320 06:27:59.457" endtime="20230320 06:27:59.459"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:27:59.466" level="INFO">Running command 'ozone sh volume create /95861-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:28:04.016" level="INFO">${rc} = 255</msg>
<msg timestamp="20230320 06:28:04.016" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230320 06:27:59.460" endtime="20230320 06:28:04.016"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:28:04.018" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230320 06:28:04.017" endtime="20230320 06:28:04.018"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:28:04.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:28:04.018" endtime="20230320 06:28:04.019"/>
</kw>
<msg timestamp="20230320 06:28:04.019" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230320 06:27:59.459" endtime="20230320 06:28:04.019"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:28:04.020" endtime="20230320 06:28:04.020"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:28:04.027" level="INFO">Running command 'ozone sh volume info /95861-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:28:08.365" level="INFO">${rc} = 255</msg>
<msg timestamp="20230320 06:28:08.365" level="INFO">${output} = VOLUME_NOT_FOUND Volume 95861-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230320 06:28:04.021" endtime="20230320 06:28:08.365"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:28:08.367" level="INFO">VOLUME_NOT_FOUND Volume 95861-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230320 06:28:08.366" endtime="20230320 06:28:08.367"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:28:08.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:28:08.367" endtime="20230320 06:28:08.368"/>
</kw>
<msg timestamp="20230320 06:28:08.368" level="INFO">${result} = VOLUME_NOT_FOUND Volume 95861-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230320 06:28:04.020" endtime="20230320 06:28:08.368"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:28:08.369" endtime="20230320 06:28:08.369"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230320 06:27:59.451" endtime="20230320 06:28:08.370"/>
</test>
<test id="s1-s4-t2" name="Test list volumes succeeds" line="34">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230320 06:28:08.373" endtime="20230320 06:28:08.373"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:28:08.379" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:28:13.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:28:13.218" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "77957-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "...</msg>
<status status="PASS" starttime="20230320 06:28:08.376" endtime="20230320 06:28:13.218"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:28:13.219" level="INFO">[ {
  "metadata" : { },
  "name" : "77957-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-03-20T06:25:16.201Z",
  "modificationTime" : "2023-03-20T06:25:16.201Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2023-03-20T06:22:32.815Z",
  "modificationTime" : "2023-03-20T06:22:32.815Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-03-20T06:23:05.002Z",
  "modificationTime" : "2023-03-20T06:23:05.002Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "52905-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-03-20T06:24:25.782Z",
  "modificationTime" : "2023-03-20T06:24:25.782Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "33788-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-03-20T06:23:36.808Z",
  "modificationTime" : "2023-03-20T06:23:36.808Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
} ]</msg>
<status status="PASS" starttime="20230320 06:28:13.218" endtime="20230320 06:28:13.220"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:28:13.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:28:13.220" endtime="20230320 06:28:13.221"/>
</kw>
<status status="PASS" starttime="20230320 06:28:08.375" endtime="20230320 06:28:13.222"/>
</kw>
<msg timestamp="20230320 06:28:13.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:28:08.374" endtime="20230320 06:28:13.228"/>
</kw>
<msg timestamp="20230320 06:28:13.229" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "77957-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "...</msg>
<status status="PASS" starttime="20230320 06:28:08.373" endtime="20230320 06:28:13.229"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230320 06:28:08.371" endtime="20230320 06:28:13.229"/>
</test>
<doc>Smoke test to test that OMs are prepared in an OM HA cluster.</doc>
<status status="PASS" starttime="20230320 06:27:59.380" endtime="20230320 06:28:13.231"/>
</suite>
<suite id="s1-s5" name="Loaddata" source="/opt/hadoop/smoketest/topology/loaddata.robot">
<test id="s1-s5-t1" name="Create a volume, bucket and key" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create topvol1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:30:04.955" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:30:09.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:30:09.724" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230320 06:30:04.949" endtime="20230320 06:30:09.724"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:30:09.725" level="INFO"/>
<status status="PASS" starttime="20230320 06:30:09.724" endtime="20230320 06:30:09.725"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:30:09.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:30:09.726" endtime="20230320 06:30:09.726"/>
</kw>
<status status="PASS" starttime="20230320 06:30:04.948" endtime="20230320 06:30:09.727"/>
</kw>
<msg timestamp="20230320 06:30:09.727" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:30:04.947" endtime="20230320 06:30:09.737"/>
</kw>
<msg timestamp="20230320 06:30:09.737" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230320 06:30:04.947" endtime="20230320 06:30:09.738"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:30:09.738" endtime="20230320 06:30:09.745"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:30:09.753" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:30:15.283" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:30:15.283" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230320 06:30:09.748" endtime="20230320 06:30:15.283"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:30:15.285" level="INFO"/>
<status status="PASS" starttime="20230320 06:30:15.284" endtime="20230320 06:30:15.285"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:30:15.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:30:15.286" endtime="20230320 06:30:15.286"/>
</kw>
<status status="PASS" starttime="20230320 06:30:09.747" endtime="20230320 06:30:15.287"/>
</kw>
<msg timestamp="20230320 06:30:15.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:30:09.746" endtime="20230320 06:30:15.288"/>
</kw>
<msg timestamp="20230320 06:30:15.291" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230320 06:30:09.745" endtime="20230320 06:30:15.291"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:30:15.291" endtime="20230320 06:30:15.292"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:30:15.298" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:30:24.914" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:30:24.914" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230320 06:30:15.294" endtime="20230320 06:30:24.914"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:30:24.916" level="INFO"/>
<status status="PASS" starttime="20230320 06:30:24.915" endtime="20230320 06:30:24.916"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:30:24.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:30:24.916" endtime="20230320 06:30:24.917"/>
</kw>
<status status="PASS" starttime="20230320 06:30:15.293" endtime="20230320 06:30:24.917"/>
</kw>
<msg timestamp="20230320 06:30:24.917" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:30:15.293" endtime="20230320 06:30:24.918"/>
</kw>
<msg timestamp="20230320 06:30:24.919" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230320 06:30:15.292" endtime="20230320 06:30:24.919"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:30:24.919" endtime="20230320 06:30:24.919"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230320 06:30:04.945" endtime="20230320 06:30:24.920"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230320 06:30:04.851" endtime="20230320 06:30:24.922"/>
</suite>
<suite id="s1-s6" name="Readdata" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s6-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230320 06:30:31.757" level="INFO">${random} = 24443</msg>
<status status="PASS" starttime="20230320 06:30:31.756" endtime="20230320 06:30:31.757"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:30:31.764" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-24443 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:30:38.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:30:38.787" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230320 06:30:31.759" endtime="20230320 06:30:38.787"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:30:38.788" level="INFO"/>
<status status="PASS" starttime="20230320 06:30:38.787" endtime="20230320 06:30:38.788"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:30:38.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:30:38.789" endtime="20230320 06:30:38.789"/>
</kw>
<status status="PASS" starttime="20230320 06:30:31.759" endtime="20230320 06:30:38.790"/>
</kw>
<msg timestamp="20230320 06:30:38.790" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:30:31.758" endtime="20230320 06:30:38.792"/>
</kw>
<msg timestamp="20230320 06:30:38.793" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230320 06:30:31.757" endtime="20230320 06:30:38.793"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:30:38.793" endtime="20230320 06:30:38.793"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230320 06:30:31.755" endtime="20230320 06:30:38.794"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230320 06:30:31.684" endtime="20230320 06:30:38.796"/>
</suite>
<suite id="s1-s7" name="Om-Prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Create Specific OM data for prepare" type="SETUP">
<kw name="Freon OCKG" library="freon">
<arg>prefix=om-prepare</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:23:00.650" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p om-prepare  2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:23:32.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:23:32.981" level="INFO">${output} = 2023-03-20 06:23:03,183 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-03-20 06:23:03,488 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230320 06:23:00.645" endtime="20230320 06:23:32.981"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:23:32.983" level="INFO">2023-03-20 06:23:03,183 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-03-20 06:23:03,488 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-03-20 06:23:03,488 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-03-20 06:23:03,741 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2023-03-20 06:23:03,824 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-03-20 06:23:04,659 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3[om3/10.9.0.16].
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:245)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:232)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:225)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:177)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:147)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:465)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:578)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:556)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1043)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:971)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2976)
, while invoking $Proxy23.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2023-03-20 06:23:04,828 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-03-20 06:23:04,983 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2023-03-20 06:23:05,241 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2023-03-20 06:23:05,837 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-03-20 06:23:06,838 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-03-20 06:23:07,221 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-03-20 06:23:07,659 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-03-20 06:23:07,838 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-03-20 06:23:08,840 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-03-20 06:23:09,840 [Thread-3] INFO freon.ProgressBar: Progress: 1.00 % (1 out of 100)
2023-03-20 06:23:10,841 [Thread-3] INFO freon.ProgressBar: Progress: 5.00 % (5 out of 100)
2023-03-20 06:23:11,842 [Thread-3] INFO freon.ProgressBar: Progress: 8.00 % (8 out of 100)
2023-03-20 06:23:12,845 [Thread-3] INFO freon.ProgressBar: Progress: 14.00 % (14 out of 100)
2023-03-20 06:23:13,846 [Thread-3] INFO freon.ProgressBar: Progress: 19.00 % (19 out of 100)
2023-03-20 06:23:14,848 [Thread-3] INFO freon.ProgressBar: Progress: 24.00 % (24 out of 100)
2023-03-20 06:23:15,848 [Thread-3] INFO freon.ProgressBar: Progress: 29.00 % (29 out of 100)
2023-03-20 06:23:16,849 [Thread-3] INFO freon.ProgressBar: Progress: 29.00 % (29 out of 100)
2023-03-20 06:23:17,850 [Thread-3] INFO freon.ProgressBar: Progress: 29.00 % (29 out of 100)
2023-03-20 06:23:18,850 [Thread-3] INFO freon.ProgressBar: Progress: 33.00 % (33 out of 100)
2023-03-20 06:23:19,868 [Thread-3] INFO freon.ProgressBar: Progress: 39.00 % (39 out of 100)
2023-03-20 06:23:20,869 [Thread-3] INFO freon.ProgressBar: Progress: 44.00 % (44 out of 100)
2023-03-20 06:23:21,869 [Thread-3] INFO freon.ProgressBar: Progress: 49.00 % (49 out of 100)
2023-03-20 06:23:22,870 [Thread-3] INFO freon.ProgressBar: Progress: 56.00 % (56 out of 100)
2023-03-20 06:23:23,871 [Thread-3] INFO freon.ProgressBar: Progress: 62.00 % (62 out of 100)
2023-03-20 06:23:24,882 [Thread-3] INFO freon.ProgressBar: Progress: 68.00 % (68 out of 100)
2023-03-20 06:23:25,884 [Thread-3] INFO freon.ProgressBar: Progress: 70.00 % (70 out of 100)
2023-03-20 06:23:26,885 [Thread-3] INFO freon.ProgressBar: Progress: 70.00 % (70 out of 100)
2023-03-20 06:23:27,888 [Thread-3] INFO freon.ProgressBar: Progress: 72.00 % (72 out of 100)
2023-03-20 06:23:28,888 [Thread-3] INFO freon.ProgressBar: Progress: 79.00 % (79 out of 100)
2023-03-20 06:23:29,889 [Thread-3] INFO freon.ProgressBar: Progress: 86.00 % (86 out of 100)
2023-03-20 06:23:30,890 [Thread-3] INFO freon.ProgressBar: Progress: 93.00 % (93 out of 100)
2023-03-20 06:23:31,891 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-03-20 06:23:32,581 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=108.830497, max=4272.864924, mean=255.62552262396736, stddev=509.04093621344316, median=164.381161, p75=191.864921, p95=344.541096, p98=2626.747254, p99=2654.086599, p999=4272.864924, mean_rate=3.6770442437725794, m1=1.6476373667357986, m5=0.8385703825941868, m15=0.6813092666882055, rate_unit=events/second, duration_unit=milliseconds
2023-03-20 06:23:32,582 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 29
2023-03-20 06:23:32,583 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-03-20 06:23:32,583 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20230320 06:23:32.982" endtime="20230320 06:23:32.983"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:23:32.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:23:32.983" endtime="20230320 06:23:32.984"/>
</kw>
<status status="PASS" starttime="20230320 06:23:00.645" endtime="20230320 06:23:32.985"/>
</kw>
<msg timestamp="20230320 06:23:32.985" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:23:00.644" endtime="20230320 06:23:32.987"/>
</kw>
<msg timestamp="20230320 06:23:32.987" level="INFO">${result} = 2023-03-20 06:23:03,183 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-03-20 06:23:03,488 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230320 06:23:00.643" endtime="20230320 06:23:32.988"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:23:32.988" endtime="20230320 06:23:32.988"/>
</kw>
<status status="PASS" starttime="20230320 06:23:00.642" endtime="20230320 06:23:32.988"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230320 06:23:32.989" level="INFO">${random} = 33788</msg>
<status status="PASS" starttime="20230320 06:23:32.989" endtime="20230320 06:23:32.989"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230320 06:23:32.991" level="INFO">${volume_name} = 33788-volume-for-prepare</msg>
<status status="PASS" starttime="20230320 06:23:32.989" endtime="20230320 06:23:32.992"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230320 06:23:32.994" level="INFO">${bucket_name} = 33788-bucket-for-prepare</msg>
<status status="PASS" starttime="20230320 06:23:32.992" endtime="20230320 06:23:32.994"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:23:32.999" level="INFO">Running command 'ozone sh volume create /33788-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:23:36.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:23:36.862" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230320 06:23:32.995" endtime="20230320 06:23:36.862"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:23:36.863" level="INFO"/>
<status status="PASS" starttime="20230320 06:23:36.863" endtime="20230320 06:23:36.863"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:23:36.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:23:36.864" endtime="20230320 06:23:36.864"/>
</kw>
<status status="PASS" starttime="20230320 06:23:32.995" endtime="20230320 06:23:36.865"/>
</kw>
<msg timestamp="20230320 06:23:36.865" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:23:32.994" endtime="20230320 06:23:36.865"/>
</kw>
<status status="PASS" starttime="20230320 06:23:32.994" endtime="20230320 06:23:36.866"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:23:36.871" level="INFO">Running command 'ozone sh bucket create /33788-volume-for-prepare/33788-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:23:40.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:23:40.943" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230320 06:23:36.868" endtime="20230320 06:23:40.944"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:23:40.945" level="INFO"/>
<status status="PASS" starttime="20230320 06:23:40.944" endtime="20230320 06:23:40.945"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:23:40.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:23:40.945" endtime="20230320 06:23:40.946"/>
</kw>
<status status="PASS" starttime="20230320 06:23:36.867" endtime="20230320 06:23:40.946"/>
</kw>
<msg timestamp="20230320 06:23:40.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:23:36.867" endtime="20230320 06:23:40.947"/>
</kw>
<status status="PASS" starttime="20230320 06:23:36.866" endtime="20230320 06:23:40.947"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:23:40.952" level="INFO">Running command 'ozone sh key put /33788-volume-for-prepare/33788-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:23:48.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:23:48.578" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230320 06:23:40.950" endtime="20230320 06:23:48.578"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:23:48.579" level="INFO"/>
<status status="PASS" starttime="20230320 06:23:48.578" endtime="20230320 06:23:48.579"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:23:48.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:23:48.579" endtime="20230320 06:23:48.580"/>
</kw>
<status status="PASS" starttime="20230320 06:23:40.949" endtime="20230320 06:23:48.585"/>
</kw>
<msg timestamp="20230320 06:23:48.585" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:23:40.948" endtime="20230320 06:23:48.586"/>
</kw>
<status status="PASS" starttime="20230320 06:23:40.948" endtime="20230320 06:23:48.586"/>
</kw>
<status status="PASS" starttime="20230320 06:23:00.641" endtime="20230320 06:23:48.586"/>
</kw>
<test id="s1-s7-t1" name="Prepare Ozone Manager" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230320 06:23:48.590" endtime="20230320 06:23:48.591"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:23:48.597" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:23:58.277" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:23:58.277" level="INFO">${output} = com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3[om3/10.9.0...</msg>
<status status="PASS" starttime="20230320 06:23:48.594" endtime="20230320 06:23:58.277"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:23:58.279" level="INFO">com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3[om3/10.9.0.16].
	at org.apache.hadoop.ozone.om.OzoneManager.checkLeaderStatus(OzoneManager.java:3954)
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.checkLeaderStatus(OzoneManagerRatisUtils.java:451)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:183)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:147)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:465)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:578)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:556)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1043)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:971)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2976)
, while invoking $Proxy20.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
Ozone Manager Prepare Request successfully returned with Transaction Id : [415].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [415]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [415]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [415]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20230320 06:23:58.278" endtime="20230320 06:23:58.279"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:23:58.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:23:58.279" endtime="20230320 06:23:58.280"/>
</kw>
<status status="PASS" starttime="20230320 06:23:48.593" endtime="20230320 06:23:58.280"/>
</kw>
<msg timestamp="20230320 06:23:58.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:23:48.592" endtime="20230320 06:23:58.281"/>
</kw>
<msg timestamp="20230320 06:23:58.281" level="INFO">${result} = com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3[om3/10.9.0...</msg>
<status status="PASS" starttime="20230320 06:23:48.591" endtime="20230320 06:23:58.282"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:23:58.282" endtime="20230320 06:23:58.283"/>
</kw>
<status status="PASS" starttime="20230320 06:23:58.282" endtime="20230320 06:23:58.283"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230320 06:23:48.587" endtime="20230320 06:23:58.283"/>
</test>
<test id="s1-s7-t2" name="Checks if the expected data is present in OM" line="43">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230320 06:23:58.286" endtime="20230320 06:23:58.287"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:23:58.292" level="INFO">Running command 'ozone sh key info /33788-volume-for-prepare/33788-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:24:03.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20230320 06:24:03.116" level="INFO">${output} = {
  "volumeName" : "33788-volume-for-prepare",
  "bucketName" : "33788-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17539,
  "creationTime" : "2023-03-20T06:23:45.026Z",
  "modificati...</msg>
<status status="PASS" starttime="20230320 06:23:58.289" endtime="20230320 06:24:03.116"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:24:03.118" level="INFO">{
  "volumeName" : "33788-volume-for-prepare",
  "bucketName" : "33788-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17539,
  "creationTime" : "2023-03-20T06:23:45.026Z",
  "modificationTime" : "2023-03-20T06:23:48.130Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 4,
    "localID" : 111677748019200101,
    "length" : 17539,
    "offset" : 0,
    "keyOffset" : 0
  } ]
}</msg>
<status status="PASS" starttime="20230320 06:24:03.117" endtime="20230320 06:24:03.118"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:24:03.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:24:03.118" endtime="20230320 06:24:03.119"/>
</kw>
<status status="PASS" starttime="20230320 06:23:58.288" endtime="20230320 06:24:03.119"/>
</kw>
<msg timestamp="20230320 06:24:03.119" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230320 06:23:58.288" endtime="20230320 06:24:03.120"/>
</kw>
<msg timestamp="20230320 06:24:03.120" level="INFO">${result} = {
  "volumeName" : "33788-volume-for-prepare",
  "bucketName" : "33788-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17539,
  "creationTime" : "2023-03-20T06:23:45.026Z",
  "modificati...</msg>
<status status="PASS" starttime="20230320 06:23:58.287" endtime="20230320 06:24:03.120"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:24:03.121" endtime="20230320 06:24:03.121"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230320 06:23:58.285" endtime="20230320 06:24:03.121"/>
</test>
<test id="s1-s7-t3" name="Test write operation fails" line="47">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230320 06:24:03.124" endtime="20230320 06:24:03.124"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:24:03.128" level="INFO">Running command 'ozone sh key put /33788-volume-for-prepare/33788-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:24:06.907" level="INFO">${rc} = 255</msg>
<msg timestamp="20230320 06:24:06.907" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230320 06:24:03.125" endtime="20230320 06:24:06.907"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:24:06.909" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230320 06:24:06.908" endtime="20230320 06:24:06.909"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:24:06.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:24:06.910" endtime="20230320 06:24:06.910"/>
</kw>
<msg timestamp="20230320 06:24:06.911" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230320 06:24:03.124" endtime="20230320 06:24:06.911"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230320 06:24:06.911" endtime="20230320 06:24:06.911"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230320 06:24:06.915" level="INFO">Running command 'ozone sh key info /33788-volume-for-prepare/33788-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230320 06:24:10.412" level="INFO">${rc} = 255</msg>
<msg timestamp="20230320 06:24:10.413" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20230320 06:24:06.912" endtime="20230320 06:24:10.413"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230320 06:24:10.414" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20230320 06:24:10.413" endtime="20230320 06:24:10.414"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230320 06:24:10.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230320 06:24:10.414" endtime="20230320 06:24:10.415"/>
</kw>
<status status="PASS" starttime="20230320 06:24:06.911" endtime="20230320 06:24:10.415"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230320 06:24:03.123" endtime="20230320 06:24:10.416"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="PASS" starttime="20230320 06:23:00.556" endtime="20230320 06:24:10.421"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="206735"/>
</suite>
<statistics>
<total>
<stat pass="14" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="14" fail="0" skip="0" id="s1" name="ozone-om-prepare">ozone-om-prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="Om-Cancel-Prepare">ozone-om-prepare.Om-Cancel-Prepare</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Om-Prepare">ozone-om-prepare.Om-Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s3" name="Om-Prepared">ozone-om-prepare.Om-Prepared</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4" name="Om-Prepared">ozone-om-prepare.Om-Prepared</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Loaddata">ozone-om-prepare.Loaddata</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Readdata">ozone-om-prepare.Readdata</stat>
<stat pass="3" fail="0" skip="0" id="s1-s7" name="Om-Prepare">ozone-om-prepare.Om-Prepare</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
