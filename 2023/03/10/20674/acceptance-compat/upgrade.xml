<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.0.2 (Python 3.8.10 on linux)" generated="20230310 22:57:35.850" rpa="false" schemaversion="3">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s1-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230310 22:42:58.847" level="INFO">${random} = 82545</msg>
<status status="PASS" starttime="20230310 22:42:58.846" endtime="20230310 22:42:58.847"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:42:58.853" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-82545 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:43:03.742" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:43:03.742" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:42:58.849" endtime="20230310 22:43:03.742"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:43:03.743" level="INFO"/>
<status status="PASS" starttime="20230310 22:43:03.742" endtime="20230310 22:43:03.743"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:43:03.744" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:43:03.744" endtime="20230310 22:43:03.744"/>
</kw>
<status status="PASS" starttime="20230310 22:42:58.848" endtime="20230310 22:43:03.745"/>
</kw>
<msg timestamp="20230310 22:43:03.745" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:42:58.848" endtime="20230310 22:43:03.746"/>
</kw>
<msg timestamp="20230310 22:43:03.747" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:42:58.847" endtime="20230310 22:43:03.747"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:43:03.747" endtime="20230310 22:43:03.747"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:43:03.751" level="INFO">Running command 'cat /tmp/key-82545 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:43:03.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:43:03.754" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230310 22:43:03.748" endtime="20230310 22:43:03.754"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:43:03.755" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230310 22:43:03.754" endtime="20230310 22:43:03.755"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:43:03.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:43:03.756" endtime="20230310 22:43:03.756"/>
</kw>
<msg timestamp="20230310 22:43:03.757" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230310 22:43:03.748" endtime="20230310 22:43:03.757"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:43:03.757" endtime="20230310 22:43:03.758"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:43:03.761" level="INFO">Running command 'rm /tmp/key-82545 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:43:03.764" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:43:03.764" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:43:03.759" endtime="20230310 22:43:03.764"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:43:03.765" level="INFO"/>
<status status="PASS" starttime="20230310 22:43:03.765" endtime="20230310 22:43:03.765"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:43:03.766" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:43:03.766" endtime="20230310 22:43:03.766"/>
</kw>
<status status="PASS" starttime="20230310 22:43:03.758" endtime="20230310 22:43:03.767"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:42:58.845" endtime="20230310 22:43:03.767"/>
</test>
<test id="s1-s1-t2" name="Setup credentials for S3">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:43:03.774" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:43:04.148" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:43:04.148" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:43:03.772" endtime="20230310 22:43:04.148"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:43:04.149" level="INFO"/>
<status status="PASS" starttime="20230310 22:43:04.148" endtime="20230310 22:43:04.150"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:43:04.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:43:04.150" endtime="20230310 22:43:04.151"/>
</kw>
<status status="PASS" starttime="20230310 22:43:03.771" endtime="20230310 22:43:04.151"/>
</kw>
<msg timestamp="20230310 22:43:04.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:43:03.770" endtime="20230310 22:43:04.152"/>
</kw>
<status status="PASS" starttime="20230310 22:43:03.770" endtime="20230310 22:43:04.152"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:43:04.157" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:43:04.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:43:04.529" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:43:04.154" endtime="20230310 22:43:04.529"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:43:04.531" level="INFO"/>
<status status="PASS" starttime="20230310 22:43:04.530" endtime="20230310 22:43:04.531"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:43:04.532" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:43:04.531" endtime="20230310 22:43:04.532"/>
</kw>
<status status="PASS" starttime="20230310 22:43:04.154" endtime="20230310 22:43:04.532"/>
</kw>
<msg timestamp="20230310 22:43:04.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:43:04.153" endtime="20230310 22:43:04.533"/>
</kw>
<status status="PASS" starttime="20230310 22:43:04.153" endtime="20230310 22:43:04.533"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:43:04.538" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:43:04.895" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:43:04.895" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:43:04.535" endtime="20230310 22:43:04.895"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:43:04.896" level="INFO"/>
<status status="PASS" starttime="20230310 22:43:04.896" endtime="20230310 22:43:04.896"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:43:04.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:43:04.897" endtime="20230310 22:43:04.897"/>
</kw>
<status status="PASS" starttime="20230310 22:43:04.534" endtime="20230310 22:43:04.898"/>
</kw>
<msg timestamp="20230310 22:43:04.898" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:43:04.534" endtime="20230310 22:43:04.899"/>
</kw>
<status status="PASS" starttime="20230310 22:43:04.533" endtime="20230310 22:43:04.899"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:43:04.904" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:43:05.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:43:05.259" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:43:04.901" endtime="20230310 22:43:05.259"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:43:05.261" level="INFO"/>
<status status="PASS" starttime="20230310 22:43:05.260" endtime="20230310 22:43:05.261"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:43:05.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:43:05.261" endtime="20230310 22:43:05.262"/>
</kw>
<status status="PASS" starttime="20230310 22:43:04.900" endtime="20230310 22:43:05.262"/>
</kw>
<msg timestamp="20230310 22:43:05.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:43:04.900" endtime="20230310 22:43:05.263"/>
</kw>
<status status="PASS" starttime="20230310 22:43:04.899" endtime="20230310 22:43:05.263"/>
</kw>
<status status="PASS" starttime="20230310 22:43:03.769" endtime="20230310 22:43:05.264"/>
</kw>
<status status="PASS" starttime="20230310 22:43:03.769" endtime="20230310 22:43:05.264"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:43:03.768" endtime="20230310 22:43:05.264"/>
</test>
<test id="s1-s1-t3" name="Read key created with Ozone Shell using S3 API">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:43:05.270" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:43:05.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:43:05.988" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 10 Mar 2023 22:42:48 GMT", 
    "ContentLength": 44, 
    "Expires": "Fri, 10 Mar 2023 22:43:0...</msg>
<status status="PASS" starttime="20230310 22:43:05.267" endtime="20230310 22:43:05.989"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:43:05.991" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 10 Mar 2023 22:42:48 GMT", 
    "ContentLength": 44, 
    "Expires": "Fri, 10 Mar 2023 22:43:05 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230310 22:43:05.989" endtime="20230310 22:43:05.991"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:43:05.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:43:05.991" endtime="20230310 22:43:05.992"/>
</kw>
<msg timestamp="20230310 22:43:05.992" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 10 Mar 2023 22:42:48 GMT", 
    "ContentLength": 44, 
    "Expires": "Fri, 10 Mar 2023 22:43:0...</msg>
<status status="PASS" starttime="20230310 22:43:05.267" endtime="20230310 22:43:05.992"/>
</kw>
<msg timestamp="20230310 22:43:05.993" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 10 Mar 2023 22:42:48 GMT", 
    "ContentLength": 44, 
    "Expires": "Fri, 10 Mar 2023 22:43:0...</msg>
<status status="PASS" starttime="20230310 22:43:05.266" endtime="20230310 22:43:05.993"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:43:05.993" endtime="20230310 22:43:05.993"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:43:05.997" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:43:06.000" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:43:06.000" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230310 22:43:05.995" endtime="20230310 22:43:06.000"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:43:06.001" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230310 22:43:06.000" endtime="20230310 22:43:06.001"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:43:06.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:43:06.002" endtime="20230310 22:43:06.002"/>
</kw>
<msg timestamp="20230310 22:43:06.003" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230310 22:43:05.994" endtime="20230310 22:43:06.003"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:43:06.003" endtime="20230310 22:43:06.004"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:43:06.007" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:43:06.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:43:06.009" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:43:06.005" endtime="20230310 22:43:06.009"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:43:06.011" level="INFO"/>
<status status="PASS" starttime="20230310 22:43:06.010" endtime="20230310 22:43:06.011"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:43:06.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:43:06.011" endtime="20230310 22:43:06.011"/>
</kw>
<status status="PASS" starttime="20230310 22:43:06.004" endtime="20230310 22:43:06.012"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:43:05.265" endtime="20230310 22:43:06.012"/>
</test>
<test id="s1-s1-t4" name="Read key created with S3 API using S3 API">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:43:06.017" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:43:06.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:43:06.610" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 10 Mar 2023 22:42:54 GMT", 
    "ContentLength": 31, 
    "Expires": "Fri, 10 Mar 2023 22:43:0...</msg>
<status status="PASS" starttime="20230310 22:43:06.015" endtime="20230310 22:43:06.610"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:43:06.611" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 10 Mar 2023 22:42:54 GMT", 
    "ContentLength": 31, 
    "Expires": "Fri, 10 Mar 2023 22:43:06 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230310 22:43:06.610" endtime="20230310 22:43:06.611"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:43:06.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:43:06.611" endtime="20230310 22:43:06.612"/>
</kw>
<msg timestamp="20230310 22:43:06.613" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 10 Mar 2023 22:42:54 GMT", 
    "ContentLength": 31, 
    "Expires": "Fri, 10 Mar 2023 22:43:0...</msg>
<status status="PASS" starttime="20230310 22:43:06.014" endtime="20230310 22:43:06.613"/>
</kw>
<msg timestamp="20230310 22:43:06.613" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 10 Mar 2023 22:42:54 GMT", 
    "ContentLength": 31, 
    "Expires": "Fri, 10 Mar 2023 22:43:0...</msg>
<status status="PASS" starttime="20230310 22:43:06.014" endtime="20230310 22:43:06.613"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:43:06.614" endtime="20230310 22:43:06.614"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:43:06.618" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:43:06.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:43:06.624" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230310 22:43:06.615" endtime="20230310 22:43:06.624"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:43:06.625" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20230310 22:43:06.624" endtime="20230310 22:43:06.625"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:43:06.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:43:06.626" endtime="20230310 22:43:06.626"/>
</kw>
<msg timestamp="20230310 22:43:06.627" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230310 22:43:06.614" endtime="20230310 22:43:06.627"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:43:06.627" endtime="20230310 22:43:06.628"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:43:06.631" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:43:06.634" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:43:06.634" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:43:06.628" endtime="20230310 22:43:06.634"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:43:06.635" level="INFO"/>
<status status="PASS" starttime="20230310 22:43:06.635" endtime="20230310 22:43:06.636"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:43:06.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:43:06.636" endtime="20230310 22:43:06.636"/>
</kw>
<status status="PASS" starttime="20230310 22:43:06.628" endtime="20230310 22:43:06.637"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:43:06.013" endtime="20230310 22:43:06.637"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230310 22:42:58.738" endtime="20230310 22:43:06.639"/>
</suite>
<suite id="s1-s2" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s2-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230310 22:49:36.888" level="INFO">${random} = 24849</msg>
<status status="PASS" starttime="20230310 22:49:36.888" endtime="20230310 22:49:36.888"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:49:36.894" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-24849 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:49:41.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:49:41.234" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:49:36.890" endtime="20230310 22:49:41.234"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:49:41.235" level="INFO"/>
<status status="PASS" starttime="20230310 22:49:41.234" endtime="20230310 22:49:41.235"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:49:41.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:49:41.235" endtime="20230310 22:49:41.236"/>
</kw>
<status status="PASS" starttime="20230310 22:49:36.890" endtime="20230310 22:49:41.236"/>
</kw>
<msg timestamp="20230310 22:49:41.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:49:36.889" endtime="20230310 22:49:41.238"/>
</kw>
<msg timestamp="20230310 22:49:41.238" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:49:36.888" endtime="20230310 22:49:41.238"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:49:41.239" endtime="20230310 22:49:41.239"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:49:41.242" level="INFO">Running command 'cat /tmp/key-24849 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:49:41.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:49:41.245" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230310 22:49:41.240" endtime="20230310 22:49:41.245"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:49:41.246" level="INFO">new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230310 22:49:41.246" endtime="20230310 22:49:41.246"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:49:41.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:49:41.246" endtime="20230310 22:49:41.247"/>
</kw>
<msg timestamp="20230310 22:49:41.248" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230310 22:49:41.239" endtime="20230310 22:49:41.248"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:49:41.248" endtime="20230310 22:49:41.248"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:49:41.251" level="INFO">Running command 'rm /tmp/key-24849 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:49:41.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:49:41.254" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:49:41.249" endtime="20230310 22:49:41.254"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:49:41.255" level="INFO"/>
<status status="PASS" starttime="20230310 22:49:41.254" endtime="20230310 22:49:41.255"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:49:41.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:49:41.255" endtime="20230310 22:49:41.256"/>
</kw>
<status status="PASS" starttime="20230310 22:49:41.249" endtime="20230310 22:49:41.256"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:49:36.887" endtime="20230310 22:49:41.256"/>
</test>
<test id="s1-s2-t2" name="Setup credentials for S3">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:49:41.262" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:49:41.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:49:41.618" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:49:41.260" endtime="20230310 22:49:41.618"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:49:41.619" level="INFO"/>
<status status="PASS" starttime="20230310 22:49:41.619" endtime="20230310 22:49:41.620"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:49:41.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:49:41.620" endtime="20230310 22:49:41.620"/>
</kw>
<status status="PASS" starttime="20230310 22:49:41.260" endtime="20230310 22:49:41.621"/>
</kw>
<msg timestamp="20230310 22:49:41.621" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:49:41.259" endtime="20230310 22:49:41.622"/>
</kw>
<status status="PASS" starttime="20230310 22:49:41.259" endtime="20230310 22:49:41.622"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:49:41.626" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:49:41.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:49:41.967" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:49:41.623" endtime="20230310 22:49:41.967"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:49:41.969" level="INFO"/>
<status status="PASS" starttime="20230310 22:49:41.968" endtime="20230310 22:49:41.969"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:49:41.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:49:41.969" endtime="20230310 22:49:41.970"/>
</kw>
<status status="PASS" starttime="20230310 22:49:41.623" endtime="20230310 22:49:41.970"/>
</kw>
<msg timestamp="20230310 22:49:41.970" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:49:41.623" endtime="20230310 22:49:41.971"/>
</kw>
<status status="PASS" starttime="20230310 22:49:41.622" endtime="20230310 22:49:41.971"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:49:41.975" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:49:42.338" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:49:42.338" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:49:41.973" endtime="20230310 22:49:42.338"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:49:42.339" level="INFO"/>
<status status="PASS" starttime="20230310 22:49:42.339" endtime="20230310 22:49:42.340"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:49:42.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:49:42.340" endtime="20230310 22:49:42.340"/>
</kw>
<status status="PASS" starttime="20230310 22:49:41.972" endtime="20230310 22:49:42.341"/>
</kw>
<msg timestamp="20230310 22:49:42.341" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:49:41.972" endtime="20230310 22:49:42.342"/>
</kw>
<status status="PASS" starttime="20230310 22:49:41.971" endtime="20230310 22:49:42.342"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:49:42.346" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:49:42.753" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:49:42.753" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:49:42.344" endtime="20230310 22:49:42.753"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:49:42.755" level="INFO"/>
<status status="PASS" starttime="20230310 22:49:42.754" endtime="20230310 22:49:42.755"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:49:42.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:49:42.755" endtime="20230310 22:49:42.756"/>
</kw>
<status status="PASS" starttime="20230310 22:49:42.343" endtime="20230310 22:49:42.756"/>
</kw>
<msg timestamp="20230310 22:49:42.756" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:49:42.343" endtime="20230310 22:49:42.757"/>
</kw>
<status status="PASS" starttime="20230310 22:49:42.342" endtime="20230310 22:49:42.757"/>
</kw>
<status status="PASS" starttime="20230310 22:49:41.258" endtime="20230310 22:49:42.757"/>
</kw>
<status status="PASS" starttime="20230310 22:49:41.258" endtime="20230310 22:49:42.757"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:49:41.257" endtime="20230310 22:49:42.758"/>
</test>
<test id="s1-s2-t3" name="Read key created with Ozone Shell using S3 API">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:49:42.763" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:49:43.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:49:43.452" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 10 Mar 2023 22:46:53 GMT", 
    "ContentLength": 44, 
    "Expires": "Fri, 10 Mar 2023 22:49:4...</msg>
<status status="PASS" starttime="20230310 22:49:42.760" endtime="20230310 22:49:43.452"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:49:43.454" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 10 Mar 2023 22:46:53 GMT", 
    "ContentLength": 44, 
    "Expires": "Fri, 10 Mar 2023 22:49:43 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230310 22:49:43.453" endtime="20230310 22:49:43.454"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:49:43.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:49:43.454" endtime="20230310 22:49:43.455"/>
</kw>
<msg timestamp="20230310 22:49:43.455" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 10 Mar 2023 22:46:53 GMT", 
    "ContentLength": 44, 
    "Expires": "Fri, 10 Mar 2023 22:49:4...</msg>
<status status="PASS" starttime="20230310 22:49:42.760" endtime="20230310 22:49:43.455"/>
</kw>
<msg timestamp="20230310 22:49:43.455" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 10 Mar 2023 22:46:53 GMT", 
    "ContentLength": 44, 
    "Expires": "Fri, 10 Mar 2023 22:49:4...</msg>
<status status="PASS" starttime="20230310 22:49:42.759" endtime="20230310 22:49:43.455"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:49:43.456" endtime="20230310 22:49:43.456"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:49:43.459" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:49:43.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:49:43.463" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230310 22:49:43.457" endtime="20230310 22:49:43.463"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:49:43.464" level="INFO">new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230310 22:49:43.463" endtime="20230310 22:49:43.464"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:49:43.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:49:43.464" endtime="20230310 22:49:43.465"/>
</kw>
<msg timestamp="20230310 22:49:43.465" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230310 22:49:43.456" endtime="20230310 22:49:43.465"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:49:43.466" endtime="20230310 22:49:43.466"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:49:43.469" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:49:43.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:49:43.472" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:49:43.467" endtime="20230310 22:49:43.472"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:49:43.473" level="INFO"/>
<status status="PASS" starttime="20230310 22:49:43.472" endtime="20230310 22:49:43.473"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:49:43.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:49:43.473" endtime="20230310 22:49:43.474"/>
</kw>
<status status="PASS" starttime="20230310 22:49:43.467" endtime="20230310 22:49:43.474"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:49:42.758" endtime="20230310 22:49:43.475"/>
</test>
<test id="s1-s2-t4" name="Read key created with S3 API using S3 API">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:49:43.479" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:49:44.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:49:44.007" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 10 Mar 2023 22:46:58 GMT", 
    "ContentLength": 31, 
    "Expires": "Fri, 10 Mar 2023 22:49:4...</msg>
<status status="PASS" starttime="20230310 22:49:43.477" endtime="20230310 22:49:44.007"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:49:44.008" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 10 Mar 2023 22:46:58 GMT", 
    "ContentLength": 31, 
    "Expires": "Fri, 10 Mar 2023 22:49:43 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230310 22:49:44.007" endtime="20230310 22:49:44.008"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:49:44.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:49:44.009" endtime="20230310 22:49:44.009"/>
</kw>
<msg timestamp="20230310 22:49:44.010" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 10 Mar 2023 22:46:58 GMT", 
    "ContentLength": 31, 
    "Expires": "Fri, 10 Mar 2023 22:49:4...</msg>
<status status="PASS" starttime="20230310 22:49:43.477" endtime="20230310 22:49:44.010"/>
</kw>
<msg timestamp="20230310 22:49:44.010" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 10 Mar 2023 22:46:58 GMT", 
    "ContentLength": 31, 
    "Expires": "Fri, 10 Mar 2023 22:49:4...</msg>
<status status="PASS" starttime="20230310 22:49:43.476" endtime="20230310 22:49:44.010"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:49:44.011" endtime="20230310 22:49:44.011"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:49:44.015" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:49:44.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:49:44.017" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20230310 22:49:44.012" endtime="20230310 22:49:44.017"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:49:44.018" level="INFO">new1: key created using S3 API</msg>
<status status="PASS" starttime="20230310 22:49:44.018" endtime="20230310 22:49:44.018"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:49:44.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:49:44.018" endtime="20230310 22:49:44.019"/>
</kw>
<msg timestamp="20230310 22:49:44.020" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20230310 22:49:44.011" endtime="20230310 22:49:44.020"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:49:44.020" endtime="20230310 22:49:44.020"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:49:44.023" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:49:44.026" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:49:44.026" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:49:44.021" endtime="20230310 22:49:44.026"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:49:44.027" level="INFO"/>
<status status="PASS" starttime="20230310 22:49:44.026" endtime="20230310 22:49:44.027"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:49:44.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:49:44.027" endtime="20230310 22:49:44.028"/>
</kw>
<status status="PASS" starttime="20230310 22:49:44.020" endtime="20230310 22:49:44.028"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:49:43.475" endtime="20230310 22:49:44.029"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230310 22:49:36.792" endtime="20230310 22:49:44.031"/>
</suite>
<suite id="s1-s3" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s3-t1" name="Create a volume and bucket">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:49:48.113" level="INFO">Running command 'ozone sh volume create old2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:49:50.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:49:50.814" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:49:48.109" endtime="20230310 22:49:50.815"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:49:50.819" level="INFO"/>
<status status="PASS" starttime="20230310 22:49:50.815" endtime="20230310 22:49:50.819"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:49:50.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:49:50.820" endtime="20230310 22:49:50.821"/>
</kw>
<status status="PASS" starttime="20230310 22:49:48.109" endtime="20230310 22:49:50.826"/>
</kw>
<msg timestamp="20230310 22:49:50.826" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:49:48.108" endtime="20230310 22:49:50.827"/>
</kw>
<msg timestamp="20230310 22:49:50.828" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:49:48.107" endtime="20230310 22:49:50.828"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:49:50.828" endtime="20230310 22:49:50.828"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:49:50.838" level="INFO">Running command 'ozone sh bucket create /old2-volume/old2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:49:53.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:49:53.831" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:49:50.833" endtime="20230310 22:49:53.831"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:49:53.833" level="INFO"/>
<status status="PASS" starttime="20230310 22:49:53.832" endtime="20230310 22:49:53.833"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:49:53.834" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:49:53.833" endtime="20230310 22:49:53.834"/>
</kw>
<status status="PASS" starttime="20230310 22:49:50.832" endtime="20230310 22:49:53.834"/>
</kw>
<msg timestamp="20230310 22:49:53.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:49:50.829" endtime="20230310 22:49:53.835"/>
</kw>
<msg timestamp="20230310 22:49:53.835" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:49:50.828" endtime="20230310 22:49:53.835"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:49:53.835" endtime="20230310 22:49:53.836"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:49:48.106" endtime="20230310 22:49:53.836"/>
</test>
<test id="s1-s3-t2" name="Create key">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:49:53.843" level="INFO">Running command 'echo "old2: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230310 22:49:53.844" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:49:53.844" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:49:53.840" endtime="20230310 22:49:53.844"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:49:53.846" level="INFO"/>
<status status="PASS" starttime="20230310 22:49:53.845" endtime="20230310 22:49:53.846"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:49:53.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:49:53.846" endtime="20230310 22:49:53.847"/>
</kw>
<status status="PASS" starttime="20230310 22:49:53.839" endtime="20230310 22:49:53.847"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:49:53.851" level="INFO">Running command 'ozone sh key put /old2-volume/old2-bucket/old2-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:49:59.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:49:59.712" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:49:53.849" endtime="20230310 22:49:59.712"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:49:59.713" level="INFO"/>
<status status="PASS" starttime="20230310 22:49:59.712" endtime="20230310 22:49:59.713"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:49:59.714" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:49:59.713" endtime="20230310 22:49:59.714"/>
</kw>
<status status="PASS" starttime="20230310 22:49:53.848" endtime="20230310 22:49:59.715"/>
</kw>
<msg timestamp="20230310 22:49:59.715" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:49:53.848" endtime="20230310 22:49:59.715"/>
</kw>
<msg timestamp="20230310 22:49:59.716" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:49:53.847" endtime="20230310 22:49:59.716"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:49:59.716" endtime="20230310 22:49:59.716"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:49:59.720" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:49:59.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:49:59.723" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:49:59.717" endtime="20230310 22:49:59.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:49:59.724" level="INFO"/>
<status status="PASS" starttime="20230310 22:49:59.723" endtime="20230310 22:49:59.724"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:49:59.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:49:59.724" endtime="20230310 22:49:59.725"/>
</kw>
<status status="PASS" starttime="20230310 22:49:59.717" endtime="20230310 22:49:59.725"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:49:53.838" endtime="20230310 22:49:59.726"/>
</test>
<test id="s1-s3-t3" name="Create a bucket in s3v volume">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:49:59.732" level="INFO">Running command 'ozone sh bucket create /s3v/old2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:50:02.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:50:02.702" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:49:59.729" endtime="20230310 22:50:02.702"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:50:02.704" level="INFO"/>
<status status="PASS" starttime="20230310 22:50:02.703" endtime="20230310 22:50:02.704"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:50:02.705" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:50:02.704" endtime="20230310 22:50:02.705"/>
</kw>
<status status="PASS" starttime="20230310 22:49:59.728" endtime="20230310 22:50:02.705"/>
</kw>
<msg timestamp="20230310 22:50:02.705" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:49:59.728" endtime="20230310 22:50:02.706"/>
</kw>
<msg timestamp="20230310 22:50:02.706" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:49:59.727" endtime="20230310 22:50:02.706"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:50:02.706" endtime="20230310 22:50:02.707"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:49:59.726" endtime="20230310 22:50:02.707"/>
</test>
<test id="s1-s3-t4" name="Create key in the bucket in s3v volume">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:50:02.713" level="INFO">Running command 'echo "old2: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230310 22:50:02.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:50:02.715" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:50:02.709" endtime="20230310 22:50:02.715"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:50:02.716" level="INFO"/>
<status status="PASS" starttime="20230310 22:50:02.715" endtime="20230310 22:50:02.716"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:50:02.717" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:50:02.716" endtime="20230310 22:50:02.717"/>
</kw>
<status status="PASS" starttime="20230310 22:50:02.709" endtime="20230310 22:50:02.717"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:50:02.723" level="INFO">Running command 'ozone sh key put /s3v/old2-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:50:07.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:50:07.918" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:50:02.720" endtime="20230310 22:50:07.918"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:50:07.920" level="INFO"/>
<status status="PASS" starttime="20230310 22:50:07.919" endtime="20230310 22:50:07.920"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:50:07.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:50:07.920" endtime="20230310 22:50:07.921"/>
</kw>
<status status="PASS" starttime="20230310 22:50:02.719" endtime="20230310 22:50:07.921"/>
</kw>
<msg timestamp="20230310 22:50:07.921" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:50:02.718" endtime="20230310 22:50:07.922"/>
</kw>
<msg timestamp="20230310 22:50:07.922" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:50:02.717" endtime="20230310 22:50:07.922"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:50:07.922" endtime="20230310 22:50:07.923"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:50:07.926" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:50:07.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:50:07.930" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:50:07.924" endtime="20230310 22:50:07.930"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:50:07.931" level="INFO"/>
<status status="PASS" starttime="20230310 22:50:07.930" endtime="20230310 22:50:07.931"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:50:07.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:50:07.931" endtime="20230310 22:50:07.932"/>
</kw>
<status status="PASS" starttime="20230310 22:50:07.923" endtime="20230310 22:50:07.932"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:50:02.708" endtime="20230310 22:50:07.932"/>
</test>
<test id="s1-s3-t5" name="Setup credentials for S3">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:50:07.939" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:50:08.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:50:08.297" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:50:07.937" endtime="20230310 22:50:08.297"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:50:08.298" level="INFO"/>
<status status="PASS" starttime="20230310 22:50:08.297" endtime="20230310 22:50:08.298"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:50:08.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:50:08.299" endtime="20230310 22:50:08.299"/>
</kw>
<status status="PASS" starttime="20230310 22:50:07.936" endtime="20230310 22:50:08.300"/>
</kw>
<msg timestamp="20230310 22:50:08.300" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:50:07.936" endtime="20230310 22:50:08.300"/>
</kw>
<status status="PASS" starttime="20230310 22:50:07.935" endtime="20230310 22:50:08.300"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:50:08.304" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:50:08.644" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:50:08.644" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:50:08.302" endtime="20230310 22:50:08.644"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:50:08.646" level="INFO"/>
<status status="PASS" starttime="20230310 22:50:08.645" endtime="20230310 22:50:08.646"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:50:08.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:50:08.646" endtime="20230310 22:50:08.646"/>
</kw>
<status status="PASS" starttime="20230310 22:50:08.302" endtime="20230310 22:50:08.647"/>
</kw>
<msg timestamp="20230310 22:50:08.647" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:50:08.301" endtime="20230310 22:50:08.647"/>
</kw>
<status status="PASS" starttime="20230310 22:50:08.301" endtime="20230310 22:50:08.648"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:50:08.652" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:50:08.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:50:08.993" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:50:08.650" endtime="20230310 22:50:08.993"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:50:08.995" level="INFO"/>
<status status="PASS" starttime="20230310 22:50:08.994" endtime="20230310 22:50:08.995"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:50:08.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:50:08.995" endtime="20230310 22:50:08.996"/>
</kw>
<status status="PASS" starttime="20230310 22:50:08.649" endtime="20230310 22:50:08.996"/>
</kw>
<msg timestamp="20230310 22:50:08.996" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:50:08.648" endtime="20230310 22:50:08.997"/>
</kw>
<status status="PASS" starttime="20230310 22:50:08.648" endtime="20230310 22:50:08.997"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:50:09.001" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:50:09.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:50:09.376" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:50:08.999" endtime="20230310 22:50:09.376"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:50:09.377" level="INFO"/>
<status status="PASS" starttime="20230310 22:50:09.377" endtime="20230310 22:50:09.378"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:50:09.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:50:09.378" endtime="20230310 22:50:09.378"/>
</kw>
<status status="PASS" starttime="20230310 22:50:08.998" endtime="20230310 22:50:09.379"/>
</kw>
<msg timestamp="20230310 22:50:09.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:50:08.998" endtime="20230310 22:50:09.380"/>
</kw>
<status status="PASS" starttime="20230310 22:50:08.997" endtime="20230310 22:50:09.380"/>
</kw>
<status status="PASS" starttime="20230310 22:50:07.935" endtime="20230310 22:50:09.380"/>
</kw>
<status status="PASS" starttime="20230310 22:50:07.934" endtime="20230310 22:50:09.380"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:50:07.933" endtime="20230310 22:50:09.381"/>
</test>
<test id="s1-s3-t6" name="Try to create a bucket using S3 API">
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:50:09.387" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:50:09.963" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:50:09.963" level="INFO">${output} = {
    "Location": "http://s3g:9878/old2-bucket"
}</msg>
<status status="PASS" starttime="20230310 22:50:09.385" endtime="20230310 22:50:09.963"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:50:09.964" level="INFO">{
    "Location": "http://s3g:9878/old2-bucket"
}</msg>
<status status="PASS" starttime="20230310 22:50:09.963" endtime="20230310 22:50:09.964"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:50:09.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:50:09.965" endtime="20230310 22:50:09.965"/>
</kw>
<status status="PASS" starttime="20230310 22:50:09.384" endtime="20230310 22:50:09.966"/>
</kw>
<msg timestamp="20230310 22:50:09.966" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:50:09.384" endtime="20230310 22:50:09.967"/>
</kw>
<msg timestamp="20230310 22:50:09.967" level="INFO">${output} = {
    "Location": "http://s3g:9878/old2-bucket"
}</msg>
<status status="PASS" starttime="20230310 22:50:09.383" endtime="20230310 22:50:09.967"/>
</kw>
<msg timestamp="20230310 22:50:09.967" level="INFO">${result} = {
    "Location": "http://s3g:9878/old2-bucket"
}</msg>
<status status="PASS" starttime="20230310 22:50:09.383" endtime="20230310 22:50:09.967"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:50:09.968" endtime="20230310 22:50:09.968"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:50:09.968" endtime="20230310 22:50:09.969"/>
</kw>
<msg timestamp="20230310 22:50:09.969" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20230310 22:50:09.382" endtime="20230310 22:50:09.969"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230310 22:50:09.969" endtime="20230310 22:50:09.970"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:50:09.381" endtime="20230310 22:50:09.970"/>
</test>
<test id="s1-s3-t7" name="Create key using S3 API">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:50:09.975" level="INFO">Running command 'echo "old2: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230310 22:50:09.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:50:09.977" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:50:09.973" endtime="20230310 22:50:09.977"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:50:09.978" level="INFO"/>
<status status="PASS" starttime="20230310 22:50:09.978" endtime="20230310 22:50:09.978"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:50:09.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:50:09.979" endtime="20230310 22:50:09.979"/>
</kw>
<status status="PASS" starttime="20230310 22:50:09.972" endtime="20230310 22:50:09.980"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:50:09.984" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old2-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:50:11.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:50:11.153" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:50:09.982" endtime="20230310 22:50:11.153"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:50:11.156" level="INFO"/>
<status status="PASS" starttime="20230310 22:50:11.154" endtime="20230310 22:50:11.156"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:50:11.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:50:11.156" endtime="20230310 22:50:11.157"/>
</kw>
<msg timestamp="20230310 22:50:11.157" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:50:09.981" endtime="20230310 22:50:11.157"/>
</kw>
<msg timestamp="20230310 22:50:11.158" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:50:09.980" endtime="20230310 22:50:11.158"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:50:11.158" endtime="20230310 22:50:11.159"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:50:11.163" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:50:11.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:50:11.166" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:50:11.160" endtime="20230310 22:50:11.166"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:50:11.167" level="INFO"/>
<status status="PASS" starttime="20230310 22:50:11.166" endtime="20230310 22:50:11.167"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:50:11.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:50:11.167" endtime="20230310 22:50:11.168"/>
</kw>
<status status="PASS" starttime="20230310 22:50:11.159" endtime="20230310 22:50:11.169"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:50:09.971" endtime="20230310 22:50:11.169"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230310 22:49:48.009" endtime="20230310 22:50:11.171"/>
</suite>
<suite id="s1-s4" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230310 22:50:15.451" level="INFO">${random} = 39635</msg>
<status status="PASS" starttime="20230310 22:50:15.450" endtime="20230310 22:50:15.451"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:50:15.458" level="INFO">Running command 'ozone sh key get /old2-volume/old2-bucket/old2-key /tmp/key-39635 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:50:20.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:50:20.353" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:50:15.453" endtime="20230310 22:50:20.353"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:50:20.354" level="INFO"/>
<status status="PASS" starttime="20230310 22:50:20.353" endtime="20230310 22:50:20.354"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:50:20.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:50:20.355" endtime="20230310 22:50:20.355"/>
</kw>
<status status="PASS" starttime="20230310 22:50:15.453" endtime="20230310 22:50:20.356"/>
</kw>
<msg timestamp="20230310 22:50:20.356" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:50:15.452" endtime="20230310 22:50:20.357"/>
</kw>
<msg timestamp="20230310 22:50:20.358" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:50:15.451" endtime="20230310 22:50:20.358"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:50:20.358" endtime="20230310 22:50:20.359"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:50:20.364" level="INFO">Running command 'cat /tmp/key-39635 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:50:20.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:50:20.367" level="INFO">${output} = old2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230310 22:50:20.360" endtime="20230310 22:50:20.367"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:50:20.368" level="INFO">old2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230310 22:50:20.367" endtime="20230310 22:50:20.368"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:50:20.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:50:20.368" endtime="20230310 22:50:20.370"/>
</kw>
<msg timestamp="20230310 22:50:20.370" level="INFO">${output} = old2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230310 22:50:20.359" endtime="20230310 22:50:20.370"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:50:20.371" endtime="20230310 22:50:20.371"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:50:20.375" level="INFO">Running command 'rm /tmp/key-39635 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:50:20.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:50:20.378" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:50:20.372" endtime="20230310 22:50:20.379"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:50:20.380" level="INFO"/>
<status status="PASS" starttime="20230310 22:50:20.379" endtime="20230310 22:50:20.380"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:50:20.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:50:20.380" endtime="20230310 22:50:20.381"/>
</kw>
<status status="PASS" starttime="20230310 22:50:20.372" endtime="20230310 22:50:20.381"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:50:15.449" endtime="20230310 22:50:20.382"/>
</test>
<test id="s1-s4-t2" name="Setup credentials for S3">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:50:20.390" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:50:20.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:50:20.759" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:50:20.388" endtime="20230310 22:50:20.759"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:50:20.761" level="INFO"/>
<status status="PASS" starttime="20230310 22:50:20.760" endtime="20230310 22:50:20.761"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:50:20.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:50:20.761" endtime="20230310 22:50:20.762"/>
</kw>
<status status="PASS" starttime="20230310 22:50:20.387" endtime="20230310 22:50:20.762"/>
</kw>
<msg timestamp="20230310 22:50:20.762" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:50:20.386" endtime="20230310 22:50:20.763"/>
</kw>
<status status="PASS" starttime="20230310 22:50:20.386" endtime="20230310 22:50:20.763"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:50:20.768" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:50:21.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:50:21.175" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:50:20.765" endtime="20230310 22:50:21.175"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:50:21.177" level="INFO"/>
<status status="PASS" starttime="20230310 22:50:21.176" endtime="20230310 22:50:21.177"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:50:21.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:50:21.177" endtime="20230310 22:50:21.178"/>
</kw>
<status status="PASS" starttime="20230310 22:50:20.764" endtime="20230310 22:50:21.178"/>
</kw>
<msg timestamp="20230310 22:50:21.178" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:50:20.764" endtime="20230310 22:50:21.179"/>
</kw>
<status status="PASS" starttime="20230310 22:50:20.763" endtime="20230310 22:50:21.179"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:50:21.183" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:50:21.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:50:21.554" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:50:21.181" endtime="20230310 22:50:21.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:50:21.555" level="INFO"/>
<status status="PASS" starttime="20230310 22:50:21.555" endtime="20230310 22:50:21.555"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:50:21.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:50:21.556" endtime="20230310 22:50:21.556"/>
</kw>
<status status="PASS" starttime="20230310 22:50:21.180" endtime="20230310 22:50:21.557"/>
</kw>
<msg timestamp="20230310 22:50:21.557" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:50:21.180" endtime="20230310 22:50:21.558"/>
</kw>
<status status="PASS" starttime="20230310 22:50:21.179" endtime="20230310 22:50:21.558"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:50:21.562" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:50:21.921" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:50:21.921" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:50:21.560" endtime="20230310 22:50:21.921"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:50:21.922" level="INFO"/>
<status status="PASS" starttime="20230310 22:50:21.921" endtime="20230310 22:50:21.922"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:50:21.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:50:21.922" endtime="20230310 22:50:21.923"/>
</kw>
<status status="PASS" starttime="20230310 22:50:21.559" endtime="20230310 22:50:21.923"/>
</kw>
<msg timestamp="20230310 22:50:21.924" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:50:21.559" endtime="20230310 22:50:21.924"/>
</kw>
<status status="PASS" starttime="20230310 22:50:21.558" endtime="20230310 22:50:21.925"/>
</kw>
<status status="PASS" starttime="20230310 22:50:20.385" endtime="20230310 22:50:21.925"/>
</kw>
<status status="PASS" starttime="20230310 22:50:20.385" endtime="20230310 22:50:21.925"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:50:20.383" endtime="20230310 22:50:21.925"/>
</test>
<test id="s1-s4-t3" name="Read key created with Ozone Shell using S3 API">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:50:21.931" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old2-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:50:22.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:50:22.531" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 10 Mar 2023 22:50:07 GMT", 
    "ContentLength": 44, 
    "Expires": "Fri, 10 Mar 2023 22:50:2...</msg>
<status status="PASS" starttime="20230310 22:50:21.928" endtime="20230310 22:50:22.531"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:50:22.532" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 10 Mar 2023 22:50:07 GMT", 
    "ContentLength": 44, 
    "Expires": "Fri, 10 Mar 2023 22:50:22 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230310 22:50:22.531" endtime="20230310 22:50:22.533"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:50:22.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:50:22.533" endtime="20230310 22:50:22.533"/>
</kw>
<msg timestamp="20230310 22:50:22.534" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 10 Mar 2023 22:50:07 GMT", 
    "ContentLength": 44, 
    "Expires": "Fri, 10 Mar 2023 22:50:2...</msg>
<status status="PASS" starttime="20230310 22:50:21.928" endtime="20230310 22:50:22.534"/>
</kw>
<msg timestamp="20230310 22:50:22.534" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 10 Mar 2023 22:50:07 GMT", 
    "ContentLength": 44, 
    "Expires": "Fri, 10 Mar 2023 22:50:2...</msg>
<status status="PASS" starttime="20230310 22:50:21.927" endtime="20230310 22:50:22.534"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:50:22.534" endtime="20230310 22:50:22.535"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:50:22.539" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:50:22.542" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:50:22.542" level="INFO">${output} = old2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230310 22:50:22.536" endtime="20230310 22:50:22.542"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:50:22.543" level="INFO">old2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230310 22:50:22.543" endtime="20230310 22:50:22.543"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:50:22.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:50:22.544" endtime="20230310 22:50:22.544"/>
</kw>
<msg timestamp="20230310 22:50:22.545" level="INFO">${output} = old2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230310 22:50:22.535" endtime="20230310 22:50:22.545"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:50:22.545" endtime="20230310 22:50:22.545"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:50:22.551" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:50:22.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:50:22.566" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:50:22.546" endtime="20230310 22:50:22.567"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:50:22.568" level="INFO"/>
<status status="PASS" starttime="20230310 22:50:22.567" endtime="20230310 22:50:22.568"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:50:22.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:50:22.568" endtime="20230310 22:50:22.569"/>
</kw>
<status status="PASS" starttime="20230310 22:50:22.546" endtime="20230310 22:50:22.569"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:50:21.926" endtime="20230310 22:50:22.569"/>
</test>
<test id="s1-s4-t4" name="Read key created with S3 API using S3 API">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:50:22.575" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old2-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:50:23.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:50:23.152" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 10 Mar 2023 22:50:11 GMT", 
    "ContentLength": 31, 
    "Expires": "Fri, 10 Mar 2023 22:50:2...</msg>
<status status="PASS" starttime="20230310 22:50:22.573" endtime="20230310 22:50:23.152"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:50:23.154" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 10 Mar 2023 22:50:11 GMT", 
    "ContentLength": 31, 
    "Expires": "Fri, 10 Mar 2023 22:50:23 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230310 22:50:23.153" endtime="20230310 22:50:23.154"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:50:23.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:50:23.154" endtime="20230310 22:50:23.155"/>
</kw>
<msg timestamp="20230310 22:50:23.155" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 10 Mar 2023 22:50:11 GMT", 
    "ContentLength": 31, 
    "Expires": "Fri, 10 Mar 2023 22:50:2...</msg>
<status status="PASS" starttime="20230310 22:50:22.572" endtime="20230310 22:50:23.155"/>
</kw>
<msg timestamp="20230310 22:50:23.155" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 10 Mar 2023 22:50:11 GMT", 
    "ContentLength": 31, 
    "Expires": "Fri, 10 Mar 2023 22:50:2...</msg>
<status status="PASS" starttime="20230310 22:50:22.571" endtime="20230310 22:50:23.155"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:50:23.156" endtime="20230310 22:50:23.156"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:50:23.161" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:50:23.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:50:23.165" level="INFO">${output} = old2: key created using S3 API</msg>
<status status="PASS" starttime="20230310 22:50:23.157" endtime="20230310 22:50:23.165"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:50:23.166" level="INFO">old2: key created using S3 API</msg>
<status status="PASS" starttime="20230310 22:50:23.165" endtime="20230310 22:50:23.166"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:50:23.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:50:23.166" endtime="20230310 22:50:23.167"/>
</kw>
<msg timestamp="20230310 22:50:23.167" level="INFO">${output} = old2: key created using S3 API</msg>
<status status="PASS" starttime="20230310 22:50:23.156" endtime="20230310 22:50:23.167"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:50:23.168" endtime="20230310 22:50:23.168"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:50:23.171" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:50:23.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:50:23.174" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:50:23.169" endtime="20230310 22:50:23.174"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:50:23.175" level="INFO"/>
<status status="PASS" starttime="20230310 22:50:23.174" endtime="20230310 22:50:23.175"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:50:23.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:50:23.175" endtime="20230310 22:50:23.176"/>
</kw>
<status status="PASS" starttime="20230310 22:50:23.168" endtime="20230310 22:50:23.176"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:50:22.570" endtime="20230310 22:50:23.177"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230310 22:50:15.351" endtime="20230310 22:50:23.178"/>
</suite>
<suite id="s1-s5" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s5-t1" name="Create key">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:50:27.665" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230310 22:50:27.667" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:50:27.667" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:50:27.660" endtime="20230310 22:50:27.667"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:50:27.668" level="INFO"/>
<status status="PASS" starttime="20230310 22:50:27.668" endtime="20230310 22:50:27.668"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:50:27.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:50:27.669" endtime="20230310 22:50:27.670"/>
</kw>
<status status="PASS" starttime="20230310 22:50:27.659" endtime="20230310 22:50:27.670"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:50:27.677" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:50:33.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:50:33.383" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:50:27.672" endtime="20230310 22:50:33.383"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:50:33.384" level="INFO"/>
<status status="PASS" starttime="20230310 22:50:33.384" endtime="20230310 22:50:33.385"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:50:33.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:50:33.385" endtime="20230310 22:50:33.385"/>
</kw>
<status status="PASS" starttime="20230310 22:50:27.672" endtime="20230310 22:50:33.386"/>
</kw>
<msg timestamp="20230310 22:50:33.386" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:50:27.671" endtime="20230310 22:50:33.387"/>
</kw>
<msg timestamp="20230310 22:50:33.388" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:50:27.670" endtime="20230310 22:50:33.388"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:50:33.388" endtime="20230310 22:50:33.389"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:50:33.392" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:50:33.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:50:33.401" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:50:33.389" endtime="20230310 22:50:33.401"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:50:33.402" level="INFO"/>
<status status="PASS" starttime="20230310 22:50:33.401" endtime="20230310 22:50:33.402"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:50:33.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:50:33.402" endtime="20230310 22:50:33.403"/>
</kw>
<status status="PASS" starttime="20230310 22:50:33.389" endtime="20230310 22:50:33.403"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:50:27.656" endtime="20230310 22:50:33.403"/>
</test>
<test id="s1-s5-t2" name="Create key in the bucket in s3v volume">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:50:33.408" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230310 22:50:33.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:50:33.410" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:50:33.406" endtime="20230310 22:50:33.410"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:50:33.411" level="INFO"/>
<status status="PASS" starttime="20230310 22:50:33.411" endtime="20230310 22:50:33.412"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:50:33.413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:50:33.412" endtime="20230310 22:50:33.413"/>
</kw>
<status status="PASS" starttime="20230310 22:50:33.405" endtime="20230310 22:50:33.413"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:50:33.418" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:50:38.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:50:38.353" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:50:33.415" endtime="20230310 22:50:38.353"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:50:38.354" level="INFO"/>
<status status="PASS" starttime="20230310 22:50:38.354" endtime="20230310 22:50:38.354"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:50:38.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:50:38.355" endtime="20230310 22:50:38.355"/>
</kw>
<status status="PASS" starttime="20230310 22:50:33.414" endtime="20230310 22:50:38.356"/>
</kw>
<msg timestamp="20230310 22:50:38.356" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:50:33.414" endtime="20230310 22:50:38.356"/>
</kw>
<msg timestamp="20230310 22:50:38.357" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:50:33.413" endtime="20230310 22:50:38.357"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:50:38.357" endtime="20230310 22:50:38.358"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:50:38.361" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:50:38.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:50:38.365" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:50:38.358" endtime="20230310 22:50:38.365"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:50:38.366" level="INFO"/>
<status status="PASS" starttime="20230310 22:50:38.366" endtime="20230310 22:50:38.366"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:50:38.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:50:38.367" endtime="20230310 22:50:38.367"/>
</kw>
<status status="PASS" starttime="20230310 22:50:38.358" endtime="20230310 22:50:38.368"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:50:33.404" endtime="20230310 22:50:38.368"/>
</test>
<test id="s1-s5-t3" name="Setup credentials for S3">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:50:38.375" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:50:38.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:50:38.743" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:50:38.372" endtime="20230310 22:50:38.743"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:50:38.744" level="INFO"/>
<status status="PASS" starttime="20230310 22:50:38.744" endtime="20230310 22:50:38.744"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:50:38.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:50:38.745" endtime="20230310 22:50:38.745"/>
</kw>
<status status="PASS" starttime="20230310 22:50:38.372" endtime="20230310 22:50:38.746"/>
</kw>
<msg timestamp="20230310 22:50:38.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:50:38.371" endtime="20230310 22:50:38.747"/>
</kw>
<status status="PASS" starttime="20230310 22:50:38.371" endtime="20230310 22:50:38.747"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:50:38.752" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:50:39.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:50:39.108" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:50:38.749" endtime="20230310 22:50:39.108"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:50:39.110" level="INFO"/>
<status status="PASS" starttime="20230310 22:50:39.109" endtime="20230310 22:50:39.110"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:50:39.110" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:50:39.110" endtime="20230310 22:50:39.110"/>
</kw>
<status status="PASS" starttime="20230310 22:50:38.748" endtime="20230310 22:50:39.111"/>
</kw>
<msg timestamp="20230310 22:50:39.111" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:50:38.748" endtime="20230310 22:50:39.112"/>
</kw>
<status status="PASS" starttime="20230310 22:50:38.747" endtime="20230310 22:50:39.112"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:50:39.117" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:50:39.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:50:39.484" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:50:39.114" endtime="20230310 22:50:39.485"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:50:39.486" level="INFO"/>
<status status="PASS" starttime="20230310 22:50:39.485" endtime="20230310 22:50:39.486"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:50:39.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:50:39.486" endtime="20230310 22:50:39.487"/>
</kw>
<status status="PASS" starttime="20230310 22:50:39.113" endtime="20230310 22:50:39.487"/>
</kw>
<msg timestamp="20230310 22:50:39.487" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:50:39.113" endtime="20230310 22:50:39.488"/>
</kw>
<status status="PASS" starttime="20230310 22:50:39.112" endtime="20230310 22:50:39.488"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:50:39.493" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:50:39.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:50:39.856" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:50:39.490" endtime="20230310 22:50:39.856"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:50:39.857" level="INFO"/>
<status status="PASS" starttime="20230310 22:50:39.856" endtime="20230310 22:50:39.857"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:50:39.858" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:50:39.858" endtime="20230310 22:50:39.858"/>
</kw>
<status status="PASS" starttime="20230310 22:50:39.489" endtime="20230310 22:50:39.859"/>
</kw>
<msg timestamp="20230310 22:50:39.859" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:50:39.489" endtime="20230310 22:50:39.859"/>
</kw>
<status status="PASS" starttime="20230310 22:50:39.488" endtime="20230310 22:50:39.860"/>
</kw>
<status status="PASS" starttime="20230310 22:50:38.370" endtime="20230310 22:50:39.860"/>
</kw>
<status status="PASS" starttime="20230310 22:50:38.370" endtime="20230310 22:50:39.860"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:50:38.369" endtime="20230310 22:50:39.860"/>
</test>
<test id="s1-s5-t4" name="Try to create a bucket using S3 API">
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:50:39.867" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:50:40.457" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:50:40.457" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230310 22:50:39.865" endtime="20230310 22:50:40.458"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:50:40.459" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230310 22:50:40.458" endtime="20230310 22:50:40.459"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:50:40.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:50:40.459" endtime="20230310 22:50:40.460"/>
</kw>
<status status="PASS" starttime="20230310 22:50:39.864" endtime="20230310 22:50:40.460"/>
</kw>
<msg timestamp="20230310 22:50:40.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:50:39.864" endtime="20230310 22:50:40.461"/>
</kw>
<msg timestamp="20230310 22:50:40.461" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230310 22:50:39.863" endtime="20230310 22:50:40.461"/>
</kw>
<msg timestamp="20230310 22:50:40.465" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230310 22:50:39.862" endtime="20230310 22:50:40.465"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:50:40.465" endtime="20230310 22:50:40.467"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:50:40.467" endtime="20230310 22:50:40.468"/>
</kw>
<msg timestamp="20230310 22:50:40.468" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20230310 22:50:39.862" endtime="20230310 22:50:40.468"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230310 22:50:40.468" endtime="20230310 22:50:40.469"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:50:39.861" endtime="20230310 22:50:40.469"/>
</test>
<test id="s1-s5-t5" name="Create key using S3 API">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:50:40.474" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230310 22:50:40.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:50:40.476" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:50:40.471" endtime="20230310 22:50:40.476"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:50:40.477" level="INFO"/>
<status status="PASS" starttime="20230310 22:50:40.477" endtime="20230310 22:50:40.477"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:50:40.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:50:40.478" endtime="20230310 22:50:40.478"/>
</kw>
<status status="PASS" starttime="20230310 22:50:40.470" endtime="20230310 22:50:40.479"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:50:40.483" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:50:41.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:50:41.346" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:50:40.481" endtime="20230310 22:50:41.346"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:50:41.348" level="INFO"/>
<status status="PASS" starttime="20230310 22:50:41.347" endtime="20230310 22:50:41.348"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:50:41.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:50:41.348" endtime="20230310 22:50:41.349"/>
</kw>
<msg timestamp="20230310 22:50:41.352" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:50:40.480" endtime="20230310 22:50:41.352"/>
</kw>
<msg timestamp="20230310 22:50:41.352" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:50:40.479" endtime="20230310 22:50:41.352"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:50:41.353" endtime="20230310 22:50:41.355"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:50:41.363" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:50:41.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:50:41.368" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:50:41.356" endtime="20230310 22:50:41.368"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:50:41.369" level="INFO"/>
<status status="PASS" starttime="20230310 22:50:41.368" endtime="20230310 22:50:41.370"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:50:41.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:50:41.370" endtime="20230310 22:50:41.373"/>
</kw>
<status status="PASS" starttime="20230310 22:50:41.355" endtime="20230310 22:50:41.374"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:50:40.470" endtime="20230310 22:50:41.374"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230310 22:50:27.538" endtime="20230310 22:50:41.376"/>
</suite>
<suite id="s1-s6" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s6-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230310 22:49:22.342" level="INFO">${random} = 65056</msg>
<status status="PASS" starttime="20230310 22:49:22.341" endtime="20230310 22:49:22.342"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:49:22.348" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-65056 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:49:27.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:49:27.140" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:49:22.344" endtime="20230310 22:49:27.140"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:49:27.141" level="INFO"/>
<status status="PASS" starttime="20230310 22:49:27.140" endtime="20230310 22:49:27.141"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:49:27.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:49:27.141" endtime="20230310 22:49:27.142"/>
</kw>
<status status="PASS" starttime="20230310 22:49:22.343" endtime="20230310 22:49:27.142"/>
</kw>
<msg timestamp="20230310 22:49:27.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:49:22.343" endtime="20230310 22:49:27.144"/>
</kw>
<msg timestamp="20230310 22:49:27.144" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:49:22.342" endtime="20230310 22:49:27.144"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:49:27.145" endtime="20230310 22:49:27.145"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:49:27.156" level="INFO">Running command 'cat /tmp/key-65056 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:49:27.159" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:49:27.159" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230310 22:49:27.146" endtime="20230310 22:49:27.159"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:49:27.160" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230310 22:49:27.160" endtime="20230310 22:49:27.161"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:49:27.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:49:27.161" endtime="20230310 22:49:27.168"/>
</kw>
<msg timestamp="20230310 22:49:27.168" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230310 22:49:27.145" endtime="20230310 22:49:27.168"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:49:27.168" endtime="20230310 22:49:27.169"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:49:27.172" level="INFO">Running command 'rm /tmp/key-65056 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:49:27.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:49:27.175" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:49:27.170" endtime="20230310 22:49:27.175"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:49:27.176" level="INFO"/>
<status status="PASS" starttime="20230310 22:49:27.175" endtime="20230310 22:49:27.176"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:49:27.177" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:49:27.176" endtime="20230310 22:49:27.177"/>
</kw>
<status status="PASS" starttime="20230310 22:49:27.169" endtime="20230310 22:49:27.178"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:49:22.340" endtime="20230310 22:49:27.178"/>
</test>
<test id="s1-s6-t2" name="Setup credentials for S3">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:49:27.185" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:49:27.567" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:49:27.567" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:49:27.183" endtime="20230310 22:49:27.567"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:49:27.569" level="INFO"/>
<status status="PASS" starttime="20230310 22:49:27.568" endtime="20230310 22:49:27.569"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:49:27.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:49:27.569" endtime="20230310 22:49:27.570"/>
</kw>
<status status="PASS" starttime="20230310 22:49:27.182" endtime="20230310 22:49:27.570"/>
</kw>
<msg timestamp="20230310 22:49:27.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:49:27.182" endtime="20230310 22:49:27.571"/>
</kw>
<status status="PASS" starttime="20230310 22:49:27.181" endtime="20230310 22:49:27.571"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:49:27.575" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:49:27.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:49:27.940" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:49:27.573" endtime="20230310 22:49:27.940"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:49:27.941" level="INFO"/>
<status status="PASS" starttime="20230310 22:49:27.940" endtime="20230310 22:49:27.941"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:49:27.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:49:27.941" endtime="20230310 22:49:27.942"/>
</kw>
<status status="PASS" starttime="20230310 22:49:27.573" endtime="20230310 22:49:27.942"/>
</kw>
<msg timestamp="20230310 22:49:27.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:49:27.572" endtime="20230310 22:49:27.943"/>
</kw>
<status status="PASS" starttime="20230310 22:49:27.572" endtime="20230310 22:49:27.943"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:49:27.947" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:49:28.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:49:28.343" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:49:27.945" endtime="20230310 22:49:28.343"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:49:28.344" level="INFO"/>
<status status="PASS" starttime="20230310 22:49:28.343" endtime="20230310 22:49:28.344"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:49:28.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:49:28.344" endtime="20230310 22:49:28.346"/>
</kw>
<status status="PASS" starttime="20230310 22:49:27.945" endtime="20230310 22:49:28.346"/>
</kw>
<msg timestamp="20230310 22:49:28.346" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:49:27.944" endtime="20230310 22:49:28.347"/>
</kw>
<status status="PASS" starttime="20230310 22:49:27.944" endtime="20230310 22:49:28.348"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:49:28.353" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:49:28.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:49:28.716" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:49:28.350" endtime="20230310 22:49:28.716"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:49:28.718" level="INFO"/>
<status status="PASS" starttime="20230310 22:49:28.717" endtime="20230310 22:49:28.718"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:49:28.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:49:28.718" endtime="20230310 22:49:28.719"/>
</kw>
<status status="PASS" starttime="20230310 22:49:28.349" endtime="20230310 22:49:28.719"/>
</kw>
<msg timestamp="20230310 22:49:28.719" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:49:28.348" endtime="20230310 22:49:28.720"/>
</kw>
<status status="PASS" starttime="20230310 22:49:28.348" endtime="20230310 22:49:28.720"/>
</kw>
<status status="PASS" starttime="20230310 22:49:27.180" endtime="20230310 22:49:28.720"/>
</kw>
<status status="PASS" starttime="20230310 22:49:27.180" endtime="20230310 22:49:28.720"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:49:27.179" endtime="20230310 22:49:28.721"/>
</test>
<test id="s1-s6-t3" name="Read key created with Ozone Shell using S3 API">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:49:28.726" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:49:31.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:49:31.789" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 10 Mar 2023 22:46:16 GMT", 
    "ContentLength": 44, 
    "Expires": "Fri, 10 Mar 2023 22:49:2...</msg>
<status status="PASS" starttime="20230310 22:49:28.724" endtime="20230310 22:49:31.790"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:49:31.791" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 10 Mar 2023 22:46:16 GMT", 
    "ContentLength": 44, 
    "Expires": "Fri, 10 Mar 2023 22:49:29 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230310 22:49:31.790" endtime="20230310 22:49:31.791"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:49:31.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:49:31.791" endtime="20230310 22:49:31.792"/>
</kw>
<msg timestamp="20230310 22:49:31.792" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 10 Mar 2023 22:46:16 GMT", 
    "ContentLength": 44, 
    "Expires": "Fri, 10 Mar 2023 22:49:2...</msg>
<status status="PASS" starttime="20230310 22:49:28.723" endtime="20230310 22:49:31.792"/>
</kw>
<msg timestamp="20230310 22:49:31.793" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 10 Mar 2023 22:46:16 GMT", 
    "ContentLength": 44, 
    "Expires": "Fri, 10 Mar 2023 22:49:2...</msg>
<status status="PASS" starttime="20230310 22:49:28.722" endtime="20230310 22:49:31.793"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:49:31.793" endtime="20230310 22:49:31.794"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:49:31.797" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:49:31.799" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:49:31.799" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230310 22:49:31.795" endtime="20230310 22:49:31.800"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:49:31.801" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230310 22:49:31.800" endtime="20230310 22:49:31.801"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:49:31.801" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:49:31.801" endtime="20230310 22:49:31.802"/>
</kw>
<msg timestamp="20230310 22:49:31.802" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230310 22:49:31.794" endtime="20230310 22:49:31.802"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:49:31.802" endtime="20230310 22:49:31.803"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:49:31.806" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:49:31.808" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:49:31.808" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:49:31.804" endtime="20230310 22:49:31.809"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:49:31.810" level="INFO"/>
<status status="PASS" starttime="20230310 22:49:31.809" endtime="20230310 22:49:31.810"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:49:31.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:49:31.810" endtime="20230310 22:49:31.811"/>
</kw>
<status status="PASS" starttime="20230310 22:49:31.803" endtime="20230310 22:49:31.811"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:49:28.721" endtime="20230310 22:49:31.812"/>
</test>
<test id="s1-s6-t4" name="Read key created with S3 API using S3 API">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:49:31.818" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:49:32.620" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:49:32.621" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 10 Mar 2023 22:46:22 GMT", 
    "ContentLength": 31, 
    "Expires": "Fri, 10 Mar 2023 22:49:3...</msg>
<status status="PASS" starttime="20230310 22:49:31.816" endtime="20230310 22:49:32.621"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:49:32.622" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 10 Mar 2023 22:46:22 GMT", 
    "ContentLength": 31, 
    "Expires": "Fri, 10 Mar 2023 22:49:32 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230310 22:49:32.621" endtime="20230310 22:49:32.622"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:49:32.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:49:32.622" endtime="20230310 22:49:32.623"/>
</kw>
<msg timestamp="20230310 22:49:32.624" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 10 Mar 2023 22:46:22 GMT", 
    "ContentLength": 31, 
    "Expires": "Fri, 10 Mar 2023 22:49:3...</msg>
<status status="PASS" starttime="20230310 22:49:31.815" endtime="20230310 22:49:32.624"/>
</kw>
<msg timestamp="20230310 22:49:32.624" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 10 Mar 2023 22:46:22 GMT", 
    "ContentLength": 31, 
    "Expires": "Fri, 10 Mar 2023 22:49:3...</msg>
<status status="PASS" starttime="20230310 22:49:31.814" endtime="20230310 22:49:32.624"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:49:32.624" endtime="20230310 22:49:32.625"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:49:32.628" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:49:32.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:49:32.632" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230310 22:49:32.626" endtime="20230310 22:49:32.632"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:49:32.633" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20230310 22:49:32.632" endtime="20230310 22:49:32.633"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:49:32.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:49:32.634" endtime="20230310 22:49:32.635"/>
</kw>
<msg timestamp="20230310 22:49:32.635" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230310 22:49:32.625" endtime="20230310 22:49:32.635"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:49:32.635" endtime="20230310 22:49:32.636"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:49:32.639" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:49:32.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:49:32.642" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:49:32.636" endtime="20230310 22:49:32.642"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:49:32.643" level="INFO"/>
<status status="PASS" starttime="20230310 22:49:32.642" endtime="20230310 22:49:32.643"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:49:32.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:49:32.643" endtime="20230310 22:49:32.644"/>
</kw>
<status status="PASS" starttime="20230310 22:49:32.636" endtime="20230310 22:49:32.645"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:49:31.813" endtime="20230310 22:49:32.645"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230310 22:49:22.246" endtime="20230310 22:49:32.648"/>
</suite>
<suite id="s1-s7" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s7-t1" name="Create a volume and bucket">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:42:25.445" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:42:28.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:42:28.599" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:42:25.431" endtime="20230310 22:42:28.599"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:42:28.602" level="INFO"/>
<status status="PASS" starttime="20230310 22:42:28.601" endtime="20230310 22:42:28.606"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:42:28.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:42:28.606" endtime="20230310 22:42:28.607"/>
</kw>
<status status="PASS" starttime="20230310 22:42:25.431" endtime="20230310 22:42:28.607"/>
</kw>
<msg timestamp="20230310 22:42:28.607" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:42:25.430" endtime="20230310 22:42:28.609"/>
</kw>
<msg timestamp="20230310 22:42:28.609" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:42:25.429" endtime="20230310 22:42:28.609"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:42:28.609" endtime="20230310 22:42:28.610"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:42:28.622" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:42:32.290" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:42:32.290" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:42:28.611" endtime="20230310 22:42:32.290"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:42:32.292" level="INFO"/>
<status status="PASS" starttime="20230310 22:42:32.291" endtime="20230310 22:42:32.292"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:42:32.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:42:32.292" endtime="20230310 22:42:32.293"/>
</kw>
<status status="PASS" starttime="20230310 22:42:28.611" endtime="20230310 22:42:32.293"/>
</kw>
<msg timestamp="20230310 22:42:32.293" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:42:28.610" endtime="20230310 22:42:32.294"/>
</kw>
<msg timestamp="20230310 22:42:32.294" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:42:28.610" endtime="20230310 22:42:32.294"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:42:32.294" endtime="20230310 22:42:32.295"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:42:25.428" endtime="20230310 22:42:32.295"/>
</test>
<test id="s1-s7-t2" name="Create key">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:42:32.301" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230310 22:42:32.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:42:32.303" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:42:32.298" endtime="20230310 22:42:32.303"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:42:32.304" level="INFO"/>
<status status="PASS" starttime="20230310 22:42:32.304" endtime="20230310 22:42:32.305"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:42:32.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:42:32.305" endtime="20230310 22:42:32.306"/>
</kw>
<status status="PASS" starttime="20230310 22:42:32.298" endtime="20230310 22:42:32.306"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:42:32.310" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:42:38.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:42:38.885" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:42:32.308" endtime="20230310 22:42:38.885"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:42:38.886" level="INFO"/>
<status status="PASS" starttime="20230310 22:42:38.885" endtime="20230310 22:42:38.886"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:42:38.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:42:38.887" endtime="20230310 22:42:38.897"/>
</kw>
<status status="PASS" starttime="20230310 22:42:32.307" endtime="20230310 22:42:38.898"/>
</kw>
<msg timestamp="20230310 22:42:38.898" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:42:32.307" endtime="20230310 22:42:38.899"/>
</kw>
<msg timestamp="20230310 22:42:38.899" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:42:32.306" endtime="20230310 22:42:38.899"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:42:38.899" endtime="20230310 22:42:38.900"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:42:38.906" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:42:38.907" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:42:38.908" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:42:38.901" endtime="20230310 22:42:38.908"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:42:38.909" level="INFO"/>
<status status="PASS" starttime="20230310 22:42:38.908" endtime="20230310 22:42:38.909"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:42:38.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:42:38.909" endtime="20230310 22:42:38.910"/>
</kw>
<status status="PASS" starttime="20230310 22:42:38.900" endtime="20230310 22:42:38.910"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:42:32.296" endtime="20230310 22:42:38.910"/>
</test>
<test id="s1-s7-t3" name="Create a bucket in s3v volume">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:42:38.921" level="INFO">Running command 'ozone sh bucket create /s3v/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:42:42.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:42:42.146" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:42:38.918" endtime="20230310 22:42:42.146"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:42:42.147" level="INFO"/>
<status status="PASS" starttime="20230310 22:42:42.147" endtime="20230310 22:42:42.148"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:42:42.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:42:42.148" endtime="20230310 22:42:42.148"/>
</kw>
<status status="PASS" starttime="20230310 22:42:38.914" endtime="20230310 22:42:42.149"/>
</kw>
<msg timestamp="20230310 22:42:42.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:42:38.913" endtime="20230310 22:42:42.149"/>
</kw>
<msg timestamp="20230310 22:42:42.150" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:42:38.912" endtime="20230310 22:42:42.150"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:42:42.150" endtime="20230310 22:42:42.151"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:42:38.911" endtime="20230310 22:42:42.151"/>
</test>
<test id="s1-s7-t4" name="Create key in the bucket in s3v volume">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:42:42.156" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230310 22:42:42.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:42:42.158" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:42:42.154" endtime="20230310 22:42:42.158"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:42:42.159" level="INFO"/>
<status status="PASS" starttime="20230310 22:42:42.159" endtime="20230310 22:42:42.159"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:42:42.160" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:42:42.160" endtime="20230310 22:42:42.160"/>
</kw>
<status status="PASS" starttime="20230310 22:42:42.153" endtime="20230310 22:42:42.161"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:42:42.165" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:42:48.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:42:48.546" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:42:42.163" endtime="20230310 22:42:48.546"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:42:48.548" level="INFO"/>
<status status="PASS" starttime="20230310 22:42:48.547" endtime="20230310 22:42:48.548"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:42:48.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:42:48.548" endtime="20230310 22:42:48.549"/>
</kw>
<status status="PASS" starttime="20230310 22:42:42.162" endtime="20230310 22:42:48.549"/>
</kw>
<msg timestamp="20230310 22:42:48.549" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:42:42.162" endtime="20230310 22:42:48.550"/>
</kw>
<msg timestamp="20230310 22:42:48.550" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:42:42.161" endtime="20230310 22:42:48.550"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:42:48.550" endtime="20230310 22:42:48.551"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:42:48.554" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:42:48.557" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:42:48.557" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:42:48.552" endtime="20230310 22:42:48.558"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:42:48.559" level="INFO"/>
<status status="PASS" starttime="20230310 22:42:48.558" endtime="20230310 22:42:48.559"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:42:48.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:42:48.559" endtime="20230310 22:42:48.560"/>
</kw>
<status status="PASS" starttime="20230310 22:42:48.551" endtime="20230310 22:42:48.560"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:42:42.152" endtime="20230310 22:42:48.561"/>
</test>
<test id="s1-s7-t5" name="Setup credentials for S3">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:42:48.568" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:42:49.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:42:49.353" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:42:48.565" endtime="20230310 22:42:49.353"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:42:49.354" level="INFO"/>
<status status="PASS" starttime="20230310 22:42:49.354" endtime="20230310 22:42:49.355"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:42:49.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:42:49.355" endtime="20230310 22:42:49.355"/>
</kw>
<status status="PASS" starttime="20230310 22:42:48.565" endtime="20230310 22:42:49.356"/>
</kw>
<msg timestamp="20230310 22:42:49.356" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:42:48.564" endtime="20230310 22:42:49.356"/>
</kw>
<status status="PASS" starttime="20230310 22:42:48.564" endtime="20230310 22:42:49.357"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:42:49.362" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:42:49.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:42:49.736" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:42:49.359" endtime="20230310 22:42:49.736"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:42:49.737" level="INFO"/>
<status status="PASS" starttime="20230310 22:42:49.736" endtime="20230310 22:42:49.737"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:42:49.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:42:49.737" endtime="20230310 22:42:49.738"/>
</kw>
<status status="PASS" starttime="20230310 22:42:49.358" endtime="20230310 22:42:49.738"/>
</kw>
<msg timestamp="20230310 22:42:49.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:42:49.358" endtime="20230310 22:42:49.739"/>
</kw>
<status status="PASS" starttime="20230310 22:42:49.357" endtime="20230310 22:42:49.739"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:42:49.744" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:42:50.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:42:50.111" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:42:49.742" endtime="20230310 22:42:50.111"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:42:50.112" level="INFO"/>
<status status="PASS" starttime="20230310 22:42:50.111" endtime="20230310 22:42:50.112"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:42:50.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:42:50.112" endtime="20230310 22:42:50.113"/>
</kw>
<status status="PASS" starttime="20230310 22:42:49.741" endtime="20230310 22:42:50.114"/>
</kw>
<msg timestamp="20230310 22:42:50.114" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:42:49.740" endtime="20230310 22:42:50.115"/>
</kw>
<status status="PASS" starttime="20230310 22:42:49.740" endtime="20230310 22:42:50.115"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:42:50.119" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:42:50.532" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:42:50.532" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:42:50.117" endtime="20230310 22:42:50.532"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:42:50.533" level="INFO"/>
<status status="PASS" starttime="20230310 22:42:50.532" endtime="20230310 22:42:50.533"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:42:50.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:42:50.533" endtime="20230310 22:42:50.534"/>
</kw>
<status status="PASS" starttime="20230310 22:42:50.116" endtime="20230310 22:42:50.534"/>
</kw>
<msg timestamp="20230310 22:42:50.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:42:50.116" endtime="20230310 22:42:50.535"/>
</kw>
<status status="PASS" starttime="20230310 22:42:50.115" endtime="20230310 22:42:50.535"/>
</kw>
<status status="PASS" starttime="20230310 22:42:48.563" endtime="20230310 22:42:50.536"/>
</kw>
<status status="PASS" starttime="20230310 22:42:48.563" endtime="20230310 22:42:50.536"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:42:48.562" endtime="20230310 22:42:50.536"/>
</test>
<test id="s1-s7-t6" name="Try to create a bucket using S3 API">
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:42:50.545" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:42:51.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:42:51.885" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230310 22:42:50.542" endtime="20230310 22:42:51.885"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:42:51.886" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230310 22:42:51.886" endtime="20230310 22:42:51.886"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:42:51.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:42:51.887" endtime="20230310 22:42:51.887"/>
</kw>
<status status="PASS" starttime="20230310 22:42:50.541" endtime="20230310 22:42:51.888"/>
</kw>
<msg timestamp="20230310 22:42:51.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:42:50.540" endtime="20230310 22:42:51.888"/>
</kw>
<msg timestamp="20230310 22:42:51.889" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230310 22:42:50.540" endtime="20230310 22:42:51.889"/>
</kw>
<msg timestamp="20230310 22:42:51.889" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230310 22:42:50.539" endtime="20230310 22:42:51.889"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:42:51.889" endtime="20230310 22:42:51.890"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:42:51.890" endtime="20230310 22:42:51.891"/>
</kw>
<msg timestamp="20230310 22:42:51.891" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20230310 22:42:50.538" endtime="20230310 22:42:51.891"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230310 22:42:51.892" endtime="20230310 22:42:51.892"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:42:50.537" endtime="20230310 22:42:51.893"/>
</test>
<test id="s1-s7-t7" name="Create key using S3 API">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:42:51.900" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230310 22:42:51.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:42:51.902" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:42:51.897" endtime="20230310 22:42:51.902"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:42:51.904" level="INFO"/>
<status status="PASS" starttime="20230310 22:42:51.903" endtime="20230310 22:42:51.904"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:42:51.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:42:51.904" endtime="20230310 22:42:51.905"/>
</kw>
<status status="PASS" starttime="20230310 22:42:51.896" endtime="20230310 22:42:51.905"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:42:51.910" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:42:54.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:42:54.398" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:42:51.907" endtime="20230310 22:42:54.398"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:42:54.400" level="INFO"/>
<status status="PASS" starttime="20230310 22:42:54.399" endtime="20230310 22:42:54.400"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:42:54.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:42:54.400" endtime="20230310 22:42:54.401"/>
</kw>
<msg timestamp="20230310 22:42:54.402" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:42:51.906" endtime="20230310 22:42:54.402"/>
</kw>
<msg timestamp="20230310 22:42:54.402" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:42:51.905" endtime="20230310 22:42:54.402"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:42:54.403" endtime="20230310 22:42:54.403"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:42:54.407" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:42:54.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:42:54.410" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:42:54.404" endtime="20230310 22:42:54.410"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:42:54.411" level="INFO"/>
<status status="PASS" starttime="20230310 22:42:54.410" endtime="20230310 22:42:54.411"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:42:54.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230310 22:42:54.411" endtime="20230310 22:42:54.412"/>
</kw>
<status status="PASS" starttime="20230310 22:42:54.403" endtime="20230310 22:42:54.412"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:42:51.895" endtime="20230310 22:42:54.413"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230310 22:42:25.327" endtime="20230310 22:42:54.415"/>
</suite>
<suite id="s1-s8" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s8-t1" name="Check MLV" line="33">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230310 22:54:12.087" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20230310 22:54:12.086" endtime="20230310 22:54:12.087"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230310 22:54:12.087" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230310 22:54:12.087" endtime="20230310 22:54:12.087"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20230310 22:54:12.088" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230310 22:54:12.088" endtime="20230310 22:54:12.088"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified file is empty.</doc>
<msg timestamp="20230310 22:54:12.089" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 229 bytes.</msg>
<status status="PASS" starttime="20230310 22:54:12.088" endtime="20230310 22:54:12.089"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20230310 22:54:12.090" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20230310 22:54:12.091" level="INFO">${version_file_contents} = #Fri Mar 10 22:52:45 UTC 2023
cTime=1678488061344
clusterID=CID-d8d7fcf8-04e0-4b43-9ae2-eefeb561683b
nodeType=SCM
scmUuid=af9b2ba2-ce52-4d43-bbf2-6c00e161fbdb
layoutVersion=4
primaryScmNodeId=af9b2ba2...</msg>
<status status="PASS" starttime="20230310 22:54:12.090" endtime="20230310 22:54:12.091"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230310 22:54:12.092" level="INFO">${version_line} = layoutVersion=4</msg>
<status status="PASS" starttime="20230310 22:54:12.091" endtime="20230310 22:54:12.092"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:54:12.092" endtime="20230310 22:54:12.092"/>
</kw>
<status status="PASS" starttime="20230310 22:54:12.089" endtime="20230310 22:54:12.092"/>
</kw>
<status status="PASS" starttime="20230310 22:54:12.089" endtime="20230310 22:54:12.093"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:54:12.084" endtime="20230310 22:54:12.093"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20230310 22:54:12.004" endtime="20230310 22:54:12.094"/>
</suite>
<suite id="s1-s9" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s9-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230310 22:55:22.365" level="INFO">${random} = 45279</msg>
<status status="PASS" starttime="20230310 22:55:22.364" endtime="20230310 22:55:22.365"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:55:22.381" level="INFO">Running command 'ozone sh key get /old2-volume/old2-bucket/old2-key /tmp/key-45279 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:55:30.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:55:30.005" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:55:22.368" endtime="20230310 22:55:30.005"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:55:30.006" level="INFO"/>
<status status="PASS" starttime="20230310 22:55:30.005" endtime="20230310 22:55:30.006"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:55:30.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:55:30.007" endtime="20230310 22:55:30.008"/>
</kw>
<status status="PASS" starttime="20230310 22:55:22.366" endtime="20230310 22:55:30.008"/>
</kw>
<msg timestamp="20230310 22:55:30.008" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:55:22.366" endtime="20230310 22:55:30.010"/>
</kw>
<msg timestamp="20230310 22:55:30.010" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:55:22.365" endtime="20230310 22:55:30.010"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:55:30.010" endtime="20230310 22:55:30.011"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:55:30.016" level="INFO">Running command 'cat /tmp/key-45279 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:55:30.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:55:30.019" level="INFO">${output} = old2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230310 22:55:30.012" endtime="20230310 22:55:30.019"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:55:30.020" level="INFO">old2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230310 22:55:30.020" endtime="20230310 22:55:30.021"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:55:30.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:55:30.021" endtime="20230310 22:55:30.022"/>
</kw>
<msg timestamp="20230310 22:55:30.022" level="INFO">${output} = old2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230310 22:55:30.011" endtime="20230310 22:55:30.022"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:55:30.022" endtime="20230310 22:55:30.023"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:55:30.027" level="INFO">Running command 'rm /tmp/key-45279 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:55:30.030" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:55:30.031" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:55:30.024" endtime="20230310 22:55:30.031"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:55:30.032" level="INFO"/>
<status status="PASS" starttime="20230310 22:55:30.031" endtime="20230310 22:55:30.032"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:55:30.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:55:30.032" endtime="20230310 22:55:30.033"/>
</kw>
<status status="PASS" starttime="20230310 22:55:30.023" endtime="20230310 22:55:30.033"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:55:22.361" endtime="20230310 22:55:30.033"/>
</test>
<test id="s1-s9-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:55:30.042" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:55:30.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:55:30.860" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:55:30.039" endtime="20230310 22:55:30.860"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:55:30.862" level="INFO"/>
<status status="PASS" starttime="20230310 22:55:30.861" endtime="20230310 22:55:30.862"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:55:30.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:55:30.862" endtime="20230310 22:55:30.863"/>
</kw>
<status status="PASS" starttime="20230310 22:55:30.039" endtime="20230310 22:55:30.864"/>
</kw>
<msg timestamp="20230310 22:55:30.864" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:55:30.038" endtime="20230310 22:55:30.864"/>
</kw>
<status status="PASS" starttime="20230310 22:55:30.037" endtime="20230310 22:55:30.865"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:55:30.870" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:55:31.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:55:31.533" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:55:30.867" endtime="20230310 22:55:31.533"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:55:31.534" level="INFO"/>
<status status="PASS" starttime="20230310 22:55:31.533" endtime="20230310 22:55:31.534"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:55:31.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:55:31.535" endtime="20230310 22:55:31.535"/>
</kw>
<status status="PASS" starttime="20230310 22:55:30.866" endtime="20230310 22:55:31.536"/>
</kw>
<msg timestamp="20230310 22:55:31.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:55:30.866" endtime="20230310 22:55:31.537"/>
</kw>
<status status="PASS" starttime="20230310 22:55:30.865" endtime="20230310 22:55:31.537"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:55:31.542" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:55:32.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:55:32.248" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:55:31.539" endtime="20230310 22:55:32.248"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:55:32.249" level="INFO"/>
<status status="PASS" starttime="20230310 22:55:32.249" endtime="20230310 22:55:32.250"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:55:32.250" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:55:32.250" endtime="20230310 22:55:32.250"/>
</kw>
<status status="PASS" starttime="20230310 22:55:31.538" endtime="20230310 22:55:32.251"/>
</kw>
<msg timestamp="20230310 22:55:32.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:55:31.538" endtime="20230310 22:55:32.251"/>
</kw>
<status status="PASS" starttime="20230310 22:55:31.537" endtime="20230310 22:55:32.252"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:55:32.256" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:55:32.848" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:55:32.848" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:55:32.253" endtime="20230310 22:55:32.848"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:55:32.850" level="INFO"/>
<status status="PASS" starttime="20230310 22:55:32.848" endtime="20230310 22:55:32.850"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:55:32.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:55:32.850" endtime="20230310 22:55:32.851"/>
</kw>
<status status="PASS" starttime="20230310 22:55:32.253" endtime="20230310 22:55:32.851"/>
</kw>
<msg timestamp="20230310 22:55:32.851" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:55:32.252" endtime="20230310 22:55:32.852"/>
</kw>
<status status="PASS" starttime="20230310 22:55:32.252" endtime="20230310 22:55:32.852"/>
</kw>
<status status="PASS" starttime="20230310 22:55:30.037" endtime="20230310 22:55:32.852"/>
</kw>
<status status="PASS" starttime="20230310 22:55:30.036" endtime="20230310 22:55:32.853"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:55:30.035" endtime="20230310 22:55:32.853"/>
</test>
<test id="s1-s9-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:55:32.860" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old2-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:55:33.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:55:33.696" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 10 Mar 2023 22:50:07 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230310 22:55:32.857" endtime="20230310 22:55:33.696"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:55:33.698" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 10 Mar 2023 22:50:07 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 10 Mar 2023 22:55:33 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230310 22:55:33.697" endtime="20230310 22:55:33.698"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:55:33.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:55:33.698" endtime="20230310 22:55:33.699"/>
</kw>
<msg timestamp="20230310 22:55:33.700" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 10 Mar 2023 22:50:07 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230310 22:55:32.856" endtime="20230310 22:55:33.700"/>
</kw>
<msg timestamp="20230310 22:55:33.700" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 10 Mar 2023 22:50:07 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230310 22:55:32.855" endtime="20230310 22:55:33.700"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:55:33.700" endtime="20230310 22:55:33.701"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:55:33.705" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:55:33.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:55:33.709" level="INFO">${output} = old2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230310 22:55:33.702" endtime="20230310 22:55:33.709"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:55:33.710" level="INFO">old2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230310 22:55:33.709" endtime="20230310 22:55:33.710"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:55:33.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:55:33.710" endtime="20230310 22:55:33.712"/>
</kw>
<msg timestamp="20230310 22:55:33.712" level="INFO">${output} = old2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230310 22:55:33.701" endtime="20230310 22:55:33.712"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:55:33.713" endtime="20230310 22:55:33.714"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:55:33.717" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:55:33.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:55:33.721" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:55:33.714" endtime="20230310 22:55:33.721"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:55:33.723" level="INFO"/>
<status status="PASS" starttime="20230310 22:55:33.722" endtime="20230310 22:55:33.723"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:55:33.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:55:33.723" endtime="20230310 22:55:33.724"/>
</kw>
<status status="PASS" starttime="20230310 22:55:33.714" endtime="20230310 22:55:33.724"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:55:32.854" endtime="20230310 22:55:33.724"/>
</test>
<test id="s1-s9-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:55:33.733" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old2-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:55:34.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:55:34.763" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 10 Mar 2023 22:50:11 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230310 22:55:33.730" endtime="20230310 22:55:34.763"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:55:34.764" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 10 Mar 2023 22:50:11 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 10 Mar 2023 22:55:34 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230310 22:55:34.763" endtime="20230310 22:55:34.764"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:55:34.765" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:55:34.765" endtime="20230310 22:55:34.766"/>
</kw>
<msg timestamp="20230310 22:55:34.766" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 10 Mar 2023 22:50:11 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230310 22:55:33.729" endtime="20230310 22:55:34.766"/>
</kw>
<msg timestamp="20230310 22:55:34.767" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 10 Mar 2023 22:50:11 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230310 22:55:33.728" endtime="20230310 22:55:34.767"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:55:34.767" endtime="20230310 22:55:34.768"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:55:34.772" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:55:34.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:55:34.776" level="INFO">${output} = old2: key created using S3 API</msg>
<status status="PASS" starttime="20230310 22:55:34.769" endtime="20230310 22:55:34.776"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:55:34.777" level="INFO">old2: key created using S3 API</msg>
<status status="PASS" starttime="20230310 22:55:34.776" endtime="20230310 22:55:34.777"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:55:34.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:55:34.778" endtime="20230310 22:55:34.778"/>
</kw>
<msg timestamp="20230310 22:55:34.779" level="INFO">${output} = old2: key created using S3 API</msg>
<status status="PASS" starttime="20230310 22:55:34.768" endtime="20230310 22:55:34.779"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:55:34.780" endtime="20230310 22:55:34.780"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:55:34.784" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:55:34.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:55:34.791" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:55:34.781" endtime="20230310 22:55:34.791"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:55:34.793" level="INFO"/>
<status status="PASS" starttime="20230310 22:55:34.792" endtime="20230310 22:55:34.793"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:55:34.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:55:34.793" endtime="20230310 22:55:34.794"/>
</kw>
<status status="PASS" starttime="20230310 22:55:34.780" endtime="20230310 22:55:34.794"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:55:33.726" endtime="20230310 22:55:34.795"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230310 22:55:22.230" endtime="20230310 22:55:34.797"/>
</suite>
<suite id="s1-s10" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s10-t1" name="Create a volume and bucket" line="28">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:55:40.469" level="INFO">Running command 'ozone sh volume create new2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:55:44.815" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:55:44.815" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:55:40.462" endtime="20230310 22:55:44.815"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:55:44.817" level="INFO"/>
<status status="PASS" starttime="20230310 22:55:44.816" endtime="20230310 22:55:44.817"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:55:44.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:55:44.817" endtime="20230310 22:55:44.818"/>
</kw>
<status status="PASS" starttime="20230310 22:55:40.462" endtime="20230310 22:55:44.819"/>
</kw>
<msg timestamp="20230310 22:55:44.819" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:55:40.461" endtime="20230310 22:55:44.820"/>
</kw>
<msg timestamp="20230310 22:55:44.820" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:55:40.460" endtime="20230310 22:55:44.821"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:55:44.821" endtime="20230310 22:55:44.821"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:55:44.826" level="INFO">Running command 'ozone sh bucket create /new2-volume/new2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:55:49.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:55:49.294" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:55:44.823" endtime="20230310 22:55:49.294"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:55:49.296" level="INFO"/>
<status status="PASS" starttime="20230310 22:55:49.295" endtime="20230310 22:55:49.296"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:55:49.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:55:49.298" endtime="20230310 22:55:49.298"/>
</kw>
<status status="PASS" starttime="20230310 22:55:44.823" endtime="20230310 22:55:49.299"/>
</kw>
<msg timestamp="20230310 22:55:49.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:55:44.822" endtime="20230310 22:55:49.300"/>
</kw>
<msg timestamp="20230310 22:55:49.300" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:55:44.821" endtime="20230310 22:55:49.300"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:55:49.301" endtime="20230310 22:55:49.301"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:55:40.459" endtime="20230310 22:55:49.302"/>
</test>
<test id="s1-s10-t2" name="Create key" line="35">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:55:49.310" level="INFO">Running command 'echo "new2: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230310 22:55:49.313" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:55:49.313" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:55:49.307" endtime="20230310 22:55:49.314"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:55:49.315" level="INFO"/>
<status status="PASS" starttime="20230310 22:55:49.314" endtime="20230310 22:55:49.315"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:55:49.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:55:49.316" endtime="20230310 22:55:49.317"/>
</kw>
<status status="PASS" starttime="20230310 22:55:49.306" endtime="20230310 22:55:49.317"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:55:49.322" level="INFO">Running command 'ozone sh key put /new2-volume/new2-bucket/new2-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:55:57.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:55:57.747" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:55:49.320" endtime="20230310 22:55:57.747"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:55:57.748" level="INFO"/>
<status status="PASS" starttime="20230310 22:55:57.747" endtime="20230310 22:55:57.748"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:55:57.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:55:57.748" endtime="20230310 22:55:57.749"/>
</kw>
<status status="PASS" starttime="20230310 22:55:49.319" endtime="20230310 22:55:57.750"/>
</kw>
<msg timestamp="20230310 22:55:57.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:55:49.319" endtime="20230310 22:55:57.750"/>
</kw>
<msg timestamp="20230310 22:55:57.751" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:55:49.317" endtime="20230310 22:55:57.751"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:55:57.751" endtime="20230310 22:55:57.752"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:55:57.755" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:55:57.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:55:57.759" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:55:57.752" endtime="20230310 22:55:57.759"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:55:57.760" level="INFO"/>
<status status="PASS" starttime="20230310 22:55:57.759" endtime="20230310 22:55:57.760"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:55:57.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:55:57.760" endtime="20230310 22:55:57.762"/>
</kw>
<status status="PASS" starttime="20230310 22:55:57.752" endtime="20230310 22:55:57.762"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:55:49.305" endtime="20230310 22:55:57.762"/>
</test>
<test id="s1-s10-t3" name="Create a bucket in s3v volume" line="41">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:55:57.770" level="INFO">Running command 'ozone sh bucket create /s3v/new2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:56:02.181" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:56:02.181" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:55:57.767" endtime="20230310 22:56:02.181"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:56:02.183" level="INFO"/>
<status status="PASS" starttime="20230310 22:56:02.182" endtime="20230310 22:56:02.183"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:56:02.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:56:02.183" endtime="20230310 22:56:02.184"/>
</kw>
<status status="PASS" starttime="20230310 22:55:57.766" endtime="20230310 22:56:02.184"/>
</kw>
<msg timestamp="20230310 22:56:02.185" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:55:57.766" endtime="20230310 22:56:02.185"/>
</kw>
<msg timestamp="20230310 22:56:02.185" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:55:57.765" endtime="20230310 22:56:02.186"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:56:02.186" endtime="20230310 22:56:02.186"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:55:57.764" endtime="20230310 22:56:02.187"/>
</test>
<test id="s1-s10-t4" name="Create key in the bucket in s3v volume" line="46">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:56:02.192" level="INFO">Running command 'echo "new2: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230310 22:56:02.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:56:02.195" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:56:02.190" endtime="20230310 22:56:02.195"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:56:02.196" level="INFO"/>
<status status="PASS" starttime="20230310 22:56:02.196" endtime="20230310 22:56:02.196"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:56:02.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:56:02.197" endtime="20230310 22:56:02.197"/>
</kw>
<status status="PASS" starttime="20230310 22:56:02.189" endtime="20230310 22:56:02.198"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:56:02.203" level="INFO">Running command 'ozone sh key put /s3v/new2-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:56:10.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:56:10.178" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:56:02.200" endtime="20230310 22:56:10.178"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:56:10.180" level="INFO"/>
<status status="PASS" starttime="20230310 22:56:10.179" endtime="20230310 22:56:10.180"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:56:10.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:56:10.180" endtime="20230310 22:56:10.180"/>
</kw>
<status status="PASS" starttime="20230310 22:56:02.199" endtime="20230310 22:56:10.181"/>
</kw>
<msg timestamp="20230310 22:56:10.181" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:56:02.199" endtime="20230310 22:56:10.182"/>
</kw>
<msg timestamp="20230310 22:56:10.182" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:56:02.198" endtime="20230310 22:56:10.182"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:56:10.182" endtime="20230310 22:56:10.183"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:56:10.186" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:56:10.192" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:56:10.192" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:56:10.183" endtime="20230310 22:56:10.192"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:56:10.194" level="INFO"/>
<status status="PASS" starttime="20230310 22:56:10.193" endtime="20230310 22:56:10.194"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:56:10.195" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:56:10.194" endtime="20230310 22:56:10.195"/>
</kw>
<status status="PASS" starttime="20230310 22:56:10.183" endtime="20230310 22:56:10.195"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:56:02.188" endtime="20230310 22:56:10.196"/>
</test>
<test id="s1-s10-t5" name="Setup credentials for S3" line="52">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:56:10.203" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:56:11.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:56:11.012" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:56:10.200" endtime="20230310 22:56:11.012"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:56:11.018" level="INFO"/>
<status status="PASS" starttime="20230310 22:56:11.013" endtime="20230310 22:56:11.018"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:56:11.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:56:11.019" endtime="20230310 22:56:11.021"/>
</kw>
<status status="PASS" starttime="20230310 22:56:10.199" endtime="20230310 22:56:11.021"/>
</kw>
<msg timestamp="20230310 22:56:11.021" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:56:10.199" endtime="20230310 22:56:11.022"/>
</kw>
<status status="PASS" starttime="20230310 22:56:10.198" endtime="20230310 22:56:11.022"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:56:11.039" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:56:11.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:56:11.697" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:56:11.031" endtime="20230310 22:56:11.697"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:56:11.699" level="INFO"/>
<status status="PASS" starttime="20230310 22:56:11.698" endtime="20230310 22:56:11.699"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:56:11.700" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:56:11.700" endtime="20230310 22:56:11.700"/>
</kw>
<status status="PASS" starttime="20230310 22:56:11.024" endtime="20230310 22:56:11.701"/>
</kw>
<msg timestamp="20230310 22:56:11.701" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:56:11.024" endtime="20230310 22:56:11.702"/>
</kw>
<status status="PASS" starttime="20230310 22:56:11.023" endtime="20230310 22:56:11.702"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:56:11.707" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:56:12.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:56:12.491" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:56:11.704" endtime="20230310 22:56:12.491"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:56:12.492" level="INFO"/>
<status status="PASS" starttime="20230310 22:56:12.491" endtime="20230310 22:56:12.492"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:56:12.510" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:56:12.493" endtime="20230310 22:56:12.510"/>
</kw>
<status status="PASS" starttime="20230310 22:56:11.703" endtime="20230310 22:56:12.510"/>
</kw>
<msg timestamp="20230310 22:56:12.510" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:56:11.703" endtime="20230310 22:56:12.511"/>
</kw>
<status status="PASS" starttime="20230310 22:56:11.702" endtime="20230310 22:56:12.511"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:56:12.517" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:56:13.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:56:13.097" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:56:12.513" endtime="20230310 22:56:13.097"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:56:13.098" level="INFO"/>
<status status="PASS" starttime="20230310 22:56:13.098" endtime="20230310 22:56:13.098"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:56:13.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:56:13.099" endtime="20230310 22:56:13.099"/>
</kw>
<status status="PASS" starttime="20230310 22:56:12.513" endtime="20230310 22:56:13.100"/>
</kw>
<msg timestamp="20230310 22:56:13.100" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:56:12.512" endtime="20230310 22:56:13.100"/>
</kw>
<status status="PASS" starttime="20230310 22:56:12.512" endtime="20230310 22:56:13.101"/>
</kw>
<status status="PASS" starttime="20230310 22:56:10.198" endtime="20230310 22:56:13.101"/>
</kw>
<status status="PASS" starttime="20230310 22:56:10.198" endtime="20230310 22:56:13.101"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:56:10.197" endtime="20230310 22:56:13.101"/>
</test>
<test id="s1-s10-t6" name="Try to create a bucket using S3 API" line="56">
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:56:13.109" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket new2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:56:14.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:56:14.008" level="INFO">${output} = {
    "Location": "http://s3g:9878/new2-bucket"
}</msg>
<status status="PASS" starttime="20230310 22:56:13.106" endtime="20230310 22:56:14.009"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:56:14.010" level="INFO">{
    "Location": "http://s3g:9878/new2-bucket"
}</msg>
<status status="PASS" starttime="20230310 22:56:14.009" endtime="20230310 22:56:14.010"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:56:14.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:56:14.011" endtime="20230310 22:56:14.011"/>
</kw>
<status status="PASS" starttime="20230310 22:56:13.105" endtime="20230310 22:56:14.012"/>
</kw>
<msg timestamp="20230310 22:56:14.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:56:13.105" endtime="20230310 22:56:14.013"/>
</kw>
<msg timestamp="20230310 22:56:14.013" level="INFO">${output} = {
    "Location": "http://s3g:9878/new2-bucket"
}</msg>
<status status="PASS" starttime="20230310 22:56:13.104" endtime="20230310 22:56:14.013"/>
</kw>
<msg timestamp="20230310 22:56:14.013" level="INFO">${result} = {
    "Location": "http://s3g:9878/new2-bucket"
}</msg>
<status status="PASS" starttime="20230310 22:56:13.104" endtime="20230310 22:56:14.013"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:56:14.014" endtime="20230310 22:56:14.014"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:56:14.014" endtime="20230310 22:56:14.015"/>
</kw>
<msg timestamp="20230310 22:56:14.015" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20230310 22:56:13.103" endtime="20230310 22:56:14.015"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230310 22:56:14.015" endtime="20230310 22:56:14.016"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:56:13.102" endtime="20230310 22:56:14.016"/>
</test>
<test id="s1-s10-t7" name="Create key using S3 API" line="61">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:56:14.024" level="INFO">Running command 'echo "new2: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230310 22:56:14.026" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:56:14.027" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:56:14.019" endtime="20230310 22:56:14.027"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:56:14.028" level="INFO"/>
<status status="PASS" starttime="20230310 22:56:14.027" endtime="20230310 22:56:14.028"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:56:14.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:56:14.028" endtime="20230310 22:56:14.029"/>
</kw>
<status status="PASS" starttime="20230310 22:56:14.019" endtime="20230310 22:56:14.030"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:56:14.035" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket new2-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:56:15.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:56:15.971" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:56:14.032" endtime="20230310 22:56:15.971"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:56:15.983" level="INFO"/>
<status status="PASS" starttime="20230310 22:56:15.976" endtime="20230310 22:56:15.983"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:56:15.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:56:15.983" endtime="20230310 22:56:15.990"/>
</kw>
<msg timestamp="20230310 22:56:15.990" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:56:14.031" endtime="20230310 22:56:15.990"/>
</kw>
<msg timestamp="20230310 22:56:15.994" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:56:14.030" endtime="20230310 22:56:15.994"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:56:15.994" endtime="20230310 22:56:15.995"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:56:16.023" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:56:16.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:56:16.034" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:56:15.997" endtime="20230310 22:56:16.034"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:56:16.038" level="INFO"/>
<status status="PASS" starttime="20230310 22:56:16.036" endtime="20230310 22:56:16.038"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:56:16.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:56:16.038" endtime="20230310 22:56:16.040"/>
</kw>
<status status="PASS" starttime="20230310 22:56:15.996" endtime="20230310 22:56:16.041"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:56:14.018" endtime="20230310 22:56:16.043"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230310 22:55:40.354" endtime="20230310 22:56:16.046"/>
</suite>
<suite id="s1-s11" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s11-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230310 22:56:21.134" level="INFO">${random} = 49775</msg>
<status status="PASS" starttime="20230310 22:56:21.133" endtime="20230310 22:56:21.134"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:56:21.143" level="INFO">Running command 'ozone sh key get /new2-volume/new2-bucket/new2-key /tmp/key-49775 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:56:29.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:56:29.078" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:56:21.138" endtime="20230310 22:56:29.078"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:56:29.079" level="INFO"/>
<status status="PASS" starttime="20230310 22:56:29.078" endtime="20230310 22:56:29.079"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:56:29.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:56:29.080" endtime="20230310 22:56:29.080"/>
</kw>
<status status="PASS" starttime="20230310 22:56:21.136" endtime="20230310 22:56:29.081"/>
</kw>
<msg timestamp="20230310 22:56:29.081" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:56:21.135" endtime="20230310 22:56:29.083"/>
</kw>
<msg timestamp="20230310 22:56:29.083" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:56:21.134" endtime="20230310 22:56:29.083"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:56:29.083" endtime="20230310 22:56:29.084"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:56:29.089" level="INFO">Running command 'cat /tmp/key-49775 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:56:29.101" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:56:29.101" level="INFO">${output} = new2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230310 22:56:29.085" endtime="20230310 22:56:29.101"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:56:29.107" level="INFO">new2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230310 22:56:29.105" endtime="20230310 22:56:29.107"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:56:29.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:56:29.108" endtime="20230310 22:56:29.109"/>
</kw>
<msg timestamp="20230310 22:56:29.109" level="INFO">${output} = new2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230310 22:56:29.084" endtime="20230310 22:56:29.109"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:56:29.110" endtime="20230310 22:56:29.110"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:56:29.118" level="INFO">Running command 'rm /tmp/key-49775 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:56:29.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:56:29.121" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:56:29.114" endtime="20230310 22:56:29.122"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:56:29.123" level="INFO"/>
<status status="PASS" starttime="20230310 22:56:29.122" endtime="20230310 22:56:29.123"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:56:29.124" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:56:29.123" endtime="20230310 22:56:29.124"/>
</kw>
<status status="PASS" starttime="20230310 22:56:29.111" endtime="20230310 22:56:29.125"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:56:21.132" endtime="20230310 22:56:29.125"/>
</test>
<test id="s1-s11-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:56:29.134" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:56:29.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:56:29.925" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:56:29.130" endtime="20230310 22:56:29.925"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:56:29.927" level="INFO"/>
<status status="PASS" starttime="20230310 22:56:29.926" endtime="20230310 22:56:29.927"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:56:29.928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:56:29.927" endtime="20230310 22:56:29.928"/>
</kw>
<status status="PASS" starttime="20230310 22:56:29.130" endtime="20230310 22:56:29.929"/>
</kw>
<msg timestamp="20230310 22:56:29.929" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:56:29.129" endtime="20230310 22:56:29.931"/>
</kw>
<status status="PASS" starttime="20230310 22:56:29.128" endtime="20230310 22:56:29.931"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:56:29.937" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:56:30.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:56:30.815" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:56:29.933" endtime="20230310 22:56:30.815"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:56:30.820" level="INFO"/>
<status status="PASS" starttime="20230310 22:56:30.818" endtime="20230310 22:56:30.820"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:56:30.821" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:56:30.820" endtime="20230310 22:56:30.823"/>
</kw>
<status status="PASS" starttime="20230310 22:56:29.932" endtime="20230310 22:56:30.823"/>
</kw>
<msg timestamp="20230310 22:56:30.823" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:56:29.932" endtime="20230310 22:56:30.824"/>
</kw>
<status status="PASS" starttime="20230310 22:56:29.931" endtime="20230310 22:56:30.825"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:56:30.832" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:56:31.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:56:31.585" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:56:30.828" endtime="20230310 22:56:31.585"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:56:31.587" level="INFO"/>
<status status="PASS" starttime="20230310 22:56:31.586" endtime="20230310 22:56:31.587"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:56:31.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:56:31.587" endtime="20230310 22:56:31.588"/>
</kw>
<status status="PASS" starttime="20230310 22:56:30.827" endtime="20230310 22:56:31.588"/>
</kw>
<msg timestamp="20230310 22:56:31.588" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:56:30.826" endtime="20230310 22:56:31.589"/>
</kw>
<status status="PASS" starttime="20230310 22:56:30.825" endtime="20230310 22:56:31.589"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:56:31.595" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:56:32.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:56:32.306" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:56:31.591" endtime="20230310 22:56:32.306"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:56:32.308" level="INFO"/>
<status status="PASS" starttime="20230310 22:56:32.307" endtime="20230310 22:56:32.308"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:56:32.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:56:32.308" endtime="20230310 22:56:32.310"/>
</kw>
<status status="PASS" starttime="20230310 22:56:31.590" endtime="20230310 22:56:32.310"/>
</kw>
<msg timestamp="20230310 22:56:32.310" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:56:31.590" endtime="20230310 22:56:32.311"/>
</kw>
<status status="PASS" starttime="20230310 22:56:31.589" endtime="20230310 22:56:32.311"/>
</kw>
<status status="PASS" starttime="20230310 22:56:29.128" endtime="20230310 22:56:32.311"/>
</kw>
<status status="PASS" starttime="20230310 22:56:29.127" endtime="20230310 22:56:32.311"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:56:29.126" endtime="20230310 22:56:32.312"/>
</test>
<test id="s1-s11-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:56:32.319" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new2-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:56:33.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:56:33.368" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 10 Mar 2023 22:56:09 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230310 22:56:32.316" endtime="20230310 22:56:33.368"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:56:33.369" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 10 Mar 2023 22:56:09 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 10 Mar 2023 22:56:33 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230310 22:56:33.368" endtime="20230310 22:56:33.374"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:56:33.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:56:33.374" endtime="20230310 22:56:33.375"/>
</kw>
<msg timestamp="20230310 22:56:33.376" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 10 Mar 2023 22:56:09 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230310 22:56:32.315" endtime="20230310 22:56:33.376"/>
</kw>
<msg timestamp="20230310 22:56:33.376" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 10 Mar 2023 22:56:09 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230310 22:56:32.314" endtime="20230310 22:56:33.376"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:56:33.377" endtime="20230310 22:56:33.377"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:56:33.382" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:56:33.386" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:56:33.386" level="INFO">${output} = new2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230310 22:56:33.378" endtime="20230310 22:56:33.387"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:56:33.389" level="INFO">new2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230310 22:56:33.388" endtime="20230310 22:56:33.389"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:56:33.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:56:33.389" endtime="20230310 22:56:33.390"/>
</kw>
<msg timestamp="20230310 22:56:33.391" level="INFO">${output} = new2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230310 22:56:33.377" endtime="20230310 22:56:33.391"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:56:33.391" endtime="20230310 22:56:33.392"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:56:33.398" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:56:33.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:56:33.402" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:56:33.393" endtime="20230310 22:56:33.402"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:56:33.404" level="INFO"/>
<status status="PASS" starttime="20230310 22:56:33.403" endtime="20230310 22:56:33.404"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:56:33.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:56:33.404" endtime="20230310 22:56:33.405"/>
</kw>
<status status="PASS" starttime="20230310 22:56:33.392" endtime="20230310 22:56:33.406"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:56:32.313" endtime="20230310 22:56:33.406"/>
</test>
<test id="s1-s11-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:56:33.415" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new2-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:56:34.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:56:34.442" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 10 Mar 2023 22:56:15 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230310 22:56:33.411" endtime="20230310 22:56:34.442"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:56:34.443" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 10 Mar 2023 22:56:15 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 10 Mar 2023 22:56:34 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230310 22:56:34.442" endtime="20230310 22:56:34.443"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:56:34.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:56:34.444" endtime="20230310 22:56:34.444"/>
</kw>
<msg timestamp="20230310 22:56:34.445" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 10 Mar 2023 22:56:15 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230310 22:56:33.410" endtime="20230310 22:56:34.445"/>
</kw>
<msg timestamp="20230310 22:56:34.445" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 10 Mar 2023 22:56:15 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230310 22:56:33.409" endtime="20230310 22:56:34.445"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:56:34.445" endtime="20230310 22:56:34.446"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:56:34.450" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:56:34.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:56:34.454" level="INFO">${output} = new2: key created using S3 API</msg>
<status status="PASS" starttime="20230310 22:56:34.447" endtime="20230310 22:56:34.454"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:56:34.455" level="INFO">new2: key created using S3 API</msg>
<status status="PASS" starttime="20230310 22:56:34.454" endtime="20230310 22:56:34.455"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:56:34.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:56:34.455" endtime="20230310 22:56:34.456"/>
</kw>
<msg timestamp="20230310 22:56:34.457" level="INFO">${output} = new2: key created using S3 API</msg>
<status status="PASS" starttime="20230310 22:56:34.446" endtime="20230310 22:56:34.457"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:56:34.457" endtime="20230310 22:56:34.458"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:56:34.463" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:56:34.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:56:34.467" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:56:34.459" endtime="20230310 22:56:34.467"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:56:34.469" level="INFO"/>
<status status="PASS" starttime="20230310 22:56:34.468" endtime="20230310 22:56:34.469"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:56:34.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:56:34.469" endtime="20230310 22:56:34.470"/>
</kw>
<status status="PASS" starttime="20230310 22:56:34.458" endtime="20230310 22:56:34.470"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:56:33.408" endtime="20230310 22:56:34.470"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230310 22:56:21.007" endtime="20230310 22:56:34.472"/>
</suite>
<suite id="s1-s12" name="Upgrade-Ec-Check" source="/opt/hadoop/smoketest/ec/upgrade-ec-check.robot">
<test id="s1-s12-t1" name="Test EC After Finalization" line="35">
<kw name="Execute" library="os">
<arg>ozone sh volume create /ectest-new</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:56:39.345" level="INFO">Running command 'ozone sh volume create /ectest-new 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:56:43.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:56:43.335" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:56:39.340" endtime="20230310 22:56:43.335"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:56:43.337" level="INFO"/>
<status status="PASS" starttime="20230310 22:56:43.336" endtime="20230310 22:56:43.337"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:56:43.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:56:43.337" endtime="20230310 22:56:43.338"/>
</kw>
<status status="PASS" starttime="20230310 22:56:39.339" endtime="20230310 22:56:43.338"/>
</kw>
<msg timestamp="20230310 22:56:43.338" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:56:39.338" endtime="20230310 22:56:43.340"/>
</kw>
<status status="PASS" starttime="20230310 22:56:39.338" endtime="20230310 22:56:43.340"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create --replication rs-3-2-1024k --type EC /ectest-new/ectest</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:56:43.347" level="INFO">Running command 'ozone sh bucket create --replication rs-3-2-1024k --type EC /ectest-new/ectest 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:56:47.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:56:47.940" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:56:43.343" endtime="20230310 22:56:47.940"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:56:47.942" level="INFO"/>
<status status="PASS" starttime="20230310 22:56:47.941" endtime="20230310 22:56:47.942"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:56:47.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:56:47.942" endtime="20230310 22:56:47.943"/>
</kw>
<status status="PASS" starttime="20230310 22:56:43.342" endtime="20230310 22:56:47.943"/>
</kw>
<msg timestamp="20230310 22:56:47.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:56:43.342" endtime="20230310 22:56:47.944"/>
</kw>
<status status="PASS" starttime="20230310 22:56:43.341" endtime="20230310 22:56:47.944"/>
</kw>
<kw name="Verify Bucket EC Replication Config" library="shell">
<arg>/ectest-new/ectest</arg>
<arg>RS</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1048576</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${bucket} | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:56:47.951" level="INFO">Running command 'ozone sh bucket info /ectest-new/ectest | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize' 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:56:52.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:56:52.541" level="INFO">${output} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20230310 22:56:47.948" endtime="20230310 22:56:52.541"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:56:52.543" level="INFO">EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20230310 22:56:52.542" endtime="20230310 22:56:52.543"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:56:52.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:56:52.543" endtime="20230310 22:56:52.544"/>
</kw>
<status status="PASS" starttime="20230310 22:56:47.947" endtime="20230310 22:56:52.545"/>
</kw>
<msg timestamp="20230310 22:56:52.545" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:56:47.946" endtime="20230310 22:56:52.547"/>
</kw>
<msg timestamp="20230310 22:56:52.548" level="INFO">${result} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20230310 22:56:47.946" endtime="20230310 22:56:52.548"/>
</kw>
<kw name="Verify EC Replication Config" library="shell">
<arg>${result}</arg>
<arg>${encoding}</arg>
<arg>${data}</arg>
<arg>${parity}</arg>
<arg>${chunksize}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)EC$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230310 22:56:52.550" endtime="20230310 22:56:52.550"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${encoding}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230310 22:56:52.551" endtime="20230310 22:56:52.551"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${data}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230310 22:56:52.551" endtime="20230310 22:56:52.552"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${parity}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230310 22:56:52.552" endtime="20230310 22:56:52.554"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${chunksize}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230310 22:56:52.554" endtime="20230310 22:56:52.555"/>
</kw>
<status status="PASS" starttime="20230310 22:56:52.548" endtime="20230310 22:56:52.555"/>
</kw>
<status status="PASS" starttime="20230310 22:56:47.945" endtime="20230310 22:56:52.555"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /ectest-new/testpropchange</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:56:52.566" level="INFO">Running command 'ozone sh bucket create /ectest-new/testpropchange 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:56:56.866" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:56:56.866" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:56:52.560" endtime="20230310 22:56:56.866"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:56:56.868" level="INFO"/>
<status status="PASS" starttime="20230310 22:56:56.867" endtime="20230310 22:56:56.868"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:56:56.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:56:56.868" endtime="20230310 22:56:56.869"/>
</kw>
<status status="PASS" starttime="20230310 22:56:52.556" endtime="20230310 22:56:56.869"/>
</kw>
<msg timestamp="20230310 22:56:56.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:56:52.556" endtime="20230310 22:56:56.870"/>
</kw>
<status status="PASS" starttime="20230310 22:56:52.555" endtime="20230310 22:56:56.870"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket set-replication-config -r rs-3-2-1024k -t EC /ectest-new/testpropchange</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:56:56.876" level="INFO">Running command 'ozone sh bucket set-replication-config -r rs-3-2-1024k -t EC /ectest-new/testpropchange 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:57:00.944" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:57:00.945" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:56:56.873" endtime="20230310 22:57:00.945"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:57:00.946" level="INFO"/>
<status status="PASS" starttime="20230310 22:57:00.945" endtime="20230310 22:57:00.946"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:57:00.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:57:00.947" endtime="20230310 22:57:00.947"/>
</kw>
<status status="PASS" starttime="20230310 22:56:56.872" endtime="20230310 22:57:00.948"/>
</kw>
<msg timestamp="20230310 22:57:00.948" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:56:56.871" endtime="20230310 22:57:00.948"/>
</kw>
<status status="PASS" starttime="20230310 22:56:56.871" endtime="20230310 22:57:00.949"/>
</kw>
<kw name="Verify Bucket EC Replication Config" library="shell">
<arg>/ectest-new/testpropchange</arg>
<arg>RS</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1048576</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${bucket} | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:57:00.955" level="INFO">Running command 'ozone sh bucket info /ectest-new/testpropchange | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize' 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:57:05.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:57:05.468" level="INFO">${output} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20230310 22:57:00.952" endtime="20230310 22:57:05.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:57:05.470" level="INFO">EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20230310 22:57:05.469" endtime="20230310 22:57:05.470"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:57:05.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:57:05.470" endtime="20230310 22:57:05.472"/>
</kw>
<status status="PASS" starttime="20230310 22:57:00.951" endtime="20230310 22:57:05.473"/>
</kw>
<msg timestamp="20230310 22:57:05.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:57:00.951" endtime="20230310 22:57:05.474"/>
</kw>
<msg timestamp="20230310 22:57:05.474" level="INFO">${result} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20230310 22:57:00.950" endtime="20230310 22:57:05.474"/>
</kw>
<kw name="Verify EC Replication Config" library="shell">
<arg>${result}</arg>
<arg>${encoding}</arg>
<arg>${data}</arg>
<arg>${parity}</arg>
<arg>${chunksize}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)EC$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230310 22:57:05.475" endtime="20230310 22:57:05.476"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${encoding}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230310 22:57:05.477" endtime="20230310 22:57:05.478"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${data}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230310 22:57:05.478" endtime="20230310 22:57:05.478"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${parity}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230310 22:57:05.479" endtime="20230310 22:57:05.479"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${chunksize}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230310 22:57:05.479" endtime="20230310 22:57:05.480"/>
</kw>
<status status="PASS" starttime="20230310 22:57:05.474" endtime="20230310 22:57:05.480"/>
</kw>
<status status="PASS" starttime="20230310 22:57:00.949" endtime="20230310 22:57:05.480"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -r rs-3-2-1024k -t EC /ectest-new/ectest/core-site.xml /etc/hadoop/core-site.xml</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:57:05.486" level="INFO">Running command 'ozone sh key put -r rs-3-2-1024k -t EC /ectest-new/ectest/core-site.xml /etc/hadoop/core-site.xml 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:57:13.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:57:13.172" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:57:05.482" endtime="20230310 22:57:13.172"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:57:13.174" level="INFO"/>
<status status="PASS" starttime="20230310 22:57:13.173" endtime="20230310 22:57:13.174"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:57:13.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:57:13.174" endtime="20230310 22:57:13.174"/>
</kw>
<status status="PASS" starttime="20230310 22:57:05.481" endtime="20230310 22:57:13.175"/>
</kw>
<msg timestamp="20230310 22:57:13.175" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:57:05.481" endtime="20230310 22:57:13.176"/>
</kw>
<status status="PASS" starttime="20230310 22:57:05.480" endtime="20230310 22:57:13.176"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>/ectest-new/ectest/core-site.xml</arg>
<arg>/etc/hadoop/core-site.xml</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230310 22:57:13.179" level="INFO">${postfix} = 09845</msg>
<status status="PASS" starttime="20230310 22:57:13.178" endtime="20230310 22:57:13.179"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230310 22:57:13.180" level="INFO">${tmpfile} = /tmp/tempkey-09845</msg>
<status status="PASS" starttime="20230310 22:57:13.180" endtime="20230310 22:57:13.180"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:57:13.189" level="INFO">Running command 'ozone sh key get /ectest-new/ectest/core-site.xml /tmp/tempkey-09845 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:57:20.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:57:20.197" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:57:13.182" endtime="20230310 22:57:20.197"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:57:20.199" level="INFO"/>
<status status="PASS" starttime="20230310 22:57:20.198" endtime="20230310 22:57:20.199"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:57:20.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:57:20.200" endtime="20230310 22:57:20.200"/>
</kw>
<status status="PASS" starttime="20230310 22:57:13.181" endtime="20230310 22:57:20.201"/>
</kw>
<msg timestamp="20230310 22:57:20.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:57:13.181" endtime="20230310 22:57:20.202"/>
</kw>
<status status="PASS" starttime="20230310 22:57:13.180" endtime="20230310 22:57:20.202"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20230310 22:57:20.205" level="INFO">Running command 'diff -q /etc/hadoop/core-site.xml /tmp/tempkey-09845 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:57:20.211" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20230310 22:57:20.202" endtime="20230310 22:57:20.211"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:57:20.217" level="INFO">Running command 'rm -f /tmp/tempkey-09845 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:57:20.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:57:20.220" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:57:20.214" endtime="20230310 22:57:20.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:57:20.221" level="INFO"/>
<status status="PASS" starttime="20230310 22:57:20.221" endtime="20230310 22:57:20.222"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:57:20.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:57:20.222" endtime="20230310 22:57:20.222"/>
</kw>
<status status="PASS" starttime="20230310 22:57:20.213" endtime="20230310 22:57:20.223"/>
</kw>
<msg timestamp="20230310 22:57:20.223" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:57:20.212" endtime="20230310 22:57:20.224"/>
</kw>
<status status="PASS" starttime="20230310 22:57:20.211" endtime="20230310 22:57:20.224"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230310 22:57:20.225" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20230310 22:57:20.224" endtime="20230310 22:57:20.225"/>
</kw>
<msg timestamp="20230310 22:57:20.225" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20230310 22:57:13.177" endtime="20230310 22:57:20.225"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230310 22:57:20.226" endtime="20230310 22:57:20.226"/>
</kw>
<status status="PASS" starttime="20230310 22:57:13.176" endtime="20230310 22:57:20.226"/>
</kw>
<kw name="Verify Key EC Replication Config" library="shell">
<arg>/ectest-new/ectest/core-site.xml</arg>
<arg>RS</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1048576</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:57:20.232" level="INFO">Running command 'ozone sh key info /ectest-new/ectest/core-site.xml | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize' 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:57:24.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:57:24.628" level="INFO">${output} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20230310 22:57:20.229" endtime="20230310 22:57:24.628"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:57:24.629" level="INFO">EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20230310 22:57:24.628" endtime="20230310 22:57:24.629"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:57:24.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:57:24.629" endtime="20230310 22:57:24.630"/>
</kw>
<status status="PASS" starttime="20230310 22:57:20.228" endtime="20230310 22:57:24.631"/>
</kw>
<msg timestamp="20230310 22:57:24.631" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:57:20.228" endtime="20230310 22:57:24.631"/>
</kw>
<msg timestamp="20230310 22:57:24.632" level="INFO">${result} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20230310 22:57:20.227" endtime="20230310 22:57:24.632"/>
</kw>
<kw name="Verify EC Replication Config" library="shell">
<arg>${result}</arg>
<arg>${encoding}</arg>
<arg>${data}</arg>
<arg>${parity}</arg>
<arg>${chunksize}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)EC$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230310 22:57:24.633" endtime="20230310 22:57:24.634"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${encoding}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230310 22:57:24.634" endtime="20230310 22:57:24.634"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${data}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230310 22:57:24.634" endtime="20230310 22:57:24.635"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${parity}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230310 22:57:24.635" endtime="20230310 22:57:24.636"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${chunksize}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230310 22:57:24.636" endtime="20230310 22:57:24.636"/>
</kw>
<status status="PASS" starttime="20230310 22:57:24.632" endtime="20230310 22:57:24.637"/>
</kw>
<status status="PASS" starttime="20230310 22:57:20.226" endtime="20230310 22:57:24.637"/>
</kw>
<tag>post-finalized-ec-tests</tag>
<status status="PASS" starttime="20230310 22:56:39.337" endtime="20230310 22:57:24.637"/>
</test>
<doc>Test EC during upgrade</doc>
<status status="PASS" starttime="20230310 22:56:39.246" endtime="20230310 22:57:24.639"/>
</suite>
<suite id="s1-s13" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s13-t1" name="Check MLV" line="33">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230310 22:54:16.796" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20230310 22:54:16.796" endtime="20230310 22:54:16.797"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230310 22:54:16.797" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230310 22:54:16.797" endtime="20230310 22:54:16.797"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20230310 22:54:16.803" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230310 22:54:16.802" endtime="20230310 22:54:16.803"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified file is empty.</doc>
<msg timestamp="20230310 22:54:16.803" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20230310 22:54:16.803" endtime="20230310 22:54:16.804"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20230310 22:54:16.806" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20230310 22:54:16.807" level="INFO">${version_file_contents} = #Fri Mar 10 22:53:24 UTC 2023
cTime=1678488062917
clusterID=e3e4587c-aa42-4e86-ae9a-d3e448365275
nodeType=DATANODE
layoutVersion=4
</msg>
<status status="PASS" starttime="20230310 22:54:16.805" endtime="20230310 22:54:16.807"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230310 22:54:16.808" level="INFO">${version_line} = layoutVersion=4</msg>
<status status="PASS" starttime="20230310 22:54:16.807" endtime="20230310 22:54:16.808"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:54:16.808" endtime="20230310 22:54:16.809"/>
</kw>
<status status="PASS" starttime="20230310 22:54:16.804" endtime="20230310 22:54:16.809"/>
</kw>
<status status="PASS" starttime="20230310 22:54:16.804" endtime="20230310 22:54:16.809"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:54:16.794" endtime="20230310 22:54:16.810"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20230310 22:54:16.713" endtime="20230310 22:54:16.811"/>
</suite>
<suite id="s1-s14" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s14-t1" name="Check MLV" line="33">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230310 22:54:21.421" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20230310 22:54:21.421" endtime="20230310 22:54:21.422"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230310 22:54:21.422" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230310 22:54:21.422" endtime="20230310 22:54:21.422"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20230310 22:54:21.423" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230310 22:54:21.422" endtime="20230310 22:54:21.423"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified file is empty.</doc>
<msg timestamp="20230310 22:54:21.424" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20230310 22:54:21.423" endtime="20230310 22:54:21.424"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20230310 22:54:21.425" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20230310 22:54:21.426" level="INFO">${version_file_contents} = #Fri Mar 10 22:53:24 UTC 2023
cTime=1678488060546
clusterID=3892a4e1-c878-42af-adb7-db66a90d61f4
nodeType=DATANODE
layoutVersion=4
</msg>
<status status="PASS" starttime="20230310 22:54:21.425" endtime="20230310 22:54:21.427"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230310 22:54:21.427" level="INFO">${version_line} = layoutVersion=4</msg>
<status status="PASS" starttime="20230310 22:54:21.427" endtime="20230310 22:54:21.427"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:54:21.427" endtime="20230310 22:54:21.428"/>
</kw>
<status status="PASS" starttime="20230310 22:54:21.424" endtime="20230310 22:54:21.428"/>
</kw>
<status status="PASS" starttime="20230310 22:54:21.424" endtime="20230310 22:54:21.428"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:54:21.419" endtime="20230310 22:54:21.429"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20230310 22:54:21.353" endtime="20230310 22:54:21.430"/>
</suite>
<suite id="s1-s15" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s15-t1" name="Check MLV" line="33">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230310 22:54:26.199" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20230310 22:54:26.198" endtime="20230310 22:54:26.199"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230310 22:54:26.200" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230310 22:54:26.199" endtime="20230310 22:54:26.200"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20230310 22:54:26.200" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230310 22:54:26.200" endtime="20230310 22:54:26.200"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified file is empty.</doc>
<msg timestamp="20230310 22:54:26.201" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20230310 22:54:26.201" endtime="20230310 22:54:26.201"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20230310 22:54:26.203" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20230310 22:54:26.204" level="INFO">${version_file_contents} = #Fri Mar 10 22:53:19 UTC 2023
cTime=1678488062451
clusterID=1a6d358d-6662-4447-914c-d709a67ff716
nodeType=DATANODE
layoutVersion=4
</msg>
<status status="PASS" starttime="20230310 22:54:26.203" endtime="20230310 22:54:26.204"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230310 22:54:26.205" level="INFO">${version_line} = layoutVersion=4</msg>
<status status="PASS" starttime="20230310 22:54:26.204" endtime="20230310 22:54:26.205"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:54:26.205" endtime="20230310 22:54:26.205"/>
</kw>
<status status="PASS" starttime="20230310 22:54:26.202" endtime="20230310 22:54:26.206"/>
</kw>
<status status="PASS" starttime="20230310 22:54:26.201" endtime="20230310 22:54:26.206"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:54:26.196" endtime="20230310 22:54:26.206"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20230310 22:54:26.109" endtime="20230310 22:54:26.207"/>
</suite>
<suite id="s1-s16" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s16-t1" name="Check MLV" line="33">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230310 22:54:31.019" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20230310 22:54:31.018" endtime="20230310 22:54:31.019"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230310 22:54:31.020" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230310 22:54:31.019" endtime="20230310 22:54:31.020"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20230310 22:54:31.021" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230310 22:54:31.020" endtime="20230310 22:54:31.021"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified file is empty.</doc>
<msg timestamp="20230310 22:54:31.021" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 184 bytes.</msg>
<status status="PASS" starttime="20230310 22:54:31.021" endtime="20230310 22:54:31.021"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20230310 22:54:31.023" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20230310 22:54:31.024" level="INFO">${version_file_contents} = #Fri Mar 10 22:54:06 UTC 2023
cTime=1678488069968
clusterID=CID-d8d7fcf8-04e0-4b43-9ae2-eefeb561683b
omUuid=aed167e6-9f41-4018-b31f-3afe6f6ab968
nodeType=OM
layoutVersion=3
nodeId=om1
</msg>
<status status="PASS" starttime="20230310 22:54:31.023" endtime="20230310 22:54:31.024"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230310 22:54:31.024" level="INFO">${version_line} = layoutVersion=3</msg>
<status status="PASS" starttime="20230310 22:54:31.024" endtime="20230310 22:54:31.025"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:54:31.025" endtime="20230310 22:54:31.025"/>
</kw>
<status status="PASS" starttime="20230310 22:54:31.022" endtime="20230310 22:54:31.026"/>
</kw>
<status status="PASS" starttime="20230310 22:54:31.022" endtime="20230310 22:54:31.026"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:54:31.017" endtime="20230310 22:54:31.026"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20230310 22:54:30.936" endtime="20230310 22:54:31.028"/>
</suite>
<suite id="s1-s17" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s17-t1" name="Check MLV" line="33">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230310 22:54:35.915" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20230310 22:54:35.914" endtime="20230310 22:54:35.915"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230310 22:54:35.915" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230310 22:54:35.915" endtime="20230310 22:54:35.916"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20230310 22:54:35.917" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230310 22:54:35.916" endtime="20230310 22:54:35.917"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified file is empty.</doc>
<msg timestamp="20230310 22:54:35.918" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 184 bytes.</msg>
<status status="PASS" starttime="20230310 22:54:35.917" endtime="20230310 22:54:35.918"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20230310 22:54:35.919" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20230310 22:54:35.920" level="INFO">${version_file_contents} = #Fri Mar 10 22:54:06 UTC 2023
cTime=1678488070648
clusterID=CID-d8d7fcf8-04e0-4b43-9ae2-eefeb561683b
omUuid=64a67e20-43cd-447a-b61f-33cd0b5331a5
nodeType=OM
layoutVersion=3
nodeId=om2
</msg>
<status status="PASS" starttime="20230310 22:54:35.919" endtime="20230310 22:54:35.920"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230310 22:54:35.920" level="INFO">${version_line} = layoutVersion=3</msg>
<status status="PASS" starttime="20230310 22:54:35.920" endtime="20230310 22:54:35.920"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:54:35.921" endtime="20230310 22:54:35.921"/>
</kw>
<status status="PASS" starttime="20230310 22:54:35.918" endtime="20230310 22:54:35.922"/>
</kw>
<status status="PASS" starttime="20230310 22:54:35.918" endtime="20230310 22:54:35.922"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:54:35.913" endtime="20230310 22:54:35.922"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20230310 22:54:35.836" endtime="20230310 22:54:35.923"/>
</suite>
<suite id="s1-s18" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s18-t1" name="Check MLV" line="33">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230310 22:54:40.556" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20230310 22:54:40.555" endtime="20230310 22:54:40.556"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230310 22:54:40.557" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230310 22:54:40.556" endtime="20230310 22:54:40.557"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20230310 22:54:40.557" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230310 22:54:40.557" endtime="20230310 22:54:40.558"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified file is empty.</doc>
<msg timestamp="20230310 22:54:40.558" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 184 bytes.</msg>
<status status="PASS" starttime="20230310 22:54:40.558" endtime="20230310 22:54:40.558"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20230310 22:54:40.560" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20230310 22:54:40.560" level="INFO">${version_file_contents} = #Fri Mar 10 22:54:06 UTC 2023
cTime=1678488070071
clusterID=CID-d8d7fcf8-04e0-4b43-9ae2-eefeb561683b
omUuid=2d64bc03-4341-4433-b9b8-d8402e1733b1
nodeType=OM
layoutVersion=3
nodeId=om3
</msg>
<status status="PASS" starttime="20230310 22:54:40.559" endtime="20230310 22:54:40.560"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230310 22:54:40.561" level="INFO">${version_line} = layoutVersion=3</msg>
<status status="PASS" starttime="20230310 22:54:40.560" endtime="20230310 22:54:40.561"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:54:40.561" endtime="20230310 22:54:40.562"/>
</kw>
<status status="PASS" starttime="20230310 22:54:40.559" endtime="20230310 22:54:40.562"/>
</kw>
<status status="PASS" starttime="20230310 22:54:40.559" endtime="20230310 22:54:40.562"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:54:40.554" endtime="20230310 22:54:40.562"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20230310 22:54:40.485" endtime="20230310 22:54:40.564"/>
</suite>
<suite id="s1-s19" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s19-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230310 22:54:45.200" level="INFO">${random} = 78370</msg>
<status status="PASS" starttime="20230310 22:54:45.200" endtime="20230310 22:54:45.200"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:54:45.209" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-78370 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:54:53.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:54:53.288" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:54:45.203" endtime="20230310 22:54:53.288"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:54:53.290" level="INFO"/>
<status status="PASS" starttime="20230310 22:54:53.289" endtime="20230310 22:54:53.290"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:54:53.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:54:53.290" endtime="20230310 22:54:53.292"/>
</kw>
<status status="PASS" starttime="20230310 22:54:45.202" endtime="20230310 22:54:53.292"/>
</kw>
<msg timestamp="20230310 22:54:53.293" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:54:45.202" endtime="20230310 22:54:53.297"/>
</kw>
<msg timestamp="20230310 22:54:53.298" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:54:45.201" endtime="20230310 22:54:53.298"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:54:53.298" endtime="20230310 22:54:53.300"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:54:53.304" level="INFO">Running command 'cat /tmp/key-78370 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:54:53.308" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:54:53.308" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230310 22:54:53.301" endtime="20230310 22:54:53.309"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:54:53.310" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230310 22:54:53.309" endtime="20230310 22:54:53.310"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:54:53.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:54:53.311" endtime="20230310 22:54:53.311"/>
</kw>
<msg timestamp="20230310 22:54:53.312" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230310 22:54:53.300" endtime="20230310 22:54:53.312"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:54:53.312" endtime="20230310 22:54:53.313"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:54:53.317" level="INFO">Running command 'rm /tmp/key-78370 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:54:53.321" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:54:53.321" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:54:53.314" endtime="20230310 22:54:53.321"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:54:53.326" level="INFO"/>
<status status="PASS" starttime="20230310 22:54:53.325" endtime="20230310 22:54:53.327"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:54:53.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:54:53.327" endtime="20230310 22:54:53.329"/>
</kw>
<status status="PASS" starttime="20230310 22:54:53.313" endtime="20230310 22:54:53.329"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:54:45.198" endtime="20230310 22:54:53.330"/>
</test>
<test id="s1-s19-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:54:53.347" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:54:54.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:54:54.250" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:54:53.344" endtime="20230310 22:54:54.250"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:54:54.251" level="INFO"/>
<status status="PASS" starttime="20230310 22:54:54.250" endtime="20230310 22:54:54.251"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:54:54.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:54:54.251" endtime="20230310 22:54:54.254"/>
</kw>
<status status="PASS" starttime="20230310 22:54:53.343" endtime="20230310 22:54:54.255"/>
</kw>
<msg timestamp="20230310 22:54:54.255" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:54:53.342" endtime="20230310 22:54:54.256"/>
</kw>
<status status="PASS" starttime="20230310 22:54:53.335" endtime="20230310 22:54:54.256"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:54:54.261" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:54:54.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:54:54.985" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:54:54.258" endtime="20230310 22:54:54.985"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:54:54.987" level="INFO"/>
<status status="PASS" starttime="20230310 22:54:54.986" endtime="20230310 22:54:54.987"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:54:54.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:54:54.987" endtime="20230310 22:54:54.988"/>
</kw>
<status status="PASS" starttime="20230310 22:54:54.257" endtime="20230310 22:54:54.988"/>
</kw>
<msg timestamp="20230310 22:54:54.988" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:54:54.256" endtime="20230310 22:54:54.989"/>
</kw>
<status status="PASS" starttime="20230310 22:54:54.256" endtime="20230310 22:54:54.989"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:54:54.994" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:54:55.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:54:55.767" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:54:54.991" endtime="20230310 22:54:55.767"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:54:55.768" level="INFO"/>
<status status="PASS" starttime="20230310 22:54:55.767" endtime="20230310 22:54:55.768"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:54:55.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:54:55.769" endtime="20230310 22:54:55.769"/>
</kw>
<status status="PASS" starttime="20230310 22:54:54.991" endtime="20230310 22:54:55.770"/>
</kw>
<msg timestamp="20230310 22:54:55.770" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:54:54.990" endtime="20230310 22:54:55.771"/>
</kw>
<status status="PASS" starttime="20230310 22:54:54.989" endtime="20230310 22:54:55.771"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:54:55.776" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:54:56.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:54:56.446" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:54:55.773" endtime="20230310 22:54:56.446"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:54:56.448" level="INFO"/>
<status status="PASS" starttime="20230310 22:54:56.447" endtime="20230310 22:54:56.448"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:54:56.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:54:56.448" endtime="20230310 22:54:56.449"/>
</kw>
<status status="PASS" starttime="20230310 22:54:55.772" endtime="20230310 22:54:56.450"/>
</kw>
<msg timestamp="20230310 22:54:56.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:54:55.772" endtime="20230310 22:54:56.450"/>
</kw>
<status status="PASS" starttime="20230310 22:54:55.771" endtime="20230310 22:54:56.451"/>
</kw>
<status status="PASS" starttime="20230310 22:54:53.334" endtime="20230310 22:54:56.451"/>
</kw>
<status status="PASS" starttime="20230310 22:54:53.333" endtime="20230310 22:54:56.451"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:54:53.331" endtime="20230310 22:54:56.451"/>
</test>
<test id="s1-s19-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:54:56.458" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:55:00.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:55:00.188" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 10 Mar 2023 22:50:37 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230310 22:54:56.455" endtime="20230310 22:55:00.188"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:55:00.190" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 10 Mar 2023 22:50:37 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 10 Mar 2023 22:54:57 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230310 22:55:00.189" endtime="20230310 22:55:00.190"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:55:00.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:55:00.191" endtime="20230310 22:55:00.191"/>
</kw>
<msg timestamp="20230310 22:55:00.198" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 10 Mar 2023 22:50:37 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230310 22:54:56.454" endtime="20230310 22:55:00.198"/>
</kw>
<msg timestamp="20230310 22:55:00.199" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 10 Mar 2023 22:50:37 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230310 22:54:56.453" endtime="20230310 22:55:00.199"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:55:00.199" endtime="20230310 22:55:00.201"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:55:00.207" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:55:00.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:55:00.210" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230310 22:55:00.203" endtime="20230310 22:55:00.210"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:55:00.212" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230310 22:55:00.211" endtime="20230310 22:55:00.212"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:55:00.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:55:00.212" endtime="20230310 22:55:00.213"/>
</kw>
<msg timestamp="20230310 22:55:00.213" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230310 22:55:00.201" endtime="20230310 22:55:00.213"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:55:00.214" endtime="20230310 22:55:00.214"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:55:00.220" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:55:00.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:55:00.223" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:55:00.217" endtime="20230310 22:55:00.223"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:55:00.225" level="INFO"/>
<status status="PASS" starttime="20230310 22:55:00.224" endtime="20230310 22:55:00.225"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:55:00.230" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:55:00.226" endtime="20230310 22:55:00.231"/>
</kw>
<status status="PASS" starttime="20230310 22:55:00.215" endtime="20230310 22:55:00.231"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:54:56.452" endtime="20230310 22:55:00.231"/>
</test>
<test id="s1-s19-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:55:00.239" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:55:01.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:55:01.186" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 10 Mar 2023 22:50:41 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230310 22:55:00.236" endtime="20230310 22:55:01.186"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:55:01.188" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 10 Mar 2023 22:50:41 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 10 Mar 2023 22:55:01 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230310 22:55:01.187" endtime="20230310 22:55:01.188"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:55:01.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:55:01.188" endtime="20230310 22:55:01.189"/>
</kw>
<msg timestamp="20230310 22:55:01.189" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 10 Mar 2023 22:50:41 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230310 22:55:00.235" endtime="20230310 22:55:01.189"/>
</kw>
<msg timestamp="20230310 22:55:01.190" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 10 Mar 2023 22:50:41 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230310 22:55:00.234" endtime="20230310 22:55:01.190"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:55:01.190" endtime="20230310 22:55:01.191"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:55:01.194" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:55:01.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:55:01.198" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230310 22:55:01.192" endtime="20230310 22:55:01.198"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:55:01.199" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20230310 22:55:01.198" endtime="20230310 22:55:01.199"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:55:01.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:55:01.200" endtime="20230310 22:55:01.200"/>
</kw>
<msg timestamp="20230310 22:55:01.201" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230310 22:55:01.191" endtime="20230310 22:55:01.201"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:55:01.201" endtime="20230310 22:55:01.202"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:55:01.206" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:55:01.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:55:01.209" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:55:01.203" endtime="20230310 22:55:01.209"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:55:01.210" level="INFO"/>
<status status="PASS" starttime="20230310 22:55:01.210" endtime="20230310 22:55:01.210"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:55:01.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:55:01.211" endtime="20230310 22:55:01.211"/>
</kw>
<status status="PASS" starttime="20230310 22:55:01.202" endtime="20230310 22:55:01.212"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:55:00.233" endtime="20230310 22:55:01.212"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230310 22:54:45.083" endtime="20230310 22:55:01.214"/>
</suite>
<suite id="s1-s20" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s20-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230310 22:55:05.872" level="INFO">${random} = 73598</msg>
<status status="PASS" starttime="20230310 22:55:05.871" endtime="20230310 22:55:05.872"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:55:05.882" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-73598 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:55:13.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:55:13.232" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:55:05.876" endtime="20230310 22:55:13.232"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:55:13.233" level="INFO"/>
<status status="PASS" starttime="20230310 22:55:13.232" endtime="20230310 22:55:13.233"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:55:13.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:55:13.234" endtime="20230310 22:55:13.234"/>
</kw>
<status status="PASS" starttime="20230310 22:55:05.874" endtime="20230310 22:55:13.235"/>
</kw>
<msg timestamp="20230310 22:55:13.235" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:55:05.874" endtime="20230310 22:55:13.236"/>
</kw>
<msg timestamp="20230310 22:55:13.236" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:55:05.872" endtime="20230310 22:55:13.237"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:55:13.237" endtime="20230310 22:55:13.237"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:55:13.241" level="INFO">Running command 'cat /tmp/key-73598 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:55:13.244" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:55:13.244" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230310 22:55:13.238" endtime="20230310 22:55:13.244"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:55:13.246" level="INFO">new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230310 22:55:13.245" endtime="20230310 22:55:13.246"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:55:13.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:55:13.247" endtime="20230310 22:55:13.248"/>
</kw>
<msg timestamp="20230310 22:55:13.248" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230310 22:55:13.237" endtime="20230310 22:55:13.248"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:55:13.248" endtime="20230310 22:55:13.249"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:55:13.253" level="INFO">Running command 'rm /tmp/key-73598 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:55:13.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:55:13.258" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:55:13.250" endtime="20230310 22:55:13.258"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:55:13.259" level="INFO"/>
<status status="PASS" starttime="20230310 22:55:13.258" endtime="20230310 22:55:13.259"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:55:13.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:55:13.259" endtime="20230310 22:55:13.260"/>
</kw>
<status status="PASS" starttime="20230310 22:55:13.249" endtime="20230310 22:55:13.260"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:55:05.870" endtime="20230310 22:55:13.261"/>
</test>
<test id="s1-s20-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:55:13.269" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:55:13.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:55:13.974" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:55:13.266" endtime="20230310 22:55:13.974"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:55:13.976" level="INFO"/>
<status status="PASS" starttime="20230310 22:55:13.975" endtime="20230310 22:55:13.976"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:55:13.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:55:13.976" endtime="20230310 22:55:13.977"/>
</kw>
<status status="PASS" starttime="20230310 22:55:13.265" endtime="20230310 22:55:13.977"/>
</kw>
<msg timestamp="20230310 22:55:13.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:55:13.265" endtime="20230310 22:55:13.978"/>
</kw>
<status status="PASS" starttime="20230310 22:55:13.264" endtime="20230310 22:55:13.978"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:55:13.998" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:55:14.637" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:55:14.637" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:55:13.992" endtime="20230310 22:55:14.637"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:55:14.639" level="INFO"/>
<status status="PASS" starttime="20230310 22:55:14.638" endtime="20230310 22:55:14.639"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:55:14.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:55:14.639" endtime="20230310 22:55:14.640"/>
</kw>
<status status="PASS" starttime="20230310 22:55:13.986" endtime="20230310 22:55:14.640"/>
</kw>
<msg timestamp="20230310 22:55:14.640" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:55:13.986" endtime="20230310 22:55:14.641"/>
</kw>
<status status="PASS" starttime="20230310 22:55:13.979" endtime="20230310 22:55:14.641"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:55:14.647" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:55:15.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:55:15.342" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:55:14.643" endtime="20230310 22:55:15.342"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:55:15.344" level="INFO"/>
<status status="PASS" starttime="20230310 22:55:15.343" endtime="20230310 22:55:15.344"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:55:15.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:55:15.344" endtime="20230310 22:55:15.345"/>
</kw>
<status status="PASS" starttime="20230310 22:55:14.642" endtime="20230310 22:55:15.345"/>
</kw>
<msg timestamp="20230310 22:55:15.346" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:55:14.642" endtime="20230310 22:55:15.346"/>
</kw>
<status status="PASS" starttime="20230310 22:55:14.641" endtime="20230310 22:55:15.346"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:55:15.352" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:55:16.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:55:16.054" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:55:15.349" endtime="20230310 22:55:16.054"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:55:16.055" level="INFO"/>
<status status="PASS" starttime="20230310 22:55:16.054" endtime="20230310 22:55:16.055"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:55:16.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:55:16.055" endtime="20230310 22:55:16.057"/>
</kw>
<status status="PASS" starttime="20230310 22:55:15.348" endtime="20230310 22:55:16.057"/>
</kw>
<msg timestamp="20230310 22:55:16.057" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:55:15.347" endtime="20230310 22:55:16.058"/>
</kw>
<status status="PASS" starttime="20230310 22:55:15.347" endtime="20230310 22:55:16.058"/>
</kw>
<status status="PASS" starttime="20230310 22:55:13.264" endtime="20230310 22:55:16.058"/>
</kw>
<status status="PASS" starttime="20230310 22:55:13.263" endtime="20230310 22:55:16.058"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:55:13.262" endtime="20230310 22:55:16.059"/>
</test>
<test id="s1-s20-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:55:16.067" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:55:16.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:55:16.984" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 10 Mar 2023 22:46:53 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230310 22:55:16.064" endtime="20230310 22:55:16.984"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:55:16.986" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 10 Mar 2023 22:46:53 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 10 Mar 2023 22:55:16 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230310 22:55:16.985" endtime="20230310 22:55:16.986"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:55:16.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:55:16.987" endtime="20230310 22:55:16.987"/>
</kw>
<msg timestamp="20230310 22:55:16.988" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 10 Mar 2023 22:46:53 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230310 22:55:16.063" endtime="20230310 22:55:16.988"/>
</kw>
<msg timestamp="20230310 22:55:16.988" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 10 Mar 2023 22:46:53 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230310 22:55:16.062" endtime="20230310 22:55:16.988"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:55:16.989" endtime="20230310 22:55:16.989"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:55:16.993" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:55:16.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:55:16.996" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230310 22:55:16.990" endtime="20230310 22:55:16.996"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:55:16.998" level="INFO">new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230310 22:55:16.997" endtime="20230310 22:55:16.998"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:55:16.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:55:16.998" endtime="20230310 22:55:16.999"/>
</kw>
<msg timestamp="20230310 22:55:16.999" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230310 22:55:16.989" endtime="20230310 22:55:16.999"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:55:16.999" endtime="20230310 22:55:17.000"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:55:17.003" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:55:17.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:55:17.007" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:55:17.001" endtime="20230310 22:55:17.007"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:55:17.008" level="INFO"/>
<status status="PASS" starttime="20230310 22:55:17.007" endtime="20230310 22:55:17.008"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:55:17.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:55:17.008" endtime="20230310 22:55:17.009"/>
</kw>
<status status="PASS" starttime="20230310 22:55:17.000" endtime="20230310 22:55:17.009"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:55:16.061" endtime="20230310 22:55:17.010"/>
</test>
<test id="s1-s20-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:55:17.015" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:55:17.817" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:55:17.817" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 10 Mar 2023 22:46:58 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230310 22:55:17.013" endtime="20230310 22:55:17.817"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:55:17.819" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 10 Mar 2023 22:46:58 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 10 Mar 2023 22:55:17 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230310 22:55:17.818" endtime="20230310 22:55:17.819"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:55:17.819" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:55:17.819" endtime="20230310 22:55:17.819"/>
</kw>
<msg timestamp="20230310 22:55:17.820" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 10 Mar 2023 22:46:58 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230310 22:55:17.012" endtime="20230310 22:55:17.820"/>
</kw>
<msg timestamp="20230310 22:55:17.820" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 10 Mar 2023 22:46:58 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230310 22:55:17.012" endtime="20230310 22:55:17.820"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:55:17.821" endtime="20230310 22:55:17.821"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:55:17.825" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:55:17.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:55:17.828" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20230310 22:55:17.822" endtime="20230310 22:55:17.829"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:55:17.830" level="INFO">new1: key created using S3 API</msg>
<status status="PASS" starttime="20230310 22:55:17.829" endtime="20230310 22:55:17.830"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:55:17.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:55:17.830" endtime="20230310 22:55:17.831"/>
</kw>
<msg timestamp="20230310 22:55:17.832" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20230310 22:55:17.821" endtime="20230310 22:55:17.832"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:55:17.832" endtime="20230310 22:55:17.832"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:55:17.836" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:55:17.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:55:17.839" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:55:17.833" endtime="20230310 22:55:17.839"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:55:17.841" level="INFO"/>
<status status="PASS" starttime="20230310 22:55:17.840" endtime="20230310 22:55:17.841"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:55:17.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:55:17.841" endtime="20230310 22:55:17.842"/>
</kw>
<status status="PASS" starttime="20230310 22:55:17.833" endtime="20230310 22:55:17.842"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:55:17.011" endtime="20230310 22:55:17.842"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230310 22:55:05.715" endtime="20230310 22:55:17.844"/>
</suite>
<suite id="s1-s21" name="Finalize" source="/opt/hadoop/smoketest/upgrade/finalize.robot">
<test id="s1-s21-t1" name="Finalize SCM" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230310 22:52:41.491" endtime="20230310 22:52:41.492"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizeupgrade</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:52:41.498" level="INFO">Running command 'ozone admin scm finalizeupgrade 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:54:01.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:54:01.252" level="INFO">${output} = Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature:...</msg>
<status status="PASS" starttime="20230310 22:52:41.494" endtime="20230310 22:54:01.252"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:54:01.253" level="INFO">Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: ERASURE_CODED_STORAGE_SUPPORT.
No onFinalize work defined for feature: DATANODE_SCHEMA_V3.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20230310 22:54:01.252" endtime="20230310 22:54:01.253"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:54:01.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:54:01.254" endtime="20230310 22:54:01.254"/>
</kw>
<status status="PASS" starttime="20230310 22:52:41.493" endtime="20230310 22:54:01.255"/>
</kw>
<msg timestamp="20230310 22:54:01.255" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:52:41.493" endtime="20230310 22:54:01.256"/>
</kw>
<msg timestamp="20230310 22:54:01.256" level="INFO">${result} = Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature:...</msg>
<status status="PASS" starttime="20230310 22:52:41.492" endtime="20230310 22:54:01.256"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:54:01.257" level="INFO">Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: ERASURE_CODED_STORAGE_SUPPORT.
No onFinalize work defined for feature: DATANODE_SCHEMA_V3.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20230310 22:54:01.257" endtime="20230310 22:54:01.257"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230310 22:52:41.490" endtime="20230310 22:54:01.257"/>
</test>
<test id="s1-s21-t2" name="Finalize OMs" line="28">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230310 22:54:01.260" endtime="20230310 22:54:01.261"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizeupgrade -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:54:01.267" level="INFO">Running command 'ozone admin om finalizeupgrade -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:54:07.277" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:54:07.277" level="INFO">${output} = Finalization started.
No onFinalize work defined for feature: ERASURE_CODED_STORAGE_SUPPORT.
No onFinalize work defined for feature: BUCKET_LAYOUT_SUPPORT.
No onFinalize work defined for feature: MULT...</msg>
<status status="PASS" starttime="20230310 22:54:01.263" endtime="20230310 22:54:07.277"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:54:07.279" level="INFO">Finalization started.
No onFinalize work defined for feature: ERASURE_CODED_STORAGE_SUPPORT.
No onFinalize work defined for feature: BUCKET_LAYOUT_SUPPORT.
No onFinalize work defined for feature: MULTITENANCY_SCHEMA.
Finalization is done.
Exiting...
Finalization of Ozone Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20230310 22:54:07.278" endtime="20230310 22:54:07.279"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:54:07.279" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:54:07.279" endtime="20230310 22:54:07.280"/>
</kw>
<status status="PASS" starttime="20230310 22:54:01.262" endtime="20230310 22:54:07.280"/>
</kw>
<msg timestamp="20230310 22:54:07.280" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:54:01.262" endtime="20230310 22:54:07.280"/>
</kw>
<msg timestamp="20230310 22:54:07.281" level="INFO">${result} = Finalization started.
No onFinalize work defined for feature: ERASURE_CODED_STORAGE_SUPPORT.
No onFinalize work defined for feature: BUCKET_LAYOUT_SUPPORT.
No onFinalize work defined for feature: MULT...</msg>
<status status="PASS" starttime="20230310 22:54:01.261" endtime="20230310 22:54:07.281"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:54:07.282" level="INFO">Finalization started.
No onFinalize work defined for feature: ERASURE_CODED_STORAGE_SUPPORT.
No onFinalize work defined for feature: BUCKET_LAYOUT_SUPPORT.
No onFinalize work defined for feature: MULTITENANCY_SCHEMA.
Finalization is done.
Exiting...
Finalization of Ozone Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20230310 22:54:07.281" endtime="20230310 22:54:07.282"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230310 22:54:01.259" endtime="20230310 22:54:07.282"/>
</test>
<doc>Finalize Upgrade of OMs and SCM</doc>
<status status="PASS" starttime="20230310 22:52:41.415" endtime="20230310 22:54:07.284"/>
</suite>
<suite id="s1-s22" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s22-t1" name="Check MLV" line="33">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230310 22:45:13.526" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20230310 22:45:13.525" endtime="20230310 22:45:13.526"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230310 22:45:13.527" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230310 22:45:13.526" endtime="20230310 22:45:13.527"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20230310 22:45:13.528" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230310 22:45:13.527" endtime="20230310 22:45:13.528"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified file is empty.</doc>
<msg timestamp="20230310 22:45:13.528" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20230310 22:45:13.528" endtime="20230310 22:45:13.528"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20230310 22:45:13.530" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20230310 22:45:13.531" level="INFO">${version_file_contents} = #Fri Mar 10 22:41:02 UTC 2023
cTime=1678488062917
clusterID=e3e4587c-aa42-4e86-ae9a-d3e448365275
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20230310 22:45:13.529" endtime="20230310 22:45:13.531"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230310 22:45:13.536" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20230310 22:45:13.536" endtime="20230310 22:45:13.536"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:45:13.536" endtime="20230310 22:45:13.537"/>
</kw>
<status status="PASS" starttime="20230310 22:45:13.529" endtime="20230310 22:45:13.537"/>
</kw>
<status status="PASS" starttime="20230310 22:45:13.529" endtime="20230310 22:45:13.537"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:45:13.524" endtime="20230310 22:45:13.538"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20230310 22:45:13.451" endtime="20230310 22:45:13.539"/>
</suite>
<suite id="s1-s23" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s23-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230310 22:47:03.614" level="INFO">${random} = 67591</msg>
<status status="PASS" starttime="20230310 22:47:03.613" endtime="20230310 22:47:03.614"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:47:03.621" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-67591 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:47:10.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:47:10.012" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:47:03.616" endtime="20230310 22:47:10.012"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:47:10.015" level="INFO"/>
<status status="PASS" starttime="20230310 22:47:10.013" endtime="20230310 22:47:10.015"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:47:10.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:47:10.015" endtime="20230310 22:47:10.017"/>
</kw>
<status status="PASS" starttime="20230310 22:47:03.615" endtime="20230310 22:47:10.017"/>
</kw>
<msg timestamp="20230310 22:47:10.017" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:47:03.615" endtime="20230310 22:47:10.021"/>
</kw>
<msg timestamp="20230310 22:47:10.021" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:47:03.614" endtime="20230310 22:47:10.021"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:47:10.022" endtime="20230310 22:47:10.022"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:47:10.027" level="INFO">Running command 'cat /tmp/key-67591 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:47:10.030" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:47:10.030" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230310 22:47:10.023" endtime="20230310 22:47:10.031"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:47:10.032" level="INFO">new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230310 22:47:10.031" endtime="20230310 22:47:10.032"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:47:10.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:47:10.032" endtime="20230310 22:47:10.033"/>
</kw>
<msg timestamp="20230310 22:47:10.034" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230310 22:47:10.022" endtime="20230310 22:47:10.034"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:47:10.034" endtime="20230310 22:47:10.034"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:47:10.038" level="INFO">Running command 'rm /tmp/key-67591 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:47:10.052" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:47:10.052" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:47:10.036" endtime="20230310 22:47:10.052"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:47:10.053" level="INFO"/>
<status status="PASS" starttime="20230310 22:47:10.052" endtime="20230310 22:47:10.054"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:47:10.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:47:10.054" endtime="20230310 22:47:10.055"/>
</kw>
<status status="PASS" starttime="20230310 22:47:10.035" endtime="20230310 22:47:10.055"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:47:03.612" endtime="20230310 22:47:10.055"/>
</test>
<test id="s1-s23-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:47:10.066" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:47:10.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:47:10.747" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:47:10.062" endtime="20230310 22:47:10.747"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:47:10.748" level="INFO"/>
<status status="PASS" starttime="20230310 22:47:10.747" endtime="20230310 22:47:10.748"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:47:10.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:47:10.748" endtime="20230310 22:47:10.749"/>
</kw>
<status status="PASS" starttime="20230310 22:47:10.061" endtime="20230310 22:47:10.750"/>
</kw>
<msg timestamp="20230310 22:47:10.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:47:10.061" endtime="20230310 22:47:10.751"/>
</kw>
<status status="PASS" starttime="20230310 22:47:10.060" endtime="20230310 22:47:10.751"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:47:10.756" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:47:11.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:47:11.486" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:47:10.753" endtime="20230310 22:47:11.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:47:11.488" level="INFO"/>
<status status="PASS" starttime="20230310 22:47:11.487" endtime="20230310 22:47:11.488"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:47:11.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:47:11.488" endtime="20230310 22:47:11.489"/>
</kw>
<status status="PASS" starttime="20230310 22:47:10.752" endtime="20230310 22:47:11.490"/>
</kw>
<msg timestamp="20230310 22:47:11.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:47:10.752" endtime="20230310 22:47:11.490"/>
</kw>
<status status="PASS" starttime="20230310 22:47:10.751" endtime="20230310 22:47:11.491"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:47:11.499" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:47:12.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:47:12.207" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:47:11.496" endtime="20230310 22:47:12.207"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:47:12.208" level="INFO"/>
<status status="PASS" starttime="20230310 22:47:12.207" endtime="20230310 22:47:12.208"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:47:12.209" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:47:12.208" endtime="20230310 22:47:12.209"/>
</kw>
<status status="PASS" starttime="20230310 22:47:11.492" endtime="20230310 22:47:12.209"/>
</kw>
<msg timestamp="20230310 22:47:12.209" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:47:11.491" endtime="20230310 22:47:12.210"/>
</kw>
<status status="PASS" starttime="20230310 22:47:11.491" endtime="20230310 22:47:12.210"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:47:12.215" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:47:12.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:47:12.915" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:47:12.212" endtime="20230310 22:47:12.915"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:47:12.916" level="INFO"/>
<status status="PASS" starttime="20230310 22:47:12.915" endtime="20230310 22:47:12.916"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:47:12.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:47:12.917" endtime="20230310 22:47:12.918"/>
</kw>
<status status="PASS" starttime="20230310 22:47:12.211" endtime="20230310 22:47:12.918"/>
</kw>
<msg timestamp="20230310 22:47:12.918" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:47:12.211" endtime="20230310 22:47:12.919"/>
</kw>
<status status="PASS" starttime="20230310 22:47:12.210" endtime="20230310 22:47:12.919"/>
</kw>
<status status="PASS" starttime="20230310 22:47:10.059" endtime="20230310 22:47:12.919"/>
</kw>
<status status="PASS" starttime="20230310 22:47:10.059" endtime="20230310 22:47:12.919"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:47:10.057" endtime="20230310 22:47:12.919"/>
</test>
<test id="s1-s23-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:47:12.926" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:47:13.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:47:13.780" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 10 Mar 2023 22:46:53 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230310 22:47:12.924" endtime="20230310 22:47:13.780"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:47:13.782" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 10 Mar 2023 22:46:53 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 10 Mar 2023 22:47:13 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230310 22:47:13.781" endtime="20230310 22:47:13.782"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:47:13.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:47:13.782" endtime="20230310 22:47:13.783"/>
</kw>
<msg timestamp="20230310 22:47:13.784" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 10 Mar 2023 22:46:53 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230310 22:47:12.923" endtime="20230310 22:47:13.784"/>
</kw>
<msg timestamp="20230310 22:47:13.784" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 10 Mar 2023 22:46:53 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230310 22:47:12.922" endtime="20230310 22:47:13.784"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:47:13.784" endtime="20230310 22:47:13.785"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:47:13.789" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:47:13.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:47:13.793" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230310 22:47:13.786" endtime="20230310 22:47:13.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:47:13.794" level="INFO">new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230310 22:47:13.793" endtime="20230310 22:47:13.794"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:47:13.795" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:47:13.795" endtime="20230310 22:47:13.795"/>
</kw>
<msg timestamp="20230310 22:47:13.796" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230310 22:47:13.785" endtime="20230310 22:47:13.796"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:47:13.796" endtime="20230310 22:47:13.797"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:47:13.801" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:47:13.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:47:13.807" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:47:13.798" endtime="20230310 22:47:13.807"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:47:13.808" level="INFO"/>
<status status="PASS" starttime="20230310 22:47:13.807" endtime="20230310 22:47:13.809"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:47:13.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:47:13.809" endtime="20230310 22:47:13.810"/>
</kw>
<status status="PASS" starttime="20230310 22:47:13.797" endtime="20230310 22:47:13.810"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:47:12.921" endtime="20230310 22:47:13.811"/>
</test>
<test id="s1-s23-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:47:13.826" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:47:14.647" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:47:14.647" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 10 Mar 2023 22:46:58 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230310 22:47:13.816" endtime="20230310 22:47:14.647"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:47:14.649" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 10 Mar 2023 22:46:58 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 10 Mar 2023 22:47:14 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230310 22:47:14.648" endtime="20230310 22:47:14.649"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:47:14.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:47:14.650" endtime="20230310 22:47:14.651"/>
</kw>
<msg timestamp="20230310 22:47:14.651" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 10 Mar 2023 22:46:58 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230310 22:47:13.815" endtime="20230310 22:47:14.651"/>
</kw>
<msg timestamp="20230310 22:47:14.652" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 10 Mar 2023 22:46:58 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230310 22:47:13.814" endtime="20230310 22:47:14.652"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:47:14.653" endtime="20230310 22:47:14.653"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:47:14.658" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:47:14.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:47:14.662" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20230310 22:47:14.655" endtime="20230310 22:47:14.662"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:47:14.663" level="INFO">new1: key created using S3 API</msg>
<status status="PASS" starttime="20230310 22:47:14.662" endtime="20230310 22:47:14.663"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:47:14.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:47:14.663" endtime="20230310 22:47:14.664"/>
</kw>
<msg timestamp="20230310 22:47:14.665" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20230310 22:47:14.654" endtime="20230310 22:47:14.665"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:47:14.665" endtime="20230310 22:47:14.666"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:47:14.670" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:47:14.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:47:14.674" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:47:14.667" endtime="20230310 22:47:14.674"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:47:14.676" level="INFO"/>
<status status="PASS" starttime="20230310 22:47:14.674" endtime="20230310 22:47:14.676"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:47:14.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:47:14.676" endtime="20230310 22:47:14.677"/>
</kw>
<status status="PASS" starttime="20230310 22:47:14.666" endtime="20230310 22:47:14.678"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:47:13.813" endtime="20230310 22:47:14.678"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230310 22:47:03.515" endtime="20230310 22:47:14.682"/>
</suite>
<suite id="s1-s24" name="Upgrade-Ec-Check" source="/opt/hadoop/smoketest/ec/upgrade-ec-check.robot">
<test id="s1-s24-t1" name="Test EC Prior To Finalization" line="22">
<kw name="Execute" library="os">
<arg>ozone sh volume create /ectest</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:47:19.485" level="INFO">Running command 'ozone sh volume create /ectest 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:47:23.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:47:23.162" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:47:19.480" endtime="20230310 22:47:23.162"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:47:23.164" level="INFO"/>
<status status="PASS" starttime="20230310 22:47:23.163" endtime="20230310 22:47:23.164"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:47:23.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:47:23.164" endtime="20230310 22:47:23.165"/>
</kw>
<status status="PASS" starttime="20230310 22:47:19.480" endtime="20230310 22:47:23.165"/>
</kw>
<msg timestamp="20230310 22:47:23.166" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:47:19.479" endtime="20230310 22:47:23.167"/>
</kw>
<status status="PASS" starttime="20230310 22:47:19.479" endtime="20230310 22:47:23.167"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket create --replication rs-3-2-1024k --type EC /ectest/ectest</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:47:23.171" level="INFO">Running command 'ozone sh bucket create --replication rs-3-2-1024k --type EC /ectest/ectest 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:47:27.117" level="INFO">${rc} = 255</msg>
<msg timestamp="20230310 22:47:27.117" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Cluster does not have the Erasure Coded Storage support feature finalized yet, but the request contains an Erasure Coded replication type. Rejecting the requ...</msg>
<status status="PASS" starttime="20230310 22:47:23.168" endtime="20230310 22:47:27.117"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:47:27.119" level="INFO">NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Cluster does not have the Erasure Coded Storage support feature finalized yet, but the request contains an Erasure Coded replication type. Rejecting the request, please finalize the cluster upgrade and then try again.</msg>
<status status="PASS" starttime="20230310 22:47:27.118" endtime="20230310 22:47:27.119"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:47:27.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:47:27.119" endtime="20230310 22:47:27.119"/>
</kw>
<msg timestamp="20230310 22:47:27.120" level="INFO">${result} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Cluster does not have the Erasure Coded Storage support feature finalized yet, but the request contains an Erasure Coded replication type. Rejecting the requ...</msg>
<status status="PASS" starttime="20230310 22:47:23.167" endtime="20230310 22:47:27.120"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_SUPPORTED_OPERATION</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:47:27.120" endtime="20230310 22:47:27.121"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /ectest/testpropchange</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:47:27.126" level="INFO">Running command 'ozone sh bucket create /ectest/testpropchange 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:47:31.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:47:31.457" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:47:27.123" endtime="20230310 22:47:31.457"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:47:31.459" level="INFO"/>
<status status="PASS" starttime="20230310 22:47:31.458" endtime="20230310 22:47:31.459"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:47:31.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:47:31.459" endtime="20230310 22:47:31.459"/>
</kw>
<status status="PASS" starttime="20230310 22:47:27.122" endtime="20230310 22:47:31.460"/>
</kw>
<msg timestamp="20230310 22:47:31.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:47:27.122" endtime="20230310 22:47:31.461"/>
</kw>
<status status="PASS" starttime="20230310 22:47:27.121" endtime="20230310 22:47:31.466"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket set-replication-config -r rs-3-2-1024k -t EC /ectest/testpropchange</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:47:31.470" level="INFO">Running command 'ozone sh bucket set-replication-config -r rs-3-2-1024k -t EC /ectest/testpropchange 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:47:35.499" level="INFO">${rc} = 255</msg>
<msg timestamp="20230310 22:47:35.499" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Cluster does not have the Erasure Coded Storage support feature finalized yet, but the request contains an Erasure Coded replication type. Rejecting the requ...</msg>
<status status="PASS" starttime="20230310 22:47:31.467" endtime="20230310 22:47:35.499"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:47:35.501" level="INFO">NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Cluster does not have the Erasure Coded Storage support feature finalized yet, but the request contains an Erasure Coded replication type. Rejecting the request, please finalize the cluster upgrade and then try again.</msg>
<status status="PASS" starttime="20230310 22:47:35.500" endtime="20230310 22:47:35.501"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:47:35.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:47:35.501" endtime="20230310 22:47:35.502"/>
</kw>
<msg timestamp="20230310 22:47:35.502" level="INFO">${result} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Cluster does not have the Erasure Coded Storage support feature finalized yet, but the request contains an Erasure Coded replication type. Rejecting the requ...</msg>
<status status="PASS" starttime="20230310 22:47:31.466" endtime="20230310 22:47:35.502"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_SUPPORTED_OPERATION</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:47:35.502" endtime="20230310 22:47:35.503"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put -r rs-3-2-1024k -t EC /ectest/testpropchange/core-site.xml /etc/hadoop/core-site.xml</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:47:35.507" level="INFO">Running command 'ozone sh key put -r rs-3-2-1024k -t EC /ectest/testpropchange/core-site.xml /etc/hadoop/core-site.xml 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:47:39.541" level="INFO">${rc} = 255</msg>
<msg timestamp="20230310 22:47:39.541" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Cluster does not have the Erasure Coded Storage support feature finalized yet, but the request contains an Erasure Coded replication type. Rejecting the requ...</msg>
<status status="PASS" starttime="20230310 22:47:35.504" endtime="20230310 22:47:39.541"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:47:39.543" level="INFO">NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Cluster does not have the Erasure Coded Storage support feature finalized yet, but the request contains an Erasure Coded replication type. Rejecting the request, please finalize the cluster upgrade and then try again.</msg>
<status status="PASS" starttime="20230310 22:47:39.542" endtime="20230310 22:47:39.543"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:47:39.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:47:39.543" endtime="20230310 22:47:39.544"/>
</kw>
<msg timestamp="20230310 22:47:39.544" level="INFO">${result} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Cluster does not have the Erasure Coded Storage support feature finalized yet, but the request contains an Erasure Coded replication type. Rejecting the requ...</msg>
<status status="PASS" starttime="20230310 22:47:35.503" endtime="20230310 22:47:39.544"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_SUPPORTED_OPERATION</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:47:39.544" endtime="20230310 22:47:39.545"/>
</kw>
<tag>pre-finalized-ec-tests</tag>
<status status="PASS" starttime="20230310 22:47:19.478" endtime="20230310 22:47:39.545"/>
</test>
<doc>Test EC during upgrade</doc>
<status status="PASS" starttime="20230310 22:47:19.397" endtime="20230310 22:47:39.547"/>
</suite>
<suite id="s1-s25" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s25-t1" name="Check MLV" line="33">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230310 22:45:18.047" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20230310 22:45:18.047" endtime="20230310 22:45:18.047"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230310 22:45:18.048" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230310 22:45:18.048" endtime="20230310 22:45:18.048"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20230310 22:45:18.049" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230310 22:45:18.048" endtime="20230310 22:45:18.049"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified file is empty.</doc>
<msg timestamp="20230310 22:45:18.049" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20230310 22:45:18.049" endtime="20230310 22:45:18.050"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20230310 22:45:18.051" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20230310 22:45:18.052" level="INFO">${version_file_contents} = #Fri Mar 10 22:41:00 UTC 2023
cTime=1678488060546
clusterID=3892a4e1-c878-42af-adb7-db66a90d61f4
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20230310 22:45:18.051" endtime="20230310 22:45:18.052"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230310 22:45:18.053" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20230310 22:45:18.052" endtime="20230310 22:45:18.053"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:45:18.053" endtime="20230310 22:45:18.053"/>
</kw>
<status status="PASS" starttime="20230310 22:45:18.050" endtime="20230310 22:45:18.053"/>
</kw>
<status status="PASS" starttime="20230310 22:45:18.050" endtime="20230310 22:45:18.053"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:45:18.045" endtime="20230310 22:45:18.054"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20230310 22:45:17.970" endtime="20230310 22:45:18.055"/>
</suite>
<suite id="s1-s26" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s26-t1" name="Check MLV" line="33">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230310 22:45:22.714" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20230310 22:45:22.713" endtime="20230310 22:45:22.714"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230310 22:45:22.714" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230310 22:45:22.714" endtime="20230310 22:45:22.715"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20230310 22:45:22.715" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230310 22:45:22.715" endtime="20230310 22:45:22.715"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified file is empty.</doc>
<msg timestamp="20230310 22:45:22.716" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20230310 22:45:22.715" endtime="20230310 22:45:22.716"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20230310 22:45:22.717" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20230310 22:45:22.718" level="INFO">${version_file_contents} = #Fri Mar 10 22:41:02 UTC 2023
cTime=1678488062451
clusterID=1a6d358d-6662-4447-914c-d709a67ff716
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20230310 22:45:22.717" endtime="20230310 22:45:22.718"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230310 22:45:22.719" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20230310 22:45:22.719" endtime="20230310 22:45:22.719"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:45:22.719" endtime="20230310 22:45:22.720"/>
</kw>
<status status="PASS" starttime="20230310 22:45:22.717" endtime="20230310 22:45:22.720"/>
</kw>
<status status="PASS" starttime="20230310 22:45:22.716" endtime="20230310 22:45:22.720"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:45:22.712" endtime="20230310 22:45:22.721"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20230310 22:45:22.634" endtime="20230310 22:45:22.722"/>
</suite>
<suite id="s1-s27" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s27-t1" name="Check MLV" line="33">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230310 22:45:27.235" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20230310 22:45:27.235" endtime="20230310 22:45:27.236"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230310 22:45:27.236" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230310 22:45:27.236" endtime="20230310 22:45:27.236"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20230310 22:45:27.237" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230310 22:45:27.236" endtime="20230310 22:45:27.237"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified file is empty.</doc>
<msg timestamp="20230310 22:45:27.238" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 184 bytes.</msg>
<status status="PASS" starttime="20230310 22:45:27.237" endtime="20230310 22:45:27.238"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20230310 22:45:27.240" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20230310 22:45:27.241" level="INFO">${version_file_contents} = #Fri Mar 10 22:43:56 UTC 2023
cTime=1678488069968
clusterID=CID-d8d7fcf8-04e0-4b43-9ae2-eefeb561683b
omUuid=aed167e6-9f41-4018-b31f-3afe6f6ab968
nodeType=OM
layoutVersion=0
nodeId=om1
</msg>
<status status="PASS" starttime="20230310 22:45:27.239" endtime="20230310 22:45:27.241"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230310 22:45:27.242" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20230310 22:45:27.241" endtime="20230310 22:45:27.242"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:45:27.242" endtime="20230310 22:45:27.243"/>
</kw>
<status status="PASS" starttime="20230310 22:45:27.239" endtime="20230310 22:45:27.243"/>
</kw>
<status status="PASS" starttime="20230310 22:45:27.238" endtime="20230310 22:45:27.243"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:45:27.233" endtime="20230310 22:45:27.244"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20230310 22:45:27.146" endtime="20230310 22:45:27.245"/>
</suite>
<suite id="s1-s28" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s28-t1" name="Check MLV" line="33">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230310 22:45:31.854" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20230310 22:45:31.853" endtime="20230310 22:45:31.854"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230310 22:45:31.854" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230310 22:45:31.854" endtime="20230310 22:45:31.854"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20230310 22:45:31.855" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230310 22:45:31.854" endtime="20230310 22:45:31.855"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified file is empty.</doc>
<msg timestamp="20230310 22:45:31.856" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 184 bytes.</msg>
<status status="PASS" starttime="20230310 22:45:31.855" endtime="20230310 22:45:31.856"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20230310 22:45:31.857" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20230310 22:45:31.858" level="INFO">${version_file_contents} = #Fri Mar 10 22:43:56 UTC 2023
cTime=1678488070648
clusterID=CID-d8d7fcf8-04e0-4b43-9ae2-eefeb561683b
omUuid=64a67e20-43cd-447a-b61f-33cd0b5331a5
nodeType=OM
layoutVersion=0
nodeId=om2
</msg>
<status status="PASS" starttime="20230310 22:45:31.857" endtime="20230310 22:45:31.858"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230310 22:45:31.859" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20230310 22:45:31.858" endtime="20230310 22:45:31.859"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:45:31.859" endtime="20230310 22:45:31.859"/>
</kw>
<status status="PASS" starttime="20230310 22:45:31.856" endtime="20230310 22:45:31.860"/>
</kw>
<status status="PASS" starttime="20230310 22:45:31.856" endtime="20230310 22:45:31.860"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:45:31.852" endtime="20230310 22:45:31.860"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20230310 22:45:31.785" endtime="20230310 22:45:31.861"/>
</suite>
<suite id="s1-s29" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s29-t1" name="Check MLV" line="33">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230310 22:45:36.361" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20230310 22:45:36.361" endtime="20230310 22:45:36.361"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230310 22:45:36.362" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230310 22:45:36.362" endtime="20230310 22:45:36.362"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20230310 22:45:36.363" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230310 22:45:36.362" endtime="20230310 22:45:36.363"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified file is empty.</doc>
<msg timestamp="20230310 22:45:36.363" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 184 bytes.</msg>
<status status="PASS" starttime="20230310 22:45:36.363" endtime="20230310 22:45:36.364"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20230310 22:45:36.366" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20230310 22:45:36.374" level="INFO">${version_file_contents} = #Fri Mar 10 22:43:57 UTC 2023
cTime=1678488070071
clusterID=CID-d8d7fcf8-04e0-4b43-9ae2-eefeb561683b
omUuid=2d64bc03-4341-4433-b9b8-d8402e1733b1
nodeType=OM
layoutVersion=0
nodeId=om3
</msg>
<status status="PASS" starttime="20230310 22:45:36.365" endtime="20230310 22:45:36.374"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230310 22:45:36.375" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20230310 22:45:36.374" endtime="20230310 22:45:36.375"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:45:36.375" endtime="20230310 22:45:36.376"/>
</kw>
<status status="PASS" starttime="20230310 22:45:36.364" endtime="20230310 22:45:36.376"/>
</kw>
<status status="PASS" starttime="20230310 22:45:36.364" endtime="20230310 22:45:36.376"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:45:36.359" endtime="20230310 22:45:36.376"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20230310 22:45:36.291" endtime="20230310 22:45:36.378"/>
</suite>
<suite id="s1-s30" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s30-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230310 22:45:40.968" level="INFO">${random} = 36704</msg>
<status status="PASS" starttime="20230310 22:45:40.967" endtime="20230310 22:45:40.968"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:45:40.976" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-36704 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:45:48.291" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:45:48.291" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:45:40.971" endtime="20230310 22:45:48.291"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:45:48.293" level="INFO"/>
<status status="PASS" starttime="20230310 22:45:48.292" endtime="20230310 22:45:48.293"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:45:48.294" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:45:48.293" endtime="20230310 22:45:48.294"/>
</kw>
<status status="PASS" starttime="20230310 22:45:40.969" endtime="20230310 22:45:48.295"/>
</kw>
<msg timestamp="20230310 22:45:48.295" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:45:40.969" endtime="20230310 22:45:48.298"/>
</kw>
<msg timestamp="20230310 22:45:48.299" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:45:40.968" endtime="20230310 22:45:48.299"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:45:48.302" endtime="20230310 22:45:48.303"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:45:48.312" level="INFO">Running command 'cat /tmp/key-36704 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:45:48.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:45:48.319" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230310 22:45:48.306" endtime="20230310 22:45:48.319"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:45:48.321" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230310 22:45:48.320" endtime="20230310 22:45:48.321"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:45:48.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:45:48.321" endtime="20230310 22:45:48.322"/>
</kw>
<msg timestamp="20230310 22:45:48.322" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230310 22:45:48.304" endtime="20230310 22:45:48.322"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:45:48.323" endtime="20230310 22:45:48.323"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:45:48.326" level="INFO">Running command 'rm /tmp/key-36704 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:45:48.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:45:48.330" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:45:48.324" endtime="20230310 22:45:48.330"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:45:48.332" level="INFO"/>
<status status="PASS" starttime="20230310 22:45:48.331" endtime="20230310 22:45:48.332"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:45:48.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:45:48.332" endtime="20230310 22:45:48.333"/>
</kw>
<status status="PASS" starttime="20230310 22:45:48.323" endtime="20230310 22:45:48.333"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:45:40.966" endtime="20230310 22:45:48.333"/>
</test>
<test id="s1-s30-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:45:48.341" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:45:49.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:45:49.354" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:45:48.339" endtime="20230310 22:45:49.354"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:45:49.355" level="INFO"/>
<status status="PASS" starttime="20230310 22:45:49.354" endtime="20230310 22:45:49.355"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:45:49.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:45:49.355" endtime="20230310 22:45:49.356"/>
</kw>
<status status="PASS" starttime="20230310 22:45:48.338" endtime="20230310 22:45:49.356"/>
</kw>
<msg timestamp="20230310 22:45:49.356" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:45:48.338" endtime="20230310 22:45:49.357"/>
</kw>
<status status="PASS" starttime="20230310 22:45:48.337" endtime="20230310 22:45:49.357"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:45:49.361" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:45:50.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:45:50.031" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:45:49.359" endtime="20230310 22:45:50.031"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:45:50.035" level="INFO"/>
<status status="PASS" starttime="20230310 22:45:50.032" endtime="20230310 22:45:50.035"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:45:50.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:45:50.036" endtime="20230310 22:45:50.039"/>
</kw>
<status status="PASS" starttime="20230310 22:45:49.358" endtime="20230310 22:45:50.039"/>
</kw>
<msg timestamp="20230310 22:45:50.039" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:45:49.358" endtime="20230310 22:45:50.042"/>
</kw>
<status status="PASS" starttime="20230310 22:45:49.358" endtime="20230310 22:45:50.042"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:45:50.060" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:45:50.778" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:45:50.778" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:45:50.048" endtime="20230310 22:45:50.778"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:45:50.780" level="INFO"/>
<status status="PASS" starttime="20230310 22:45:50.779" endtime="20230310 22:45:50.780"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:45:50.781" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:45:50.780" endtime="20230310 22:45:50.781"/>
</kw>
<status status="PASS" starttime="20230310 22:45:50.045" endtime="20230310 22:45:50.781"/>
</kw>
<msg timestamp="20230310 22:45:50.782" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:45:50.045" endtime="20230310 22:45:50.782"/>
</kw>
<status status="PASS" starttime="20230310 22:45:50.042" endtime="20230310 22:45:50.782"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:45:50.788" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:45:52.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:45:52.103" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:45:50.784" endtime="20230310 22:45:52.103"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:45:52.104" level="INFO"/>
<status status="PASS" starttime="20230310 22:45:52.104" endtime="20230310 22:45:52.105"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:45:52.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:45:52.105" endtime="20230310 22:45:52.106"/>
</kw>
<status status="PASS" starttime="20230310 22:45:50.784" endtime="20230310 22:45:52.106"/>
</kw>
<msg timestamp="20230310 22:45:52.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:45:50.783" endtime="20230310 22:45:52.107"/>
</kw>
<status status="PASS" starttime="20230310 22:45:50.783" endtime="20230310 22:45:52.107"/>
</kw>
<status status="PASS" starttime="20230310 22:45:48.336" endtime="20230310 22:45:52.108"/>
</kw>
<status status="PASS" starttime="20230310 22:45:48.336" endtime="20230310 22:45:52.108"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:45:48.335" endtime="20230310 22:45:52.108"/>
</test>
<test id="s1-s30-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:45:52.116" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:45:56.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:45:56.177" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 10 Mar 2023 22:42:48 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230310 22:45:52.113" endtime="20230310 22:45:56.177"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:45:56.179" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 10 Mar 2023 22:42:48 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 10 Mar 2023 22:45:53 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230310 22:45:56.178" endtime="20230310 22:45:56.179"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:45:56.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:45:56.179" endtime="20230310 22:45:56.180"/>
</kw>
<msg timestamp="20230310 22:45:56.180" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 10 Mar 2023 22:42:48 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230310 22:45:52.111" endtime="20230310 22:45:56.181"/>
</kw>
<msg timestamp="20230310 22:45:56.181" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 10 Mar 2023 22:42:48 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230310 22:45:52.111" endtime="20230310 22:45:56.181"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:45:56.181" endtime="20230310 22:45:56.182"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:45:56.187" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:45:56.191" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:45:56.191" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230310 22:45:56.184" endtime="20230310 22:45:56.191"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:45:56.193" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230310 22:45:56.192" endtime="20230310 22:45:56.193"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:45:56.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:45:56.194" endtime="20230310 22:45:56.194"/>
</kw>
<msg timestamp="20230310 22:45:56.195" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230310 22:45:56.182" endtime="20230310 22:45:56.195"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:45:56.196" endtime="20230310 22:45:56.196"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:45:56.212" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:45:56.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:45:56.218" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:45:56.204" endtime="20230310 22:45:56.218"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:45:56.220" level="INFO"/>
<status status="PASS" starttime="20230310 22:45:56.219" endtime="20230310 22:45:56.220"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:45:56.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:45:56.220" endtime="20230310 22:45:56.221"/>
</kw>
<status status="PASS" starttime="20230310 22:45:56.197" endtime="20230310 22:45:56.222"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:45:52.109" endtime="20230310 22:45:56.222"/>
</test>
<test id="s1-s30-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:45:56.232" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:45:57.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:45:57.172" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 10 Mar 2023 22:42:54 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230310 22:45:56.228" endtime="20230310 22:45:57.172"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:45:57.174" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 10 Mar 2023 22:42:54 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 10 Mar 2023 22:45:56 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230310 22:45:57.172" endtime="20230310 22:45:57.174"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:45:57.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:45:57.178" endtime="20230310 22:45:57.179"/>
</kw>
<msg timestamp="20230310 22:45:57.179" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 10 Mar 2023 22:42:54 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230310 22:45:56.227" endtime="20230310 22:45:57.179"/>
</kw>
<msg timestamp="20230310 22:45:57.180" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 10 Mar 2023 22:42:54 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230310 22:45:56.226" endtime="20230310 22:45:57.180"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:45:57.180" endtime="20230310 22:45:57.181"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:45:57.185" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:45:57.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:45:57.190" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230310 22:45:57.182" endtime="20230310 22:45:57.190"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:45:57.191" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20230310 22:45:57.190" endtime="20230310 22:45:57.191"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:45:57.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:45:57.191" endtime="20230310 22:45:57.192"/>
</kw>
<msg timestamp="20230310 22:45:57.193" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230310 22:45:57.181" endtime="20230310 22:45:57.193"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:45:57.193" endtime="20230310 22:45:57.194"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:45:57.198" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:45:57.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:45:57.201" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:45:57.195" endtime="20230310 22:45:57.201"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:45:57.203" level="INFO"/>
<status status="PASS" starttime="20230310 22:45:57.202" endtime="20230310 22:45:57.203"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:45:57.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:45:57.203" endtime="20230310 22:45:57.204"/>
</kw>
<status status="PASS" starttime="20230310 22:45:57.194" endtime="20230310 22:45:57.205"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:45:56.224" endtime="20230310 22:45:57.205"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230310 22:45:40.862" endtime="20230310 22:45:57.208"/>
</suite>
<suite id="s1-s31" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s31-t1" name="Create key" line="35">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:46:01.968" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230310 22:46:01.970" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:46:01.971" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:46:01.964" endtime="20230310 22:46:01.971"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:46:01.972" level="INFO"/>
<status status="PASS" starttime="20230310 22:46:01.971" endtime="20230310 22:46:01.972"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:46:01.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:46:01.972" endtime="20230310 22:46:01.972"/>
</kw>
<status status="PASS" starttime="20230310 22:46:01.963" endtime="20230310 22:46:01.973"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:46:01.977" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:46:10.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:46:10.196" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:46:01.975" endtime="20230310 22:46:10.196"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:46:10.199" level="INFO"/>
<status status="PASS" starttime="20230310 22:46:10.196" endtime="20230310 22:46:10.200"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:46:10.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:46:10.203" endtime="20230310 22:46:10.205"/>
</kw>
<status status="PASS" starttime="20230310 22:46:01.974" endtime="20230310 22:46:10.206"/>
</kw>
<msg timestamp="20230310 22:46:10.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:46:01.974" endtime="20230310 22:46:10.207"/>
</kw>
<msg timestamp="20230310 22:46:10.209" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:46:01.973" endtime="20230310 22:46:10.209"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:46:10.209" endtime="20230310 22:46:10.210"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:46:10.214" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:46:10.217" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:46:10.218" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:46:10.211" endtime="20230310 22:46:10.218"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:46:10.219" level="INFO"/>
<status status="PASS" starttime="20230310 22:46:10.218" endtime="20230310 22:46:10.220"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:46:10.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:46:10.220" endtime="20230310 22:46:10.221"/>
</kw>
<status status="PASS" starttime="20230310 22:46:10.210" endtime="20230310 22:46:10.221"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:46:01.962" endtime="20230310 22:46:10.222"/>
</test>
<test id="s1-s31-t2" name="Create key in the bucket in s3v volume" line="46">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:46:10.231" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230310 22:46:10.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:46:10.236" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:46:10.228" endtime="20230310 22:46:10.236"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:46:10.237" level="INFO"/>
<status status="PASS" starttime="20230310 22:46:10.236" endtime="20230310 22:46:10.237"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:46:10.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:46:10.237" endtime="20230310 22:46:10.238"/>
</kw>
<status status="PASS" starttime="20230310 22:46:10.227" endtime="20230310 22:46:10.238"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:46:10.243" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:46:16.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:46:16.960" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:46:10.240" endtime="20230310 22:46:16.960"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:46:16.962" level="INFO"/>
<status status="PASS" starttime="20230310 22:46:16.961" endtime="20230310 22:46:16.962"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:46:16.963" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:46:16.962" endtime="20230310 22:46:16.963"/>
</kw>
<status status="PASS" starttime="20230310 22:46:10.240" endtime="20230310 22:46:16.963"/>
</kw>
<msg timestamp="20230310 22:46:16.963" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:46:10.239" endtime="20230310 22:46:16.964"/>
</kw>
<msg timestamp="20230310 22:46:16.964" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:46:10.238" endtime="20230310 22:46:16.964"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:46:16.964" endtime="20230310 22:46:16.965"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:46:16.968" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:46:16.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:46:16.972" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:46:16.966" endtime="20230310 22:46:16.972"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:46:16.974" level="INFO"/>
<status status="PASS" starttime="20230310 22:46:16.973" endtime="20230310 22:46:16.974"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:46:16.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:46:16.974" endtime="20230310 22:46:16.975"/>
</kw>
<status status="PASS" starttime="20230310 22:46:16.965" endtime="20230310 22:46:16.975"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:46:10.226" endtime="20230310 22:46:16.976"/>
</test>
<test id="s1-s31-t3" name="Setup credentials for S3" line="52">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:46:16.983" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:46:17.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:46:17.651" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:46:16.981" endtime="20230310 22:46:17.651"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:46:17.653" level="INFO"/>
<status status="PASS" starttime="20230310 22:46:17.652" endtime="20230310 22:46:17.653"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:46:17.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:46:17.653" endtime="20230310 22:46:17.654"/>
</kw>
<status status="PASS" starttime="20230310 22:46:16.980" endtime="20230310 22:46:17.654"/>
</kw>
<msg timestamp="20230310 22:46:17.654" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:46:16.980" endtime="20230310 22:46:17.655"/>
</kw>
<status status="PASS" starttime="20230310 22:46:16.979" endtime="20230310 22:46:17.655"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:46:17.659" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:46:18.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:46:18.241" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:46:17.657" endtime="20230310 22:46:18.241"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:46:18.243" level="INFO"/>
<status status="PASS" starttime="20230310 22:46:18.242" endtime="20230310 22:46:18.243"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:46:18.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:46:18.243" endtime="20230310 22:46:18.244"/>
</kw>
<status status="PASS" starttime="20230310 22:46:17.656" endtime="20230310 22:46:18.244"/>
</kw>
<msg timestamp="20230310 22:46:18.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:46:17.656" endtime="20230310 22:46:18.245"/>
</kw>
<status status="PASS" starttime="20230310 22:46:17.655" endtime="20230310 22:46:18.246"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:46:18.254" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:46:19.021" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:46:19.021" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:46:18.251" endtime="20230310 22:46:19.021"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:46:19.023" level="INFO"/>
<status status="PASS" starttime="20230310 22:46:19.022" endtime="20230310 22:46:19.023"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:46:19.023" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:46:19.023" endtime="20230310 22:46:19.023"/>
</kw>
<status status="PASS" starttime="20230310 22:46:18.250" endtime="20230310 22:46:19.024"/>
</kw>
<msg timestamp="20230310 22:46:19.024" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:46:18.250" endtime="20230310 22:46:19.024"/>
</kw>
<status status="PASS" starttime="20230310 22:46:18.246" endtime="20230310 22:46:19.025"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:46:19.029" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:46:19.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:46:19.642" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:46:19.026" endtime="20230310 22:46:19.642"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:46:19.644" level="INFO"/>
<status status="PASS" starttime="20230310 22:46:19.643" endtime="20230310 22:46:19.644"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:46:19.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:46:19.644" endtime="20230310 22:46:19.645"/>
</kw>
<status status="PASS" starttime="20230310 22:46:19.026" endtime="20230310 22:46:19.645"/>
</kw>
<msg timestamp="20230310 22:46:19.645" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:46:19.025" endtime="20230310 22:46:19.646"/>
</kw>
<status status="PASS" starttime="20230310 22:46:19.025" endtime="20230310 22:46:19.646"/>
</kw>
<status status="PASS" starttime="20230310 22:46:16.979" endtime="20230310 22:46:19.647"/>
</kw>
<status status="PASS" starttime="20230310 22:46:16.978" endtime="20230310 22:46:19.647"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:46:16.977" endtime="20230310 22:46:19.647"/>
</test>
<test id="s1-s31-t4" name="Try to create a bucket using S3 API" line="56">
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:46:19.656" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:46:20.496" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:46:20.496" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230310 22:46:19.653" endtime="20230310 22:46:20.496"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:46:20.498" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230310 22:46:20.497" endtime="20230310 22:46:20.498"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:46:20.499" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:46:20.498" endtime="20230310 22:46:20.499"/>
</kw>
<status status="PASS" starttime="20230310 22:46:19.652" endtime="20230310 22:46:20.500"/>
</kw>
<msg timestamp="20230310 22:46:20.500" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:46:19.652" endtime="20230310 22:46:20.500"/>
</kw>
<msg timestamp="20230310 22:46:20.501" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230310 22:46:19.651" endtime="20230310 22:46:20.501"/>
</kw>
<msg timestamp="20230310 22:46:20.501" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230310 22:46:19.650" endtime="20230310 22:46:20.501"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:46:20.501" endtime="20230310 22:46:20.502"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:46:20.502" endtime="20230310 22:46:20.503"/>
</kw>
<msg timestamp="20230310 22:46:20.503" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20230310 22:46:19.650" endtime="20230310 22:46:20.504"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230310 22:46:20.504" endtime="20230310 22:46:20.505"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:46:19.649" endtime="20230310 22:46:20.505"/>
</test>
<test id="s1-s31-t5" name="Create key using S3 API" line="61">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:46:20.511" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230310 22:46:20.514" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:46:20.514" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:46:20.508" endtime="20230310 22:46:20.514"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:46:20.516" level="INFO"/>
<status status="PASS" starttime="20230310 22:46:20.515" endtime="20230310 22:46:20.516"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:46:20.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:46:20.516" endtime="20230310 22:46:20.517"/>
</kw>
<status status="PASS" starttime="20230310 22:46:20.508" endtime="20230310 22:46:20.518"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:46:20.523" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:46:23.002" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:46:23.002" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:46:20.520" endtime="20230310 22:46:23.003"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:46:23.004" level="INFO"/>
<status status="PASS" starttime="20230310 22:46:23.003" endtime="20230310 22:46:23.005"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:46:23.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:46:23.005" endtime="20230310 22:46:23.006"/>
</kw>
<msg timestamp="20230310 22:46:23.006" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:46:20.519" endtime="20230310 22:46:23.006"/>
</kw>
<msg timestamp="20230310 22:46:23.007" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:46:20.518" endtime="20230310 22:46:23.007"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:46:23.007" endtime="20230310 22:46:23.007"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:46:23.014" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:46:23.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:46:23.018" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:46:23.010" endtime="20230310 22:46:23.018"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:46:23.020" level="INFO"/>
<status status="PASS" starttime="20230310 22:46:23.019" endtime="20230310 22:46:23.020"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:46:23.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:46:23.020" endtime="20230310 22:46:23.021"/>
</kw>
<status status="PASS" starttime="20230310 22:46:23.009" endtime="20230310 22:46:23.022"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:46:20.506" endtime="20230310 22:46:23.023"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230310 22:46:01.866" endtime="20230310 22:46:23.026"/>
</suite>
<suite id="s1-s32" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s32-t1" name="Create a volume and bucket" line="28">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:46:27.775" level="INFO">Running command 'ozone sh volume create new1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:46:31.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:46:31.711" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:46:27.769" endtime="20230310 22:46:31.711"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:46:31.714" level="INFO"/>
<status status="PASS" starttime="20230310 22:46:31.712" endtime="20230310 22:46:31.714"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:46:31.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:46:31.714" endtime="20230310 22:46:31.716"/>
</kw>
<status status="PASS" starttime="20230310 22:46:27.769" endtime="20230310 22:46:31.717"/>
</kw>
<msg timestamp="20230310 22:46:31.717" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:46:27.768" endtime="20230310 22:46:31.721"/>
</kw>
<msg timestamp="20230310 22:46:31.722" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:46:27.767" endtime="20230310 22:46:31.722"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:46:31.722" endtime="20230310 22:46:31.723"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:46:31.734" level="INFO">Running command 'ozone sh bucket create /new1-volume/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:46:35.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:46:35.587" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:46:31.728" endtime="20230310 22:46:35.587"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:46:35.589" level="INFO"/>
<status status="PASS" starttime="20230310 22:46:35.588" endtime="20230310 22:46:35.589"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:46:35.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:46:35.589" endtime="20230310 22:46:35.590"/>
</kw>
<status status="PASS" starttime="20230310 22:46:31.725" endtime="20230310 22:46:35.590"/>
</kw>
<msg timestamp="20230310 22:46:35.590" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:46:31.725" endtime="20230310 22:46:35.591"/>
</kw>
<msg timestamp="20230310 22:46:35.591" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:46:31.723" endtime="20230310 22:46:35.591"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:46:35.592" endtime="20230310 22:46:35.592"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:46:27.766" endtime="20230310 22:46:35.593"/>
</test>
<test id="s1-s32-t2" name="Create key" line="35">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:46:35.599" level="INFO">Running command 'echo "new1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230310 22:46:35.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:46:35.602" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:46:35.596" endtime="20230310 22:46:35.602"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:46:35.604" level="INFO"/>
<status status="PASS" starttime="20230310 22:46:35.603" endtime="20230310 22:46:35.604"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:46:35.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:46:35.604" endtime="20230310 22:46:35.605"/>
</kw>
<status status="PASS" starttime="20230310 22:46:35.596" endtime="20230310 22:46:35.606"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:46:35.611" level="INFO">Running command 'ozone sh key put /new1-volume/new1-bucket/new1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:46:42.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:46:42.942" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:46:35.608" endtime="20230310 22:46:42.942"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:46:42.944" level="INFO"/>
<status status="PASS" starttime="20230310 22:46:42.943" endtime="20230310 22:46:42.944"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:46:42.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:46:42.944" endtime="20230310 22:46:42.945"/>
</kw>
<status status="PASS" starttime="20230310 22:46:35.607" endtime="20230310 22:46:42.945"/>
</kw>
<msg timestamp="20230310 22:46:42.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:46:35.607" endtime="20230310 22:46:42.946"/>
</kw>
<msg timestamp="20230310 22:46:42.946" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:46:35.606" endtime="20230310 22:46:42.946"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:46:42.947" endtime="20230310 22:46:42.947"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:46:42.951" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:46:42.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:46:42.956" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:46:42.948" endtime="20230310 22:46:42.956"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:46:42.957" level="INFO"/>
<status status="PASS" starttime="20230310 22:46:42.956" endtime="20230310 22:46:42.958"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:46:42.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:46:42.958" endtime="20230310 22:46:42.959"/>
</kw>
<status status="PASS" starttime="20230310 22:46:42.947" endtime="20230310 22:46:42.959"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:46:35.595" endtime="20230310 22:46:42.960"/>
</test>
<test id="s1-s32-t3" name="Create a bucket in s3v volume" line="41">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:46:42.968" level="INFO">Running command 'ozone sh bucket create /s3v/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:46:46.657" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:46:46.658" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:46:42.965" endtime="20230310 22:46:46.658"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:46:46.659" level="INFO"/>
<status status="PASS" starttime="20230310 22:46:46.658" endtime="20230310 22:46:46.660"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:46:46.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:46:46.660" endtime="20230310 22:46:46.660"/>
</kw>
<status status="PASS" starttime="20230310 22:46:42.964" endtime="20230310 22:46:46.661"/>
</kw>
<msg timestamp="20230310 22:46:46.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:46:42.964" endtime="20230310 22:46:46.662"/>
</kw>
<msg timestamp="20230310 22:46:46.662" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:46:42.963" endtime="20230310 22:46:46.662"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:46:46.663" endtime="20230310 22:46:46.663"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:46:42.962" endtime="20230310 22:46:46.663"/>
</test>
<test id="s1-s32-t4" name="Create key in the bucket in s3v volume" line="46">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:46:46.670" level="INFO">Running command 'echo "new1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230310 22:46:46.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:46:46.673" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:46:46.666" endtime="20230310 22:46:46.673"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:46:46.674" level="INFO"/>
<status status="PASS" starttime="20230310 22:46:46.674" endtime="20230310 22:46:46.674"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:46:46.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:46:46.675" endtime="20230310 22:46:46.675"/>
</kw>
<status status="PASS" starttime="20230310 22:46:46.666" endtime="20230310 22:46:46.676"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:46:46.681" level="INFO">Running command 'ozone sh key put /s3v/new1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:46:54.375" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:46:54.375" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:46:46.678" endtime="20230310 22:46:54.375"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:46:54.376" level="INFO"/>
<status status="PASS" starttime="20230310 22:46:54.375" endtime="20230310 22:46:54.377"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:46:54.377" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:46:54.377" endtime="20230310 22:46:54.378"/>
</kw>
<status status="PASS" starttime="20230310 22:46:46.677" endtime="20230310 22:46:54.378"/>
</kw>
<msg timestamp="20230310 22:46:54.378" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:46:46.677" endtime="20230310 22:46:54.379"/>
</kw>
<msg timestamp="20230310 22:46:54.379" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:46:46.676" endtime="20230310 22:46:54.379"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:46:54.379" endtime="20230310 22:46:54.380"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:46:54.384" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:46:54.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:46:54.387" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:46:54.381" endtime="20230310 22:46:54.387"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:46:54.388" level="INFO"/>
<status status="PASS" starttime="20230310 22:46:54.388" endtime="20230310 22:46:54.388"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:46:54.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:46:54.389" endtime="20230310 22:46:54.390"/>
</kw>
<status status="PASS" starttime="20230310 22:46:54.380" endtime="20230310 22:46:54.390"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:46:46.665" endtime="20230310 22:46:54.390"/>
</test>
<test id="s1-s32-t5" name="Setup credentials for S3" line="52">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:46:54.398" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:46:55.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:46:55.060" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:46:54.395" endtime="20230310 22:46:55.060"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:46:55.062" level="INFO"/>
<status status="PASS" starttime="20230310 22:46:55.061" endtime="20230310 22:46:55.062"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:46:55.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:46:55.063" endtime="20230310 22:46:55.063"/>
</kw>
<status status="PASS" starttime="20230310 22:46:54.395" endtime="20230310 22:46:55.064"/>
</kw>
<msg timestamp="20230310 22:46:55.064" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:46:54.394" endtime="20230310 22:46:55.065"/>
</kw>
<status status="PASS" starttime="20230310 22:46:54.394" endtime="20230310 22:46:55.065"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:46:55.070" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:46:55.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:46:55.746" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:46:55.067" endtime="20230310 22:46:55.746"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:46:55.748" level="INFO"/>
<status status="PASS" starttime="20230310 22:46:55.746" endtime="20230310 22:46:55.748"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:46:55.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:46:55.748" endtime="20230310 22:46:55.749"/>
</kw>
<status status="PASS" starttime="20230310 22:46:55.066" endtime="20230310 22:46:55.749"/>
</kw>
<msg timestamp="20230310 22:46:55.749" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:46:55.066" endtime="20230310 22:46:55.750"/>
</kw>
<status status="PASS" starttime="20230310 22:46:55.065" endtime="20230310 22:46:55.750"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:46:55.756" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:46:56.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:46:56.383" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:46:55.752" endtime="20230310 22:46:56.383"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:46:56.384" level="INFO"/>
<status status="PASS" starttime="20230310 22:46:56.384" endtime="20230310 22:46:56.385"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:46:56.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:46:56.385" endtime="20230310 22:46:56.385"/>
</kw>
<status status="PASS" starttime="20230310 22:46:55.752" endtime="20230310 22:46:56.386"/>
</kw>
<msg timestamp="20230310 22:46:56.386" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:46:55.751" endtime="20230310 22:46:56.387"/>
</kw>
<status status="PASS" starttime="20230310 22:46:55.750" endtime="20230310 22:46:56.387"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:46:56.393" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:46:57.052" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:46:57.052" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:46:56.390" endtime="20230310 22:46:57.052"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:46:57.053" level="INFO"/>
<status status="PASS" starttime="20230310 22:46:57.052" endtime="20230310 22:46:57.053"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:46:57.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:46:57.054" endtime="20230310 22:46:57.054"/>
</kw>
<status status="PASS" starttime="20230310 22:46:56.389" endtime="20230310 22:46:57.055"/>
</kw>
<msg timestamp="20230310 22:46:57.055" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:46:56.388" endtime="20230310 22:46:57.055"/>
</kw>
<status status="PASS" starttime="20230310 22:46:56.388" endtime="20230310 22:46:57.056"/>
</kw>
<status status="PASS" starttime="20230310 22:46:54.393" endtime="20230310 22:46:57.056"/>
</kw>
<status status="PASS" starttime="20230310 22:46:54.393" endtime="20230310 22:46:57.056"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:46:54.392" endtime="20230310 22:46:57.056"/>
</test>
<test id="s1-s32-t6" name="Try to create a bucket using S3 API" line="56">
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:46:57.064" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:46:57.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:46:57.901" level="INFO">${output} = {
    "Location": "http://s3g:9878/new1-bucket"
}</msg>
<status status="PASS" starttime="20230310 22:46:57.062" endtime="20230310 22:46:57.901"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:46:57.903" level="INFO">{
    "Location": "http://s3g:9878/new1-bucket"
}</msg>
<status status="PASS" starttime="20230310 22:46:57.902" endtime="20230310 22:46:57.903"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:46:57.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:46:57.903" endtime="20230310 22:46:57.904"/>
</kw>
<status status="PASS" starttime="20230310 22:46:57.061" endtime="20230310 22:46:57.904"/>
</kw>
<msg timestamp="20230310 22:46:57.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230310 22:46:57.061" endtime="20230310 22:46:57.905"/>
</kw>
<msg timestamp="20230310 22:46:57.906" level="INFO">${output} = {
    "Location": "http://s3g:9878/new1-bucket"
}</msg>
<status status="PASS" starttime="20230310 22:46:57.060" endtime="20230310 22:46:57.906"/>
</kw>
<msg timestamp="20230310 22:46:57.906" level="INFO">${result} = {
    "Location": "http://s3g:9878/new1-bucket"
}</msg>
<status status="PASS" starttime="20230310 22:46:57.059" endtime="20230310 22:46:57.906"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:46:57.907" endtime="20230310 22:46:57.907"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:46:57.908" endtime="20230310 22:46:57.908"/>
</kw>
<msg timestamp="20230310 22:46:57.908" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20230310 22:46:57.059" endtime="20230310 22:46:57.908"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230310 22:46:57.909" endtime="20230310 22:46:57.909"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:46:57.058" endtime="20230310 22:46:57.910"/>
</test>
<test id="s1-s32-t7" name="Create key using S3 API" line="61">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:46:57.917" level="INFO">Running command 'echo "new1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230310 22:46:57.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:46:57.920" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:46:57.914" endtime="20230310 22:46:57.920"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:46:57.921" level="INFO"/>
<status status="PASS" starttime="20230310 22:46:57.920" endtime="20230310 22:46:57.921"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:46:57.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:46:57.922" endtime="20230310 22:46:57.922"/>
</kw>
<status status="PASS" starttime="20230310 22:46:57.913" endtime="20230310 22:46:57.923"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:46:57.933" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket new1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:46:59.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:46:59.057" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:46:57.925" endtime="20230310 22:46:59.057"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:46:59.060" level="INFO"/>
<status status="PASS" starttime="20230310 22:46:59.058" endtime="20230310 22:46:59.060"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:46:59.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:46:59.060" endtime="20230310 22:46:59.064"/>
</kw>
<msg timestamp="20230310 22:46:59.065" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:46:57.924" endtime="20230310 22:46:59.065"/>
</kw>
<msg timestamp="20230310 22:46:59.067" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:46:57.923" endtime="20230310 22:46:59.067"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:46:59.068" endtime="20230310 22:46:59.070"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230310 22:46:59.075" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230310 22:46:59.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20230310 22:46:59.078" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230310 22:46:59.071" endtime="20230310 22:46:59.078"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230310 22:46:59.080" level="INFO"/>
<status status="PASS" starttime="20230310 22:46:59.079" endtime="20230310 22:46:59.080"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230310 22:46:59.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230310 22:46:59.080" endtime="20230310 22:46:59.081"/>
</kw>
<status status="PASS" starttime="20230310 22:46:59.070" endtime="20230310 22:46:59.081"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:46:57.912" endtime="20230310 22:46:59.082"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230310 22:46:27.653" endtime="20230310 22:46:59.084"/>
</suite>
<suite id="s1-s33" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s33-t1" name="Check MLV" line="33">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230310 22:45:08.799" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20230310 22:45:08.798" endtime="20230310 22:45:08.800"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230310 22:45:08.800" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230310 22:45:08.800" endtime="20230310 22:45:08.800"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20230310 22:45:08.801" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230310 22:45:08.800" endtime="20230310 22:45:08.801"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified file is empty.</doc>
<msg timestamp="20230310 22:45:08.802" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 229 bytes.</msg>
<status status="PASS" starttime="20230310 22:45:08.802" endtime="20230310 22:45:08.802"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20230310 22:45:08.804" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20230310 22:45:08.805" level="INFO">${version_file_contents} = #Fri Mar 10 22:41:02 UTC 2023
cTime=1678488061344
clusterID=CID-d8d7fcf8-04e0-4b43-9ae2-eefeb561683b
nodeType=SCM
scmUuid=af9b2ba2-ce52-4d43-bbf2-6c00e161fbdb
layoutVersion=2
primaryScmNodeId=af9b2ba2...</msg>
<status status="PASS" starttime="20230310 22:45:08.804" endtime="20230310 22:45:08.805"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230310 22:45:08.806" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20230310 22:45:08.805" endtime="20230310 22:45:08.806"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230310 22:45:08.806" endtime="20230310 22:45:08.806"/>
</kw>
<status status="PASS" starttime="20230310 22:45:08.803" endtime="20230310 22:45:08.807"/>
</kw>
<status status="PASS" starttime="20230310 22:45:08.803" endtime="20230310 22:45:08.807"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230310 22:45:08.797" endtime="20230310 22:45:08.807"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20230310 22:45:08.715" endtime="20230310 22:45:08.808"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="422194"/>
</suite>
<statistics>
<total>
<stat pass="96" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="8" fail="0" skip="0">create-volume-and-bucket</stat>
<stat pass="1" fail="0" skip="0">post-finalized-ec-tests</stat>
<stat pass="1" fail="0" skip="0">pre-finalized-ec-tests</stat>
</tag>
<suite>
<stat pass="96" fail="0" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1" name="Validate">upgrade.Validate</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Validate">upgrade.Validate</stat>
<stat pass="7" fail="0" skip="0" id="s1-s3" name="Generate">upgrade.Generate</stat>
<stat pass="4" fail="0" skip="0" id="s1-s4" name="Validate">upgrade.Validate</stat>
<stat pass="5" fail="0" skip="0" id="s1-s5" name="Generate">upgrade.Generate</stat>
<stat pass="4" fail="0" skip="0" id="s1-s6" name="Validate">upgrade.Validate</stat>
<stat pass="7" fail="0" skip="0" id="s1-s7" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s8" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="4" fail="0" skip="0" id="s1-s9" name="Validate">upgrade.Validate</stat>
<stat pass="7" fail="0" skip="0" id="s1-s10" name="Generate">upgrade.Generate</stat>
<stat pass="4" fail="0" skip="0" id="s1-s11" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s12" name="Upgrade-Ec-Check">upgrade.Upgrade-Ec-Check</stat>
<stat pass="1" fail="0" skip="0" id="s1-s13" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s14" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s15" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s16" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s17" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s18" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="4" fail="0" skip="0" id="s1-s19" name="Validate">upgrade.Validate</stat>
<stat pass="4" fail="0" skip="0" id="s1-s20" name="Validate">upgrade.Validate</stat>
<stat pass="2" fail="0" skip="0" id="s1-s21" name="Finalize">upgrade.Finalize</stat>
<stat pass="1" fail="0" skip="0" id="s1-s22" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="4" fail="0" skip="0" id="s1-s23" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s24" name="Upgrade-Ec-Check">upgrade.Upgrade-Ec-Check</stat>
<stat pass="1" fail="0" skip="0" id="s1-s25" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s26" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s27" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s28" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s29" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="4" fail="0" skip="0" id="s1-s30" name="Validate">upgrade.Validate</stat>
<stat pass="5" fail="0" skip="0" id="s1-s31" name="Generate">upgrade.Generate</stat>
<stat pass="7" fail="0" skip="0" id="s1-s32" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s33" name="Check-Mlv">upgrade.Check-Mlv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
