<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.0.2 (Python 3.8.10 on linux)" generated="20230309 18:01:16.306" rpa="false" schemaversion="3">
<suite id="s1" name="ozonesecure">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-s1-t1" name="Check webui static resources" line="29">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:35:26.958" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:35:26.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:35:26.964" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230309 16:35:26.954" endtime="20230309 16:35:26.964"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:35:26.965" level="INFO">scm</msg>
<status status="PASS" starttime="20230309 16:35:26.964" endtime="20230309 16:35:26.965"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:35:26.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:35:26.965" endtime="20230309 16:35:26.966"/>
</kw>
<status status="PASS" starttime="20230309 16:35:26.953" endtime="20230309 16:35:26.967"/>
</kw>
<msg timestamp="20230309 16:35:26.967" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:35:26.953" endtime="20230309 16:35:26.968"/>
</kw>
<msg timestamp="20230309 16:35:26.969" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20230309 16:35:26.952" endtime="20230309 16:35:26.969"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:35:26.974" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:35:27.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:35:27.013" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:35:26.972" endtime="20230309 16:35:27.013"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:35:27.015" level="INFO"/>
<status status="PASS" starttime="20230309 16:35:27.013" endtime="20230309 16:35:27.015"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:35:27.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:35:27.015" endtime="20230309 16:35:27.016"/>
</kw>
<status status="PASS" starttime="20230309 16:35:26.971" endtime="20230309 16:35:27.016"/>
</kw>
<msg timestamp="20230309 16:35:27.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:35:26.970" endtime="20230309 16:35:27.017"/>
</kw>
<status status="PASS" starttime="20230309 16:35:26.970" endtime="20230309 16:35:27.017"/>
</kw>
<status status="PASS" starttime="20230309 16:35:26.969" endtime="20230309 16:35:27.017"/>
</kw>
<status status="PASS" starttime="20230309 16:35:26.952" endtime="20230309 16:35:27.018"/>
</kw>
<status status="PASS" starttime="20230309 16:35:26.950" endtime="20230309 16:35:27.018"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:35:27.023" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:35:27.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:35:27.242" level="INFO">${output} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20230309 16:35:27.020" endtime="20230309 16:35:27.242"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:35:27.244" level="INFO">HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 488

HTTP/1.1 200 OK
Date: Thu, 09 Mar 2023 16:35:27 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCk/O1qMfanGsjWfov5a5OvXUwNEYkaGBdo5JW3c6ynhw9dokbfnqzMKRA2JG9gFzBhnILXBD3UnM4Z1KMv9f/nxMD
Set-Cookie: hadoop.auth="u=HTTP&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1678415727227&amp;s=nTEhFs99zDKi942ciZ2gWRKMGwxY95lT6/QNRZSaW4k="; Path=/; HttpOnly
Last-Modified: Thu, 09 Mar 2023 16:19:06 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20230309 16:35:27.243" endtime="20230309 16:35:27.244"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:35:27.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:35:27.245" endtime="20230309 16:35:27.246"/>
</kw>
<status status="PASS" starttime="20230309 16:35:27.019" endtime="20230309 16:35:27.246"/>
</kw>
<msg timestamp="20230309 16:35:27.246" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:35:27.019" endtime="20230309 16:35:27.247"/>
</kw>
<msg timestamp="20230309 16:35:27.247" level="INFO">${result} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20230309 16:35:27.018" endtime="20230309 16:35:27.247"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 16:35:27.248" endtime="20230309 16:35:27.248"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 16:35:26.949" endtime="20230309 16:35:27.248"/>
</test>
<test id="s1-s1-s1-t2" name="Basic Freon smoketest" line="34">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:35:27.270" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:35:27.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:35:27.284" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230309 16:35:27.261" endtime="20230309 16:35:27.284"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:35:27.286" level="INFO">scm</msg>
<status status="PASS" starttime="20230309 16:35:27.285" endtime="20230309 16:35:27.286"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:35:27.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:35:27.286" endtime="20230309 16:35:27.288"/>
</kw>
<status status="PASS" starttime="20230309 16:35:27.258" endtime="20230309 16:35:27.288"/>
</kw>
<msg timestamp="20230309 16:35:27.288" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:35:27.257" endtime="20230309 16:35:27.289"/>
</kw>
<msg timestamp="20230309 16:35:27.289" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230309 16:35:27.256" endtime="20230309 16:35:27.289"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 16:35:27.295" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 16:35:27.291" endtime="20230309 16:35:27.296"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:35:27.314" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:35:27.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:35:27.348" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:35:27.303" endtime="20230309 16:35:27.348"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:35:27.350" level="INFO"/>
<status status="PASS" starttime="20230309 16:35:27.349" endtime="20230309 16:35:27.350"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:35:27.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:35:27.350" endtime="20230309 16:35:27.351"/>
</kw>
<status status="PASS" starttime="20230309 16:35:27.301" endtime="20230309 16:35:27.351"/>
</kw>
<msg timestamp="20230309 16:35:27.352" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:35:27.299" endtime="20230309 16:35:27.352"/>
</kw>
<status status="PASS" starttime="20230309 16:35:27.298" endtime="20230309 16:35:27.353"/>
</kw>
<status status="PASS" starttime="20230309 16:35:27.296" endtime="20230309 16:35:27.353"/>
</kw>
<status status="PASS" starttime="20230309 16:35:27.255" endtime="20230309 16:35:27.353"/>
</kw>
<status status="PASS" starttime="20230309 16:35:27.253" endtime="20230309 16:35:27.353"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 16:35:27.354" level="INFO">${random} = LlSZADAQft</msg>
<status status="PASS" starttime="20230309 16:35:27.353" endtime="20230309 16:35:27.354"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:35:27.362" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p LlSZADAQft  2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:35:42.382" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:35:42.382" level="INFO">${output} = 2023-03-09 16:35:30,938 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-03-09 16:35:31,137 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230309 16:35:27.358" endtime="20230309 16:35:42.382"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:35:42.384" level="INFO">2023-03-09 16:35:30,938 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-03-09 16:35:31,137 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-03-09 16:35:31,138 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-03-09 16:35:31,416 [main] INFO freon.BaseFreonGenerator: Executing test with prefix LlSZADAQft and number-of-tests 1
2023-03-09 16:35:31,561 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-09 16:35:32,579 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-09 16:35:33,579 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-09 16:35:34,580 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-09 16:35:35,267 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser as owner and space quota set to -1 bytes, counts quota set to -1
2023-03-09 16:35:35,428 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2023-03-09 16:35:35,581 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-09 16:35:36,432 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-03-09 16:35:36,610 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-09 16:35:36,615 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2023-03-09 16:35:37,182 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-03-09 16:35:37,610 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-09 16:35:38,611 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-09 16:35:39,617 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-09 16:35:40,619 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-09 16:35:41,625 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-03-09 16:35:41,971 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=5160.338109, max=5160.338109, mean=5160.338109, stddev=0.0, median=5160.338109, p75=5160.338109, p95=5160.338109, p98=5160.338109, p99=5160.338109, p999=5160.338109, mean_rate=0.1551960654353301, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-03-09 16:35:41,971 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 10
2023-03-09 16:35:41,971 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-03-09 16:35:41,971 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230309 16:35:42.383" endtime="20230309 16:35:42.385"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:35:42.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:35:42.385" endtime="20230309 16:35:42.386"/>
</kw>
<status status="PASS" starttime="20230309 16:35:27.358" endtime="20230309 16:35:42.387"/>
</kw>
<msg timestamp="20230309 16:35:42.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:35:27.357" endtime="20230309 16:35:42.388"/>
</kw>
<msg timestamp="20230309 16:35:42.388" level="INFO">${result} = 2023-03-09 16:35:30,938 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-03-09 16:35:31,137 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230309 16:35:27.356" endtime="20230309 16:35:42.388"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 16:35:42.389" endtime="20230309 16:35:42.389"/>
</kw>
<status status="PASS" starttime="20230309 16:35:27.354" endtime="20230309 16:35:42.390"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:35:42.398" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p LlSZADAQft  2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:35:52.781" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:35:52.781" level="INFO">${output} = 2023-03-09 16:35:45,692 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-03-09 16:35:45,862 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230309 16:35:42.394" endtime="20230309 16:35:52.781"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:35:52.783" level="INFO">2023-03-09 16:35:45,692 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-03-09 16:35:45,862 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-03-09 16:35:45,863 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-03-09 16:35:46,090 [main] INFO freon.BaseFreonGenerator: Executing test with prefix LlSZADAQft and number-of-tests 1
2023-03-09 16:35:46,202 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-09 16:35:47,206 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-09 16:35:48,207 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-09 16:35:49,207 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-09 16:35:49,440 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-03-09 16:35:50,208 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-09 16:35:51,209 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-09 16:35:52,209 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-03-09 16:35:52,410 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=135.978462, max=135.978462, mean=135.978462, stddev=0.0, median=135.978462, p75=135.978462, p95=135.978462, p98=135.978462, p99=135.978462, p999=135.978462, mean_rate=0.8865381034759507, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-03-09 16:35:52,411 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2023-03-09 16:35:52,416 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-03-09 16:35:52,416 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230309 16:35:52.782" endtime="20230309 16:35:52.783"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:35:52.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:35:52.783" endtime="20230309 16:35:52.783"/>
</kw>
<status status="PASS" starttime="20230309 16:35:42.393" endtime="20230309 16:35:52.784"/>
</kw>
<msg timestamp="20230309 16:35:52.784" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:35:42.393" endtime="20230309 16:35:52.784"/>
</kw>
<msg timestamp="20230309 16:35:52.785" level="INFO">${result} = 2023-03-09 16:35:45,692 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-03-09 16:35:45,862 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230309 16:35:42.392" endtime="20230309 16:35:52.785"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 16:35:52.785" endtime="20230309 16:35:52.786"/>
</kw>
<status status="PASS" starttime="20230309 16:35:42.390" endtime="20230309 16:35:52.786"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 16:35:27.250" endtime="20230309 16:35:52.786"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230309 16:35:26.893" endtime="20230309 16:35:52.788"/>
</suite>
<suite id="s1-s1-s2" name="Getconf" source="/opt/hadoop/smoketest/basic/getconf.robot">
<test id="s1-s1-s2-t1" name="Get OM" line="22">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:35:52.801" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:35:54.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:35:54.768" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20230309 16:35:52.798" endtime="20230309 16:35:54.768"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:35:54.770" level="INFO">om</msg>
<status status="PASS" starttime="20230309 16:35:54.769" endtime="20230309 16:35:54.770"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:35:54.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:35:54.770" endtime="20230309 16:35:54.771"/>
</kw>
<status status="PASS" starttime="20230309 16:35:52.797" endtime="20230309 16:35:54.771"/>
</kw>
<msg timestamp="20230309 16:35:54.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:35:52.797" endtime="20230309 16:35:54.772"/>
</kw>
<msg timestamp="20230309 16:35:54.772" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20230309 16:35:52.796" endtime="20230309 16:35:54.772"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 16:35:54.772" endtime="20230309 16:35:54.773"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:35:54.778" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:35:56.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:35:56.711" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20230309 16:35:54.775" endtime="20230309 16:35:56.711"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:35:56.712" level="INFO">om</msg>
<status status="PASS" starttime="20230309 16:35:56.711" endtime="20230309 16:35:56.713"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:35:56.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:35:56.713" endtime="20230309 16:35:56.713"/>
</kw>
<status status="PASS" starttime="20230309 16:35:54.774" endtime="20230309 16:35:56.714"/>
</kw>
<msg timestamp="20230309 16:35:56.714" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:35:54.773" endtime="20230309 16:35:56.715"/>
</kw>
<msg timestamp="20230309 16:35:56.715" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20230309 16:35:54.773" endtime="20230309 16:35:56.715"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 16:35:56.715" endtime="20230309 16:35:56.715"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 16:35:52.796" endtime="20230309 16:35:56.716"/>
</test>
<test id="s1-s1-s2-t2" name="Get SCM" line="28">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:35:56.722" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:35:58.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:35:58.628" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230309 16:35:56.720" endtime="20230309 16:35:58.628"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:35:58.630" level="INFO">scm</msg>
<status status="PASS" starttime="20230309 16:35:58.629" endtime="20230309 16:35:58.630"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:35:58.631" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:35:58.630" endtime="20230309 16:35:58.631"/>
</kw>
<status status="PASS" starttime="20230309 16:35:56.719" endtime="20230309 16:35:58.631"/>
</kw>
<msg timestamp="20230309 16:35:58.631" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:35:56.719" endtime="20230309 16:35:58.632"/>
</kw>
<msg timestamp="20230309 16:35:58.632" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20230309 16:35:56.718" endtime="20230309 16:35:58.632"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 16:35:58.633" endtime="20230309 16:35:58.633"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:35:58.638" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:36:00.926" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:36:00.926" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230309 16:35:58.635" endtime="20230309 16:36:00.926"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:36:00.928" level="INFO">scm</msg>
<status status="PASS" starttime="20230309 16:36:00.927" endtime="20230309 16:36:00.928"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:36:00.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:36:00.928" endtime="20230309 16:36:00.929"/>
</kw>
<status status="PASS" starttime="20230309 16:35:58.635" endtime="20230309 16:36:00.930"/>
</kw>
<msg timestamp="20230309 16:36:00.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:35:58.634" endtime="20230309 16:36:00.930"/>
</kw>
<msg timestamp="20230309 16:36:00.931" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20230309 16:35:58.634" endtime="20230309 16:36:00.931"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 16:36:00.931" endtime="20230309 16:36:00.932"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 16:35:56.717" endtime="20230309 16:36:00.932"/>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key" line="34">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:36:00.939" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:36:03.096" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:36:03.096" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20230309 16:36:00.936" endtime="20230309 16:36:03.096"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:36:03.098" level="INFO">om</msg>
<status status="PASS" starttime="20230309 16:36:03.097" endtime="20230309 16:36:03.098"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:36:03.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:36:03.098" endtime="20230309 16:36:03.099"/>
</kw>
<status status="PASS" starttime="20230309 16:36:00.935" endtime="20230309 16:36:03.099"/>
</kw>
<msg timestamp="20230309 16:36:03.100" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:36:00.935" endtime="20230309 16:36:03.100"/>
</kw>
<msg timestamp="20230309 16:36:03.101" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20230309 16:36:00.934" endtime="20230309 16:36:03.101"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 16:36:03.101" endtime="20230309 16:36:03.101"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 16:36:03.101" endtime="20230309 16:36:03.102"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:36:03.107" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:36:04.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:36:04.906" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20230309 16:36:03.104" endtime="20230309 16:36:04.906"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:36:04.908" level="INFO">om</msg>
<status status="PASS" starttime="20230309 16:36:04.907" endtime="20230309 16:36:04.908"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:36:04.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:36:04.908" endtime="20230309 16:36:04.909"/>
</kw>
<status status="PASS" starttime="20230309 16:36:03.104" endtime="20230309 16:36:04.909"/>
</kw>
<msg timestamp="20230309 16:36:04.909" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:36:03.103" endtime="20230309 16:36:04.910"/>
</kw>
<msg timestamp="20230309 16:36:04.910" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20230309 16:36:03.102" endtime="20230309 16:36:04.910"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 16:36:04.910" endtime="20230309 16:36:04.911"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 16:36:04.911" endtime="20230309 16:36:04.912"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 16:36:00.933" endtime="20230309 16:36:04.912"/>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key" line="42">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:36:04.918" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:36:06.769" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 16:36:06.770" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20230309 16:36:04.915" endtime="20230309 16:36:06.770"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:36:06.772" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20230309 16:36:06.770" endtime="20230309 16:36:06.772"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:36:06.773" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:36:06.772" endtime="20230309 16:36:06.773"/>
</kw>
<msg timestamp="20230309 16:36:06.773" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20230309 16:36:04.915" endtime="20230309 16:36:06.773"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 16:36:06.774" endtime="20230309 16:36:06.774"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:36:06.778" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:36:08.436" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 16:36:08.436" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20230309 16:36:06.775" endtime="20230309 16:36:08.436"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:36:08.438" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20230309 16:36:08.437" endtime="20230309 16:36:08.439"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:36:08.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:36:08.439" endtime="20230309 16:36:08.440"/>
</kw>
<msg timestamp="20230309 16:36:08.440" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20230309 16:36:06.774" endtime="20230309 16:36:08.440"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 16:36:08.440" endtime="20230309 16:36:08.441"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 16:36:04.914" endtime="20230309 16:36:08.441"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" starttime="20230309 16:35:52.790" endtime="20230309 16:36:08.443"/>
</suite>
<suite id="s1-s1-s3" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 16:36:08.467" level="INFO">${random} = 69711</msg>
<status status="PASS" starttime="20230309 16:36:08.467" endtime="20230309 16:36:08.467"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 16:36:08.469" level="INFO">${source} = 69711-source</msg>
<status status="PASS" starttime="20230309 16:36:08.467" endtime="20230309 16:36:08.469"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 16:36:08.471" level="INFO">${target} = 69711-target</msg>
<status status="PASS" starttime="20230309 16:36:08.469" endtime="20230309 16:36:08.471"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:36:08.476" level="INFO">Running command 'ozone sh volume create 69711-source 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:36:14.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:36:14.873" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:36:08.473" endtime="20230309 16:36:14.873"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:36:14.875" level="INFO"/>
<status status="PASS" starttime="20230309 16:36:14.874" endtime="20230309 16:36:14.875"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:36:14.875" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:36:14.875" endtime="20230309 16:36:14.876"/>
</kw>
<status status="PASS" starttime="20230309 16:36:08.472" endtime="20230309 16:36:14.876"/>
</kw>
<msg timestamp="20230309 16:36:14.876" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:36:08.472" endtime="20230309 16:36:14.877"/>
</kw>
<status status="PASS" starttime="20230309 16:36:08.471" endtime="20230309 16:36:14.877"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:36:14.881" level="INFO">Running command 'ozone sh volume create 69711-target 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:36:21.088" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:36:21.089" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:36:14.879" endtime="20230309 16:36:21.089"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:36:21.090" level="INFO"/>
<status status="PASS" starttime="20230309 16:36:21.089" endtime="20230309 16:36:21.090"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:36:21.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:36:21.090" endtime="20230309 16:36:21.091"/>
</kw>
<status status="PASS" starttime="20230309 16:36:14.878" endtime="20230309 16:36:21.091"/>
</kw>
<msg timestamp="20230309 16:36:21.091" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:36:14.878" endtime="20230309 16:36:21.092"/>
</kw>
<status status="PASS" starttime="20230309 16:36:14.877" endtime="20230309 16:36:21.092"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:36:21.098" level="INFO">Running command 'ozone sh bucket create 69711-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:36:27.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:36:27.586" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:36:21.095" endtime="20230309 16:36:27.586"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:36:27.587" level="INFO"/>
<status status="PASS" starttime="20230309 16:36:27.587" endtime="20230309 16:36:27.587"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:36:27.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:36:27.588" endtime="20230309 16:36:27.589"/>
</kw>
<status status="PASS" starttime="20230309 16:36:21.094" endtime="20230309 16:36:27.589"/>
</kw>
<msg timestamp="20230309 16:36:27.589" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:36:21.094" endtime="20230309 16:36:27.590"/>
</kw>
<status status="PASS" starttime="20230309 16:36:21.093" endtime="20230309 16:36:27.590"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:36:27.595" level="INFO">Running command 'ozone sh key put 69711-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:36:37.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:36:37.158" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:36:27.592" endtime="20230309 16:36:37.158"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:36:37.160" level="INFO"/>
<status status="PASS" starttime="20230309 16:36:37.159" endtime="20230309 16:36:37.160"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:36:37.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:36:37.160" endtime="20230309 16:36:37.161"/>
</kw>
<status status="PASS" starttime="20230309 16:36:27.592" endtime="20230309 16:36:37.161"/>
</kw>
<msg timestamp="20230309 16:36:37.161" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:36:27.591" endtime="20230309 16:36:37.162"/>
</kw>
<status status="PASS" starttime="20230309 16:36:27.590" endtime="20230309 16:36:37.163"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:36:37.168" level="INFO">Running command 'ozone sh bucket create 69711-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:36:43.336" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:36:43.336" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:36:37.165" endtime="20230309 16:36:43.336"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:36:43.337" level="INFO"/>
<status status="PASS" starttime="20230309 16:36:43.337" endtime="20230309 16:36:43.338"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:36:43.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:36:43.338" endtime="20230309 16:36:43.338"/>
</kw>
<status status="PASS" starttime="20230309 16:36:37.164" endtime="20230309 16:36:43.339"/>
</kw>
<msg timestamp="20230309 16:36:43.339" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:36:37.164" endtime="20230309 16:36:43.340"/>
</kw>
<status status="PASS" starttime="20230309 16:36:37.163" endtime="20230309 16:36:43.340"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:36:43.345" level="INFO">Running command 'ozone sh bucket link 69711-source/readable-bucket 69711-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:36:49.738" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:36:49.738" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:36:43.342" endtime="20230309 16:36:49.738"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:36:49.740" level="INFO"/>
<status status="PASS" starttime="20230309 16:36:49.739" endtime="20230309 16:36:49.740"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:36:49.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:36:49.740" endtime="20230309 16:36:49.741"/>
</kw>
<status status="PASS" starttime="20230309 16:36:43.342" endtime="20230309 16:36:49.741"/>
</kw>
<msg timestamp="20230309 16:36:49.741" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:36:43.341" endtime="20230309 16:36:49.742"/>
</kw>
<status status="PASS" starttime="20230309 16:36:43.340" endtime="20230309 16:36:49.742"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:36:49.752" level="INFO">Running command 'ozone sh bucket link 69711-source/readable-bucket 69711-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:36:56.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:36:56.240" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:36:49.747" endtime="20230309 16:36:56.240"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:36:56.241" level="INFO"/>
<status status="PASS" starttime="20230309 16:36:56.240" endtime="20230309 16:36:56.241"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:36:56.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:36:56.241" endtime="20230309 16:36:56.242"/>
</kw>
<status status="PASS" starttime="20230309 16:36:49.747" endtime="20230309 16:36:56.242"/>
</kw>
<msg timestamp="20230309 16:36:56.242" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:36:49.746" endtime="20230309 16:36:56.243"/>
</kw>
<status status="PASS" starttime="20230309 16:36:49.742" endtime="20230309 16:36:56.243"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:36:56.247" level="INFO">Running command 'ozone sh bucket link 69711-source/unreadable-bucket 69711-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:37:02.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:37:02.507" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:36:56.245" endtime="20230309 16:37:02.508"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:37:02.509" level="INFO"/>
<status status="PASS" starttime="20230309 16:37:02.508" endtime="20230309 16:37:02.509"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:37:02.510" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:37:02.509" endtime="20230309 16:37:02.510"/>
</kw>
<status status="PASS" starttime="20230309 16:36:56.244" endtime="20230309 16:37:02.511"/>
</kw>
<msg timestamp="20230309 16:37:02.511" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:36:56.244" endtime="20230309 16:37:02.512"/>
</kw>
<status status="PASS" starttime="20230309 16:36:56.243" endtime="20230309 16:37:02.512"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:37:02.517" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 69711-target 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:37:08.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:37:08.473" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230309 16:37:02.515" endtime="20230309 16:37:08.473"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:37:08.475" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230309 16:37:08.474" endtime="20230309 16:37:08.475"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:37:08.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:37:08.475" endtime="20230309 16:37:08.476"/>
</kw>
<status status="PASS" starttime="20230309 16:37:02.514" endtime="20230309 16:37:08.476"/>
</kw>
<msg timestamp="20230309 16:37:08.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:37:02.514" endtime="20230309 16:37:08.477"/>
</kw>
<status status="PASS" starttime="20230309 16:37:02.513" endtime="20230309 16:37:08.477"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:37:08.482" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 69711-source 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:37:15.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:37:15.123" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230309 16:37:08.479" endtime="20230309 16:37:15.123"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:37:15.125" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230309 16:37:15.124" endtime="20230309 16:37:15.125"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:37:15.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:37:15.125" endtime="20230309 16:37:15.126"/>
</kw>
<status status="PASS" starttime="20230309 16:37:08.478" endtime="20230309 16:37:15.127"/>
</kw>
<msg timestamp="20230309 16:37:15.127" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:37:08.478" endtime="20230309 16:37:15.127"/>
</kw>
<status status="PASS" starttime="20230309 16:37:08.477" endtime="20230309 16:37:15.128"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:37:15.133" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 69711-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:37:21.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:37:21.461" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230309 16:37:15.130" endtime="20230309 16:37:21.461"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:37:21.462" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230309 16:37:21.462" endtime="20230309 16:37:21.463"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:37:21.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:37:21.463" endtime="20230309 16:37:21.464"/>
</kw>
<status status="PASS" starttime="20230309 16:37:15.130" endtime="20230309 16:37:21.464"/>
</kw>
<msg timestamp="20230309 16:37:21.464" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:37:15.129" endtime="20230309 16:37:21.465"/>
</kw>
<status status="PASS" starttime="20230309 16:37:15.128" endtime="20230309 16:37:21.465"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:37:21.471" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 69711-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:37:28.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:37:28.129" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230309 16:37:21.468" endtime="20230309 16:37:28.129"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:37:28.131" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230309 16:37:28.130" endtime="20230309 16:37:28.131"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:37:28.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:37:28.131" endtime="20230309 16:37:28.132"/>
</kw>
<status status="PASS" starttime="20230309 16:37:21.467" endtime="20230309 16:37:28.132"/>
</kw>
<msg timestamp="20230309 16:37:28.132" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:37:21.466" endtime="20230309 16:37:28.133"/>
</kw>
<status status="PASS" starttime="20230309 16:37:21.465" endtime="20230309 16:37:28.133"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:37:28.138" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 69711-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:37:34.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:37:34.901" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230309 16:37:28.135" endtime="20230309 16:37:34.901"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:37:34.907" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230309 16:37:34.903" endtime="20230309 16:37:34.907"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:37:34.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:37:34.908" endtime="20230309 16:37:34.909"/>
</kw>
<status status="PASS" starttime="20230309 16:37:28.135" endtime="20230309 16:37:34.909"/>
</kw>
<msg timestamp="20230309 16:37:34.909" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:37:28.134" endtime="20230309 16:37:34.910"/>
</kw>
<status status="PASS" starttime="20230309 16:37:28.134" endtime="20230309 16:37:34.910"/>
</kw>
<status status="PASS" starttime="20230309 16:36:21.093" endtime="20230309 16:37:34.911"/>
</kw>
<status status="PASS" starttime="20230309 16:36:21.092" endtime="20230309 16:37:34.911"/>
</kw>
<status status="PASS" starttime="20230309 16:36:08.466" endtime="20230309 16:37:34.911"/>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket" line="84">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:37:34.920" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:37:34.926" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:37:34.926" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230309 16:37:34.916" endtime="20230309 16:37:34.926"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:37:34.927" level="INFO">scm</msg>
<status status="PASS" starttime="20230309 16:37:34.927" endtime="20230309 16:37:34.927"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:37:34.928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:37:34.928" endtime="20230309 16:37:34.928"/>
</kw>
<status status="PASS" starttime="20230309 16:37:34.915" endtime="20230309 16:37:34.929"/>
</kw>
<msg timestamp="20230309 16:37:34.929" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:37:34.914" endtime="20230309 16:37:34.930"/>
</kw>
<msg timestamp="20230309 16:37:34.930" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230309 16:37:34.914" endtime="20230309 16:37:34.930"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 16:37:34.932" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 16:37:34.930" endtime="20230309 16:37:34.932"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:37:34.938" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:37:34.991" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:37:34.991" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:37:34.935" endtime="20230309 16:37:34.991"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:37:34.993" level="INFO"/>
<status status="PASS" starttime="20230309 16:37:34.992" endtime="20230309 16:37:34.993"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:37:34.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:37:34.993" endtime="20230309 16:37:34.994"/>
</kw>
<status status="PASS" starttime="20230309 16:37:34.935" endtime="20230309 16:37:34.994"/>
</kw>
<msg timestamp="20230309 16:37:34.995" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:37:34.934" endtime="20230309 16:37:34.995"/>
</kw>
<status status="PASS" starttime="20230309 16:37:34.933" endtime="20230309 16:37:34.996"/>
</kw>
<status status="PASS" starttime="20230309 16:37:34.933" endtime="20230309 16:37:34.996"/>
</kw>
<status status="PASS" starttime="20230309 16:37:34.913" endtime="20230309 16:37:34.996"/>
</kw>
<status status="PASS" starttime="20230309 16:37:34.912" endtime="20230309 16:37:34.996"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:37:35.002" level="INFO">Running command 'ozone sh bucket link 69711-source/no-such-bucket 69711-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:37:40.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:37:40.776" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:37:34.999" endtime="20230309 16:37:40.777"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:37:40.778" level="INFO"/>
<status status="PASS" starttime="20230309 16:37:40.777" endtime="20230309 16:37:40.778"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:37:40.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:37:40.778" endtime="20230309 16:37:40.779"/>
</kw>
<status status="PASS" starttime="20230309 16:37:34.998" endtime="20230309 16:37:40.780"/>
</kw>
<msg timestamp="20230309 16:37:40.780" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:37:34.997" endtime="20230309 16:37:40.780"/>
</kw>
<status status="PASS" starttime="20230309 16:37:34.996" endtime="20230309 16:37:40.781"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:37:40.785" level="INFO">Running command 'ozone sh key list 69711-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:37:47.161" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 16:37:47.161" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20230309 16:37:40.782" endtime="20230309 16:37:47.161"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:37:47.162" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20230309 16:37:47.161" endtime="20230309 16:37:47.162"/>
</kw>
<msg timestamp="20230309 16:37:47.163" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20230309 16:37:40.781" endtime="20230309 16:37:47.163"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 16:37:47.163" endtime="20230309 16:37:47.164"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230309 16:37:34.911" endtime="20230309 16:37:47.164"/>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough" line="89">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:37:47.174" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:37:47.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:37:47.177" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230309 16:37:47.170" endtime="20230309 16:37:47.178"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:37:47.179" level="INFO">scm</msg>
<status status="PASS" starttime="20230309 16:37:47.178" endtime="20230309 16:37:47.179"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:37:47.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:37:47.179" endtime="20230309 16:37:47.180"/>
</kw>
<status status="PASS" starttime="20230309 16:37:47.170" endtime="20230309 16:37:47.180"/>
</kw>
<msg timestamp="20230309 16:37:47.180" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:37:47.169" endtime="20230309 16:37:47.180"/>
</kw>
<msg timestamp="20230309 16:37:47.181" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230309 16:37:47.169" endtime="20230309 16:37:47.181"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 16:37:47.182" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 16:37:47.181" endtime="20230309 16:37:47.182"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:37:47.187" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:37:47.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:37:47.258" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:37:47.184" endtime="20230309 16:37:47.258"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:37:47.260" level="INFO"/>
<status status="PASS" starttime="20230309 16:37:47.259" endtime="20230309 16:37:47.260"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:37:47.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:37:47.260" endtime="20230309 16:37:47.261"/>
</kw>
<status status="PASS" starttime="20230309 16:37:47.183" endtime="20230309 16:37:47.261"/>
</kw>
<msg timestamp="20230309 16:37:47.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:37:47.183" endtime="20230309 16:37:47.262"/>
</kw>
<status status="PASS" starttime="20230309 16:37:47.182" endtime="20230309 16:37:47.262"/>
</kw>
<status status="PASS" starttime="20230309 16:37:47.182" endtime="20230309 16:37:47.262"/>
</kw>
<status status="PASS" starttime="20230309 16:37:47.168" endtime="20230309 16:37:47.262"/>
</kw>
<status status="PASS" starttime="20230309 16:37:47.167" endtime="20230309 16:37:47.263"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:37:47.270" level="INFO">Running command 'ozone sh bucket link 69711-source/bucket1 69711-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:37:53.820" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:37:53.820" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:37:47.265" endtime="20230309 16:37:53.821"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:37:53.822" level="INFO"/>
<status status="PASS" starttime="20230309 16:37:53.821" endtime="20230309 16:37:53.822"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:37:53.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:37:53.822" endtime="20230309 16:37:53.823"/>
</kw>
<status status="PASS" starttime="20230309 16:37:47.264" endtime="20230309 16:37:53.824"/>
</kw>
<msg timestamp="20230309 16:37:53.824" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:37:47.263" endtime="20230309 16:37:53.824"/>
</kw>
<status status="PASS" starttime="20230309 16:37:47.263" endtime="20230309 16:37:53.825"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:37:53.829" level="INFO">Running command 'ozone sh bucket create 69711-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:38:00.508" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:38:00.509" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:37:53.827" endtime="20230309 16:38:00.509"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:38:00.510" level="INFO"/>
<status status="PASS" starttime="20230309 16:38:00.509" endtime="20230309 16:38:00.511"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:38:00.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:38:00.511" endtime="20230309 16:38:00.512"/>
</kw>
<status status="PASS" starttime="20230309 16:37:53.826" endtime="20230309 16:38:00.512"/>
</kw>
<msg timestamp="20230309 16:38:00.512" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:37:53.826" endtime="20230309 16:38:00.513"/>
</kw>
<status status="PASS" starttime="20230309 16:37:53.825" endtime="20230309 16:38:00.514"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:38:00.519" level="INFO">Running command 'ozone sh key put 69711-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:38:09.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:38:09.980" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:38:00.516" endtime="20230309 16:38:09.980"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:38:09.982" level="INFO"/>
<status status="PASS" starttime="20230309 16:38:09.981" endtime="20230309 16:38:09.982"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:38:09.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:38:09.982" endtime="20230309 16:38:09.983"/>
</kw>
<status status="PASS" starttime="20230309 16:38:00.515" endtime="20230309 16:38:09.983"/>
</kw>
<msg timestamp="20230309 16:38:09.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:38:00.515" endtime="20230309 16:38:09.984"/>
</kw>
<status status="PASS" starttime="20230309 16:38:00.514" endtime="20230309 16:38:09.985"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 16:38:09.987" level="INFO">${postfix} = 73679</msg>
<status status="PASS" starttime="20230309 16:38:09.987" endtime="20230309 16:38:09.987"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 16:38:09.988" level="INFO">${tmpfile} = /tmp/tempkey-73679</msg>
<status status="PASS" starttime="20230309 16:38:09.988" endtime="20230309 16:38:09.988"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:38:09.993" level="INFO">Running command 'ozone sh key get 69711-target/link1/key1 /tmp/tempkey-73679 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:38:19.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:38:19.389" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:38:09.990" endtime="20230309 16:38:19.389"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:38:19.391" level="INFO"/>
<status status="PASS" starttime="20230309 16:38:19.390" endtime="20230309 16:38:19.391"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:38:19.392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:38:19.391" endtime="20230309 16:38:19.392"/>
</kw>
<status status="PASS" starttime="20230309 16:38:09.989" endtime="20230309 16:38:19.393"/>
</kw>
<msg timestamp="20230309 16:38:19.393" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:38:09.989" endtime="20230309 16:38:19.394"/>
</kw>
<status status="PASS" starttime="20230309 16:38:09.988" endtime="20230309 16:38:19.394"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20230309 16:38:19.397" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-73679 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:38:19.404" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20230309 16:38:19.394" endtime="20230309 16:38:19.404"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:38:19.412" level="INFO">Running command 'rm -f /tmp/tempkey-73679 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:38:19.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:38:19.417" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:38:19.408" endtime="20230309 16:38:19.417"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:38:19.418" level="INFO"/>
<status status="PASS" starttime="20230309 16:38:19.417" endtime="20230309 16:38:19.419"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:38:19.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:38:19.419" endtime="20230309 16:38:19.420"/>
</kw>
<status status="PASS" starttime="20230309 16:38:19.407" endtime="20230309 16:38:19.420"/>
</kw>
<msg timestamp="20230309 16:38:19.420" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:38:19.406" endtime="20230309 16:38:19.421"/>
</kw>
<status status="PASS" starttime="20230309 16:38:19.405" endtime="20230309 16:38:19.422"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 16:38:19.422" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20230309 16:38:19.422" endtime="20230309 16:38:19.423"/>
</kw>
<msg timestamp="20230309 16:38:19.423" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20230309 16:38:09.986" endtime="20230309 16:38:19.423"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230309 16:38:19.423" endtime="20230309 16:38:19.424"/>
</kw>
<status status="PASS" starttime="20230309 16:38:09.985" endtime="20230309 16:38:19.424"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230309 16:37:47.165" endtime="20230309 16:38:19.424"/>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough" line="95">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:38:19.433" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:38:19.436" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:38:19.437" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230309 16:38:19.430" endtime="20230309 16:38:19.437"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:38:19.438" level="INFO">scm</msg>
<status status="PASS" starttime="20230309 16:38:19.437" endtime="20230309 16:38:19.438"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:38:19.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:38:19.438" endtime="20230309 16:38:19.439"/>
</kw>
<status status="PASS" starttime="20230309 16:38:19.429" endtime="20230309 16:38:19.439"/>
</kw>
<msg timestamp="20230309 16:38:19.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:38:19.429" endtime="20230309 16:38:19.440"/>
</kw>
<msg timestamp="20230309 16:38:19.440" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230309 16:38:19.428" endtime="20230309 16:38:19.440"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 16:38:19.441" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 16:38:19.440" endtime="20230309 16:38:19.441"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:38:19.447" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:38:19.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:38:19.503" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:38:19.444" endtime="20230309 16:38:19.503"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:38:19.505" level="INFO"/>
<status status="PASS" starttime="20230309 16:38:19.504" endtime="20230309 16:38:19.506"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:38:19.507" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:38:19.506" endtime="20230309 16:38:19.507"/>
</kw>
<status status="PASS" starttime="20230309 16:38:19.443" endtime="20230309 16:38:19.507"/>
</kw>
<msg timestamp="20230309 16:38:19.508" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:38:19.443" endtime="20230309 16:38:19.508"/>
</kw>
<status status="PASS" starttime="20230309 16:38:19.442" endtime="20230309 16:38:19.509"/>
</kw>
<status status="PASS" starttime="20230309 16:38:19.441" endtime="20230309 16:38:19.509"/>
</kw>
<status status="PASS" starttime="20230309 16:38:19.428" endtime="20230309 16:38:19.510"/>
</kw>
<status status="PASS" starttime="20230309 16:38:19.427" endtime="20230309 16:38:19.510"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:38:19.517" level="INFO">Running command 'ozone sh key put 69711-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:38:29.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:38:29.655" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:38:19.513" endtime="20230309 16:38:29.655"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:38:29.657" level="INFO"/>
<status status="PASS" starttime="20230309 16:38:29.656" endtime="20230309 16:38:29.657"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:38:29.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:38:29.657" endtime="20230309 16:38:29.658"/>
</kw>
<status status="PASS" starttime="20230309 16:38:19.512" endtime="20230309 16:38:29.659"/>
</kw>
<msg timestamp="20230309 16:38:29.659" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:38:19.512" endtime="20230309 16:38:29.660"/>
</kw>
<status status="PASS" starttime="20230309 16:38:19.511" endtime="20230309 16:38:29.660"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 16:38:29.663" level="INFO">${postfix} = 76052</msg>
<status status="PASS" starttime="20230309 16:38:29.662" endtime="20230309 16:38:29.663"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 16:38:29.664" level="INFO">${tmpfile} = /tmp/tempkey-76052</msg>
<status status="PASS" starttime="20230309 16:38:29.663" endtime="20230309 16:38:29.664"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:38:29.669" level="INFO">Running command 'ozone sh key get 69711-source/bucket1/key2 /tmp/tempkey-76052 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:38:38.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:38:38.969" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:38:29.665" endtime="20230309 16:38:38.969"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:38:38.971" level="INFO"/>
<status status="PASS" starttime="20230309 16:38:38.970" endtime="20230309 16:38:38.971"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:38:38.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:38:38.971" endtime="20230309 16:38:38.972"/>
</kw>
<status status="PASS" starttime="20230309 16:38:29.665" endtime="20230309 16:38:38.972"/>
</kw>
<msg timestamp="20230309 16:38:38.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:38:29.664" endtime="20230309 16:38:38.973"/>
</kw>
<status status="PASS" starttime="20230309 16:38:29.664" endtime="20230309 16:38:38.974"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20230309 16:38:38.977" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-76052 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:38:38.981" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20230309 16:38:38.974" endtime="20230309 16:38:38.981"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:38:38.988" level="INFO">Running command 'rm -f /tmp/tempkey-76052 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:38:38.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:38:38.992" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:38:38.984" endtime="20230309 16:38:38.992"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:38:38.993" level="INFO"/>
<status status="PASS" starttime="20230309 16:38:38.992" endtime="20230309 16:38:38.993"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:38:38.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:38:38.993" endtime="20230309 16:38:38.994"/>
</kw>
<status status="PASS" starttime="20230309 16:38:38.984" endtime="20230309 16:38:38.995"/>
</kw>
<msg timestamp="20230309 16:38:38.995" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:38:38.983" endtime="20230309 16:38:38.995"/>
</kw>
<status status="PASS" starttime="20230309 16:38:38.982" endtime="20230309 16:38:38.996"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 16:38:38.997" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20230309 16:38:38.996" endtime="20230309 16:38:38.997"/>
</kw>
<msg timestamp="20230309 16:38:38.997" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20230309 16:38:29.661" endtime="20230309 16:38:38.997"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230309 16:38:38.998" endtime="20230309 16:38:38.999"/>
</kw>
<status status="PASS" starttime="20230309 16:38:29.660" endtime="20230309 16:38:38.999"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230309 16:38:19.426" endtime="20230309 16:38:38.999"/>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough" line="99">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:38:39.009" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:38:39.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:38:39.014" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230309 16:38:39.005" endtime="20230309 16:38:39.014"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:38:39.015" level="INFO">scm</msg>
<status status="PASS" starttime="20230309 16:38:39.014" endtime="20230309 16:38:39.015"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:38:39.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:38:39.015" endtime="20230309 16:38:39.016"/>
</kw>
<status status="PASS" starttime="20230309 16:38:39.005" endtime="20230309 16:38:39.017"/>
</kw>
<msg timestamp="20230309 16:38:39.017" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:38:39.004" endtime="20230309 16:38:39.017"/>
</kw>
<msg timestamp="20230309 16:38:39.018" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230309 16:38:39.004" endtime="20230309 16:38:39.018"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 16:38:39.019" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 16:38:39.018" endtime="20230309 16:38:39.019"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:38:39.025" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:38:39.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:38:39.070" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:38:39.022" endtime="20230309 16:38:39.070"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:38:39.072" level="INFO"/>
<status status="PASS" starttime="20230309 16:38:39.071" endtime="20230309 16:38:39.072"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:38:39.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:38:39.072" endtime="20230309 16:38:39.073"/>
</kw>
<status status="PASS" starttime="20230309 16:38:39.021" endtime="20230309 16:38:39.073"/>
</kw>
<msg timestamp="20230309 16:38:39.074" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:38:39.021" endtime="20230309 16:38:39.074"/>
</kw>
<status status="PASS" starttime="20230309 16:38:39.020" endtime="20230309 16:38:39.075"/>
</kw>
<status status="PASS" starttime="20230309 16:38:39.019" endtime="20230309 16:38:39.075"/>
</kw>
<status status="PASS" starttime="20230309 16:38:39.003" endtime="20230309 16:38:39.075"/>
</kw>
<status status="PASS" starttime="20230309 16:38:39.002" endtime="20230309 16:38:39.075"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:38:39.082" level="INFO">Running command 'ozone sh key list 69711-target/link1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:38:46.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:38:46.142" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20230309 16:38:39.079" endtime="20230309 16:38:46.142"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:38:46.143" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20230309 16:38:46.142" endtime="20230309 16:38:46.144"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:38:46.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:38:46.144" endtime="20230309 16:38:46.145"/>
</kw>
<status status="PASS" starttime="20230309 16:38:39.078" endtime="20230309 16:38:46.145"/>
</kw>
<msg timestamp="20230309 16:38:46.145" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:38:39.077" endtime="20230309 16:38:46.146"/>
</kw>
<msg timestamp="20230309 16:38:46.146" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" starttime="20230309 16:38:39.075" endtime="20230309 16:38:46.147"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:38:46.152" level="INFO">Running command 'ozone sh key list 69711-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:38:53.321" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:38:53.321" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20230309 16:38:46.149" endtime="20230309 16:38:53.321"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:38:53.322" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20230309 16:38:53.321" endtime="20230309 16:38:53.322"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:38:53.323" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:38:53.323" endtime="20230309 16:38:53.323"/>
</kw>
<status status="PASS" starttime="20230309 16:38:46.148" endtime="20230309 16:38:53.324"/>
</kw>
<msg timestamp="20230309 16:38:53.324" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:38:46.148" endtime="20230309 16:38:53.325"/>
</kw>
<msg timestamp="20230309 16:38:53.325" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20230309 16:38:46.147" endtime="20230309 16:38:53.325"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 16:38:53.325" endtime="20230309 16:38:53.326"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 16:38:53.326" endtime="20230309 16:38:53.327"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 16:38:53.327" endtime="20230309 16:38:53.327"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230309 16:38:39.001" endtime="20230309 16:38:53.327"/>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough" line="106">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:38:53.336" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:38:53.341" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:38:53.341" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230309 16:38:53.333" endtime="20230309 16:38:53.341"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:38:53.343" level="INFO">scm</msg>
<status status="PASS" starttime="20230309 16:38:53.342" endtime="20230309 16:38:53.343"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:38:53.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:38:53.343" endtime="20230309 16:38:53.344"/>
</kw>
<status status="PASS" starttime="20230309 16:38:53.332" endtime="20230309 16:38:53.345"/>
</kw>
<msg timestamp="20230309 16:38:53.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:38:53.332" endtime="20230309 16:38:53.345"/>
</kw>
<msg timestamp="20230309 16:38:53.346" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230309 16:38:53.331" endtime="20230309 16:38:53.346"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 16:38:53.347" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 16:38:53.346" endtime="20230309 16:38:53.347"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:38:53.353" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:38:53.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:38:53.388" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:38:53.350" endtime="20230309 16:38:53.388"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:38:53.390" level="INFO"/>
<status status="PASS" starttime="20230309 16:38:53.389" endtime="20230309 16:38:53.390"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:38:53.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:38:53.391" endtime="20230309 16:38:53.391"/>
</kw>
<status status="PASS" starttime="20230309 16:38:53.350" endtime="20230309 16:38:53.392"/>
</kw>
<msg timestamp="20230309 16:38:53.392" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:38:53.349" endtime="20230309 16:38:53.393"/>
</kw>
<status status="PASS" starttime="20230309 16:38:53.348" endtime="20230309 16:38:53.393"/>
</kw>
<status status="PASS" starttime="20230309 16:38:53.347" endtime="20230309 16:38:53.393"/>
</kw>
<status status="PASS" starttime="20230309 16:38:53.330" endtime="20230309 16:38:53.393"/>
</kw>
<status status="PASS" starttime="20230309 16:38:53.330" endtime="20230309 16:38:53.393"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:38:53.399" level="INFO">Running command 'ozone sh key delete 69711-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:38:59.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:38:59.821" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:38:53.396" endtime="20230309 16:38:59.821"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:38:59.822" level="INFO"/>
<status status="PASS" starttime="20230309 16:38:59.821" endtime="20230309 16:38:59.822"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:38:59.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:38:59.823" endtime="20230309 16:38:59.823"/>
</kw>
<status status="PASS" starttime="20230309 16:38:53.395" endtime="20230309 16:38:59.824"/>
</kw>
<msg timestamp="20230309 16:38:59.824" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:38:53.395" endtime="20230309 16:38:59.824"/>
</kw>
<status status="PASS" starttime="20230309 16:38:53.394" endtime="20230309 16:38:59.825"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:38:59.830" level="INFO">Running command 'ozone sh key list 69711-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:39:07.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:39:07.930" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20230309 16:38:59.827" endtime="20230309 16:39:07.930"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:39:07.932" level="INFO">key1</msg>
<status status="PASS" starttime="20230309 16:39:07.931" endtime="20230309 16:39:07.932"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:39:07.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:39:07.933" endtime="20230309 16:39:07.934"/>
</kw>
<status status="PASS" starttime="20230309 16:38:59.826" endtime="20230309 16:39:07.934"/>
</kw>
<msg timestamp="20230309 16:39:07.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:38:59.826" endtime="20230309 16:39:07.935"/>
</kw>
<msg timestamp="20230309 16:39:07.935" level="INFO">${source_list} = key1</msg>
<status status="PASS" starttime="20230309 16:38:59.825" endtime="20230309 16:39:07.935"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 16:39:07.936" endtime="20230309 16:39:07.936"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230309 16:38:53.329" endtime="20230309 16:39:07.936"/>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links" line="111">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:39:07.945" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:39:07.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:39:07.951" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230309 16:39:07.942" endtime="20230309 16:39:07.951"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:39:07.952" level="INFO">scm</msg>
<status status="PASS" starttime="20230309 16:39:07.951" endtime="20230309 16:39:07.952"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:39:07.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:39:07.952" endtime="20230309 16:39:07.953"/>
</kw>
<status status="PASS" starttime="20230309 16:39:07.941" endtime="20230309 16:39:07.954"/>
</kw>
<msg timestamp="20230309 16:39:07.954" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:39:07.940" endtime="20230309 16:39:07.954"/>
</kw>
<msg timestamp="20230309 16:39:07.955" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230309 16:39:07.940" endtime="20230309 16:39:07.955"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 16:39:07.956" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 16:39:07.955" endtime="20230309 16:39:07.956"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:39:07.962" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:39:08.030" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:39:08.031" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:39:07.960" endtime="20230309 16:39:08.031"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:39:08.032" level="INFO"/>
<status status="PASS" starttime="20230309 16:39:08.031" endtime="20230309 16:39:08.033"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:39:08.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:39:08.033" endtime="20230309 16:39:08.033"/>
</kw>
<status status="PASS" starttime="20230309 16:39:07.959" endtime="20230309 16:39:08.034"/>
</kw>
<msg timestamp="20230309 16:39:08.034" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:39:07.958" endtime="20230309 16:39:08.035"/>
</kw>
<status status="PASS" starttime="20230309 16:39:07.957" endtime="20230309 16:39:08.035"/>
</kw>
<status status="PASS" starttime="20230309 16:39:07.956" endtime="20230309 16:39:08.035"/>
</kw>
<status status="PASS" starttime="20230309 16:39:07.939" endtime="20230309 16:39:08.036"/>
</kw>
<status status="PASS" starttime="20230309 16:39:07.938" endtime="20230309 16:39:08.036"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:39:08.041" level="INFO">Running command 'ozone sh bucket list 69711-target 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:39:15.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:39:15.317" level="INFO">${output} = [ {
  "volumeName" : "69711-target",
  "bucketName" : "dangling-link",
  "sourceVolume" : "69711-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2023-03-09T16:37:40.699Z",
  "modific...</msg>
<status status="PASS" starttime="20230309 16:39:08.038" endtime="20230309 16:39:15.317"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:39:15.319" level="INFO">[ {
  "volumeName" : "69711-target",
  "bucketName" : "dangling-link",
  "sourceVolume" : "69711-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2023-03-09T16:37:40.699Z",
  "modificationTime" : "2023-03-09T16:37:40.699Z",
  "owner" : "testuser"
}, {
  "volumeName" : "69711-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "69711-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2023-03-09T16:37:02.362Z",
  "modificationTime" : "2023-03-09T16:37:34.828Z",
  "owner" : "testuser"
}, {
  "volumeName" : "69711-target",
  "bucketName" : "link1",
  "sourceVolume" : "69711-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-03-09T16:37:53.668Z",
  "modificationTime" : "2023-03-09T16:37:53.668Z",
  "owner" : "testuser"
}, {
  "volumeName" : "69711-target",
  "bucketName" : "readable-link",
  "sourceVolume" : "69711-source",
  "sourceBucket" : "readable-bucket",
  "creationTime" : "2023-03-09T16:36:49.660Z",
  "modificationTime" : "2023-03-09T16:37:28.009Z",
  "owner" : "testuser"
}, {
  "volumeName" : "69711-target",
  "bucketName" : "unreadable-link",
  "sourceVolume" : "69711-source",
  "sourceBucket" : "readable-bucket",
  "creationTime" : "2023-03-09T16:36:56.130Z",
  "modificationTime" : "2023-03-09T16:36:56.130Z",
  "owner" : "testuser"
} ]</msg>
<status status="PASS" starttime="20230309 16:39:15.317" endtime="20230309 16:39:15.319"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:39:15.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:39:15.319" endtime="20230309 16:39:15.320"/>
</kw>
<status status="PASS" starttime="20230309 16:39:08.037" endtime="20230309 16:39:15.320"/>
</kw>
<msg timestamp="20230309 16:39:15.320" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:39:08.037" endtime="20230309 16:39:15.321"/>
</kw>
<msg timestamp="20230309 16:39:15.321" level="INFO">${result} = [ {
  "volumeName" : "69711-target",
  "bucketName" : "dangling-link",
  "sourceVolume" : "69711-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2023-03-09T16:37:40.699Z",
  "modific...</msg>
<status status="PASS" starttime="20230309 16:39:08.036" endtime="20230309 16:39:15.321"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 16:39:15.321" endtime="20230309 16:39:15.322"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 16:39:15.322" endtime="20230309 16:39:15.323"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230309 16:39:07.937" endtime="20230309 16:39:15.323"/>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source" line="116">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:39:15.337" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:39:15.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:39:15.342" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230309 16:39:15.334" endtime="20230309 16:39:15.342"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:39:15.344" level="INFO">scm</msg>
<status status="PASS" starttime="20230309 16:39:15.343" endtime="20230309 16:39:15.344"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:39:15.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:39:15.345" endtime="20230309 16:39:15.346"/>
</kw>
<status status="PASS" starttime="20230309 16:39:15.333" endtime="20230309 16:39:15.346"/>
</kw>
<msg timestamp="20230309 16:39:15.346" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:39:15.332" endtime="20230309 16:39:15.347"/>
</kw>
<msg timestamp="20230309 16:39:15.348" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230309 16:39:15.332" endtime="20230309 16:39:15.348"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 16:39:15.349" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 16:39:15.348" endtime="20230309 16:39:15.349"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:39:15.356" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:39:15.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:39:15.383" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:39:15.352" endtime="20230309 16:39:15.383"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:39:15.385" level="INFO"/>
<status status="PASS" starttime="20230309 16:39:15.384" endtime="20230309 16:39:15.385"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:39:15.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:39:15.385" endtime="20230309 16:39:15.386"/>
</kw>
<status status="PASS" starttime="20230309 16:39:15.351" endtime="20230309 16:39:15.387"/>
</kw>
<msg timestamp="20230309 16:39:15.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:39:15.351" endtime="20230309 16:39:15.388"/>
</kw>
<status status="PASS" starttime="20230309 16:39:15.350" endtime="20230309 16:39:15.388"/>
</kw>
<status status="PASS" starttime="20230309 16:39:15.349" endtime="20230309 16:39:15.389"/>
</kw>
<status status="PASS" starttime="20230309 16:39:15.331" endtime="20230309 16:39:15.389"/>
</kw>
<status status="PASS" starttime="20230309 16:39:15.330" endtime="20230309 16:39:15.389"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:39:15.395" level="INFO">Running command 'ozone sh bucket info 69711-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:39:22.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:39:22.147" level="INFO">${output} = {
  "volumeName" : "69711-target",
  "bucketName" : "link1",
  "sourceVolume" : "69711-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-03-09T16:37:53.668Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20230309 16:39:15.392" endtime="20230309 16:39:22.147"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:39:22.148" level="INFO">{
  "volumeName" : "69711-target",
  "bucketName" : "link1",
  "sourceVolume" : "69711-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-03-09T16:37:53.668Z",
  "modificationTime" : "2023-03-09T16:37:53.668Z",
  "owner" : "testuser"
}</msg>
<status status="PASS" starttime="20230309 16:39:22.147" endtime="20230309 16:39:22.148"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:39:22.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:39:22.149" endtime="20230309 16:39:22.149"/>
</kw>
<status status="PASS" starttime="20230309 16:39:15.391" endtime="20230309 16:39:22.150"/>
</kw>
<msg timestamp="20230309 16:39:22.150" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:39:15.391" endtime="20230309 16:39:22.151"/>
</kw>
<msg timestamp="20230309 16:39:22.151" level="INFO">${result} = {
  "volumeName" : "69711-target",
  "bucketName" : "link1",
  "sourceVolume" : "69711-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-03-09T16:37:53.668Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20230309 16:39:15.389" endtime="20230309 16:39:22.151"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${source}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 16:39:22.152" endtime="20230309 16:39:22.153"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bucket1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 16:39:22.153" endtime="20230309 16:39:22.154"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${target}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 16:39:22.154" endtime="20230309 16:39:22.155"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 16:39:22.155" endtime="20230309 16:39:22.156"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>modificationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 16:39:22.156" endtime="20230309 16:39:22.158"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 16:39:22.158" endtime="20230309 16:39:22.159"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>metadata</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 16:39:22.159" endtime="20230309 16:39:22.160"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230309 16:39:15.328" endtime="20230309 16:39:22.160"/>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs" line="126">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:39:22.168" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:39:22.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:39:22.174" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230309 16:39:22.166" endtime="20230309 16:39:22.174"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:39:22.175" level="INFO">scm</msg>
<status status="PASS" starttime="20230309 16:39:22.174" endtime="20230309 16:39:22.175"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:39:22.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:39:22.176" endtime="20230309 16:39:22.176"/>
</kw>
<status status="PASS" starttime="20230309 16:39:22.165" endtime="20230309 16:39:22.177"/>
</kw>
<msg timestamp="20230309 16:39:22.177" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:39:22.165" endtime="20230309 16:39:22.178"/>
</kw>
<msg timestamp="20230309 16:39:22.178" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230309 16:39:22.164" endtime="20230309 16:39:22.178"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 16:39:22.179" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 16:39:22.178" endtime="20230309 16:39:22.179"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:39:22.186" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:39:22.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:39:22.207" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:39:22.182" endtime="20230309 16:39:22.207"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:39:22.209" level="INFO"/>
<status status="PASS" starttime="20230309 16:39:22.208" endtime="20230309 16:39:22.209"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:39:22.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:39:22.209" endtime="20230309 16:39:22.210"/>
</kw>
<status status="PASS" starttime="20230309 16:39:22.181" endtime="20230309 16:39:22.211"/>
</kw>
<msg timestamp="20230309 16:39:22.211" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:39:22.180" endtime="20230309 16:39:22.212"/>
</kw>
<status status="PASS" starttime="20230309 16:39:22.180" endtime="20230309 16:39:22.212"/>
</kw>
<status status="PASS" starttime="20230309 16:39:22.179" endtime="20230309 16:39:22.212"/>
</kw>
<status status="PASS" starttime="20230309 16:39:22.163" endtime="20230309 16:39:22.212"/>
</kw>
<status status="PASS" starttime="20230309 16:39:22.162" endtime="20230309 16:39:22.212"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:39:22.218" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 69711-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:39:28.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:39:28.829" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230309 16:39:22.215" endtime="20230309 16:39:28.829"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:39:28.830" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230309 16:39:28.829" endtime="20230309 16:39:28.830"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:39:28.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:39:28.831" endtime="20230309 16:39:28.831"/>
</kw>
<status status="PASS" starttime="20230309 16:39:22.214" endtime="20230309 16:39:28.832"/>
</kw>
<msg timestamp="20230309 16:39:28.832" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:39:22.214" endtime="20230309 16:39:28.833"/>
</kw>
<status status="PASS" starttime="20230309 16:39:22.213" endtime="20230309 16:39:28.833"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:39:28.840" level="INFO">Running command 'ozone sh bucket getacl 69711-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:39:35.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:39:35.973" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20230309 16:39:28.837" endtime="20230309 16:39:35.974"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:39:35.975" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20230309 16:39:35.974" endtime="20230309 16:39:35.975"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:39:35.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:39:35.976" endtime="20230309 16:39:35.976"/>
</kw>
<status status="PASS" starttime="20230309 16:39:28.836" endtime="20230309 16:39:35.977"/>
</kw>
<msg timestamp="20230309 16:39:35.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:39:28.836" endtime="20230309 16:39:35.978"/>
</kw>
<msg timestamp="20230309 16:39:35.978" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20230309 16:39:28.835" endtime="20230309 16:39:35.978"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 16:39:35.978" endtime="20230309 16:39:35.979"/>
</kw>
<status status="PASS" starttime="20230309 16:39:28.833" endtime="20230309 16:39:35.979"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:39:35.986" level="INFO">Running command 'ozone sh bucket getacl 69711-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:39:43.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:39:43.031" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:39:35.983" endtime="20230309 16:39:43.031"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:39:43.033" level="INFO"/>
<status status="PASS" starttime="20230309 16:39:43.032" endtime="20230309 16:39:43.033"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:39:43.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:39:43.033" endtime="20230309 16:39:43.034"/>
</kw>
<status status="PASS" starttime="20230309 16:39:35.983" endtime="20230309 16:39:43.035"/>
</kw>
<msg timestamp="20230309 16:39:43.035" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:39:35.982" endtime="20230309 16:39:43.035"/>
</kw>
<msg timestamp="20230309 16:39:43.036" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20230309 16:39:35.981" endtime="20230309 16:39:43.036"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 16:39:43.036" endtime="20230309 16:39:43.037"/>
</kw>
<status status="PASS" starttime="20230309 16:39:35.979" endtime="20230309 16:39:43.037"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:39:43.043" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 69711-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:39:50.011" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:39:50.012" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230309 16:39:43.040" endtime="20230309 16:39:50.012"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:39:50.013" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230309 16:39:50.012" endtime="20230309 16:39:50.014"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:39:50.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:39:50.014" endtime="20230309 16:39:50.015"/>
</kw>
<status status="PASS" starttime="20230309 16:39:43.039" endtime="20230309 16:39:50.015"/>
</kw>
<msg timestamp="20230309 16:39:50.015" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:39:43.038" endtime="20230309 16:39:50.016"/>
</kw>
<status status="PASS" starttime="20230309 16:39:43.037" endtime="20230309 16:39:50.016"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:39:50.025" level="INFO">Running command 'ozone sh bucket getacl 69711-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:39:56.892" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:39:56.892" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:39:50.021" endtime="20230309 16:39:56.893"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:39:56.894" level="INFO"/>
<status status="PASS" starttime="20230309 16:39:56.893" endtime="20230309 16:39:56.895"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:39:56.895" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:39:56.895" endtime="20230309 16:39:56.895"/>
</kw>
<status status="PASS" starttime="20230309 16:39:50.020" endtime="20230309 16:39:56.896"/>
</kw>
<msg timestamp="20230309 16:39:56.896" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:39:50.020" endtime="20230309 16:39:56.897"/>
</kw>
<msg timestamp="20230309 16:39:56.897" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20230309 16:39:50.018" endtime="20230309 16:39:56.897"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 16:39:56.897" endtime="20230309 16:39:56.898"/>
</kw>
<status status="PASS" starttime="20230309 16:39:50.016" endtime="20230309 16:39:56.898"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:39:56.906" level="INFO">Running command 'ozone sh bucket getacl 69711-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:40:04.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:40:04.472" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20230309 16:39:56.903" endtime="20230309 16:40:04.472"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:40:04.474" level="INFO">READ</msg>
<status status="PASS" starttime="20230309 16:40:04.473" endtime="20230309 16:40:04.474"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:40:04.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:40:04.475" endtime="20230309 16:40:04.475"/>
</kw>
<status status="PASS" starttime="20230309 16:39:56.902" endtime="20230309 16:40:04.476"/>
</kw>
<msg timestamp="20230309 16:40:04.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:39:56.902" endtime="20230309 16:40:04.477"/>
</kw>
<msg timestamp="20230309 16:40:04.477" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20230309 16:39:56.901" endtime="20230309 16:40:04.477"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 16:40:04.477" endtime="20230309 16:40:04.478"/>
</kw>
<status status="PASS" starttime="20230309 16:39:56.898" endtime="20230309 16:40:04.478"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230309 16:39:22.161" endtime="20230309 16:40:04.479"/>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace" line="135">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:40:04.488" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:40:04.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:40:04.493" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230309 16:40:04.484" endtime="20230309 16:40:04.493"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:40:04.495" level="INFO">scm</msg>
<status status="PASS" starttime="20230309 16:40:04.494" endtime="20230309 16:40:04.495"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:40:04.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:40:04.495" endtime="20230309 16:40:04.496"/>
</kw>
<status status="PASS" starttime="20230309 16:40:04.483" endtime="20230309 16:40:04.496"/>
</kw>
<msg timestamp="20230309 16:40:04.497" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:40:04.483" endtime="20230309 16:40:04.497"/>
</kw>
<msg timestamp="20230309 16:40:04.498" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230309 16:40:04.482" endtime="20230309 16:40:04.498"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 16:40:04.499" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 16:40:04.498" endtime="20230309 16:40:04.499"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:40:04.507" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:40:04.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:40:04.532" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:40:04.503" endtime="20230309 16:40:04.532"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:40:04.534" level="INFO"/>
<status status="PASS" starttime="20230309 16:40:04.533" endtime="20230309 16:40:04.534"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:40:04.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:40:04.534" endtime="20230309 16:40:04.535"/>
</kw>
<status status="PASS" starttime="20230309 16:40:04.501" endtime="20230309 16:40:04.536"/>
</kw>
<msg timestamp="20230309 16:40:04.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:40:04.501" endtime="20230309 16:40:04.537"/>
</kw>
<status status="PASS" starttime="20230309 16:40:04.500" endtime="20230309 16:40:04.537"/>
</kw>
<status status="PASS" starttime="20230309 16:40:04.499" endtime="20230309 16:40:04.537"/>
</kw>
<status status="PASS" starttime="20230309 16:40:04.481" endtime="20230309 16:40:04.537"/>
</kw>
<status status="PASS" starttime="20230309 16:40:04.481" endtime="20230309 16:40:04.537"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:40:04.543" level="INFO">Running command 'ozone sh bucket link 69711-source/bucket2 69711-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:40:11.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:40:11.894" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:40:04.540" endtime="20230309 16:40:11.894"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:40:11.896" level="INFO"/>
<status status="PASS" starttime="20230309 16:40:11.895" endtime="20230309 16:40:11.896"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:40:11.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:40:11.896" endtime="20230309 16:40:11.897"/>
</kw>
<status status="PASS" starttime="20230309 16:40:04.539" endtime="20230309 16:40:11.898"/>
</kw>
<msg timestamp="20230309 16:40:11.898" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:40:04.539" endtime="20230309 16:40:11.898"/>
</kw>
<status status="PASS" starttime="20230309 16:40:04.538" endtime="20230309 16:40:11.899"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:40:11.904" level="INFO">Running command 'ozone sh bucket create 69711-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:40:18.734" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 16:40:18.734" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20230309 16:40:11.900" endtime="20230309 16:40:18.734"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:40:18.736" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20230309 16:40:18.735" endtime="20230309 16:40:18.736"/>
</kw>
<msg timestamp="20230309 16:40:18.736" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20230309 16:40:11.899" endtime="20230309 16:40:18.736"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 16:40:18.737" endtime="20230309 16:40:18.737"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:40:18.742" level="INFO">Running command 'ozone sh bucket create 69711-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:40:25.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:40:25.138" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:40:18.739" endtime="20230309 16:40:25.138"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:40:25.140" level="INFO"/>
<status status="PASS" starttime="20230309 16:40:25.139" endtime="20230309 16:40:25.140"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:40:25.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:40:25.140" endtime="20230309 16:40:25.141"/>
</kw>
<status status="PASS" starttime="20230309 16:40:18.739" endtime="20230309 16:40:25.142"/>
</kw>
<msg timestamp="20230309 16:40:25.142" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:40:18.738" endtime="20230309 16:40:25.142"/>
</kw>
<status status="PASS" starttime="20230309 16:40:18.737" endtime="20230309 16:40:25.143"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:40:25.147" level="INFO">Running command 'ozone sh bucket link 69711-source/bucket1 69711-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:40:31.699" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 16:40:31.699" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20230309 16:40:25.144" endtime="20230309 16:40:31.700"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:40:31.702" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20230309 16:40:31.700" endtime="20230309 16:40:31.702"/>
</kw>
<msg timestamp="20230309 16:40:31.703" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20230309 16:40:25.143" endtime="20230309 16:40:31.703"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 16:40:31.703" endtime="20230309 16:40:31.704"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230309 16:40:04.479" endtime="20230309 16:40:31.704"/>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access" line="144">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:40:31.713" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:40:31.719" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:40:31.719" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230309 16:40:31.710" endtime="20230309 16:40:31.720"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:40:31.721" level="INFO">scm</msg>
<status status="PASS" starttime="20230309 16:40:31.720" endtime="20230309 16:40:31.721"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:40:31.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:40:31.721" endtime="20230309 16:40:31.722"/>
</kw>
<status status="PASS" starttime="20230309 16:40:31.710" endtime="20230309 16:40:31.723"/>
</kw>
<msg timestamp="20230309 16:40:31.723" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:40:31.709" endtime="20230309 16:40:31.724"/>
</kw>
<msg timestamp="20230309 16:40:31.724" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230309 16:40:31.709" endtime="20230309 16:40:31.724"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 16:40:31.725" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 16:40:31.724" endtime="20230309 16:40:31.725"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:40:31.731" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:40:31.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:40:31.776" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:40:31.728" endtime="20230309 16:40:31.776"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:40:31.779" level="INFO"/>
<status status="PASS" starttime="20230309 16:40:31.777" endtime="20230309 16:40:31.779"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:40:31.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:40:31.779" endtime="20230309 16:40:31.780"/>
</kw>
<status status="PASS" starttime="20230309 16:40:31.727" endtime="20230309 16:40:31.781"/>
</kw>
<msg timestamp="20230309 16:40:31.781" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:40:31.727" endtime="20230309 16:40:31.781"/>
</kw>
<status status="PASS" starttime="20230309 16:40:31.726" endtime="20230309 16:40:31.782"/>
</kw>
<status status="PASS" starttime="20230309 16:40:31.725" endtime="20230309 16:40:31.782"/>
</kw>
<status status="PASS" starttime="20230309 16:40:31.708" endtime="20230309 16:40:31.782"/>
</kw>
<status status="PASS" starttime="20230309 16:40:31.707" endtime="20230309 16:40:31.782"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:40:31.788" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:40:31.793" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:40:31.794" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:40:31.785" endtime="20230309 16:40:31.794"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:40:31.795" level="INFO"/>
<status status="PASS" starttime="20230309 16:40:31.794" endtime="20230309 16:40:31.795"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:40:31.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:40:31.795" endtime="20230309 16:40:31.796"/>
</kw>
<status status="PASS" starttime="20230309 16:40:31.784" endtime="20230309 16:40:31.797"/>
</kw>
<msg timestamp="20230309 16:40:31.797" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:40:31.784" endtime="20230309 16:40:31.797"/>
</kw>
<status status="PASS" starttime="20230309 16:40:31.783" endtime="20230309 16:40:31.798"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:40:31.805" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:40:31.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:40:31.810" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230309 16:40:31.802" endtime="20230309 16:40:31.810"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:40:31.811" level="INFO">scm</msg>
<status status="PASS" starttime="20230309 16:40:31.810" endtime="20230309 16:40:31.812"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:40:31.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:40:31.812" endtime="20230309 16:40:31.813"/>
</kw>
<status status="PASS" starttime="20230309 16:40:31.801" endtime="20230309 16:40:31.813"/>
</kw>
<msg timestamp="20230309 16:40:31.813" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:40:31.800" endtime="20230309 16:40:31.814"/>
</kw>
<msg timestamp="20230309 16:40:31.815" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230309 16:40:31.800" endtime="20230309 16:40:31.815"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 16:40:31.815" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 16:40:31.815" endtime="20230309 16:40:31.816"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:40:31.821" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:40:31.844" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:40:31.844" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:40:31.818" endtime="20230309 16:40:31.844"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:40:31.845" level="INFO"/>
<status status="PASS" starttime="20230309 16:40:31.844" endtime="20230309 16:40:31.845"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:40:31.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:40:31.845" endtime="20230309 16:40:31.846"/>
</kw>
<status status="PASS" starttime="20230309 16:40:31.818" endtime="20230309 16:40:31.846"/>
</kw>
<msg timestamp="20230309 16:40:31.847" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:40:31.817" endtime="20230309 16:40:31.847"/>
</kw>
<status status="PASS" starttime="20230309 16:40:31.816" endtime="20230309 16:40:31.848"/>
</kw>
<status status="PASS" starttime="20230309 16:40:31.816" endtime="20230309 16:40:31.848"/>
</kw>
<status status="PASS" starttime="20230309 16:40:31.798" endtime="20230309 16:40:31.848"/>
</kw>
<status status="PASS" starttime="20230309 16:40:31.798" endtime="20230309 16:40:31.848"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:40:31.853" level="INFO">Running command 'ozone sh key list 69711-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:40:38.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:40:38.996" level="INFO">${output} = [ {
  "volumeName" : "69711-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 988,
  "creationTime" : "2023-03-09T16:36:34.045Z",
  "modificationTime" : ...</msg>
<status status="PASS" starttime="20230309 16:40:31.849" endtime="20230309 16:40:38.996"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:40:38.997" level="INFO">[ {
  "volumeName" : "69711-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 988,
  "creationTime" : "2023-03-09T16:36:34.045Z",
  "modificationTime" : "2023-03-09T16:36:36.651Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { }
} ]</msg>
<status status="PASS" starttime="20230309 16:40:38.996" endtime="20230309 16:40:38.997"/>
</kw>
<msg timestamp="20230309 16:40:38.998" level="INFO">${result} = [ {
  "volumeName" : "69711-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 988,
  "creationTime" : "2023-03-09T16:36:34.045Z",
  "modificationTime" : ...</msg>
<status status="PASS" starttime="20230309 16:40:31.848" endtime="20230309 16:40:38.998"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 16:40:38.998" endtime="20230309 16:40:38.999"/>
</kw>
<status status="PASS" starttime="20230309 16:40:31.783" endtime="20230309 16:40:38.999"/>
</kw>
<status status="PASS" starttime="20230309 16:40:31.782" endtime="20230309 16:40:38.999"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230309 16:40:31.706" endtime="20230309 16:40:39.000"/>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access" line="147">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:40:39.009" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:40:39.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:40:39.015" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230309 16:40:39.007" endtime="20230309 16:40:39.015"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:40:39.016" level="INFO">scm</msg>
<status status="PASS" starttime="20230309 16:40:39.015" endtime="20230309 16:40:39.016"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:40:39.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:40:39.016" endtime="20230309 16:40:39.017"/>
</kw>
<status status="PASS" starttime="20230309 16:40:39.006" endtime="20230309 16:40:39.017"/>
</kw>
<msg timestamp="20230309 16:40:39.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:40:39.005" endtime="20230309 16:40:39.018"/>
</kw>
<msg timestamp="20230309 16:40:39.019" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230309 16:40:39.005" endtime="20230309 16:40:39.019"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 16:40:39.020" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 16:40:39.019" endtime="20230309 16:40:39.020"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:40:39.027" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:40:39.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:40:39.102" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:40:39.025" endtime="20230309 16:40:39.102"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:40:39.105" level="INFO"/>
<status status="PASS" starttime="20230309 16:40:39.103" endtime="20230309 16:40:39.105"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:40:39.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:40:39.105" endtime="20230309 16:40:39.106"/>
</kw>
<status status="PASS" starttime="20230309 16:40:39.024" endtime="20230309 16:40:39.106"/>
</kw>
<msg timestamp="20230309 16:40:39.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:40:39.024" endtime="20230309 16:40:39.107"/>
</kw>
<status status="PASS" starttime="20230309 16:40:39.021" endtime="20230309 16:40:39.107"/>
</kw>
<status status="PASS" starttime="20230309 16:40:39.020" endtime="20230309 16:40:39.107"/>
</kw>
<status status="PASS" starttime="20230309 16:40:39.004" endtime="20230309 16:40:39.108"/>
</kw>
<status status="PASS" starttime="20230309 16:40:39.004" endtime="20230309 16:40:39.108"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:40:39.114" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:40:39.120" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:40:39.120" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:40:39.111" endtime="20230309 16:40:39.120"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:40:39.122" level="INFO"/>
<status status="PASS" starttime="20230309 16:40:39.121" endtime="20230309 16:40:39.122"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:40:39.123" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:40:39.122" endtime="20230309 16:40:39.123"/>
</kw>
<status status="PASS" starttime="20230309 16:40:39.110" endtime="20230309 16:40:39.123"/>
</kw>
<msg timestamp="20230309 16:40:39.124" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:40:39.110" endtime="20230309 16:40:39.124"/>
</kw>
<status status="PASS" starttime="20230309 16:40:39.109" endtime="20230309 16:40:39.125"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:40:39.131" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:40:39.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:40:39.136" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230309 16:40:39.128" endtime="20230309 16:40:39.136"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:40:39.137" level="INFO">scm</msg>
<status status="PASS" starttime="20230309 16:40:39.136" endtime="20230309 16:40:39.137"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:40:39.138" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:40:39.137" endtime="20230309 16:40:39.138"/>
</kw>
<status status="PASS" starttime="20230309 16:40:39.127" endtime="20230309 16:40:39.139"/>
</kw>
<msg timestamp="20230309 16:40:39.139" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:40:39.127" endtime="20230309 16:40:39.140"/>
</kw>
<msg timestamp="20230309 16:40:39.140" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230309 16:40:39.126" endtime="20230309 16:40:39.140"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 16:40:39.141" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 16:40:39.140" endtime="20230309 16:40:39.141"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:40:39.148" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:40:39.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:40:39.171" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:40:39.145" endtime="20230309 16:40:39.172"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:40:39.173" level="INFO"/>
<status status="PASS" starttime="20230309 16:40:39.172" endtime="20230309 16:40:39.173"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:40:39.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:40:39.174" endtime="20230309 16:40:39.175"/>
</kw>
<status status="PASS" starttime="20230309 16:40:39.144" endtime="20230309 16:40:39.176"/>
</kw>
<msg timestamp="20230309 16:40:39.176" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:40:39.143" endtime="20230309 16:40:39.177"/>
</kw>
<status status="PASS" starttime="20230309 16:40:39.142" endtime="20230309 16:40:39.177"/>
</kw>
<status status="PASS" starttime="20230309 16:40:39.141" endtime="20230309 16:40:39.177"/>
</kw>
<status status="PASS" starttime="20230309 16:40:39.125" endtime="20230309 16:40:39.177"/>
</kw>
<status status="PASS" starttime="20230309 16:40:39.125" endtime="20230309 16:40:39.177"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/unreadable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:40:39.182" level="INFO">Running command 'ozone sh key list 69711-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:40:46.218" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 16:40:46.218" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:69711-target Bucket:unreadable-link </msg>
<status status="PASS" starttime="20230309 16:40:39.179" endtime="20230309 16:40:46.218"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:40:46.220" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:69711-target Bucket:unreadable-link </msg>
<status status="PASS" starttime="20230309 16:40:46.219" endtime="20230309 16:40:46.220"/>
</kw>
<msg timestamp="20230309 16:40:46.221" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:69711-target Bucket:unreadable-link </msg>
<status status="PASS" starttime="20230309 16:40:39.178" endtime="20230309 16:40:46.221"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 16:40:46.221" endtime="20230309 16:40:46.222"/>
</kw>
<status status="PASS" starttime="20230309 16:40:39.109" endtime="20230309 16:40:46.222"/>
</kw>
<status status="PASS" starttime="20230309 16:40:39.108" endtime="20230309 16:40:46.222"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230309 16:40:39.002" endtime="20230309 16:40:46.223"/>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket" line="150">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:40:46.231" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:40:46.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:40:46.236" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230309 16:40:46.228" endtime="20230309 16:40:46.236"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:40:46.238" level="INFO">scm</msg>
<status status="PASS" starttime="20230309 16:40:46.237" endtime="20230309 16:40:46.238"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:40:46.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:40:46.238" endtime="20230309 16:40:46.239"/>
</kw>
<status status="PASS" starttime="20230309 16:40:46.228" endtime="20230309 16:40:46.240"/>
</kw>
<msg timestamp="20230309 16:40:46.240" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:40:46.227" endtime="20230309 16:40:46.241"/>
</kw>
<msg timestamp="20230309 16:40:46.241" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230309 16:40:46.227" endtime="20230309 16:40:46.241"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 16:40:46.242" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 16:40:46.242" endtime="20230309 16:40:46.243"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:40:46.248" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:40:46.287" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:40:46.288" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:40:46.245" endtime="20230309 16:40:46.288"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:40:46.289" level="INFO"/>
<status status="PASS" starttime="20230309 16:40:46.288" endtime="20230309 16:40:46.289"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:40:46.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:40:46.289" endtime="20230309 16:40:46.290"/>
</kw>
<status status="PASS" starttime="20230309 16:40:46.245" endtime="20230309 16:40:46.291"/>
</kw>
<msg timestamp="20230309 16:40:46.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:40:46.244" endtime="20230309 16:40:46.292"/>
</kw>
<status status="PASS" starttime="20230309 16:40:46.244" endtime="20230309 16:40:46.292"/>
</kw>
<status status="PASS" starttime="20230309 16:40:46.243" endtime="20230309 16:40:46.292"/>
</kw>
<status status="PASS" starttime="20230309 16:40:46.226" endtime="20230309 16:40:46.292"/>
</kw>
<status status="PASS" starttime="20230309 16:40:46.225" endtime="20230309 16:40:46.293"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:40:46.300" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:40:46.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:40:46.306" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:40:46.296" endtime="20230309 16:40:46.306"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:40:46.307" level="INFO"/>
<status status="PASS" starttime="20230309 16:40:46.306" endtime="20230309 16:40:46.307"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:40:46.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:40:46.307" endtime="20230309 16:40:46.308"/>
</kw>
<status status="PASS" starttime="20230309 16:40:46.295" endtime="20230309 16:40:46.309"/>
</kw>
<msg timestamp="20230309 16:40:46.309" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:40:46.295" endtime="20230309 16:40:46.310"/>
</kw>
<status status="PASS" starttime="20230309 16:40:46.294" endtime="20230309 16:40:46.310"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:40:46.316" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:40:46.321" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:40:46.321" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230309 16:40:46.313" endtime="20230309 16:40:46.321"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:40:46.322" level="INFO">scm</msg>
<status status="PASS" starttime="20230309 16:40:46.322" endtime="20230309 16:40:46.323"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:40:46.323" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:40:46.323" endtime="20230309 16:40:46.324"/>
</kw>
<status status="PASS" starttime="20230309 16:40:46.312" endtime="20230309 16:40:46.324"/>
</kw>
<msg timestamp="20230309 16:40:46.324" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:40:46.312" endtime="20230309 16:40:46.325"/>
</kw>
<msg timestamp="20230309 16:40:46.325" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230309 16:40:46.311" endtime="20230309 16:40:46.325"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 16:40:46.326" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 16:40:46.326" endtime="20230309 16:40:46.326"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:40:46.332" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:40:46.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:40:46.368" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:40:46.329" endtime="20230309 16:40:46.368"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:40:46.370" level="INFO"/>
<status status="PASS" starttime="20230309 16:40:46.369" endtime="20230309 16:40:46.370"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:40:46.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:40:46.371" endtime="20230309 16:40:46.372"/>
</kw>
<status status="PASS" starttime="20230309 16:40:46.328" endtime="20230309 16:40:46.372"/>
</kw>
<msg timestamp="20230309 16:40:46.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:40:46.328" endtime="20230309 16:40:46.373"/>
</kw>
<status status="PASS" starttime="20230309 16:40:46.327" endtime="20230309 16:40:46.374"/>
</kw>
<status status="PASS" starttime="20230309 16:40:46.327" endtime="20230309 16:40:46.374"/>
</kw>
<status status="PASS" starttime="20230309 16:40:46.311" endtime="20230309 16:40:46.374"/>
</kw>
<status status="PASS" starttime="20230309 16:40:46.310" endtime="20230309 16:40:46.374"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:40:46.380" level="INFO">Running command 'ozone sh bucket info 69711-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:40:53.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:40:53.094" level="INFO">${output} = {
  "volumeName" : "69711-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "69711-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2023-03-09T16:37:02.362Z...</msg>
<status status="PASS" starttime="20230309 16:40:46.377" endtime="20230309 16:40:53.094"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:40:53.096" level="INFO">{
  "volumeName" : "69711-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "69711-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2023-03-09T16:37:02.362Z",
  "modificationTime" : "2023-03-09T16:37:34.828Z",
  "owner" : "testuser"
}</msg>
<status status="PASS" starttime="20230309 16:40:53.095" endtime="20230309 16:40:53.096"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:40:53.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:40:53.096" endtime="20230309 16:40:53.097"/>
</kw>
<status status="PASS" starttime="20230309 16:40:46.376" endtime="20230309 16:40:53.097"/>
</kw>
<msg timestamp="20230309 16:40:53.097" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:40:46.375" endtime="20230309 16:40:53.098"/>
</kw>
<msg timestamp="20230309 16:40:53.099" level="INFO">${result} = {
  "volumeName" : "69711-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "69711-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2023-03-09T16:37:02.362Z...</msg>
<status status="PASS" starttime="20230309 16:40:46.374" endtime="20230309 16:40:53.099"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 16:40:53.099" endtime="20230309 16:40:53.099"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 16:40:53.099" endtime="20230309 16:40:53.100"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:40:53.104" level="INFO">Running command 'ozone sh key list 69711-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:40:59.957" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 16:40:59.957" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket Volume:69711-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20230309 16:40:53.101" endtime="20230309 16:40:59.957"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:40:59.959" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket Volume:69711-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20230309 16:40:59.958" endtime="20230309 16:40:59.959"/>
</kw>
<msg timestamp="20230309 16:40:59.960" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket Volume:69711-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20230309 16:40:53.100" endtime="20230309 16:40:59.960"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 16:40:59.960" endtime="20230309 16:40:59.961"/>
</kw>
<status status="PASS" starttime="20230309 16:40:46.293" endtime="20230309 16:40:59.961"/>
</kw>
<status status="PASS" starttime="20230309 16:40:46.293" endtime="20230309 16:40:59.961"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230309 16:40:46.224" endtime="20230309 16:40:59.962"/>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected" line="153">
<kw name="Create link loop" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:40:59.971" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:40:59.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:40:59.975" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230309 16:40:59.967" endtime="20230309 16:40:59.976"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:40:59.977" level="INFO">scm</msg>
<status status="PASS" starttime="20230309 16:40:59.976" endtime="20230309 16:40:59.977"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:40:59.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:40:59.977" endtime="20230309 16:40:59.978"/>
</kw>
<status status="PASS" starttime="20230309 16:40:59.967" endtime="20230309 16:40:59.978"/>
</kw>
<msg timestamp="20230309 16:40:59.979" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:40:59.966" endtime="20230309 16:40:59.980"/>
</kw>
<msg timestamp="20230309 16:40:59.980" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230309 16:40:59.966" endtime="20230309 16:40:59.980"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 16:40:59.981" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 16:40:59.981" endtime="20230309 16:40:59.981"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:40:59.988" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:41:00.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:41:00.022" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:40:59.985" endtime="20230309 16:41:00.022"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:41:00.024" level="INFO"/>
<status status="PASS" starttime="20230309 16:41:00.023" endtime="20230309 16:41:00.024"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:41:00.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:41:00.025" endtime="20230309 16:41:00.025"/>
</kw>
<status status="PASS" starttime="20230309 16:40:59.984" endtime="20230309 16:41:00.026"/>
</kw>
<msg timestamp="20230309 16:41:00.026" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:40:59.984" endtime="20230309 16:41:00.027"/>
</kw>
<status status="PASS" starttime="20230309 16:40:59.982" endtime="20230309 16:41:00.027"/>
</kw>
<status status="PASS" starttime="20230309 16:40:59.981" endtime="20230309 16:41:00.027"/>
</kw>
<status status="PASS" starttime="20230309 16:40:59.965" endtime="20230309 16:41:00.028"/>
</kw>
<status status="PASS" starttime="20230309 16:40:59.965" endtime="20230309 16:41:00.028"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:41:00.033" level="INFO">Running command 'ozone sh bucket link 69711-target/loop1 69711-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:41:06.735" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:41:06.735" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:41:00.030" endtime="20230309 16:41:06.735"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:41:06.737" level="INFO"/>
<status status="PASS" starttime="20230309 16:41:06.736" endtime="20230309 16:41:06.737"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:41:06.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:41:06.737" endtime="20230309 16:41:06.738"/>
</kw>
<status status="PASS" starttime="20230309 16:41:00.029" endtime="20230309 16:41:06.739"/>
</kw>
<msg timestamp="20230309 16:41:06.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:41:00.029" endtime="20230309 16:41:06.740"/>
</kw>
<status status="PASS" starttime="20230309 16:41:00.028" endtime="20230309 16:41:06.740"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:41:06.745" level="INFO">Running command 'ozone sh bucket link 69711-target/loop2 69711-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:41:13.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:41:13.595" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:41:06.742" endtime="20230309 16:41:13.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:41:13.597" level="INFO"/>
<status status="PASS" starttime="20230309 16:41:13.596" endtime="20230309 16:41:13.598"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:41:13.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:41:13.598" endtime="20230309 16:41:13.598"/>
</kw>
<status status="PASS" starttime="20230309 16:41:06.742" endtime="20230309 16:41:13.599"/>
</kw>
<msg timestamp="20230309 16:41:13.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:41:06.741" endtime="20230309 16:41:13.600"/>
</kw>
<status status="PASS" starttime="20230309 16:41:06.740" endtime="20230309 16:41:13.600"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:41:13.605" level="INFO">Running command 'ozone sh bucket link 69711-target/loop3 69711-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:41:19.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:41:19.722" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:41:13.602" endtime="20230309 16:41:19.722"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:41:19.724" level="INFO"/>
<status status="PASS" starttime="20230309 16:41:19.723" endtime="20230309 16:41:19.724"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:41:19.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:41:19.724" endtime="20230309 16:41:19.725"/>
</kw>
<status status="PASS" starttime="20230309 16:41:13.601" endtime="20230309 16:41:19.726"/>
</kw>
<msg timestamp="20230309 16:41:19.726" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:41:13.601" endtime="20230309 16:41:19.727"/>
</kw>
<status status="PASS" starttime="20230309 16:41:13.600" endtime="20230309 16:41:19.727"/>
</kw>
<status status="PASS" starttime="20230309 16:40:59.964" endtime="20230309 16:41:19.727"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:41:19.731" level="INFO">Running command 'ozone sh key list 69711-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:41:26.321" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 16:41:26.321" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links. Bucket name: loop2, Volume name: 69711-target</msg>
<status status="PASS" starttime="20230309 16:41:19.728" endtime="20230309 16:41:26.321"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:41:26.324" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links. Bucket name: loop2, Volume name: 69711-target</msg>
<status status="PASS" starttime="20230309 16:41:26.322" endtime="20230309 16:41:26.324"/>
</kw>
<msg timestamp="20230309 16:41:26.325" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links. Bucket name: loop2, Volume name: 69711-target</msg>
<status status="PASS" starttime="20230309 16:41:19.727" endtime="20230309 16:41:26.325"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 16:41:26.325" endtime="20230309 16:41:26.326"/>
</kw>
<kw name="Delete link loop" type="TEARDOWN">
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:41:26.333" level="INFO">Running command 'ozone sh bucket delete 69711-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:41:33.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:41:33.233" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:41:26.329" endtime="20230309 16:41:33.233"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:41:33.235" level="INFO"/>
<status status="PASS" starttime="20230309 16:41:33.234" endtime="20230309 16:41:33.235"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:41:33.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:41:33.235" endtime="20230309 16:41:33.236"/>
</kw>
<status status="PASS" starttime="20230309 16:41:26.328" endtime="20230309 16:41:33.236"/>
</kw>
<msg timestamp="20230309 16:41:33.236" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:41:26.328" endtime="20230309 16:41:33.236"/>
</kw>
<status status="PASS" starttime="20230309 16:41:26.327" endtime="20230309 16:41:33.237"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:41:33.242" level="INFO">Running command 'ozone sh bucket delete 69711-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:41:40.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:41:40.205" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:41:33.239" endtime="20230309 16:41:40.205"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:41:40.207" level="INFO"/>
<status status="PASS" starttime="20230309 16:41:40.206" endtime="20230309 16:41:40.207"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:41:40.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:41:40.207" endtime="20230309 16:41:40.208"/>
</kw>
<status status="PASS" starttime="20230309 16:41:33.239" endtime="20230309 16:41:40.208"/>
</kw>
<msg timestamp="20230309 16:41:40.208" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:41:33.238" endtime="20230309 16:41:40.209"/>
</kw>
<status status="PASS" starttime="20230309 16:41:33.237" endtime="20230309 16:41:40.209"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:41:40.215" level="INFO">Running command 'ozone sh bucket delete 69711-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:41:46.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:41:46.843" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:41:40.212" endtime="20230309 16:41:46.843"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:41:46.845" level="INFO"/>
<status status="PASS" starttime="20230309 16:41:46.844" endtime="20230309 16:41:46.845"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:41:46.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:41:46.845" endtime="20230309 16:41:46.846"/>
</kw>
<status status="PASS" starttime="20230309 16:41:40.211" endtime="20230309 16:41:46.846"/>
</kw>
<msg timestamp="20230309 16:41:46.847" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:41:40.210" endtime="20230309 16:41:46.847"/>
</kw>
<status status="PASS" starttime="20230309 16:41:40.209" endtime="20230309 16:41:46.847"/>
</kw>
<status status="PASS" starttime="20230309 16:41:26.326" endtime="20230309 16:41:46.848"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230309 16:40:59.963" endtime="20230309 16:41:46.848"/>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed" line="159">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:41:46.860" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:41:46.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:41:46.867" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230309 16:41:46.854" endtime="20230309 16:41:46.867"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:41:46.869" level="INFO">scm</msg>
<status status="PASS" starttime="20230309 16:41:46.868" endtime="20230309 16:41:46.870"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:41:46.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:41:46.870" endtime="20230309 16:41:46.871"/>
</kw>
<status status="PASS" starttime="20230309 16:41:46.853" endtime="20230309 16:41:46.872"/>
</kw>
<msg timestamp="20230309 16:41:46.872" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:41:46.852" endtime="20230309 16:41:46.872"/>
</kw>
<msg timestamp="20230309 16:41:46.873" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230309 16:41:46.852" endtime="20230309 16:41:46.873"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 16:41:46.874" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 16:41:46.873" endtime="20230309 16:41:46.875"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:41:46.882" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:41:46.908" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:41:46.908" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:41:46.879" endtime="20230309 16:41:46.908"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:41:46.910" level="INFO"/>
<status status="PASS" starttime="20230309 16:41:46.909" endtime="20230309 16:41:46.910"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:41:46.911" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:41:46.910" endtime="20230309 16:41:46.911"/>
</kw>
<status status="PASS" starttime="20230309 16:41:46.878" endtime="20230309 16:41:46.912"/>
</kw>
<msg timestamp="20230309 16:41:46.912" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:41:46.877" endtime="20230309 16:41:46.913"/>
</kw>
<status status="PASS" starttime="20230309 16:41:46.876" endtime="20230309 16:41:46.913"/>
</kw>
<status status="PASS" starttime="20230309 16:41:46.875" endtime="20230309 16:41:46.913"/>
</kw>
<status status="PASS" starttime="20230309 16:41:46.851" endtime="20230309 16:41:46.913"/>
</kw>
<status status="PASS" starttime="20230309 16:41:46.850" endtime="20230309 16:41:46.913"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:41:46.919" level="INFO">Running command 'ozone sh bucket link 69711-source/bucket1 69711-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:41:53.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:41:53.543" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:41:46.916" endtime="20230309 16:41:53.543"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:41:53.545" level="INFO"/>
<status status="PASS" starttime="20230309 16:41:53.544" endtime="20230309 16:41:53.545"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:41:53.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:41:53.546" endtime="20230309 16:41:53.547"/>
</kw>
<status status="PASS" starttime="20230309 16:41:46.915" endtime="20230309 16:41:53.547"/>
</kw>
<msg timestamp="20230309 16:41:53.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:41:46.915" endtime="20230309 16:41:53.548"/>
</kw>
<status status="PASS" starttime="20230309 16:41:46.914" endtime="20230309 16:41:53.548"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:41:53.554" level="INFO">Running command 'ozone sh key put 69711-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:42:03.455" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:42:03.455" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:41:53.551" endtime="20230309 16:42:03.455"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:42:03.457" level="INFO"/>
<status status="PASS" starttime="20230309 16:42:03.456" endtime="20230309 16:42:03.457"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:42:03.457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:42:03.457" endtime="20230309 16:42:03.458"/>
</kw>
<status status="PASS" starttime="20230309 16:41:53.549" endtime="20230309 16:42:03.458"/>
</kw>
<msg timestamp="20230309 16:42:03.458" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:41:53.549" endtime="20230309 16:42:03.459"/>
</kw>
<status status="PASS" starttime="20230309 16:41:53.548" endtime="20230309 16:42:03.459"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 16:42:03.461" level="INFO">${postfix} = 15027</msg>
<status status="PASS" starttime="20230309 16:42:03.461" endtime="20230309 16:42:03.461"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 16:42:03.462" level="INFO">${tmpfile} = /tmp/tempkey-15027</msg>
<status status="PASS" starttime="20230309 16:42:03.462" endtime="20230309 16:42:03.462"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:42:03.468" level="INFO">Running command 'ozone sh key get 69711-target/link1/key3 /tmp/tempkey-15027 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:42:12.324" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:42:12.324" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:42:03.464" endtime="20230309 16:42:12.324"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:42:12.326" level="INFO"/>
<status status="PASS" starttime="20230309 16:42:12.325" endtime="20230309 16:42:12.326"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:42:12.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:42:12.326" endtime="20230309 16:42:12.327"/>
</kw>
<status status="PASS" starttime="20230309 16:42:03.464" endtime="20230309 16:42:12.327"/>
</kw>
<msg timestamp="20230309 16:42:12.327" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:42:03.463" endtime="20230309 16:42:12.328"/>
</kw>
<status status="PASS" starttime="20230309 16:42:03.463" endtime="20230309 16:42:12.328"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20230309 16:42:12.332" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-15027 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:42:12.336" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20230309 16:42:12.329" endtime="20230309 16:42:12.336"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:42:12.343" level="INFO">Running command 'rm -f /tmp/tempkey-15027 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:42:12.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:42:12.347" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:42:12.339" endtime="20230309 16:42:12.347"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:42:12.348" level="INFO"/>
<status status="PASS" starttime="20230309 16:42:12.347" endtime="20230309 16:42:12.348"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:42:12.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:42:12.348" endtime="20230309 16:42:12.349"/>
</kw>
<status status="PASS" starttime="20230309 16:42:12.338" endtime="20230309 16:42:12.350"/>
</kw>
<msg timestamp="20230309 16:42:12.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:42:12.338" endtime="20230309 16:42:12.351"/>
</kw>
<status status="PASS" starttime="20230309 16:42:12.337" endtime="20230309 16:42:12.352"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 16:42:12.353" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20230309 16:42:12.353" endtime="20230309 16:42:12.353"/>
</kw>
<msg timestamp="20230309 16:42:12.354" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20230309 16:42:03.460" endtime="20230309 16:42:12.354"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230309 16:42:12.354" endtime="20230309 16:42:12.355"/>
</kw>
<status status="PASS" starttime="20230309 16:42:03.459" endtime="20230309 16:42:12.355"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230309 16:41:46.849" endtime="20230309 16:42:12.355"/>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link" line="164">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:42:12.365" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:42:12.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:42:12.370" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230309 16:42:12.362" endtime="20230309 16:42:12.370"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:42:12.372" level="INFO">scm</msg>
<status status="PASS" starttime="20230309 16:42:12.371" endtime="20230309 16:42:12.372"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:42:12.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:42:12.372" endtime="20230309 16:42:12.373"/>
</kw>
<status status="PASS" starttime="20230309 16:42:12.360" endtime="20230309 16:42:12.373"/>
</kw>
<msg timestamp="20230309 16:42:12.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:42:12.360" endtime="20230309 16:42:12.374"/>
</kw>
<msg timestamp="20230309 16:42:12.375" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230309 16:42:12.359" endtime="20230309 16:42:12.375"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 16:42:12.376" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 16:42:12.375" endtime="20230309 16:42:12.376"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:42:12.382" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:42:12.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:42:12.403" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:42:12.379" endtime="20230309 16:42:12.403"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:42:12.405" level="INFO"/>
<status status="PASS" starttime="20230309 16:42:12.404" endtime="20230309 16:42:12.405"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:42:12.406" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:42:12.405" endtime="20230309 16:42:12.406"/>
</kw>
<status status="PASS" starttime="20230309 16:42:12.378" endtime="20230309 16:42:12.407"/>
</kw>
<msg timestamp="20230309 16:42:12.407" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:42:12.378" endtime="20230309 16:42:12.408"/>
</kw>
<status status="PASS" starttime="20230309 16:42:12.377" endtime="20230309 16:42:12.408"/>
</kw>
<status status="PASS" starttime="20230309 16:42:12.376" endtime="20230309 16:42:12.408"/>
</kw>
<status status="PASS" starttime="20230309 16:42:12.359" endtime="20230309 16:42:12.409"/>
</kw>
<status status="PASS" starttime="20230309 16:42:12.358" endtime="20230309 16:42:12.409"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:42:12.414" level="INFO">Running command 'ozone sh bucket delete 69711-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:42:18.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:42:18.796" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:42:12.411" endtime="20230309 16:42:18.796"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:42:18.798" level="INFO"/>
<status status="PASS" starttime="20230309 16:42:18.796" endtime="20230309 16:42:18.798"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:42:18.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:42:18.798" endtime="20230309 16:42:18.799"/>
</kw>
<status status="PASS" starttime="20230309 16:42:12.410" endtime="20230309 16:42:18.799"/>
</kw>
<msg timestamp="20230309 16:42:18.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:42:12.410" endtime="20230309 16:42:18.800"/>
</kw>
<status status="PASS" starttime="20230309 16:42:12.409" endtime="20230309 16:42:18.800"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:42:18.806" level="INFO">Running command 'ozone sh bucket list 69711-target 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:42:26.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:42:26.077" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "69711-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023-03-0...</msg>
<status status="PASS" starttime="20230309 16:42:18.803" endtime="20230309 16:42:26.077"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:42:26.079" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "69711-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023-03-09T16:40:24.800Z",
  "modificationTime" : "2023-03-09T16:40:24.800Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : false
}, {
  "volumeName" : "69711-target",
  "bucketName" : "dangling-link",
  "sourceVolume" : "69711-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2023-03-09T16:37:40.699Z",
  "modificationTime" : "2023-03-09T16:37:40.699Z",
  "owner" : "testuser"
}, {
  "volumeName" : "69711-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "69711-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2023-03-09T16:37:02.362Z",
  "modificationTime" : "2023-03-09T16:37:34.828Z",
  "owner" : "testuser"
}, {
  "volumeName" : "69711-target",
  "bucketName" : "link2",
  "sourceVolume" : "69711-source",
  "sourceBucket" : "bucket2",
  "creationTime" : "2023-03-09T16:40:11.796Z",
  "modificationTime" : "2023-03-09T16:40:11.796Z",
  "owner" : "testuser"
}, {
  "volumeName" : "69711-target",
  "bucketName" : "link3",
  "sourceVolume" : "69711-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-03-09T16:41:53.307Z",
  "modificationTime" : "2023-03-09T16:41:53.307Z",
  "owner" : "testuser"
}, {
  "volumeName" : "69711-target",
  "bucketName" : "readable-link",
  "sourceVolume" : "69711-source",
  "sourceBucket" : "readable-bucket",
  "creationTime" : "2023-03-09T16:36:49.660Z",
  "modificationTime" : "2023-03-09T16:37:28.009Z",
  "owner" : "testuser"
}, {
  "volumeName" : "69711-target",
  "bucketName" : "unreadable-link",
  "sourceVolume" : "69711-source",
  "sourceBucket" : "readable-bucket",
  "creationTime" : "2023-03-09T16:36:56.130Z",
  "modificationTime" : "2023-03-09T16:36:56.130Z",
  "owner" : "testuser"
} ]</msg>
<status status="PASS" starttime="20230309 16:42:26.077" endtime="20230309 16:42:26.079"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:42:26.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:42:26.079" endtime="20230309 16:42:26.080"/>
</kw>
<status status="PASS" starttime="20230309 16:42:18.802" endtime="20230309 16:42:26.081"/>
</kw>
<msg timestamp="20230309 16:42:26.081" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:42:18.801" endtime="20230309 16:42:26.082"/>
</kw>
<msg timestamp="20230309 16:42:26.082" level="INFO">${bucket_list} = [ {
  "metadata" : { },
  "volumeName" : "69711-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023-03-0...</msg>
<status status="PASS" starttime="20230309 16:42:18.801" endtime="20230309 16:42:26.082"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 16:42:26.082" endtime="20230309 16:42:26.083"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:42:26.089" level="INFO">Running command 'ozone sh key list 69711-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:42:33.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:42:33.661" level="INFO">${output} = key1
key3</msg>
<status status="PASS" starttime="20230309 16:42:26.085" endtime="20230309 16:42:33.661"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:42:33.663" level="INFO">key1
key3</msg>
<status status="PASS" starttime="20230309 16:42:33.662" endtime="20230309 16:42:33.663"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:42:33.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:42:33.663" endtime="20230309 16:42:33.665"/>
</kw>
<status status="PASS" starttime="20230309 16:42:26.084" endtime="20230309 16:42:33.665"/>
</kw>
<msg timestamp="20230309 16:42:33.665" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:42:26.084" endtime="20230309 16:42:33.666"/>
</kw>
<msg timestamp="20230309 16:42:33.666" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" starttime="20230309 16:42:26.083" endtime="20230309 16:42:33.666"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 16:42:33.666" endtime="20230309 16:42:33.667"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230309 16:42:12.357" endtime="20230309 16:42:33.667"/>
</test>
<test id="s1-s1-s3-t16" name="Setting bucket property on link not allowed" line="171">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:42:33.677" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:42:33.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:42:33.682" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230309 16:42:33.675" endtime="20230309 16:42:33.682"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:42:33.683" level="INFO">scm</msg>
<status status="PASS" starttime="20230309 16:42:33.682" endtime="20230309 16:42:33.683"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:42:33.684" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:42:33.683" endtime="20230309 16:42:33.684"/>
</kw>
<status status="PASS" starttime="20230309 16:42:33.673" endtime="20230309 16:42:33.684"/>
</kw>
<msg timestamp="20230309 16:42:33.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:42:33.673" endtime="20230309 16:42:33.685"/>
</kw>
<msg timestamp="20230309 16:42:33.685" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230309 16:42:33.672" endtime="20230309 16:42:33.686"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 16:42:33.686" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 16:42:33.686" endtime="20230309 16:42:33.687"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:42:33.692" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:42:33.717" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:42:33.717" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:42:33.689" endtime="20230309 16:42:33.717"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:42:33.719" level="INFO"/>
<status status="PASS" starttime="20230309 16:42:33.717" endtime="20230309 16:42:33.719"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:42:33.720" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:42:33.719" endtime="20230309 16:42:33.720"/>
</kw>
<status status="PASS" starttime="20230309 16:42:33.689" endtime="20230309 16:42:33.720"/>
</kw>
<msg timestamp="20230309 16:42:33.720" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:42:33.688" endtime="20230309 16:42:33.722"/>
</kw>
<status status="PASS" starttime="20230309 16:42:33.687" endtime="20230309 16:42:33.722"/>
</kw>
<status status="PASS" starttime="20230309 16:42:33.687" endtime="20230309 16:42:33.722"/>
</kw>
<status status="PASS" starttime="20230309 16:42:33.672" endtime="20230309 16:42:33.722"/>
</kw>
<status status="PASS" starttime="20230309 16:42:33.671" endtime="20230309 16:42:33.723"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:42:33.728" level="INFO">Running command 'ozone sh bucket link 69711-source/bucket1 69711-target/link4 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:42:40.887" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:42:40.887" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:42:33.725" endtime="20230309 16:42:40.887"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:42:40.890" level="INFO"/>
<status status="PASS" starttime="20230309 16:42:40.888" endtime="20230309 16:42:40.890"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:42:40.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:42:40.890" endtime="20230309 16:42:40.892"/>
</kw>
<status status="PASS" starttime="20230309 16:42:33.724" endtime="20230309 16:42:40.892"/>
</kw>
<msg timestamp="20230309 16:42:40.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:42:33.724" endtime="20230309 16:42:40.894"/>
</kw>
<status status="PASS" starttime="20230309 16:42:33.723" endtime="20230309 16:42:40.894"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket setquota ${target}/link4 --quota 1GB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:42:40.899" level="INFO">Running command 'ozone sh bucket setquota 69711-target/link4 --quota 1GB 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:42:47.550" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 16:42:47.550" level="INFO">${output} = NOT_SUPPORTED_OPERATION Cannot set property on link</msg>
<status status="PASS" starttime="20230309 16:42:40.896" endtime="20230309 16:42:47.550"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:42:47.553" level="INFO">NOT_SUPPORTED_OPERATION Cannot set property on link</msg>
<status status="PASS" starttime="20230309 16:42:47.551" endtime="20230309 16:42:47.553"/>
</kw>
<msg timestamp="20230309 16:42:47.553" level="INFO">${result} = NOT_SUPPORTED_OPERATION Cannot set property on link</msg>
<status status="PASS" starttime="20230309 16:42:40.895" endtime="20230309 16:42:47.554"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_SUPPORTED_OPERATION</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 16:42:47.554" endtime="20230309 16:42:47.554"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:42:47.560" level="INFO">Running command 'ozone sh bucket info 69711-target/link4 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:42:54.713" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:42:54.715" level="INFO">${output} = {
  "volumeName" : "69711-target",
  "bucketName" : "link4",
  "sourceVolume" : "69711-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-03-09T16:42:40.522Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20230309 16:42:47.557" endtime="20230309 16:42:54.716"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:42:54.717" level="INFO">{
  "volumeName" : "69711-target",
  "bucketName" : "link4",
  "sourceVolume" : "69711-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-03-09T16:42:40.522Z",
  "modificationTime" : "2023-03-09T16:42:40.522Z",
  "owner" : "testuser"
}</msg>
<status status="PASS" starttime="20230309 16:42:54.716" endtime="20230309 16:42:54.718"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:42:54.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:42:54.718" endtime="20230309 16:42:54.719"/>
</kw>
<status status="PASS" starttime="20230309 16:42:47.556" endtime="20230309 16:42:54.720"/>
</kw>
<msg timestamp="20230309 16:42:54.720" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:42:47.556" endtime="20230309 16:42:54.720"/>
</kw>
<msg timestamp="20230309 16:42:54.721" level="INFO">${result} = {
  "volumeName" : "69711-target",
  "bucketName" : "link4",
  "sourceVolume" : "69711-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-03-09T16:42:40.522Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20230309 16:42:47.555" endtime="20230309 16:42:54.721"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>sourceBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 16:42:54.721" endtime="20230309 16:42:54.722"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230309 16:42:33.669" endtime="20230309 16:42:54.722"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" starttime="20230309 16:36:08.447" endtime="20230309 16:42:54.725"/>
</suite>
<suite id="s1-s1-s4" name="Ozone-Shell-Single" source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 16:42:54.763" level="INFO">${random} = 79041</msg>
<status status="PASS" starttime="20230309 16:42:54.763" endtime="20230309 16:42:54.763"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 16:42:54.764" level="INFO">${prefix} = 79041</msg>
<status status="PASS" starttime="20230309 16:42:54.763" endtime="20230309 16:42:54.764"/>
</kw>
<status status="PASS" starttime="20230309 16:42:54.762" endtime="20230309 16:42:54.764"/>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell" line="26">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-without-scheme</arg>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:42:54.771" level="INFO">Running command 'ozone sh volume info /79041-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:43:01.567" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 16:43:01.567" level="INFO">${output} = VOLUME_NOT_FOUND Volume 79041-without-scheme is not found</msg>
<status status="PASS" starttime="20230309 16:42:54.768" endtime="20230309 16:43:01.568"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:43:01.569" level="INFO">VOLUME_NOT_FOUND Volume 79041-without-scheme is not found</msg>
<status status="PASS" starttime="20230309 16:43:01.568" endtime="20230309 16:43:01.569"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:43:01.571" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:43:01.570" endtime="20230309 16:43:01.571"/>
</kw>
<msg timestamp="20230309 16:43:01.572" level="INFO">${result} = VOLUME_NOT_FOUND Volume 79041-without-scheme is not found</msg>
<status status="PASS" starttime="20230309 16:42:54.767" endtime="20230309 16:43:01.572"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 16:43:01.572" endtime="20230309 16:43:01.573"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:43:01.578" level="INFO">Running command 'ozone sh volume create /79041-without-scheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:43:08.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:43:08.122" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:43:01.575" endtime="20230309 16:43:08.122"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:43:08.123" level="INFO"/>
<status status="PASS" starttime="20230309 16:43:08.122" endtime="20230309 16:43:08.123"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:43:08.124" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:43:08.124" endtime="20230309 16:43:08.125"/>
</kw>
<status status="PASS" starttime="20230309 16:43:01.574" endtime="20230309 16:43:08.125"/>
</kw>
<msg timestamp="20230309 16:43:08.125" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:43:01.574" endtime="20230309 16:43:08.126"/>
</kw>
<msg timestamp="20230309 16:43:08.126" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 16:43:01.573" endtime="20230309 16:43:08.126"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230309 16:43:08.127" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230309 16:43:08.126" endtime="20230309 16:43:08.127"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:43:08.132" level="INFO">Running command 'ozone sh volume list / | jq -r '.[] | select(.name=="79041-without-scheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:43:15.547" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:43:15.547" level="INFO">${output} = {
  "metadata": {},
  "name": "79041-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime"...</msg>
<status status="PASS" starttime="20230309 16:43:08.129" endtime="20230309 16:43:15.547"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:43:15.549" level="INFO">{
  "metadata": {},
  "name": "79041-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2023-03-09T16:43:08.002Z",
  "modificationTime": "2023-03-09T16:43:08.002Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20230309 16:43:15.548" endtime="20230309 16:43:15.549"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:43:15.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:43:15.549" endtime="20230309 16:43:15.562"/>
</kw>
<status status="PASS" starttime="20230309 16:43:08.129" endtime="20230309 16:43:15.563"/>
</kw>
<msg timestamp="20230309 16:43:15.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:43:08.128" endtime="20230309 16:43:15.563"/>
</kw>
<msg timestamp="20230309 16:43:15.564" level="INFO">${result} = {
  "metadata": {},
  "name": "79041-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime"...</msg>
<status status="PASS" starttime="20230309 16:43:08.127" endtime="20230309 16:43:15.564"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 16:43:15.564" endtime="20230309 16:43:15.564"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:43:15.570" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="79041-without-scheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:43:22.575" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:43:22.575" level="INFO">${output} = {
  "metadata": {},
  "name": "79041-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime"...</msg>
<status status="PASS" starttime="20230309 16:43:15.567" endtime="20230309 16:43:22.575"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:43:22.577" level="INFO">{
  "metadata": {},
  "name": "79041-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2023-03-09T16:43:08.002Z",
  "modificationTime": "2023-03-09T16:43:08.002Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20230309 16:43:22.576" endtime="20230309 16:43:22.577"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:43:22.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:43:22.577" endtime="20230309 16:43:22.578"/>
</kw>
<status status="PASS" starttime="20230309 16:43:15.566" endtime="20230309 16:43:22.578"/>
</kw>
<msg timestamp="20230309 16:43:22.579" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:43:15.566" endtime="20230309 16:43:22.579"/>
</kw>
<msg timestamp="20230309 16:43:22.580" level="INFO">${result} = {
  "metadata": {},
  "name": "79041-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime"...</msg>
<status status="PASS" starttime="20230309 16:43:15.565" endtime="20230309 16:43:22.580"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 16:43:22.580" endtime="20230309 16:43:22.581"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:43:22.586" level="INFO">Running command 'ozone sh volume setquota /79041-without-scheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:43:30.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:43:30.067" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:43:22.583" endtime="20230309 16:43:30.067"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:43:30.069" level="INFO"/>
<status status="PASS" starttime="20230309 16:43:30.068" endtime="20230309 16:43:30.070"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:43:30.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:43:30.070" endtime="20230309 16:43:30.072"/>
</kw>
<status status="PASS" starttime="20230309 16:43:22.582" endtime="20230309 16:43:30.073"/>
</kw>
<msg timestamp="20230309 16:43:30.073" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:43:22.582" endtime="20230309 16:43:30.073"/>
</kw>
<status status="PASS" starttime="20230309 16:43:22.581" endtime="20230309 16:43:30.074"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:43:30.081" level="INFO">Running command 'ozone sh volume info /79041-without-scheme | jq -r '. | select(.name=="79041-without-scheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:43:37.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:43:37.145" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20230309 16:43:30.077" endtime="20230309 16:43:37.145"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:43:37.147" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20230309 16:43:37.145" endtime="20230309 16:43:37.147"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:43:37.147" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:43:37.147" endtime="20230309 16:43:37.148"/>
</kw>
<status status="PASS" starttime="20230309 16:43:30.076" endtime="20230309 16:43:37.148"/>
</kw>
<msg timestamp="20230309 16:43:37.148" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:43:30.075" endtime="20230309 16:43:37.149"/>
</kw>
<msg timestamp="20230309 16:43:37.149" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20230309 16:43:30.074" endtime="20230309 16:43:37.149"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 16:43:37.149" endtime="20230309 16:43:37.150"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:43:37.155" level="INFO">Running command 'ozone sh bucket create /79041-without-scheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:43:43.041" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:43:43.041" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:43:37.152" endtime="20230309 16:43:43.041"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:43:43.042" level="INFO"/>
<status status="PASS" starttime="20230309 16:43:43.042" endtime="20230309 16:43:43.043"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:43:43.043" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:43:43.043" endtime="20230309 16:43:43.043"/>
</kw>
<status status="PASS" starttime="20230309 16:43:37.151" endtime="20230309 16:43:43.044"/>
</kw>
<msg timestamp="20230309 16:43:43.044" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:43:37.151" endtime="20230309 16:43:43.044"/>
</kw>
<msg timestamp="20230309 16:43:43.045" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 16:43:37.150" endtime="20230309 16:43:43.045"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230309 16:43:43.045" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230309 16:43:43.045" endtime="20230309 16:43:43.046"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:43:43.051" level="INFO">Running command 'ozone sh bucket info /79041-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:43:49.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:43:49.807" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20230309 16:43:43.048" endtime="20230309 16:43:49.807"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:43:49.809" level="INFO">DISK</msg>
<status status="PASS" starttime="20230309 16:43:49.808" endtime="20230309 16:43:49.809"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:43:49.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:43:49.809" endtime="20230309 16:43:49.810"/>
</kw>
<status status="PASS" starttime="20230309 16:43:43.047" endtime="20230309 16:43:49.811"/>
</kw>
<msg timestamp="20230309 16:43:49.811" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:43:43.047" endtime="20230309 16:43:49.811"/>
</kw>
<msg timestamp="20230309 16:43:49.812" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20230309 16:43:43.046" endtime="20230309 16:43:49.812"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 16:43:49.812" endtime="20230309 16:43:49.813"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:43:49.818" level="INFO">Running command 'ozone sh bucket info /79041-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:43:56.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:43:56.210" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20230309 16:43:49.815" endtime="20230309 16:43:56.210"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:43:56.212" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20230309 16:43:56.211" endtime="20230309 16:43:56.212"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:43:56.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:43:56.212" endtime="20230309 16:43:56.213"/>
</kw>
<status status="PASS" starttime="20230309 16:43:49.815" endtime="20230309 16:43:56.213"/>
</kw>
<msg timestamp="20230309 16:43:56.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:43:49.814" endtime="20230309 16:43:56.214"/>
</kw>
<msg timestamp="20230309 16:43:56.214" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20230309 16:43:49.813" endtime="20230309 16:43:56.214"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 16:43:56.214" endtime="20230309 16:43:56.215"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:43:56.221" level="INFO">Running command 'ozone sh bucket info /79041-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:44:02.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:44:02.897" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20230309 16:43:56.218" endtime="20230309 16:44:02.897"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:44:02.898" level="INFO">100</msg>
<status status="PASS" starttime="20230309 16:44:02.897" endtime="20230309 16:44:02.899"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:44:02.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:44:02.899" endtime="20230309 16:44:02.900"/>
</kw>
<status status="PASS" starttime="20230309 16:43:56.217" endtime="20230309 16:44:02.900"/>
</kw>
<msg timestamp="20230309 16:44:02.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:43:56.216" endtime="20230309 16:44:02.901"/>
</kw>
<msg timestamp="20230309 16:44:02.901" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20230309 16:43:56.215" endtime="20230309 16:44:02.901"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 16:44:02.901" endtime="20230309 16:44:02.902"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:44:02.907" level="INFO">Running command 'ozone sh bucket setquota /79041-without-scheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:44:09.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:44:09.034" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:44:02.904" endtime="20230309 16:44:09.034"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:44:09.037" level="INFO"/>
<status status="PASS" starttime="20230309 16:44:09.035" endtime="20230309 16:44:09.037"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:44:09.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:44:09.037" endtime="20230309 16:44:09.038"/>
</kw>
<status status="PASS" starttime="20230309 16:44:02.904" endtime="20230309 16:44:09.038"/>
</kw>
<msg timestamp="20230309 16:44:09.038" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:44:02.903" endtime="20230309 16:44:09.039"/>
</kw>
<status status="PASS" starttime="20230309 16:44:02.902" endtime="20230309 16:44:09.039"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:44:09.046" level="INFO">Running command 'ozone sh bucket info /79041-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:44:15.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:44:15.705" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20230309 16:44:09.042" endtime="20230309 16:44:15.705"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:44:15.707" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20230309 16:44:15.706" endtime="20230309 16:44:15.707"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:44:15.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:44:15.707" endtime="20230309 16:44:15.708"/>
</kw>
<status status="PASS" starttime="20230309 16:44:09.041" endtime="20230309 16:44:15.709"/>
</kw>
<msg timestamp="20230309 16:44:15.709" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:44:09.041" endtime="20230309 16:44:15.710"/>
</kw>
<msg timestamp="20230309 16:44:15.710" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20230309 16:44:09.040" endtime="20230309 16:44:15.710"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 16:44:15.710" endtime="20230309 16:44:15.711"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:44:15.717" level="INFO">Running command 'ozone sh bucket info /79041-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:44:22.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:44:22.410" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20230309 16:44:15.715" endtime="20230309 16:44:22.410"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:44:22.412" level="INFO">1000</msg>
<status status="PASS" starttime="20230309 16:44:22.411" endtime="20230309 16:44:22.412"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:44:22.413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:44:22.412" endtime="20230309 16:44:22.413"/>
</kw>
<status status="PASS" starttime="20230309 16:44:15.714" endtime="20230309 16:44:22.413"/>
</kw>
<msg timestamp="20230309 16:44:22.413" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:44:15.713" endtime="20230309 16:44:22.414"/>
</kw>
<msg timestamp="20230309 16:44:22.414" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20230309 16:44:15.711" endtime="20230309 16:44:22.414"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 16:44:22.414" endtime="20230309 16:44:22.415"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:44:22.420" level="INFO">Running command 'ozone sh bucket list /79041-without-scheme/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:44:29.514" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:44:29.514" level="INFO">${output} = 79041-without-scheme</msg>
<status status="PASS" starttime="20230309 16:44:22.417" endtime="20230309 16:44:29.514"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:44:29.516" level="INFO">79041-without-scheme</msg>
<status status="PASS" starttime="20230309 16:44:29.514" endtime="20230309 16:44:29.516"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:44:29.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:44:29.517" endtime="20230309 16:44:29.517"/>
</kw>
<status status="PASS" starttime="20230309 16:44:22.417" endtime="20230309 16:44:29.518"/>
</kw>
<msg timestamp="20230309 16:44:29.518" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:44:22.416" endtime="20230309 16:44:29.518"/>
</kw>
<msg timestamp="20230309 16:44:29.519" level="INFO">${result} = 79041-without-scheme</msg>
<status status="PASS" starttime="20230309 16:44:22.415" endtime="20230309 16:44:29.519"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 16:44:29.519" endtime="20230309 16:44:29.519"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:44:29.527" level="INFO">Running command 'ozone sh key put /79041-without-scheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:44:39.057" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:44:39.057" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:44:29.522" endtime="20230309 16:44:39.057"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:44:39.060" level="INFO"/>
<status status="PASS" starttime="20230309 16:44:39.058" endtime="20230309 16:44:39.060"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:44:39.061" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:44:39.060" endtime="20230309 16:44:39.061"/>
</kw>
<status status="PASS" starttime="20230309 16:44:29.522" endtime="20230309 16:44:39.062"/>
</kw>
<msg timestamp="20230309 16:44:39.062" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:44:29.521" endtime="20230309 16:44:39.063"/>
</kw>
<status status="PASS" starttime="20230309 16:44:29.521" endtime="20230309 16:44:39.064"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:44:39.069" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:44:39.074" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:44:39.074" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:44:39.066" endtime="20230309 16:44:39.074"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:44:39.076" level="INFO"/>
<status status="PASS" starttime="20230309 16:44:39.075" endtime="20230309 16:44:39.076"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:44:39.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:44:39.076" endtime="20230309 16:44:39.077"/>
</kw>
<status status="PASS" starttime="20230309 16:44:39.065" endtime="20230309 16:44:39.077"/>
</kw>
<msg timestamp="20230309 16:44:39.077" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:44:39.065" endtime="20230309 16:44:39.079"/>
</kw>
<status status="PASS" starttime="20230309 16:44:39.064" endtime="20230309 16:44:39.079"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:44:39.084" level="INFO">Running command 'ozone sh key get /79041-without-scheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:44:47.927" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:44:47.927" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:44:39.081" endtime="20230309 16:44:47.927"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:44:47.928" level="INFO"/>
<status status="PASS" starttime="20230309 16:44:47.927" endtime="20230309 16:44:47.928"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:44:47.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:44:47.928" endtime="20230309 16:44:47.929"/>
</kw>
<status status="PASS" starttime="20230309 16:44:39.080" endtime="20230309 16:44:47.930"/>
</kw>
<msg timestamp="20230309 16:44:47.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:44:39.080" endtime="20230309 16:44:47.930"/>
</kw>
<status status="PASS" starttime="20230309 16:44:39.079" endtime="20230309 16:44:47.931"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:44:47.936" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:44:47.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:44:47.940" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:44:47.932" endtime="20230309 16:44:47.940"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:44:47.942" level="INFO"/>
<status status="PASS" starttime="20230309 16:44:47.941" endtime="20230309 16:44:47.942"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:44:47.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:44:47.942" endtime="20230309 16:44:47.943"/>
</kw>
<status status="PASS" starttime="20230309 16:44:47.932" endtime="20230309 16:44:47.944"/>
</kw>
<msg timestamp="20230309 16:44:47.944" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:44:47.931" endtime="20230309 16:44:47.945"/>
</kw>
<status status="PASS" starttime="20230309 16:44:47.931" endtime="20230309 16:44:47.945"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:44:47.949" level="INFO">Running command 'ozone sh key put -t RATIS /79041-without-scheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:44:56.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:44:56.461" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:44:47.947" endtime="20230309 16:44:56.461"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:44:56.463" level="INFO"/>
<status status="PASS" starttime="20230309 16:44:56.462" endtime="20230309 16:44:56.463"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:44:56.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:44:56.463" endtime="20230309 16:44:56.464"/>
</kw>
<status status="PASS" starttime="20230309 16:44:47.946" endtime="20230309 16:44:56.464"/>
</kw>
<msg timestamp="20230309 16:44:56.464" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:44:47.946" endtime="20230309 16:44:56.465"/>
</kw>
<status status="PASS" starttime="20230309 16:44:47.945" endtime="20230309 16:44:56.465"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:44:56.470" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:44:56.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:44:56.475" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:44:56.467" endtime="20230309 16:44:56.475"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:44:56.476" level="INFO"/>
<status status="PASS" starttime="20230309 16:44:56.476" endtime="20230309 16:44:56.476"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:44:56.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:44:56.477" endtime="20230309 16:44:56.477"/>
</kw>
<status status="PASS" starttime="20230309 16:44:56.466" endtime="20230309 16:44:56.478"/>
</kw>
<msg timestamp="20230309 16:44:56.478" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:44:56.466" endtime="20230309 16:44:56.479"/>
</kw>
<status status="PASS" starttime="20230309 16:44:56.465" endtime="20230309 16:44:56.479"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:44:56.484" level="INFO">Running command 'ozone sh key get /79041-without-scheme/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:45:05.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:45:05.343" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:44:56.481" endtime="20230309 16:45:05.343"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:45:05.344" level="INFO"/>
<status status="PASS" starttime="20230309 16:45:05.343" endtime="20230309 16:45:05.344"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:45:05.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:45:05.345" endtime="20230309 16:45:05.345"/>
</kw>
<status status="PASS" starttime="20230309 16:44:56.481" endtime="20230309 16:45:05.346"/>
</kw>
<msg timestamp="20230309 16:45:05.346" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:44:56.480" endtime="20230309 16:45:05.347"/>
</kw>
<status status="PASS" starttime="20230309 16:44:56.479" endtime="20230309 16:45:05.347"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:45:05.352" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:45:05.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:45:05.355" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:45:05.349" endtime="20230309 16:45:05.355"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:45:05.356" level="INFO"/>
<status status="PASS" starttime="20230309 16:45:05.355" endtime="20230309 16:45:05.356"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:45:05.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:45:05.356" endtime="20230309 16:45:05.357"/>
</kw>
<status status="PASS" starttime="20230309 16:45:05.348" endtime="20230309 16:45:05.357"/>
</kw>
<msg timestamp="20230309 16:45:05.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:45:05.348" endtime="20230309 16:45:05.358"/>
</kw>
<status status="PASS" starttime="20230309 16:45:05.347" endtime="20230309 16:45:05.358"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:45:05.364" level="INFO">Running command 'ozone sh key info /79041-without-scheme/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:45:12.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:45:12.175" level="INFO">${output} = {
  "volumeName": "79041-without-scheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17539,
  "creationTime": "2023-03-09T16:44:53.441Z",
  "modificationTime": "2023-03-09T16:44:56.0...</msg>
<status status="PASS" starttime="20230309 16:45:05.361" endtime="20230309 16:45:12.175"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:45:12.177" level="INFO">{
  "volumeName": "79041-without-scheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17539,
  "creationTime": "2023-03-09T16:44:53.441Z",
  "modificationTime": "2023-03-09T16:44:56.016Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 111677748019200000,
      "length": 17539,
      "offset": 0,
      "keyOffset": 0
    }
  ]
}</msg>
<status status="PASS" starttime="20230309 16:45:12.176" endtime="20230309 16:45:12.177"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:45:12.177" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:45:12.177" endtime="20230309 16:45:12.178"/>
</kw>
<status status="PASS" starttime="20230309 16:45:05.360" endtime="20230309 16:45:12.178"/>
</kw>
<msg timestamp="20230309 16:45:12.178" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:45:05.359" endtime="20230309 16:45:12.179"/>
</kw>
<msg timestamp="20230309 16:45:12.179" level="INFO">${result} = {
  "volumeName": "79041-without-scheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17539,
  "creationTime": "2023-03-09T16:44:53.441Z",
  "modificationTime": "2023-03-09T16:44:56.0...</msg>
<status status="PASS" starttime="20230309 16:45:05.358" endtime="20230309 16:45:12.179"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 16:45:12.179" endtime="20230309 16:45:12.180"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:45:12.185" level="INFO">Running command 'ozone sh key delete /79041-without-scheme/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:45:18.607" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:45:18.607" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:45:12.182" endtime="20230309 16:45:18.608"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:45:18.609" level="INFO"/>
<status status="PASS" starttime="20230309 16:45:18.608" endtime="20230309 16:45:18.609"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:45:18.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:45:18.609" endtime="20230309 16:45:18.610"/>
</kw>
<status status="PASS" starttime="20230309 16:45:12.181" endtime="20230309 16:45:18.611"/>
</kw>
<msg timestamp="20230309 16:45:18.611" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:45:12.181" endtime="20230309 16:45:18.612"/>
</kw>
<status status="PASS" starttime="20230309 16:45:12.180" endtime="20230309 16:45:18.612"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:45:18.618" level="INFO">Running command 'ozone sh key cp /79041-without-scheme/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:45:28.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:45:28.067" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:45:18.615" endtime="20230309 16:45:28.067"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:45:28.068" level="INFO"/>
<status status="PASS" starttime="20230309 16:45:28.067" endtime="20230309 16:45:28.068"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:45:28.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:45:28.069" endtime="20230309 16:45:28.070"/>
</kw>
<status status="PASS" starttime="20230309 16:45:18.614" endtime="20230309 16:45:28.070"/>
</kw>
<msg timestamp="20230309 16:45:28.070" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:45:18.613" endtime="20230309 16:45:28.071"/>
</kw>
<status status="PASS" starttime="20230309 16:45:18.612" endtime="20230309 16:45:28.072"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:45:28.077" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:45:28.082" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:45:28.082" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:45:28.074" endtime="20230309 16:45:28.082"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:45:28.083" level="INFO"/>
<status status="PASS" starttime="20230309 16:45:28.083" endtime="20230309 16:45:28.084"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:45:28.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:45:28.084" endtime="20230309 16:45:28.085"/>
</kw>
<status status="PASS" starttime="20230309 16:45:28.073" endtime="20230309 16:45:28.085"/>
</kw>
<msg timestamp="20230309 16:45:28.085" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:45:28.073" endtime="20230309 16:45:28.086"/>
</kw>
<status status="PASS" starttime="20230309 16:45:28.072" endtime="20230309 16:45:28.086"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:45:28.092" level="INFO">Running command 'ozone sh key get /79041-without-scheme/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:45:37.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:45:37.594" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:45:28.089" endtime="20230309 16:45:37.594"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:45:37.596" level="INFO"/>
<status status="PASS" starttime="20230309 16:45:37.595" endtime="20230309 16:45:37.596"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:45:37.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:45:37.596" endtime="20230309 16:45:37.597"/>
</kw>
<status status="PASS" starttime="20230309 16:45:28.088" endtime="20230309 16:45:37.598"/>
</kw>
<msg timestamp="20230309 16:45:37.598" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:45:28.088" endtime="20230309 16:45:37.599"/>
</kw>
<status status="PASS" starttime="20230309 16:45:28.087" endtime="20230309 16:45:37.599"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:45:37.605" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:45:37.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:45:37.609" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:45:37.602" endtime="20230309 16:45:37.609"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:45:37.611" level="INFO"/>
<status status="PASS" starttime="20230309 16:45:37.609" endtime="20230309 16:45:37.611"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:45:37.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:45:37.611" endtime="20230309 16:45:37.612"/>
</kw>
<status status="PASS" starttime="20230309 16:45:37.601" endtime="20230309 16:45:37.612"/>
</kw>
<msg timestamp="20230309 16:45:37.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:45:37.601" endtime="20230309 16:45:37.613"/>
</kw>
<status status="PASS" starttime="20230309 16:45:37.600" endtime="20230309 16:45:37.613"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:45:37.618" level="INFO">Running command 'ozone sh key delete /79041-without-scheme/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:45:44.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:45:44.330" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:45:37.615" endtime="20230309 16:45:44.330"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:45:44.332" level="INFO"/>
<status status="PASS" starttime="20230309 16:45:44.331" endtime="20230309 16:45:44.332"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:45:44.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:45:44.333" endtime="20230309 16:45:44.334"/>
</kw>
<status status="PASS" starttime="20230309 16:45:37.614" endtime="20230309 16:45:44.334"/>
</kw>
<msg timestamp="20230309 16:45:44.334" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:45:37.614" endtime="20230309 16:45:44.335"/>
</kw>
<status status="PASS" starttime="20230309 16:45:37.613" endtime="20230309 16:45:44.335"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:45:44.339" level="INFO">Running command 'ozone sh key get /79041-without-scheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:45:50.116" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 16:45:50.117" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230309 16:45:44.336" endtime="20230309 16:45:50.117"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:45:50.118" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230309 16:45:50.117" endtime="20230309 16:45:50.118"/>
</kw>
<msg timestamp="20230309 16:45:50.119" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230309 16:45:44.336" endtime="20230309 16:45:50.119"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 16:45:50.119" endtime="20230309 16:45:50.120"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:45:50.125" level="INFO">Running command 'ozone sh key get --force /79041-without-scheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:45:58.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:45:58.706" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:45:50.122" endtime="20230309 16:45:58.706"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:45:58.708" level="INFO"/>
<status status="PASS" starttime="20230309 16:45:58.707" endtime="20230309 16:45:58.708"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:45:58.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:45:58.708" endtime="20230309 16:45:58.709"/>
</kw>
<status status="PASS" starttime="20230309 16:45:50.121" endtime="20230309 16:45:58.709"/>
</kw>
<msg timestamp="20230309 16:45:58.709" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:45:50.121" endtime="20230309 16:45:58.710"/>
</kw>
<msg timestamp="20230309 16:45:58.710" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 16:45:50.120" endtime="20230309 16:45:58.710"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 16:45:58.711" endtime="20230309 16:45:58.711"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:45:58.717" level="INFO">Running command 'ozone sh key info /79041-without-scheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:46:05.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:46:05.558" level="INFO">${output} = {
  "volumeName": "79041-without-scheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17539,
  "creationTime": "2023-03-09T16:44:36.130Z",
  "modificationTime": "2023-03-09T16:44:38.626Z",
...</msg>
<status status="PASS" starttime="20230309 16:45:58.714" endtime="20230309 16:46:05.559"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:46:05.561" level="INFO">{
  "volumeName": "79041-without-scheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17539,
  "creationTime": "2023-03-09T16:44:36.130Z",
  "modificationTime": "2023-03-09T16:44:38.626Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 111677748019200000,
      "length": 17539,
      "offset": 0,
      "keyOffset": 0
    }
  ]
}</msg>
<status status="PASS" starttime="20230309 16:46:05.559" endtime="20230309 16:46:05.561"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:46:05.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:46:05.561" endtime="20230309 16:46:05.562"/>
</kw>
<status status="PASS" starttime="20230309 16:45:58.713" endtime="20230309 16:46:05.563"/>
</kw>
<msg timestamp="20230309 16:46:05.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:45:58.713" endtime="20230309 16:46:05.563"/>
</kw>
<msg timestamp="20230309 16:46:05.564" level="INFO">${result} = {
  "volumeName": "79041-without-scheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17539,
  "creationTime": "2023-03-09T16:44:36.130Z",
  "modificationTime": "2023-03-09T16:44:38.626Z",
...</msg>
<status status="PASS" starttime="20230309 16:45:58.711" endtime="20230309 16:46:05.564"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 16:46:05.564" endtime="20230309 16:46:05.565"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:46:05.570" level="INFO">Running command 'ozone sh key list /79041-without-scheme/bb1 | jq -r '.[] | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:46:12.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:46:12.288" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20230309 16:46:05.567" endtime="20230309 16:46:12.288"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:46:12.291" level="INFO">key1</msg>
<status status="PASS" starttime="20230309 16:46:12.289" endtime="20230309 16:46:12.291"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:46:12.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:46:12.291" endtime="20230309 16:46:12.292"/>
</kw>
<status status="PASS" starttime="20230309 16:46:05.566" endtime="20230309 16:46:12.292"/>
</kw>
<msg timestamp="20230309 16:46:12.292" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:46:05.566" endtime="20230309 16:46:12.293"/>
</kw>
<msg timestamp="20230309 16:46:12.293" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20230309 16:46:05.565" endtime="20230309 16:46:12.293"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 16:46:12.294" endtime="20230309 16:46:12.294"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:46:12.299" level="INFO">Running command 'ozone sh key rename /79041-without-scheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:46:18.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:46:18.378" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:46:12.296" endtime="20230309 16:46:18.378"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:46:18.380" level="INFO"/>
<status status="PASS" starttime="20230309 16:46:18.379" endtime="20230309 16:46:18.380"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:46:18.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:46:18.381" endtime="20230309 16:46:18.381"/>
</kw>
<status status="PASS" starttime="20230309 16:46:12.296" endtime="20230309 16:46:18.382"/>
</kw>
<msg timestamp="20230309 16:46:18.382" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:46:12.295" endtime="20230309 16:46:18.383"/>
</kw>
<status status="PASS" starttime="20230309 16:46:12.294" endtime="20230309 16:46:18.383"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:46:18.388" level="INFO">Running command 'ozone sh key list /79041-without-scheme/bb1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:46:24.700" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:46:24.700" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20230309 16:46:18.385" endtime="20230309 16:46:24.700"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:46:24.702" level="INFO">key2</msg>
<status status="PASS" starttime="20230309 16:46:24.701" endtime="20230309 16:46:24.702"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:46:24.703" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:46:24.702" endtime="20230309 16:46:24.703"/>
</kw>
<status status="PASS" starttime="20230309 16:46:18.384" endtime="20230309 16:46:24.704"/>
</kw>
<msg timestamp="20230309 16:46:24.704" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:46:18.384" endtime="20230309 16:46:24.705"/>
</kw>
<msg timestamp="20230309 16:46:24.705" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20230309 16:46:18.383" endtime="20230309 16:46:24.705"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 16:46:24.705" endtime="20230309 16:46:24.706"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:46:24.712" level="INFO">Running command 'ozone sh key delete /79041-without-scheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:46:30.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:46:30.774" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:46:24.709" endtime="20230309 16:46:30.774"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:46:30.776" level="INFO"/>
<status status="PASS" starttime="20230309 16:46:30.774" endtime="20230309 16:46:30.776"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:46:30.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:46:30.776" endtime="20230309 16:46:30.777"/>
</kw>
<status status="PASS" starttime="20230309 16:46:24.708" endtime="20230309 16:46:30.777"/>
</kw>
<msg timestamp="20230309 16:46:30.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:46:24.707" endtime="20230309 16:46:30.778"/>
</kw>
<status status="PASS" starttime="20230309 16:46:24.706" endtime="20230309 16:46:30.778"/>
</kw>
<status status="PASS" starttime="20230309 16:44:29.520" endtime="20230309 16:46:30.778"/>
</kw>
<status status="PASS" starttime="20230309 16:44:29.520" endtime="20230309 16:46:30.778"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:46:30.784" level="INFO">Running command 'ozone sh volume clrquota --space-quota /79041-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:46:36.588" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:46:36.589" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:46:30.781" endtime="20230309 16:46:36.589"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:46:36.591" level="INFO"/>
<status status="PASS" starttime="20230309 16:46:36.590" endtime="20230309 16:46:36.591"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:46:36.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:46:36.591" endtime="20230309 16:46:36.592"/>
</kw>
<status status="PASS" starttime="20230309 16:46:30.780" endtime="20230309 16:46:36.593"/>
</kw>
<msg timestamp="20230309 16:46:36.593" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:46:30.780" endtime="20230309 16:46:36.594"/>
</kw>
<status status="PASS" starttime="20230309 16:46:30.779" endtime="20230309 16:46:36.594"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:46:36.601" level="INFO">Running command 'ozone sh volume info /79041-without-scheme | jq -r '. | select(.name=="79041-without-scheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:46:42.485" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:46:42.485" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230309 16:46:36.597" endtime="20230309 16:46:42.485"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:46:42.487" level="INFO">-1</msg>
<status status="PASS" starttime="20230309 16:46:42.486" endtime="20230309 16:46:42.487"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:46:42.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:46:42.487" endtime="20230309 16:46:42.488"/>
</kw>
<status status="PASS" starttime="20230309 16:46:36.596" endtime="20230309 16:46:42.488"/>
</kw>
<msg timestamp="20230309 16:46:42.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:46:36.596" endtime="20230309 16:46:42.489"/>
</kw>
<msg timestamp="20230309 16:46:42.489" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230309 16:46:36.594" endtime="20230309 16:46:42.489"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 16:46:42.490" endtime="20230309 16:46:42.490"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:46:42.495" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota /79041-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:46:48.107" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:46:48.108" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:46:42.492" endtime="20230309 16:46:48.108"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:46:48.109" level="INFO"/>
<status status="PASS" starttime="20230309 16:46:48.108" endtime="20230309 16:46:48.110"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:46:48.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:46:48.110" endtime="20230309 16:46:48.111"/>
</kw>
<status status="PASS" starttime="20230309 16:46:42.491" endtime="20230309 16:46:48.111"/>
</kw>
<msg timestamp="20230309 16:46:48.111" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:46:42.491" endtime="20230309 16:46:48.112"/>
</kw>
<status status="PASS" starttime="20230309 16:46:42.490" endtime="20230309 16:46:48.112"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:46:48.121" level="INFO">Running command 'ozone sh volume info /79041-without-scheme | jq -r '. | select(.name=="79041-without-scheme") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:46:54.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:46:54.027" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230309 16:46:48.115" endtime="20230309 16:46:54.027"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:46:54.028" level="INFO">-1</msg>
<status status="PASS" starttime="20230309 16:46:54.027" endtime="20230309 16:46:54.028"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:46:54.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:46:54.028" endtime="20230309 16:46:54.029"/>
</kw>
<status status="PASS" starttime="20230309 16:46:48.114" endtime="20230309 16:46:54.030"/>
</kw>
<msg timestamp="20230309 16:46:54.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:46:48.114" endtime="20230309 16:46:54.030"/>
</kw>
<msg timestamp="20230309 16:46:54.031" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230309 16:46:48.113" endtime="20230309 16:46:54.031"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 16:46:54.031" endtime="20230309 16:46:54.032"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:46:54.037" level="INFO">Running command 'ozone sh bucket clrquota --space-quota /79041-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:47:00.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:47:00.360" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:46:54.034" endtime="20230309 16:47:00.360"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:47:00.362" level="INFO"/>
<status status="PASS" starttime="20230309 16:47:00.361" endtime="20230309 16:47:00.363"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:47:00.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:47:00.363" endtime="20230309 16:47:00.364"/>
</kw>
<status status="PASS" starttime="20230309 16:46:54.034" endtime="20230309 16:47:00.364"/>
</kw>
<msg timestamp="20230309 16:47:00.364" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:46:54.033" endtime="20230309 16:47:00.365"/>
</kw>
<status status="PASS" starttime="20230309 16:46:54.032" endtime="20230309 16:47:00.365"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:47:00.371" level="INFO">Running command 'ozone sh bucket info /79041-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:47:07.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:47:07.384" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230309 16:47:00.368" endtime="20230309 16:47:07.384"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:47:07.386" level="INFO">-1</msg>
<status status="PASS" starttime="20230309 16:47:07.385" endtime="20230309 16:47:07.386"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:47:07.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:47:07.386" endtime="20230309 16:47:07.387"/>
</kw>
<status status="PASS" starttime="20230309 16:47:00.367" endtime="20230309 16:47:07.388"/>
</kw>
<msg timestamp="20230309 16:47:07.388" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:47:00.367" endtime="20230309 16:47:07.388"/>
</kw>
<msg timestamp="20230309 16:47:07.389" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230309 16:47:00.365" endtime="20230309 16:47:07.389"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 16:47:07.389" endtime="20230309 16:47:07.390"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:47:07.395" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota /79041-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:47:14.074" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:47:14.074" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:47:07.392" endtime="20230309 16:47:14.074"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:47:14.076" level="INFO"/>
<status status="PASS" starttime="20230309 16:47:14.074" endtime="20230309 16:47:14.076"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:47:14.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:47:14.076" endtime="20230309 16:47:14.077"/>
</kw>
<status status="PASS" starttime="20230309 16:47:07.391" endtime="20230309 16:47:14.077"/>
</kw>
<msg timestamp="20230309 16:47:14.077" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:47:07.391" endtime="20230309 16:47:14.078"/>
</kw>
<status status="PASS" starttime="20230309 16:47:07.390" endtime="20230309 16:47:14.078"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:47:14.084" level="INFO">Running command 'ozone sh bucket info /79041-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:47:21.041" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:47:21.042" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230309 16:47:14.081" endtime="20230309 16:47:21.042"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:47:21.043" level="INFO">-1</msg>
<status status="PASS" starttime="20230309 16:47:21.042" endtime="20230309 16:47:21.043"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:47:21.044" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:47:21.043" endtime="20230309 16:47:21.044"/>
</kw>
<status status="PASS" starttime="20230309 16:47:14.080" endtime="20230309 16:47:21.045"/>
</kw>
<msg timestamp="20230309 16:47:21.045" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:47:14.080" endtime="20230309 16:47:21.045"/>
</kw>
<msg timestamp="20230309 16:47:21.046" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230309 16:47:14.079" endtime="20230309 16:47:21.046"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 16:47:21.046" endtime="20230309 16:47:21.046"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:47:21.052" level="INFO">Running command 'ozone sh bucket delete /79041-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:47:27.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:47:27.512" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:47:21.049" endtime="20230309 16:47:27.512"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:47:27.513" level="INFO"/>
<status status="PASS" starttime="20230309 16:47:27.512" endtime="20230309 16:47:27.513"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:47:27.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:47:27.513" endtime="20230309 16:47:27.514"/>
</kw>
<status status="PASS" starttime="20230309 16:47:21.048" endtime="20230309 16:47:27.515"/>
</kw>
<msg timestamp="20230309 16:47:27.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:47:21.048" endtime="20230309 16:47:27.516"/>
</kw>
<status status="PASS" starttime="20230309 16:47:21.047" endtime="20230309 16:47:27.516"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:47:27.521" level="INFO">Running command 'ozone sh volume delete /79041-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:47:33.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:47:33.951" level="INFO">${output} = Volume 79041-without-scheme is deleted</msg>
<status status="PASS" starttime="20230309 16:47:27.518" endtime="20230309 16:47:33.951"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:47:33.953" level="INFO">Volume 79041-without-scheme is deleted</msg>
<status status="PASS" starttime="20230309 16:47:33.952" endtime="20230309 16:47:33.953"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:47:33.954" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:47:33.953" endtime="20230309 16:47:33.954"/>
</kw>
<status status="PASS" starttime="20230309 16:47:27.517" endtime="20230309 16:47:33.954"/>
</kw>
<msg timestamp="20230309 16:47:33.955" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:47:27.517" endtime="20230309 16:47:33.956"/>
</kw>
<status status="PASS" starttime="20230309 16:47:27.516" endtime="20230309 16:47:33.956"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:47:33.961" level="INFO">Running command 'ozone sh volume create /79041-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:47:40.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:47:40.068" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:47:33.958" endtime="20230309 16:47:40.068"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:47:40.070" level="INFO"/>
<status status="PASS" starttime="20230309 16:47:40.069" endtime="20230309 16:47:40.070"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:47:40.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:47:40.070" endtime="20230309 16:47:40.071"/>
</kw>
<status status="PASS" starttime="20230309 16:47:33.958" endtime="20230309 16:47:40.071"/>
</kw>
<msg timestamp="20230309 16:47:40.072" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:47:33.957" endtime="20230309 16:47:40.073"/>
</kw>
<status status="PASS" starttime="20230309 16:47:33.956" endtime="20230309 16:47:40.073"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:47:40.079" level="INFO">Running command 'ozone sh volume info /79041-without-scheme | jq -r '. | select(.name=="79041-without-scheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:47:46.589" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:47:46.590" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230309 16:47:40.076" endtime="20230309 16:47:46.590"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:47:46.591" level="INFO">-1</msg>
<status status="PASS" starttime="20230309 16:47:46.590" endtime="20230309 16:47:46.591"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:47:46.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:47:46.592" endtime="20230309 16:47:46.593"/>
</kw>
<status status="PASS" starttime="20230309 16:47:40.075" endtime="20230309 16:47:46.593"/>
</kw>
<msg timestamp="20230309 16:47:46.593" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:47:40.075" endtime="20230309 16:47:46.594"/>
</kw>
<msg timestamp="20230309 16:47:46.594" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230309 16:47:40.073" endtime="20230309 16:47:46.594"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 16:47:46.594" endtime="20230309 16:47:46.595"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:47:46.602" level="INFO">Running command 'ozone sh volume info /79041-without-scheme | jq -r '. | select(.name=="79041-without-scheme") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:47:53.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:47:53.173" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230309 16:47:46.599" endtime="20230309 16:47:53.173"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:47:53.175" level="INFO">-1</msg>
<status status="PASS" starttime="20230309 16:47:53.174" endtime="20230309 16:47:53.175"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:47:53.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:47:53.175" endtime="20230309 16:47:53.176"/>
</kw>
<status status="PASS" starttime="20230309 16:47:46.598" endtime="20230309 16:47:53.176"/>
</kw>
<msg timestamp="20230309 16:47:53.176" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:47:46.597" endtime="20230309 16:47:53.177"/>
</kw>
<msg timestamp="20230309 16:47:53.178" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230309 16:47:46.595" endtime="20230309 16:47:53.178"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 16:47:53.178" endtime="20230309 16:47:53.178"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:47:53.183" level="INFO">Running command 'ozone sh bucket create /79041-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:47:59.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:47:59.051" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:47:53.181" endtime="20230309 16:47:59.051"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:47:59.053" level="INFO"/>
<status status="PASS" starttime="20230309 16:47:59.052" endtime="20230309 16:47:59.053"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:47:59.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:47:59.053" endtime="20230309 16:47:59.054"/>
</kw>
<status status="PASS" starttime="20230309 16:47:53.180" endtime="20230309 16:47:59.054"/>
</kw>
<msg timestamp="20230309 16:47:59.054" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:47:53.179" endtime="20230309 16:47:59.055"/>
</kw>
<status status="PASS" starttime="20230309 16:47:53.179" endtime="20230309 16:47:59.055"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:47:59.064" level="INFO">Running command 'ozone sh bucket info /79041-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:48:05.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:48:05.130" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230309 16:47:59.059" endtime="20230309 16:48:05.131"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:48:05.132" level="INFO">-1</msg>
<status status="PASS" starttime="20230309 16:48:05.131" endtime="20230309 16:48:05.132"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:48:05.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:48:05.132" endtime="20230309 16:48:05.133"/>
</kw>
<status status="PASS" starttime="20230309 16:47:59.057" endtime="20230309 16:48:05.133"/>
</kw>
<msg timestamp="20230309 16:48:05.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:47:59.057" endtime="20230309 16:48:05.134"/>
</kw>
<msg timestamp="20230309 16:48:05.135" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230309 16:47:59.055" endtime="20230309 16:48:05.135"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 16:48:05.135" endtime="20230309 16:48:05.136"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:48:05.142" level="INFO">Running command 'ozone sh bucket info /79041-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:48:11.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:48:11.295" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230309 16:48:05.138" endtime="20230309 16:48:11.295"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:48:11.297" level="INFO">-1</msg>
<status status="PASS" starttime="20230309 16:48:11.296" endtime="20230309 16:48:11.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:48:11.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:48:11.297" endtime="20230309 16:48:11.298"/>
</kw>
<status status="PASS" starttime="20230309 16:48:05.137" endtime="20230309 16:48:11.298"/>
</kw>
<msg timestamp="20230309 16:48:11.298" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:48:05.137" endtime="20230309 16:48:11.299"/>
</kw>
<msg timestamp="20230309 16:48:11.300" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230309 16:48:05.136" endtime="20230309 16:48:11.300"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 16:48:11.300" endtime="20230309 16:48:11.301"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:48:11.309" level="INFO">Running command 'ozone sh bucket delete /79041-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:48:17.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:48:17.424" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:48:11.304" endtime="20230309 16:48:17.424"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:48:17.426" level="INFO"/>
<status status="PASS" starttime="20230309 16:48:17.425" endtime="20230309 16:48:17.426"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:48:17.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:48:17.426" endtime="20230309 16:48:17.427"/>
</kw>
<status status="PASS" starttime="20230309 16:48:11.303" endtime="20230309 16:48:17.428"/>
</kw>
<msg timestamp="20230309 16:48:17.428" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:48:11.302" endtime="20230309 16:48:17.428"/>
</kw>
<status status="PASS" starttime="20230309 16:48:11.301" endtime="20230309 16:48:17.429"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:48:17.436" level="INFO">Running command 'ozone sh volume delete /79041-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:48:23.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:48:23.809" level="INFO">${output} = Volume 79041-without-scheme is deleted</msg>
<status status="PASS" starttime="20230309 16:48:17.431" endtime="20230309 16:48:23.809"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:48:23.811" level="INFO">Volume 79041-without-scheme is deleted</msg>
<status status="PASS" starttime="20230309 16:48:23.810" endtime="20230309 16:48:23.811"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:48:23.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:48:23.811" endtime="20230309 16:48:23.812"/>
</kw>
<status status="PASS" starttime="20230309 16:48:17.431" endtime="20230309 16:48:23.813"/>
</kw>
<msg timestamp="20230309 16:48:23.813" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:48:17.430" endtime="20230309 16:48:23.814"/>
</kw>
<status status="PASS" starttime="20230309 16:48:17.429" endtime="20230309 16:48:23.814"/>
</kw>
<status status="PASS" starttime="20230309 16:42:54.765" endtime="20230309 16:48:23.814"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230309 16:42:54.764" endtime="20230309 16:48:23.815"/>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20230309 16:42:54.729" endtime="20230309 16:48:23.816"/>
</suite>
<suite id="s1-s1-s5" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 16:48:23.831" level="INFO">${random} = 97126</msg>
<status status="PASS" starttime="20230309 16:48:23.830" endtime="20230309 16:48:23.831"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 16:48:23.832" level="INFO">${prefix} = 97126</msg>
<status status="PASS" starttime="20230309 16:48:23.831" endtime="20230309 16:48:23.833"/>
</kw>
<status status="PASS" starttime="20230309 16:48:23.827" endtime="20230309 16:48:23.833"/>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port" line="26">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:48:23.842" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:48:23.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:48:23.846" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230309 16:48:23.838" endtime="20230309 16:48:23.846"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:48:23.848" level="INFO">scm</msg>
<status status="PASS" starttime="20230309 16:48:23.847" endtime="20230309 16:48:23.848"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:48:23.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:48:23.848" endtime="20230309 16:48:23.849"/>
</kw>
<status status="PASS" starttime="20230309 16:48:23.838" endtime="20230309 16:48:23.849"/>
</kw>
<msg timestamp="20230309 16:48:23.849" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:48:23.837" endtime="20230309 16:48:23.850"/>
</kw>
<msg timestamp="20230309 16:48:23.850" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230309 16:48:23.837" endtime="20230309 16:48:23.850"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 16:48:23.853" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 16:48:23.850" endtime="20230309 16:48:23.853"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:48:23.859" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:48:23.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:48:23.940" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:48:23.856" endtime="20230309 16:48:23.940"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:48:23.942" level="INFO"/>
<status status="PASS" starttime="20230309 16:48:23.941" endtime="20230309 16:48:23.942"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:48:23.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:48:23.942" endtime="20230309 16:48:23.943"/>
</kw>
<status status="PASS" starttime="20230309 16:48:23.855" endtime="20230309 16:48:23.944"/>
</kw>
<msg timestamp="20230309 16:48:23.944" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:48:23.855" endtime="20230309 16:48:23.945"/>
</kw>
<status status="PASS" starttime="20230309 16:48:23.854" endtime="20230309 16:48:23.945"/>
</kw>
<status status="PASS" starttime="20230309 16:48:23.853" endtime="20230309 16:48:23.945"/>
</kw>
<status status="PASS" starttime="20230309 16:48:23.836" endtime="20230309 16:48:23.947"/>
</kw>
<status status="PASS" starttime="20230309 16:48:23.835" endtime="20230309 16:48:23.947"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-with-host</arg>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:48:23.964" level="INFO">Running command 'ozone sh volume info o3://om:9862/97126-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:48:30.196" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 16:48:30.197" level="INFO">${output} = VOLUME_NOT_FOUND Volume 97126-with-host is not found</msg>
<status status="PASS" starttime="20230309 16:48:23.957" endtime="20230309 16:48:30.197"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:48:30.198" level="INFO">VOLUME_NOT_FOUND Volume 97126-with-host is not found</msg>
<status status="PASS" starttime="20230309 16:48:30.197" endtime="20230309 16:48:30.198"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:48:30.199" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:48:30.199" endtime="20230309 16:48:30.200"/>
</kw>
<msg timestamp="20230309 16:48:30.200" level="INFO">${result} = VOLUME_NOT_FOUND Volume 97126-with-host is not found</msg>
<status status="PASS" starttime="20230309 16:48:23.955" endtime="20230309 16:48:30.200"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 16:48:30.201" endtime="20230309 16:48:30.201"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:48:30.206" level="INFO">Running command 'ozone sh volume create o3://om:9862/97126-with-host --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:48:36.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:48:36.498" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:48:30.204" endtime="20230309 16:48:36.498"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:48:36.500" level="INFO"/>
<status status="PASS" starttime="20230309 16:48:36.499" endtime="20230309 16:48:36.500"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:48:36.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:48:36.500" endtime="20230309 16:48:36.501"/>
</kw>
<status status="PASS" starttime="20230309 16:48:30.203" endtime="20230309 16:48:36.501"/>
</kw>
<msg timestamp="20230309 16:48:36.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:48:30.203" endtime="20230309 16:48:36.502"/>
</kw>
<msg timestamp="20230309 16:48:36.503" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 16:48:30.201" endtime="20230309 16:48:36.503"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230309 16:48:36.503" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230309 16:48:36.503" endtime="20230309 16:48:36.503"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:48:36.513" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '.[] | select(.name=="97126-with-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:48:43.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:48:43.202" level="INFO">${output} = {
  "metadata": {},
  "name": "97126-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20230309 16:48:36.506" endtime="20230309 16:48:43.202"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:48:43.203" level="INFO">{
  "metadata": {},
  "name": "97126-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2023-03-09T16:48:36.398Z",
  "modificationTime": "2023-03-09T16:48:36.398Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20230309 16:48:43.202" endtime="20230309 16:48:43.203"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:48:43.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:48:43.203" endtime="20230309 16:48:43.204"/>
</kw>
<status status="PASS" starttime="20230309 16:48:36.505" endtime="20230309 16:48:43.205"/>
</kw>
<msg timestamp="20230309 16:48:43.205" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:48:36.505" endtime="20230309 16:48:43.205"/>
</kw>
<msg timestamp="20230309 16:48:43.206" level="INFO">${result} = {
  "metadata": {},
  "name": "97126-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20230309 16:48:36.504" endtime="20230309 16:48:43.206"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 16:48:43.206" endtime="20230309 16:48:43.206"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:48:43.211" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="97126-with-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:48:49.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:48:49.597" level="INFO">${output} = {
  "metadata": {},
  "name": "97126-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20230309 16:48:43.208" endtime="20230309 16:48:49.597"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:48:49.599" level="INFO">{
  "metadata": {},
  "name": "97126-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2023-03-09T16:48:36.398Z",
  "modificationTime": "2023-03-09T16:48:36.398Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20230309 16:48:49.597" endtime="20230309 16:48:49.599"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:48:49.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:48:49.599" endtime="20230309 16:48:49.600"/>
</kw>
<status status="PASS" starttime="20230309 16:48:43.208" endtime="20230309 16:48:49.600"/>
</kw>
<msg timestamp="20230309 16:48:49.601" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:48:43.207" endtime="20230309 16:48:49.601"/>
</kw>
<msg timestamp="20230309 16:48:49.602" level="INFO">${result} = {
  "metadata": {},
  "name": "97126-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20230309 16:48:43.207" endtime="20230309 16:48:49.602"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 16:48:49.602" endtime="20230309 16:48:49.603"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:48:49.608" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/97126-with-host --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:48:56.291" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:48:56.291" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:48:49.605" endtime="20230309 16:48:56.292"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:48:56.293" level="INFO"/>
<status status="PASS" starttime="20230309 16:48:56.292" endtime="20230309 16:48:56.294"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:48:56.295" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:48:56.294" endtime="20230309 16:48:56.295"/>
</kw>
<status status="PASS" starttime="20230309 16:48:49.604" endtime="20230309 16:48:56.295"/>
</kw>
<msg timestamp="20230309 16:48:56.295" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:48:49.604" endtime="20230309 16:48:56.296"/>
</kw>
<status status="PASS" starttime="20230309 16:48:49.603" endtime="20230309 16:48:56.296"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:48:56.303" level="INFO">Running command 'ozone sh volume info o3://om:9862/97126-with-host | jq -r '. | select(.name=="97126-with-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:49:03.126" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:49:03.126" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20230309 16:48:56.299" endtime="20230309 16:49:03.126"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:49:03.128" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20230309 16:49:03.127" endtime="20230309 16:49:03.128"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:49:03.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:49:03.129" endtime="20230309 16:49:03.129"/>
</kw>
<status status="PASS" starttime="20230309 16:48:56.299" endtime="20230309 16:49:03.130"/>
</kw>
<msg timestamp="20230309 16:49:03.130" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:48:56.298" endtime="20230309 16:49:03.131"/>
</kw>
<msg timestamp="20230309 16:49:03.131" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20230309 16:48:56.297" endtime="20230309 16:49:03.131"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 16:49:03.132" endtime="20230309 16:49:03.132"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:49:03.138" level="INFO">Running command 'ozone sh bucket create o3://om:9862/97126-with-host/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:49:09.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:49:09.282" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:49:03.134" endtime="20230309 16:49:09.282"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:49:09.284" level="INFO"/>
<status status="PASS" starttime="20230309 16:49:09.283" endtime="20230309 16:49:09.284"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:49:09.285" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:49:09.285" endtime="20230309 16:49:09.286"/>
</kw>
<status status="PASS" starttime="20230309 16:49:03.134" endtime="20230309 16:49:09.286"/>
</kw>
<msg timestamp="20230309 16:49:09.286" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:49:03.133" endtime="20230309 16:49:09.287"/>
</kw>
<msg timestamp="20230309 16:49:09.288" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 16:49:03.132" endtime="20230309 16:49:09.288"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230309 16:49:09.288" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230309 16:49:09.288" endtime="20230309 16:49:09.288"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:49:09.294" level="INFO">Running command 'ozone sh bucket info o3://om:9862/97126-with-host/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:49:16.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:49:16.188" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20230309 16:49:09.291" endtime="20230309 16:49:16.188"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:49:16.190" level="INFO">DISK</msg>
<status status="PASS" starttime="20230309 16:49:16.189" endtime="20230309 16:49:16.190"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:49:16.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:49:16.190" endtime="20230309 16:49:16.191"/>
</kw>
<status status="PASS" starttime="20230309 16:49:09.290" endtime="20230309 16:49:16.191"/>
</kw>
<msg timestamp="20230309 16:49:16.191" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:49:09.290" endtime="20230309 16:49:16.192"/>
</kw>
<msg timestamp="20230309 16:49:16.193" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20230309 16:49:09.289" endtime="20230309 16:49:16.193"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 16:49:16.193" endtime="20230309 16:49:16.194"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:49:16.199" level="INFO">Running command 'ozone sh bucket info o3://om:9862/97126-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:49:23.489" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:49:23.490" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20230309 16:49:16.197" endtime="20230309 16:49:23.490"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:49:23.491" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20230309 16:49:23.490" endtime="20230309 16:49:23.492"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:49:23.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:49:23.492" endtime="20230309 16:49:23.493"/>
</kw>
<status status="PASS" starttime="20230309 16:49:16.196" endtime="20230309 16:49:23.493"/>
</kw>
<msg timestamp="20230309 16:49:23.493" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:49:16.195" endtime="20230309 16:49:23.494"/>
</kw>
<msg timestamp="20230309 16:49:23.495" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20230309 16:49:16.194" endtime="20230309 16:49:23.495"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 16:49:23.495" endtime="20230309 16:49:23.496"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:49:23.503" level="INFO">Running command 'ozone sh bucket info o3://om:9862/97126-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:49:30.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:49:30.776" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20230309 16:49:23.498" endtime="20230309 16:49:30.776"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:49:30.778" level="INFO">100</msg>
<status status="PASS" starttime="20230309 16:49:30.777" endtime="20230309 16:49:30.778"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:49:30.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:49:30.778" endtime="20230309 16:49:30.779"/>
</kw>
<status status="PASS" starttime="20230309 16:49:23.497" endtime="20230309 16:49:30.779"/>
</kw>
<msg timestamp="20230309 16:49:30.779" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:49:23.497" endtime="20230309 16:49:30.780"/>
</kw>
<msg timestamp="20230309 16:49:30.780" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20230309 16:49:23.496" endtime="20230309 16:49:30.780"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 16:49:30.780" endtime="20230309 16:49:30.781"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:49:30.786" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/97126-with-host/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:49:37.244" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:49:37.244" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:49:30.783" endtime="20230309 16:49:37.244"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:49:37.246" level="INFO"/>
<status status="PASS" starttime="20230309 16:49:37.245" endtime="20230309 16:49:37.246"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:49:37.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:49:37.246" endtime="20230309 16:49:37.247"/>
</kw>
<status status="PASS" starttime="20230309 16:49:30.783" endtime="20230309 16:49:37.248"/>
</kw>
<msg timestamp="20230309 16:49:37.248" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:49:30.782" endtime="20230309 16:49:37.249"/>
</kw>
<status status="PASS" starttime="20230309 16:49:30.781" endtime="20230309 16:49:37.249"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:49:37.256" level="INFO">Running command 'ozone sh bucket info o3://om:9862/97126-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:49:44.030" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:49:44.030" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20230309 16:49:37.252" endtime="20230309 16:49:44.031"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:49:44.033" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20230309 16:49:44.032" endtime="20230309 16:49:44.033"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:49:44.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:49:44.033" endtime="20230309 16:49:44.034"/>
</kw>
<status status="PASS" starttime="20230309 16:49:37.251" endtime="20230309 16:49:44.035"/>
</kw>
<msg timestamp="20230309 16:49:44.035" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:49:37.251" endtime="20230309 16:49:44.035"/>
</kw>
<msg timestamp="20230309 16:49:44.036" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20230309 16:49:37.249" endtime="20230309 16:49:44.036"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 16:49:44.036" endtime="20230309 16:49:44.037"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:49:44.042" level="INFO">Running command 'ozone sh bucket info o3://om:9862/97126-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:49:51.170" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:49:51.170" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20230309 16:49:44.039" endtime="20230309 16:49:51.170"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:49:51.172" level="INFO">1000</msg>
<status status="PASS" starttime="20230309 16:49:51.171" endtime="20230309 16:49:51.172"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:49:51.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:49:51.172" endtime="20230309 16:49:51.173"/>
</kw>
<status status="PASS" starttime="20230309 16:49:44.038" endtime="20230309 16:49:51.173"/>
</kw>
<msg timestamp="20230309 16:49:51.174" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:49:44.038" endtime="20230309 16:49:51.174"/>
</kw>
<msg timestamp="20230309 16:49:51.175" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20230309 16:49:44.037" endtime="20230309 16:49:51.175"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 16:49:51.175" endtime="20230309 16:49:51.176"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:49:51.183" level="INFO">Running command 'ozone sh bucket list o3://om:9862/97126-with-host/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:49:57.729" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:49:57.729" level="INFO">${output} = 97126-with-host</msg>
<status status="PASS" starttime="20230309 16:49:51.179" endtime="20230309 16:49:57.730"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:49:57.732" level="INFO">97126-with-host</msg>
<status status="PASS" starttime="20230309 16:49:57.730" endtime="20230309 16:49:57.732"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:49:57.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:49:57.732" endtime="20230309 16:49:57.733"/>
</kw>
<status status="PASS" starttime="20230309 16:49:51.178" endtime="20230309 16:49:57.734"/>
</kw>
<msg timestamp="20230309 16:49:57.734" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:49:51.177" endtime="20230309 16:49:57.735"/>
</kw>
<msg timestamp="20230309 16:49:57.735" level="INFO">${result} = 97126-with-host</msg>
<status status="PASS" starttime="20230309 16:49:51.176" endtime="20230309 16:49:57.735"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 16:49:57.735" endtime="20230309 16:49:57.736"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:49:57.743" level="INFO">Running command 'ozone sh key put o3://om:9862/97126-with-host/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:50:07.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:50:07.941" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:49:57.740" endtime="20230309 16:50:07.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:50:07.943" level="INFO"/>
<status status="PASS" starttime="20230309 16:50:07.942" endtime="20230309 16:50:07.943"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:50:07.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:50:07.943" endtime="20230309 16:50:07.944"/>
</kw>
<status status="PASS" starttime="20230309 16:49:57.739" endtime="20230309 16:50:07.944"/>
</kw>
<msg timestamp="20230309 16:50:07.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:49:57.739" endtime="20230309 16:50:07.945"/>
</kw>
<status status="PASS" starttime="20230309 16:49:57.738" endtime="20230309 16:50:07.946"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:50:07.951" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:50:07.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:50:07.954" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:50:07.948" endtime="20230309 16:50:07.954"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:50:07.956" level="INFO"/>
<status status="PASS" starttime="20230309 16:50:07.955" endtime="20230309 16:50:07.956"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:50:07.957" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:50:07.956" endtime="20230309 16:50:07.957"/>
</kw>
<status status="PASS" starttime="20230309 16:50:07.947" endtime="20230309 16:50:07.957"/>
</kw>
<msg timestamp="20230309 16:50:07.957" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:50:07.947" endtime="20230309 16:50:07.958"/>
</kw>
<status status="PASS" starttime="20230309 16:50:07.946" endtime="20230309 16:50:07.958"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:50:07.963" level="INFO">Running command 'ozone sh key get o3://om:9862/97126-with-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:50:17.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:50:17.037" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:50:07.960" endtime="20230309 16:50:17.037"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:50:17.038" level="INFO"/>
<status status="PASS" starttime="20230309 16:50:17.037" endtime="20230309 16:50:17.038"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:50:17.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:50:17.039" endtime="20230309 16:50:17.039"/>
</kw>
<status status="PASS" starttime="20230309 16:50:07.959" endtime="20230309 16:50:17.040"/>
</kw>
<msg timestamp="20230309 16:50:17.040" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:50:07.959" endtime="20230309 16:50:17.040"/>
</kw>
<status status="PASS" starttime="20230309 16:50:07.958" endtime="20230309 16:50:17.041"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:50:17.046" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:50:17.052" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:50:17.052" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:50:17.042" endtime="20230309 16:50:17.052"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:50:17.054" level="INFO"/>
<status status="PASS" starttime="20230309 16:50:17.053" endtime="20230309 16:50:17.054"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:50:17.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:50:17.054" endtime="20230309 16:50:17.055"/>
</kw>
<status status="PASS" starttime="20230309 16:50:17.042" endtime="20230309 16:50:17.056"/>
</kw>
<msg timestamp="20230309 16:50:17.056" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:50:17.041" endtime="20230309 16:50:17.057"/>
</kw>
<status status="PASS" starttime="20230309 16:50:17.041" endtime="20230309 16:50:17.057"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:50:17.063" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/97126-with-host/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:50:26.233" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:50:26.233" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:50:17.060" endtime="20230309 16:50:26.233"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:50:26.235" level="INFO"/>
<status status="PASS" starttime="20230309 16:50:26.234" endtime="20230309 16:50:26.235"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:50:26.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:50:26.235" endtime="20230309 16:50:26.236"/>
</kw>
<status status="PASS" starttime="20230309 16:50:17.059" endtime="20230309 16:50:26.236"/>
</kw>
<msg timestamp="20230309 16:50:26.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:50:17.058" endtime="20230309 16:50:26.237"/>
</kw>
<status status="PASS" starttime="20230309 16:50:17.057" endtime="20230309 16:50:26.238"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:50:26.244" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:50:26.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:50:26.248" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:50:26.241" endtime="20230309 16:50:26.248"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:50:26.250" level="INFO"/>
<status status="PASS" starttime="20230309 16:50:26.249" endtime="20230309 16:50:26.250"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:50:26.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:50:26.250" endtime="20230309 16:50:26.252"/>
</kw>
<status status="PASS" starttime="20230309 16:50:26.239" endtime="20230309 16:50:26.252"/>
</kw>
<msg timestamp="20230309 16:50:26.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:50:26.239" endtime="20230309 16:50:26.253"/>
</kw>
<status status="PASS" starttime="20230309 16:50:26.238" endtime="20230309 16:50:26.254"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:50:26.259" level="INFO">Running command 'ozone sh key get o3://om:9862/97126-with-host/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:50:35.848" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:50:35.848" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:50:26.256" endtime="20230309 16:50:35.848"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:50:35.850" level="INFO"/>
<status status="PASS" starttime="20230309 16:50:35.849" endtime="20230309 16:50:35.850"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:50:35.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:50:35.850" endtime="20230309 16:50:35.851"/>
</kw>
<status status="PASS" starttime="20230309 16:50:26.255" endtime="20230309 16:50:35.851"/>
</kw>
<msg timestamp="20230309 16:50:35.851" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:50:26.255" endtime="20230309 16:50:35.852"/>
</kw>
<status status="PASS" starttime="20230309 16:50:26.254" endtime="20230309 16:50:35.852"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:50:35.857" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:50:35.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:50:35.861" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:50:35.854" endtime="20230309 16:50:35.861"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:50:35.863" level="INFO"/>
<status status="PASS" starttime="20230309 16:50:35.862" endtime="20230309 16:50:35.863"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:50:35.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:50:35.864" endtime="20230309 16:50:35.864"/>
</kw>
<status status="PASS" starttime="20230309 16:50:35.853" endtime="20230309 16:50:35.865"/>
</kw>
<msg timestamp="20230309 16:50:35.865" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:50:35.853" endtime="20230309 16:50:35.866"/>
</kw>
<status status="PASS" starttime="20230309 16:50:35.852" endtime="20230309 16:50:35.867"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:50:35.874" level="INFO">Running command 'ozone sh key info o3://om:9862/97126-with-host/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:50:42.911" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:50:42.911" level="INFO">${output} = {
  "volumeName": "97126-with-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17539,
  "creationTime": "2023-03-09T16:50:23.208Z",
  "modificationTime": "2023-03-09T16:50:25.805Z",...</msg>
<status status="PASS" starttime="20230309 16:50:35.871" endtime="20230309 16:50:42.912"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:50:42.914" level="INFO">{
  "volumeName": "97126-with-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17539,
  "creationTime": "2023-03-09T16:50:23.208Z",
  "modificationTime": "2023-03-09T16:50:25.805Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 111677748019200020,
      "length": 17539,
      "offset": 0,
      "keyOffset": 0
    }
  ]
}</msg>
<status status="PASS" starttime="20230309 16:50:42.912" endtime="20230309 16:50:42.914"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:50:42.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:50:42.914" endtime="20230309 16:50:42.915"/>
</kw>
<status status="PASS" starttime="20230309 16:50:35.869" endtime="20230309 16:50:42.916"/>
</kw>
<msg timestamp="20230309 16:50:42.916" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:50:35.869" endtime="20230309 16:50:42.916"/>
</kw>
<msg timestamp="20230309 16:50:42.917" level="INFO">${result} = {
  "volumeName": "97126-with-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17539,
  "creationTime": "2023-03-09T16:50:23.208Z",
  "modificationTime": "2023-03-09T16:50:25.805Z",...</msg>
<status status="PASS" starttime="20230309 16:50:35.867" endtime="20230309 16:50:42.917"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 16:50:42.917" endtime="20230309 16:50:42.918"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:50:42.923" level="INFO">Running command 'ozone sh key delete o3://om:9862/97126-with-host/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:50:49.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:50:49.479" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:50:42.920" endtime="20230309 16:50:49.479"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:50:49.481" level="INFO"/>
<status status="PASS" starttime="20230309 16:50:49.480" endtime="20230309 16:50:49.481"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:50:49.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:50:49.481" endtime="20230309 16:50:49.482"/>
</kw>
<status status="PASS" starttime="20230309 16:50:42.919" endtime="20230309 16:50:49.483"/>
</kw>
<msg timestamp="20230309 16:50:49.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:50:42.919" endtime="20230309 16:50:49.483"/>
</kw>
<status status="PASS" starttime="20230309 16:50:42.918" endtime="20230309 16:50:49.484"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:50:49.490" level="INFO">Running command 'ozone sh key cp o3://om:9862/97126-with-host/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:50:59.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:50:59.789" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:50:49.486" endtime="20230309 16:50:59.789"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:50:59.791" level="INFO"/>
<status status="PASS" starttime="20230309 16:50:59.790" endtime="20230309 16:50:59.791"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:50:59.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:50:59.791" endtime="20230309 16:50:59.792"/>
</kw>
<status status="PASS" starttime="20230309 16:50:49.486" endtime="20230309 16:50:59.793"/>
</kw>
<msg timestamp="20230309 16:50:59.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:50:49.485" endtime="20230309 16:50:59.794"/>
</kw>
<status status="PASS" starttime="20230309 16:50:49.484" endtime="20230309 16:50:59.794"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:50:59.800" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:50:59.803" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:50:59.803" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:50:59.796" endtime="20230309 16:50:59.803"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:50:59.804" level="INFO"/>
<status status="PASS" starttime="20230309 16:50:59.804" endtime="20230309 16:50:59.805"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:50:59.806" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:50:59.805" endtime="20230309 16:50:59.806"/>
</kw>
<status status="PASS" starttime="20230309 16:50:59.795" endtime="20230309 16:50:59.806"/>
</kw>
<msg timestamp="20230309 16:50:59.806" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:50:59.795" endtime="20230309 16:50:59.807"/>
</kw>
<status status="PASS" starttime="20230309 16:50:59.794" endtime="20230309 16:50:59.807"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:50:59.813" level="INFO">Running command 'ozone sh key get o3://om:9862/97126-with-host/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:51:09.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:51:09.331" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:50:59.810" endtime="20230309 16:51:09.331"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:51:09.332" level="INFO"/>
<status status="PASS" starttime="20230309 16:51:09.331" endtime="20230309 16:51:09.333"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:51:09.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:51:09.333" endtime="20230309 16:51:09.334"/>
</kw>
<status status="PASS" starttime="20230309 16:50:59.809" endtime="20230309 16:51:09.334"/>
</kw>
<msg timestamp="20230309 16:51:09.334" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:50:59.809" endtime="20230309 16:51:09.335"/>
</kw>
<status status="PASS" starttime="20230309 16:50:59.808" endtime="20230309 16:51:09.335"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:51:09.340" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:51:09.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:51:09.344" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:51:09.337" endtime="20230309 16:51:09.344"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:51:09.346" level="INFO"/>
<status status="PASS" starttime="20230309 16:51:09.345" endtime="20230309 16:51:09.346"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:51:09.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:51:09.346" endtime="20230309 16:51:09.347"/>
</kw>
<status status="PASS" starttime="20230309 16:51:09.337" endtime="20230309 16:51:09.347"/>
</kw>
<msg timestamp="20230309 16:51:09.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:51:09.336" endtime="20230309 16:51:09.348"/>
</kw>
<status status="PASS" starttime="20230309 16:51:09.335" endtime="20230309 16:51:09.348"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:51:09.353" level="INFO">Running command 'ozone sh key delete o3://om:9862/97126-with-host/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:51:15.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:51:15.955" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:51:09.350" endtime="20230309 16:51:15.955"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:51:15.957" level="INFO"/>
<status status="PASS" starttime="20230309 16:51:15.955" endtime="20230309 16:51:15.957"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:51:15.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:51:15.957" endtime="20230309 16:51:15.958"/>
</kw>
<status status="PASS" starttime="20230309 16:51:09.350" endtime="20230309 16:51:15.959"/>
</kw>
<msg timestamp="20230309 16:51:15.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:51:09.349" endtime="20230309 16:51:15.960"/>
</kw>
<status status="PASS" starttime="20230309 16:51:09.348" endtime="20230309 16:51:15.960"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:51:15.964" level="INFO">Running command 'ozone sh key get o3://om:9862/97126-with-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:51:22.609" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 16:51:22.609" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230309 16:51:15.961" endtime="20230309 16:51:22.610"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:51:22.612" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230309 16:51:22.610" endtime="20230309 16:51:22.612"/>
</kw>
<msg timestamp="20230309 16:51:22.612" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230309 16:51:15.960" endtime="20230309 16:51:22.612"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 16:51:22.613" endtime="20230309 16:51:22.613"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:51:22.619" level="INFO">Running command 'ozone sh key get --force o3://om:9862/97126-with-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:51:31.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:51:31.637" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:51:22.616" endtime="20230309 16:51:31.637"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:51:31.640" level="INFO"/>
<status status="PASS" starttime="20230309 16:51:31.637" endtime="20230309 16:51:31.640"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:51:31.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:51:31.640" endtime="20230309 16:51:31.647"/>
</kw>
<status status="PASS" starttime="20230309 16:51:22.615" endtime="20230309 16:51:31.647"/>
</kw>
<msg timestamp="20230309 16:51:31.647" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:51:22.615" endtime="20230309 16:51:31.648"/>
</kw>
<msg timestamp="20230309 16:51:31.649" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 16:51:22.614" endtime="20230309 16:51:31.649"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 16:51:31.649" endtime="20230309 16:51:31.650"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:51:31.656" level="INFO">Running command 'ozone sh key info o3://om:9862/97126-with-host/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:51:39.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:51:39.054" level="INFO">${output} = {
  "volumeName": "97126-with-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17539,
  "creationTime": "2023-03-09T16:50:04.459Z",
  "modificationTime": "2023-03-09T16:50:07.141Z",
  "re...</msg>
<status status="PASS" starttime="20230309 16:51:31.653" endtime="20230309 16:51:39.055"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:51:39.056" level="INFO">{
  "volumeName": "97126-with-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17539,
  "creationTime": "2023-03-09T16:50:04.459Z",
  "modificationTime": "2023-03-09T16:50:07.141Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 111677748019200020,
      "length": 17539,
      "offset": 0,
      "keyOffset": 0
    }
  ]
}</msg>
<status status="PASS" starttime="20230309 16:51:39.055" endtime="20230309 16:51:39.056"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:51:39.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:51:39.057" endtime="20230309 16:51:39.058"/>
</kw>
<status status="PASS" starttime="20230309 16:51:31.652" endtime="20230309 16:51:39.058"/>
</kw>
<msg timestamp="20230309 16:51:39.058" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:51:31.652" endtime="20230309 16:51:39.059"/>
</kw>
<msg timestamp="20230309 16:51:39.059" level="INFO">${result} = {
  "volumeName": "97126-with-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17539,
  "creationTime": "2023-03-09T16:50:04.459Z",
  "modificationTime": "2023-03-09T16:50:07.141Z",
  "re...</msg>
<status status="PASS" starttime="20230309 16:51:31.650" endtime="20230309 16:51:39.059"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 16:51:39.060" endtime="20230309 16:51:39.060"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:51:39.066" level="INFO">Running command 'ozone sh key list o3://om:9862/97126-with-host/bb1 | jq -r '.[] | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:51:46.316" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:51:46.316" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20230309 16:51:39.063" endtime="20230309 16:51:46.317"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:51:46.318" level="INFO">key1</msg>
<status status="PASS" starttime="20230309 16:51:46.317" endtime="20230309 16:51:46.318"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:51:46.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:51:46.319" endtime="20230309 16:51:46.320"/>
</kw>
<status status="PASS" starttime="20230309 16:51:39.062" endtime="20230309 16:51:46.320"/>
</kw>
<msg timestamp="20230309 16:51:46.320" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:51:39.062" endtime="20230309 16:51:46.321"/>
</kw>
<msg timestamp="20230309 16:51:46.321" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20230309 16:51:39.060" endtime="20230309 16:51:46.322"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 16:51:46.322" endtime="20230309 16:51:46.322"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:51:46.328" level="INFO">Running command 'ozone sh key rename o3://om:9862/97126-with-host/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:51:53.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:51:53.347" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:51:46.325" endtime="20230309 16:51:53.347"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:51:53.349" level="INFO"/>
<status status="PASS" starttime="20230309 16:51:53.348" endtime="20230309 16:51:53.349"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:51:53.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:51:53.349" endtime="20230309 16:51:53.350"/>
</kw>
<status status="PASS" starttime="20230309 16:51:46.324" endtime="20230309 16:51:53.351"/>
</kw>
<msg timestamp="20230309 16:51:53.351" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:51:46.324" endtime="20230309 16:51:53.352"/>
</kw>
<status status="PASS" starttime="20230309 16:51:46.323" endtime="20230309 16:51:53.352"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:51:53.357" level="INFO">Running command 'ozone sh key list o3://om:9862/97126-with-host/bb1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:52:00.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:52:00.265" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20230309 16:51:53.355" endtime="20230309 16:52:00.266"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:52:00.268" level="INFO">key2</msg>
<status status="PASS" starttime="20230309 16:52:00.267" endtime="20230309 16:52:00.268"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:52:00.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:52:00.268" endtime="20230309 16:52:00.269"/>
</kw>
<status status="PASS" starttime="20230309 16:51:53.354" endtime="20230309 16:52:00.270"/>
</kw>
<msg timestamp="20230309 16:52:00.270" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:51:53.353" endtime="20230309 16:52:00.271"/>
</kw>
<msg timestamp="20230309 16:52:00.271" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20230309 16:51:53.352" endtime="20230309 16:52:00.271"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 16:52:00.272" endtime="20230309 16:52:00.273"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:52:00.279" level="INFO">Running command 'ozone sh key delete o3://om:9862/97126-with-host/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:52:07.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:52:07.098" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:52:00.275" endtime="20230309 16:52:07.098"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:52:07.100" level="INFO"/>
<status status="PASS" starttime="20230309 16:52:07.098" endtime="20230309 16:52:07.100"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:52:07.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:52:07.100" endtime="20230309 16:52:07.101"/>
</kw>
<status status="PASS" starttime="20230309 16:52:00.274" endtime="20230309 16:52:07.101"/>
</kw>
<msg timestamp="20230309 16:52:07.101" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:52:00.274" endtime="20230309 16:52:07.102"/>
</kw>
<status status="PASS" starttime="20230309 16:52:00.273" endtime="20230309 16:52:07.103"/>
</kw>
<status status="PASS" starttime="20230309 16:49:57.737" endtime="20230309 16:52:07.103"/>
</kw>
<status status="PASS" starttime="20230309 16:49:57.737" endtime="20230309 16:52:07.103"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:52:07.109" level="INFO">Running command 'ozone sh volume clrquota --space-quota o3://om:9862/97126-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:52:13.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:52:13.498" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:52:07.105" endtime="20230309 16:52:13.499"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:52:13.500" level="INFO"/>
<status status="PASS" starttime="20230309 16:52:13.499" endtime="20230309 16:52:13.500"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:52:13.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:52:13.501" endtime="20230309 16:52:13.501"/>
</kw>
<status status="PASS" starttime="20230309 16:52:07.105" endtime="20230309 16:52:13.502"/>
</kw>
<msg timestamp="20230309 16:52:13.502" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:52:07.104" endtime="20230309 16:52:13.503"/>
</kw>
<status status="PASS" starttime="20230309 16:52:07.103" endtime="20230309 16:52:13.503"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:52:13.509" level="INFO">Running command 'ozone sh volume info o3://om:9862/97126-with-host | jq -r '. | select(.name=="97126-with-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:52:20.322" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:52:20.322" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230309 16:52:13.506" endtime="20230309 16:52:20.322"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:52:20.324" level="INFO">-1</msg>
<status status="PASS" starttime="20230309 16:52:20.323" endtime="20230309 16:52:20.324"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:52:20.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:52:20.324" endtime="20230309 16:52:20.325"/>
</kw>
<status status="PASS" starttime="20230309 16:52:13.505" endtime="20230309 16:52:20.325"/>
</kw>
<msg timestamp="20230309 16:52:20.325" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:52:13.504" endtime="20230309 16:52:20.326"/>
</kw>
<msg timestamp="20230309 16:52:20.327" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230309 16:52:13.503" endtime="20230309 16:52:20.327"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 16:52:20.327" endtime="20230309 16:52:20.328"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:52:20.333" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota o3://om:9862/97126-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:52:27.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:52:27.196" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:52:20.331" endtime="20230309 16:52:27.196"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:52:27.198" level="INFO"/>
<status status="PASS" starttime="20230309 16:52:27.197" endtime="20230309 16:52:27.198"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:52:27.199" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:52:27.198" endtime="20230309 16:52:27.199"/>
</kw>
<status status="PASS" starttime="20230309 16:52:20.329" endtime="20230309 16:52:27.199"/>
</kw>
<msg timestamp="20230309 16:52:27.199" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:52:20.329" endtime="20230309 16:52:27.200"/>
</kw>
<status status="PASS" starttime="20230309 16:52:20.328" endtime="20230309 16:52:27.200"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:52:27.206" level="INFO">Running command 'ozone sh volume info o3://om:9862/97126-with-host | jq -r '. | select(.name=="97126-with-host") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:52:34.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:52:34.133" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230309 16:52:27.203" endtime="20230309 16:52:34.133"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:52:34.134" level="INFO">-1</msg>
<status status="PASS" starttime="20230309 16:52:34.133" endtime="20230309 16:52:34.135"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:52:34.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:52:34.135" endtime="20230309 16:52:34.136"/>
</kw>
<status status="PASS" starttime="20230309 16:52:27.202" endtime="20230309 16:52:34.136"/>
</kw>
<msg timestamp="20230309 16:52:34.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:52:27.202" endtime="20230309 16:52:34.137"/>
</kw>
<msg timestamp="20230309 16:52:34.138" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230309 16:52:27.200" endtime="20230309 16:52:34.138"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 16:52:34.138" endtime="20230309 16:52:34.139"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:52:34.144" level="INFO">Running command 'ozone sh bucket clrquota --space-quota o3://om:9862/97126-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:52:40.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:52:40.968" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:52:34.141" endtime="20230309 16:52:40.968"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:52:40.970" level="INFO"/>
<status status="PASS" starttime="20230309 16:52:40.969" endtime="20230309 16:52:40.970"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:52:40.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:52:40.970" endtime="20230309 16:52:40.971"/>
</kw>
<status status="PASS" starttime="20230309 16:52:34.141" endtime="20230309 16:52:40.972"/>
</kw>
<msg timestamp="20230309 16:52:40.972" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:52:34.140" endtime="20230309 16:52:40.973"/>
</kw>
<status status="PASS" starttime="20230309 16:52:34.139" endtime="20230309 16:52:40.973"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:52:40.979" level="INFO">Running command 'ozone sh bucket info o3://om:9862/97126-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:52:47.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:52:47.969" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230309 16:52:40.976" endtime="20230309 16:52:47.969"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:52:47.971" level="INFO">-1</msg>
<status status="PASS" starttime="20230309 16:52:47.970" endtime="20230309 16:52:47.971"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:52:47.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:52:47.971" endtime="20230309 16:52:47.972"/>
</kw>
<status status="PASS" starttime="20230309 16:52:40.975" endtime="20230309 16:52:47.972"/>
</kw>
<msg timestamp="20230309 16:52:47.972" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:52:40.974" endtime="20230309 16:52:47.973"/>
</kw>
<msg timestamp="20230309 16:52:47.973" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230309 16:52:40.973" endtime="20230309 16:52:47.973"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 16:52:47.974" endtime="20230309 16:52:47.974"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:52:47.980" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota o3://om:9862/97126-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:52:54.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:52:54.208" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:52:47.977" endtime="20230309 16:52:54.208"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:52:54.210" level="INFO"/>
<status status="PASS" starttime="20230309 16:52:54.209" endtime="20230309 16:52:54.210"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:52:54.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:52:54.211" endtime="20230309 16:52:54.211"/>
</kw>
<status status="PASS" starttime="20230309 16:52:47.976" endtime="20230309 16:52:54.212"/>
</kw>
<msg timestamp="20230309 16:52:54.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:52:47.975" endtime="20230309 16:52:54.213"/>
</kw>
<status status="PASS" starttime="20230309 16:52:47.974" endtime="20230309 16:52:54.213"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:52:54.220" level="INFO">Running command 'ozone sh bucket info o3://om:9862/97126-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:53:00.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:53:00.861" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230309 16:52:54.217" endtime="20230309 16:53:00.861"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:53:00.862" level="INFO">-1</msg>
<status status="PASS" starttime="20230309 16:53:00.861" endtime="20230309 16:53:00.862"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:53:00.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:53:00.863" endtime="20230309 16:53:00.864"/>
</kw>
<status status="PASS" starttime="20230309 16:52:54.216" endtime="20230309 16:53:00.864"/>
</kw>
<msg timestamp="20230309 16:53:00.864" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:52:54.215" endtime="20230309 16:53:00.865"/>
</kw>
<msg timestamp="20230309 16:53:00.865" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230309 16:52:54.213" endtime="20230309 16:53:00.865"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 16:53:00.865" endtime="20230309 16:53:00.866"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:53:00.872" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/97126-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:53:07.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:53:07.310" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:53:00.869" endtime="20230309 16:53:07.310"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:53:07.312" level="INFO"/>
<status status="PASS" starttime="20230309 16:53:07.311" endtime="20230309 16:53:07.312"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:53:07.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:53:07.312" endtime="20230309 16:53:07.313"/>
</kw>
<status status="PASS" starttime="20230309 16:53:00.868" endtime="20230309 16:53:07.313"/>
</kw>
<msg timestamp="20230309 16:53:07.313" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:53:00.867" endtime="20230309 16:53:07.314"/>
</kw>
<status status="PASS" starttime="20230309 16:53:00.866" endtime="20230309 16:53:07.315"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:53:07.321" level="INFO">Running command 'ozone sh volume delete o3://om:9862/97126-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:53:14.235" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:53:14.235" level="INFO">${output} = Volume 97126-with-host is deleted</msg>
<status status="PASS" starttime="20230309 16:53:07.317" endtime="20230309 16:53:14.235"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:53:14.237" level="INFO">Volume 97126-with-host is deleted</msg>
<status status="PASS" starttime="20230309 16:53:14.236" endtime="20230309 16:53:14.237"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:53:14.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:53:14.237" endtime="20230309 16:53:14.238"/>
</kw>
<status status="PASS" starttime="20230309 16:53:07.317" endtime="20230309 16:53:14.238"/>
</kw>
<msg timestamp="20230309 16:53:14.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:53:07.316" endtime="20230309 16:53:14.239"/>
</kw>
<status status="PASS" starttime="20230309 16:53:07.315" endtime="20230309 16:53:14.239"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:53:14.244" level="INFO">Running command 'ozone sh volume create o3://om:9862/97126-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:53:21.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:53:21.042" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:53:14.241" endtime="20230309 16:53:21.042"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:53:21.044" level="INFO"/>
<status status="PASS" starttime="20230309 16:53:21.043" endtime="20230309 16:53:21.044"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:53:21.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:53:21.044" endtime="20230309 16:53:21.045"/>
</kw>
<status status="PASS" starttime="20230309 16:53:14.241" endtime="20230309 16:53:21.045"/>
</kw>
<msg timestamp="20230309 16:53:21.045" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:53:14.240" endtime="20230309 16:53:21.046"/>
</kw>
<status status="PASS" starttime="20230309 16:53:14.239" endtime="20230309 16:53:21.046"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:53:21.055" level="INFO">Running command 'ozone sh volume info o3://om:9862/97126-with-host | jq -r '. | select(.name=="97126-with-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:53:27.855" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:53:27.856" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230309 16:53:21.052" endtime="20230309 16:53:27.856"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:53:27.857" level="INFO">-1</msg>
<status status="PASS" starttime="20230309 16:53:27.856" endtime="20230309 16:53:27.857"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:53:27.858" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:53:27.858" endtime="20230309 16:53:27.858"/>
</kw>
<status status="PASS" starttime="20230309 16:53:21.051" endtime="20230309 16:53:27.859"/>
</kw>
<msg timestamp="20230309 16:53:27.859" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:53:21.049" endtime="20230309 16:53:27.859"/>
</kw>
<msg timestamp="20230309 16:53:27.860" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230309 16:53:21.047" endtime="20230309 16:53:27.860"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 16:53:27.860" endtime="20230309 16:53:27.861"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:53:27.867" level="INFO">Running command 'ozone sh volume info o3://om:9862/97126-with-host | jq -r '. | select(.name=="97126-with-host") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:53:35.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:53:35.110" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230309 16:53:27.864" endtime="20230309 16:53:35.110"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:53:35.113" level="INFO">-1</msg>
<status status="PASS" starttime="20230309 16:53:35.111" endtime="20230309 16:53:35.113"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:53:35.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:53:35.113" endtime="20230309 16:53:35.114"/>
</kw>
<status status="PASS" starttime="20230309 16:53:27.863" endtime="20230309 16:53:35.114"/>
</kw>
<msg timestamp="20230309 16:53:35.114" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:53:27.862" endtime="20230309 16:53:35.115"/>
</kw>
<msg timestamp="20230309 16:53:35.115" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230309 16:53:27.861" endtime="20230309 16:53:35.115"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 16:53:35.116" endtime="20230309 16:53:35.116"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:53:35.123" level="INFO">Running command 'ozone sh bucket create o3://om:9862/97126-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:53:41.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:53:41.697" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:53:35.118" endtime="20230309 16:53:41.697"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:53:41.698" level="INFO"/>
<status status="PASS" starttime="20230309 16:53:41.698" endtime="20230309 16:53:41.699"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:53:41.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:53:41.699" endtime="20230309 16:53:41.700"/>
</kw>
<status status="PASS" starttime="20230309 16:53:35.118" endtime="20230309 16:53:41.700"/>
</kw>
<msg timestamp="20230309 16:53:41.700" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:53:35.117" endtime="20230309 16:53:41.701"/>
</kw>
<status status="PASS" starttime="20230309 16:53:35.116" endtime="20230309 16:53:41.701"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:53:41.706" level="INFO">Running command 'ozone sh bucket info o3://om:9862/97126-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:53:48.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:53:48.613" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230309 16:53:41.703" endtime="20230309 16:53:48.613"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:53:48.615" level="INFO">-1</msg>
<status status="PASS" starttime="20230309 16:53:48.614" endtime="20230309 16:53:48.615"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:53:48.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:53:48.615" endtime="20230309 16:53:48.616"/>
</kw>
<status status="PASS" starttime="20230309 16:53:41.703" endtime="20230309 16:53:48.617"/>
</kw>
<msg timestamp="20230309 16:53:48.617" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:53:41.702" endtime="20230309 16:53:48.618"/>
</kw>
<msg timestamp="20230309 16:53:48.618" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230309 16:53:41.701" endtime="20230309 16:53:48.618"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 16:53:48.619" endtime="20230309 16:53:48.619"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:53:48.625" level="INFO">Running command 'ozone sh bucket info o3://om:9862/97126-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:53:55.401" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:53:55.401" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230309 16:53:48.622" endtime="20230309 16:53:55.401"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:53:55.403" level="INFO">-1</msg>
<status status="PASS" starttime="20230309 16:53:55.402" endtime="20230309 16:53:55.403"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:53:55.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:53:55.404" endtime="20230309 16:53:55.405"/>
</kw>
<status status="PASS" starttime="20230309 16:53:48.621" endtime="20230309 16:53:55.405"/>
</kw>
<msg timestamp="20230309 16:53:55.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:53:48.621" endtime="20230309 16:53:55.406"/>
</kw>
<msg timestamp="20230309 16:53:55.406" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230309 16:53:48.619" endtime="20230309 16:53:55.406"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 16:53:55.407" endtime="20230309 16:53:55.407"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:53:55.413" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/97126-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:54:02.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:54:02.216" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:53:55.410" endtime="20230309 16:54:02.216"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:54:02.219" level="INFO"/>
<status status="PASS" starttime="20230309 16:54:02.217" endtime="20230309 16:54:02.219"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:54:02.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:54:02.219" endtime="20230309 16:54:02.220"/>
</kw>
<status status="PASS" starttime="20230309 16:53:55.409" endtime="20230309 16:54:02.220"/>
</kw>
<msg timestamp="20230309 16:54:02.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:53:55.408" endtime="20230309 16:54:02.221"/>
</kw>
<status status="PASS" starttime="20230309 16:53:55.407" endtime="20230309 16:54:02.221"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:54:02.227" level="INFO">Running command 'ozone sh volume delete o3://om:9862/97126-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:54:08.041" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:54:08.041" level="INFO">${output} = Volume 97126-with-host is deleted</msg>
<status status="PASS" starttime="20230309 16:54:02.224" endtime="20230309 16:54:08.041"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:54:08.043" level="INFO">Volume 97126-with-host is deleted</msg>
<status status="PASS" starttime="20230309 16:54:08.041" endtime="20230309 16:54:08.043"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:54:08.044" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:54:08.043" endtime="20230309 16:54:08.044"/>
</kw>
<status status="PASS" starttime="20230309 16:54:02.223" endtime="20230309 16:54:08.044"/>
</kw>
<msg timestamp="20230309 16:54:08.045" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:54:02.222" endtime="20230309 16:54:08.045"/>
</kw>
<status status="PASS" starttime="20230309 16:54:02.222" endtime="20230309 16:54:08.046"/>
</kw>
<status status="PASS" starttime="20230309 16:48:23.947" endtime="20230309 16:54:08.046"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230309 16:48:23.833" endtime="20230309 16:54:08.046"/>
</test>
<test id="s1-s1-s5-t2" name="RpcClient with execution errors" line="29">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:54:08.055" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:54:08.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:54:08.060" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230309 16:54:08.052" endtime="20230309 16:54:08.060"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:54:08.062" level="INFO">scm</msg>
<status status="PASS" starttime="20230309 16:54:08.061" endtime="20230309 16:54:08.062"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:54:08.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:54:08.062" endtime="20230309 16:54:08.063"/>
</kw>
<status status="PASS" starttime="20230309 16:54:08.051" endtime="20230309 16:54:08.063"/>
</kw>
<msg timestamp="20230309 16:54:08.064" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:54:08.051" endtime="20230309 16:54:08.064"/>
</kw>
<msg timestamp="20230309 16:54:08.065" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230309 16:54:08.050" endtime="20230309 16:54:08.065"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 16:54:08.066" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 16:54:08.065" endtime="20230309 16:54:08.066"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:54:08.072" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:54:08.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:54:08.150" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:54:08.069" endtime="20230309 16:54:08.150"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:54:08.151" level="INFO"/>
<status status="PASS" starttime="20230309 16:54:08.150" endtime="20230309 16:54:08.151"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:54:08.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:54:08.151" endtime="20230309 16:54:08.152"/>
</kw>
<status status="PASS" starttime="20230309 16:54:08.068" endtime="20230309 16:54:08.153"/>
</kw>
<msg timestamp="20230309 16:54:08.153" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:54:08.068" endtime="20230309 16:54:08.154"/>
</kw>
<status status="PASS" starttime="20230309 16:54:08.067" endtime="20230309 16:54:08.154"/>
</kw>
<status status="PASS" starttime="20230309 16:54:08.066" endtime="20230309 16:54:08.154"/>
</kw>
<status status="PASS" starttime="20230309 16:54:08.050" endtime="20230309 16:54:08.155"/>
</kw>
<status status="PASS" starttime="20230309 16:54:08.049" endtime="20230309 16:54:08.155"/>
</kw>
<kw name="Test ozone shell errors" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-with-errors</arg>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota invalid</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:54:08.160" level="INFO">Running command 'ozone sh volume create o3://om:9862/97126-with-errors --space-quota invalid 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:54:14.734" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 16:54:14.735" level="INFO">${output} = Invalid values for quota, to ensure that the Quota format is legal(supported values are B, KB, MB, GB and TB). And the quota value cannot be greater than Long.MAX_VALUE BYTES</msg>
<status status="PASS" starttime="20230309 16:54:08.157" endtime="20230309 16:54:14.735"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:54:14.737" level="INFO">Invalid values for quota, to ensure that the Quota format is legal(supported values are B, KB, MB, GB and TB). And the quota value cannot be greater than Long.MAX_VALUE BYTES</msg>
<status status="PASS" starttime="20230309 16:54:14.735" endtime="20230309 16:54:14.737"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:54:14.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:54:14.737" endtime="20230309 16:54:14.738"/>
</kw>
<msg timestamp="20230309 16:54:14.738" level="INFO">${result} = Invalid values for quota, to ensure that the Quota format is legal(supported values are B, KB, MB, GB and TB). And the quota value cannot be greater than Long.MAX_VALUE BYTES</msg>
<status status="PASS" starttime="20230309 16:54:08.156" endtime="20230309 16:54:14.738"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 16:54:14.738" endtime="20230309 16:54:14.739"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:54:14.743" level="INFO">Running command 'ozone sh volume create o3://om:9862/97126-with-errors 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:54:21.505" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:54:21.505" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:54:14.741" endtime="20230309 16:54:21.506"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:54:21.507" level="INFO"/>
<status status="PASS" starttime="20230309 16:54:21.506" endtime="20230309 16:54:21.507"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:54:21.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:54:21.508" endtime="20230309 16:54:21.508"/>
</kw>
<status status="PASS" starttime="20230309 16:54:14.739" endtime="20230309 16:54:21.509"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bucket_1</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:54:21.514" level="INFO">Running command 'ozone sh bucket create o3://om:9862/97126-with-errors/bucket_1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:54:27.924" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 16:54:27.924" level="INFO">${output} = INVALID_BUCKET_NAME Bucket or Volume name has an unsupported character : _</msg>
<status status="PASS" starttime="20230309 16:54:21.510" endtime="20230309 16:54:27.924"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:54:27.926" level="INFO">INVALID_BUCKET_NAME Bucket or Volume name has an unsupported character : _</msg>
<status status="PASS" starttime="20230309 16:54:27.925" endtime="20230309 16:54:27.926"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:54:27.927" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:54:27.926" endtime="20230309 16:54:27.927"/>
</kw>
<msg timestamp="20230309 16:54:27.927" level="INFO">${result} = INVALID_BUCKET_NAME Bucket or Volume name has an unsupported character : _</msg>
<status status="PASS" starttime="20230309 16:54:21.509" endtime="20230309 16:54:27.928"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>INVALID_BUCKET_NAME</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 16:54:27.928" endtime="20230309 16:54:27.928"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bucket1 --layout Invalid</arg>
<arg>2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:54:27.932" level="INFO">Running command 'ozone sh bucket create o3://om:9862/97126-with-errors/bucket1 --layout Invalid 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:54:31.253" level="INFO">${rc} = 2</msg>
<msg timestamp="20230309 16:54:31.253" level="INFO">${output} = Invalid value for option '--layout': expected one of [FILE_SYSTEM_OPTIMIZED, OBJECT_STORE, LEGACY] (case-sensitive) but was 'Invalid'
Usage: ozone sh bucket create [-ghV] [-k=&lt;bekName&gt;] [-l=&lt;allowedBu...</msg>
<status status="PASS" starttime="20230309 16:54:27.929" endtime="20230309 16:54:31.253"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:54:31.255" level="INFO">Invalid value for option '--layout': expected one of [FILE_SYSTEM_OPTIMIZED, OBJECT_STORE, LEGACY] (case-sensitive) but was 'Invalid'
Usage: ozone sh bucket create [-ghV] [-k=&lt;bekName&gt;] [-l=&lt;allowedBucketLayout&gt;]
                              [--namespace-quota=&lt;quotaInNamespace&gt;]
                              [--quota=&lt;quotaInBytes&gt;] [-r=&lt;replication&gt;]
                              [-t=&lt;type&gt;] [-u=&lt;ownerName&gt;] &lt;value&gt;
creates a bucket in a given volume
      &lt;value&gt;              URI of the volume/bucket.
                           Ozone URI could either be a full URI or short URI.
                           Full URI should start with o3://, in case of non-HA
                           clusters it should be followed by the host name and
                           optionally the port number. In case of HA clusters
                           the service id should be used. Service id provides a
                           logical name for multiple hosts and it is defined
                           in the property ozone.om.service.ids.
                           Example of a full URI with host name and port number
                           for a key:
                           o3://omhostname:9862/vol1/bucket1/key1
                           With a service id for a volume:
                           o3://omserviceid/vol1/
                           Short URI should start from the volume.
                           Example of a short URI for a bucket:
                           vol1/bucket1
                           Any unspecified information will be identified from
                           the config files.

  -g, --enforcegdpr        if true, indicates GDPR enforced bucket,
                             false/unspecified indicates otherwise
  -h, --help               Show this help message and exit.
  -k, --bucketkey=&lt;bekName&gt;
                           bucket encryption key name
  -l, --layout=&lt;allowedBucketLayout&gt;
                           Allowed Bucket Layouts: FILE_SYSTEM_OPTIMIZED,
                             OBJECT_STORE, LEGACY
      --namespace-quota=&lt;quotaInNamespace&gt;
                           For volume this parameter represents the number of
                             buckets, and for buckets represents the number of
                             keys (eg. 5)
      --quota, --space-quota=&lt;quotaInBytes&gt;
                           The maximum space quota can be used (eg. 1GB)
  -r, --replication=&lt;replication&gt;
                           Replication definition. Valid values are replication
                             type-specific.  For RATIS: ONE or THREE. In case
                             of EC, pass CODEC-DATA-PARITY-CHUNKSIZE,  e.g.
                             rs-3-2-1024k, rs-6-3-1024k, rs-10-4-1024k
  -t, --type, --replication-type=&lt;type&gt;
                           Replication type. Supported types are: RATIS, EC
  -u, --user=&lt;ownerName&gt;   Owner of the bucket. Defaults to current user if not
                             specified
  -V, --version            Print version information and exit.</msg>
<status status="PASS" starttime="20230309 16:54:31.254" endtime="20230309 16:54:31.255"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:54:31.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:54:31.255" endtime="20230309 16:54:31.256"/>
</kw>
<msg timestamp="20230309 16:54:31.256" level="INFO">${result} = Invalid value for option '--layout': expected one of [FILE_SYSTEM_OPTIMIZED, OBJECT_STORE, LEGACY] (case-sensitive) but was 'Invalid'
Usage: ozone sh bucket create [-ghV] [-k=&lt;bekName&gt;] [-l=&lt;allowedBu...</msg>
<status status="PASS" starttime="20230309 16:54:27.928" endtime="20230309 16:54:31.257"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Usage</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 16:54:31.257" endtime="20230309 16:54:31.257"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bucket1</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:54:31.261" level="INFO">Running command 'ozone sh bucket create o3://om:9862/97126-with-errors/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:54:37.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:54:37.701" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:54:31.258" endtime="20230309 16:54:37.701"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:54:37.703" level="INFO"/>
<status status="PASS" starttime="20230309 16:54:37.702" endtime="20230309 16:54:37.703"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:54:37.705" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:54:37.704" endtime="20230309 16:54:37.705"/>
</kw>
<status status="PASS" starttime="20230309 16:54:31.257" endtime="20230309 16:54:37.705"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bucket1/non-existing</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:54:37.710" level="INFO">Running command 'ozone sh key info o3://om:9862/97126-with-errors/bucket1/non-existing 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:54:44.835" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 16:54:44.835" level="INFO">${output} = KEY_NOT_FOUND Key:non-existing not found</msg>
<status status="PASS" starttime="20230309 16:54:37.707" endtime="20230309 16:54:44.835"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:54:44.837" level="INFO">KEY_NOT_FOUND Key:non-existing not found</msg>
<status status="PASS" starttime="20230309 16:54:44.836" endtime="20230309 16:54:44.838"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:54:44.839" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:54:44.838" endtime="20230309 16:54:44.839"/>
</kw>
<msg timestamp="20230309 16:54:44.839" level="INFO">${result} = KEY_NOT_FOUND Key:non-existing not found</msg>
<status status="PASS" starttime="20230309 16:54:37.705" endtime="20230309 16:54:44.840"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>KEY_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 16:54:44.840" endtime="20230309 16:54:44.840"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put ${protocol}${server}/${volume}/bucket1/key1 unexisting --type invalid</arg>
<arg>2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:54:44.845" level="INFO">Running command 'ozone sh key put o3://om:9862/97126-with-errors/bucket1/key1 unexisting --type invalid 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:54:48.058" level="INFO">${rc} = 2</msg>
<msg timestamp="20230309 16:54:48.058" level="INFO">${output} = Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with invalid (java.lang.IllegalArgumentException: Invalid value 'invalid' for option '--typ...</msg>
<status status="PASS" starttime="20230309 16:54:44.842" endtime="20230309 16:54:48.058"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:54:48.060" level="INFO">Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with invalid (java.lang.IllegalArgumentException: Invalid value 'invalid' for option '--type'. No enum constant org.apache.hadoop.hdds.client.ReplicationType.invalid. Supported values are: RATIS, EC.)
Usage: ozone sh key put [-hV] [--stream] [-r=&lt;replication&gt;] [-t=&lt;type&gt;] &lt;value&gt;
                        &lt;fileName&gt;
creates or overwrites an existing key
      &lt;value&gt;      URI of the volume/bucket/key.
                   Ozone URI could either be a full URI or short URI.
                   Full URI should start with o3://, in case of non-HA
                   clusters it should be followed by the host name and
                   optionally the port number. In case of HA clusters
                   the service id should be used. Service id provides a
                   logical name for multiple hosts and it is defined
                   in the property ozone.om.service.ids.
                   Example of a full URI with host name and port number
                   for a key:
                   o3://omhostname:9862/vol1/bucket1/key1
                   With a service id for a volume:
                   o3://omserviceid/vol1/
                   Short URI should start from the volume.
                   Example of a short URI for a bucket:
                   vol1/bucket1
                   Any unspecified information will be identified from
                   the config files.

      &lt;fileName&gt;   File to upload
  -h, --help       Show this help message and exit.
  -r, --replication=&lt;replication&gt;
                   Replication definition. Valid values are replication
                     type-specific.  For RATIS: ONE or THREE. In case of EC,
                     pass CODEC-DATA-PARITY-CHUNKSIZE,  e.g. rs-3-2-1024k,
                     rs-6-3-1024k, rs-10-4-1024k
      --stream
  -t, --type, --replication-type=&lt;type&gt;
                   Replication type. Supported types are: RATIS, EC
  -V, --version    Print version information and exit.</msg>
<status status="PASS" starttime="20230309 16:54:48.059" endtime="20230309 16:54:48.060"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:54:48.061" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:54:48.060" endtime="20230309 16:54:48.061"/>
</kw>
<msg timestamp="20230309 16:54:48.062" level="INFO">${result} = Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with invalid (java.lang.IllegalArgumentException: Invalid value 'invalid' for option '--typ...</msg>
<status status="PASS" starttime="20230309 16:54:44.841" endtime="20230309 16:54:48.062"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bucket1</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:54:48.067" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/97126-with-errors/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:54:54.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:54:54.965" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:54:48.063" endtime="20230309 16:54:54.965"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:54:54.967" level="INFO"/>
<status status="PASS" starttime="20230309 16:54:54.966" endtime="20230309 16:54:54.967"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:54:54.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:54:54.967" endtime="20230309 16:54:54.968"/>
</kw>
<status status="PASS" starttime="20230309 16:54:48.062" endtime="20230309 16:54:54.969"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:54:54.973" level="INFO">Running command 'ozone sh volume delete o3://om:9862/97126-with-errors 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:55:02.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:55:02.037" level="INFO">${output} = Volume 97126-with-errors is deleted</msg>
<status status="PASS" starttime="20230309 16:54:54.970" endtime="20230309 16:55:02.037"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:55:02.039" level="INFO">Volume 97126-with-errors is deleted</msg>
<status status="PASS" starttime="20230309 16:55:02.038" endtime="20230309 16:55:02.039"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:55:02.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:55:02.040" endtime="20230309 16:55:02.041"/>
</kw>
<status status="PASS" starttime="20230309 16:54:54.969" endtime="20230309 16:55:02.041"/>
</kw>
<status status="PASS" starttime="20230309 16:54:08.155" endtime="20230309 16:55:02.041"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230309 16:54:08.048" endtime="20230309 16:55:02.042"/>
</test>
<test id="s1-s1-s5-t3" name="RpcClient volume acls" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:55:02.050" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:55:02.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:55:02.055" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230309 16:55:02.047" endtime="20230309 16:55:02.055"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:55:02.057" level="INFO">scm</msg>
<status status="PASS" starttime="20230309 16:55:02.056" endtime="20230309 16:55:02.057"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:55:02.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:55:02.057" endtime="20230309 16:55:02.058"/>
</kw>
<status status="PASS" starttime="20230309 16:55:02.047" endtime="20230309 16:55:02.058"/>
</kw>
<msg timestamp="20230309 16:55:02.059" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:55:02.046" endtime="20230309 16:55:02.059"/>
</kw>
<msg timestamp="20230309 16:55:02.060" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230309 16:55:02.045" endtime="20230309 16:55:02.060"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 16:55:02.061" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 16:55:02.060" endtime="20230309 16:55:02.061"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:55:02.068" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:55:02.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:55:02.144" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:55:02.064" endtime="20230309 16:55:02.145"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:55:02.146" level="INFO"/>
<status status="PASS" starttime="20230309 16:55:02.145" endtime="20230309 16:55:02.146"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:55:02.147" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:55:02.147" endtime="20230309 16:55:02.148"/>
</kw>
<status status="PASS" starttime="20230309 16:55:02.063" endtime="20230309 16:55:02.148"/>
</kw>
<msg timestamp="20230309 16:55:02.148" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:55:02.063" endtime="20230309 16:55:02.149"/>
</kw>
<status status="PASS" starttime="20230309 16:55:02.062" endtime="20230309 16:55:02.149"/>
</kw>
<status status="PASS" starttime="20230309 16:55:02.061" endtime="20230309 16:55:02.149"/>
</kw>
<status status="PASS" starttime="20230309 16:55:02.045" endtime="20230309 16:55:02.150"/>
</kw>
<status status="PASS" starttime="20230309 16:55:02.044" endtime="20230309 16:55:02.150"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:55:02.156" level="INFO">Running command 'ozone sh volume create o3://om:9862/97126-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:55:09.212" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:55:09.212" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:55:02.153" endtime="20230309 16:55:09.212"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:55:09.214" level="INFO"/>
<status status="PASS" starttime="20230309 16:55:09.213" endtime="20230309 16:55:09.214"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:55:09.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:55:09.214" endtime="20230309 16:55:09.216"/>
</kw>
<status status="PASS" starttime="20230309 16:55:02.152" endtime="20230309 16:55:09.216"/>
</kw>
<msg timestamp="20230309 16:55:09.216" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:55:02.152" endtime="20230309 16:55:09.217"/>
</kw>
<status status="PASS" starttime="20230309 16:55:02.151" endtime="20230309 16:55:09.217"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:55:09.223" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/97126-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:55:16.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:55:16.392" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230309 16:55:09.219" endtime="20230309 16:55:16.392"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:55:16.393" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230309 16:55:16.392" endtime="20230309 16:55:16.394"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:55:16.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:55:16.394" endtime="20230309 16:55:16.395"/>
</kw>
<status status="PASS" starttime="20230309 16:55:09.219" endtime="20230309 16:55:16.395"/>
</kw>
<msg timestamp="20230309 16:55:16.395" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:55:09.218" endtime="20230309 16:55:16.396"/>
</kw>
<msg timestamp="20230309 16:55:16.396" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230309 16:55:09.218" endtime="20230309 16:55:16.396"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230309 16:55:16.397" endtime="20230309 16:55:16.398"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:55:16.403" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/97126-acls -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:55:23.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:55:23.046" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20230309 16:55:16.400" endtime="20230309 16:55:23.046"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:55:23.048" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20230309 16:55:23.047" endtime="20230309 16:55:23.048"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:55:23.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:55:23.048" endtime="20230309 16:55:23.049"/>
</kw>
<status status="PASS" starttime="20230309 16:55:16.399" endtime="20230309 16:55:23.049"/>
</kw>
<msg timestamp="20230309 16:55:23.049" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:55:16.399" endtime="20230309 16:55:23.050"/>
</kw>
<msg timestamp="20230309 16:55:23.050" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20230309 16:55:16.398" endtime="20230309 16:55:23.050"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:55:23.056" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/97126-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:55:30.112" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:55:30.112" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20230309 16:55:23.053" endtime="20230309 16:55:30.112"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:55:30.114" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20230309 16:55:30.113" endtime="20230309 16:55:30.114"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:55:30.115" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:55:30.114" endtime="20230309 16:55:30.115"/>
</kw>
<status status="PASS" starttime="20230309 16:55:23.052" endtime="20230309 16:55:30.116"/>
</kw>
<msg timestamp="20230309 16:55:30.116" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:55:23.052" endtime="20230309 16:55:30.117"/>
</kw>
<msg timestamp="20230309 16:55:30.117" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20230309 16:55:23.051" endtime="20230309 16:55:30.118"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230309 16:55:30.118" endtime="20230309 16:55:30.119"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:55:30.125" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/97126-acls -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:55:37.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:55:37.060" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230309 16:55:30.122" endtime="20230309 16:55:37.060"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:55:37.062" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230309 16:55:37.061" endtime="20230309 16:55:37.062"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:55:37.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:55:37.063" endtime="20230309 16:55:37.063"/>
</kw>
<status status="PASS" starttime="20230309 16:55:30.121" endtime="20230309 16:55:37.064"/>
</kw>
<msg timestamp="20230309 16:55:37.064" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:55:30.121" endtime="20230309 16:55:37.065"/>
</kw>
<msg timestamp="20230309 16:55:37.065" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230309 16:55:30.120" endtime="20230309 16:55:37.065"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:55:37.072" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/97126-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:55:44.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:55:44.611" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20230309 16:55:37.068" endtime="20230309 16:55:44.611"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:55:44.612" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20230309 16:55:44.611" endtime="20230309 16:55:44.613"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:55:44.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:55:44.613" endtime="20230309 16:55:44.614"/>
</kw>
<status status="PASS" starttime="20230309 16:55:37.067" endtime="20230309 16:55:44.614"/>
</kw>
<msg timestamp="20230309 16:55:44.614" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:55:37.067" endtime="20230309 16:55:44.615"/>
</kw>
<msg timestamp="20230309 16:55:44.615" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20230309 16:55:37.066" endtime="20230309 16:55:44.615"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230309 16:55:44.616" endtime="20230309 16:55:44.617"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:55:44.622" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/97126-acls -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:55:51.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:55:51.249" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230309 16:55:44.619" endtime="20230309 16:55:51.249"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:55:51.251" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20230309 16:55:51.249" endtime="20230309 16:55:51.251"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:55:51.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:55:51.251" endtime="20230309 16:55:51.252"/>
</kw>
<status status="PASS" starttime="20230309 16:55:44.618" endtime="20230309 16:55:51.252"/>
</kw>
<msg timestamp="20230309 16:55:51.252" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:55:44.618" endtime="20230309 16:55:51.253"/>
</kw>
<msg timestamp="20230309 16:55:51.253" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230309 16:55:44.617" endtime="20230309 16:55:51.253"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:55:51.261" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/97126-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:55:58.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:55:58.306" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20230309 16:55:51.255" endtime="20230309 16:55:58.306"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:55:58.307" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230309 16:55:58.306" endtime="20230309 16:55:58.308"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:55:58.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:55:58.308" endtime="20230309 16:55:58.309"/>
</kw>
<status status="PASS" starttime="20230309 16:55:51.255" endtime="20230309 16:55:58.309"/>
</kw>
<msg timestamp="20230309 16:55:58.310" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:55:51.254" endtime="20230309 16:55:58.310"/>
</kw>
<msg timestamp="20230309 16:55:58.311" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20230309 16:55:51.253" endtime="20230309 16:55:58.311"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230309 16:55:58.312" endtime="20230309 16:55:58.312"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230309 16:55:58.312" endtime="20230309 16:55:58.314"/>
</kw>
<status status="PASS" starttime="20230309 16:55:02.150" endtime="20230309 16:55:58.314"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230309 16:55:02.043" endtime="20230309 16:55:58.314"/>
</test>
<test id="s1-s1-s5-t4" name="RpcClient bucket acls" line="35">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:55:58.324" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:55:58.329" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:55:58.329" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230309 16:55:58.321" endtime="20230309 16:55:58.329"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:55:58.330" level="INFO">scm</msg>
<status status="PASS" starttime="20230309 16:55:58.329" endtime="20230309 16:55:58.330"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:55:58.331" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:55:58.331" endtime="20230309 16:55:58.331"/>
</kw>
<status status="PASS" starttime="20230309 16:55:58.319" endtime="20230309 16:55:58.332"/>
</kw>
<msg timestamp="20230309 16:55:58.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:55:58.319" endtime="20230309 16:55:58.333"/>
</kw>
<msg timestamp="20230309 16:55:58.333" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230309 16:55:58.318" endtime="20230309 16:55:58.333"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 16:55:58.334" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 16:55:58.333" endtime="20230309 16:55:58.334"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:55:58.340" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:55:58.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:55:58.385" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:55:58.337" endtime="20230309 16:55:58.385"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:55:58.387" level="INFO"/>
<status status="PASS" starttime="20230309 16:55:58.386" endtime="20230309 16:55:58.387"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:55:58.388" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:55:58.387" endtime="20230309 16:55:58.388"/>
</kw>
<status status="PASS" starttime="20230309 16:55:58.336" endtime="20230309 16:55:58.389"/>
</kw>
<msg timestamp="20230309 16:55:58.389" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:55:58.336" endtime="20230309 16:55:58.389"/>
</kw>
<status status="PASS" starttime="20230309 16:55:58.335" endtime="20230309 16:55:58.390"/>
</kw>
<status status="PASS" starttime="20230309 16:55:58.334" endtime="20230309 16:55:58.390"/>
</kw>
<status status="PASS" starttime="20230309 16:55:58.317" endtime="20230309 16:55:58.390"/>
</kw>
<status status="PASS" starttime="20230309 16:55:58.317" endtime="20230309 16:55:58.390"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:55:58.397" level="INFO">Running command 'ozone sh bucket create o3://om:9862/97126-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:56:04.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:56:04.837" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:55:58.394" endtime="20230309 16:56:04.837"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:56:04.839" level="INFO"/>
<status status="PASS" starttime="20230309 16:56:04.838" endtime="20230309 16:56:04.839"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:56:04.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:56:04.839" endtime="20230309 16:56:04.841"/>
</kw>
<status status="PASS" starttime="20230309 16:55:58.393" endtime="20230309 16:56:04.841"/>
</kw>
<msg timestamp="20230309 16:56:04.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:55:58.393" endtime="20230309 16:56:04.842"/>
</kw>
<status status="PASS" starttime="20230309 16:55:58.392" endtime="20230309 16:56:04.842"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:56:04.848" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/97126-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:56:11.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:56:11.816" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230309 16:56:04.845" endtime="20230309 16:56:11.816"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:56:11.818" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230309 16:56:11.817" endtime="20230309 16:56:11.818"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:56:11.819" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:56:11.818" endtime="20230309 16:56:11.819"/>
</kw>
<status status="PASS" starttime="20230309 16:56:04.844" endtime="20230309 16:56:11.820"/>
</kw>
<msg timestamp="20230309 16:56:11.820" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:56:04.844" endtime="20230309 16:56:11.821"/>
</kw>
<msg timestamp="20230309 16:56:11.822" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230309 16:56:04.843" endtime="20230309 16:56:11.822"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230309 16:56:11.822" endtime="20230309 16:56:11.823"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:56:11.829" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/97126-acls/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:56:18.025" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:56:18.025" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20230309 16:56:11.825" endtime="20230309 16:56:18.025"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:56:18.027" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20230309 16:56:18.026" endtime="20230309 16:56:18.027"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:56:18.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:56:18.027" endtime="20230309 16:56:18.028"/>
</kw>
<status status="PASS" starttime="20230309 16:56:11.825" endtime="20230309 16:56:18.029"/>
</kw>
<msg timestamp="20230309 16:56:18.029" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:56:11.824" endtime="20230309 16:56:18.029"/>
</kw>
<msg timestamp="20230309 16:56:18.030" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20230309 16:56:11.823" endtime="20230309 16:56:18.030"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:56:18.035" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/97126-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:56:24.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:56:24.431" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230309 16:56:18.032" endtime="20230309 16:56:24.431"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:56:24.432" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230309 16:56:24.432" endtime="20230309 16:56:24.433"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:56:24.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:56:24.433" endtime="20230309 16:56:24.434"/>
</kw>
<status status="PASS" starttime="20230309 16:56:18.032" endtime="20230309 16:56:24.434"/>
</kw>
<msg timestamp="20230309 16:56:24.434" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:56:18.031" endtime="20230309 16:56:24.435"/>
</kw>
<msg timestamp="20230309 16:56:24.435" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230309 16:56:18.030" endtime="20230309 16:56:24.435"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230309 16:56:24.435" endtime="20230309 16:56:24.436"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:56:24.441" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/97126-acls/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:56:30.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:56:30.383" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230309 16:56:24.439" endtime="20230309 16:56:30.383"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:56:30.385" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230309 16:56:30.384" endtime="20230309 16:56:30.385"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:56:30.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:56:30.385" endtime="20230309 16:56:30.386"/>
</kw>
<status status="PASS" starttime="20230309 16:56:24.438" endtime="20230309 16:56:30.386"/>
</kw>
<msg timestamp="20230309 16:56:30.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:56:24.438" endtime="20230309 16:56:30.387"/>
</kw>
<msg timestamp="20230309 16:56:30.388" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230309 16:56:24.437" endtime="20230309 16:56:30.388"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:56:30.393" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/97126-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:56:36.895" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:56:36.895" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230309 16:56:30.390" endtime="20230309 16:56:36.895"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:56:36.897" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230309 16:56:36.896" endtime="20230309 16:56:36.898"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:56:36.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:56:36.898" endtime="20230309 16:56:36.898"/>
</kw>
<status status="PASS" starttime="20230309 16:56:30.389" endtime="20230309 16:56:36.899"/>
</kw>
<msg timestamp="20230309 16:56:36.899" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:56:30.389" endtime="20230309 16:56:36.900"/>
</kw>
<msg timestamp="20230309 16:56:36.900" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230309 16:56:30.388" endtime="20230309 16:56:36.900"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230309 16:56:36.900" endtime="20230309 16:56:36.901"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:56:36.906" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/97126-acls/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:56:43.126" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:56:43.126" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230309 16:56:36.903" endtime="20230309 16:56:43.127"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:56:43.129" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20230309 16:56:43.127" endtime="20230309 16:56:43.129"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:56:43.130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:56:43.129" endtime="20230309 16:56:43.130"/>
</kw>
<status status="PASS" starttime="20230309 16:56:36.903" endtime="20230309 16:56:43.131"/>
</kw>
<msg timestamp="20230309 16:56:43.131" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:56:36.902" endtime="20230309 16:56:43.131"/>
</kw>
<msg timestamp="20230309 16:56:43.132" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230309 16:56:36.901" endtime="20230309 16:56:43.132"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:56:43.137" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/97126-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:56:49.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:56:49.896" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20230309 16:56:43.134" endtime="20230309 16:56:49.896"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:56:49.898" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230309 16:56:49.897" endtime="20230309 16:56:49.898"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:56:49.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:56:49.898" endtime="20230309 16:56:49.899"/>
</kw>
<status status="PASS" starttime="20230309 16:56:43.134" endtime="20230309 16:56:49.899"/>
</kw>
<msg timestamp="20230309 16:56:49.899" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:56:43.133" endtime="20230309 16:56:49.900"/>
</kw>
<msg timestamp="20230309 16:56:49.901" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20230309 16:56:43.132" endtime="20230309 16:56:49.901"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230309 16:56:49.901" endtime="20230309 16:56:49.902"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230309 16:56:49.902" endtime="20230309 16:56:49.903"/>
</kw>
<status status="PASS" starttime="20230309 16:55:58.391" endtime="20230309 16:56:49.903"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230309 16:55:58.316" endtime="20230309 16:56:49.904"/>
</test>
<test id="s1-s1-s5-t5" name="RpcClient key acls" line="38">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:56:49.912" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:56:49.916" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:56:49.916" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230309 16:56:49.908" endtime="20230309 16:56:49.916"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:56:49.918" level="INFO">scm</msg>
<status status="PASS" starttime="20230309 16:56:49.917" endtime="20230309 16:56:49.918"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:56:49.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:56:49.918" endtime="20230309 16:56:49.919"/>
</kw>
<status status="PASS" starttime="20230309 16:56:49.908" endtime="20230309 16:56:49.920"/>
</kw>
<msg timestamp="20230309 16:56:49.920" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:56:49.908" endtime="20230309 16:56:49.920"/>
</kw>
<msg timestamp="20230309 16:56:49.921" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230309 16:56:49.907" endtime="20230309 16:56:49.921"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 16:56:49.921" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 16:56:49.921" endtime="20230309 16:56:49.922"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:56:49.927" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:56:49.991" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:56:49.991" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:56:49.925" endtime="20230309 16:56:49.991"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:56:49.993" level="INFO"/>
<status status="PASS" starttime="20230309 16:56:49.991" endtime="20230309 16:56:49.993"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:56:49.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:56:49.993" endtime="20230309 16:56:49.994"/>
</kw>
<status status="PASS" starttime="20230309 16:56:49.924" endtime="20230309 16:56:49.994"/>
</kw>
<msg timestamp="20230309 16:56:49.994" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:56:49.923" endtime="20230309 16:56:49.995"/>
</kw>
<status status="PASS" starttime="20230309 16:56:49.922" endtime="20230309 16:56:49.995"/>
</kw>
<status status="PASS" starttime="20230309 16:56:49.922" endtime="20230309 16:56:49.995"/>
</kw>
<status status="PASS" starttime="20230309 16:56:49.906" endtime="20230309 16:56:49.996"/>
</kw>
<status status="PASS" starttime="20230309 16:56:49.906" endtime="20230309 16:56:49.996"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:56:50.002" level="INFO">Running command 'ozone sh key put o3://om:9862/97126-acls/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:56:58.808" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:56:58.808" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:56:49.999" endtime="20230309 16:56:58.808"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:56:58.809" level="INFO"/>
<status status="PASS" starttime="20230309 16:56:58.808" endtime="20230309 16:56:58.809"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:56:58.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:56:58.810" endtime="20230309 16:56:58.811"/>
</kw>
<status status="PASS" starttime="20230309 16:56:49.998" endtime="20230309 16:56:58.811"/>
</kw>
<msg timestamp="20230309 16:56:58.811" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:56:49.998" endtime="20230309 16:56:58.812"/>
</kw>
<status status="PASS" starttime="20230309 16:56:49.997" endtime="20230309 16:56:58.812"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:56:58.818" level="INFO">Running command 'ozone sh key getacl o3://om:9862/97126-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:57:06.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:57:06.168" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230309 16:56:58.815" endtime="20230309 16:57:06.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:57:06.170" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230309 16:57:06.169" endtime="20230309 16:57:06.170"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:57:06.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:57:06.170" endtime="20230309 16:57:06.171"/>
</kw>
<status status="PASS" starttime="20230309 16:56:58.814" endtime="20230309 16:57:06.172"/>
</kw>
<msg timestamp="20230309 16:57:06.172" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:56:58.814" endtime="20230309 16:57:06.173"/>
</kw>
<msg timestamp="20230309 16:57:06.173" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230309 16:56:58.813" endtime="20230309 16:57:06.173"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230309 16:57:06.173" endtime="20230309 16:57:06.174"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:57:06.179" level="INFO">Running command 'ozone sh key addacl o3://om:9862/97126-acls/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:57:12.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:57:12.435" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230309 16:57:06.176" endtime="20230309 16:57:12.435"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:57:12.437" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230309 16:57:12.436" endtime="20230309 16:57:12.437"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:57:12.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:57:12.437" endtime="20230309 16:57:12.438"/>
</kw>
<status status="PASS" starttime="20230309 16:57:06.176" endtime="20230309 16:57:12.439"/>
</kw>
<msg timestamp="20230309 16:57:12.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:57:06.175" endtime="20230309 16:57:12.439"/>
</kw>
<msg timestamp="20230309 16:57:12.440" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230309 16:57:06.174" endtime="20230309 16:57:12.440"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:57:12.445" level="INFO">Running command 'ozone sh key getacl o3://om:9862/97126-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:57:18.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:57:18.522" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230309 16:57:12.442" endtime="20230309 16:57:18.522"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:57:18.524" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20230309 16:57:18.523" endtime="20230309 16:57:18.524"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:57:18.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:57:18.524" endtime="20230309 16:57:18.525"/>
</kw>
<status status="PASS" starttime="20230309 16:57:12.441" endtime="20230309 16:57:18.525"/>
</kw>
<msg timestamp="20230309 16:57:18.526" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:57:12.441" endtime="20230309 16:57:18.526"/>
</kw>
<msg timestamp="20230309 16:57:18.527" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230309 16:57:12.440" endtime="20230309 16:57:18.527"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230309 16:57:18.527" endtime="20230309 16:57:18.528"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:57:18.533" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/97126-acls/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:57:24.626" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:57:24.626" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230309 16:57:18.530" endtime="20230309 16:57:24.626"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:57:24.629" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230309 16:57:24.627" endtime="20230309 16:57:24.629"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:57:24.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:57:24.629" endtime="20230309 16:57:24.630"/>
</kw>
<status status="PASS" starttime="20230309 16:57:18.530" endtime="20230309 16:57:24.630"/>
</kw>
<msg timestamp="20230309 16:57:24.630" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:57:18.529" endtime="20230309 16:57:24.631"/>
</kw>
<msg timestamp="20230309 16:57:24.631" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230309 16:57:18.528" endtime="20230309 16:57:24.631"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:57:24.636" level="INFO">Running command 'ozone sh key getacl o3://om:9862/97126-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:57:30.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:57:30.957" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230309 16:57:24.633" endtime="20230309 16:57:30.957"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:57:30.959" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20230309 16:57:30.958" endtime="20230309 16:57:30.959"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:57:30.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:57:30.959" endtime="20230309 16:57:30.960"/>
</kw>
<status status="PASS" starttime="20230309 16:57:24.632" endtime="20230309 16:57:30.960"/>
</kw>
<msg timestamp="20230309 16:57:30.960" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:57:24.632" endtime="20230309 16:57:30.961"/>
</kw>
<msg timestamp="20230309 16:57:30.961" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230309 16:57:24.631" endtime="20230309 16:57:30.961"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230309 16:57:30.961" endtime="20230309 16:57:30.962"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:57:30.967" level="INFO">Running command 'ozone sh key setacl o3://om:9862/97126-acls/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:57:37.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:57:37.022" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230309 16:57:30.964" endtime="20230309 16:57:37.022"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:57:37.024" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20230309 16:57:37.023" endtime="20230309 16:57:37.024"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:57:37.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:57:37.024" endtime="20230309 16:57:37.026"/>
</kw>
<status status="PASS" starttime="20230309 16:57:30.963" endtime="20230309 16:57:37.026"/>
</kw>
<msg timestamp="20230309 16:57:37.026" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:57:30.963" endtime="20230309 16:57:37.027"/>
</kw>
<msg timestamp="20230309 16:57:37.027" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230309 16:57:30.962" endtime="20230309 16:57:37.027"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:57:37.033" level="INFO">Running command 'ozone sh key getacl o3://om:9862/97126-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:57:43.738" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:57:43.738" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20230309 16:57:37.030" endtime="20230309 16:57:43.738"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:57:43.739" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20230309 16:57:43.738" endtime="20230309 16:57:43.739"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:57:43.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:57:43.739" endtime="20230309 16:57:43.740"/>
</kw>
<status status="PASS" starttime="20230309 16:57:37.029" endtime="20230309 16:57:43.740"/>
</kw>
<msg timestamp="20230309 16:57:43.740" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:57:37.029" endtime="20230309 16:57:43.741"/>
</kw>
<msg timestamp="20230309 16:57:43.741" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20230309 16:57:37.028" endtime="20230309 16:57:43.742"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230309 16:57:43.742" endtime="20230309 16:57:43.742"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230309 16:57:43.742" endtime="20230309 16:57:43.743"/>
</kw>
<status status="PASS" starttime="20230309 16:56:49.996" endtime="20230309 16:57:43.744"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230309 16:56:49.905" endtime="20230309 16:57:43.744"/>
</test>
<test id="s1-s1-s5-t6" name="RpcClient prefix acls" line="41">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:57:43.752" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:57:43.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:57:43.757" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230309 16:57:43.749" endtime="20230309 16:57:43.757"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:57:43.758" level="INFO">scm</msg>
<status status="PASS" starttime="20230309 16:57:43.757" endtime="20230309 16:57:43.758"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:57:43.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:57:43.758" endtime="20230309 16:57:43.759"/>
</kw>
<status status="PASS" starttime="20230309 16:57:43.748" endtime="20230309 16:57:43.759"/>
</kw>
<msg timestamp="20230309 16:57:43.760" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:57:43.748" endtime="20230309 16:57:43.760"/>
</kw>
<msg timestamp="20230309 16:57:43.761" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230309 16:57:43.747" endtime="20230309 16:57:43.761"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 16:57:43.762" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 16:57:43.761" endtime="20230309 16:57:43.762"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:57:43.767" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:57:43.802" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:57:43.802" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:57:43.764" endtime="20230309 16:57:43.802"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:57:43.804" level="INFO"/>
<status status="PASS" starttime="20230309 16:57:43.803" endtime="20230309 16:57:43.804"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:57:43.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:57:43.804" endtime="20230309 16:57:43.804"/>
</kw>
<status status="PASS" starttime="20230309 16:57:43.764" endtime="20230309 16:57:43.805"/>
</kw>
<msg timestamp="20230309 16:57:43.805" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:57:43.763" endtime="20230309 16:57:43.805"/>
</kw>
<status status="PASS" starttime="20230309 16:57:43.762" endtime="20230309 16:57:43.806"/>
</kw>
<status status="PASS" starttime="20230309 16:57:43.762" endtime="20230309 16:57:43.806"/>
</kw>
<status status="PASS" starttime="20230309 16:57:43.747" endtime="20230309 16:57:43.806"/>
</kw>
<status status="PASS" starttime="20230309 16:57:43.746" endtime="20230309 16:57:43.806"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:57:43.812" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/97126-acls/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:57:50.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:57:50.054" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20230309 16:57:43.809" endtime="20230309 16:57:50.054"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:57:50.056" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20230309 16:57:50.055" endtime="20230309 16:57:50.056"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:57:50.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:57:50.056" endtime="20230309 16:57:50.057"/>
</kw>
<status status="PASS" starttime="20230309 16:57:43.809" endtime="20230309 16:57:50.057"/>
</kw>
<msg timestamp="20230309 16:57:50.057" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:57:43.808" endtime="20230309 16:57:50.058"/>
</kw>
<status status="PASS" starttime="20230309 16:57:43.807" endtime="20230309 16:57:50.058"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:57:50.064" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/97126-acls/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:57:56.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:57:56.623" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20230309 16:57:50.061" endtime="20230309 16:57:56.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:57:56.624" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230309 16:57:56.624" endtime="20230309 16:57:56.625"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:57:56.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:57:56.625" endtime="20230309 16:57:56.625"/>
</kw>
<status status="PASS" starttime="20230309 16:57:50.060" endtime="20230309 16:57:56.626"/>
</kw>
<msg timestamp="20230309 16:57:56.626" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:57:50.059" endtime="20230309 16:57:56.627"/>
</kw>
<msg timestamp="20230309 16:57:56.627" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20230309 16:57:50.059" endtime="20230309 16:57:56.627"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230309 16:57:56.627" endtime="20230309 16:57:56.628"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:57:56.635" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/97126-acls/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:58:02.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:58:02.669" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20230309 16:57:56.633" endtime="20230309 16:58:02.669"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:58:02.671" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20230309 16:58:02.670" endtime="20230309 16:58:02.671"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:58:02.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:58:02.671" endtime="20230309 16:58:02.672"/>
</kw>
<status status="PASS" starttime="20230309 16:57:56.630" endtime="20230309 16:58:02.673"/>
</kw>
<msg timestamp="20230309 16:58:02.673" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:57:56.630" endtime="20230309 16:58:02.673"/>
</kw>
<msg timestamp="20230309 16:58:02.674" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20230309 16:57:56.628" endtime="20230309 16:58:02.674"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:58:02.679" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/97126-acls/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:58:09.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:58:09.143" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20230309 16:58:02.676" endtime="20230309 16:58:09.143"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:58:09.144" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230309 16:58:09.143" endtime="20230309 16:58:09.145"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:58:09.145" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:58:09.145" endtime="20230309 16:58:09.145"/>
</kw>
<status status="PASS" starttime="20230309 16:58:02.675" endtime="20230309 16:58:09.146"/>
</kw>
<msg timestamp="20230309 16:58:09.146" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:58:02.675" endtime="20230309 16:58:09.147"/>
</kw>
<msg timestamp="20230309 16:58:09.147" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20230309 16:58:02.674" endtime="20230309 16:58:09.147"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230309 16:58:09.147" endtime="20230309 16:58:09.148"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:58:09.153" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/97126-acls/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:58:14.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:58:14.968" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230309 16:58:09.151" endtime="20230309 16:58:14.968"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:58:14.972" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20230309 16:58:14.969" endtime="20230309 16:58:14.972"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:58:14.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:58:14.972" endtime="20230309 16:58:14.973"/>
</kw>
<status status="PASS" starttime="20230309 16:58:09.150" endtime="20230309 16:58:14.974"/>
</kw>
<msg timestamp="20230309 16:58:14.974" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:58:09.149" endtime="20230309 16:58:14.975"/>
</kw>
<msg timestamp="20230309 16:58:14.975" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230309 16:58:09.149" endtime="20230309 16:58:14.975"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:58:14.981" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/97126-acls/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:58:21.049" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:58:21.049" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20230309 16:58:14.978" endtime="20230309 16:58:21.050"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:58:21.051" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20230309 16:58:21.050" endtime="20230309 16:58:21.052"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:58:21.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:58:21.052" endtime="20230309 16:58:21.053"/>
</kw>
<status status="PASS" starttime="20230309 16:58:14.977" endtime="20230309 16:58:21.053"/>
</kw>
<msg timestamp="20230309 16:58:21.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:58:14.977" endtime="20230309 16:58:21.054"/>
</kw>
<msg timestamp="20230309 16:58:21.055" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20230309 16:58:14.975" endtime="20230309 16:58:21.055"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230309 16:58:21.055" endtime="20230309 16:58:21.056"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230309 16:58:21.056" endtime="20230309 16:58:21.057"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:58:21.063" level="INFO">Running command 'ozone sh key put o3://om:9862/97126-acls/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:58:29.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:58:29.998" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:58:21.059" endtime="20230309 16:58:29.998"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:58:30.000" level="INFO"/>
<status status="PASS" starttime="20230309 16:58:29.999" endtime="20230309 16:58:30.000"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:58:30.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:58:30.000" endtime="20230309 16:58:30.001"/>
</kw>
<status status="PASS" starttime="20230309 16:58:21.058" endtime="20230309 16:58:30.002"/>
</kw>
<msg timestamp="20230309 16:58:30.002" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:58:21.058" endtime="20230309 16:58:30.003"/>
</kw>
<status status="PASS" starttime="20230309 16:58:21.057" endtime="20230309 16:58:30.003"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:58:30.008" level="INFO">Running command 'ozone sh key getacl o3://om:9862/97126-acls/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:58:36.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:58:36.087" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230309 16:58:30.005" endtime="20230309 16:58:36.087"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:58:36.088" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230309 16:58:36.088" endtime="20230309 16:58:36.089"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:58:36.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:58:36.089" endtime="20230309 16:58:36.089"/>
</kw>
<status status="PASS" starttime="20230309 16:58:30.004" endtime="20230309 16:58:36.090"/>
</kw>
<msg timestamp="20230309 16:58:36.090" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:58:30.004" endtime="20230309 16:58:36.090"/>
</kw>
<msg timestamp="20230309 16:58:36.091" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230309 16:58:30.003" endtime="20230309 16:58:36.091"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230309 16:58:36.091" endtime="20230309 16:58:36.091"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230309 16:58:36.092" endtime="20230309 16:58:36.092"/>
</kw>
<status status="PASS" starttime="20230309 16:57:43.806" endtime="20230309 16:58:36.093"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230309 16:57:43.745" endtime="20230309 16:58:36.093"/>
</test>
<test id="s1-s1-s5-t7" name="RpcClient without host" line="44">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:58:36.102" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:58:36.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:58:36.108" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230309 16:58:36.099" endtime="20230309 16:58:36.108"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:58:36.110" level="INFO">scm</msg>
<status status="PASS" starttime="20230309 16:58:36.109" endtime="20230309 16:58:36.110"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:58:36.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:58:36.110" endtime="20230309 16:58:36.111"/>
</kw>
<status status="PASS" starttime="20230309 16:58:36.099" endtime="20230309 16:58:36.111"/>
</kw>
<msg timestamp="20230309 16:58:36.111" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:58:36.098" endtime="20230309 16:58:36.112"/>
</kw>
<msg timestamp="20230309 16:58:36.112" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230309 16:58:36.097" endtime="20230309 16:58:36.112"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 16:58:36.113" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 16:58:36.113" endtime="20230309 16:58:36.113"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:58:36.119" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:58:36.164" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:58:36.164" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:58:36.117" endtime="20230309 16:58:36.164"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:58:36.166" level="INFO"/>
<status status="PASS" starttime="20230309 16:58:36.165" endtime="20230309 16:58:36.166"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:58:36.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:58:36.166" endtime="20230309 16:58:36.168"/>
</kw>
<status status="PASS" starttime="20230309 16:58:36.116" endtime="20230309 16:58:36.169"/>
</kw>
<msg timestamp="20230309 16:58:36.169" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:58:36.116" endtime="20230309 16:58:36.169"/>
</kw>
<status status="PASS" starttime="20230309 16:58:36.114" endtime="20230309 16:58:36.170"/>
</kw>
<status status="PASS" starttime="20230309 16:58:36.113" endtime="20230309 16:58:36.170"/>
</kw>
<status status="PASS" starttime="20230309 16:58:36.097" endtime="20230309 16:58:36.170"/>
</kw>
<status status="PASS" starttime="20230309 16:58:36.096" endtime="20230309 16:58:36.170"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-without-host</arg>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:58:36.176" level="INFO">Running command 'ozone sh volume info o3:///97126-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:58:42.383" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 16:58:42.384" level="INFO">${output} = VOLUME_NOT_FOUND Volume 97126-without-host is not found</msg>
<status status="PASS" starttime="20230309 16:58:36.173" endtime="20230309 16:58:42.384"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:58:42.385" level="INFO">VOLUME_NOT_FOUND Volume 97126-without-host is not found</msg>
<status status="PASS" starttime="20230309 16:58:42.384" endtime="20230309 16:58:42.385"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:58:42.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:58:42.385" endtime="20230309 16:58:42.386"/>
</kw>
<msg timestamp="20230309 16:58:42.386" level="INFO">${result} = VOLUME_NOT_FOUND Volume 97126-without-host is not found</msg>
<status status="PASS" starttime="20230309 16:58:36.172" endtime="20230309 16:58:42.387"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 16:58:42.387" endtime="20230309 16:58:42.387"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:58:42.392" level="INFO">Running command 'ozone sh volume create o3:///97126-without-host --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:58:48.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:58:48.210" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:58:42.390" endtime="20230309 16:58:48.210"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:58:48.212" level="INFO"/>
<status status="PASS" starttime="20230309 16:58:48.211" endtime="20230309 16:58:48.212"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:58:48.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:58:48.212" endtime="20230309 16:58:48.213"/>
</kw>
<status status="PASS" starttime="20230309 16:58:42.389" endtime="20230309 16:58:48.213"/>
</kw>
<msg timestamp="20230309 16:58:48.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:58:42.388" endtime="20230309 16:58:48.214"/>
</kw>
<msg timestamp="20230309 16:58:48.214" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 16:58:42.387" endtime="20230309 16:58:48.215"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230309 16:58:48.215" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230309 16:58:48.215" endtime="20230309 16:58:48.215"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:58:48.220" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '.[] | select(.name=="97126-without-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:58:54.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:58:54.254" level="INFO">${output} = {
  "metadata": {},
  "name": "97126-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": ...</msg>
<status status="PASS" starttime="20230309 16:58:48.217" endtime="20230309 16:58:54.254"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:58:54.256" level="INFO">{
  "metadata": {},
  "name": "97126-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2023-03-09T16:58:48.130Z",
  "modificationTime": "2023-03-09T16:58:48.130Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20230309 16:58:54.255" endtime="20230309 16:58:54.256"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:58:54.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:58:54.256" endtime="20230309 16:58:54.257"/>
</kw>
<status status="PASS" starttime="20230309 16:58:48.217" endtime="20230309 16:58:54.257"/>
</kw>
<msg timestamp="20230309 16:58:54.258" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:58:48.217" endtime="20230309 16:58:54.258"/>
</kw>
<msg timestamp="20230309 16:58:54.259" level="INFO">${result} = {
  "metadata": {},
  "name": "97126-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": ...</msg>
<status status="PASS" starttime="20230309 16:58:48.216" endtime="20230309 16:58:54.259"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 16:58:54.259" endtime="20230309 16:58:54.259"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:58:54.265" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="97126-without-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:59:00.891" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:59:00.892" level="INFO">${output} = {
  "metadata": {},
  "name": "97126-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": ...</msg>
<status status="PASS" starttime="20230309 16:58:54.262" endtime="20230309 16:59:00.892"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:59:00.894" level="INFO">{
  "metadata": {},
  "name": "97126-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2023-03-09T16:58:48.130Z",
  "modificationTime": "2023-03-09T16:58:48.130Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20230309 16:59:00.893" endtime="20230309 16:59:00.894"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:59:00.895" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:59:00.894" endtime="20230309 16:59:00.895"/>
</kw>
<status status="PASS" starttime="20230309 16:58:54.261" endtime="20230309 16:59:00.895"/>
</kw>
<msg timestamp="20230309 16:59:00.895" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:58:54.261" endtime="20230309 16:59:00.896"/>
</kw>
<msg timestamp="20230309 16:59:00.896" level="INFO">${result} = {
  "metadata": {},
  "name": "97126-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": ...</msg>
<status status="PASS" starttime="20230309 16:58:54.260" endtime="20230309 16:59:00.896"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 16:59:00.897" endtime="20230309 16:59:00.897"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:59:00.903" level="INFO">Running command 'ozone sh volume setquota o3:///97126-without-host --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:59:06.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:59:06.997" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:59:00.899" endtime="20230309 16:59:06.998"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:59:07.001" level="INFO"/>
<status status="PASS" starttime="20230309 16:59:06.999" endtime="20230309 16:59:07.001"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:59:07.003" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:59:07.001" endtime="20230309 16:59:07.003"/>
</kw>
<status status="PASS" starttime="20230309 16:59:00.899" endtime="20230309 16:59:07.003"/>
</kw>
<msg timestamp="20230309 16:59:07.003" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:59:00.898" endtime="20230309 16:59:07.004"/>
</kw>
<status status="PASS" starttime="20230309 16:59:00.897" endtime="20230309 16:59:07.004"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:59:07.008" level="INFO">Running command 'ozone sh volume info o3:///97126-without-host | jq -r '. | select(.name=="97126-without-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:59:13.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:59:13.546" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20230309 16:59:07.006" endtime="20230309 16:59:13.546"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:59:13.548" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20230309 16:59:13.547" endtime="20230309 16:59:13.548"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:59:13.549" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:59:13.548" endtime="20230309 16:59:13.549"/>
</kw>
<status status="PASS" starttime="20230309 16:59:07.005" endtime="20230309 16:59:13.549"/>
</kw>
<msg timestamp="20230309 16:59:13.549" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:59:07.005" endtime="20230309 16:59:13.550"/>
</kw>
<msg timestamp="20230309 16:59:13.551" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20230309 16:59:07.004" endtime="20230309 16:59:13.551"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 16:59:13.551" endtime="20230309 16:59:13.551"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:59:13.556" level="INFO">Running command 'ozone sh bucket create o3:///97126-without-host/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:59:19.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:59:19.552" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:59:13.554" endtime="20230309 16:59:19.552"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:59:19.554" level="INFO"/>
<status status="PASS" starttime="20230309 16:59:19.553" endtime="20230309 16:59:19.554"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:59:19.555" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:59:19.555" endtime="20230309 16:59:19.556"/>
</kw>
<status status="PASS" starttime="20230309 16:59:13.553" endtime="20230309 16:59:19.556"/>
</kw>
<msg timestamp="20230309 16:59:19.556" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:59:13.553" endtime="20230309 16:59:19.557"/>
</kw>
<msg timestamp="20230309 16:59:19.557" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 16:59:13.552" endtime="20230309 16:59:19.557"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230309 16:59:19.558" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230309 16:59:19.557" endtime="20230309 16:59:19.558"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:59:19.564" level="INFO">Running command 'ozone sh bucket info o3:///97126-without-host/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:59:25.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:59:25.696" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20230309 16:59:19.561" endtime="20230309 16:59:25.696"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:59:25.697" level="INFO">DISK</msg>
<status status="PASS" starttime="20230309 16:59:25.696" endtime="20230309 16:59:25.697"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:59:25.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:59:25.698" endtime="20230309 16:59:25.699"/>
</kw>
<status status="PASS" starttime="20230309 16:59:19.560" endtime="20230309 16:59:25.699"/>
</kw>
<msg timestamp="20230309 16:59:25.699" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:59:19.560" endtime="20230309 16:59:25.700"/>
</kw>
<msg timestamp="20230309 16:59:25.701" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20230309 16:59:19.558" endtime="20230309 16:59:25.701"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 16:59:25.701" endtime="20230309 16:59:25.701"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:59:25.707" level="INFO">Running command 'ozone sh bucket info o3:///97126-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:59:32.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:59:32.264" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20230309 16:59:25.704" endtime="20230309 16:59:32.264"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:59:32.266" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20230309 16:59:32.265" endtime="20230309 16:59:32.266"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:59:32.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:59:32.266" endtime="20230309 16:59:32.267"/>
</kw>
<status status="PASS" starttime="20230309 16:59:25.703" endtime="20230309 16:59:32.267"/>
</kw>
<msg timestamp="20230309 16:59:32.267" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:59:25.703" endtime="20230309 16:59:32.268"/>
</kw>
<msg timestamp="20230309 16:59:32.268" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20230309 16:59:25.702" endtime="20230309 16:59:32.268"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 16:59:32.268" endtime="20230309 16:59:32.269"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:59:32.274" level="INFO">Running command 'ozone sh bucket info o3:///97126-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:59:38.322" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:59:38.323" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20230309 16:59:32.272" endtime="20230309 16:59:38.323"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:59:38.324" level="INFO">100</msg>
<status status="PASS" starttime="20230309 16:59:38.323" endtime="20230309 16:59:38.325"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:59:38.326" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:59:38.325" endtime="20230309 16:59:38.326"/>
</kw>
<status status="PASS" starttime="20230309 16:59:32.271" endtime="20230309 16:59:38.326"/>
</kw>
<msg timestamp="20230309 16:59:38.326" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:59:32.271" endtime="20230309 16:59:38.327"/>
</kw>
<msg timestamp="20230309 16:59:38.327" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20230309 16:59:32.269" endtime="20230309 16:59:38.327"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 16:59:38.328" endtime="20230309 16:59:38.328"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:59:38.333" level="INFO">Running command 'ozone sh bucket setquota o3:///97126-without-host/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:59:44.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:59:44.587" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:59:38.330" endtime="20230309 16:59:44.587"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:59:44.589" level="INFO"/>
<status status="PASS" starttime="20230309 16:59:44.588" endtime="20230309 16:59:44.589"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:59:44.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:59:44.589" endtime="20230309 16:59:44.590"/>
</kw>
<status status="PASS" starttime="20230309 16:59:38.330" endtime="20230309 16:59:44.590"/>
</kw>
<msg timestamp="20230309 16:59:44.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:59:38.329" endtime="20230309 16:59:44.591"/>
</kw>
<status status="PASS" starttime="20230309 16:59:38.329" endtime="20230309 16:59:44.591"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:59:44.597" level="INFO">Running command 'ozone sh bucket info o3:///97126-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:59:50.871" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:59:50.871" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20230309 16:59:44.594" endtime="20230309 16:59:50.871"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:59:50.873" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20230309 16:59:50.872" endtime="20230309 16:59:50.873"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:59:50.873" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:59:50.873" endtime="20230309 16:59:50.874"/>
</kw>
<status status="PASS" starttime="20230309 16:59:44.593" endtime="20230309 16:59:50.874"/>
</kw>
<msg timestamp="20230309 16:59:50.874" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:59:44.593" endtime="20230309 16:59:50.875"/>
</kw>
<msg timestamp="20230309 16:59:50.875" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20230309 16:59:44.592" endtime="20230309 16:59:50.875"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 16:59:50.875" endtime="20230309 16:59:50.876"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:59:50.880" level="INFO">Running command 'ozone sh bucket info o3:///97126-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:59:57.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:59:57.017" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20230309 16:59:50.878" endtime="20230309 16:59:57.017"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:59:57.019" level="INFO">1000</msg>
<status status="PASS" starttime="20230309 16:59:57.018" endtime="20230309 16:59:57.019"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:59:57.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:59:57.019" endtime="20230309 16:59:57.020"/>
</kw>
<status status="PASS" starttime="20230309 16:59:50.877" endtime="20230309 16:59:57.021"/>
</kw>
<msg timestamp="20230309 16:59:57.021" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:59:50.877" endtime="20230309 16:59:57.022"/>
</kw>
<msg timestamp="20230309 16:59:57.022" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20230309 16:59:50.876" endtime="20230309 16:59:57.023"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 16:59:57.023" endtime="20230309 16:59:57.023"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:59:57.029" level="INFO">Running command 'ozone sh bucket list o3:///97126-without-host/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:00:03.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:00:03.124" level="INFO">${output} = 97126-without-host</msg>
<status status="PASS" starttime="20230309 16:59:57.026" endtime="20230309 17:00:03.124"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:00:03.126" level="INFO">97126-without-host</msg>
<status status="PASS" starttime="20230309 17:00:03.125" endtime="20230309 17:00:03.127"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:00:03.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:00:03.127" endtime="20230309 17:00:03.128"/>
</kw>
<status status="PASS" starttime="20230309 16:59:57.025" endtime="20230309 17:00:03.128"/>
</kw>
<msg timestamp="20230309 17:00:03.128" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:59:57.025" endtime="20230309 17:00:03.129"/>
</kw>
<msg timestamp="20230309 17:00:03.130" level="INFO">${result} = 97126-without-host</msg>
<status status="PASS" starttime="20230309 16:59:57.024" endtime="20230309 17:00:03.130"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 17:00:03.130" endtime="20230309 17:00:03.131"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:00:03.142" level="INFO">Running command 'ozone sh key put o3:///97126-without-host/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:00:13.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:00:13.284" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:00:03.135" endtime="20230309 17:00:13.284"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:00:13.286" level="INFO"/>
<status status="PASS" starttime="20230309 17:00:13.285" endtime="20230309 17:00:13.286"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:00:13.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:00:13.286" endtime="20230309 17:00:13.287"/>
</kw>
<status status="PASS" starttime="20230309 17:00:03.134" endtime="20230309 17:00:13.288"/>
</kw>
<msg timestamp="20230309 17:00:13.288" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:00:03.134" endtime="20230309 17:00:13.289"/>
</kw>
<status status="PASS" starttime="20230309 17:00:03.133" endtime="20230309 17:00:13.289"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:00:13.295" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:00:13.299" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:00:13.300" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:00:13.291" endtime="20230309 17:00:13.300"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:00:13.301" level="INFO"/>
<status status="PASS" starttime="20230309 17:00:13.300" endtime="20230309 17:00:13.301"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:00:13.302" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:00:13.301" endtime="20230309 17:00:13.302"/>
</kw>
<status status="PASS" starttime="20230309 17:00:13.290" endtime="20230309 17:00:13.303"/>
</kw>
<msg timestamp="20230309 17:00:13.303" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:00:13.290" endtime="20230309 17:00:13.304"/>
</kw>
<status status="PASS" starttime="20230309 17:00:13.289" endtime="20230309 17:00:13.304"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:00:13.309" level="INFO">Running command 'ozone sh key get o3:///97126-without-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:00:21.914" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:00:21.915" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:00:13.306" endtime="20230309 17:00:21.915"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:00:21.916" level="INFO"/>
<status status="PASS" starttime="20230309 17:00:21.915" endtime="20230309 17:00:21.917"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:00:21.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:00:21.917" endtime="20230309 17:00:21.917"/>
</kw>
<status status="PASS" starttime="20230309 17:00:13.305" endtime="20230309 17:00:21.918"/>
</kw>
<msg timestamp="20230309 17:00:21.918" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:00:13.305" endtime="20230309 17:00:21.919"/>
</kw>
<status status="PASS" starttime="20230309 17:00:13.304" endtime="20230309 17:00:21.919"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:00:21.925" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:00:21.927" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:00:21.928" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:00:21.922" endtime="20230309 17:00:21.928"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:00:21.929" level="INFO"/>
<status status="PASS" starttime="20230309 17:00:21.928" endtime="20230309 17:00:21.929"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:00:21.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:00:21.929" endtime="20230309 17:00:21.929"/>
</kw>
<status status="PASS" starttime="20230309 17:00:21.920" endtime="20230309 17:00:21.930"/>
</kw>
<msg timestamp="20230309 17:00:21.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:00:21.920" endtime="20230309 17:00:21.931"/>
</kw>
<status status="PASS" starttime="20230309 17:00:21.919" endtime="20230309 17:00:21.931"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:00:21.936" level="INFO">Running command 'ozone sh key put -t RATIS o3:///97126-without-host/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:00:31.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:00:31.015" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:00:21.934" endtime="20230309 17:00:31.015"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:00:31.017" level="INFO"/>
<status status="PASS" starttime="20230309 17:00:31.015" endtime="20230309 17:00:31.017"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:00:31.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:00:31.017" endtime="20230309 17:00:31.018"/>
</kw>
<status status="PASS" starttime="20230309 17:00:21.933" endtime="20230309 17:00:31.018"/>
</kw>
<msg timestamp="20230309 17:00:31.019" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:00:21.933" endtime="20230309 17:00:31.019"/>
</kw>
<status status="PASS" starttime="20230309 17:00:21.932" endtime="20230309 17:00:31.020"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:00:31.026" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:00:31.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:00:31.031" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:00:31.022" endtime="20230309 17:00:31.031"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:00:31.032" level="INFO"/>
<status status="PASS" starttime="20230309 17:00:31.031" endtime="20230309 17:00:31.032"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:00:31.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:00:31.033" endtime="20230309 17:00:31.034"/>
</kw>
<status status="PASS" starttime="20230309 17:00:31.021" endtime="20230309 17:00:31.034"/>
</kw>
<msg timestamp="20230309 17:00:31.034" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:00:31.020" endtime="20230309 17:00:31.035"/>
</kw>
<status status="PASS" starttime="20230309 17:00:31.020" endtime="20230309 17:00:31.035"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:00:31.040" level="INFO">Running command 'ozone sh key get o3:///97126-without-host/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:00:40.256" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:00:40.257" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:00:31.037" endtime="20230309 17:00:40.257"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:00:40.259" level="INFO"/>
<status status="PASS" starttime="20230309 17:00:40.257" endtime="20230309 17:00:40.259"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:00:40.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:00:40.259" endtime="20230309 17:00:40.260"/>
</kw>
<status status="PASS" starttime="20230309 17:00:31.037" endtime="20230309 17:00:40.260"/>
</kw>
<msg timestamp="20230309 17:00:40.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:00:31.036" endtime="20230309 17:00:40.262"/>
</kw>
<status status="PASS" starttime="20230309 17:00:31.035" endtime="20230309 17:00:40.263"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:00:40.268" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:00:40.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:00:40.272" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:00:40.265" endtime="20230309 17:00:40.272"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:00:40.274" level="INFO"/>
<status status="PASS" starttime="20230309 17:00:40.273" endtime="20230309 17:00:40.274"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:00:40.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:00:40.274" endtime="20230309 17:00:40.275"/>
</kw>
<status status="PASS" starttime="20230309 17:00:40.264" endtime="20230309 17:00:40.275"/>
</kw>
<msg timestamp="20230309 17:00:40.276" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:00:40.264" endtime="20230309 17:00:40.276"/>
</kw>
<status status="PASS" starttime="20230309 17:00:40.263" endtime="20230309 17:00:40.277"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:00:40.284" level="INFO">Running command 'ozone sh key info o3:///97126-without-host/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:00:46.820" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:00:46.820" level="INFO">${output} = {
  "volumeName": "97126-without-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17539,
  "creationTime": "2023-03-09T17:00:27.959Z",
  "modificationTime": "2023-03-09T17:00:30.508...</msg>
<status status="PASS" starttime="20230309 17:00:40.280" endtime="20230309 17:00:46.820"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:00:46.822" level="INFO">{
  "volumeName": "97126-without-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17539,
  "creationTime": "2023-03-09T17:00:27.959Z",
  "modificationTime": "2023-03-09T17:00:30.508Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 111677748019200020,
      "length": 17539,
      "offset": 0,
      "keyOffset": 0
    }
  ]
}</msg>
<status status="PASS" starttime="20230309 17:00:46.821" endtime="20230309 17:00:46.822"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:00:46.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:00:46.822" endtime="20230309 17:00:46.823"/>
</kw>
<status status="PASS" starttime="20230309 17:00:40.279" endtime="20230309 17:00:46.823"/>
</kw>
<msg timestamp="20230309 17:00:46.824" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:00:40.279" endtime="20230309 17:00:46.824"/>
</kw>
<msg timestamp="20230309 17:00:46.825" level="INFO">${result} = {
  "volumeName": "97126-without-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17539,
  "creationTime": "2023-03-09T17:00:27.959Z",
  "modificationTime": "2023-03-09T17:00:30.508...</msg>
<status status="PASS" starttime="20230309 17:00:40.277" endtime="20230309 17:00:46.825"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:00:46.825" endtime="20230309 17:00:46.825"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:00:46.830" level="INFO">Running command 'ozone sh key delete o3:///97126-without-host/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:00:52.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:00:52.709" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:00:46.827" endtime="20230309 17:00:52.709"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:00:52.710" level="INFO"/>
<status status="PASS" starttime="20230309 17:00:52.709" endtime="20230309 17:00:52.710"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:00:52.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:00:52.710" endtime="20230309 17:00:52.711"/>
</kw>
<status status="PASS" starttime="20230309 17:00:46.827" endtime="20230309 17:00:52.712"/>
</kw>
<msg timestamp="20230309 17:00:52.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:00:46.826" endtime="20230309 17:00:52.713"/>
</kw>
<status status="PASS" starttime="20230309 17:00:46.825" endtime="20230309 17:00:52.713"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:00:52.717" level="INFO">Running command 'ozone sh key cp o3:///97126-without-host/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:01:01.621" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:01:01.621" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:00:52.715" endtime="20230309 17:01:01.621"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:01:01.623" level="INFO"/>
<status status="PASS" starttime="20230309 17:01:01.622" endtime="20230309 17:01:01.623"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:01:01.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:01:01.623" endtime="20230309 17:01:01.624"/>
</kw>
<status status="PASS" starttime="20230309 17:00:52.714" endtime="20230309 17:01:01.624"/>
</kw>
<msg timestamp="20230309 17:01:01.624" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:00:52.714" endtime="20230309 17:01:01.625"/>
</kw>
<status status="PASS" starttime="20230309 17:00:52.713" endtime="20230309 17:01:01.626"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:01:01.631" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:01:01.634" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:01:01.634" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:01:01.628" endtime="20230309 17:01:01.634"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:01:01.636" level="INFO"/>
<status status="PASS" starttime="20230309 17:01:01.635" endtime="20230309 17:01:01.636"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:01:01.637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:01:01.636" endtime="20230309 17:01:01.637"/>
</kw>
<status status="PASS" starttime="20230309 17:01:01.627" endtime="20230309 17:01:01.638"/>
</kw>
<msg timestamp="20230309 17:01:01.638" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:01:01.627" endtime="20230309 17:01:01.640"/>
</kw>
<status status="PASS" starttime="20230309 17:01:01.626" endtime="20230309 17:01:01.640"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:01:01.650" level="INFO">Running command 'ozone sh key get o3:///97126-without-host/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:01:10.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:01:10.176" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:01:01.644" endtime="20230309 17:01:10.176"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:01:10.178" level="INFO"/>
<status status="PASS" starttime="20230309 17:01:10.177" endtime="20230309 17:01:10.178"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:01:10.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:01:10.178" endtime="20230309 17:01:10.179"/>
</kw>
<status status="PASS" starttime="20230309 17:01:01.643" endtime="20230309 17:01:10.180"/>
</kw>
<msg timestamp="20230309 17:01:10.180" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:01:01.643" endtime="20230309 17:01:10.180"/>
</kw>
<status status="PASS" starttime="20230309 17:01:01.640" endtime="20230309 17:01:10.181"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:01:10.187" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:01:10.191" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:01:10.192" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:01:10.183" endtime="20230309 17:01:10.192"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:01:10.193" level="INFO"/>
<status status="PASS" starttime="20230309 17:01:10.192" endtime="20230309 17:01:10.193"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:01:10.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:01:10.194" endtime="20230309 17:01:10.194"/>
</kw>
<status status="PASS" starttime="20230309 17:01:10.183" endtime="20230309 17:01:10.195"/>
</kw>
<msg timestamp="20230309 17:01:10.195" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:01:10.182" endtime="20230309 17:01:10.196"/>
</kw>
<status status="PASS" starttime="20230309 17:01:10.181" endtime="20230309 17:01:10.196"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:01:10.201" level="INFO">Running command 'ozone sh key delete o3:///97126-without-host/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:01:16.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:01:16.268" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:01:10.199" endtime="20230309 17:01:16.268"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:01:16.270" level="INFO"/>
<status status="PASS" starttime="20230309 17:01:16.269" endtime="20230309 17:01:16.270"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:01:16.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:01:16.270" endtime="20230309 17:01:16.272"/>
</kw>
<status status="PASS" starttime="20230309 17:01:10.198" endtime="20230309 17:01:16.272"/>
</kw>
<msg timestamp="20230309 17:01:16.272" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:01:10.197" endtime="20230309 17:01:16.273"/>
</kw>
<status status="PASS" starttime="20230309 17:01:10.196" endtime="20230309 17:01:16.273"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:01:16.278" level="INFO">Running command 'ozone sh key get o3:///97126-without-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:01:22.186" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:01:22.186" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230309 17:01:16.275" endtime="20230309 17:01:22.186"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:01:22.188" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230309 17:01:22.187" endtime="20230309 17:01:22.188"/>
</kw>
<msg timestamp="20230309 17:01:22.189" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230309 17:01:16.274" endtime="20230309 17:01:22.189"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:01:22.189" endtime="20230309 17:01:22.190"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:01:22.195" level="INFO">Running command 'ozone sh key get --force o3:///97126-without-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:01:30.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:01:30.543" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:01:22.192" endtime="20230309 17:01:30.544"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:01:30.545" level="INFO"/>
<status status="PASS" starttime="20230309 17:01:30.544" endtime="20230309 17:01:30.546"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:01:30.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:01:30.546" endtime="20230309 17:01:30.547"/>
</kw>
<status status="PASS" starttime="20230309 17:01:22.192" endtime="20230309 17:01:30.548"/>
</kw>
<msg timestamp="20230309 17:01:30.548" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:01:22.191" endtime="20230309 17:01:30.549"/>
</kw>
<msg timestamp="20230309 17:01:30.549" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 17:01:22.190" endtime="20230309 17:01:30.549"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:01:30.550" endtime="20230309 17:01:30.551"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:01:30.557" level="INFO">Running command 'ozone sh key info o3:///97126-without-host/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:01:37.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:01:37.061" level="INFO">${output} = {
  "volumeName": "97126-without-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17539,
  "creationTime": "2023-03-09T17:00:09.768Z",
  "modificationTime": "2023-03-09T17:00:12.514Z",
  ...</msg>
<status status="PASS" starttime="20230309 17:01:30.554" endtime="20230309 17:01:37.061"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:01:37.063" level="INFO">{
  "volumeName": "97126-without-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17539,
  "creationTime": "2023-03-09T17:00:09.768Z",
  "modificationTime": "2023-03-09T17:00:12.514Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 111677748019200020,
      "length": 17539,
      "offset": 0,
      "keyOffset": 0
    }
  ]
}</msg>
<status status="PASS" starttime="20230309 17:01:37.061" endtime="20230309 17:01:37.063"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:01:37.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:01:37.063" endtime="20230309 17:01:37.064"/>
</kw>
<status status="PASS" starttime="20230309 17:01:30.553" endtime="20230309 17:01:37.065"/>
</kw>
<msg timestamp="20230309 17:01:37.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:01:30.552" endtime="20230309 17:01:37.066"/>
</kw>
<msg timestamp="20230309 17:01:37.066" level="INFO">${result} = {
  "volumeName": "97126-without-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17539,
  "creationTime": "2023-03-09T17:00:09.768Z",
  "modificationTime": "2023-03-09T17:00:12.514Z",
  ...</msg>
<status status="PASS" starttime="20230309 17:01:30.551" endtime="20230309 17:01:37.067"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:01:37.067" endtime="20230309 17:01:37.067"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:01:37.073" level="INFO">Running command 'ozone sh key list o3:///97126-without-host/bb1 | jq -r '.[] | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:01:43.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:01:43.552" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20230309 17:01:37.070" endtime="20230309 17:01:43.552"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:01:43.553" level="INFO">key1</msg>
<status status="PASS" starttime="20230309 17:01:43.552" endtime="20230309 17:01:43.553"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:01:43.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:01:43.553" endtime="20230309 17:01:43.554"/>
</kw>
<status status="PASS" starttime="20230309 17:01:37.069" endtime="20230309 17:01:43.554"/>
</kw>
<msg timestamp="20230309 17:01:43.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:01:37.069" endtime="20230309 17:01:43.555"/>
</kw>
<msg timestamp="20230309 17:01:43.556" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20230309 17:01:37.068" endtime="20230309 17:01:43.556"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 17:01:43.556" endtime="20230309 17:01:43.557"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:01:43.562" level="INFO">Running command 'ozone sh key rename o3:///97126-without-host/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:01:50.323" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:01:50.323" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:01:43.559" endtime="20230309 17:01:50.323"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:01:50.324" level="INFO"/>
<status status="PASS" starttime="20230309 17:01:50.323" endtime="20230309 17:01:50.324"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:01:50.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:01:50.325" endtime="20230309 17:01:50.325"/>
</kw>
<status status="PASS" starttime="20230309 17:01:43.558" endtime="20230309 17:01:50.326"/>
</kw>
<msg timestamp="20230309 17:01:50.326" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:01:43.558" endtime="20230309 17:01:50.326"/>
</kw>
<status status="PASS" starttime="20230309 17:01:43.557" endtime="20230309 17:01:50.327"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:01:50.331" level="INFO">Running command 'ozone sh key list o3:///97126-without-host/bb1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:01:56.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:01:56.977" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20230309 17:01:50.328" endtime="20230309 17:01:56.977"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:01:56.978" level="INFO">key2</msg>
<status status="PASS" starttime="20230309 17:01:56.977" endtime="20230309 17:01:56.979"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:01:56.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:01:56.979" endtime="20230309 17:01:56.979"/>
</kw>
<status status="PASS" starttime="20230309 17:01:50.328" endtime="20230309 17:01:56.980"/>
</kw>
<msg timestamp="20230309 17:01:56.980" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:01:50.328" endtime="20230309 17:01:56.981"/>
</kw>
<msg timestamp="20230309 17:01:56.981" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20230309 17:01:50.327" endtime="20230309 17:01:56.981"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 17:01:56.982" endtime="20230309 17:01:56.982"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:01:56.988" level="INFO">Running command 'ozone sh key delete o3:///97126-without-host/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:02:02.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:02:02.880" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:01:56.985" endtime="20230309 17:02:02.880"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:02:02.881" level="INFO"/>
<status status="PASS" starttime="20230309 17:02:02.880" endtime="20230309 17:02:02.881"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:02:02.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:02:02.881" endtime="20230309 17:02:02.882"/>
</kw>
<status status="PASS" starttime="20230309 17:01:56.984" endtime="20230309 17:02:02.883"/>
</kw>
<msg timestamp="20230309 17:02:02.883" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:01:56.983" endtime="20230309 17:02:02.884"/>
</kw>
<status status="PASS" starttime="20230309 17:01:56.982" endtime="20230309 17:02:02.884"/>
</kw>
<status status="PASS" starttime="20230309 17:00:03.132" endtime="20230309 17:02:02.884"/>
</kw>
<status status="PASS" starttime="20230309 17:00:03.131" endtime="20230309 17:02:02.884"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:02:02.890" level="INFO">Running command 'ozone sh volume clrquota --space-quota o3:///97126-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:02:08.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:02:08.696" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:02:02.886" endtime="20230309 17:02:08.696"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:02:08.699" level="INFO"/>
<status status="PASS" starttime="20230309 17:02:08.697" endtime="20230309 17:02:08.699"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:02:08.700" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:02:08.699" endtime="20230309 17:02:08.700"/>
</kw>
<status status="PASS" starttime="20230309 17:02:02.886" endtime="20230309 17:02:08.701"/>
</kw>
<msg timestamp="20230309 17:02:08.701" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:02:02.885" endtime="20230309 17:02:08.702"/>
</kw>
<status status="PASS" starttime="20230309 17:02:02.885" endtime="20230309 17:02:08.702"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:02:08.708" level="INFO">Running command 'ozone sh volume info o3:///97126-without-host | jq -r '. | select(.name=="97126-without-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:02:15.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:02:15.115" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230309 17:02:08.705" endtime="20230309 17:02:15.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:02:15.117" level="INFO">-1</msg>
<status status="PASS" starttime="20230309 17:02:15.116" endtime="20230309 17:02:15.117"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:02:15.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:02:15.117" endtime="20230309 17:02:15.118"/>
</kw>
<status status="PASS" starttime="20230309 17:02:08.704" endtime="20230309 17:02:15.119"/>
</kw>
<msg timestamp="20230309 17:02:15.119" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:02:08.704" endtime="20230309 17:02:15.120"/>
</kw>
<msg timestamp="20230309 17:02:15.120" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230309 17:02:08.702" endtime="20230309 17:02:15.120"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 17:02:15.121" endtime="20230309 17:02:15.121"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:02:15.127" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota o3:///97126-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:02:21.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:02:21.248" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:02:15.124" endtime="20230309 17:02:21.248"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:02:21.250" level="INFO"/>
<status status="PASS" starttime="20230309 17:02:21.249" endtime="20230309 17:02:21.250"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:02:21.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:02:21.250" endtime="20230309 17:02:21.251"/>
</kw>
<status status="PASS" starttime="20230309 17:02:15.123" endtime="20230309 17:02:21.252"/>
</kw>
<msg timestamp="20230309 17:02:21.252" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:02:15.123" endtime="20230309 17:02:21.253"/>
</kw>
<status status="PASS" starttime="20230309 17:02:15.121" endtime="20230309 17:02:21.253"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:02:21.259" level="INFO">Running command 'ozone sh volume info o3:///97126-without-host | jq -r '. | select(.name=="97126-without-host") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:02:27.646" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:02:27.647" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230309 17:02:21.256" endtime="20230309 17:02:27.647"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:02:27.648" level="INFO">-1</msg>
<status status="PASS" starttime="20230309 17:02:27.647" endtime="20230309 17:02:27.648"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:02:27.649" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:02:27.649" endtime="20230309 17:02:27.649"/>
</kw>
<status status="PASS" starttime="20230309 17:02:21.255" endtime="20230309 17:02:27.650"/>
</kw>
<msg timestamp="20230309 17:02:27.650" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:02:21.255" endtime="20230309 17:02:27.650"/>
</kw>
<msg timestamp="20230309 17:02:27.651" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230309 17:02:21.253" endtime="20230309 17:02:27.651"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 17:02:27.651" endtime="20230309 17:02:27.652"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:02:27.656" level="INFO">Running command 'ozone sh bucket clrquota --space-quota o3:///97126-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:02:33.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:02:33.595" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:02:27.653" endtime="20230309 17:02:33.596"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:02:33.597" level="INFO"/>
<status status="PASS" starttime="20230309 17:02:33.596" endtime="20230309 17:02:33.597"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:02:33.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:02:33.597" endtime="20230309 17:02:33.598"/>
</kw>
<status status="PASS" starttime="20230309 17:02:27.653" endtime="20230309 17:02:33.599"/>
</kw>
<msg timestamp="20230309 17:02:33.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:02:27.652" endtime="20230309 17:02:33.599"/>
</kw>
<status status="PASS" starttime="20230309 17:02:27.652" endtime="20230309 17:02:33.600"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:02:33.606" level="INFO">Running command 'ozone sh bucket info o3:///97126-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:02:39.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:02:39.356" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230309 17:02:33.603" endtime="20230309 17:02:39.357"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:02:39.359" level="INFO">-1</msg>
<status status="PASS" starttime="20230309 17:02:39.357" endtime="20230309 17:02:39.359"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:02:39.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:02:39.359" endtime="20230309 17:02:39.360"/>
</kw>
<status status="PASS" starttime="20230309 17:02:33.602" endtime="20230309 17:02:39.360"/>
</kw>
<msg timestamp="20230309 17:02:39.360" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:02:33.601" endtime="20230309 17:02:39.361"/>
</kw>
<msg timestamp="20230309 17:02:39.362" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230309 17:02:33.600" endtime="20230309 17:02:39.362"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 17:02:39.362" endtime="20230309 17:02:39.362"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:02:39.367" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota o3:///97126-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:02:45.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:02:45.867" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:02:39.364" endtime="20230309 17:02:45.867"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:02:45.869" level="INFO"/>
<status status="PASS" starttime="20230309 17:02:45.868" endtime="20230309 17:02:45.869"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:02:45.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:02:45.869" endtime="20230309 17:02:45.870"/>
</kw>
<status status="PASS" starttime="20230309 17:02:39.364" endtime="20230309 17:02:45.870"/>
</kw>
<msg timestamp="20230309 17:02:45.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:02:39.363" endtime="20230309 17:02:45.871"/>
</kw>
<status status="PASS" starttime="20230309 17:02:39.363" endtime="20230309 17:02:45.871"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:02:45.877" level="INFO">Running command 'ozone sh bucket info o3:///97126-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:02:52.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:02:52.390" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230309 17:02:45.874" endtime="20230309 17:02:52.391"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:02:52.392" level="INFO">-1</msg>
<status status="PASS" starttime="20230309 17:02:52.391" endtime="20230309 17:02:52.392"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:02:52.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:02:52.392" endtime="20230309 17:02:52.393"/>
</kw>
<status status="PASS" starttime="20230309 17:02:45.873" endtime="20230309 17:02:52.393"/>
</kw>
<msg timestamp="20230309 17:02:52.393" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:02:45.873" endtime="20230309 17:02:52.394"/>
</kw>
<msg timestamp="20230309 17:02:52.394" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230309 17:02:45.872" endtime="20230309 17:02:52.394"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 17:02:52.394" endtime="20230309 17:02:52.395"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:02:52.400" level="INFO">Running command 'ozone sh bucket delete o3:///97126-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:02:58.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:02:58.068" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:02:52.397" endtime="20230309 17:02:58.068"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:02:58.070" level="INFO"/>
<status status="PASS" starttime="20230309 17:02:58.069" endtime="20230309 17:02:58.070"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:02:58.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:02:58.070" endtime="20230309 17:02:58.071"/>
</kw>
<status status="PASS" starttime="20230309 17:02:52.396" endtime="20230309 17:02:58.072"/>
</kw>
<msg timestamp="20230309 17:02:58.072" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:02:52.396" endtime="20230309 17:02:58.072"/>
</kw>
<status status="PASS" starttime="20230309 17:02:52.395" endtime="20230309 17:02:58.073"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:02:58.079" level="INFO">Running command 'ozone sh volume delete o3:///97126-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:03:04.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:03:04.013" level="INFO">${output} = Volume 97126-without-host is deleted</msg>
<status status="PASS" starttime="20230309 17:02:58.075" endtime="20230309 17:03:04.013"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:03:04.014" level="INFO">Volume 97126-without-host is deleted</msg>
<status status="PASS" starttime="20230309 17:03:04.013" endtime="20230309 17:03:04.014"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:03:04.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:03:04.015" endtime="20230309 17:03:04.016"/>
</kw>
<status status="PASS" starttime="20230309 17:02:58.074" endtime="20230309 17:03:04.017"/>
</kw>
<msg timestamp="20230309 17:03:04.017" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:02:58.074" endtime="20230309 17:03:04.017"/>
</kw>
<status status="PASS" starttime="20230309 17:02:58.073" endtime="20230309 17:03:04.018"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:03:04.023" level="INFO">Running command 'ozone sh volume create o3:///97126-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:03:10.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:03:10.171" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:03:04.020" endtime="20230309 17:03:10.171"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:03:10.173" level="INFO"/>
<status status="PASS" starttime="20230309 17:03:10.172" endtime="20230309 17:03:10.173"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:03:10.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:03:10.173" endtime="20230309 17:03:10.174"/>
</kw>
<status status="PASS" starttime="20230309 17:03:04.019" endtime="20230309 17:03:10.175"/>
</kw>
<msg timestamp="20230309 17:03:10.175" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:03:04.019" endtime="20230309 17:03:10.175"/>
</kw>
<status status="PASS" starttime="20230309 17:03:04.018" endtime="20230309 17:03:10.176"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:03:10.181" level="INFO">Running command 'ozone sh volume info o3:///97126-without-host | jq -r '. | select(.name=="97126-without-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:03:16.401" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:03:16.401" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230309 17:03:10.178" endtime="20230309 17:03:16.401"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:03:16.406" level="INFO">-1</msg>
<status status="PASS" starttime="20230309 17:03:16.402" endtime="20230309 17:03:16.406"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:03:16.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:03:16.406" endtime="20230309 17:03:16.407"/>
</kw>
<status status="PASS" starttime="20230309 17:03:10.178" endtime="20230309 17:03:16.407"/>
</kw>
<msg timestamp="20230309 17:03:16.408" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:03:10.177" endtime="20230309 17:03:16.408"/>
</kw>
<msg timestamp="20230309 17:03:16.409" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230309 17:03:10.176" endtime="20230309 17:03:16.409"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 17:03:16.409" endtime="20230309 17:03:16.410"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:03:16.415" level="INFO">Running command 'ozone sh volume info o3:///97126-without-host | jq -r '. | select(.name=="97126-without-host") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:03:22.359" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:03:22.359" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230309 17:03:16.412" endtime="20230309 17:03:22.359"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:03:22.361" level="INFO">-1</msg>
<status status="PASS" starttime="20230309 17:03:22.360" endtime="20230309 17:03:22.361"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:03:22.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:03:22.362" endtime="20230309 17:03:22.363"/>
</kw>
<status status="PASS" starttime="20230309 17:03:16.411" endtime="20230309 17:03:22.363"/>
</kw>
<msg timestamp="20230309 17:03:22.363" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:03:16.411" endtime="20230309 17:03:22.364"/>
</kw>
<msg timestamp="20230309 17:03:22.364" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230309 17:03:16.410" endtime="20230309 17:03:22.364"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 17:03:22.364" endtime="20230309 17:03:22.365"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:03:22.371" level="INFO">Running command 'ozone sh bucket create o3:///97126-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:03:28.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:03:28.613" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:03:22.368" endtime="20230309 17:03:28.613"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:03:28.615" level="INFO"/>
<status status="PASS" starttime="20230309 17:03:28.614" endtime="20230309 17:03:28.615"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:03:28.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:03:28.615" endtime="20230309 17:03:28.616"/>
</kw>
<status status="PASS" starttime="20230309 17:03:22.367" endtime="20230309 17:03:28.616"/>
</kw>
<msg timestamp="20230309 17:03:28.616" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:03:22.366" endtime="20230309 17:03:28.617"/>
</kw>
<status status="PASS" starttime="20230309 17:03:22.365" endtime="20230309 17:03:28.617"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:03:28.623" level="INFO">Running command 'ozone sh bucket info o3:///97126-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:03:35.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:03:35.365" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230309 17:03:28.620" endtime="20230309 17:03:35.365"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:03:35.367" level="INFO">-1</msg>
<status status="PASS" starttime="20230309 17:03:35.366" endtime="20230309 17:03:35.367"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:03:35.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:03:35.367" endtime="20230309 17:03:35.368"/>
</kw>
<status status="PASS" starttime="20230309 17:03:28.619" endtime="20230309 17:03:35.368"/>
</kw>
<msg timestamp="20230309 17:03:35.368" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:03:28.619" endtime="20230309 17:03:35.370"/>
</kw>
<msg timestamp="20230309 17:03:35.370" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230309 17:03:28.617" endtime="20230309 17:03:35.370"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 17:03:35.370" endtime="20230309 17:03:35.371"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:03:35.378" level="INFO">Running command 'ozone sh bucket info o3:///97126-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:03:42.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:03:42.235" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230309 17:03:35.375" endtime="20230309 17:03:42.235"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:03:42.237" level="INFO">-1</msg>
<status status="PASS" starttime="20230309 17:03:42.235" endtime="20230309 17:03:42.237"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:03:42.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:03:42.237" endtime="20230309 17:03:42.238"/>
</kw>
<status status="PASS" starttime="20230309 17:03:35.373" endtime="20230309 17:03:42.239"/>
</kw>
<msg timestamp="20230309 17:03:42.239" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:03:35.373" endtime="20230309 17:03:42.240"/>
</kw>
<msg timestamp="20230309 17:03:42.240" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230309 17:03:35.371" endtime="20230309 17:03:42.240"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 17:03:42.240" endtime="20230309 17:03:42.241"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:03:42.248" level="INFO">Running command 'ozone sh bucket delete o3:///97126-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:03:48.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:03:48.149" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:03:42.244" endtime="20230309 17:03:48.149"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:03:48.151" level="INFO"/>
<status status="PASS" starttime="20230309 17:03:48.150" endtime="20230309 17:03:48.151"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:03:48.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:03:48.151" endtime="20230309 17:03:48.152"/>
</kw>
<status status="PASS" starttime="20230309 17:03:42.243" endtime="20230309 17:03:48.152"/>
</kw>
<msg timestamp="20230309 17:03:48.153" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:03:42.242" endtime="20230309 17:03:48.153"/>
</kw>
<status status="PASS" starttime="20230309 17:03:42.241" endtime="20230309 17:03:48.154"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:03:48.162" level="INFO">Running command 'ozone sh volume delete o3:///97126-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:03:54.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:03:54.906" level="INFO">${output} = Volume 97126-without-host is deleted</msg>
<status status="PASS" starttime="20230309 17:03:48.157" endtime="20230309 17:03:54.906"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:03:54.907" level="INFO">Volume 97126-without-host is deleted</msg>
<status status="PASS" starttime="20230309 17:03:54.906" endtime="20230309 17:03:54.907"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:03:54.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:03:54.908" endtime="20230309 17:03:54.909"/>
</kw>
<status status="PASS" starttime="20230309 17:03:48.156" endtime="20230309 17:03:54.909"/>
</kw>
<msg timestamp="20230309 17:03:54.909" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:03:48.155" endtime="20230309 17:03:54.910"/>
</kw>
<status status="PASS" starttime="20230309 17:03:48.154" endtime="20230309 17:03:54.910"/>
</kw>
<status status="PASS" starttime="20230309 16:58:36.171" endtime="20230309 17:03:54.911"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230309 16:58:36.095" endtime="20230309 17:03:54.911"/>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20230309 16:48:23.817" endtime="20230309 17:03:54.913"/>
</suite>
<suite id="s1-s1-s6" name="Single Node" source="/opt/hadoop/smoketest/basic/single_node.robot">
<test id="s1-s1-s6-t1" name="Basic Freon smoketest for one datanode" line="25">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:03:54.936" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:03:54.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:03:54.941" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230309 17:03:54.933" endtime="20230309 17:03:54.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:03:54.943" level="INFO">scm</msg>
<status status="PASS" starttime="20230309 17:03:54.942" endtime="20230309 17:03:54.943"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:03:54.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:03:54.943" endtime="20230309 17:03:54.944"/>
</kw>
<status status="PASS" starttime="20230309 17:03:54.932" endtime="20230309 17:03:54.944"/>
</kw>
<msg timestamp="20230309 17:03:54.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:03:54.932" endtime="20230309 17:03:54.945"/>
</kw>
<msg timestamp="20230309 17:03:54.946" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230309 17:03:54.931" endtime="20230309 17:03:54.946"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:03:54.948" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:03:54.946" endtime="20230309 17:03:54.948"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:03:54.954" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:03:55.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:03:55.036" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:03:54.951" endtime="20230309 17:03:55.036"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:03:55.038" level="INFO"/>
<status status="PASS" starttime="20230309 17:03:55.037" endtime="20230309 17:03:55.038"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:03:55.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:03:55.039" endtime="20230309 17:03:55.040"/>
</kw>
<status status="PASS" starttime="20230309 17:03:54.950" endtime="20230309 17:03:55.041"/>
</kw>
<msg timestamp="20230309 17:03:55.041" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:03:54.949" endtime="20230309 17:03:55.042"/>
</kw>
<status status="PASS" starttime="20230309 17:03:54.949" endtime="20230309 17:03:55.042"/>
</kw>
<status status="PASS" starttime="20230309 17:03:54.948" endtime="20230309 17:03:55.042"/>
</kw>
<status status="PASS" starttime="20230309 17:03:54.931" endtime="20230309 17:03:55.042"/>
</kw>
<status status="PASS" starttime="20230309 17:03:54.930" endtime="20230309 17:03:55.042"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:03:55.043" level="INFO">${random} = Eu1A9TPhVN</msg>
<status status="PASS" starttime="20230309 17:03:55.043" endtime="20230309 17:03:55.043"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<arg>args=--replication ONE --replication-type RATIS</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:03:55.050" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p Eu1A9TPhVN --replication ONE --replication-type RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:04:05.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:04:05.819" level="INFO">${output} = 2023-03-09 17:03:58,522 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-03-09 17:03:58,769 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230309 17:03:55.047" endtime="20230309 17:04:05.819"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:04:05.821" level="INFO">2023-03-09 17:03:58,522 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-03-09 17:03:58,769 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-03-09 17:03:58,769 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-03-09 17:03:59,106 [main] INFO freon.BaseFreonGenerator: Executing test with prefix Eu1A9TPhVN and number-of-tests 1
2023-03-09 17:03:59,253 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-09 17:04:00,262 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-09 17:04:01,262 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-09 17:04:02,263 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-09 17:04:02,712 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-03-09 17:04:02,773 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2023-03-09 17:04:03,261 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-03-09 17:04:03,263 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-09 17:04:04,264 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-09 17:04:05,264 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-03-09 17:04:05,414 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=2616.098516, max=2616.098516, mean=2616.098516, stddev=0.0, median=2616.098516, p75=2616.098516, p95=2616.098516, p98=2616.098516, p99=2616.098516, p999=2616.098516, mean_rate=0.3258250271636171, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-03-09 17:04:05,415 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2023-03-09 17:04:05,419 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-03-09 17:04:05,419 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230309 17:04:05.820" endtime="20230309 17:04:05.821"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:04:05.822" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:04:05.821" endtime="20230309 17:04:05.822"/>
</kw>
<status status="PASS" starttime="20230309 17:03:55.046" endtime="20230309 17:04:05.822"/>
</kw>
<msg timestamp="20230309 17:04:05.822" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:03:55.046" endtime="20230309 17:04:05.823"/>
</kw>
<msg timestamp="20230309 17:04:05.824" level="INFO">${result} = 2023-03-09 17:03:58,522 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-03-09 17:03:58,769 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230309 17:03:55.044" endtime="20230309 17:04:05.824"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:04:05.824" endtime="20230309 17:04:05.824"/>
</kw>
<status status="PASS" starttime="20230309 17:03:55.043" endtime="20230309 17:04:05.825"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:04:05.833" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p Eu1A9TPhVN  2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:04:16.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:04:16.374" level="INFO">${output} = 2023-03-09 17:04:08,902 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-03-09 17:04:09,153 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230309 17:04:05.828" endtime="20230309 17:04:16.374"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:04:16.376" level="INFO">2023-03-09 17:04:08,902 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-03-09 17:04:09,153 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-03-09 17:04:09,154 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-03-09 17:04:09,420 [main] INFO freon.BaseFreonGenerator: Executing test with prefix Eu1A9TPhVN and number-of-tests 1
2023-03-09 17:04:09,569 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-09 17:04:10,575 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-09 17:04:11,575 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-09 17:04:12,576 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-09 17:04:12,776 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-03-09 17:04:13,576 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-09 17:04:14,577 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-09 17:04:15,578 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-03-09 17:04:15,716 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=46.872328, max=46.872328, mean=46.872328, stddev=0.0, median=46.872328, p75=46.872328, p95=46.872328, p98=46.872328, p99=46.872328, p999=46.872328, mean_rate=0.9521457207000289, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-03-09 17:04:15,717 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2023-03-09 17:04:15,717 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-03-09 17:04:15,717 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230309 17:04:16.375" endtime="20230309 17:04:16.376"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:04:16.377" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:04:16.376" endtime="20230309 17:04:16.377"/>
</kw>
<status status="PASS" starttime="20230309 17:04:05.828" endtime="20230309 17:04:16.378"/>
</kw>
<msg timestamp="20230309 17:04:16.378" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:04:05.827" endtime="20230309 17:04:16.379"/>
</kw>
<msg timestamp="20230309 17:04:16.379" level="INFO">${result} = 2023-03-09 17:04:08,902 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-03-09 17:04:09,153 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230309 17:04:05.826" endtime="20230309 17:04:16.379"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:04:16.379" endtime="20230309 17:04:16.380"/>
</kw>
<status status="PASS" starttime="20230309 17:04:05.825" endtime="20230309 17:04:16.380"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:03:54.929" endtime="20230309 17:04:16.381"/>
</test>
<doc>Smoketest for one datanode</doc>
<status status="PASS" starttime="20230309 17:03:54.917" endtime="20230309 17:04:16.382"/>
</suite>
<status status="PASS" starttime="20230309 16:35:26.844" endtime="20230309 17:04:16.388"/>
</suite>
<suite id="s1-s2" name="Security" source="/opt/hadoop/smoketest/security">
<suite id="s1-s2-s1" name="Admin-Cert" source="/opt/hadoop/smoketest/security/admin-cert.robot">
<kw name="Setup Test" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:04:24.412" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:04:24.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:04:24.417" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230309 17:04:24.406" endtime="20230309 17:04:24.418"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:04:24.419" level="INFO">scm</msg>
<status status="PASS" starttime="20230309 17:04:24.418" endtime="20230309 17:04:24.419"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:04:24.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:04:24.419" endtime="20230309 17:04:24.420"/>
</kw>
<status status="PASS" starttime="20230309 17:04:24.404" endtime="20230309 17:04:24.421"/>
</kw>
<msg timestamp="20230309 17:04:24.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:04:24.403" endtime="20230309 17:04:24.423"/>
</kw>
<msg timestamp="20230309 17:04:24.423" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230309 17:04:24.403" endtime="20230309 17:04:24.423"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:04:24.426" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:04:24.423" endtime="20230309 17:04:24.426"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:04:24.431" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:04:24.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:04:24.489" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:04:24.428" endtime="20230309 17:04:24.489"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:04:24.490" level="INFO"/>
<status status="PASS" starttime="20230309 17:04:24.489" endtime="20230309 17:04:24.490"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:04:24.491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:04:24.491" endtime="20230309 17:04:24.491"/>
</kw>
<status status="PASS" starttime="20230309 17:04:24.428" endtime="20230309 17:04:24.492"/>
</kw>
<msg timestamp="20230309 17:04:24.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:04:24.427" endtime="20230309 17:04:24.493"/>
</kw>
<status status="PASS" starttime="20230309 17:04:24.427" endtime="20230309 17:04:24.493"/>
</kw>
<status status="PASS" starttime="20230309 17:04:24.426" endtime="20230309 17:04:24.493"/>
</kw>
<status status="PASS" starttime="20230309 17:04:24.403" endtime="20230309 17:04:24.494"/>
</kw>
<status status="PASS" starttime="20230309 17:04:24.402" endtime="20230309 17:04:24.494"/>
</kw>
<status status="PASS" starttime="20230309 17:04:24.402" endtime="20230309 17:04:24.494"/>
</kw>
<test id="s1-s2-s1-t1" name="List valid certificates" line="33">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin cert list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:04:24.503" level="INFO">Running command 'ozone admin cert list 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:04:30.908" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:04:30.909" level="INFO">${output} = Total 7 valid certificates: 
SerialNumber      Valid From                     Expiry                         Subject                                                                                    ...</msg>
<status status="PASS" starttime="20230309 17:04:24.499" endtime="20230309 17:04:30.909"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:04:30.911" level="INFO">Total 7 valid certificates: 
SerialNumber      Valid From                     Expiry                         Subject                                                                                                       
1                 Thu Mar 09 00:00:00 UTC 2023   Sun Apr 16 00:00:00 UTC 2028   CN=scm@scm,OU=21c38bcc-2d3d-4854-8de7-4733e37dff8b,O=CID-1ec521e3-4903-4960-b0bb-46952caeea11                 
340449037331      Thu Mar 09 16:33:47 UTC 2023   Sun Apr 16 16:33:47 UTC 2028   CN=scm-sub@scm,OU=21c38bcc-2d3d-4854-8de7-4733e37dff8b,O=CID-1ec521e3-4903-4960-b0bb-46952caeea11             
363268602290      Thu Mar 09 16:34:10 UTC 2023   Fri Mar 08 16:34:10 UTC 2024   CN=dn@f032d39e52dc,OU=21c38bcc-2d3d-4854-8de7-4733e37dff8b,O=CID-1ec521e3-4903-4960-b0bb-46952caeea11         
363917965365      Thu Mar 09 16:34:10 UTC 2023   Fri Mar 08 16:34:10 UTC 2024   CN=recon@recon,OU=21c38bcc-2d3d-4854-8de7-4733e37dff8b,O=CID-1ec521e3-4903-4960-b0bb-46952caeea11             
364034472958      Thu Mar 09 16:34:11 UTC 2023   Fri Mar 08 16:34:11 UTC 2024   CN=dn@18f2e36210bf,OU=21c38bcc-2d3d-4854-8de7-4733e37dff8b,O=CID-1ec521e3-4903-4960-b0bb-46952caeea11         
364227940655      Thu Mar 09 16:34:11 UTC 2023   Fri Mar 08 16:34:11 UTC 2024   CN=dn@5b351e6cbb87,OU=21c38bcc-2d3d-4854-8de7-4733e37dff8b,O=CID-1ec521e3-4903-4960-b0bb-46952caeea11         
372852792094      Thu Mar 09 16:34:19 UTC 2023   Fri Mar 08 16:34:19 UTC 2024   CN=om,OU=21c38bcc-2d3d-4854-8de7-4733e37dff8b,O=CID-1ec521e3-4903-4960-b0bb-46952caeea11                      </msg>
<status status="PASS" starttime="20230309 17:04:30.909" endtime="20230309 17:04:30.911"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:04:30.913" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:04:30.912" endtime="20230309 17:04:30.913"/>
</kw>
<status status="PASS" starttime="20230309 17:04:24.499" endtime="20230309 17:04:30.913"/>
</kw>
<msg timestamp="20230309 17:04:30.914" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:04:24.498" endtime="20230309 17:04:30.914"/>
</kw>
<msg timestamp="20230309 17:04:30.915" level="INFO">${output} = Total 7 valid certificates: 
SerialNumber      Valid From                     Expiry                         Subject                                                                                    ...</msg>
<status status="PASS" starttime="20230309 17:04:24.497" endtime="20230309 17:04:30.915"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>valid certificates</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:04:30.915" endtime="20230309 17:04:30.916"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:04:24.495" endtime="20230309 17:04:30.916"/>
</test>
<test id="s1-s2-s1-t2" name="List revoked certificates" line="37">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin cert list -t revoked</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:04:30.924" level="INFO">Running command 'ozone admin cert list -t revoked 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:04:35.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:04:35.939" level="INFO">${output} = Total 0 revoked certificates: 
SerialNumber      Valid From                     Expiry                         Subject                                                                                  ...</msg>
<status status="PASS" starttime="20230309 17:04:30.920" endtime="20230309 17:04:35.939"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:04:35.941" level="INFO">Total 0 revoked certificates: 
SerialNumber      Valid From                     Expiry                         Subject                                                                                                       </msg>
<status status="PASS" starttime="20230309 17:04:35.940" endtime="20230309 17:04:35.941"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:04:35.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:04:35.941" endtime="20230309 17:04:35.942"/>
</kw>
<status status="PASS" starttime="20230309 17:04:30.919" endtime="20230309 17:04:35.942"/>
</kw>
<msg timestamp="20230309 17:04:35.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:04:30.919" endtime="20230309 17:04:35.943"/>
</kw>
<msg timestamp="20230309 17:04:35.943" level="INFO">${output} = Total 0 revoked certificates: 
SerialNumber      Valid From                     Expiry                         Subject                                                                                  ...</msg>
<status status="PASS" starttime="20230309 17:04:30.918" endtime="20230309 17:04:35.943"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Total 0 revoked certificates</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:04:35.944" endtime="20230309 17:04:35.944"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:04:30.917" endtime="20230309 17:04:35.944"/>
</test>
<test id="s1-s2-s1-t3" name="Info of the cert" line="41">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>for id in $(ozone admin cert list -c 1|grep UTC|awk '{print $1}'); do ozone admin cert info $id; done</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:04:35.951" level="INFO">Running command 'for id in $(ozone admin cert list -c 1|grep UTC|awk '{print $1}'); do ozone admin cert info $id; done 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:04:46.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:04:46.785" level="INFO">${output} = Certificate id: 1
  [0]         Version: 3
         SerialNumber: 1
             IssuerDN: CN=scm@scm,OU=21c38bcc-2d3d-4854-8de7-4733e37dff8b,O=CID-1ec521e3-4903-4960-b0bb-46952caeea11
           Star...</msg>
<status status="PASS" starttime="20230309 17:04:35.948" endtime="20230309 17:04:46.785"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:04:46.787" level="INFO">Certificate id: 1
  [0]         Version: 3
         SerialNumber: 1
             IssuerDN: CN=scm@scm,OU=21c38bcc-2d3d-4854-8de7-4733e37dff8b,O=CID-1ec521e3-4903-4960-b0bb-46952caeea11
           Start Date: Thu Mar 09 00:00:00 UTC 2023
           Final Date: Sun Apr 16 00:00:00 UTC 2028
            SubjectDN: CN=scm@scm,OU=21c38bcc-2d3d-4854-8de7-4733e37dff8b,O=CID-1ec521e3-4903-4960-b0bb-46952caeea11
           Public Key: RSA Public Key [03:0f:06:6f:15:c7:ef:cd:53:61:30:84:33:83:81:fc:a1:7c:9d:76],[56:66:d1:a4]
        modulus: 9c6852344a93f85472fc11ac0d96d0a923595e930a7960c5431f6ea9ba72d3fd176886e394fec6d4b088127e38cb6a05404e1e12b24f7c5a80b478a442f79c75bfefc270bdae1b922afd52cdee5072aa0109f29152ea010ab6f31d8638084e54baabd5592e6adb06c276c84ed23639bc826fa2736ffbc637ab9f831ff4b4db83d65fd8ca1679d2da34a0ebddd49947e53725bdb873801b3f68f130c95a6d7590c90afb7d68e68daf881a8760e96e835edc50fc4daacf1a492d2ef082eb32362729f84c4b3fd2597b41264cd95889c6166658fafd1e0040a40c5f51b7f31e2fd8dcc54eb977da0c52bd4dd3c6e701163ae44ec10a7ad0bea6ba71b9cd1c7efd5d
public exponent: 10001

  Signature Algorithm: SHA256withRSA
            Signature: 23676a9165506f4bfae90ac58c11ab8a46e8ad7d
                       c4f39f42f60ebda730b7d99b44c91ea70d34710f
                       ac531f4b73ccdef1e06f00229c0d120e2d34c254
                       fc5d69e0cea7d3d5ca09b499a18ca4661f9534d2
                       5343f6eaeb58108f675f3b4576c7e8fd2bbaef3a
                       da93474b6cc885db0b19132fb40ba5a0bc8dbb3b
                       735870ce71af0826b271e7a2d4a786a404aeff02
                       5fb37b08f122cd6238e060ee4e617894faab995a
                       8fec073cc9c888b69dd7691565954077288e3ceb
                       8adf4bc84199688b0909b4faafa4730cd95325ce
                       e680b0aaf119d716460b4558bda2dcdc774fc1b5
                       ade715cf0de7c6eaa8179018449d7b40a3e55490
                       38b8a759b242095d2f409e1ebed0d753
       Extensions: 
                       critical(true) BasicConstraints: isCa(true)
                       critical(true) KeyUsage: 0x6
                       critical(false) 2.5.29.17 value = Sequence
    Tagged [7] IMPLICIT 
        DER Octet String[4] 

</msg>
<status status="PASS" starttime="20230309 17:04:46.786" endtime="20230309 17:04:46.787"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:04:46.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:04:46.787" endtime="20230309 17:04:46.788"/>
</kw>
<status status="PASS" starttime="20230309 17:04:35.947" endtime="20230309 17:04:46.788"/>
</kw>
<msg timestamp="20230309 17:04:46.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:04:35.947" endtime="20230309 17:04:46.789"/>
</kw>
<msg timestamp="20230309 17:04:46.789" level="INFO">${output} = Certificate id: 1
  [0]         Version: 3
         SerialNumber: 1
             IssuerDN: CN=scm@scm,OU=21c38bcc-2d3d-4854-8de7-4733e37dff8b,O=CID-1ec521e3-4903-4960-b0bb-46952caeea11
           Star...</msg>
<status status="PASS" starttime="20230309 17:04:35.946" endtime="20230309 17:04:46.790"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Certificate not found</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:04:46.790" endtime="20230309 17:04:46.790"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:04:35.945" endtime="20230309 17:04:46.791"/>
</test>
<doc>Test for ozone admin cert command</doc>
<status status="PASS" starttime="20230309 17:04:24.353" endtime="20230309 17:04:46.794"/>
</suite>
<suite id="s1-s2-s2" name="Bucket-Encryption" source="/opt/hadoop/smoketest/security/bucket-encryption.robot">
<kw name="Setup Test" type="SETUP">
<kw name="Create Random Volume" library="shell">
<var>${volume}</var>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:04:46.809" level="INFO">${random} = emwkn</msg>
<status status="PASS" starttime="20230309 17:04:46.809" endtime="20230309 17:04:46.809"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://${OM_SERVICE_ID}/vol-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:04:46.814" level="INFO">Running command 'ozone sh volume create o3://om/vol-emwkn 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:04:52.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:04:52.905" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:04:46.811" endtime="20230309 17:04:52.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:04:52.906" level="INFO"/>
<status status="PASS" starttime="20230309 17:04:52.906" endtime="20230309 17:04:52.907"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:04:52.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:04:52.907" endtime="20230309 17:04:52.907"/>
</kw>
<status status="PASS" starttime="20230309 17:04:46.811" endtime="20230309 17:04:52.908"/>
</kw>
<msg timestamp="20230309 17:04:52.908" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:04:46.810" endtime="20230309 17:04:52.909"/>
</kw>
<status status="PASS" starttime="20230309 17:04:46.809" endtime="20230309 17:04:52.909"/>
</kw>
<msg timestamp="20230309 17:04:52.909" level="INFO">${volume} = vol-emwkn</msg>
<status status="PASS" starttime="20230309 17:04:46.808" endtime="20230309 17:04:52.909"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${VOLUME}</arg>
<arg>${volume}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:04:52.910" level="INFO">${VOLUME} = vol-emwkn</msg>
<status status="PASS" starttime="20230309 17:04:52.910" endtime="20230309 17:04:52.910"/>
</kw>
<status status="PASS" starttime="20230309 17:04:46.808" endtime="20230309 17:04:52.910"/>
</kw>
<test id="s1-s2-s2-t1" name="Create Encrypted Bucket" line="37">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create -k ${KEY_NAME} o3://${OM_SERVICE_ID}/${VOLUME}/encrypted-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:04:52.917" level="INFO">Running command 'ozone sh bucket create -k key1 o3://om/vol-emwkn/encrypted-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:04:59.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:04:59.740" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:04:52.914" endtime="20230309 17:04:59.740"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:04:59.748" level="INFO"/>
<status status="PASS" starttime="20230309 17:04:59.741" endtime="20230309 17:04:59.748"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:04:59.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:04:59.749" endtime="20230309 17:04:59.750"/>
</kw>
<status status="PASS" starttime="20230309 17:04:52.913" endtime="20230309 17:04:59.751"/>
</kw>
<msg timestamp="20230309 17:04:59.751" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:04:52.913" endtime="20230309 17:04:59.751"/>
</kw>
<msg timestamp="20230309 17:04:59.752" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:04:52.912" endtime="20230309 17:04:59.752"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>INVALID_REQUEST</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:04:59.752" endtime="20230309 17:04:59.753"/>
</kw>
<kw name="Bucket Exists" library="shell">
<arg>o3://${OM_SERVICE_ID}/${VOLUME}/encrypted-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:04:59.759" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/vol-emwkn/encrypted-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:05:06.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:05:06.818" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "vol-emwkn",
  "name" : "encrypted-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023-...</msg>
<status status="PASS" starttime="20230309 17:04:59.755" endtime="20230309 17:05:06.818"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:05:06.819" endtime="20230309 17:05:06.820"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:05:06.820" endtime="20230309 17:05:06.821"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:05:06.821" endtime="20230309 17:05:06.821"/>
</kw>
<status status="PASS" starttime="20230309 17:04:59.753" endtime="20230309 17:05:06.822"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:04:52.911" endtime="20230309 17:05:06.823"/>
</test>
<test id="s1-s2-s2-t2" name="Create Key in Encrypted Bucket" line="42">
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>o3://${OM_SERVICE_ID}/${VOLUME}/encrypted-bucket/passwd</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:05:06.827" level="INFO">${key} = o3://om/vol-emwkn/encrypted-bucket/passwd</msg>
<status status="PASS" starttime="20230309 17:05:06.826" endtime="20230309 17:05:06.827"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${key} /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:05:06.832" level="INFO">Running command 'ozone sh key put o3://om/vol-emwkn/encrypted-bucket/passwd /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:05:17.419" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:05:17.419" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:05:06.829" endtime="20230309 17:05:17.419"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:05:17.421" level="INFO"/>
<status status="PASS" starttime="20230309 17:05:17.420" endtime="20230309 17:05:17.421"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:05:17.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:05:17.421" endtime="20230309 17:05:17.422"/>
</kw>
<status status="PASS" starttime="20230309 17:05:06.828" endtime="20230309 17:05:17.422"/>
</kw>
<msg timestamp="20230309 17:05:17.422" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:05:06.828" endtime="20230309 17:05:17.423"/>
</kw>
<msg timestamp="20230309 17:05:17.423" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:05:06.827" endtime="20230309 17:05:17.423"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>/etc/passwd</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:05:17.426" level="INFO">${postfix} = 18995</msg>
<status status="PASS" starttime="20230309 17:05:17.425" endtime="20230309 17:05:17.426"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:05:17.427" level="INFO">${tmpfile} = /tmp/tempkey-18995</msg>
<status status="PASS" starttime="20230309 17:05:17.426" endtime="20230309 17:05:17.427"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:05:17.432" level="INFO">Running command 'ozone sh key get o3://om/vol-emwkn/encrypted-bucket/passwd /tmp/tempkey-18995 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:05:27.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:05:27.400" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:05:17.429" endtime="20230309 17:05:27.400"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:05:27.402" level="INFO"/>
<status status="PASS" starttime="20230309 17:05:27.401" endtime="20230309 17:05:27.402"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:05:27.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:05:27.403" endtime="20230309 17:05:27.403"/>
</kw>
<status status="PASS" starttime="20230309 17:05:17.428" endtime="20230309 17:05:27.404"/>
</kw>
<msg timestamp="20230309 17:05:27.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:05:17.428" endtime="20230309 17:05:27.405"/>
</kw>
<status status="PASS" starttime="20230309 17:05:17.427" endtime="20230309 17:05:27.406"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20230309 17:05:27.410" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-18995 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:05:27.413" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20230309 17:05:27.406" endtime="20230309 17:05:27.413"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:05:27.420" level="INFO">Running command 'rm -f /tmp/tempkey-18995 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:05:27.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:05:27.424" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:05:27.417" endtime="20230309 17:05:27.424"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:05:27.426" level="INFO"/>
<status status="PASS" starttime="20230309 17:05:27.425" endtime="20230309 17:05:27.427"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:05:27.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:05:27.427" endtime="20230309 17:05:27.428"/>
</kw>
<status status="PASS" starttime="20230309 17:05:27.416" endtime="20230309 17:05:27.428"/>
</kw>
<msg timestamp="20230309 17:05:27.428" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:05:27.415" endtime="20230309 17:05:27.429"/>
</kw>
<status status="PASS" starttime="20230309 17:05:27.414" endtime="20230309 17:05:27.429"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 17:05:27.430" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20230309 17:05:27.430" endtime="20230309 17:05:27.430"/>
</kw>
<msg timestamp="20230309 17:05:27.431" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20230309 17:05:17.424" endtime="20230309 17:05:27.431"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230309 17:05:27.431" endtime="20230309 17:05:27.431"/>
</kw>
<status status="PASS" starttime="20230309 17:05:17.423" endtime="20230309 17:05:27.432"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:05:06.825" endtime="20230309 17:05:27.433"/>
</test>
<doc>Test for bucket encryption</doc>
<status status="PASS" starttime="20230309 17:04:46.797" endtime="20230309 17:05:27.435"/>
</suite>
<suite id="s1-s2-s3" name="Ozone-Secure-Fs" source="/opt/hadoop/smoketest/security/ozone-secure-fs.robot">
<test id="s1-s2-s3-t1" name="Create volume bucket with wrong credentials" line="52">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:05:27.462" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:05:27.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:05:27.469" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:05:27.459" endtime="20230309 17:05:27.469"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:05:27.470" level="INFO"/>
<status status="PASS" starttime="20230309 17:05:27.469" endtime="20230309 17:05:27.470"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:05:27.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:05:27.470" endtime="20230309 17:05:27.471"/>
</kw>
<status status="PASS" starttime="20230309 17:05:27.459" endtime="20230309 17:05:27.471"/>
</kw>
<msg timestamp="20230309 17:05:27.471" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:05:27.458" endtime="20230309 17:05:27.472"/>
</kw>
<status status="PASS" starttime="20230309 17:05:27.458" endtime="20230309 17:05:27.472"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone sh volume create o3://om/fstest</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:05:27.476" level="INFO">Running command 'ozone sh volume create o3://om/fstest 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:05:32.738" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:05:32.738" level="INFO">${output} = org.apache.hadoop.security.AccessControlException: Client cannot authenticate via:[TOKEN, KERBEROS]</msg>
<status status="PASS" starttime="20230309 17:05:27.472" endtime="20230309 17:05:32.739"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Client cannot authenticate via</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:05:32.739" endtime="20230309 17:05:32.740"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:05:27.457" endtime="20230309 17:05:32.741"/>
</test>
<test id="s1-s2-s3-t2" name="Create volume with non-admin user" line="57">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:05:32.761" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:05:32.764" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:05:32.764" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230309 17:05:32.757" endtime="20230309 17:05:32.764"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:05:32.766" level="INFO">scm</msg>
<status status="PASS" starttime="20230309 17:05:32.765" endtime="20230309 17:05:32.766"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:05:32.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:05:32.766" endtime="20230309 17:05:32.767"/>
</kw>
<status status="PASS" starttime="20230309 17:05:32.757" endtime="20230309 17:05:32.767"/>
</kw>
<msg timestamp="20230309 17:05:32.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:05:32.756" endtime="20230309 17:05:32.768"/>
</kw>
<msg timestamp="20230309 17:05:32.768" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230309 17:05:32.756" endtime="20230309 17:05:32.769"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:05:32.771" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:05:32.769" endtime="20230309 17:05:32.771"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:05:32.780" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:05:32.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:05:32.861" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:05:32.774" endtime="20230309 17:05:32.861"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:05:32.864" level="INFO"/>
<status status="PASS" starttime="20230309 17:05:32.863" endtime="20230309 17:05:32.864"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:05:32.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:05:32.865" endtime="20230309 17:05:32.866"/>
</kw>
<status status="PASS" starttime="20230309 17:05:32.774" endtime="20230309 17:05:32.866"/>
</kw>
<msg timestamp="20230309 17:05:32.866" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:05:32.773" endtime="20230309 17:05:32.868"/>
</kw>
<status status="PASS" starttime="20230309 17:05:32.772" endtime="20230309 17:05:32.868"/>
</kw>
<status status="PASS" starttime="20230309 17:05:32.771" endtime="20230309 17:05:32.869"/>
</kw>
<status status="PASS" starttime="20230309 17:05:32.752" endtime="20230309 17:05:32.869"/>
</kw>
<status status="PASS" starttime="20230309 17:05:32.750" endtime="20230309 17:05:32.869"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone sh volume create o3://om/fstest</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:05:32.873" level="INFO">Running command 'ozone sh volume create o3://om/fstest 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:05:40.080" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:05:40.081" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have CREATE permission to access volume Volume:fstest </msg>
<status status="PASS" starttime="20230309 17:05:32.869" endtime="20230309 17:05:40.081"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>doesn't have CREATE permission to access volume</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:05:40.081" endtime="20230309 17:05:40.083"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:05:32.746" endtime="20230309 17:05:40.083"/>
</test>
<test id="s1-s2-s3-t3" name="Create bucket with non-admin owner(testuser2)" line="62">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:05:40.093" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:05:40.099" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:05:40.099" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230309 17:05:40.090" endtime="20230309 17:05:40.099"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:05:40.100" level="INFO">scm</msg>
<status status="PASS" starttime="20230309 17:05:40.100" endtime="20230309 17:05:40.100"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:05:40.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:05:40.101" endtime="20230309 17:05:40.102"/>
</kw>
<status status="PASS" starttime="20230309 17:05:40.090" endtime="20230309 17:05:40.102"/>
</kw>
<msg timestamp="20230309 17:05:40.103" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:05:40.089" endtime="20230309 17:05:40.103"/>
</kw>
<msg timestamp="20230309 17:05:40.104" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230309 17:05:40.088" endtime="20230309 17:05:40.104"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:05:40.105" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:05:40.104" endtime="20230309 17:05:40.105"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:05:40.112" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:05:40.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:05:40.145" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:05:40.109" endtime="20230309 17:05:40.146"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:05:40.147" level="INFO"/>
<status status="PASS" starttime="20230309 17:05:40.146" endtime="20230309 17:05:40.147"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:05:40.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:05:40.148" endtime="20230309 17:05:40.148"/>
</kw>
<status status="PASS" starttime="20230309 17:05:40.107" endtime="20230309 17:05:40.149"/>
</kw>
<msg timestamp="20230309 17:05:40.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:05:40.107" endtime="20230309 17:05:40.150"/>
</kw>
<status status="PASS" starttime="20230309 17:05:40.106" endtime="20230309 17:05:40.150"/>
</kw>
<status status="PASS" starttime="20230309 17:05:40.105" endtime="20230309 17:05:40.151"/>
</kw>
<status status="PASS" starttime="20230309 17:05:40.088" endtime="20230309 17:05:40.151"/>
</kw>
<status status="PASS" starttime="20230309 17:05:40.087" endtime="20230309 17:05:40.151"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup volume names</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup volume names">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>2</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:05:40.153" level="INFO">${random} = 35</msg>
<status status="PASS" starttime="20230309 17:05:40.152" endtime="20230309 17:05:40.153"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume1}</arg>
<arg>fstest${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:05:40.155" level="INFO">${volume1} = fstest35</msg>
<status status="PASS" starttime="20230309 17:05:40.153" endtime="20230309 17:05:40.155"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume2}</arg>
<arg>fstest2${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:05:40.157" level="INFO">${volume2} = fstest235</msg>
<status status="PASS" starttime="20230309 17:05:40.155" endtime="20230309 17:05:40.157"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume3}</arg>
<arg>fstest3${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:05:40.160" level="INFO">${volume3} = fstest335</msg>
<status status="PASS" starttime="20230309 17:05:40.157" endtime="20230309 17:05:40.160"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume4}</arg>
<arg>fstest4${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:05:40.162" level="INFO">${volume4} = fstest435</msg>
<status status="PASS" starttime="20230309 17:05:40.160" endtime="20230309 17:05:40.162"/>
</kw>
<status status="PASS" starttime="20230309 17:05:40.152" endtime="20230309 17:05:40.162"/>
</kw>
<status status="PASS" starttime="20230309 17:05:40.151" endtime="20230309 17:05:40.162"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://om/${volume4} -u testuser2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:05:40.167" level="INFO">Running command 'ozone sh volume create o3://om/fstest435 -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:05:46.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:05:46.940" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:05:40.164" endtime="20230309 17:05:46.940"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:05:46.942" level="INFO"/>
<status status="PASS" starttime="20230309 17:05:46.941" endtime="20230309 17:05:46.943"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:05:46.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:05:46.943" endtime="20230309 17:05:46.944"/>
</kw>
<status status="PASS" starttime="20230309 17:05:40.164" endtime="20230309 17:05:46.944"/>
</kw>
<msg timestamp="20230309 17:05:46.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:05:40.163" endtime="20230309 17:05:46.945"/>
</kw>
<status status="PASS" starttime="20230309 17:05:40.163" endtime="20230309 17:05:46.946"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:05:46.952" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:05:46.956" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:05:46.957" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230309 17:05:46.949" endtime="20230309 17:05:46.957"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:05:46.958" level="INFO">scm</msg>
<status status="PASS" starttime="20230309 17:05:46.957" endtime="20230309 17:05:46.958"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:05:46.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:05:46.959" endtime="20230309 17:05:46.959"/>
</kw>
<status status="PASS" starttime="20230309 17:05:46.948" endtime="20230309 17:05:46.960"/>
</kw>
<msg timestamp="20230309 17:05:46.960" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:05:46.948" endtime="20230309 17:05:46.960"/>
</kw>
<msg timestamp="20230309 17:05:46.961" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230309 17:05:46.947" endtime="20230309 17:05:46.961"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:05:46.962" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:05:46.961" endtime="20230309 17:05:46.962"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:05:46.968" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:05:47.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:05:47.009" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:05:46.966" endtime="20230309 17:05:47.009"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:05:47.011" level="INFO"/>
<status status="PASS" starttime="20230309 17:05:47.010" endtime="20230309 17:05:47.011"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:05:47.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:05:47.011" endtime="20230309 17:05:47.012"/>
</kw>
<status status="PASS" starttime="20230309 17:05:46.965" endtime="20230309 17:05:47.012"/>
</kw>
<msg timestamp="20230309 17:05:47.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:05:46.964" endtime="20230309 17:05:47.013"/>
</kw>
<status status="PASS" starttime="20230309 17:05:46.963" endtime="20230309 17:05:47.013"/>
</kw>
<status status="PASS" starttime="20230309 17:05:46.962" endtime="20230309 17:05:47.013"/>
</kw>
<status status="PASS" starttime="20230309 17:05:46.946" endtime="20230309 17:05:47.013"/>
</kw>
<status status="PASS" starttime="20230309 17:05:46.946" endtime="20230309 17:05:47.013"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create o3://om/${volume4}/bucket1 --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:05:47.019" level="INFO">Running command 'ozone sh bucket create o3://om/fstest435/bucket1 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:05:53.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:05:53.715" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:05:47.016" endtime="20230309 17:05:53.715"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:05:53.717" level="INFO"/>
<status status="PASS" starttime="20230309 17:05:53.716" endtime="20230309 17:05:53.717"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:05:53.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:05:53.717" endtime="20230309 17:05:53.718"/>
</kw>
<status status="PASS" starttime="20230309 17:05:47.015" endtime="20230309 17:05:53.719"/>
</kw>
<msg timestamp="20230309 17:05:53.719" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:05:47.015" endtime="20230309 17:05:53.720"/>
</kw>
<msg timestamp="20230309 17:05:53.720" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 17:05:47.014" endtime="20230309 17:05:53.720"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:05:53.721" endtime="20230309 17:05:53.722"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put ${volume4}/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:05:53.727" level="INFO">Running command 'ozone sh key put fstest435/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:06:03.277" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:06:03.277" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:05:53.724" endtime="20230309 17:06:03.277"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:06:03.278" level="INFO"/>
<status status="PASS" starttime="20230309 17:06:03.277" endtime="20230309 17:06:03.278"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:06:03.279" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:06:03.279" endtime="20230309 17:06:03.280"/>
</kw>
<status status="PASS" starttime="20230309 17:05:53.723" endtime="20230309 17:06:03.280"/>
</kw>
<msg timestamp="20230309 17:06:03.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:05:53.723" endtime="20230309 17:06:03.281"/>
</kw>
<msg timestamp="20230309 17:06:03.282" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 17:05:53.722" endtime="20230309 17:06:03.282"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:06:03.282" endtime="20230309 17:06:03.283"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${volume4}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:06:03.290" level="INFO">Running command 'ozone sh key list fstest435/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:06:10.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:06:10.548" level="INFO">${output} = [ {
  "volumeName" : "fstest435",
  "bucketName" : "bucket1",
  "name" : "key1",
  "dataSize" : 17539,
  "creationTime" : "2023-03-09T17:05:59.936Z",
  "modificationTime" : "2023-03-09T17:06:02.820Z",...</msg>
<status status="PASS" starttime="20230309 17:06:03.287" endtime="20230309 17:06:10.548"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:06:10.551" level="INFO">[ {
  "volumeName" : "fstest435",
  "bucketName" : "bucket1",
  "name" : "key1",
  "dataSize" : 17539,
  "creationTime" : "2023-03-09T17:05:59.936Z",
  "modificationTime" : "2023-03-09T17:06:02.820Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { }
} ]</msg>
<status status="PASS" starttime="20230309 17:06:10.549" endtime="20230309 17:06:10.551"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:06:10.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:06:10.551" endtime="20230309 17:06:10.553"/>
</kw>
<status status="PASS" starttime="20230309 17:06:03.285" endtime="20230309 17:06:10.553"/>
</kw>
<msg timestamp="20230309 17:06:10.553" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:06:03.285" endtime="20230309 17:06:10.554"/>
</kw>
<msg timestamp="20230309 17:06:10.554" level="INFO">${result} = [ {
  "volumeName" : "fstest435",
  "bucketName" : "bucket1",
  "name" : "key1",
  "dataSize" : 17539,
  "creationTime" : "2023-03-09T17:05:59.936Z",
  "modificationTime" : "2023-03-09T17:06:02.820Z",...</msg>
<status status="PASS" starttime="20230309 17:06:03.283" endtime="20230309 17:06:10.554"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:06:10.554" endtime="20230309 17:06:10.555"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key delete ${volume4}/bucket1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:06:10.561" level="INFO">Running command 'ozone sh key delete fstest435/bucket1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:06:17.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:06:17.089" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:06:10.557" endtime="20230309 17:06:17.089"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:06:17.091" level="INFO"/>
<status status="PASS" starttime="20230309 17:06:17.090" endtime="20230309 17:06:17.091"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:06:17.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:06:17.091" endtime="20230309 17:06:17.092"/>
</kw>
<status status="PASS" starttime="20230309 17:06:10.557" endtime="20230309 17:06:17.092"/>
</kw>
<msg timestamp="20230309 17:06:17.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:06:10.556" endtime="20230309 17:06:17.093"/>
</kw>
<msg timestamp="20230309 17:06:17.093" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 17:06:10.555" endtime="20230309 17:06:17.093"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:06:17.093" endtime="20230309 17:06:17.094"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket delete ${volume4}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:06:17.099" level="INFO">Running command 'ozone sh bucket delete fstest435/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:06:23.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:06:23.809" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:06:17.096" endtime="20230309 17:06:23.809"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:06:23.811" level="INFO"/>
<status status="PASS" starttime="20230309 17:06:23.810" endtime="20230309 17:06:23.812"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:06:23.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:06:23.812" endtime="20230309 17:06:23.813"/>
</kw>
<status status="PASS" starttime="20230309 17:06:17.095" endtime="20230309 17:06:23.813"/>
</kw>
<msg timestamp="20230309 17:06:23.813" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:06:17.095" endtime="20230309 17:06:23.814"/>
</kw>
<msg timestamp="20230309 17:06:23.814" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 17:06:17.094" endtime="20230309 17:06:23.814"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:06:23.814" endtime="20230309 17:06:23.815"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:05:40.085" endtime="20230309 17:06:23.815"/>
</test>
<test id="s1-s2-s3-t4" name="Create volume bucket with credentials" line="78">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:06:23.824" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:06:23.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:06:23.829" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230309 17:06:23.821" endtime="20230309 17:06:23.830"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:06:23.831" level="INFO">scm</msg>
<status status="PASS" starttime="20230309 17:06:23.830" endtime="20230309 17:06:23.831"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:06:23.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:06:23.832" endtime="20230309 17:06:23.832"/>
</kw>
<status status="PASS" starttime="20230309 17:06:23.820" endtime="20230309 17:06:23.833"/>
</kw>
<msg timestamp="20230309 17:06:23.833" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:06:23.820" endtime="20230309 17:06:23.834"/>
</kw>
<msg timestamp="20230309 17:06:23.834" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230309 17:06:23.819" endtime="20230309 17:06:23.834"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:06:23.835" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:06:23.834" endtime="20230309 17:06:23.835"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:06:23.842" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:06:23.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:06:23.869" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:06:23.838" endtime="20230309 17:06:23.870"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:06:23.872" level="INFO"/>
<status status="PASS" starttime="20230309 17:06:23.870" endtime="20230309 17:06:23.874"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:06:23.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:06:23.874" endtime="20230309 17:06:23.876"/>
</kw>
<status status="PASS" starttime="20230309 17:06:23.837" endtime="20230309 17:06:23.877"/>
</kw>
<msg timestamp="20230309 17:06:23.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:06:23.837" endtime="20230309 17:06:23.877"/>
</kw>
<status status="PASS" starttime="20230309 17:06:23.836" endtime="20230309 17:06:23.878"/>
</kw>
<status status="PASS" starttime="20230309 17:06:23.836" endtime="20230309 17:06:23.878"/>
</kw>
<status status="PASS" starttime="20230309 17:06:23.819" endtime="20230309 17:06:23.879"/>
</kw>
<status status="PASS" starttime="20230309 17:06:23.818" endtime="20230309 17:06:23.879"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup volume names</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup volume names">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>2</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:06:23.881" level="INFO">${random} = 96</msg>
<status status="PASS" starttime="20230309 17:06:23.880" endtime="20230309 17:06:23.881"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume1}</arg>
<arg>fstest${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:06:23.881" level="INFO">${volume1} = fstest96</msg>
<status status="PASS" starttime="20230309 17:06:23.881" endtime="20230309 17:06:23.881"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume2}</arg>
<arg>fstest2${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:06:23.882" level="INFO">${volume2} = fstest296</msg>
<status status="PASS" starttime="20230309 17:06:23.882" endtime="20230309 17:06:23.883"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume3}</arg>
<arg>fstest3${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:06:23.883" level="INFO">${volume3} = fstest396</msg>
<status status="PASS" starttime="20230309 17:06:23.883" endtime="20230309 17:06:23.883"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume4}</arg>
<arg>fstest4${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:06:23.885" level="INFO">${volume4} = fstest496</msg>
<status status="PASS" starttime="20230309 17:06:23.884" endtime="20230309 17:06:23.885"/>
</kw>
<status status="PASS" starttime="20230309 17:06:23.879" endtime="20230309 17:06:23.885"/>
</kw>
<status status="PASS" starttime="20230309 17:06:23.879" endtime="20230309 17:06:23.885"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://om/${volume1}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:06:23.892" level="INFO">Running command 'ozone sh volume create o3://om/fstest96 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:06:30.213" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:06:30.213" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:06:23.888" endtime="20230309 17:06:30.213"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:06:30.215" level="INFO"/>
<status status="PASS" starttime="20230309 17:06:30.214" endtime="20230309 17:06:30.215"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:06:30.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:06:30.216" endtime="20230309 17:06:30.217"/>
</kw>
<status status="PASS" starttime="20230309 17:06:23.887" endtime="20230309 17:06:30.217"/>
</kw>
<msg timestamp="20230309 17:06:30.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:06:23.886" endtime="20230309 17:06:30.218"/>
</kw>
<status status="PASS" starttime="20230309 17:06:23.885" endtime="20230309 17:06:30.218"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://om/${volume2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:06:30.223" level="INFO">Running command 'ozone sh volume create o3://om/fstest296 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:06:37.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:06:37.347" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:06:30.220" endtime="20230309 17:06:37.347"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:06:37.349" level="INFO"/>
<status status="PASS" starttime="20230309 17:06:37.348" endtime="20230309 17:06:37.349"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:06:37.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:06:37.349" endtime="20230309 17:06:37.350"/>
</kw>
<status status="PASS" starttime="20230309 17:06:30.220" endtime="20230309 17:06:37.350"/>
</kw>
<msg timestamp="20230309 17:06:37.351" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:06:30.219" endtime="20230309 17:06:37.351"/>
</kw>
<status status="PASS" starttime="20230309 17:06:30.218" endtime="20230309 17:06:37.351"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create o3://om/${volume1}/bucket1 --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:06:37.357" level="INFO">Running command 'ozone sh bucket create o3://om/fstest96/bucket1 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:06:43.892" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:06:43.892" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:06:37.353" endtime="20230309 17:06:43.892"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:06:43.894" level="INFO"/>
<status status="PASS" starttime="20230309 17:06:43.893" endtime="20230309 17:06:43.894"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:06:43.894" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:06:43.894" endtime="20230309 17:06:43.895"/>
</kw>
<status status="PASS" starttime="20230309 17:06:37.353" endtime="20230309 17:06:43.895"/>
</kw>
<msg timestamp="20230309 17:06:43.895" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:06:37.352" endtime="20230309 17:06:43.896"/>
</kw>
<status status="PASS" starttime="20230309 17:06:37.352" endtime="20230309 17:06:43.896"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create o3://om/${volume1}/bucket2 --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:06:43.902" level="INFO">Running command 'ozone sh bucket create o3://om/fstest96/bucket2 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:06:50.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:06:50.124" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:06:43.898" endtime="20230309 17:06:50.124"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:06:50.127" level="INFO"/>
<status status="PASS" starttime="20230309 17:06:50.125" endtime="20230309 17:06:50.127"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:06:50.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:06:50.128" endtime="20230309 17:06:50.128"/>
</kw>
<status status="PASS" starttime="20230309 17:06:43.897" endtime="20230309 17:06:50.129"/>
</kw>
<msg timestamp="20230309 17:06:50.129" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:06:43.897" endtime="20230309 17:06:50.129"/>
</kw>
<status status="PASS" starttime="20230309 17:06:43.896" endtime="20230309 17:06:50.130"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create o3://om/${volume2}/bucket3 --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:06:50.135" level="INFO">Running command 'ozone sh bucket create o3://om/fstest296/bucket3 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:06:56.738" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:06:56.739" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:06:50.132" endtime="20230309 17:06:56.739"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:06:56.740" level="INFO"/>
<status status="PASS" starttime="20230309 17:06:56.739" endtime="20230309 17:06:56.741"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:06:56.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:06:56.741" endtime="20230309 17:06:56.741"/>
</kw>
<status status="PASS" starttime="20230309 17:06:50.131" endtime="20230309 17:06:56.742"/>
</kw>
<msg timestamp="20230309 17:06:56.742" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:06:50.131" endtime="20230309 17:06:56.743"/>
</kw>
<status status="PASS" starttime="20230309 17:06:50.130" endtime="20230309 17:06:56.743"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:06:23.817" endtime="20230309 17:06:56.743"/>
</test>
<test id="s1-s2-s3-t5" name="Check volume from ozonefs" line="88">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls o3fs://bucket1.${volume1}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:06:56.752" level="INFO">Running command 'ozone fs -ls o3fs://bucket1.fstest96/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:07:02.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:07:02.061" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:06:56.749" endtime="20230309 17:07:02.061"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:07:02.064" level="INFO"/>
<status status="PASS" starttime="20230309 17:07:02.062" endtime="20230309 17:07:02.064"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:07:02.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:07:02.064" endtime="20230309 17:07:02.065"/>
</kw>
<status status="PASS" starttime="20230309 17:06:56.748" endtime="20230309 17:07:02.065"/>
</kw>
<msg timestamp="20230309 17:07:02.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:06:56.748" endtime="20230309 17:07:02.066"/>
</kw>
<msg timestamp="20230309 17:07:02.066" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 17:06:56.747" endtime="20230309 17:07:02.066"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:06:56.745" endtime="20230309 17:07:02.067"/>
</test>
<test id="s1-s2-s3-t6" name="Test Volume Acls" line="91">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${volume3}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:07:02.075" level="INFO">Running command 'ozone sh volume create fstest396 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:07:08.916" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:07:08.916" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:07:02.072" endtime="20230309 17:07:08.916"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:07:08.918" level="INFO"/>
<status status="PASS" starttime="20230309 17:07:08.917" endtime="20230309 17:07:08.918"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:07:08.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:07:08.918" endtime="20230309 17:07:08.919"/>
</kw>
<status status="PASS" starttime="20230309 17:07:02.071" endtime="20230309 17:07:08.920"/>
</kw>
<msg timestamp="20230309 17:07:08.920" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:07:02.071" endtime="20230309 17:07:08.920"/>
</kw>
<msg timestamp="20230309 17:07:08.921" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 17:07:02.069" endtime="20230309 17:07:08.921"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:07:08.921" endtime="20230309 17:07:08.922"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${volume3}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:07:08.929" level="INFO">Running command 'ozone sh volume getacl fstest396 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:07:16.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:07:16.215" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230309 17:07:08.925" endtime="20230309 17:07:16.215"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:07:16.217" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230309 17:07:16.216" endtime="20230309 17:07:16.217"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:07:16.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:07:16.217" endtime="20230309 17:07:16.218"/>
</kw>
<status status="PASS" starttime="20230309 17:07:08.923" endtime="20230309 17:07:16.218"/>
</kw>
<msg timestamp="20230309 17:07:16.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:07:08.923" endtime="20230309 17:07:16.221"/>
</kw>
<msg timestamp="20230309 17:07:16.221" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230309 17:07:08.922" endtime="20230309 17:07:16.221"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230309 17:07:16.221" endtime="20230309 17:07:16.223"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${volume3} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:07:16.229" level="INFO">Running command 'ozone sh volume addacl fstest396 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:07:22.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:07:22.651" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20230309 17:07:16.225" endtime="20230309 17:07:22.651"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:07:22.652" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20230309 17:07:22.651" endtime="20230309 17:07:22.652"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:07:22.653" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:07:22.652" endtime="20230309 17:07:22.653"/>
</kw>
<status status="PASS" starttime="20230309 17:07:16.225" endtime="20230309 17:07:22.654"/>
</kw>
<msg timestamp="20230309 17:07:22.654" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:07:16.224" endtime="20230309 17:07:22.654"/>
</kw>
<msg timestamp="20230309 17:07:22.655" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20230309 17:07:16.223" endtime="20230309 17:07:22.655"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${volume3}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:07:22.660" level="INFO">Running command 'ozone sh volume getacl fstest396 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:07:29.991" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:07:29.991" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20230309 17:07:22.657" endtime="20230309 17:07:29.991"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:07:29.993" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20230309 17:07:29.992" endtime="20230309 17:07:29.993"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:07:29.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:07:29.993" endtime="20230309 17:07:29.994"/>
</kw>
<status status="PASS" starttime="20230309 17:07:22.656" endtime="20230309 17:07:29.995"/>
</kw>
<msg timestamp="20230309 17:07:29.995" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:07:22.656" endtime="20230309 17:07:29.996"/>
</kw>
<msg timestamp="20230309 17:07:29.996" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20230309 17:07:22.655" endtime="20230309 17:07:29.996"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230309 17:07:29.996" endtime="20230309 17:07:29.998"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${volume3} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:07:30.004" level="INFO">Running command 'ozone sh volume removeacl fstest396 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:07:36.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:07:36.745" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230309 17:07:30.001" endtime="20230309 17:07:36.745"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:07:36.746" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230309 17:07:36.745" endtime="20230309 17:07:36.746"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:07:36.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:07:36.747" endtime="20230309 17:07:36.747"/>
</kw>
<status status="PASS" starttime="20230309 17:07:30.000" endtime="20230309 17:07:36.748"/>
</kw>
<msg timestamp="20230309 17:07:36.748" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:07:29.999" endtime="20230309 17:07:36.749"/>
</kw>
<msg timestamp="20230309 17:07:36.749" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230309 17:07:29.998" endtime="20230309 17:07:36.749"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${volume3}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:07:36.754" level="INFO">Running command 'ozone sh volume getacl fstest396 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:07:43.601" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:07:43.601" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20230309 17:07:36.751" endtime="20230309 17:07:43.602"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:07:43.603" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20230309 17:07:43.602" endtime="20230309 17:07:43.603"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:07:43.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:07:43.603" endtime="20230309 17:07:43.605"/>
</kw>
<status status="PASS" starttime="20230309 17:07:36.750" endtime="20230309 17:07:43.605"/>
</kw>
<msg timestamp="20230309 17:07:43.605" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:07:36.750" endtime="20230309 17:07:43.605"/>
</kw>
<msg timestamp="20230309 17:07:43.606" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20230309 17:07:36.749" endtime="20230309 17:07:43.606"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230309 17:07:43.606" endtime="20230309 17:07:43.607"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${volume3} -al user:superuser1:rwxy,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:07:43.613" level="INFO">Running command 'ozone sh volume setacl fstest396 -al user:superuser1:rwxy,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:07:50.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:07:50.769" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230309 17:07:43.610" endtime="20230309 17:07:50.769"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:07:50.772" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20230309 17:07:50.770" endtime="20230309 17:07:50.772"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:07:50.773" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:07:50.772" endtime="20230309 17:07:50.773"/>
</kw>
<status status="PASS" starttime="20230309 17:07:43.609" endtime="20230309 17:07:50.773"/>
</kw>
<msg timestamp="20230309 17:07:50.773" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:07:43.609" endtime="20230309 17:07:50.774"/>
</kw>
<msg timestamp="20230309 17:07:50.775" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230309 17:07:43.608" endtime="20230309 17:07:50.775"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${volume3}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:07:50.780" level="INFO">Running command 'ozone sh volume getacl fstest396 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:07:57.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:07:57.179" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20230309 17:07:50.777" endtime="20230309 17:07:57.179"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:07:57.182" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230309 17:07:57.180" endtime="20230309 17:07:57.182"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:07:57.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:07:57.182" endtime="20230309 17:07:57.183"/>
</kw>
<status status="PASS" starttime="20230309 17:07:50.776" endtime="20230309 17:07:57.184"/>
</kw>
<msg timestamp="20230309 17:07:57.184" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:07:50.776" endtime="20230309 17:07:57.185"/>
</kw>
<msg timestamp="20230309 17:07:57.185" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20230309 17:07:50.775" endtime="20230309 17:07:57.185"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230309 17:07:57.186" endtime="20230309 17:07:57.187"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230309 17:07:57.187" endtime="20230309 17:07:57.189"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:07:02.069" endtime="20230309 17:07:57.189"/>
</test>
<test id="s1-s2-s3-t7" name="Test Bucket Acls" line="107">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${volume3}/bk1 --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:07:57.197" level="INFO">Running command 'ozone sh bucket create fstest396/bk1 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:08:04.653" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:08:04.653" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:07:57.194" endtime="20230309 17:08:04.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:08:04.655" level="INFO"/>
<status status="PASS" starttime="20230309 17:08:04.654" endtime="20230309 17:08:04.655"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:08:04.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:08:04.655" endtime="20230309 17:08:04.656"/>
</kw>
<status status="PASS" starttime="20230309 17:07:57.193" endtime="20230309 17:08:04.657"/>
</kw>
<msg timestamp="20230309 17:08:04.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:07:57.192" endtime="20230309 17:08:04.657"/>
</kw>
<msg timestamp="20230309 17:08:04.658" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 17:07:57.191" endtime="20230309 17:08:04.658"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:08:04.658" endtime="20230309 17:08:04.659"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${volume3}/bk1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:08:04.665" level="INFO">Running command 'ozone sh bucket getacl fstest396/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:08:12.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:08:12.176" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230309 17:08:04.662" endtime="20230309 17:08:12.177"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:08:12.178" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230309 17:08:12.177" endtime="20230309 17:08:12.179"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:08:12.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:08:12.179" endtime="20230309 17:08:12.180"/>
</kw>
<status status="PASS" starttime="20230309 17:08:04.660" endtime="20230309 17:08:12.180"/>
</kw>
<msg timestamp="20230309 17:08:12.181" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:08:04.660" endtime="20230309 17:08:12.181"/>
</kw>
<msg timestamp="20230309 17:08:12.182" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230309 17:08:04.659" endtime="20230309 17:08:12.182"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230309 17:08:12.182" endtime="20230309 17:08:12.183"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${volume3}/bk1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:08:12.188" level="INFO">Running command 'ozone sh bucket addacl fstest396/bk1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:08:18.865" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:08:18.865" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230309 17:08:12.185" endtime="20230309 17:08:18.865"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:08:18.867" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230309 17:08:18.865" endtime="20230309 17:08:18.867"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:08:18.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:08:18.867" endtime="20230309 17:08:18.868"/>
</kw>
<status status="PASS" starttime="20230309 17:08:12.185" endtime="20230309 17:08:18.868"/>
</kw>
<msg timestamp="20230309 17:08:18.869" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:08:12.184" endtime="20230309 17:08:18.869"/>
</kw>
<msg timestamp="20230309 17:08:18.870" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230309 17:08:12.183" endtime="20230309 17:08:18.870"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${volume3}/bk1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:08:18.876" level="INFO">Running command 'ozone sh bucket getacl fstest396/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:08:25.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:08:25.943" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230309 17:08:18.872" endtime="20230309 17:08:25.943"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:08:25.945" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20230309 17:08:25.944" endtime="20230309 17:08:25.945"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:08:25.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:08:25.945" endtime="20230309 17:08:25.946"/>
</kw>
<status status="PASS" starttime="20230309 17:08:18.871" endtime="20230309 17:08:25.947"/>
</kw>
<msg timestamp="20230309 17:08:25.947" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:08:18.871" endtime="20230309 17:08:25.948"/>
</kw>
<msg timestamp="20230309 17:08:25.948" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230309 17:08:18.870" endtime="20230309 17:08:25.948"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230309 17:08:25.948" endtime="20230309 17:08:25.949"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${volume3}/bk1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:08:25.954" level="INFO">Running command 'ozone sh bucket removeacl fstest396/bk1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:08:32.589" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:08:32.589" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230309 17:08:25.951" endtime="20230309 17:08:32.589"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:08:32.591" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230309 17:08:32.590" endtime="20230309 17:08:32.591"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:08:32.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:08:32.591" endtime="20230309 17:08:32.592"/>
</kw>
<status status="PASS" starttime="20230309 17:08:25.950" endtime="20230309 17:08:32.593"/>
</kw>
<msg timestamp="20230309 17:08:32.593" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:08:25.950" endtime="20230309 17:08:32.593"/>
</kw>
<msg timestamp="20230309 17:08:32.594" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230309 17:08:25.949" endtime="20230309 17:08:32.594"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${volume3}/bk1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:08:32.600" level="INFO">Running command 'ozone sh bucket getacl fstest396/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:08:39.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:08:39.815" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230309 17:08:32.596" endtime="20230309 17:08:39.815"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:08:39.817" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20230309 17:08:39.815" endtime="20230309 17:08:39.817"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:08:39.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:08:39.817" endtime="20230309 17:08:39.818"/>
</kw>
<status status="PASS" starttime="20230309 17:08:32.595" endtime="20230309 17:08:39.819"/>
</kw>
<msg timestamp="20230309 17:08:39.819" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:08:32.595" endtime="20230309 17:08:39.819"/>
</kw>
<msg timestamp="20230309 17:08:39.820" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230309 17:08:32.594" endtime="20230309 17:08:39.820"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230309 17:08:39.820" endtime="20230309 17:08:39.821"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${volume3}/bk1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:08:39.828" level="INFO">Running command 'ozone sh bucket setacl fstest396/bk1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:08:46.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:08:46.222" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230309 17:08:39.825" endtime="20230309 17:08:46.222"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:08:46.224" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20230309 17:08:46.223" endtime="20230309 17:08:46.224"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:08:46.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:08:46.224" endtime="20230309 17:08:46.225"/>
</kw>
<status status="PASS" starttime="20230309 17:08:39.824" endtime="20230309 17:08:46.226"/>
</kw>
<msg timestamp="20230309 17:08:46.226" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:08:39.823" endtime="20230309 17:08:46.227"/>
</kw>
<msg timestamp="20230309 17:08:46.227" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230309 17:08:39.822" endtime="20230309 17:08:46.227"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${volume3}/bk1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:08:46.233" level="INFO">Running command 'ozone sh bucket getacl fstest396/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:08:53.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:08:53.349" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20230309 17:08:46.230" endtime="20230309 17:08:53.349"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:08:53.351" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230309 17:08:53.350" endtime="20230309 17:08:53.351"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:08:53.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:08:53.351" endtime="20230309 17:08:53.352"/>
</kw>
<status status="PASS" starttime="20230309 17:08:46.229" endtime="20230309 17:08:53.353"/>
</kw>
<msg timestamp="20230309 17:08:53.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:08:46.228" endtime="20230309 17:08:53.353"/>
</kw>
<msg timestamp="20230309 17:08:53.354" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20230309 17:08:46.227" endtime="20230309 17:08:53.354"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230309 17:08:53.354" endtime="20230309 17:08:53.355"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230309 17:08:53.355" endtime="20230309 17:08:53.356"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:07:57.190" endtime="20230309 17:08:53.356"/>
</test>
<test id="s1-s2-s3-t8" name="Test key Acls" line="123">
<kw name="Execute" library="os">
<arg>ozone sh key put ${volume3}/bk1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:08:53.364" level="INFO">Running command 'ozone sh key put fstest396/bk1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:09:03.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:09:03.280" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:08:53.361" endtime="20230309 17:09:03.280"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:09:03.282" level="INFO"/>
<status status="PASS" starttime="20230309 17:09:03.281" endtime="20230309 17:09:03.282"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:09:03.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:09:03.282" endtime="20230309 17:09:03.283"/>
</kw>
<status status="PASS" starttime="20230309 17:08:53.360" endtime="20230309 17:09:03.284"/>
</kw>
<msg timestamp="20230309 17:09:03.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:08:53.360" endtime="20230309 17:09:03.284"/>
</kw>
<status status="PASS" starttime="20230309 17:08:53.359" endtime="20230309 17:09:03.285"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${volume3}/bk1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:09:03.290" level="INFO">Running command 'ozone sh key getacl fstest396/bk1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:09:10.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:09:10.483" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230309 17:09:03.287" endtime="20230309 17:09:10.483"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:09:10.484" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230309 17:09:10.483" endtime="20230309 17:09:10.484"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:09:10.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:09:10.485" endtime="20230309 17:09:10.485"/>
</kw>
<status status="PASS" starttime="20230309 17:09:03.286" endtime="20230309 17:09:10.486"/>
</kw>
<msg timestamp="20230309 17:09:10.486" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:09:03.286" endtime="20230309 17:09:10.486"/>
</kw>
<msg timestamp="20230309 17:09:10.487" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230309 17:09:03.285" endtime="20230309 17:09:10.487"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230309 17:09:10.487" endtime="20230309 17:09:10.488"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${volume3}/bk1/key1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:09:10.493" level="INFO">Running command 'ozone sh key addacl fstest396/bk1/key1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:09:17.727" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:09:17.727" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230309 17:09:10.490" endtime="20230309 17:09:17.727"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:09:17.729" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230309 17:09:17.728" endtime="20230309 17:09:17.729"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:09:17.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:09:17.729" endtime="20230309 17:09:17.731"/>
</kw>
<status status="PASS" starttime="20230309 17:09:10.489" endtime="20230309 17:09:17.732"/>
</kw>
<msg timestamp="20230309 17:09:17.732" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:09:10.489" endtime="20230309 17:09:17.732"/>
</kw>
<msg timestamp="20230309 17:09:17.733" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230309 17:09:10.488" endtime="20230309 17:09:17.733"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${volume3}/bk1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:09:17.738" level="INFO">Running command 'ozone sh key getacl fstest396/bk1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:09:24.631" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:09:24.631" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230309 17:09:17.735" endtime="20230309 17:09:24.631"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:09:24.633" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20230309 17:09:24.632" endtime="20230309 17:09:24.633"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:09:24.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:09:24.633" endtime="20230309 17:09:24.634"/>
</kw>
<status status="PASS" starttime="20230309 17:09:17.734" endtime="20230309 17:09:24.635"/>
</kw>
<msg timestamp="20230309 17:09:24.635" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:09:17.734" endtime="20230309 17:09:24.635"/>
</kw>
<msg timestamp="20230309 17:09:24.636" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230309 17:09:17.733" endtime="20230309 17:09:24.636"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230309 17:09:24.636" endtime="20230309 17:09:24.637"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${volume3}/bk1/key1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:09:24.641" level="INFO">Running command 'ozone sh key removeacl fstest396/bk1/key1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:09:30.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:09:30.883" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230309 17:09:24.639" endtime="20230309 17:09:30.883"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:09:30.885" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230309 17:09:30.884" endtime="20230309 17:09:30.885"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:09:30.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:09:30.885" endtime="20230309 17:09:30.886"/>
</kw>
<status status="PASS" starttime="20230309 17:09:24.638" endtime="20230309 17:09:30.887"/>
</kw>
<msg timestamp="20230309 17:09:30.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:09:24.638" endtime="20230309 17:09:30.887"/>
</kw>
<msg timestamp="20230309 17:09:30.888" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230309 17:09:24.637" endtime="20230309 17:09:30.888"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${volume3}/bk1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:09:30.893" level="INFO">Running command 'ozone sh key getacl fstest396/bk1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:09:37.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:09:37.485" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230309 17:09:30.890" endtime="20230309 17:09:37.485"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:09:37.486" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20230309 17:09:37.485" endtime="20230309 17:09:37.486"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:09:37.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:09:37.487" endtime="20230309 17:09:37.487"/>
</kw>
<status status="PASS" starttime="20230309 17:09:30.889" endtime="20230309 17:09:37.488"/>
</kw>
<msg timestamp="20230309 17:09:37.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:09:30.889" endtime="20230309 17:09:37.489"/>
</kw>
<msg timestamp="20230309 17:09:37.489" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230309 17:09:30.888" endtime="20230309 17:09:37.489"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230309 17:09:37.489" endtime="20230309 17:09:37.490"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${volume3}/bk1/key1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:09:37.495" level="INFO">Running command 'ozone sh key setacl fstest396/bk1/key1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:09:43.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:09:43.936" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230309 17:09:37.492" endtime="20230309 17:09:43.936"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:09:43.938" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20230309 17:09:43.937" endtime="20230309 17:09:43.938"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:09:43.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:09:43.938" endtime="20230309 17:09:43.939"/>
</kw>
<status status="PASS" starttime="20230309 17:09:37.492" endtime="20230309 17:09:43.939"/>
</kw>
<msg timestamp="20230309 17:09:43.940" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:09:37.491" endtime="20230309 17:09:43.940"/>
</kw>
<msg timestamp="20230309 17:09:43.941" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230309 17:09:37.490" endtime="20230309 17:09:43.941"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${volume3}/bk1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:09:43.946" level="INFO">Running command 'ozone sh key getacl fstest396/bk1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:09:51.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:09:51.124" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20230309 17:09:43.943" endtime="20230309 17:09:51.124"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:09:51.126" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20230309 17:09:51.125" endtime="20230309 17:09:51.126"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:09:51.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:09:51.127" endtime="20230309 17:09:51.128"/>
</kw>
<status status="PASS" starttime="20230309 17:09:43.943" endtime="20230309 17:09:51.128"/>
</kw>
<msg timestamp="20230309 17:09:51.128" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:09:43.942" endtime="20230309 17:09:51.129"/>
</kw>
<msg timestamp="20230309 17:09:51.129" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20230309 17:09:43.941" endtime="20230309 17:09:51.129"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230309 17:09:51.130" endtime="20230309 17:09:51.131"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230309 17:09:51.131" endtime="20230309 17:09:51.131"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:08:53.358" endtime="20230309 17:09:51.132"/>
</test>
<test id="s1-s2-s3-t9" name="Test native authorizer" line="138">
<kw name="Execute" library="os">
<arg>ozone sh volume removeacl ${volume3} -a group:root:a</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:09:51.140" level="INFO">Running command 'ozone sh volume removeacl fstest396 -a group:root:a 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:09:57.897" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:09:57.897" level="INFO">${output} = ACL group:root:a[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230309 17:09:51.137" endtime="20230309 17:09:57.897"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:09:57.899" level="INFO">ACL group:root:a[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230309 17:09:57.898" endtime="20230309 17:09:57.899"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:09:57.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:09:57.899" endtime="20230309 17:09:57.900"/>
</kw>
<status status="PASS" starttime="20230309 17:09:51.136" endtime="20230309 17:09:57.900"/>
</kw>
<msg timestamp="20230309 17:09:57.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:09:51.135" endtime="20230309 17:09:57.901"/>
</kw>
<status status="PASS" starttime="20230309 17:09:51.135" endtime="20230309 17:09:57.901"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:09:57.907" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:09:57.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:09:57.913" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:09:57.903" endtime="20230309 17:09:57.913"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:09:57.915" level="INFO"/>
<status status="PASS" starttime="20230309 17:09:57.914" endtime="20230309 17:09:57.915"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:09:57.916" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:09:57.916" endtime="20230309 17:09:57.917"/>
</kw>
<status status="PASS" starttime="20230309 17:09:57.903" endtime="20230309 17:09:57.917"/>
</kw>
<msg timestamp="20230309 17:09:57.918" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:09:57.902" endtime="20230309 17:09:57.919"/>
</kw>
<status status="PASS" starttime="20230309 17:09:57.901" endtime="20230309 17:09:57.919"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:09:57.925" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:09:57.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:09:57.929" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230309 17:09:57.922" endtime="20230309 17:09:57.929"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:09:57.931" level="INFO">scm</msg>
<status status="PASS" starttime="20230309 17:09:57.930" endtime="20230309 17:09:57.931"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:09:57.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:09:57.931" endtime="20230309 17:09:57.932"/>
</kw>
<status status="PASS" starttime="20230309 17:09:57.922" endtime="20230309 17:09:57.932"/>
</kw>
<msg timestamp="20230309 17:09:57.933" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:09:57.921" endtime="20230309 17:09:57.933"/>
</kw>
<msg timestamp="20230309 17:09:57.934" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230309 17:09:57.921" endtime="20230309 17:09:57.934"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:09:57.934" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:09:57.934" endtime="20230309 17:09:57.935"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:09:57.940" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:09:57.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:09:57.974" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:09:57.937" endtime="20230309 17:09:57.974"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:09:57.976" level="INFO"/>
<status status="PASS" starttime="20230309 17:09:57.975" endtime="20230309 17:09:57.977"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:09:57.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:09:57.977" endtime="20230309 17:09:57.977"/>
</kw>
<status status="PASS" starttime="20230309 17:09:57.937" endtime="20230309 17:09:57.978"/>
</kw>
<msg timestamp="20230309 17:09:57.978" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:09:57.936" endtime="20230309 17:09:57.979"/>
</kw>
<status status="PASS" starttime="20230309 17:09:57.935" endtime="20230309 17:09:57.979"/>
</kw>
<status status="PASS" starttime="20230309 17:09:57.935" endtime="20230309 17:09:57.979"/>
</kw>
<status status="PASS" starttime="20230309 17:09:57.920" endtime="20230309 17:09:57.979"/>
</kw>
<status status="PASS" starttime="20230309 17:09:57.919" endtime="20230309 17:09:57.980"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket list /${volume3}/</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:09:57.984" level="INFO">Running command 'ozone sh bucket list /fstest396/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:10:04.783" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:10:04.783" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access volume Volume:fstest396 </msg>
<status status="PASS" starttime="20230309 17:09:57.981" endtime="20230309 17:10:04.783"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:10:04.785" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access volume Volume:fstest396 </msg>
<status status="PASS" starttime="20230309 17:10:04.784" endtime="20230309 17:10:04.785"/>
</kw>
<msg timestamp="20230309 17:10:04.786" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access volume Volume:fstest396 </msg>
<status status="PASS" starttime="20230309 17:09:57.980" endtime="20230309 17:10:04.786"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:10:04.786" endtime="20230309 17:10:04.787"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list /${volume3}/bk1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:10:04.791" level="INFO">Running command 'ozone sh key list /fstest396/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:10:11.544" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:10:11.544" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access volume Volume:fstest396 </msg>
<status status="PASS" starttime="20230309 17:10:04.788" endtime="20230309 17:10:11.544"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:10:11.546" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access volume Volume:fstest396 </msg>
<status status="PASS" starttime="20230309 17:10:11.545" endtime="20230309 17:10:11.546"/>
</kw>
<msg timestamp="20230309 17:10:11.546" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access volume Volume:fstest396 </msg>
<status status="PASS" starttime="20230309 17:10:04.787" endtime="20230309 17:10:11.547"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:10:11.547" endtime="20230309 17:10:11.547"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${volume3} -a user:testuser2/scm@EXAMPLE.COM:xy</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:10:11.552" level="INFO">Running command 'ozone sh volume addacl fstest396 -a user:testuser2/scm@EXAMPLE.COM:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:10:18.090" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:10:18.090" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have WRITE_ACL permission to access volume Volume:fstest396 </msg>
<status status="PASS" starttime="20230309 17:10:11.548" endtime="20230309 17:10:18.090"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:10:18.092" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have WRITE_ACL permission to access volume Volume:fstest396 </msg>
<status status="PASS" starttime="20230309 17:10:18.091" endtime="20230309 17:10:18.092"/>
</kw>
<msg timestamp="20230309 17:10:18.093" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have WRITE_ACL permission to access volume Volume:fstest396 </msg>
<status status="PASS" starttime="20230309 17:10:11.547" endtime="20230309 17:10:18.093"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have WRITE_ACL permission to access volume</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:10:18.093" endtime="20230309 17:10:18.094"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:10:18.100" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:10:18.105" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:10:18.106" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:10:18.097" endtime="20230309 17:10:18.106"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:10:18.107" level="INFO"/>
<status status="PASS" starttime="20230309 17:10:18.106" endtime="20230309 17:10:18.108"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:10:18.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:10:18.108" endtime="20230309 17:10:18.108"/>
</kw>
<status status="PASS" starttime="20230309 17:10:18.096" endtime="20230309 17:10:18.109"/>
</kw>
<msg timestamp="20230309 17:10:18.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:10:18.095" endtime="20230309 17:10:18.111"/>
</kw>
<status status="PASS" starttime="20230309 17:10:18.094" endtime="20230309 17:10:18.112"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:10:18.118" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:10:18.122" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:10:18.122" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230309 17:10:18.115" endtime="20230309 17:10:18.122"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:10:18.124" level="INFO">scm</msg>
<status status="PASS" starttime="20230309 17:10:18.123" endtime="20230309 17:10:18.124"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:10:18.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:10:18.125" endtime="20230309 17:10:18.126"/>
</kw>
<status status="PASS" starttime="20230309 17:10:18.114" endtime="20230309 17:10:18.126"/>
</kw>
<msg timestamp="20230309 17:10:18.126" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:10:18.114" endtime="20230309 17:10:18.127"/>
</kw>
<msg timestamp="20230309 17:10:18.127" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230309 17:10:18.113" endtime="20230309 17:10:18.127"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:10:18.129" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:10:18.128" endtime="20230309 17:10:18.129"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:10:18.136" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:10:18.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:10:18.197" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:10:18.132" endtime="20230309 17:10:18.197"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:10:18.199" level="INFO"/>
<status status="PASS" starttime="20230309 17:10:18.198" endtime="20230309 17:10:18.199"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:10:18.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:10:18.199" endtime="20230309 17:10:18.200"/>
</kw>
<status status="PASS" starttime="20230309 17:10:18.131" endtime="20230309 17:10:18.201"/>
</kw>
<msg timestamp="20230309 17:10:18.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:10:18.131" endtime="20230309 17:10:18.201"/>
</kw>
<status status="PASS" starttime="20230309 17:10:18.129" endtime="20230309 17:10:18.202"/>
</kw>
<status status="PASS" starttime="20230309 17:10:18.129" endtime="20230309 17:10:18.202"/>
</kw>
<status status="PASS" starttime="20230309 17:10:18.112" endtime="20230309 17:10:18.202"/>
</kw>
<status status="PASS" starttime="20230309 17:10:18.112" endtime="20230309 17:10:18.202"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl ${volume3} -a user:testuser2/scm@EXAMPLE.COM:xyrw</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:10:18.213" level="INFO">Running command 'ozone sh volume addacl fstest396 -a user:testuser2/scm@EXAMPLE.COM:xyrw 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:10:24.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:10:24.335" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230309 17:10:18.204" endtime="20230309 17:10:24.335"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:10:24.337" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230309 17:10:24.336" endtime="20230309 17:10:24.337"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:10:24.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:10:24.338" endtime="20230309 17:10:24.338"/>
</kw>
<status status="PASS" starttime="20230309 17:10:18.203" endtime="20230309 17:10:24.339"/>
</kw>
<msg timestamp="20230309 17:10:24.339" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:10:18.203" endtime="20230309 17:10:24.340"/>
</kw>
<status status="PASS" starttime="20230309 17:10:18.202" endtime="20230309 17:10:24.340"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:10:24.345" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:10:24.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:10:24.350" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:10:24.342" endtime="20230309 17:10:24.350"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:10:24.352" level="INFO"/>
<status status="PASS" starttime="20230309 17:10:24.351" endtime="20230309 17:10:24.352"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:10:24.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:10:24.352" endtime="20230309 17:10:24.353"/>
</kw>
<status status="PASS" starttime="20230309 17:10:24.342" endtime="20230309 17:10:24.353"/>
</kw>
<msg timestamp="20230309 17:10:24.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:10:24.341" endtime="20230309 17:10:24.354"/>
</kw>
<status status="PASS" starttime="20230309 17:10:24.340" endtime="20230309 17:10:24.354"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:10:24.360" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:10:24.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:10:24.365" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230309 17:10:24.358" endtime="20230309 17:10:24.365"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:10:24.367" level="INFO">scm</msg>
<status status="PASS" starttime="20230309 17:10:24.366" endtime="20230309 17:10:24.367"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:10:24.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:10:24.367" endtime="20230309 17:10:24.368"/>
</kw>
<status status="PASS" starttime="20230309 17:10:24.357" endtime="20230309 17:10:24.368"/>
</kw>
<msg timestamp="20230309 17:10:24.368" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:10:24.356" endtime="20230309 17:10:24.369"/>
</kw>
<msg timestamp="20230309 17:10:24.369" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230309 17:10:24.355" endtime="20230309 17:10:24.370"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:10:24.371" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:10:24.370" endtime="20230309 17:10:24.371"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:10:24.376" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:10:24.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:10:24.422" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:10:24.374" endtime="20230309 17:10:24.422"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:10:24.424" level="INFO"/>
<status status="PASS" starttime="20230309 17:10:24.423" endtime="20230309 17:10:24.424"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:10:24.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:10:24.424" endtime="20230309 17:10:24.425"/>
</kw>
<status status="PASS" starttime="20230309 17:10:24.373" endtime="20230309 17:10:24.425"/>
</kw>
<msg timestamp="20230309 17:10:24.425" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:10:24.373" endtime="20230309 17:10:24.426"/>
</kw>
<status status="PASS" starttime="20230309 17:10:24.371" endtime="20230309 17:10:24.426"/>
</kw>
<status status="PASS" starttime="20230309 17:10:24.371" endtime="20230309 17:10:24.426"/>
</kw>
<status status="PASS" starttime="20230309 17:10:24.355" endtime="20230309 17:10:24.427"/>
</kw>
<status status="PASS" starttime="20230309 17:10:24.354" endtime="20230309 17:10:24.427"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket list /${volume3}/</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:10:24.431" level="INFO">Running command 'ozone sh bucket list /fstest396/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:10:30.949" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:10:30.950" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access volume Volume:fstest396 </msg>
<status status="PASS" starttime="20230309 17:10:24.428" endtime="20230309 17:10:30.950"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:10:30.951" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access volume Volume:fstest396 </msg>
<status status="PASS" starttime="20230309 17:10:30.950" endtime="20230309 17:10:30.952"/>
</kw>
<msg timestamp="20230309 17:10:30.952" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access volume Volume:fstest396 </msg>
<status status="PASS" starttime="20230309 17:10:24.427" endtime="20230309 17:10:30.952"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access volume</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:10:30.952" endtime="20230309 17:10:30.953"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl ${volume3} -a user:testuser2/scm@EXAMPLE.COM:l</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:10:30.959" level="INFO">Running command 'ozone sh volume addacl fstest396 -a user:testuser2/scm@EXAMPLE.COM:l 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:10:37.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:10:37.622" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:l[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230309 17:10:30.956" endtime="20230309 17:10:37.622"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:10:37.624" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:l[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230309 17:10:37.623" endtime="20230309 17:10:37.624"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:10:37.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:10:37.624" endtime="20230309 17:10:37.625"/>
</kw>
<status status="PASS" starttime="20230309 17:10:30.955" endtime="20230309 17:10:37.625"/>
</kw>
<msg timestamp="20230309 17:10:37.625" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:10:30.954" endtime="20230309 17:10:37.626"/>
</kw>
<status status="PASS" starttime="20230309 17:10:30.953" endtime="20230309 17:10:37.626"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket list /${volume3}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:10:37.632" level="INFO">Running command 'ozone sh bucket list /fstest396/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:10:44.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:10:44.204" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "fstest396",
  "name" : "bk1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 52617,
  "usedNamespace" : 1,
  "creationTime" : "2023-03-09T1...</msg>
<status status="PASS" starttime="20230309 17:10:37.628" endtime="20230309 17:10:44.204"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:10:44.205" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "fstest396",
  "name" : "bk1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 52617,
  "usedNamespace" : 1,
  "creationTime" : "2023-03-09T17:08:04.234Z",
  "modificationTime" : "2023-03-09T17:08:46.144Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "testuser",
  "link" : false
} ]</msg>
<status status="PASS" starttime="20230309 17:10:44.204" endtime="20230309 17:10:44.206"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:10:44.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:10:44.206" endtime="20230309 17:10:44.207"/>
</kw>
<status status="PASS" starttime="20230309 17:10:37.628" endtime="20230309 17:10:44.207"/>
</kw>
<msg timestamp="20230309 17:10:44.207" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:10:37.627" endtime="20230309 17:10:44.208"/>
</kw>
<status status="PASS" starttime="20230309 17:10:37.627" endtime="20230309 17:10:44.208"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume getacl /${volume3}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:10:44.214" level="INFO">Running command 'ozone sh volume getacl /fstest396/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:10:51.244" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:10:51.244" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20230309 17:10:44.210" endtime="20230309 17:10:51.244"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:10:51.246" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser2/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "LIST", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20230309 17:10:51.245" endtime="20230309 17:10:51.246"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:10:51.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:10:51.247" endtime="20230309 17:10:51.248"/>
</kw>
<status status="PASS" starttime="20230309 17:10:44.210" endtime="20230309 17:10:51.248"/>
</kw>
<msg timestamp="20230309 17:10:51.248" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:10:44.209" endtime="20230309 17:10:51.249"/>
</kw>
<status status="PASS" starttime="20230309 17:10:44.208" endtime="20230309 17:10:51.249"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list /${volume3}/bk1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:10:51.254" level="INFO">Running command 'ozone sh key list /fstest396/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:10:57.499" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:10:57.499" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:fstest396 Bucket:bk1 </msg>
<status status="PASS" starttime="20230309 17:10:51.251" endtime="20230309 17:10:57.499"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:10:57.501" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:fstest396 Bucket:bk1 </msg>
<status status="PASS" starttime="20230309 17:10:57.500" endtime="20230309 17:10:57.501"/>
</kw>
<msg timestamp="20230309 17:10:57.501" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:fstest396 Bucket:bk1 </msg>
<status status="PASS" starttime="20230309 17:10:51.250" endtime="20230309 17:10:57.501"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:10:57.501" endtime="20230309 17:10:57.502"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:10:57.508" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:10:57.514" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:10:57.514" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:10:57.504" endtime="20230309 17:10:57.514"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:10:57.516" level="INFO"/>
<status status="PASS" starttime="20230309 17:10:57.515" endtime="20230309 17:10:57.516"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:10:57.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:10:57.516" endtime="20230309 17:10:57.517"/>
</kw>
<status status="PASS" starttime="20230309 17:10:57.503" endtime="20230309 17:10:57.518"/>
</kw>
<msg timestamp="20230309 17:10:57.518" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:10:57.503" endtime="20230309 17:10:57.518"/>
</kw>
<status status="PASS" starttime="20230309 17:10:57.502" endtime="20230309 17:10:57.519"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:10:57.525" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:10:57.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:10:57.530" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230309 17:10:57.522" endtime="20230309 17:10:57.530"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:10:57.531" level="INFO">scm</msg>
<status status="PASS" starttime="20230309 17:10:57.530" endtime="20230309 17:10:57.532"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:10:57.532" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:10:57.532" endtime="20230309 17:10:57.533"/>
</kw>
<status status="PASS" starttime="20230309 17:10:57.521" endtime="20230309 17:10:57.533"/>
</kw>
<msg timestamp="20230309 17:10:57.533" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:10:57.521" endtime="20230309 17:10:57.534"/>
</kw>
<msg timestamp="20230309 17:10:57.534" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230309 17:10:57.520" endtime="20230309 17:10:57.534"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:10:57.536" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:10:57.535" endtime="20230309 17:10:57.536"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:10:57.541" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:10:57.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:10:57.622" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:10:57.539" endtime="20230309 17:10:57.622"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:10:57.624" level="INFO"/>
<status status="PASS" starttime="20230309 17:10:57.623" endtime="20230309 17:10:57.624"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:10:57.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:10:57.624" endtime="20230309 17:10:57.625"/>
</kw>
<status status="PASS" starttime="20230309 17:10:57.538" endtime="20230309 17:10:57.626"/>
</kw>
<msg timestamp="20230309 17:10:57.626" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:10:57.538" endtime="20230309 17:10:57.627"/>
</kw>
<status status="PASS" starttime="20230309 17:10:57.536" endtime="20230309 17:10:57.627"/>
</kw>
<status status="PASS" starttime="20230309 17:10:57.536" endtime="20230309 17:10:57.627"/>
</kw>
<status status="PASS" starttime="20230309 17:10:57.519" endtime="20230309 17:10:57.628"/>
</kw>
<status status="PASS" starttime="20230309 17:10:57.519" endtime="20230309 17:10:57.628"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl ${volume3}/bk1 -a user:testuser2/scm@EXAMPLE.COM:a</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:10:57.634" level="INFO">Running command 'ozone sh bucket addacl fstest396/bk1 -a user:testuser2/scm@EXAMPLE.COM:a 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:11:03.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:11:03.961" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:a[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230309 17:10:57.630" endtime="20230309 17:11:03.961"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:11:03.963" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:a[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230309 17:11:03.962" endtime="20230309 17:11:03.963"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:11:03.964" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:11:03.963" endtime="20230309 17:11:03.964"/>
</kw>
<status status="PASS" starttime="20230309 17:10:57.630" endtime="20230309 17:11:03.964"/>
</kw>
<msg timestamp="20230309 17:11:03.965" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:10:57.629" endtime="20230309 17:11:03.965"/>
</kw>
<status status="PASS" starttime="20230309 17:10:57.628" endtime="20230309 17:11:03.965"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket getacl /${volume3}/bk1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:11:03.970" level="INFO">Running command 'ozone sh bucket getacl /fstest396/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:11:10.800" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:11:10.800" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20230309 17:11:03.967" endtime="20230309 17:11:10.800"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:11:10.802" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser2/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230309 17:11:10.801" endtime="20230309 17:11:10.802"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:11:10.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:11:10.802" endtime="20230309 17:11:10.803"/>
</kw>
<status status="PASS" starttime="20230309 17:11:03.967" endtime="20230309 17:11:10.803"/>
</kw>
<msg timestamp="20230309 17:11:10.803" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:11:03.966" endtime="20230309 17:11:10.804"/>
</kw>
<status status="PASS" starttime="20230309 17:11:03.966" endtime="20230309 17:11:10.804"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:11:10.809" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:11:10.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:11:10.815" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:11:10.806" endtime="20230309 17:11:10.815"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:11:10.816" level="INFO"/>
<status status="PASS" starttime="20230309 17:11:10.815" endtime="20230309 17:11:10.816"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:11:10.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:11:10.816" endtime="20230309 17:11:10.817"/>
</kw>
<status status="PASS" starttime="20230309 17:11:10.805" endtime="20230309 17:11:10.817"/>
</kw>
<msg timestamp="20230309 17:11:10.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:11:10.805" endtime="20230309 17:11:10.818"/>
</kw>
<status status="PASS" starttime="20230309 17:11:10.804" endtime="20230309 17:11:10.818"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:11:10.824" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:11:10.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:11:10.828" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230309 17:11:10.821" endtime="20230309 17:11:10.828"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:11:10.830" level="INFO">scm</msg>
<status status="PASS" starttime="20230309 17:11:10.829" endtime="20230309 17:11:10.830"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:11:10.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:11:10.830" endtime="20230309 17:11:10.831"/>
</kw>
<status status="PASS" starttime="20230309 17:11:10.820" endtime="20230309 17:11:10.832"/>
</kw>
<msg timestamp="20230309 17:11:10.832" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:11:10.820" endtime="20230309 17:11:10.832"/>
</kw>
<msg timestamp="20230309 17:11:10.833" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230309 17:11:10.819" endtime="20230309 17:11:10.833"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:11:10.834" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:11:10.833" endtime="20230309 17:11:10.834"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:11:10.840" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:11:10.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:11:10.864" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:11:10.837" endtime="20230309 17:11:10.864"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:11:10.865" level="INFO"/>
<status status="PASS" starttime="20230309 17:11:10.864" endtime="20230309 17:11:10.866"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:11:10.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:11:10.866" endtime="20230309 17:11:10.867"/>
</kw>
<status status="PASS" starttime="20230309 17:11:10.836" endtime="20230309 17:11:10.867"/>
</kw>
<msg timestamp="20230309 17:11:10.867" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:11:10.836" endtime="20230309 17:11:10.868"/>
</kw>
<status status="PASS" starttime="20230309 17:11:10.835" endtime="20230309 17:11:10.868"/>
</kw>
<status status="PASS" starttime="20230309 17:11:10.834" endtime="20230309 17:11:10.868"/>
</kw>
<status status="PASS" starttime="20230309 17:11:10.819" endtime="20230309 17:11:10.868"/>
</kw>
<status status="PASS" starttime="20230309 17:11:10.818" endtime="20230309 17:11:10.868"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket getacl /${volume3}/bk1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:11:10.874" level="INFO">Running command 'ozone sh bucket getacl /fstest396/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:11:17.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:11:17.385" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20230309 17:11:10.870" endtime="20230309 17:11:17.385"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:11:17.386" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser2/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230309 17:11:17.386" endtime="20230309 17:11:17.387"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:11:17.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:11:17.387" endtime="20230309 17:11:17.387"/>
</kw>
<status status="PASS" starttime="20230309 17:11:10.870" endtime="20230309 17:11:17.388"/>
</kw>
<msg timestamp="20230309 17:11:17.388" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:11:10.869" endtime="20230309 17:11:17.389"/>
</kw>
<status status="PASS" starttime="20230309 17:11:10.868" endtime="20230309 17:11:17.389"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key list /${volume3}/bk1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:11:17.393" level="INFO">Running command 'ozone sh key list /fstest396/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:11:24.025" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:11:24.025" level="INFO">${output} = [ {
  "volumeName" : "fstest396",
  "bucketName" : "bk1",
  "name" : "key1",
  "dataSize" : 17539,
  "creationTime" : "2023-03-09T17:08:59.955Z",
  "modificationTime" : "2023-03-09T17:09:43.824Z",
  "...</msg>
<status status="PASS" starttime="20230309 17:11:17.391" endtime="20230309 17:11:24.025"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:11:24.027" level="INFO">[ {
  "volumeName" : "fstest396",
  "bucketName" : "bk1",
  "name" : "key1",
  "dataSize" : 17539,
  "creationTime" : "2023-03-09T17:08:59.955Z",
  "modificationTime" : "2023-03-09T17:09:43.824Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { }
} ]</msg>
<status status="PASS" starttime="20230309 17:11:24.026" endtime="20230309 17:11:24.027"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:11:24.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:11:24.027" endtime="20230309 17:11:24.028"/>
</kw>
<status status="PASS" starttime="20230309 17:11:17.390" endtime="20230309 17:11:24.028"/>
</kw>
<msg timestamp="20230309 17:11:24.028" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:11:17.390" endtime="20230309 17:11:24.029"/>
</kw>
<status status="PASS" starttime="20230309 17:11:17.389" endtime="20230309 17:11:24.029"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:11:24.034" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:11:24.040" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:11:24.040" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:11:24.031" endtime="20230309 17:11:24.040"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:11:24.043" level="INFO"/>
<status status="PASS" starttime="20230309 17:11:24.041" endtime="20230309 17:11:24.043"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:11:24.044" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:11:24.043" endtime="20230309 17:11:24.044"/>
</kw>
<status status="PASS" starttime="20230309 17:11:24.031" endtime="20230309 17:11:24.044"/>
</kw>
<msg timestamp="20230309 17:11:24.044" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:11:24.030" endtime="20230309 17:11:24.045"/>
</kw>
<status status="PASS" starttime="20230309 17:11:24.030" endtime="20230309 17:11:24.045"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:11:24.054" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:11:24.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:11:24.061" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230309 17:11:24.051" endtime="20230309 17:11:24.061"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:11:24.063" level="INFO">scm</msg>
<status status="PASS" starttime="20230309 17:11:24.062" endtime="20230309 17:11:24.063"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:11:24.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:11:24.063" endtime="20230309 17:11:24.064"/>
</kw>
<status status="PASS" starttime="20230309 17:11:24.048" endtime="20230309 17:11:24.065"/>
</kw>
<msg timestamp="20230309 17:11:24.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:11:24.048" endtime="20230309 17:11:24.066"/>
</kw>
<msg timestamp="20230309 17:11:24.066" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230309 17:11:24.047" endtime="20230309 17:11:24.066"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:11:24.067" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:11:24.066" endtime="20230309 17:11:24.067"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:11:24.074" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:11:24.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:11:24.208" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:11:24.070" endtime="20230309 17:11:24.208"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:11:24.210" level="INFO"/>
<status status="PASS" starttime="20230309 17:11:24.209" endtime="20230309 17:11:24.211"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:11:24.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:11:24.211" endtime="20230309 17:11:24.212"/>
</kw>
<status status="PASS" starttime="20230309 17:11:24.070" endtime="20230309 17:11:24.212"/>
</kw>
<msg timestamp="20230309 17:11:24.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:11:24.069" endtime="20230309 17:11:24.213"/>
</kw>
<status status="PASS" starttime="20230309 17:11:24.068" endtime="20230309 17:11:24.213"/>
</kw>
<status status="PASS" starttime="20230309 17:11:24.068" endtime="20230309 17:11:24.213"/>
</kw>
<status status="PASS" starttime="20230309 17:11:24.046" endtime="20230309 17:11:24.214"/>
</kw>
<status status="PASS" starttime="20230309 17:11:24.046" endtime="20230309 17:11:24.214"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:09:51.133" endtime="20230309 17:11:24.214"/>
</test>
<test id="s1-s2-s3-t10" name="Test tmp mount for shared ofs tmp dir" line="172">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.enable.ofs.shared.tmp.dir</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:11:24.221" level="INFO">Running command 'ozone getconf confKey ozone.om.enable.ofs.shared.tmp.dir 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:11:26.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:11:26.053" level="INFO">${output} = false</msg>
<status status="PASS" starttime="20230309 17:11:24.218" endtime="20230309 17:11:26.053"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:11:26.055" level="INFO">false</msg>
<status status="PASS" starttime="20230309 17:11:26.054" endtime="20230309 17:11:26.055"/>
</kw>
<msg timestamp="20230309 17:11:26.056" level="INFO">${result} = false</msg>
<status status="PASS" starttime="20230309 17:11:24.217" endtime="20230309 17:11:26.056"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${contains}</var>
<arg>"true" in """${result}"""</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230309 17:11:26.057" level="INFO">${contains} = False</msg>
<status status="PASS" starttime="20230309 17:11:26.056" endtime="20230309 17:11:26.057"/>
</kw>
<if>
<branch type="IF" condition="${contains} == ${True}">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20230309 17:11:26.058" endtime="20230309 17:11:26.058"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${TMP_MOUNT} -u testuser</arg>
<status status="NOT RUN" starttime="20230309 17:11:26.058" endtime="20230309 17:11:26.058"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${TMP_MOUNT}/${TMP_DIR} -u testuser</arg>
<status status="NOT RUN" starttime="20230309 17:11:26.059" endtime="20230309 17:11:26.059"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl /${TMP_MOUNT} -a user:testuser/scm@EXAMPLE.COM:a,user:testuser2/scm@EXAMPLE.COM:rw</arg>
<status status="NOT RUN" starttime="20230309 17:11:26.059" endtime="20230309 17:11:26.059"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl /${TMP_MOUNT}/${TMP_DIR} -a user:testuser/scm@EXAMPLE.COM:a,user:testuser2/scm@EXAMPLE.COM:rwlc</arg>
<status status="NOT RUN" starttime="20230309 17:11:26.059" endtime="20230309 17:11:26.059"/>
</kw>
<kw name="Format ofs TMPMOUNT">
<var>${tmpdirmount}</var>
<arg>${TMP_MOUNT}</arg>
<status status="NOT RUN" starttime="20230309 17:11:26.060" endtime="20230309 17:11:26.060"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -put ./NOTICE.txt ${tmpdirmount}</arg>
<status status="NOT RUN" starttime="20230309 17:11:26.060" endtime="20230309 17:11:26.060"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="NOT RUN" starttime="20230309 17:11:26.060" endtime="20230309 17:11:26.060"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20230309 17:11:26.060" endtime="20230309 17:11:26.060"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -put ./LICENSE.txt ${tmpdirmount}</arg>
<status status="NOT RUN" starttime="20230309 17:11:26.061" endtime="20230309 17:11:26.061"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="NOT RUN" starttime="20230309 17:11:26.061" endtime="20230309 17:11:26.061"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${tmpdirmount}</arg>
<status status="NOT RUN" starttime="20230309 17:11:26.061" endtime="20230309 17:11:26.061"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230309 17:11:26.062" endtime="20230309 17:11:26.062"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LICENSE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230309 17:11:26.062" endtime="20230309 17:11:26.062"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone fs -rm -skipTrash ${tmpdirmount}/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20230309 17:11:26.063" endtime="20230309 17:11:26.063"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230309 17:11:26.063" endtime="20230309 17:11:26.063"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -rm -skipTrash ${tmpdirmount}/LICENSE.txt</arg>
<status status="NOT RUN" starttime="20230309 17:11:26.063" endtime="20230309 17:11:26.063"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Deleted</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230309 17:11:26.063" endtime="20230309 17:11:26.063"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20230309 17:11:26.064" endtime="20230309 17:11:26.064"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -rm -skipTrash ${tmpdirmount}/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20230309 17:11:26.064" endtime="20230309 17:11:26.064"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Deleted</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230309 17:11:26.064" endtime="20230309 17:11:26.064"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -rm -r -skipTrash ${tmpdirmount}</arg>
<status status="NOT RUN" starttime="20230309 17:11:26.064" endtime="20230309 17:11:26.064"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete /${TMP_MOUNT}</arg>
<status status="NOT RUN" starttime="20230309 17:11:26.065" endtime="20230309 17:11:26.065"/>
</kw>
<status status="NOT RUN" starttime="20230309 17:11:26.058" endtime="20230309 17:11:26.065"/>
</branch>
<status status="PASS" starttime="20230309 17:11:26.057" endtime="20230309 17:11:26.065"/>
</if>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:11:24.216" endtime="20230309 17:11:26.065"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20230309 17:05:27.438" endtime="20230309 17:11:26.068"/>
</suite>
<suite id="s1-s2-s4" name="Ozone-Secure-S3" source="/opt/hadoop/smoketest/security/ozone-secure-s3.robot">
<test id="s1-s2-s4-t1" name="Secure S3 test Success" line="37">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup s3 tests</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup s3 tests" library="commonawslib">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:11:26.116" level="INFO">${randStr} = 6318190960</msg>
<status status="PASS" starttime="20230309 17:11:26.115" endtime="20230309 17:11:26.116"/>
</kw>
<msg timestamp="20230309 17:11:26.116" level="INFO">${random} = ozone-test-6318190960</msg>
<status status="PASS" starttime="20230309 17:11:26.115" endtime="20230309 17:11:26.116"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:11:26.118" level="INFO">${PREFIX} = ozone-test-6318190960</msg>
<status status="PASS" starttime="20230309 17:11:26.117" endtime="20230309 17:11:26.119"/>
</kw>
<status status="PASS" starttime="20230309 17:11:26.114" endtime="20230309 17:11:26.119"/>
</kw>
<status status="PASS" starttime="20230309 17:11:26.114" endtime="20230309 17:11:26.119"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which aws</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:11:26.122" level="INFO">Running command 'which aws 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:11:26.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:11:26.128" level="INFO">${output} = /usr/local/bin/aws</msg>
<status status="PASS" starttime="20230309 17:11:26.120" endtime="20230309 17:11:26.128"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230309 17:11:26.129" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:11:26.128" endtime="20230309 17:11:26.129"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20230309 17:11:26.130" endtime="20230309 17:11:26.130"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230309 17:11:26.130" endtime="20230309 17:11:26.130"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20230309 17:11:26.130" endtime="20230309 17:11:26.131"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230309 17:11:26.131" endtime="20230309 17:11:26.131"/>
</kw>
<status status="PASS" starttime="20230309 17:11:26.119" endtime="20230309 17:11:26.132"/>
</kw>
<status status="PASS" starttime="20230309 17:11:26.119" endtime="20230309 17:11:26.132"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:11:26.140" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:11:26.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:11:26.145" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230309 17:11:26.137" endtime="20230309 17:11:26.145"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:11:26.146" level="INFO">scm</msg>
<status status="PASS" starttime="20230309 17:11:26.145" endtime="20230309 17:11:26.146"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:11:26.147" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:11:26.147" endtime="20230309 17:11:26.148"/>
</kw>
<status status="PASS" starttime="20230309 17:11:26.136" endtime="20230309 17:11:26.148"/>
</kw>
<msg timestamp="20230309 17:11:26.148" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:11:26.135" endtime="20230309 17:11:26.149"/>
</kw>
<msg timestamp="20230309 17:11:26.149" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230309 17:11:26.135" endtime="20230309 17:11:26.149"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:11:26.152" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:11:26.150" endtime="20230309 17:11:26.152"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:11:26.158" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:11:26.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:11:26.208" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:11:26.155" endtime="20230309 17:11:26.208"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:11:26.210" level="INFO"/>
<status status="PASS" starttime="20230309 17:11:26.209" endtime="20230309 17:11:26.210"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:11:26.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:11:26.211" endtime="20230309 17:11:26.211"/>
</kw>
<status status="PASS" starttime="20230309 17:11:26.154" endtime="20230309 17:11:26.212"/>
</kw>
<msg timestamp="20230309 17:11:26.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:11:26.154" endtime="20230309 17:11:26.213"/>
</kw>
<status status="PASS" starttime="20230309 17:11:26.153" endtime="20230309 17:11:26.213"/>
</kw>
<status status="PASS" starttime="20230309 17:11:26.152" endtime="20230309 17:11:26.213"/>
</kw>
<status status="PASS" starttime="20230309 17:11:26.134" endtime="20230309 17:11:26.213"/>
</kw>
<status status="PASS" starttime="20230309 17:11:26.133" endtime="20230309 17:11:26.213"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:11:26.220" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:11:31.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:11:31.540" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=0ed3348cdf0e69ac20b19bc2afac83bc29be08de846b17c70c9b72562355d330</msg>
<status status="PASS" starttime="20230309 17:11:26.217" endtime="20230309 17:11:31.540"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:11:31.541" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=0ed3348cdf0e69ac20b19bc2afac83bc29be08de846b17c70c9b72562355d330</msg>
<status status="PASS" starttime="20230309 17:11:31.540" endtime="20230309 17:11:31.541"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:11:31.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:11:31.542" endtime="20230309 17:11:31.543"/>
</kw>
<status status="PASS" starttime="20230309 17:11:26.216" endtime="20230309 17:11:31.543"/>
</kw>
<msg timestamp="20230309 17:11:31.543" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:11:26.216" endtime="20230309 17:11:31.544"/>
</kw>
<msg timestamp="20230309 17:11:31.545" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=0ed3348cdf0e69ac20b19bc2afac83bc29be08de846b17c70c9b72562355d330</msg>
<status status="PASS" starttime="20230309 17:11:26.215" endtime="20230309 17:11:31.545"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230309 17:11:31.546" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230309 17:11:31.545" endtime="20230309 17:11:31.546"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20230309 17:11:31.547" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230309 17:11:31.546" endtime="20230309 17:11:31.547"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230309 17:11:31.548" level="INFO">${secret} = ['0ed3348cdf0e69ac20b19bc2afac83bc29be08de846b17c70c9b72562355d330']</msg>
<status status="PASS" starttime="20230309 17:11:31.547" endtime="20230309 17:11:31.548"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:11:31.550" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:11:31.549" endtime="20230309 17:11:31.550"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:11:31.552" level="INFO">${secret} = 0ed3348cdf0e69ac20b19bc2afac83bc29be08de846b17c70c9b72562355d330</msg>
<status status="PASS" starttime="20230309 17:11:31.551" endtime="20230309 17:11:31.552"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:11:31.558" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:11:32.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:11:32.275" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:11:31.555" endtime="20230309 17:11:32.275"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:11:32.277" level="INFO"/>
<status status="PASS" starttime="20230309 17:11:32.276" endtime="20230309 17:11:32.277"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:11:32.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:11:32.277" endtime="20230309 17:11:32.278"/>
</kw>
<status status="PASS" starttime="20230309 17:11:31.553" endtime="20230309 17:11:32.278"/>
</kw>
<msg timestamp="20230309 17:11:32.278" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:11:31.553" endtime="20230309 17:11:32.279"/>
</kw>
<status status="PASS" starttime="20230309 17:11:31.552" endtime="20230309 17:11:32.279"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:11:32.284" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:11:32.926" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:11:32.926" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:11:32.281" endtime="20230309 17:11:32.926"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:11:32.928" level="INFO"/>
<status status="PASS" starttime="20230309 17:11:32.927" endtime="20230309 17:11:32.928"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:11:32.928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:11:32.928" endtime="20230309 17:11:32.929"/>
</kw>
<status status="PASS" starttime="20230309 17:11:32.281" endtime="20230309 17:11:32.929"/>
</kw>
<msg timestamp="20230309 17:11:32.929" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:11:32.280" endtime="20230309 17:11:32.930"/>
</kw>
<status status="PASS" starttime="20230309 17:11:32.279" endtime="20230309 17:11:32.931"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:11:32.938" level="INFO">Running command 'aws configure set aws_secret_access_key 0ed3348cdf0e69ac20b19bc2afac83bc29be08de846b17c70c9b72562355d330 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:11:33.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:11:33.628" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:11:32.934" endtime="20230309 17:11:33.628"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:11:33.629" level="INFO"/>
<status status="PASS" starttime="20230309 17:11:33.628" endtime="20230309 17:11:33.630"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:11:33.631" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:11:33.630" endtime="20230309 17:11:33.631"/>
</kw>
<status status="PASS" starttime="20230309 17:11:32.933" endtime="20230309 17:11:33.631"/>
</kw>
<msg timestamp="20230309 17:11:33.631" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:11:32.932" endtime="20230309 17:11:33.632"/>
</kw>
<status status="PASS" starttime="20230309 17:11:32.931" endtime="20230309 17:11:33.633"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:11:33.639" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:11:34.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:11:34.307" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:11:33.635" endtime="20230309 17:11:34.307"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:11:34.309" level="INFO"/>
<status status="PASS" starttime="20230309 17:11:34.308" endtime="20230309 17:11:34.309"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:11:34.310" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:11:34.309" endtime="20230309 17:11:34.310"/>
</kw>
<status status="PASS" starttime="20230309 17:11:33.634" endtime="20230309 17:11:34.310"/>
</kw>
<msg timestamp="20230309 17:11:34.310" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:11:33.633" endtime="20230309 17:11:34.312"/>
</kw>
<status status="PASS" starttime="20230309 17:11:33.633" endtime="20230309 17:11:34.312"/>
</kw>
<status status="PASS" starttime="20230309 17:11:26.214" endtime="20230309 17:11:34.312"/>
</kw>
<status status="PASS" starttime="20230309 17:11:26.214" endtime="20230309 17:11:34.312"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:11:34.312" endtime="20230309 17:11:34.313"/>
</kw>
<status status="PASS" starttime="20230309 17:11:26.133" endtime="20230309 17:11:34.313"/>
</kw>
<status status="PASS" starttime="20230309 17:11:26.132" endtime="20230309 17:11:34.313"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:11:34.316" level="INFO">${randStr} = 2530672355</msg>
<status status="PASS" starttime="20230309 17:11:34.315" endtime="20230309 17:11:34.316"/>
</kw>
<msg timestamp="20230309 17:11:34.316" level="INFO">${postfix} = ozone-test-2530672355</msg>
<status status="PASS" starttime="20230309 17:11:34.315" endtime="20230309 17:11:34.317"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:11:34.317" level="INFO">${bucket} = bucket-ozone-test-2530672355</msg>
<status status="PASS" starttime="20230309 17:11:34.317" endtime="20230309 17:11:34.317"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:11:34.324" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-2530672355 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:11:37.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:11:37.715" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-2530672355"
}</msg>
<status status="PASS" starttime="20230309 17:11:34.321" endtime="20230309 17:11:37.716"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:11:37.717" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-2530672355"
}</msg>
<status status="PASS" starttime="20230309 17:11:37.716" endtime="20230309 17:11:37.718"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:11:37.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:11:37.718" endtime="20230309 17:11:37.719"/>
</kw>
<status status="PASS" starttime="20230309 17:11:34.320" endtime="20230309 17:11:37.719"/>
</kw>
<msg timestamp="20230309 17:11:37.719" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:11:34.319" endtime="20230309 17:11:37.720"/>
</kw>
<msg timestamp="20230309 17:11:37.723" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-2530672355"
}</msg>
<status status="PASS" starttime="20230309 17:11:34.319" endtime="20230309 17:11:37.723"/>
</kw>
<msg timestamp="20230309 17:11:37.723" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-2530672355"
}</msg>
<status status="PASS" starttime="20230309 17:11:34.318" endtime="20230309 17:11:37.723"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:11:37.723" endtime="20230309 17:11:37.725"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:11:37.725" endtime="20230309 17:11:37.728"/>
</kw>
<status status="PASS" starttime="20230309 17:11:34.317" endtime="20230309 17:11:37.729"/>
</kw>
<status status="PASS" starttime="20230309 17:11:34.314" endtime="20230309 17:11:37.729"/>
</kw>
<msg timestamp="20230309 17:11:37.730" level="INFO">${BUCKET} = bucket-ozone-test-2530672355</msg>
<status status="PASS" starttime="20230309 17:11:34.313" endtime="20230309 17:11:37.731"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:11:37.731" level="INFO">${BUCKET} = bucket-ozone-test-2530672355</msg>
<status status="PASS" starttime="20230309 17:11:37.731" endtime="20230309 17:11:37.734"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:11:37.734" endtime="20230309 17:11:37.736"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:11:37.736" endtime="20230309 17:11:37.738"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:11:37.738" endtime="20230309 17:11:37.739"/>
</kw>
<status status="PASS" starttime="20230309 17:11:26.113" endtime="20230309 17:11:37.739"/>
</kw>
<status status="PASS" starttime="20230309 17:11:26.113" endtime="20230309 17:11:37.739"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} create-bucket --bucket bucket-test123</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:11:37.746" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-test123 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:11:38.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:11:38.560" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test123"
}</msg>
<status status="PASS" starttime="20230309 17:11:37.742" endtime="20230309 17:11:38.561"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:11:38.562" level="INFO">{
    "Location": "http://s3g:9878/bucket-test123"
}</msg>
<status status="PASS" starttime="20230309 17:11:38.561" endtime="20230309 17:11:38.563"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:11:38.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:11:38.563" endtime="20230309 17:11:38.564"/>
</kw>
<status status="PASS" starttime="20230309 17:11:37.741" endtime="20230309 17:11:38.564"/>
</kw>
<msg timestamp="20230309 17:11:38.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:11:37.741" endtime="20230309 17:11:38.565"/>
</kw>
<msg timestamp="20230309 17:11:38.566" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test123"
}</msg>
<status status="PASS" starttime="20230309 17:11:37.740" endtime="20230309 17:11:38.566"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} list-buckets</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:11:38.573" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:11:39.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:11:39.389" level="INFO">${output} = {
    "Buckets": [
        {
            "Name": "bucket-ozone-test-2530672355",
            "CreationDate": "2023-03-09T17:11:37.528Z"
        },
        {
            "Name": "bucket-test123",
     ...</msg>
<status status="PASS" starttime="20230309 17:11:38.568" endtime="20230309 17:11:39.389"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:11:39.391" level="INFO">{
    "Buckets": [
        {
            "Name": "bucket-ozone-test-2530672355",
            "CreationDate": "2023-03-09T17:11:37.528Z"
        },
        {
            "Name": "bucket-test123",
            "CreationDate": "2023-03-09T17:11:38.450Z"
        }
    ]
}</msg>
<status status="PASS" starttime="20230309 17:11:39.390" endtime="20230309 17:11:39.391"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:11:39.392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:11:39.391" endtime="20230309 17:11:39.392"/>
</kw>
<status status="PASS" starttime="20230309 17:11:38.568" endtime="20230309 17:11:39.393"/>
</kw>
<msg timestamp="20230309 17:11:39.393" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:11:38.567" endtime="20230309 17:11:39.393"/>
</kw>
<msg timestamp="20230309 17:11:39.394" level="INFO">${output} = {
    "Buckets": [
        {
            "Name": "bucket-ozone-test-2530672355",
            "CreationDate": "2023-03-09T17:11:37.528Z"
        },
        {
            "Name": "bucket-test123",
     ...</msg>
<status status="PASS" starttime="20230309 17:11:38.566" endtime="20230309 17:11:39.394"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>bucket-test123</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:11:39.394" endtime="20230309 17:11:39.395"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:11:26.112" endtime="20230309 17:11:39.395"/>
</test>
<test id="s1-s2-s4-t2" name="Secure S3 put-object test" line="43">
<kw name="Set Variable" library="BuiltIn">
<var>${testFilePath}</var>
<arg>${TEMPDIR}/${TEST_FILE}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:11:39.398" level="INFO">${testFilePath} = /tmp/NOTICE.txt</msg>
<status status="PASS" starttime="20230309 17:11:39.397" endtime="20230309 17:11:39.398"/>
</kw>
<kw name="Copy File" library="OperatingSystem">
<arg>${TEST_FILE}</arg>
<arg>${testFilePath}</arg>
<doc>Copies the source file into the destination.</doc>
<msg timestamp="20230309 17:11:39.400" level="INFO" html="true">Copied file from '&lt;a href="file:///opt/hadoop/NOTICE.txt"&gt;/opt/hadoop/NOTICE.txt&lt;/a&gt;' to '&lt;a href="file:///tmp/NOTICE.txt"&gt;/tmp/NOTICE.txt&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20230309 17:11:39.398" endtime="20230309 17:11:39.400"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} put-object --bucket=bucket-test123 --key=tmp1/tmp2/NOTICE.txt --body=${testFilePath}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:11:39.404" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 put-object --bucket=bucket-test123 --key=tmp1/tmp2/NOTICE.txt --body=/tmp/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:11:42.670" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:11:42.671" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:11:39.402" endtime="20230309 17:11:42.671"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:11:42.672" level="INFO"/>
<status status="PASS" starttime="20230309 17:11:42.671" endtime="20230309 17:11:42.672"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:11:42.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:11:42.672" endtime="20230309 17:11:42.673"/>
</kw>
<status status="PASS" starttime="20230309 17:11:39.401" endtime="20230309 17:11:42.674"/>
</kw>
<msg timestamp="20230309 17:11:42.674" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:11:39.401" endtime="20230309 17:11:42.674"/>
</kw>
<msg timestamp="20230309 17:11:42.674" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:11:39.400" endtime="20230309 17:11:42.674"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} list-objects --bucket=bucket-test123</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:11:42.681" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 list-objects --bucket=bucket-test123 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:11:43.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:11:43.524" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "tmp1/tmp2/NOTICE.txt",
            "LastModified": "2023-03-09T17:11:42.570Z",
            "ETag": "2023-03-09T17:11:42.570Z",
            "Size": 175...</msg>
<status status="PASS" starttime="20230309 17:11:42.677" endtime="20230309 17:11:43.524"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:11:43.526" level="INFO">{
    "Contents": [
        {
            "Key": "tmp1/tmp2/NOTICE.txt",
            "LastModified": "2023-03-09T17:11:42.570Z",
            "ETag": "2023-03-09T17:11:42.570Z",
            "Size": 17539,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20230309 17:11:43.525" endtime="20230309 17:11:43.526"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:11:43.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:11:43.527" endtime="20230309 17:11:43.528"/>
</kw>
<status status="PASS" starttime="20230309 17:11:42.676" endtime="20230309 17:11:43.528"/>
</kw>
<msg timestamp="20230309 17:11:43.528" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:11:42.676" endtime="20230309 17:11:43.529"/>
</kw>
<msg timestamp="20230309 17:11:43.529" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "tmp1/tmp2/NOTICE.txt",
            "LastModified": "2023-03-09T17:11:42.570Z",
            "ETag": "2023-03-09T17:11:42.570Z",
            "Size": 175...</msg>
<status status="PASS" starttime="20230309 17:11:42.675" endtime="20230309 17:11:43.530"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>tmp1/tmp2/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:11:43.530" endtime="20230309 17:11:43.531"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} put-object --bucket=bucket-test123 --key=tmp3//tmp4/NOTICE.txt --body=${testFilePath}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:11:43.536" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 put-object --bucket=bucket-test123 --key=tmp3//tmp4/NOTICE.txt --body=/tmp/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:11:44.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:11:44.477" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:11:43.533" endtime="20230309 17:11:44.477"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:11:44.479" level="INFO"/>
<status status="PASS" starttime="20230309 17:11:44.478" endtime="20230309 17:11:44.479"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:11:44.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:11:44.479" endtime="20230309 17:11:44.480"/>
</kw>
<status status="PASS" starttime="20230309 17:11:43.533" endtime="20230309 17:11:44.480"/>
</kw>
<msg timestamp="20230309 17:11:44.480" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:11:43.532" endtime="20230309 17:11:44.481"/>
</kw>
<msg timestamp="20230309 17:11:44.481" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:11:43.531" endtime="20230309 17:11:44.481"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} list-objects --bucket=bucket-test123</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:11:44.489" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 list-objects --bucket=bucket-test123 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:11:45.291" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:11:45.291" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "tmp1/tmp2/NOTICE.txt",
            "LastModified": "2023-03-09T17:11:42.570Z",
            "ETag": "2023-03-09T17:11:42.570Z",
            "Size": 175...</msg>
<status status="PASS" starttime="20230309 17:11:44.485" endtime="20230309 17:11:45.292"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:11:45.294" level="INFO">{
    "Contents": [
        {
            "Key": "tmp1/tmp2/NOTICE.txt",
            "LastModified": "2023-03-09T17:11:42.570Z",
            "ETag": "2023-03-09T17:11:42.570Z",
            "Size": 17539,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "tmp3//tmp4/NOTICE.txt",
            "LastModified": "2023-03-09T17:11:44.374Z",
            "ETag": "2023-03-09T17:11:44.374Z",
            "Size": 17539,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20230309 17:11:45.293" endtime="20230309 17:11:45.294"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:11:45.295" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:11:45.294" endtime="20230309 17:11:45.295"/>
</kw>
<status status="PASS" starttime="20230309 17:11:44.484" endtime="20230309 17:11:45.295"/>
</kw>
<msg timestamp="20230309 17:11:45.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:11:44.484" endtime="20230309 17:11:45.296"/>
</kw>
<msg timestamp="20230309 17:11:45.297" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "tmp1/tmp2/NOTICE.txt",
            "LastModified": "2023-03-09T17:11:42.570Z",
            "ETag": "2023-03-09T17:11:42.570Z",
            "Size": 175...</msg>
<status status="PASS" starttime="20230309 17:11:44.482" endtime="20230309 17:11:45.297"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>tmp3//tmp4/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:11:45.297" endtime="20230309 17:11:45.297"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} put-object --bucket=bucket-test123 --key=//tmp5/tmp6/NOTICE.txt --body=${testFilePath}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:11:45.303" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 put-object --bucket=bucket-test123 --key=//tmp5/tmp6/NOTICE.txt --body=/tmp/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:11:46.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:11:46.155" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:11:45.300" endtime="20230309 17:11:46.155"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:11:46.157" level="INFO"/>
<status status="PASS" starttime="20230309 17:11:46.156" endtime="20230309 17:11:46.157"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:11:46.158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:11:46.157" endtime="20230309 17:11:46.158"/>
</kw>
<status status="PASS" starttime="20230309 17:11:45.299" endtime="20230309 17:11:46.159"/>
</kw>
<msg timestamp="20230309 17:11:46.159" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:11:45.299" endtime="20230309 17:11:46.160"/>
</kw>
<msg timestamp="20230309 17:11:46.160" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:11:45.298" endtime="20230309 17:11:46.160"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} list-objects --bucket=bucket-test123</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:11:46.165" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 list-objects --bucket=bucket-test123 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:11:46.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:11:46.918" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "//tmp5/tmp6/NOTICE.txt",
            "LastModified": "2023-03-09T17:11:46.063Z",
            "ETag": "2023-03-09T17:11:46.063Z",
            "Size": 1...</msg>
<status status="PASS" starttime="20230309 17:11:46.163" endtime="20230309 17:11:46.919"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:11:46.920" level="INFO">{
    "Contents": [
        {
            "Key": "//tmp5/tmp6/NOTICE.txt",
            "LastModified": "2023-03-09T17:11:46.063Z",
            "ETag": "2023-03-09T17:11:46.063Z",
            "Size": 17539,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "tmp1/tmp2/NOTICE.txt",
            "LastModified": "2023-03-09T17:11:42.570Z",
            "ETag": "2023-03-09T17:11:42.570Z",
            "Size": 17539,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "tmp3//tmp4/NOTICE.txt",
            "LastModified": "2023-03-09T17:11:44.374Z",
            "ETag": "2023-03-09T17:11:44.374Z",
            "Size": 17539,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20230309 17:11:46.919" endtime="20230309 17:11:46.920"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:11:46.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:11:46.921" endtime="20230309 17:11:46.921"/>
</kw>
<status status="PASS" starttime="20230309 17:11:46.162" endtime="20230309 17:11:46.922"/>
</kw>
<msg timestamp="20230309 17:11:46.922" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:11:46.161" endtime="20230309 17:11:46.922"/>
</kw>
<msg timestamp="20230309 17:11:46.923" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "//tmp5/tmp6/NOTICE.txt",
            "LastModified": "2023-03-09T17:11:46.063Z",
            "ETag": "2023-03-09T17:11:46.063Z",
            "Size": 1...</msg>
<status status="PASS" starttime="20230309 17:11:46.160" endtime="20230309 17:11:46.923"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>//tmp5/tmp6/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:11:46.923" endtime="20230309 17:11:46.924"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:11:39.396" endtime="20230309 17:11:46.924"/>
</test>
<test id="s1-s2-s4-t3" name="Secure S3 test Failure" line="56">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:11:46.933" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:11:47.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:11:47.604" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:11:46.929" endtime="20230309 17:11:47.604"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:11:47.606" level="INFO"/>
<status status="PASS" starttime="20230309 17:11:47.605" endtime="20230309 17:11:47.606"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:11:47.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:11:47.607" endtime="20230309 17:11:47.608"/>
</kw>
<status status="PASS" starttime="20230309 17:11:46.929" endtime="20230309 17:11:47.608"/>
</kw>
<msg timestamp="20230309 17:11:47.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:11:46.928" endtime="20230309 17:11:47.609"/>
</kw>
<status status="PASS" starttime="20230309 17:11:46.928" endtime="20230309 17:11:47.609"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:11:47.615" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:11:48.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:11:48.231" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:11:47.612" endtime="20230309 17:11:48.231"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:11:48.232" level="INFO"/>
<status status="PASS" starttime="20230309 17:11:48.231" endtime="20230309 17:11:48.232"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:11:48.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:11:48.232" endtime="20230309 17:11:48.233"/>
</kw>
<status status="PASS" starttime="20230309 17:11:47.611" endtime="20230309 17:11:48.234"/>
</kw>
<msg timestamp="20230309 17:11:48.234" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:11:47.610" endtime="20230309 17:11:48.234"/>
</kw>
<status status="PASS" starttime="20230309 17:11:47.609" endtime="20230309 17:11:48.234"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:11:48.240" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:11:48.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:11:48.824" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:11:48.237" endtime="20230309 17:11:48.825"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:11:48.826" level="INFO"/>
<status status="PASS" starttime="20230309 17:11:48.825" endtime="20230309 17:11:48.826"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:11:48.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:11:48.826" endtime="20230309 17:11:48.827"/>
</kw>
<status status="PASS" starttime="20230309 17:11:48.236" endtime="20230309 17:11:48.827"/>
</kw>
<msg timestamp="20230309 17:11:48.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:11:48.235" endtime="20230309 17:11:48.828"/>
</kw>
<status status="PASS" starttime="20230309 17:11:48.235" endtime="20230309 17:11:48.828"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:11:48.834" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:11:49.462" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:11:49.462" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:11:48.831" endtime="20230309 17:11:49.462"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:11:49.464" level="INFO"/>
<status status="PASS" starttime="20230309 17:11:49.463" endtime="20230309 17:11:49.464"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:11:49.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:11:49.465" endtime="20230309 17:11:49.465"/>
</kw>
<status status="PASS" starttime="20230309 17:11:48.830" endtime="20230309 17:11:49.466"/>
</kw>
<msg timestamp="20230309 17:11:49.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:11:48.829" endtime="20230309 17:11:49.466"/>
</kw>
<status status="PASS" starttime="20230309 17:11:48.828" endtime="20230309 17:11:49.467"/>
</kw>
<status status="PASS" starttime="20230309 17:11:46.927" endtime="20230309 17:11:49.467"/>
</kw>
<status status="PASS" starttime="20230309 17:11:46.926" endtime="20230309 17:11:49.467"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${result}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} create-bucket --bucket bucket-test123</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:11:49.470" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-test123 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:11:50.646" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:11:50.647" level="INFO">${result} = 
An error occurred (AccessDenied) when calling the CreateBucket operation: User doesn't have the right to access this resource.</msg>
<status status="PASS" starttime="20230309 17:11:49.467" endtime="20230309 17:11:50.647"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${rc} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230309 17:11:50.647" endtime="20230309 17:11:50.648"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:11:46.925" endtime="20230309 17:11:50.649"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20230309 17:11:26.072" endtime="20230309 17:11:50.650"/>
</suite>
<suite id="s1-s2-s5" name="Ozone-Secure-Tenant" source="/opt/hadoop/smoketest/security/ozone-secure-tenant.robot">
<test id="s1-s2-s5-t1" name="Create Tenant Success with Cluster Admin" line="30">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:11:50.686" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:11:50.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:11:50.692" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230309 17:11:50.682" endtime="20230309 17:11:50.692"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:11:50.694" level="INFO">scm</msg>
<status status="PASS" starttime="20230309 17:11:50.693" endtime="20230309 17:11:50.694"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:11:50.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:11:50.694" endtime="20230309 17:11:50.695"/>
</kw>
<status status="PASS" starttime="20230309 17:11:50.679" endtime="20230309 17:11:50.696"/>
</kw>
<msg timestamp="20230309 17:11:50.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:11:50.679" endtime="20230309 17:11:50.697"/>
</kw>
<msg timestamp="20230309 17:11:50.698" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230309 17:11:50.678" endtime="20230309 17:11:50.698"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:11:50.701" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:11:50.698" endtime="20230309 17:11:50.701"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:11:50.708" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:11:50.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:11:50.744" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:11:50.705" endtime="20230309 17:11:50.744"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:11:50.745" level="INFO"/>
<status status="PASS" starttime="20230309 17:11:50.744" endtime="20230309 17:11:50.746"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:11:50.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:11:50.746" endtime="20230309 17:11:50.747"/>
</kw>
<status status="PASS" starttime="20230309 17:11:50.704" endtime="20230309 17:11:50.748"/>
</kw>
<msg timestamp="20230309 17:11:50.748" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:11:50.703" endtime="20230309 17:11:50.748"/>
</kw>
<status status="PASS" starttime="20230309 17:11:50.702" endtime="20230309 17:11:50.749"/>
</kw>
<status status="PASS" starttime="20230309 17:11:50.701" endtime="20230309 17:11:50.749"/>
</kw>
<status status="PASS" starttime="20230309 17:11:50.677" endtime="20230309 17:11:50.749"/>
</kw>
<status status="PASS" starttime="20230309 17:11:50.677" endtime="20230309 17:11:50.749"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant --verbose create tenantone</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:11:50.755" level="INFO">Running command 'ozone tenant --verbose create tenantone 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:11:56.301" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:11:56.301" level="INFO">${output} = {
  "tenantId": "tenantone"
}</msg>
<status status="PASS" starttime="20230309 17:11:50.752" endtime="20230309 17:11:56.301"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:11:56.303" level="INFO">{
  "tenantId": "tenantone"
}</msg>
<status status="PASS" starttime="20230309 17:11:56.302" endtime="20230309 17:11:56.303"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:11:56.304" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:11:56.304" endtime="20230309 17:11:56.304"/>
</kw>
<status status="PASS" starttime="20230309 17:11:50.751" endtime="20230309 17:11:56.305"/>
</kw>
<msg timestamp="20230309 17:11:56.305" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:11:50.750" endtime="20230309 17:11:56.305"/>
</kw>
<msg timestamp="20230309 17:11:56.306" level="INFO">${output} = {
  "tenantId": "tenantone"
}</msg>
<status status="PASS" starttime="20230309 17:11:50.749" endtime="20230309 17:11:56.306"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"tenantId": "tenantone"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:11:56.306" endtime="20230309 17:11:56.307"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:11:50.676" endtime="20230309 17:11:56.307"/>
</test>
<test id="s1-s2-s5-t2" name="Assign User Success with Cluster Admin" line="35">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant --verbose user assign testuser --tenant=tenantone</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:11:56.315" level="INFO">Running command 'ozone tenant --verbose user assign testuser --tenant=tenantone 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:12:01.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:12:01.314" level="INFO">${output} = export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='c54f293fbef85196955696f1d9990f13d4063a2934c1b881b40c21c9ecdce634'
Assigned 'testuser' to 'tenantone' with accessId 'tenanton...</msg>
<status status="PASS" starttime="20230309 17:11:56.311" endtime="20230309 17:12:01.314"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:12:01.316" level="INFO">export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='c54f293fbef85196955696f1d9990f13d4063a2934c1b881b40c21c9ecdce634'
Assigned 'testuser' to 'tenantone' with accessId 'tenantone$testuser'.</msg>
<status status="PASS" starttime="20230309 17:12:01.315" endtime="20230309 17:12:01.316"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:12:01.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:12:01.317" endtime="20230309 17:12:01.317"/>
</kw>
<status status="PASS" starttime="20230309 17:11:56.311" endtime="20230309 17:12:01.318"/>
</kw>
<msg timestamp="20230309 17:12:01.318" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:11:56.310" endtime="20230309 17:12:01.319"/>
</kw>
<msg timestamp="20230309 17:12:01.319" level="INFO">${output} = export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='c54f293fbef85196955696f1d9990f13d4063a2934c1b881b40c21c9ecdce634'
Assigned 'testuser' to 'tenantone' with accessId 'tenanton...</msg>
<status status="PASS" starttime="20230309 17:11:56.309" endtime="20230309 17:12:01.319"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Assigned 'testuser' to 'tenantone'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:12:01.319" endtime="20230309 17:12:01.320"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessId}</var>
<arg>${output}</arg>
<arg>(?&lt;=export AWS_ACCESS_KEY_ID=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230309 17:12:01.321" level="INFO">${accessId} = ["'tenantone$testuser'"]</msg>
<status status="PASS" starttime="20230309 17:12:01.320" endtime="20230309 17:12:01.322"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secretKey}</var>
<arg>${output}</arg>
<arg>(?&lt;=export AWS_SECRET_ACCESS_KEY=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230309 17:12:01.323" level="INFO">${secretKey} = ["'c54f293fbef85196955696f1d9990f13d4063a2934c1b881b40c21c9ecdce634'"]</msg>
<status status="PASS" starttime="20230309 17:12:01.322" endtime="20230309 17:12:01.323"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessId}</var>
<arg>${accessId[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:12:01.325" level="INFO">${accessId} = 'tenantone$testuser'</msg>
<status status="PASS" starttime="20230309 17:12:01.323" endtime="20230309 17:12:01.325"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secretKey}</var>
<arg>${secretKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:12:01.327" level="INFO">${secretKey} = 'c54f293fbef85196955696f1d9990f13d4063a2934c1b881b40c21c9ecdce634'</msg>
<status status="PASS" starttime="20230309 17:12:01.325" endtime="20230309 17:12:01.327"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${ACCESS_ID}</arg>
<arg>${accessId}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230309 17:12:01.328" level="INFO">${ACCESS_ID} = 'tenantone$testuser'</msg>
<status status="PASS" starttime="20230309 17:12:01.327" endtime="20230309 17:12:01.328"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECRET_KEY}</arg>
<arg>${secretKey}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230309 17:12:01.329" level="INFO">${SECRET_KEY} = 'c54f293fbef85196955696f1d9990f13d4063a2934c1b881b40c21c9ecdce634'</msg>
<status status="PASS" starttime="20230309 17:12:01.328" endtime="20230309 17:12:01.329"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:11:56.308" endtime="20230309 17:12:01.329"/>
</test>
<test id="s1-s2-s5-t3" name="Assign User Failure to Non-existent Tenant" line="45">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone tenant user assign testuser --tenant=thistenantdoesnotexist</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:12:01.348" level="INFO">Running command 'ozone tenant user assign testuser --tenant=thistenantdoesnotexist 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:12:06.580" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:12:06.580" level="INFO">${output} = TENANT_NOT_FOUND Tenant 'thistenantdoesnotexist' doesn't exist.</msg>
<status status="PASS" starttime="20230309 17:12:01.332" endtime="20230309 17:12:06.581"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Tenant 'thistenantdoesnotexist' doesn't exist</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:12:06.581" endtime="20230309 17:12:06.582"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:12:01.331" endtime="20230309 17:12:06.583"/>
</test>
<test id="s1-s2-s5-t4" name="GetUserInfo Success" line="49">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant user info testuser</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:12:06.592" level="INFO">Running command 'ozone tenant user info testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:12:12.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:12:12.142" level="INFO">${output} = User 'testuser' is assigned to:
- Tenant 'tenantone' with accessId 'tenantone$testuser'</msg>
<status status="PASS" starttime="20230309 17:12:06.588" endtime="20230309 17:12:12.142"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:12:12.144" level="INFO">User 'testuser' is assigned to:
- Tenant 'tenantone' with accessId 'tenantone$testuser'</msg>
<status status="PASS" starttime="20230309 17:12:12.142" endtime="20230309 17:12:12.144"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:12:12.145" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:12:12.144" endtime="20230309 17:12:12.145"/>
</kw>
<status status="PASS" starttime="20230309 17:12:06.587" endtime="20230309 17:12:12.146"/>
</kw>
<msg timestamp="20230309 17:12:12.146" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:12:06.586" endtime="20230309 17:12:12.146"/>
</kw>
<msg timestamp="20230309 17:12:12.146" level="INFO">${output} = User 'testuser' is assigned to:
- Tenant 'tenantone' with accessId 'tenantone$testuser'</msg>
<status status="PASS" starttime="20230309 17:12:06.586" endtime="20230309 17:12:12.147"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Tenant 'tenantone' with accessId 'tenantone$testuser'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:12:12.147" endtime="20230309 17:12:12.148"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:12:06.585" endtime="20230309 17:12:12.148"/>
</test>
<test id="s1-s2-s5-t5" name="GetUserInfo as JSON Success" line="53">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant user info --json testuser | jq '.tenants | .[].accessId'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:12:12.156" level="INFO">Running command 'ozone tenant user info --json testuser | jq '.tenants | .[].accessId' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:12:17.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:12:17.251" level="INFO">${output} = "tenantone$testuser"</msg>
<status status="PASS" starttime="20230309 17:12:12.152" endtime="20230309 17:12:17.252"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:12:17.253" level="INFO">"tenantone$testuser"</msg>
<status status="PASS" starttime="20230309 17:12:17.252" endtime="20230309 17:12:17.253"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:12:17.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:12:17.254" endtime="20230309 17:12:17.254"/>
</kw>
<status status="PASS" starttime="20230309 17:12:12.152" endtime="20230309 17:12:17.255"/>
</kw>
<msg timestamp="20230309 17:12:17.255" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:12:12.151" endtime="20230309 17:12:17.255"/>
</kw>
<msg timestamp="20230309 17:12:17.256" level="INFO">${output} = "tenantone$testuser"</msg>
<status status="PASS" starttime="20230309 17:12:12.151" endtime="20230309 17:12:17.256"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"tenantone$testuser"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:12:17.256" endtime="20230309 17:12:17.257"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:12:12.150" endtime="20230309 17:12:17.257"/>
</test>
<test id="s1-s2-s5-t6" name="Create Bucket 1 Success via S3 API" line="57">
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${ACCESS_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:12:17.264" level="INFO">Running command 'aws configure set aws_access_key_id 'tenantone$testuser' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:12:17.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:12:17.874" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:12:17.261" endtime="20230309 17:12:17.874"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:12:17.875" level="INFO"/>
<status status="PASS" starttime="20230309 17:12:17.874" endtime="20230309 17:12:17.876"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:12:17.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:12:17.876" endtime="20230309 17:12:17.877"/>
</kw>
<status status="PASS" starttime="20230309 17:12:17.261" endtime="20230309 17:12:17.877"/>
</kw>
<msg timestamp="20230309 17:12:17.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:12:17.260" endtime="20230309 17:12:17.878"/>
</kw>
<status status="PASS" starttime="20230309 17:12:17.259" endtime="20230309 17:12:17.878"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${SECRET_KEY}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:12:17.883" level="INFO">Running command 'aws configure set aws_secret_access_key 'c54f293fbef85196955696f1d9990f13d4063a2934c1b881b40c21c9ecdce634' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:12:18.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:12:18.506" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:12:17.880" endtime="20230309 17:12:18.506"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:12:18.510" level="INFO"/>
<status status="PASS" starttime="20230309 17:12:18.507" endtime="20230309 17:12:18.510"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:12:18.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:12:18.510" endtime="20230309 17:12:18.511"/>
</kw>
<status status="PASS" starttime="20230309 17:12:17.879" endtime="20230309 17:12:18.512"/>
</kw>
<msg timestamp="20230309 17:12:18.512" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:12:17.879" endtime="20230309 17:12:18.513"/>
</kw>
<status status="PASS" starttime="20230309 17:12:17.878" endtime="20230309 17:12:18.513"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} create-bucket --bucket bucket-test1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:12:18.519" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-test1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:12:19.328" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:12:19.328" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test1"
}</msg>
<status status="PASS" starttime="20230309 17:12:18.516" endtime="20230309 17:12:19.328"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:12:19.330" level="INFO">{
    "Location": "http://s3g:9878/bucket-test1"
}</msg>
<status status="PASS" starttime="20230309 17:12:19.329" endtime="20230309 17:12:19.330"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:12:19.331" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:12:19.330" endtime="20230309 17:12:19.331"/>
</kw>
<status status="PASS" starttime="20230309 17:12:18.515" endtime="20230309 17:12:19.331"/>
</kw>
<msg timestamp="20230309 17:12:19.331" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:12:18.514" endtime="20230309 17:12:19.332"/>
</kw>
<msg timestamp="20230309 17:12:19.332" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test1"
}</msg>
<status status="PASS" starttime="20230309 17:12:18.514" endtime="20230309 17:12:19.332"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>bucket-test1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:12:19.333" endtime="20230309 17:12:19.333"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} list-buckets</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:12:19.338" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:12:20.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:12:20.086" level="INFO">${output} = {
    "Buckets": [
        {
            "Name": "bucket-test1",
            "CreationDate": "2023-03-09T17:12:19.230Z"
        }
    ]
}</msg>
<status status="PASS" starttime="20230309 17:12:19.335" endtime="20230309 17:12:20.086"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:12:20.088" level="INFO">{
    "Buckets": [
        {
            "Name": "bucket-test1",
            "CreationDate": "2023-03-09T17:12:19.230Z"
        }
    ]
}</msg>
<status status="PASS" starttime="20230309 17:12:20.087" endtime="20230309 17:12:20.088"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:12:20.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:12:20.088" endtime="20230309 17:12:20.089"/>
</kw>
<status status="PASS" starttime="20230309 17:12:19.334" endtime="20230309 17:12:20.089"/>
</kw>
<msg timestamp="20230309 17:12:20.089" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:12:19.334" endtime="20230309 17:12:20.090"/>
</kw>
<msg timestamp="20230309 17:12:20.091" level="INFO">${output} = {
    "Buckets": [
        {
            "Name": "bucket-test1",
            "CreationDate": "2023-03-09T17:12:19.230Z"
        }
    ]
}</msg>
<status status="PASS" starttime="20230309 17:12:19.333" endtime="20230309 17:12:20.091"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>bucket-test1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:12:20.091" endtime="20230309 17:12:20.092"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:12:17.258" endtime="20230309 17:12:20.092"/>
</test>
<test id="s1-s2-s5-t7" name="Verify Bucket 1 Owner" line="65">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /tenantone/bucket-test1 | jq -r '.owner'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:12:20.101" level="INFO">Running command 'ozone sh bucket info /tenantone/bucket-test1 | jq -r '.owner' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:12:26.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:12:26.858" level="INFO">${output} = testuser</msg>
<status status="PASS" starttime="20230309 17:12:20.097" endtime="20230309 17:12:26.858"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:12:26.860" level="INFO">testuser</msg>
<status status="PASS" starttime="20230309 17:12:26.859" endtime="20230309 17:12:26.860"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:12:26.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:12:26.861" endtime="20230309 17:12:26.861"/>
</kw>
<status status="PASS" starttime="20230309 17:12:20.096" endtime="20230309 17:12:26.862"/>
</kw>
<msg timestamp="20230309 17:12:26.862" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:12:20.096" endtime="20230309 17:12:26.863"/>
</kw>
<msg timestamp="20230309 17:12:26.863" level="INFO">${result} = testuser</msg>
<status status="PASS" starttime="20230309 17:12:20.095" endtime="20230309 17:12:26.863"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>testuser</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 17:12:26.863" endtime="20230309 17:12:26.864"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:12:20.093" endtime="20230309 17:12:26.864"/>
</test>
<test id="s1-s2-s5-t8" name="Put, get and delete a key in the tenant bucket" line="69">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:12:26.871" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20230309 17:12:26.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:12:26.873" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:12:26.868" endtime="20230309 17:12:26.873"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:12:26.875" level="INFO"/>
<status status="PASS" starttime="20230309 17:12:26.874" endtime="20230309 17:12:26.875"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:12:26.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:12:26.876" endtime="20230309 17:12:26.876"/>
</kw>
<status status="PASS" starttime="20230309 17:12:26.868" endtime="20230309 17:12:26.877"/>
</kw>
<msg timestamp="20230309 17:12:26.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:12:26.867" endtime="20230309 17:12:26.878"/>
</kw>
<status status="PASS" starttime="20230309 17:12:26.867" endtime="20230309 17:12:26.878"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} put-object --bucket bucket-test1 --key mykey --body /tmp/testfile</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:12:26.883" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-test1 --key mykey --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:12:27.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:12:27.915" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:12:26.880" endtime="20230309 17:12:27.915"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:12:27.917" level="INFO"/>
<status status="PASS" starttime="20230309 17:12:27.916" endtime="20230309 17:12:27.917"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:12:27.918" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:12:27.917" endtime="20230309 17:12:27.918"/>
</kw>
<status status="PASS" starttime="20230309 17:12:26.879" endtime="20230309 17:12:27.918"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} head-object --bucket bucket-test1 --key mykey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:12:27.923" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket bucket-test1 --key mykey 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:12:28.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:12:28.677" level="INFO">${output} = {
    "LastModified": "Thu, 09 Mar 2023 17:12:27 GMT",
    "ContentLength": 11,
    "ETag": "2023-03-09T17:12:27.828Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "E...</msg>
<status status="PASS" starttime="20230309 17:12:27.920" endtime="20230309 17:12:28.677"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:12:28.679" level="INFO">{
    "LastModified": "Thu, 09 Mar 2023 17:12:27 GMT",
    "ContentLength": 11,
    "ETag": "2023-03-09T17:12:27.828Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Thu, 09 Mar 2023 17:12:28 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230309 17:12:28.677" endtime="20230309 17:12:28.679"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:12:28.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:12:28.679" endtime="20230309 17:12:28.680"/>
</kw>
<status status="PASS" starttime="20230309 17:12:27.919" endtime="20230309 17:12:28.680"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} delete-object --bucket bucket-test1 --key mykey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:12:28.684" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket bucket-test1 --key mykey 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:12:29.455" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:12:29.455" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:12:28.682" endtime="20230309 17:12:29.455"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:12:29.457" level="INFO"/>
<status status="PASS" starttime="20230309 17:12:29.456" endtime="20230309 17:12:29.457"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:12:29.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:12:29.458" endtime="20230309 17:12:29.459"/>
</kw>
<status status="PASS" starttime="20230309 17:12:28.680" endtime="20230309 17:12:29.460"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:12:26.865" endtime="20230309 17:12:29.460"/>
</test>
<test id="s1-s2-s5-t9" name="SetSecret Success with Cluster Admin" line="76">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant user setsecret 'tenantone$testuser' --secret=somesecret1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:12:29.468" level="INFO">Running command 'ozone tenant user setsecret 'tenantone$testuser' --secret=somesecret1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:12:35.247" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:12:35.247" level="INFO">${output} = export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='somesecret1'</msg>
<status status="PASS" starttime="20230309 17:12:29.465" endtime="20230309 17:12:35.247"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:12:35.249" level="INFO">export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='somesecret1'</msg>
<status status="PASS" starttime="20230309 17:12:35.248" endtime="20230309 17:12:35.249"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:12:35.250" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:12:35.250" endtime="20230309 17:12:35.250"/>
</kw>
<status status="PASS" starttime="20230309 17:12:29.464" endtime="20230309 17:12:35.251"/>
</kw>
<msg timestamp="20230309 17:12:35.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:12:29.463" endtime="20230309 17:12:35.252"/>
</kw>
<msg timestamp="20230309 17:12:35.252" level="INFO">${output} = export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='somesecret1'</msg>
<status status="PASS" starttime="20230309 17:12:29.462" endtime="20230309 17:12:35.252"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>export AWS_SECRET_ACCESS_KEY='somesecret1'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:12:35.252" endtime="20230309 17:12:35.253"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:12:29.461" endtime="20230309 17:12:35.253"/>
</test>
<test id="s1-s2-s5-t10" name="SetSecret Failure For Invalid Secret 1" line="80">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone tenant user setsecret 'tenantone$testuser' --secret=''</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:12:35.260" level="INFO">Running command 'ozone tenant user setsecret 'tenantone$testuser' --secret='' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:12:40.660" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:12:40.660" level="INFO">${output} = secretKey cannot be null or empty.</msg>
<status status="PASS" starttime="20230309 17:12:35.255" endtime="20230309 17:12:40.660"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>secretKey cannot be null or empty.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:12:40.661" endtime="20230309 17:12:40.661"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:12:35.254" endtime="20230309 17:12:40.662"/>
</test>
<test id="s1-s2-s5-t11" name="SetSecret Failure For Invalid Secret 2" line="84">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone tenant user setsecret 'tenantone$testuser' --secret=short</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:12:40.667" level="INFO">Running command 'ozone tenant user setsecret 'tenantone$testuser' --secret=short 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:12:45.754" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:12:45.754" level="INFO">${output} = INVALID_REQUEST Secret key length should be at least 8 characters</msg>
<status status="PASS" starttime="20230309 17:12:40.664" endtime="20230309 17:12:45.754"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Secret key length should be at least 8 characters</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:12:45.755" endtime="20230309 17:12:45.756"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:12:40.663" endtime="20230309 17:12:45.756"/>
</test>
<test id="s1-s2-s5-t12" name="GetSecret Success" line="88">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant user getsecret 'tenantone$testuser'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:12:45.764" level="INFO">Running command 'ozone tenant user getsecret 'tenantone$testuser' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:12:51.300" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:12:51.300" level="INFO">${output} = export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='somesecret1'</msg>
<status status="PASS" starttime="20230309 17:12:45.761" endtime="20230309 17:12:51.300"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:12:51.301" level="INFO">export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='somesecret1'</msg>
<status status="PASS" starttime="20230309 17:12:51.301" endtime="20230309 17:12:51.302"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:12:51.302" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:12:51.302" endtime="20230309 17:12:51.302"/>
</kw>
<status status="PASS" starttime="20230309 17:12:45.760" endtime="20230309 17:12:51.303"/>
</kw>
<msg timestamp="20230309 17:12:51.303" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:12:45.760" endtime="20230309 17:12:51.303"/>
</kw>
<msg timestamp="20230309 17:12:51.304" level="INFO">${output} = export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='somesecret1'</msg>
<status status="PASS" starttime="20230309 17:12:45.759" endtime="20230309 17:12:51.304"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>export AWS_SECRET_ACCESS_KEY='somesecret1'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:12:51.304" endtime="20230309 17:12:51.305"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:12:45.758" endtime="20230309 17:12:51.305"/>
</test>
<test id="s1-s2-s5-t13" name="Delete Bucket 1 Failure With Old SecretKey via S3 API" line="92">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} delete-bucket --bucket bucket-test1</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:12:51.309" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-test1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:12:52.088" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:12:52.089" level="INFO">${output} = 
An error occurred (AccessDenied) when calling the DeleteBucket operation: User doesn't have the right to access this resource.</msg>
<status status="PASS" starttime="20230309 17:12:51.307" endtime="20230309 17:12:52.089"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${rc} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230309 17:12:52.090" endtime="20230309 17:12:52.091"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:12:51.306" endtime="20230309 17:12:52.091"/>
</test>
<test id="s1-s2-s5-t14" name="Delete Bucket 1 Success With Newly Set SecretKey via S3 API" line="96">
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key 'somesecret1'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:12:52.101" level="INFO">Running command 'aws configure set aws_secret_access_key 'somesecret1' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:12:52.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:12:52.709" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:12:52.098" endtime="20230309 17:12:52.709"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:12:52.711" level="INFO"/>
<status status="PASS" starttime="20230309 17:12:52.710" endtime="20230309 17:12:52.711"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:12:52.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:12:52.711" endtime="20230309 17:12:52.712"/>
</kw>
<status status="PASS" starttime="20230309 17:12:52.097" endtime="20230309 17:12:52.713"/>
</kw>
<msg timestamp="20230309 17:12:52.713" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:12:52.096" endtime="20230309 17:12:52.714"/>
</kw>
<status status="PASS" starttime="20230309 17:12:52.096" endtime="20230309 17:12:52.714"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} delete-bucket --bucket bucket-test1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:12:52.720" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-test1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:12:53.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:12:53.431" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:12:52.717" endtime="20230309 17:12:53.431"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:12:53.433" level="INFO"/>
<status status="PASS" starttime="20230309 17:12:53.432" endtime="20230309 17:12:53.433"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:12:53.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:12:53.433" endtime="20230309 17:12:53.434"/>
</kw>
<status status="PASS" starttime="20230309 17:12:52.717" endtime="20230309 17:12:53.434"/>
</kw>
<msg timestamp="20230309 17:12:53.434" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:12:52.716" endtime="20230309 17:12:53.435"/>
</kw>
<msg timestamp="20230309 17:12:53.435" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:12:52.714" endtime="20230309 17:12:53.436"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:12:52.094" endtime="20230309 17:12:53.436"/>
</test>
<test id="s1-s2-s5-t15" name="Delete Tenant Failure Tenant Not Empty" line="100">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone tenant delete tenantone</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:12:53.441" level="INFO">Running command 'ozone tenant delete tenantone 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:12:58.306" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:12:58.306" level="INFO">${output} = TENANT_NOT_EMPTY Tenant 'tenantone' is not empty. All accessIds associated to this tenant must be revoked before the tenant can be deleted. See `ozone tenant user revoke`</msg>
<status status="PASS" starttime="20230309 17:12:53.439" endtime="20230309 17:12:58.306"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>TENANT_NOT_EMPTY Tenant 'tenantone' is not empty. All accessIds associated to this tenant must be revoked before the tenant can be deleted. See `ozone tenant user revoke`</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:12:58.307" endtime="20230309 17:12:58.308"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:12:53.437" endtime="20230309 17:12:58.309"/>
</test>
<test id="s1-s2-s5-t16" name="Trigger and wait for background Sync to recover Policies and Roles in Authorizer" line="104">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone admin om updateranger -host=om</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:12:58.315" level="INFO">Running command 'ozone admin om updateranger -host=om 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:13:03.808" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:13:03.808" level="INFO">${output} = Operation completed successfully</msg>
<status status="PASS" starttime="20230309 17:12:58.312" endtime="20230309 17:13:03.808"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Operation completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:13:03.809" endtime="20230309 17:13:03.810"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:12:58.311" endtime="20230309 17:13:03.810"/>
</test>
<test id="s1-s2-s5-t17" name="Create Tenant Failure with Regular User" line="108">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:13:03.819" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:13:03.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:13:03.824" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230309 17:13:03.816" endtime="20230309 17:13:03.824"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:13:03.825" level="INFO">scm</msg>
<status status="PASS" starttime="20230309 17:13:03.824" endtime="20230309 17:13:03.825"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:13:03.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:13:03.825" endtime="20230309 17:13:03.826"/>
</kw>
<status status="PASS" starttime="20230309 17:13:03.815" endtime="20230309 17:13:03.826"/>
</kw>
<msg timestamp="20230309 17:13:03.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:13:03.815" endtime="20230309 17:13:03.827"/>
</kw>
<msg timestamp="20230309 17:13:03.828" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230309 17:13:03.814" endtime="20230309 17:13:03.828"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:13:03.829" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:13:03.828" endtime="20230309 17:13:03.829"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:13:03.835" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:13:03.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:13:03.869" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:13:03.832" endtime="20230309 17:13:03.869"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:13:03.871" level="INFO"/>
<status status="PASS" starttime="20230309 17:13:03.869" endtime="20230309 17:13:03.871"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:13:03.872" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:13:03.871" endtime="20230309 17:13:03.872"/>
</kw>
<status status="PASS" starttime="20230309 17:13:03.831" endtime="20230309 17:13:03.872"/>
</kw>
<msg timestamp="20230309 17:13:03.872" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:13:03.831" endtime="20230309 17:13:03.873"/>
</kw>
<status status="PASS" starttime="20230309 17:13:03.829" endtime="20230309 17:13:03.873"/>
</kw>
<status status="PASS" starttime="20230309 17:13:03.829" endtime="20230309 17:13:03.873"/>
</kw>
<status status="PASS" starttime="20230309 17:13:03.814" endtime="20230309 17:13:03.873"/>
</kw>
<status status="PASS" starttime="20230309 17:13:03.813" endtime="20230309 17:13:03.874"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone tenant create tenanttwo</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:13:03.876" level="INFO">Running command 'ozone tenant create tenanttwo 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:13:08.997" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:13:08.997" level="INFO">${output} = PERMISSION_DENIED User 'testuser2/scm@EXAMPLE.COM' or 'testuser2' is not an Ozone admin</msg>
<status status="PASS" starttime="20230309 17:13:03.874" endtime="20230309 17:13:08.998"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>PERMISSION_DENIED User 'testuser2/scm@EXAMPLE.COM' or 'testuser2' is not an Ozone admin</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:13:08.998" endtime="20230309 17:13:08.999"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:13:03.812" endtime="20230309 17:13:09.000"/>
</test>
<test id="s1-s2-s5-t18" name="SetSecret Failure with Regular User" line="113">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone tenant user set-secret 'tenantone$testuser' --secret=somesecret2</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:13:09.005" level="INFO">Running command 'ozone tenant user set-secret 'tenantone$testuser' --secret=somesecret2 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:13:13.843" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:13:13.843" level="INFO">${output} = USER_MISMATCH Requested accessId 'tenantone$testuser' doesn't belong to current user 'testuser2', nor does current user have Ozone or tenant administrator privilege</msg>
<status status="PASS" starttime="20230309 17:13:09.002" endtime="20230309 17:13:13.843"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>USER_MISMATCH Requested accessId 'tenantone$testuser' doesn't belong to current user 'testuser2', nor does current user have Ozone or tenant administrator privilege</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:13:13.843" endtime="20230309 17:13:13.844"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:13:09.001" endtime="20230309 17:13:13.845"/>
</test>
<test id="s1-s2-s5-t19" name="Create Bucket 2 Success with somesecret1 via S3 API" line="117">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} create-bucket --bucket bucket-test2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:13:13.852" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-test2 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:13:14.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:13:14.639" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test2"
}</msg>
<status status="PASS" starttime="20230309 17:13:13.850" endtime="20230309 17:13:14.639"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:13:14.641" level="INFO">{
    "Location": "http://s3g:9878/bucket-test2"
}</msg>
<status status="PASS" starttime="20230309 17:13:14.640" endtime="20230309 17:13:14.641"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:13:14.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:13:14.641" endtime="20230309 17:13:14.642"/>
</kw>
<status status="PASS" starttime="20230309 17:13:13.849" endtime="20230309 17:13:14.642"/>
</kw>
<msg timestamp="20230309 17:13:14.643" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:13:13.849" endtime="20230309 17:13:14.643"/>
</kw>
<msg timestamp="20230309 17:13:14.643" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test2"
}</msg>
<status status="PASS" starttime="20230309 17:13:13.848" endtime="20230309 17:13:14.644"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>bucket-test2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:13:14.644" endtime="20230309 17:13:14.645"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:13:13.846" endtime="20230309 17:13:14.645"/>
</test>
<test id="s1-s2-s5-t20" name="Delete Bucket 2 Failure with somesecret2 via S3 API" line="121">
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key 'somesecret2'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:13:14.653" level="INFO">Running command 'aws configure set aws_secret_access_key 'somesecret2' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:13:15.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:13:15.252" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:13:14.649" endtime="20230309 17:13:15.252"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:13:15.254" level="INFO"/>
<status status="PASS" starttime="20230309 17:13:15.253" endtime="20230309 17:13:15.254"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:13:15.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:13:15.254" endtime="20230309 17:13:15.255"/>
</kw>
<status status="PASS" starttime="20230309 17:13:14.649" endtime="20230309 17:13:15.255"/>
</kw>
<msg timestamp="20230309 17:13:15.255" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:13:14.648" endtime="20230309 17:13:15.256"/>
</kw>
<status status="PASS" starttime="20230309 17:13:14.648" endtime="20230309 17:13:15.256"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} delete-bucket --bucket bucket-test2</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:13:15.259" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-test2 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:13:15.971" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:13:15.971" level="INFO">${output} = 
An error occurred (AccessDenied) when calling the DeleteBucket operation: User doesn't have the right to access this resource.</msg>
<status status="PASS" starttime="20230309 17:13:15.256" endtime="20230309 17:13:15.971"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${rc} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230309 17:13:15.971" endtime="20230309 17:13:15.973"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:13:14.647" endtime="20230309 17:13:15.974"/>
</test>
<test id="s1-s2-s5-t21" name="Delete Bucket 2 Success with somesecret1 via S3 API" line="126">
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key 'somesecret1'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:13:15.982" level="INFO">Running command 'aws configure set aws_secret_access_key 'somesecret1' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:13:16.562" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:13:16.562" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:13:15.979" endtime="20230309 17:13:16.562"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:13:16.564" level="INFO"/>
<status status="PASS" starttime="20230309 17:13:16.563" endtime="20230309 17:13:16.564"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:13:16.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:13:16.565" endtime="20230309 17:13:16.565"/>
</kw>
<status status="PASS" starttime="20230309 17:13:15.978" endtime="20230309 17:13:16.566"/>
</kw>
<msg timestamp="20230309 17:13:16.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:13:15.977" endtime="20230309 17:13:16.566"/>
</kw>
<status status="PASS" starttime="20230309 17:13:15.977" endtime="20230309 17:13:16.567"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} delete-bucket --bucket bucket-test2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:13:16.572" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-test2 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:13:17.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:13:17.264" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:13:16.569" endtime="20230309 17:13:17.264"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:13:17.266" level="INFO"/>
<status status="PASS" starttime="20230309 17:13:17.264" endtime="20230309 17:13:17.266"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:13:17.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:13:17.266" endtime="20230309 17:13:17.267"/>
</kw>
<status status="PASS" starttime="20230309 17:13:16.568" endtime="20230309 17:13:17.267"/>
</kw>
<msg timestamp="20230309 17:13:17.267" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:13:16.568" endtime="20230309 17:13:17.268"/>
</kw>
<msg timestamp="20230309 17:13:17.268" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:13:16.567" endtime="20230309 17:13:17.268"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:13:15.976" endtime="20230309 17:13:17.269"/>
</test>
<test id="s1-s2-s5-t22" name="Revoke User AccessId Success with Cluster Admin" line="130">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:13:17.277" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:13:17.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:13:17.282" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230309 17:13:17.274" endtime="20230309 17:13:17.282"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:13:17.284" level="INFO">scm</msg>
<status status="PASS" starttime="20230309 17:13:17.283" endtime="20230309 17:13:17.284"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:13:17.285" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:13:17.284" endtime="20230309 17:13:17.285"/>
</kw>
<status status="PASS" starttime="20230309 17:13:17.273" endtime="20230309 17:13:17.285"/>
</kw>
<msg timestamp="20230309 17:13:17.285" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:13:17.273" endtime="20230309 17:13:17.286"/>
</kw>
<msg timestamp="20230309 17:13:17.286" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230309 17:13:17.272" endtime="20230309 17:13:17.286"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:13:17.287" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:13:17.287" endtime="20230309 17:13:17.287"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:13:17.293" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:13:17.316" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:13:17.316" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:13:17.289" endtime="20230309 17:13:17.316"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:13:17.318" level="INFO"/>
<status status="PASS" starttime="20230309 17:13:17.317" endtime="20230309 17:13:17.318"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:13:17.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:13:17.318" endtime="20230309 17:13:17.319"/>
</kw>
<status status="PASS" starttime="20230309 17:13:17.289" endtime="20230309 17:13:17.320"/>
</kw>
<msg timestamp="20230309 17:13:17.320" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:13:17.289" endtime="20230309 17:13:17.320"/>
</kw>
<status status="PASS" starttime="20230309 17:13:17.288" endtime="20230309 17:13:17.321"/>
</kw>
<status status="PASS" starttime="20230309 17:13:17.287" endtime="20230309 17:13:17.321"/>
</kw>
<status status="PASS" starttime="20230309 17:13:17.272" endtime="20230309 17:13:17.321"/>
</kw>
<status status="PASS" starttime="20230309 17:13:17.271" endtime="20230309 17:13:17.321"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant --verbose user revoke 'tenantone$testuser'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:13:17.326" level="INFO">Running command 'ozone tenant --verbose user revoke 'tenantone$testuser' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:13:22.698" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:13:22.698" level="INFO">${output} = Revoked accessId 'tenantone$testuser'.</msg>
<status status="PASS" starttime="20230309 17:13:17.323" endtime="20230309 17:13:22.699"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:13:22.700" level="INFO">Revoked accessId 'tenantone$testuser'.</msg>
<status status="PASS" starttime="20230309 17:13:22.699" endtime="20230309 17:13:22.701"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:13:22.701" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:13:22.701" endtime="20230309 17:13:22.702"/>
</kw>
<status status="PASS" starttime="20230309 17:13:17.322" endtime="20230309 17:13:22.702"/>
</kw>
<msg timestamp="20230309 17:13:22.702" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:13:17.322" endtime="20230309 17:13:22.703"/>
</kw>
<msg timestamp="20230309 17:13:22.703" level="INFO">${output} = Revoked accessId 'tenantone$testuser'.</msg>
<status status="PASS" starttime="20230309 17:13:17.321" endtime="20230309 17:13:22.703"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Revoked accessId 'tenantone$testuser'.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:13:22.703" endtime="20230309 17:13:22.704"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:13:17.270" endtime="20230309 17:13:22.704"/>
</test>
<test id="s1-s2-s5-t23" name="Create Bucket 3 Failure with Revoked AccessId via S3 API" line="135">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} create-bucket --bucket bucket-test3</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:13:22.709" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-test3 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:13:23.417" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:13:23.417" level="INFO">${output} = 
An error occurred (AccessDenied) when calling the CreateBucket operation: User doesn't have the right to access this resource.</msg>
<status status="PASS" starttime="20230309 17:13:22.707" endtime="20230309 17:13:23.417"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${rc} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230309 17:13:23.418" endtime="20230309 17:13:23.419"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:13:22.706" endtime="20230309 17:13:23.419"/>
</test>
<test id="s1-s2-s5-t24" name="Delete Tenant Success with Cluster Admin" line="139">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant delete tenantone</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:13:23.426" level="INFO">Running command 'ozone tenant delete tenantone 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:13:28.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:13:28.475" level="INFO">${output} = Deleted tenant 'tenantone'.
But the associated volume 'tenantone' is not removed. To delete it, run
    ozone sh volume delete tenantone
</msg>
<status status="PASS" starttime="20230309 17:13:23.423" endtime="20230309 17:13:28.475"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:13:28.476" level="INFO">Deleted tenant 'tenantone'.
But the associated volume 'tenantone' is not removed. To delete it, run
    ozone sh volume delete tenantone
</msg>
<status status="PASS" starttime="20230309 17:13:28.475" endtime="20230309 17:13:28.476"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:13:28.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:13:28.476" endtime="20230309 17:13:28.478"/>
</kw>
<status status="PASS" starttime="20230309 17:13:23.423" endtime="20230309 17:13:28.478"/>
</kw>
<msg timestamp="20230309 17:13:28.478" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:13:23.422" endtime="20230309 17:13:28.479"/>
</kw>
<msg timestamp="20230309 17:13:28.479" level="INFO">${output} = Deleted tenant 'tenantone'.
But the associated volume 'tenantone' is not removed. To delete it, run
    ozone sh volume delete tenantone
</msg>
<status status="PASS" starttime="20230309 17:13:23.422" endtime="20230309 17:13:28.479"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Deleted tenant 'tenantone'.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:13:28.479" endtime="20230309 17:13:28.480"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:13:23.421" endtime="20230309 17:13:28.480"/>
</test>
<test id="s1-s2-s5-t25" name="Delete Volume Success with Cluster Admin" line="143">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume delete tenantone</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:13:28.487" level="INFO">Running command 'ozone sh volume delete tenantone 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:13:34.726" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:13:34.727" level="INFO">${output} = Volume tenantone is deleted</msg>
<status status="PASS" starttime="20230309 17:13:28.485" endtime="20230309 17:13:34.727"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:13:34.728" level="INFO">Volume tenantone is deleted</msg>
<status status="PASS" starttime="20230309 17:13:34.727" endtime="20230309 17:13:34.729"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:13:34.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:13:34.729" endtime="20230309 17:13:34.730"/>
</kw>
<status status="PASS" starttime="20230309 17:13:28.484" endtime="20230309 17:13:34.730"/>
</kw>
<msg timestamp="20230309 17:13:34.731" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:13:28.484" endtime="20230309 17:13:34.737"/>
</kw>
<msg timestamp="20230309 17:13:34.737" level="INFO">${output} = Volume tenantone is deleted</msg>
<status status="PASS" starttime="20230309 17:13:28.483" endtime="20230309 17:13:34.746"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Volume tenantone is deleted</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:13:34.746" endtime="20230309 17:13:34.747"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:13:28.482" endtime="20230309 17:13:34.748"/>
</test>
<test id="s1-s2-s5-t26" name="List Tenant Expect Empty Result" line="147">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:13:34.758" level="INFO">Running command 'ozone tenant list 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:13:40.091" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:13:40.091" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:13:34.754" endtime="20230309 17:13:40.091"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:13:40.093" level="INFO"/>
<status status="PASS" starttime="20230309 17:13:40.092" endtime="20230309 17:13:40.093"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:13:40.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:13:40.093" endtime="20230309 17:13:40.094"/>
</kw>
<status status="PASS" starttime="20230309 17:13:34.753" endtime="20230309 17:13:40.094"/>
</kw>
<msg timestamp="20230309 17:13:40.095" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:13:34.753" endtime="20230309 17:13:40.095"/>
</kw>
<msg timestamp="20230309 17:13:40.095" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:13:34.752" endtime="20230309 17:13:40.096"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>tenantone</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:13:40.096" endtime="20230309 17:13:40.096"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:13:34.750" endtime="20230309 17:13:40.097"/>
</test>
<doc>Smoke test for ozone secure tenant commands</doc>
<status status="PASS" starttime="20230309 17:11:50.656" endtime="20230309 17:13:40.100"/>
</suite>
<suite id="s1-s2-s6" name="Ozone-Secure-Token" source="/opt/hadoop/smoketest/security/ozone-secure-token.robot">
<test id="s1-s2-s6-t1" name="Token Test" line="82">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Token Test in Unsecure Cluster</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:13:40.115" endtime="20230309 17:13:40.115"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Token Test in Secure Cluster</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Token Test in Secure Cluster">
<kw name="Get and use Token in Secure Cluster">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:13:40.121" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:13:40.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:13:40.132" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230309 17:13:40.119" endtime="20230309 17:13:40.132"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:13:40.133" level="INFO">scm</msg>
<status status="PASS" starttime="20230309 17:13:40.132" endtime="20230309 17:13:40.133"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:13:40.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:13:40.134" endtime="20230309 17:13:40.134"/>
</kw>
<status status="PASS" starttime="20230309 17:13:40.118" endtime="20230309 17:13:40.135"/>
</kw>
<msg timestamp="20230309 17:13:40.135" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:13:40.118" endtime="20230309 17:13:40.136"/>
</kw>
<msg timestamp="20230309 17:13:40.136" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230309 17:13:40.117" endtime="20230309 17:13:40.136"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:13:40.139" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:13:40.137" endtime="20230309 17:13:40.139"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:13:40.145" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:13:40.193" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:13:40.193" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:13:40.142" endtime="20230309 17:13:40.193"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:13:40.196" level="INFO"/>
<status status="PASS" starttime="20230309 17:13:40.194" endtime="20230309 17:13:40.196"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:13:40.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:13:40.196" endtime="20230309 17:13:40.197"/>
</kw>
<status status="PASS" starttime="20230309 17:13:40.141" endtime="20230309 17:13:40.197"/>
</kw>
<msg timestamp="20230309 17:13:40.197" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:13:40.141" endtime="20230309 17:13:40.198"/>
</kw>
<status status="PASS" starttime="20230309 17:13:40.140" endtime="20230309 17:13:40.198"/>
</kw>
<status status="PASS" starttime="20230309 17:13:40.139" endtime="20230309 17:13:40.198"/>
</kw>
<status status="PASS" starttime="20230309 17:13:40.117" endtime="20230309 17:13:40.198"/>
</kw>
<status status="PASS" starttime="20230309 17:13:40.116" endtime="20230309 17:13:40.198"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh token get -t /tmp/ozone.token</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:13:40.203" level="INFO">Running command 'ozone sh token get -t /tmp/ozone.token 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:13:46.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:13:46.625" level="INFO">${output} = Successfully get token for service 172.18.0.4:9862
Kind: OzoneToken, Service: 172.18.0.4:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=testuser, realUser=, issueDate=2023-03-09T17:1...</msg>
<status status="PASS" starttime="20230309 17:13:40.200" endtime="20230309 17:13:46.625"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:13:46.626" level="INFO">Successfully get token for service 172.18.0.4:9862
Kind: OzoneToken, Service: 172.18.0.4:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=testuser, realUser=, issueDate=2023-03-09T17:13:46.375Z, maxDate=2023-03-16T17:13:46.375Z, sequenceNumber=1, masterKeyId=1, strToSign=null, signature=null, awsAccessKeyId=null, omServiceId=omServiceIdDefault, omCertSerialId=372852792094)
Token persisted to /tmp/ozone.token successfully!</msg>
<status status="PASS" starttime="20230309 17:13:46.625" endtime="20230309 17:13:46.627"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:13:46.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:13:46.627" endtime="20230309 17:13:46.628"/>
</kw>
<status status="PASS" starttime="20230309 17:13:40.199" endtime="20230309 17:13:46.628"/>
</kw>
<msg timestamp="20230309 17:13:46.628" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:13:40.199" endtime="20230309 17:13:46.629"/>
</kw>
<status status="PASS" starttime="20230309 17:13:40.198" endtime="20230309 17:13:46.629"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>/tmp/ozone.token</arg>
<doc>Fails if the specified file is empty.</doc>
<msg timestamp="20230309 17:13:46.630" level="INFO" html="true">File '&lt;a href="file:///tmp/ozone.token"&gt;/tmp/ozone.token&lt;/a&gt;' contains 402 bytes.</msg>
<status status="PASS" starttime="20230309 17:13:46.629" endtime="20230309 17:13:46.630"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:13:46.636" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:13:46.641" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:13:46.641" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:13:46.632" endtime="20230309 17:13:46.642"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:13:46.643" level="INFO"/>
<status status="PASS" starttime="20230309 17:13:46.642" endtime="20230309 17:13:46.643"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:13:46.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:13:46.643" endtime="20230309 17:13:46.644"/>
</kw>
<status status="PASS" starttime="20230309 17:13:46.631" endtime="20230309 17:13:46.644"/>
</kw>
<msg timestamp="20230309 17:13:46.644" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:13:46.631" endtime="20230309 17:13:46.645"/>
</kw>
<status status="PASS" starttime="20230309 17:13:46.630" endtime="20230309 17:13:46.645"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>HADOOP_TOKEN_FILE_LOCATION</arg>
<arg>/tmp/ozone.token</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230309 17:13:46.646" level="INFO">Environment variable 'HADOOP_TOKEN_FILE_LOCATION' set to value '/tmp/ozone.token'.</msg>
<status status="PASS" starttime="20230309 17:13:46.645" endtime="20230309 17:13:46.646"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume list /</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:13:46.651" level="INFO">Running command 'ozone sh volume list / 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:13:53.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:13:53.441" level="INFO">${output} = [ ]</msg>
<status status="PASS" starttime="20230309 17:13:46.647" endtime="20230309 17:13:53.441"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:13:53.443" level="INFO">[ ]</msg>
<status status="PASS" starttime="20230309 17:13:53.442" endtime="20230309 17:13:53.443"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:13:53.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:13:53.443" endtime="20230309 17:13:53.445"/>
</kw>
<status status="PASS" starttime="20230309 17:13:46.647" endtime="20230309 17:13:53.445"/>
</kw>
<msg timestamp="20230309 17:13:53.446" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:13:46.646" endtime="20230309 17:13:53.446"/>
</kw>
<msg timestamp="20230309 17:13:53.447" level="INFO">${output} = [ ]</msg>
<status status="PASS" starttime="20230309 17:13:46.646" endtime="20230309 17:13:53.447"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Client cannot authenticate</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:13:53.447" endtime="20230309 17:13:53.447"/>
</kw>
<kw name="Remove Environment Variable" library="OperatingSystem">
<arg>HADOOP_TOKEN_FILE_LOCATION</arg>
<doc>Deletes the specified environment variable.</doc>
<msg timestamp="20230309 17:13:53.448" level="INFO">Environment variable 'HADOOP_TOKEN_FILE_LOCATION' deleted.</msg>
<status status="PASS" starttime="20230309 17:13:53.448" endtime="20230309 17:13:53.449"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone sh volume list /</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:13:53.465" level="INFO">Running command 'ozone sh volume list / 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:13:58.073" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:13:58.073" level="INFO">${output} = org.apache.hadoop.security.AccessControlException: Client cannot authenticate via:[TOKEN, KERBEROS]</msg>
<status status="PASS" starttime="20230309 17:13:53.450" endtime="20230309 17:13:58.073"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:13:58.075" level="INFO">org.apache.hadoop.security.AccessControlException: Client cannot authenticate via:[TOKEN, KERBEROS]</msg>
<status status="PASS" starttime="20230309 17:13:58.074" endtime="20230309 17:13:58.075"/>
</kw>
<msg timestamp="20230309 17:13:58.075" level="INFO">${output} = org.apache.hadoop.security.AccessControlException: Client cannot authenticate via:[TOKEN, KERBEROS]</msg>
<status status="PASS" starttime="20230309 17:13:53.449" endtime="20230309 17:13:58.076"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Client cannot authenticate</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:13:58.076" endtime="20230309 17:13:58.076"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:13:58.083" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:13:58.088" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:13:58.088" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230309 17:13:58.080" endtime="20230309 17:13:58.089"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:13:58.090" level="INFO">scm</msg>
<status status="PASS" starttime="20230309 17:13:58.089" endtime="20230309 17:13:58.090"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:13:58.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:13:58.091" endtime="20230309 17:13:58.091"/>
</kw>
<status status="PASS" starttime="20230309 17:13:58.079" endtime="20230309 17:13:58.092"/>
</kw>
<msg timestamp="20230309 17:13:58.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:13:58.079" endtime="20230309 17:13:58.093"/>
</kw>
<msg timestamp="20230309 17:13:58.093" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230309 17:13:58.078" endtime="20230309 17:13:58.093"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:13:58.094" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:13:58.093" endtime="20230309 17:13:58.094"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:13:58.099" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:13:58.122" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:13:58.122" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:13:58.097" endtime="20230309 17:13:58.122"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:13:58.123" level="INFO"/>
<status status="PASS" starttime="20230309 17:13:58.122" endtime="20230309 17:13:58.123"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:13:58.124" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:13:58.124" endtime="20230309 17:13:58.124"/>
</kw>
<status status="PASS" starttime="20230309 17:13:58.096" endtime="20230309 17:13:58.125"/>
</kw>
<msg timestamp="20230309 17:13:58.125" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:13:58.096" endtime="20230309 17:13:58.125"/>
</kw>
<status status="PASS" starttime="20230309 17:13:58.095" endtime="20230309 17:13:58.126"/>
</kw>
<status status="PASS" starttime="20230309 17:13:58.094" endtime="20230309 17:13:58.126"/>
</kw>
<status status="PASS" starttime="20230309 17:13:58.077" endtime="20230309 17:13:58.127"/>
</kw>
<status status="PASS" starttime="20230309 17:13:58.077" endtime="20230309 17:13:58.127"/>
</kw>
<status status="PASS" starttime="20230309 17:13:40.116" endtime="20230309 17:13:58.127"/>
</kw>
<kw name="Print Valid Token File">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token print</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:13:58.132" level="INFO">Running command 'ozone sh token print 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:14:01.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:14:01.418" level="INFO">${output} = Kind: OzoneToken, Service: 172.18.0.4:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=testuser, realUser=, issueDate=2023-03-09T17:13:46.375Z, maxDate=2023-03-16T17:13:46.375Z, sequen...</msg>
<status status="PASS" starttime="20230309 17:13:58.129" endtime="20230309 17:14:01.418"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:14:01.420" level="INFO">Kind: OzoneToken, Service: 172.18.0.4:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=testuser, realUser=, issueDate=2023-03-09T17:13:46.375Z, maxDate=2023-03-16T17:13:46.375Z, sequenceNumber=1, masterKeyId=1, strToSign=null, signature=null, awsAccessKeyId=null, omServiceId=omServiceIdDefault, omCertSerialId=372852792094)</msg>
<status status="PASS" starttime="20230309 17:14:01.419" endtime="20230309 17:14:01.420"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:14:01.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:14:01.420" endtime="20230309 17:14:01.421"/>
</kw>
<status status="PASS" starttime="20230309 17:13:58.129" endtime="20230309 17:14:01.422"/>
</kw>
<msg timestamp="20230309 17:14:01.422" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:13:58.128" endtime="20230309 17:14:01.422"/>
</kw>
<msg timestamp="20230309 17:14:01.423" level="INFO">${output} = Kind: OzoneToken, Service: 172.18.0.4:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=testuser, realUser=, issueDate=2023-03-09T17:13:46.375Z, maxDate=2023-03-16T17:13:46.375Z, sequen...</msg>
<status status="PASS" starttime="20230309 17:13:58.128" endtime="20230309 17:14:01.423"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${output}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230309 17:14:01.423" level="INFO">Length is 340</msg>
<status status="PASS" starttime="20230309 17:14:01.423" endtime="20230309 17:14:01.424"/>
</kw>
<status status="PASS" starttime="20230309 17:13:58.127" endtime="20230309 17:14:01.424"/>
</kw>
<kw name="Renew Token in Secure Cluster">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token renew</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:14:01.432" level="INFO">Running command 'ozone sh token renew 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:14:07.994" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:14:07.994" level="INFO">${output} = Token renewed successfully, expiry time: 2023-03-10T17:14:07.655Z.</msg>
<status status="PASS" starttime="20230309 17:14:01.428" endtime="20230309 17:14:07.994"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:14:07.996" level="INFO">Token renewed successfully, expiry time: 2023-03-10T17:14:07.655Z.</msg>
<status status="PASS" starttime="20230309 17:14:07.995" endtime="20230309 17:14:07.996"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:14:07.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:14:07.996" endtime="20230309 17:14:07.997"/>
</kw>
<status status="PASS" starttime="20230309 17:14:01.425" endtime="20230309 17:14:07.997"/>
</kw>
<msg timestamp="20230309 17:14:07.997" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:14:01.425" endtime="20230309 17:14:07.998"/>
</kw>
<msg timestamp="20230309 17:14:07.999" level="INFO">${output} = Token renewed successfully, expiry time: 2023-03-10T17:14:07.655Z.</msg>
<status status="PASS" starttime="20230309 17:14:01.425" endtime="20230309 17:14:07.999"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Token renewed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:14:07.999" endtime="20230309 17:14:08.000"/>
</kw>
<status status="PASS" starttime="20230309 17:14:01.424" endtime="20230309 17:14:08.000"/>
</kw>
<kw name="Cancel Token in Secure Cluster">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token cancel</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:14:08.006" level="INFO">Running command 'ozone sh token cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:14:14.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:14:14.363" level="INFO">${output} = Token canceled successfully.</msg>
<status status="PASS" starttime="20230309 17:14:08.003" endtime="20230309 17:14:14.363"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:14:14.364" level="INFO">Token canceled successfully.</msg>
<status status="PASS" starttime="20230309 17:14:14.363" endtime="20230309 17:14:14.365"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:14:14.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:14:14.365" endtime="20230309 17:14:14.365"/>
</kw>
<status status="PASS" starttime="20230309 17:14:08.002" endtime="20230309 17:14:14.366"/>
</kw>
<msg timestamp="20230309 17:14:14.366" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:14:08.002" endtime="20230309 17:14:14.367"/>
</kw>
<msg timestamp="20230309 17:14:14.367" level="INFO">${output} = Token canceled successfully.</msg>
<status status="PASS" starttime="20230309 17:14:08.001" endtime="20230309 17:14:14.367"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Token canceled successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:14:14.367" endtime="20230309 17:14:14.368"/>
</kw>
<status status="PASS" starttime="20230309 17:14:08.000" endtime="20230309 17:14:14.368"/>
</kw>
<status status="PASS" starttime="20230309 17:13:40.116" endtime="20230309 17:14:14.368"/>
</kw>
<status status="PASS" starttime="20230309 17:13:40.115" endtime="20230309 17:14:14.369"/>
</kw>
<kw name="Print Nonexistent Token File">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token print -t /asdf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:14:14.374" level="INFO">Running command 'ozone sh token print -t /asdf 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:14:17.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:14:17.412" level="INFO">${output} = Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" starttime="20230309 17:14:14.371" endtime="20230309 17:14:17.412"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:14:17.414" level="INFO">Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" starttime="20230309 17:14:17.413" endtime="20230309 17:14:17.414"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:14:17.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:14:17.415" endtime="20230309 17:14:17.416"/>
</kw>
<status status="PASS" starttime="20230309 17:14:14.370" endtime="20230309 17:14:17.416"/>
</kw>
<msg timestamp="20230309 17:14:17.416" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:14:14.370" endtime="20230309 17:14:17.417"/>
</kw>
<msg timestamp="20230309 17:14:17.417" level="INFO">${output} = Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" starttime="20230309 17:14:14.369" endtime="20230309 17:14:17.417"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>operation failed as token file: /asdf</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:14:17.418" endtime="20230309 17:14:17.418"/>
</kw>
<status status="PASS" starttime="20230309 17:14:14.369" endtime="20230309 17:14:17.419"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:13:40.114" endtime="20230309 17:14:17.419"/>
</test>
<doc>Test token operations</doc>
<status status="PASS" starttime="20230309 17:13:40.105" endtime="20230309 17:14:17.421"/>
</suite>
<status status="PASS" starttime="20230309 17:04:24.316" endtime="20230309 17:14:17.425"/>
</suite>
<suite id="s1-s3" name="ozonefs-ofs-bucket" source="/opt/hadoop/smoketest/ozonefs/ozonefs.robot">
<kw name="Setup for FS test" library="setup" type="SETUP">
<kw name="Assign suite vars for FS test" library="setup">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:14:24.645" level="INFO">${random} = 25699</msg>
<status status="PASS" starttime="20230309 17:14:24.644" endtime="20230309 17:14:24.645"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>${random}-${BUCKET_TYPE}1-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:14:24.646" level="INFO">${BUCKET} = 25699-bucket1-ofs</msg>
<status status="PASS" starttime="20230309 17:14:24.645" endtime="20230309 17:14:24.646"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET2}</arg>
<arg>${random}-${BUCKET_TYPE}2-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:14:24.647" level="INFO">${BUCKET2} = 25699-bucket2-ofs</msg>
<status status="PASS" starttime="20230309 17:14:24.646" endtime="20230309 17:14:24.647"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET_IN_VOL2}</arg>
<arg>${random}-${BUCKET_TYPE}3-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:14:24.648" level="INFO">${BUCKET_IN_VOL2} = 25699-bucket3-ofs</msg>
<status status="PASS" starttime="20230309 17:14:24.647" endtime="20230309 17:14:24.648"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${BASE_URL}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<arg>/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 17:14:24.654" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20230309 17:14:24.653" endtime="20230309 17:14:24.654"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 17:14:24.655" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20230309 17:14:24.654" endtime="20230309 17:14:24.655"/>
</kw>
<status status="PASS" starttime="20230309 17:14:24.653" endtime="20230309 17:14:24.655"/>
</kw>
<msg timestamp="20230309 17:14:24.655" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20230309 17:14:24.651" endtime="20230309 17:14:24.655"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 17:14:24.657" level="INFO">${first} = /</msg>
<status status="PASS" starttime="20230309 17:14:24.657" endtime="20230309 17:14:24.657"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 17:14:24.658" level="INFO">${result} = /</msg>
<status status="PASS" starttime="20230309 17:14:24.658" endtime="20230309 17:14:24.658"/>
</kw>
<status status="PASS" starttime="20230309 17:14:24.656" endtime="20230309 17:14:24.659"/>
</kw>
<msg timestamp="20230309 17:14:24.659" level="INFO">${path_with_leading} = /</msg>
<status status="PASS" starttime="20230309 17:14:24.655" endtime="20230309 17:14:24.659"/>
</kw>
<status status="PASS" starttime="20230309 17:14:24.650" endtime="20230309 17:14:24.659"/>
</kw>
<msg timestamp="20230309 17:14:24.660" level="INFO">${url} = ofs://om/fstest1/25699-bucket1-ofs/</msg>
<status status="PASS" starttime="20230309 17:14:24.649" endtime="20230309 17:14:24.660"/>
</kw>
<msg timestamp="20230309 17:14:24.660" level="INFO">${BASE_URL} = ofs://om/fstest1/25699-bucket1-ofs/</msg>
<status status="PASS" starttime="20230309 17:14:24.648" endtime="20230309 17:14:24.660"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BASE_URL}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:14:24.661" level="INFO">${BASE_URL} = ofs://om/fstest1/25699-bucket1-ofs/</msg>
<status status="PASS" starttime="20230309 17:14:24.661" endtime="20230309 17:14:24.661"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${DEEP_URL}</arg>
<arg>${BASE_URL}${DEEP_DIR}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:14:24.664" level="INFO">${DEEP_URL} = ofs://om/fstest1/25699-bucket1-ofs/test/ofs/dir</msg>
<status status="PASS" starttime="20230309 17:14:24.661" endtime="20230309 17:14:24.664"/>
</kw>
<status status="PASS" starttime="20230309 17:14:24.644" endtime="20230309 17:14:24.665"/>
</kw>
<kw name="Create volumes for FS test" library="setup">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOLUME} --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:14:24.671" level="INFO">Running command 'ozone sh volume create fstest1 --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:14:30.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:14:30.511" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:14:24.666" endtime="20230309 17:14:30.511"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:14:30.513" level="INFO"/>
<status status="PASS" starttime="20230309 17:14:30.512" endtime="20230309 17:14:30.513"/>
</kw>
<status status="PASS" starttime="20230309 17:14:24.665" endtime="20230309 17:14:30.513"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOL2} --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:14:30.519" level="INFO">Running command 'ozone sh volume create fstest2 --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:14:37.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:14:37.142" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:14:30.515" endtime="20230309 17:14:37.142"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:14:37.144" level="INFO"/>
<status status="PASS" starttime="20230309 17:14:37.143" endtime="20230309 17:14:37.144"/>
</kw>
<status status="PASS" starttime="20230309 17:14:30.514" endtime="20230309 17:14:37.144"/>
</kw>
<status status="PASS" starttime="20230309 17:14:24.665" endtime="20230309 17:14:37.145"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create ${BUCKET_TYPE}s for FS test</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create buckets for FS test" library="setup">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOLUME}/${BUCKET} --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:14:37.150" level="INFO">Running command 'ozone sh bucket create fstest1/25699-bucket1-ofs --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:14:43.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:14:43.484" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:14:37.147" endtime="20230309 17:14:43.484"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:14:43.485" level="INFO"/>
<status status="PASS" starttime="20230309 17:14:43.484" endtime="20230309 17:14:43.485"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:14:43.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:14:43.485" endtime="20230309 17:14:43.486"/>
</kw>
<status status="PASS" starttime="20230309 17:14:37.147" endtime="20230309 17:14:43.486"/>
</kw>
<msg timestamp="20230309 17:14:43.487" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:14:37.146" endtime="20230309 17:14:43.488"/>
</kw>
<status status="PASS" starttime="20230309 17:14:37.146" endtime="20230309 17:14:43.488"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOLUME}/${BUCKET2} --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:14:43.493" level="INFO">Running command 'ozone sh bucket create fstest1/25699-bucket2-ofs --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:14:49.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:14:49.720" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:14:43.490" endtime="20230309 17:14:49.720"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:14:49.722" level="INFO"/>
<status status="PASS" starttime="20230309 17:14:49.721" endtime="20230309 17:14:49.722"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:14:49.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:14:49.722" endtime="20230309 17:14:49.723"/>
</kw>
<status status="PASS" starttime="20230309 17:14:43.490" endtime="20230309 17:14:49.723"/>
</kw>
<msg timestamp="20230309 17:14:49.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:14:43.489" endtime="20230309 17:14:49.724"/>
</kw>
<status status="PASS" starttime="20230309 17:14:43.489" endtime="20230309 17:14:49.724"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOL2}/${BUCKET_IN_VOL2} --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:14:49.729" level="INFO">Running command 'ozone sh bucket create fstest2/25699-bucket3-ofs --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:14:55.547" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:14:55.547" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:14:49.726" endtime="20230309 17:14:55.548"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:14:55.549" level="INFO"/>
<status status="PASS" starttime="20230309 17:14:55.548" endtime="20230309 17:14:55.549"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:14:55.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:14:55.549" endtime="20230309 17:14:55.550"/>
</kw>
<status status="PASS" starttime="20230309 17:14:49.726" endtime="20230309 17:14:55.551"/>
</kw>
<msg timestamp="20230309 17:14:55.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:14:49.725" endtime="20230309 17:14:55.552"/>
</kw>
<status status="PASS" starttime="20230309 17:14:49.725" endtime="20230309 17:14:55.553"/>
</kw>
<status status="PASS" starttime="20230309 17:14:37.145" endtime="20230309 17:14:55.553"/>
</kw>
<status status="PASS" starttime="20230309 17:14:37.145" endtime="20230309 17:14:55.553"/>
</kw>
<kw name="Sanity check for FS test" library="setup">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:14:55.562" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:15:02.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:15:02.502" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "69711-source",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 3,
  "creationTime" : "2023-03-...</msg>
<status status="PASS" starttime="20230309 17:14:55.557" endtime="20230309 17:15:02.503"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:15:02.504" level="INFO">[ {
  "metadata" : { },
  "name" : "69711-source",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 3,
  "creationTime" : "2023-03-09T16:36:14.750Z",
  "modificationTime" : "2023-03-09T16:37:15.037Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "testuser2/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "69711-target",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 8,
  "creationTime" : "2023-03-09T16:36:20.747Z",
  "modificationTime" : "2023-03-09T16:37:08.238Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "testuser2/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "97126-acls",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-03-09T16:55:08.957Z",
  "modificationTime" : "2023-03-09T16:55:50.963Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "superuser1",
    "aclScope" : "DEFAULT",
    "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "GROUP",
    "name" : "superuser1",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "GROUP",
    "name" : "superuser1",
    "aclScope" : "DEFAULT",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "fstest1",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2023-03-09T17:14:30.416Z",
  "modificationTime" : "2023-03-09T17:14:30.416Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "fstest2",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-03-09T17:14:36.909Z",
  "modificationTime" : "2023-03-09T17:14:36.909Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "fstest296",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-03-09T17:06:37.241Z",
  "modificationTime" : "2023-03-09T17:06:37.241Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "fstest396",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-03-09T17:07:08.573Z",
  "modificationTime" : "2023-03-09T17:10:37.537Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "superuser1",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "GROUP",
    "name" : "superuser1",
    "aclScope" : "DEFAULT",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "testuser2/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "LIST", "READ_ACL", "WRITE_ACL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "fstest435",
  "admin" : "testuser",
  "owner" : "testuser2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2023-03-09T17:05:46.607Z",
  "modificationTime" : "2023-03-09T17:05:46.607Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser2",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser2",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "fstest96",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2023-03-09T17:06:30.120Z",
  "modificationTime" : "2023-03-09T17:06:30.120Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "om",
  "owner" : "om",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2023-03-09T16:34:50.615Z",
  "modificationTime" : "2023-03-09T16:34:50.615Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "om",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "om",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol-emwkn",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-03-09T17:04:52.822Z",
  "modificationTime" : "2023-03-09T17:04:52.822Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-03-09T16:35:35.296Z",
  "modificationTime" : "2023-03-09T16:35:35.296Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
} ]</msg>
<status status="PASS" starttime="20230309 17:15:02.503" endtime="20230309 17:15:02.504"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:15:02.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:15:02.505" endtime="20230309 17:15:02.505"/>
</kw>
<status status="PASS" starttime="20230309 17:14:55.556" endtime="20230309 17:15:02.506"/>
</kw>
<msg timestamp="20230309 17:15:02.506" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:14:55.555" endtime="20230309 17:15:02.507"/>
</kw>
<msg timestamp="20230309 17:15:02.507" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "69711-source",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 3,
  "creationTime" : "2023-03-...</msg>
<status status="PASS" starttime="20230309 17:14:55.554" endtime="20230309 17:15:02.507"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${VOLUME}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:15:02.508" endtime="20230309 17:15:02.509"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${VOL2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:15:02.509" endtime="20230309 17:15:02.509"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>"admin" : "(hadoop|testuser)"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230309 17:15:02.509" endtime="20230309 17:15:02.510"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:15:02.516" level="INFO">Running command 'ozone sh bucket list fstest1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:15:09.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:15:09.428" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "25699-bucket1-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023...</msg>
<status status="PASS" starttime="20230309 17:15:02.513" endtime="20230309 17:15:09.428"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:15:09.429" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "25699-bucket1-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023-03-09T17:14:43.141Z",
  "modificationTime" : "2023-03-09T17:14:43.141Z",
  "quotaInBytes" : 1099511627776,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "testuser",
  "link" : false
}, {
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "25699-bucket2-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023-03-09T17:14:49.648Z",
  "modificationTime" : "2023-03-09T17:14:49.648Z",
  "quotaInBytes" : 1099511627776,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "testuser",
  "link" : false
} ]</msg>
<status status="PASS" starttime="20230309 17:15:09.428" endtime="20230309 17:15:09.429"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:15:09.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:15:09.429" endtime="20230309 17:15:09.430"/>
</kw>
<status status="PASS" starttime="20230309 17:15:02.512" endtime="20230309 17:15:09.430"/>
</kw>
<msg timestamp="20230309 17:15:09.430" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:15:02.512" endtime="20230309 17:15:09.432"/>
</kw>
<msg timestamp="20230309 17:15:09.432" level="INFO">${result} = [ {
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "25699-bucket1-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023...</msg>
<status status="PASS" starttime="20230309 17:15:02.510" endtime="20230309 17:15:09.432"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:15:09.432" endtime="20230309 17:15:09.433"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:15:09.433" endtime="20230309 17:15:09.434"/>
</kw>
<status status="PASS" starttime="20230309 17:14:55.553" endtime="20230309 17:15:09.434"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Completed setup for ${SCHEME} tests with ${BUCKET_TYPE}s in ${VOLUME}/${BUCKET} using FS base URL: ${BASE_URL}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:15:09.435" level="INFO">Completed setup for ofs tests with buckets in fstest1/25699-bucket1-ofs using FS base URL: ofs://om/fstest1/25699-bucket1-ofs/</msg>
<status status="PASS" starttime="20230309 17:15:09.434" endtime="20230309 17:15:09.435"/>
</kw>
<status status="PASS" starttime="20230309 17:14:24.643" endtime="20230309 17:15:09.435"/>
</kw>
<test id="s1-s3-t1" name="List root" line="26">
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 17:15:09.446" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20230309 17:15:09.445" endtime="20230309 17:15:09.446"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 17:15:09.447" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20230309 17:15:09.446" endtime="20230309 17:15:09.447"/>
</kw>
<status status="PASS" starttime="20230309 17:15:09.444" endtime="20230309 17:15:09.447"/>
</kw>
<msg timestamp="20230309 17:15:09.447" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20230309 17:15:09.441" endtime="20230309 17:15:09.447"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230309 17:15:09.449" endtime="20230309 17:15:09.450"/>
</kw>
<msg timestamp="20230309 17:15:09.450" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20230309 17:15:09.447" endtime="20230309 17:15:09.451"/>
</kw>
<status status="PASS" starttime="20230309 17:15:09.441" endtime="20230309 17:15:09.451"/>
</kw>
<msg timestamp="20230309 17:15:09.451" level="INFO">${url} = ofs://om/fstest1/25699-bucket1-ofs</msg>
<status status="PASS" starttime="20230309 17:15:09.440" endtime="20230309 17:15:09.452"/>
</kw>
<msg timestamp="20230309 17:15:09.452" level="INFO">${root} = ofs://om/fstest1/25699-bucket1-ofs</msg>
<status status="PASS" starttime="20230309 17:15:09.438" endtime="20230309 17:15:09.452"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -ls ${root}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:15:09.458" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/25699-bucket1-ofs 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:15:14.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:15:14.867" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:15:09.455" endtime="20230309 17:15:14.867"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:15:14.869" level="INFO"/>
<status status="PASS" starttime="20230309 17:15:14.867" endtime="20230309 17:15:14.869"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:15:14.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:15:14.869" endtime="20230309 17:15:14.870"/>
</kw>
<status status="PASS" starttime="20230309 17:15:09.454" endtime="20230309 17:15:14.870"/>
</kw>
<msg timestamp="20230309 17:15:14.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:15:09.454" endtime="20230309 17:15:14.871"/>
</kw>
<status status="PASS" starttime="20230309 17:15:09.452" endtime="20230309 17:15:14.871"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:15:09.436" endtime="20230309 17:15:14.872"/>
</test>
<test id="s1-s3-t2" name="List non-existent volume" line="30">
<kw name="Format FS URL" library="fs">
<var>${url}</var>
<arg>${SCHEME}</arg>
<arg>no-such-volume</arg>
<arg>${BUCKET}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 17:15:14.880" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20230309 17:15:14.879" endtime="20230309 17:15:14.880"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 17:15:14.881" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20230309 17:15:14.880" endtime="20230309 17:15:14.881"/>
</kw>
<status status="PASS" starttime="20230309 17:15:14.879" endtime="20230309 17:15:14.882"/>
</kw>
<msg timestamp="20230309 17:15:14.882" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20230309 17:15:14.877" endtime="20230309 17:15:14.882"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230309 17:15:14.884" endtime="20230309 17:15:14.885"/>
</kw>
<msg timestamp="20230309 17:15:14.885" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20230309 17:15:14.882" endtime="20230309 17:15:14.885"/>
</kw>
<status status="PASS" starttime="20230309 17:15:14.876" endtime="20230309 17:15:14.886"/>
</kw>
<msg timestamp="20230309 17:15:14.886" level="INFO">${url} = ofs://om/no-such-volume/25699-bucket1-ofs</msg>
<status status="PASS" starttime="20230309 17:15:14.875" endtime="20230309 17:15:14.886"/>
</kw>
<msg timestamp="20230309 17:15:14.886" level="INFO">${url} = ofs://om/no-such-volume/25699-bucket1-ofs</msg>
<status status="PASS" starttime="20230309 17:15:14.874" endtime="20230309 17:15:14.886"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${url}</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:15:14.890" level="INFO">Running command 'ozone fs -ls ofs://om/no-such-volume/25699-bucket1-ofs 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:15:20.869" level="INFO">${rc} = 1</msg>
<msg timestamp="20230309 17:15:20.869" level="INFO">${output} = ls: `ofs://om/no-such-volume/25699-bucket1-ofs': No such file or directory</msg>
<status status="PASS" starttime="20230309 17:15:14.887" endtime="20230309 17:15:20.869"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:15:20.871" level="INFO">ls: `ofs://om/no-such-volume/25699-bucket1-ofs': No such file or directory</msg>
<status status="PASS" starttime="20230309 17:15:20.869" endtime="20230309 17:15:20.871"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:15:20.872" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:15:20.871" endtime="20230309 17:15:20.872"/>
</kw>
<msg timestamp="20230309 17:15:20.872" level="INFO">${result} = ls: `ofs://om/no-such-volume/25699-bucket1-ofs': No such file or directory</msg>
<status status="PASS" starttime="20230309 17:15:14.886" endtime="20230309 17:15:20.872"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(Check access operation failed)|(Volume no-such-volume is not found)|(No such file or directory)</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230309 17:15:20.873" endtime="20230309 17:15:20.874"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:15:14.873" endtime="20230309 17:15:20.874"/>
</test>
<test id="s1-s3-t3" name="List non-existent bucket" line="35">
<kw name="Format FS URL" library="fs">
<var>${url}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>no-such-bucket</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 17:15:20.885" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20230309 17:15:20.884" endtime="20230309 17:15:20.885"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 17:15:20.886" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20230309 17:15:20.885" endtime="20230309 17:15:20.886"/>
</kw>
<status status="PASS" starttime="20230309 17:15:20.883" endtime="20230309 17:15:20.886"/>
</kw>
<msg timestamp="20230309 17:15:20.886" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20230309 17:15:20.882" endtime="20230309 17:15:20.887"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230309 17:15:20.888" endtime="20230309 17:15:20.889"/>
</kw>
<msg timestamp="20230309 17:15:20.889" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20230309 17:15:20.887" endtime="20230309 17:15:20.889"/>
</kw>
<status status="PASS" starttime="20230309 17:15:20.881" endtime="20230309 17:15:20.890"/>
</kw>
<msg timestamp="20230309 17:15:20.890" level="INFO">${url} = ofs://om/fstest1/no-such-bucket</msg>
<status status="PASS" starttime="20230309 17:15:20.880" endtime="20230309 17:15:20.890"/>
</kw>
<msg timestamp="20230309 17:15:20.891" level="INFO">${url} = ofs://om/fstest1/no-such-bucket</msg>
<status status="PASS" starttime="20230309 17:15:20.876" endtime="20230309 17:15:20.891"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${url}</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:15:20.895" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/no-such-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:15:26.677" level="INFO">${rc} = 1</msg>
<msg timestamp="20230309 17:15:26.677" level="INFO">${output} = ls: `ofs://om/fstest1/no-such-bucket': No such file or directory</msg>
<status status="PASS" starttime="20230309 17:15:20.892" endtime="20230309 17:15:26.677"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:15:26.679" level="INFO">ls: `ofs://om/fstest1/no-such-bucket': No such file or directory</msg>
<status status="PASS" starttime="20230309 17:15:26.678" endtime="20230309 17:15:26.679"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:15:26.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:15:26.679" endtime="20230309 17:15:26.680"/>
</kw>
<msg timestamp="20230309 17:15:26.681" level="INFO">${result} = ls: `ofs://om/fstest1/no-such-bucket': No such file or directory</msg>
<status status="PASS" starttime="20230309 17:15:20.891" endtime="20230309 17:15:26.681"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(Check access operation failed)|(Bucket not found)|(No such file or directory)</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230309 17:15:26.681" endtime="20230309 17:15:26.682"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:15:20.875" endtime="20230309 17:15:26.683"/>
</test>
<test id="s1-s3-t4" name="Create dir with parents" line="40">
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${DEEP_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:15:26.690" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/25699-bucket1-ofs/test/ofs/dir 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:15:32.395" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:15:32.395" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:15:26.687" endtime="20230309 17:15:32.395"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:15:32.397" level="INFO"/>
<status status="PASS" starttime="20230309 17:15:32.396" endtime="20230309 17:15:32.397"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:15:32.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:15:32.397" endtime="20230309 17:15:32.398"/>
</kw>
<status status="PASS" starttime="20230309 17:15:26.687" endtime="20230309 17:15:32.399"/>
</kw>
<msg timestamp="20230309 17:15:32.399" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:15:26.686" endtime="20230309 17:15:32.404"/>
</kw>
<status status="PASS" starttime="20230309 17:15:26.686" endtime="20230309 17:15:32.405"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:15:32.416" level="INFO">Running command 'ozone sh key list fstest1/25699-bucket1-ofs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:15:40.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:15:40.033" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/</msg>
<status status="PASS" starttime="20230309 17:15:32.410" endtime="20230309 17:15:40.033"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:15:40.035" level="INFO">test/
test/ofs/
test/ofs/dir/</msg>
<status status="PASS" starttime="20230309 17:15:40.034" endtime="20230309 17:15:40.035"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:15:40.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:15:40.035" endtime="20230309 17:15:40.036"/>
</kw>
<status status="PASS" starttime="20230309 17:15:32.406" endtime="20230309 17:15:40.037"/>
</kw>
<msg timestamp="20230309 17:15:40.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:15:32.406" endtime="20230309 17:15:40.037"/>
</kw>
<msg timestamp="20230309 17:15:40.038" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/</msg>
<status status="PASS" starttime="20230309 17:15:32.405" endtime="20230309 17:15:40.038"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:15:40.038" endtime="20230309 17:15:40.039"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:15:26.685" endtime="20230309 17:15:40.039"/>
</test>
<test id="s1-s3-t5" name="Copy from local" line="45">
<kw name="Execute" library="os">
<arg>ozone fs -copyFromLocal NOTICE.txt ${DEEP_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:15:40.046" level="INFO">Running command 'ozone fs -copyFromLocal NOTICE.txt ofs://om/fstest1/25699-bucket1-ofs/test/ofs/dir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:15:49.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:15:49.185" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:15:40.043" endtime="20230309 17:15:49.185"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:15:49.187" level="INFO"/>
<status status="PASS" starttime="20230309 17:15:49.186" endtime="20230309 17:15:49.187"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:15:49.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:15:49.187" endtime="20230309 17:15:49.188"/>
</kw>
<status status="PASS" starttime="20230309 17:15:40.042" endtime="20230309 17:15:49.189"/>
</kw>
<msg timestamp="20230309 17:15:49.189" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:15:40.042" endtime="20230309 17:15:49.189"/>
</kw>
<status status="PASS" starttime="20230309 17:15:40.041" endtime="20230309 17:15:49.190"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:15:49.195" level="INFO">Running command 'ozone sh key list fstest1/25699-bucket1-ofs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:15:56.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:15:56.779" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20230309 17:15:49.192" endtime="20230309 17:15:56.779"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:15:56.781" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20230309 17:15:56.780" endtime="20230309 17:15:56.781"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:15:56.782" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:15:56.781" endtime="20230309 17:15:56.783"/>
</kw>
<status status="PASS" starttime="20230309 17:15:49.191" endtime="20230309 17:15:56.783"/>
</kw>
<msg timestamp="20230309 17:15:56.783" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:15:49.191" endtime="20230309 17:15:56.784"/>
</kw>
<msg timestamp="20230309 17:15:56.784" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20230309 17:15:49.190" endtime="20230309 17:15:56.784"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:15:56.785" endtime="20230309 17:15:56.785"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${VOLUME}/${BUCKET}/${DEEP_DIR}/NOTICE.txt | jq -r '.replicationConfig.replicationFactor'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:15:56.791" level="INFO">Running command 'ozone sh key info fstest1/25699-bucket1-ofs/test/ofs/dir/NOTICE.txt | jq -r '.replicationConfig.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:16:04.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:16:04.265" level="INFO">${output} = THREE</msg>
<status status="PASS" starttime="20230309 17:15:56.788" endtime="20230309 17:16:04.265"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:16:04.267" level="INFO">THREE</msg>
<status status="PASS" starttime="20230309 17:16:04.266" endtime="20230309 17:16:04.267"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:16:04.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:16:04.267" endtime="20230309 17:16:04.268"/>
</kw>
<status status="PASS" starttime="20230309 17:15:56.787" endtime="20230309 17:16:04.268"/>
</kw>
<msg timestamp="20230309 17:16:04.268" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:15:56.787" endtime="20230309 17:16:04.269"/>
</kw>
<msg timestamp="20230309 17:16:04.269" level="INFO">${result} = THREE</msg>
<status status="PASS" starttime="20230309 17:15:56.786" endtime="20230309 17:16:04.269"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>THREE</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 17:16:04.270" endtime="20230309 17:16:04.270"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:15:40.040" endtime="20230309 17:16:04.271"/>
</test>
<test id="s1-s3-t6" name="Put" line="52">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -put NOTICE.txt ${DEEP_URL}/PUTFILE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:16:04.279" level="INFO">Running command 'ozone fs -put NOTICE.txt ofs://om/fstest1/25699-bucket1-ofs/test/ofs/dir/PUTFILE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:16:13.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:16:13.821" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:16:04.276" endtime="20230309 17:16:13.821"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:16:13.823" level="INFO"/>
<status status="PASS" starttime="20230309 17:16:13.821" endtime="20230309 17:16:13.823"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:16:13.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:16:13.823" endtime="20230309 17:16:13.824"/>
</kw>
<status status="PASS" starttime="20230309 17:16:04.275" endtime="20230309 17:16:13.824"/>
</kw>
<msg timestamp="20230309 17:16:13.824" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:16:04.274" endtime="20230309 17:16:13.825"/>
</kw>
<msg timestamp="20230309 17:16:13.825" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 17:16:04.273" endtime="20230309 17:16:13.825"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230309 17:16:13.826" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230309 17:16:13.825" endtime="20230309 17:16:13.826"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:16:13.832" level="INFO">Running command 'ozone sh key list fstest1/25699-bucket1-ofs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:16:21.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:16:21.158" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20230309 17:16:13.828" endtime="20230309 17:16:21.158"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:16:21.160" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20230309 17:16:21.159" endtime="20230309 17:16:21.160"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:16:21.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:16:21.160" endtime="20230309 17:16:21.161"/>
</kw>
<status status="PASS" starttime="20230309 17:16:13.827" endtime="20230309 17:16:21.162"/>
</kw>
<msg timestamp="20230309 17:16:21.162" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:16:13.827" endtime="20230309 17:16:21.162"/>
</kw>
<msg timestamp="20230309 17:16:21.163" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20230309 17:16:13.826" endtime="20230309 17:16:21.163"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PUTFILE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:16:21.163" endtime="20230309 17:16:21.163"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:16:04.272" endtime="20230309 17:16:21.164"/>
</test>
<test id="s1-s3-t7" name="Check disk usage after create a file which uses RATIS replication type" line="59">
<kw name="Generate Random String" library="String">
<var>${vol}</var>
<arg>8</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:16:21.167" level="INFO">${vol} = glmigqjv</msg>
<status status="PASS" starttime="20230309 17:16:21.167" endtime="20230309 17:16:21.167"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${bucket}</var>
<arg>8</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:16:21.168" level="INFO">${bucket} = zernblzv</msg>
<status status="PASS" starttime="20230309 17:16:21.168" endtime="20230309 17:16:21.168"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${vol}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:16:21.174" level="INFO">Running command 'ozone sh volume create /glmigqjv 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:16:28.120" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:16:28.120" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:16:21.171" endtime="20230309 17:16:28.120"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:16:28.123" level="INFO"/>
<status status="PASS" starttime="20230309 17:16:28.121" endtime="20230309 17:16:28.123"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:16:28.124" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:16:28.123" endtime="20230309 17:16:28.124"/>
</kw>
<status status="PASS" starttime="20230309 17:16:21.170" endtime="20230309 17:16:28.125"/>
</kw>
<msg timestamp="20230309 17:16:28.125" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:16:21.169" endtime="20230309 17:16:28.126"/>
</kw>
<status status="PASS" starttime="20230309 17:16:21.168" endtime="20230309 17:16:28.126"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${vol}/${bucket} --type RATIS --replication 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:16:28.132" level="INFO">Running command 'ozone sh bucket create /glmigqjv/zernblzv --type RATIS --replication 3 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:16:35.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:16:35.264" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:16:28.129" endtime="20230309 17:16:35.264"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:16:35.266" level="INFO"/>
<status status="PASS" starttime="20230309 17:16:35.265" endtime="20230309 17:16:35.266"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:16:35.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:16:35.266" endtime="20230309 17:16:35.267"/>
</kw>
<status status="PASS" starttime="20230309 17:16:28.128" endtime="20230309 17:16:35.268"/>
</kw>
<msg timestamp="20230309 17:16:35.268" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:16:28.127" endtime="20230309 17:16:35.268"/>
</kw>
<status status="PASS" starttime="20230309 17:16:28.126" endtime="20230309 17:16:35.269"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -put NOTICE.txt /${vol}/${bucket}/PUTFILE1.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:16:35.274" level="INFO">Running command 'ozone fs -put NOTICE.txt /glmigqjv/zernblzv/PUTFILE1.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:16:43.884" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:16:43.884" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:16:35.271" endtime="20230309 17:16:43.884"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:16:43.885" level="INFO"/>
<status status="PASS" starttime="20230309 17:16:43.884" endtime="20230309 17:16:43.885"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:16:43.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:16:43.885" endtime="20230309 17:16:43.886"/>
</kw>
<status status="PASS" starttime="20230309 17:16:35.270" endtime="20230309 17:16:43.887"/>
</kw>
<msg timestamp="20230309 17:16:43.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:16:35.270" endtime="20230309 17:16:43.888"/>
</kw>
<status status="PASS" starttime="20230309 17:16:35.269" endtime="20230309 17:16:43.888"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedFileLength}</var>
<arg>stat -c %s NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:16:43.893" level="INFO">Running command 'stat -c %s NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:16:43.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:16:43.900" level="INFO">${output} = 17539</msg>
<status status="PASS" starttime="20230309 17:16:43.890" endtime="20230309 17:16:43.900"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:16:43.901" level="INFO">17539</msg>
<status status="PASS" starttime="20230309 17:16:43.900" endtime="20230309 17:16:43.901"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:16:43.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:16:43.901" endtime="20230309 17:16:43.902"/>
</kw>
<status status="PASS" starttime="20230309 17:16:43.889" endtime="20230309 17:16:43.903"/>
</kw>
<msg timestamp="20230309 17:16:43.903" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:16:43.889" endtime="20230309 17:16:43.904"/>
</kw>
<msg timestamp="20230309 17:16:43.904" level="INFO">${expectedFileLength} = 17539</msg>
<status status="PASS" starttime="20230309 17:16:43.888" endtime="20230309 17:16:43.904"/>
</kw>
<kw name="Get Disk Usage of File with RATIS Replication">
<var>${expectedDiskUsage}</var>
<arg>${expectedFileLength}</arg>
<arg>3</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${expectedDiskUsage}</var>
<arg>${fileLength} * ${replicationFactor}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230309 17:16:43.906" level="INFO">${expectedDiskUsage} = 52617</msg>
<status status="PASS" starttime="20230309 17:16:43.905" endtime="20230309 17:16:43.906"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${expectedDiskUsage}</var>
<arg>${expectedDiskUsage}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230309 17:16:43.907" level="INFO">${expectedDiskUsage} = 52617</msg>
<status status="PASS" starttime="20230309 17:16:43.906" endtime="20230309 17:16:43.908"/>
</kw>
<msg timestamp="20230309 17:16:43.908" level="INFO">${expectedDiskUsage} = 52617</msg>
<status status="PASS" starttime="20230309 17:16:43.904" endtime="20230309 17:16:43.908"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -du /${vol}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:16:43.914" level="INFO">Running command 'ozone fs -du /glmigqjv/zernblzv 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:16:49.641" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:16:49.641" level="INFO">${output} = 17539  52617  /glmigqjv/zernblzv/PUTFILE1.txt</msg>
<status status="PASS" starttime="20230309 17:16:43.910" endtime="20230309 17:16:49.641"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:16:49.643" level="INFO">17539  52617  /glmigqjv/zernblzv/PUTFILE1.txt</msg>
<status status="PASS" starttime="20230309 17:16:49.642" endtime="20230309 17:16:49.643"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:16:49.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:16:49.644" endtime="20230309 17:16:49.644"/>
</kw>
<status status="PASS" starttime="20230309 17:16:43.910" endtime="20230309 17:16:49.645"/>
</kw>
<msg timestamp="20230309 17:16:49.645" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:16:43.909" endtime="20230309 17:16:49.646"/>
</kw>
<msg timestamp="20230309 17:16:49.646" level="INFO">${result} = 17539  52617  /glmigqjv/zernblzv/PUTFILE1.txt</msg>
<status status="PASS" starttime="20230309 17:16:43.908" endtime="20230309 17:16:49.646"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PUTFILE1.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:16:49.646" endtime="20230309 17:16:49.647"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expectedFileLength}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:16:49.647" endtime="20230309 17:16:49.648"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expectedDiskUsage}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:16:49.648" endtime="20230309 17:16:49.649"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:16:21.166" endtime="20230309 17:16:49.649"/>
</test>
<test id="s1-s3-t8" name="Put with Streaming" line="73">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -D ozone.fs.datastream.enabled=true -put NOTICE.txt ${DEEP_URL}/STREAMING.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:16:49.657" level="INFO">Running command 'ozone fs -D ozone.fs.datastream.enabled=true -put NOTICE.txt ofs://om/fstest1/25699-bucket1-ofs/test/ofs/dir/STREAMING.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:17:19.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:17:19.458" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:16:49.654" endtime="20230309 17:17:19.458"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:17:19.465" level="INFO"/>
<status status="PASS" starttime="20230309 17:17:19.462" endtime="20230309 17:17:19.465"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:17:19.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:17:19.465" endtime="20230309 17:17:19.469"/>
</kw>
<status status="PASS" starttime="20230309 17:16:49.653" endtime="20230309 17:17:19.469"/>
</kw>
<msg timestamp="20230309 17:17:19.469" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:16:49.653" endtime="20230309 17:17:19.472"/>
</kw>
<msg timestamp="20230309 17:17:19.472" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 17:16:49.652" endtime="20230309 17:17:19.472"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230309 17:17:19.477" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230309 17:17:19.476" endtime="20230309 17:17:19.477"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:17:19.498" level="INFO">Running command 'ozone sh key list fstest1/25699-bucket1-ofs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:17:38.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:17:38.138" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt
test/ofs/dir/PUTFILE.txt
test/ofs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20230309 17:17:19.486" endtime="20230309 17:17:38.139"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:17:38.141" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt
test/ofs/dir/PUTFILE.txt
test/ofs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20230309 17:17:38.139" endtime="20230309 17:17:38.141"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:17:38.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:17:38.141" endtime="20230309 17:17:38.142"/>
</kw>
<status status="PASS" starttime="20230309 17:17:19.482" endtime="20230309 17:17:38.143"/>
</kw>
<msg timestamp="20230309 17:17:38.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:17:19.482" endtime="20230309 17:17:38.143"/>
</kw>
<msg timestamp="20230309 17:17:38.144" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt
test/ofs/dir/PUTFILE.txt
test/ofs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20230309 17:17:19.477" endtime="20230309 17:17:38.144"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STREAMING.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:17:38.145" endtime="20230309 17:17:38.145"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:16:49.651" endtime="20230309 17:17:38.146"/>
</test>
<test id="s1-s3-t9" name="List" line="80">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${DEEP_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:17:38.156" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/25699-bucket1-ofs/test/ofs/dir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:17:53.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:17:53.033" level="INFO">${output} = Found 3 items
-rw-rw-rw-   3 testuser testuser      17539 2023-03-09 17:15 ofs://om/fstest1/25699-bucket1-ofs/test/ofs/dir/NOTICE.txt
-rw-rw-rw-   3 testuser testuser      17539 2023-03-09 17:16 ofs:/...</msg>
<status status="PASS" starttime="20230309 17:17:38.152" endtime="20230309 17:17:53.033"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:17:53.036" level="INFO">Found 3 items
-rw-rw-rw-   3 testuser testuser      17539 2023-03-09 17:15 ofs://om/fstest1/25699-bucket1-ofs/test/ofs/dir/NOTICE.txt
-rw-rw-rw-   3 testuser testuser      17539 2023-03-09 17:16 ofs://om/fstest1/25699-bucket1-ofs/test/ofs/dir/PUTFILE.txt
-rw-rw-rw-   3 testuser testuser      17539 2023-03-09 17:17 ofs://om/fstest1/25699-bucket1-ofs/test/ofs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20230309 17:17:53.034" endtime="20230309 17:17:53.036"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:17:53.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:17:53.037" endtime="20230309 17:17:53.038"/>
</kw>
<status status="PASS" starttime="20230309 17:17:38.151" endtime="20230309 17:17:53.039"/>
</kw>
<msg timestamp="20230309 17:17:53.039" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:17:38.150" endtime="20230309 17:17:53.040"/>
</kw>
<msg timestamp="20230309 17:17:53.040" level="INFO">${result} = Found 3 items
-rw-rw-rw-   3 testuser testuser      17539 2023-03-09 17:15 ofs://om/fstest1/25699-bucket1-ofs/test/ofs/dir/NOTICE.txt
-rw-rw-rw-   3 testuser testuser      17539 2023-03-09 17:16 ofs:/...</msg>
<status status="PASS" starttime="20230309 17:17:38.149" endtime="20230309 17:17:53.040"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:17:53.041" endtime="20230309 17:17:53.041"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PUTFILE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:17:53.042" endtime="20230309 17:17:53.042"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STREAMING.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:17:53.043" endtime="20230309 17:17:53.043"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:17:38.147" endtime="20230309 17:17:53.044"/>
</test>
<test id="s1-s3-t10" name="Move" line="86">
<kw name="Execute" library="os">
<arg>ozone fs -mv ${DEEP_URL}/NOTICE.txt ${DEEP_URL}/MOVED.TXT</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:17:53.053" level="INFO">Running command 'ozone fs -mv ofs://om/fstest1/25699-bucket1-ofs/test/ofs/dir/NOTICE.txt ofs://om/fstest1/25699-bucket1-ofs/test/ofs/dir/MOVED.TXT 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:18:07.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:18:07.207" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:17:53.049" endtime="20230309 17:18:07.207"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:18:07.212" level="INFO"/>
<status status="PASS" starttime="20230309 17:18:07.209" endtime="20230309 17:18:07.212"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:18:07.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:18:07.212" endtime="20230309 17:18:07.217"/>
</kw>
<status status="PASS" starttime="20230309 17:17:53.048" endtime="20230309 17:18:07.218"/>
</kw>
<msg timestamp="20230309 17:18:07.218" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:17:53.048" endtime="20230309 17:18:07.219"/>
</kw>
<status status="PASS" starttime="20230309 17:17:53.046" endtime="20230309 17:18:07.219"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:18:07.227" level="INFO">Running command 'ozone sh key list fstest1/25699-bucket1-ofs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:18:24.505" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:18:24.505" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20230309 17:18:07.222" endtime="20230309 17:18:24.505"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:18:24.507" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20230309 17:18:24.506" endtime="20230309 17:18:24.507"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:18:24.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:18:24.507" endtime="20230309 17:18:24.508"/>
</kw>
<status status="PASS" starttime="20230309 17:18:07.221" endtime="20230309 17:18:24.509"/>
</kw>
<msg timestamp="20230309 17:18:24.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:18:07.220" endtime="20230309 17:18:24.510"/>
</kw>
<msg timestamp="20230309 17:18:24.510" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20230309 17:18:07.219" endtime="20230309 17:18:24.510"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>MOVED.TXT</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:18:24.511" endtime="20230309 17:18:24.512"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:18:24.513" endtime="20230309 17:18:24.513"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:17:53.045" endtime="20230309 17:18:24.515"/>
</test>
<test id="s1-s3-t11" name="Copy within FS" line="92">
<kw name="Execute" library="os" type="SETUP">
<arg>ozone fs -mkdir -p ${DEEP_URL}/subdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:18:24.528" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/25699-bucket1-ofs/test/ofs/dir/subdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:18:36.729" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:18:36.729" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:18:24.522" endtime="20230309 17:18:36.730"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:18:36.733" level="INFO"/>
<status status="PASS" starttime="20230309 17:18:36.731" endtime="20230309 17:18:36.733"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:18:36.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:18:36.733" endtime="20230309 17:18:36.735"/>
</kw>
<status status="PASS" starttime="20230309 17:18:24.522" endtime="20230309 17:18:36.735"/>
</kw>
<msg timestamp="20230309 17:18:36.735" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:18:24.520" endtime="20230309 17:18:36.736"/>
</kw>
<status status="PASS" starttime="20230309 17:18:24.519" endtime="20230309 17:18:36.738"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${DEEP_URL}/MOVED.TXT ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:18:36.748" level="INFO">Running command 'ozone fs -cp ofs://om/fstest1/25699-bucket1-ofs/test/ofs/dir/MOVED.TXT ofs://om/fstest1/25699-bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:18:54.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:18:54.189" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:18:36.742" endtime="20230309 17:18:54.189"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:18:54.190" level="INFO"/>
<status status="PASS" starttime="20230309 17:18:54.189" endtime="20230309 17:18:54.191"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:18:54.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:18:54.191" endtime="20230309 17:18:54.192"/>
</kw>
<status status="PASS" starttime="20230309 17:18:36.740" endtime="20230309 17:18:54.192"/>
</kw>
<msg timestamp="20230309 17:18:54.192" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:18:36.740" endtime="20230309 17:18:54.193"/>
</kw>
<status status="PASS" starttime="20230309 17:18:36.738" endtime="20230309 17:18:54.203"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:18:54.222" level="INFO">Running command 'ozone sh key list fstest1/25699-bucket1-ofs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:19:08.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:19:08.102" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/STREAMING.txt
test/ofs/dir/subdir1/
test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20230309 17:18:54.211" endtime="20230309 17:19:08.103"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:19:08.106" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/STREAMING.txt
test/ofs/dir/subdir1/
test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20230309 17:19:08.105" endtime="20230309 17:19:08.107"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:19:08.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:19:08.107" endtime="20230309 17:19:08.109"/>
</kw>
<status status="PASS" starttime="20230309 17:18:54.209" endtime="20230309 17:19:08.109"/>
</kw>
<msg timestamp="20230309 17:19:08.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:18:54.209" endtime="20230309 17:19:08.110"/>
</kw>
<msg timestamp="20230309 17:19:08.111" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/STREAMING.txt
test/ofs/dir/subdir1/
test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20230309 17:18:54.204" endtime="20230309 17:19:08.111"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>subdir1/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:19:08.111" endtime="20230309 17:19:08.112"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${DEEP_URL}/subdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:19:08.118" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/25699-bucket1-ofs/test/ofs/dir/subdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:19:19.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:19:19.248" level="INFO">${output} = Found 1 items
-rw-rw-rw-   3 testuser testuser      17539 2023-03-09 17:18 ofs://om/fstest1/25699-bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20230309 17:19:08.115" endtime="20230309 17:19:19.248"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:19:19.251" level="INFO">Found 1 items
-rw-rw-rw-   3 testuser testuser      17539 2023-03-09 17:18 ofs://om/fstest1/25699-bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20230309 17:19:19.250" endtime="20230309 17:19:19.251"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:19:19.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:19:19.252" endtime="20230309 17:19:19.252"/>
</kw>
<status status="PASS" starttime="20230309 17:19:08.113" endtime="20230309 17:19:19.253"/>
</kw>
<msg timestamp="20230309 17:19:19.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:19:08.113" endtime="20230309 17:19:19.254"/>
</kw>
<msg timestamp="20230309 17:19:19.254" level="INFO">${result} = Found 1 items
-rw-rw-rw-   3 testuser testuser      17539 2023-03-09 17:18 ofs://om/fstest1/25699-bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20230309 17:19:08.112" endtime="20230309 17:19:19.254"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:19:19.254" endtime="20230309 17:19:19.255"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:19:19.255" endtime="20230309 17:19:19.256"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:18:24.517" endtime="20230309 17:19:19.256"/>
</test>
<test id="s1-s3-t12" name="Cat file" line="102">
<kw name="Execute" library="os">
<arg>ozone fs -cat ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:19:19.265" level="INFO">Running command 'ozone fs -cat ofs://om/fstest1/25699-bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:19:35.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:19:35.415" level="INFO">${output} = Apache Ozone
Copyright 2022 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

Export Control Notice
----------------...</msg>
<status status="PASS" starttime="20230309 17:19:19.262" endtime="20230309 17:19:35.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:19:35.420" level="INFO">Apache Ozone
Copyright 2022 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

Export Control Notice
---------------------

This distribution includes cryptographic software.  The country in
which you currently reside may have restrictions on the import,
possession, use, and/or re-export to another country, of
encryption software.  BEFORE using any encryption software, please
check your country's laws, regulations and policies concerning the
import, possession, or use, and re-export of encryption software, to
see if this is permitted.  See &lt;http://www.wassenaar.org/&gt; for more
information.

The U.S. Government Department of Commerce, Bureau of Industry and
Security (BIS), has classified this software as Export Commodity
Control Number (ECCN) 5D002.C.1, which includes information security
software using or performing cryptographic functions with asymmetric
algorithms.  The form and manner of this Apache Software Foundation
distribution makes it eligible for export under the License Exception
ENC Technology Software Unrestricted (TSU) exception (see the BIS
Export Administration Regulations, Section 740.13) for both object
code and source code.

This software uses the SSL libraries from the Jetty project written
by mortbay.org abd BouncyCastle Java cryptography APIs written by the
 Legion of the Bouncy Castle Inc.

**********************
THIRD PARTY COMPONENTS
**********************
This software includes third party software subject to the following copyrights:

io.netty:netty-all
====================


                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * https://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * NOTICE:
    * license/NOTICE.harmony.txt
  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/y-256/libdivsufsort

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * https://github.com/google/protobuf

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * https://github.com/google/snappy

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jboss-remoting/jboss-marshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/google/caliper

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Cory Benfield. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hyper-hpack.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/python-hyper/hpack/

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Tatsuhiro Tsujikawa. It can be obtained at:

  * LICENSE:
    * license/LICENSE.nghttp2-hpack.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/nghttp2/nghttp2/

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/


This product contains the Maven wrapper scripts from 'Maven Wrapper', that provides an easy way to ensure a user has everything necessary to run the Maven build.

  * LICENSE:
    * license/LICENSE.mvn-wrapper.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/takari/maven-wrapper


io.grpc:grpc-core
====================

Copyright 2014 The gRPC Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

-----------------------------------------------------------------------

This product contains a modified portion of 'OkHttp', an open source
HTTP &amp; SPDY client for Android and Java applications, which can be obtained
at:

  * LICENSE:
    * okhttp/third_party/okhttp/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/square/okhttp
  * LOCATION_IN_GRPC:
    * okhttp/third_party/okhttp

This product contains a modified portion of 'Envoy', an open source
cloud-native high-performance edge/middle/service proxy, which can be
obtained at:

  * LICENSE:
    * xds/third_party/envoy/LICENSE (Apache License 2.0)
  * NOTICE:
    * xds/third_party/envoy/NOTICE
  * HOMEPAGE:
    * https://www.envoyproxy.io
  * LOCATION_IN_GRPC:
    * xds/third_party/envoy

This product contains a modified portion of 'gogoprotobuf',
an open source Protocol Buffers support for Go with Gadgets,
which can be obtained at:

  * LICENSE:
    * xds/third_party/gogoproto/LICENSE
  * HOMEPAGE:
    * https://github.com/gogo/protobuf
  * LOCATION_IN_GRPC:
    * xds/third_party/gogoproto

This product contains a modified portion of 'protoc-gen-validate (PGV)',
an open source protoc plugin to generate polyglot message validators,
which can be obtained at:

  * LICENSE:
    * xds/third_party/protoc-gen-validate/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/lyft/protoc-gen-validate
  * LOCATION_IN_GRPC:
    * xds/third_party/protoc-gen-validate

This product contains a modified portion of 'udpa',
an open source universal data plane API, which can be obtained at:

  * LICENSE:
    * xds/third_party/udpa/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/cncf/udpa
  * LOCATION_IN_GRPC:
    * xds/third_party/udpa


com.fasterxml.jackson.dataformat:jackson-dataformat-xml
====================

# Jackson JSON processor

Jackson is a high-performance, Free/Open Source JSON processing library.
It was originally written by Tatu Saloranta (tatu.saloranta@iki.fi), and has
been in development since 2007.
It is currently developed by a community of developers, as well as supported
commercially by FasterXML.com.

## Licensing

Jackson core and extension components may licensed under different licenses.
To find the details that apply to this artifact see the accompanying LICENSE file.
For more information, including possible other licensing options, contact
FasterXML.com (http://fasterxml.com).

## Credits

A list of contributors may be found from CREDITS file, which is included
in some artifacts (usually source distributions); but is always available
from the source code management (SCM) system project uses.


com.jolbox:bonecp
====================

   =========================================================================
   ==  NOTICE file corresponding to the section 4 d of                    ==
   ==  the Apache License, Version 2.0,                                   ==
   ==  in this case for the BoneCP (Java connection pool).                ==
   =========================================================================

   BoneCP
   Copyright 2010 Wallace Wadge

   This product includes software developed by
   Wallace Wadge (http://jolbox.com/).

org.codehaus.jackson:jackson-mapper-asl
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


com.google.inject:guice
====================


Google Guice - Core Library
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




com.google.inject.extensions:guice-assistedinject
====================


Google Guice - Extensions - AssistedInject
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




org.codehaus.jackson:jackson-xc
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


org.codehaus.jackson:jackson-jaxrs
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


com.google.inject.extensions:guice-servlet
====================


Google Guice - Extensions - Servlet
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




org.codehaus.jackson:jackson-core-asl
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


org.bouncycastle:bcprov-jdk15on
====================

Copyright (c) 2000 - 2019 The Legion of the Bouncy Castle Inc. (https://www.bouncycastle.org)

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Source: https://bouncycastle.org/license.html

ch.qos.reload4j:reload4j
====================

Apache log4j
Copyright 2007 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

com.google.inject.extensions:guice-multibindings
====================


Google Guice - Extensions - MultiBindings
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).


====================
ratis-thirdparty-misc is a shaded dependency which includes additional 3rd party dependencies in shaded form.
For the detailed list of the dependencies and the associated NOTICE file see licenses/NOTICE-ratis-thirdparty-misc.txt.</msg>
<status status="PASS" starttime="20230309 17:19:35.415" endtime="20230309 17:19:35.421"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:19:35.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:19:35.421" endtime="20230309 17:19:35.422"/>
</kw>
<status status="PASS" starttime="20230309 17:19:19.260" endtime="20230309 17:19:35.422"/>
</kw>
<msg timestamp="20230309 17:19:35.422" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:19:19.260" endtime="20230309 17:19:35.423"/>
</kw>
<status status="PASS" starttime="20230309 17:19:19.259" endtime="20230309 17:19:35.424"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:19:19.258" endtime="20230309 17:19:35.425"/>
</test>
<test id="s1-s3-t13" name="Delete file" line="105">
<kw name="Execute" library="os">
<arg>ozone fs -rm -skipTrash ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:19:35.436" level="INFO">Running command 'ozone fs -rm -skipTrash ofs://om/fstest1/25699-bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:19:46.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:19:46.060" level="INFO">${output} = Deleted ofs://om/fstest1/25699-bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20230309 17:19:35.432" endtime="20230309 17:19:46.060"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:19:46.063" level="INFO">Deleted ofs://om/fstest1/25699-bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20230309 17:19:46.061" endtime="20230309 17:19:46.063"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:19:46.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:19:46.063" endtime="20230309 17:19:46.065"/>
</kw>
<status status="PASS" starttime="20230309 17:19:35.431" endtime="20230309 17:19:46.067"/>
</kw>
<msg timestamp="20230309 17:19:46.067" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:19:35.430" endtime="20230309 17:19:46.068"/>
</kw>
<status status="PASS" starttime="20230309 17:19:35.429" endtime="20230309 17:19:46.069"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:19:46.076" level="INFO">Running command 'ozone sh key list fstest1/25699-bucket1-ofs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:19:59.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:19:59.172" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/STREAMING.txt
test/ofs/dir/subdir1/</msg>
<status status="PASS" starttime="20230309 17:19:46.071" endtime="20230309 17:19:59.172"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:19:59.175" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/STREAMING.txt
test/ofs/dir/subdir1/</msg>
<status status="PASS" starttime="20230309 17:19:59.173" endtime="20230309 17:19:59.175"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:19:59.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:19:59.176" endtime="20230309 17:19:59.177"/>
</kw>
<status status="PASS" starttime="20230309 17:19:46.070" endtime="20230309 17:19:59.177"/>
</kw>
<msg timestamp="20230309 17:19:59.177" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:19:46.070" endtime="20230309 17:19:59.178"/>
</kw>
<msg timestamp="20230309 17:19:59.178" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/STREAMING.txt
test/ofs/dir/subdir1/</msg>
<status status="PASS" starttime="20230309 17:19:46.069" endtime="20230309 17:19:59.178"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:19:59.179" endtime="20230309 17:19:59.180"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:19:35.428" endtime="20230309 17:19:59.180"/>
</test>
<test id="s1-s3-t14" name="Delete dir" line="110">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -rmdir ${DEEP_URL}/subdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:19:59.196" level="INFO">Running command 'ozone fs -rmdir ofs://om/fstest1/25699-bucket1-ofs/test/ofs/dir/subdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:20:09.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:20:09.349" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:19:59.190" endtime="20230309 17:20:09.349"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:20:09.351" level="INFO"/>
<status status="PASS" starttime="20230309 17:20:09.350" endtime="20230309 17:20:09.351"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:20:09.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:20:09.352" endtime="20230309 17:20:09.354"/>
</kw>
<status status="PASS" starttime="20230309 17:19:59.190" endtime="20230309 17:20:09.354"/>
</kw>
<msg timestamp="20230309 17:20:09.354" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:19:59.189" endtime="20230309 17:20:09.355"/>
</kw>
<msg timestamp="20230309 17:20:09.356" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 17:19:59.188" endtime="20230309 17:20:09.356"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:20:09.363" level="INFO">Running command 'ozone sh key list fstest1/25699-bucket1-ofs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:20:22.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:20:22.563" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20230309 17:20:09.359" endtime="20230309 17:20:22.563"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:20:22.565" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20230309 17:20:22.564" endtime="20230309 17:20:22.566"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:20:22.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:20:22.566" endtime="20230309 17:20:22.567"/>
</kw>
<status status="PASS" starttime="20230309 17:20:09.358" endtime="20230309 17:20:22.568"/>
</kw>
<msg timestamp="20230309 17:20:22.568" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:20:09.358" endtime="20230309 17:20:22.569"/>
</kw>
<msg timestamp="20230309 17:20:22.569" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20230309 17:20:09.356" endtime="20230309 17:20:22.569"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>subdir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:20:22.569" endtime="20230309 17:20:22.570"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:19:59.187" endtime="20230309 17:20:22.571"/>
</test>
<test id="s1-s3-t15" name="Touch file" line="115">
<kw name="Execute" library="os">
<arg>ozone fs -touch ${DEEP_URL}/TOUCHFILE-${SCHEME}.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:20:22.583" level="INFO">Running command 'ozone fs -touch ofs://om/fstest1/25699-bucket1-ofs/test/ofs/dir/TOUCHFILE-ofs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:20:33.803" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:20:33.803" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:20:22.577" endtime="20230309 17:20:33.803"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:20:33.805" level="INFO"/>
<status status="PASS" starttime="20230309 17:20:33.804" endtime="20230309 17:20:33.805"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:20:33.805" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:20:33.805" endtime="20230309 17:20:33.806"/>
</kw>
<status status="PASS" starttime="20230309 17:20:22.577" endtime="20230309 17:20:33.806"/>
</kw>
<msg timestamp="20230309 17:20:33.806" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:20:22.575" endtime="20230309 17:20:33.807"/>
</kw>
<status status="PASS" starttime="20230309 17:20:22.574" endtime="20230309 17:20:33.807"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:20:33.813" level="INFO">Running command 'ozone sh key list fstest1/25699-bucket1-ofs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:20:46.002" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:20:46.002" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/STREAMING.txt
test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" starttime="20230309 17:20:33.810" endtime="20230309 17:20:46.002"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:20:46.004" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/STREAMING.txt
test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" starttime="20230309 17:20:46.003" endtime="20230309 17:20:46.004"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:20:46.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:20:46.004" endtime="20230309 17:20:46.005"/>
</kw>
<status status="PASS" starttime="20230309 17:20:33.809" endtime="20230309 17:20:46.006"/>
</kw>
<msg timestamp="20230309 17:20:46.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:20:33.809" endtime="20230309 17:20:46.007"/>
</kw>
<msg timestamp="20230309 17:20:46.007" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/STREAMING.txt
test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" starttime="20230309 17:20:33.807" endtime="20230309 17:20:46.007"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TOUCHFILE-${SCHEME}.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:20:46.007" endtime="20230309 17:20:46.008"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:20:22.572" endtime="20230309 17:20:46.009"/>
</test>
<test id="s1-s3-t16" name="Delete file with Trash" line="120">
<kw name="Execute" library="os">
<arg>ozone fs -touch ${DEEP_URL}/testFile.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:20:46.022" level="INFO">Running command 'ozone fs -touch ofs://om/fstest1/25699-bucket1-ofs/test/ofs/dir/testFile.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:20:56.191" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:20:56.191" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:20:46.018" endtime="20230309 17:20:56.191"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:20:56.195" level="INFO"/>
<status status="PASS" starttime="20230309 17:20:56.193" endtime="20230309 17:20:56.195"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:20:56.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:20:56.195" endtime="20230309 17:20:56.196"/>
</kw>
<status status="PASS" starttime="20230309 17:20:46.017" endtime="20230309 17:20:56.197"/>
</kw>
<msg timestamp="20230309 17:20:56.197" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:20:46.017" endtime="20230309 17:20:56.199"/>
</kw>
<status status="PASS" starttime="20230309 17:20:46.015" endtime="20230309 17:20:56.199"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -rm ${DEEP_URL}/testFile.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:20:56.205" level="INFO">Running command 'ozone fs -rm ofs://om/fstest1/25699-bucket1-ofs/test/ofs/dir/testFile.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:21:06.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:21:06.725" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:20:56.202" endtime="20230309 17:21:06.725"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:21:06.727" level="INFO"/>
<status status="PASS" starttime="20230309 17:21:06.726" endtime="20230309 17:21:06.727"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:21:06.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:21:06.728" endtime="20230309 17:21:06.729"/>
</kw>
<status status="PASS" starttime="20230309 17:20:56.201" endtime="20230309 17:21:06.729"/>
</kw>
<msg timestamp="20230309 17:21:06.729" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:20:56.201" endtime="20230309 17:21:06.730"/>
</kw>
<status status="PASS" starttime="20230309 17:20:56.200" endtime="20230309 17:21:06.730"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls -R ${BASE_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:21:06.738" level="INFO">Running command 'ozone fs -ls -R ofs://om/fstest1/25699-bucket1-ofs// 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:21:17.134" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:21:17.134" level="INFO">${output} = drwxrwxrwx   - testuser testuser          0 2023-03-09 17:21 ofs://om/fstest1/25699-bucket1-ofs/.Trash
drwxrwxrwx   - testuser testuser          0 2023-03-09 17:21 ofs://om/fstest1/25699-bucket1-ofs/....</msg>
<status status="PASS" starttime="20230309 17:21:06.735" endtime="20230309 17:21:17.134"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:21:17.136" level="INFO">drwxrwxrwx   - testuser testuser          0 2023-03-09 17:21 ofs://om/fstest1/25699-bucket1-ofs/.Trash
drwxrwxrwx   - testuser testuser          0 2023-03-09 17:21 ofs://om/fstest1/25699-bucket1-ofs/.Trash/testuser
drwxrwxrwx   - testuser testuser          0 2023-03-09 17:21 ofs://om/fstest1/25699-bucket1-ofs/.Trash/testuser/Current
drwxrwxrwx   - testuser testuser          0 2023-03-09 17:21 ofs://om/fstest1/25699-bucket1-ofs/.Trash/testuser/Current/test
drwxrwxrwx   - testuser testuser          0 2023-03-09 17:21 ofs://om/fstest1/25699-bucket1-ofs/.Trash/testuser/Current/test/ofs
drwxrwxrwx   - testuser testuser          0 2023-03-09 17:21 ofs://om/fstest1/25699-bucket1-ofs/.Trash/testuser/Current/test/ofs/dir
-rw-rw-rw-   3 testuser testuser          0 2023-03-09 17:20 ofs://om/fstest1/25699-bucket1-ofs/.Trash/testuser/Current/test/ofs/dir/testFile.txt
drwxrwxrwx   - testuser testuser          0 2023-03-09 17:15 ofs://om/fstest1/25699-bucket1-ofs/test
drwxrwxrwx   - testuser testuser          0 2023-03-09 17:15 ofs://om/fstest1/25699-bucket1-ofs/test/ofs
drwxrwxrwx   - testuser testuser          0 2023-03-09 17:21 ofs://om/fstest1/25699-bucket1-ofs/test/ofs/dir
-rw-rw-rw-   3 testuser testuser      17539 2023-03-09 17:15 ofs://om/fstest1/25699-bucket1-ofs/test/ofs/dir/MOVED.TXT
-rw-rw-rw-   3 testuser testuser      17539 2023-03-09 17:16 ofs://om/fstest1/25699-bucket1-ofs/test/ofs/dir/PUTFILE.txt
-rw-rw-rw-   3 testuser testuser      17539 2023-03-09 17:17 ofs://om/fstest1/25699-bucket1-ofs/test/ofs/dir/STREAMING.txt
-rw-rw-rw-   3 testuser testuser          0 2023-03-09 17:20 ofs://om/fstest1/25699-bucket1-ofs/test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" starttime="20230309 17:21:17.135" endtime="20230309 17:21:17.136"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:21:17.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:21:17.136" endtime="20230309 17:21:17.137"/>
</kw>
<status status="PASS" starttime="20230309 17:21:06.733" endtime="20230309 17:21:17.138"/>
</kw>
<msg timestamp="20230309 17:21:17.138" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:21:06.732" endtime="20230309 17:21:17.139"/>
</kw>
<msg timestamp="20230309 17:21:17.139" level="INFO">${result} = drwxrwxrwx   - testuser testuser          0 2023-03-09 17:21 ofs://om/fstest1/25699-bucket1-ofs/.Trash
drwxrwxrwx   - testuser testuser          0 2023-03-09 17:21 ofs://om/fstest1/25699-bucket1-ofs/....</msg>
<status status="PASS" starttime="20230309 17:21:06.731" endtime="20230309 17:21:17.139"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_URL}/testFile.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:21:17.140" endtime="20230309 17:21:17.141"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>.Trash/hadoop</arg>
<arg>.Trash/testuser</arg>
<arg>.Trash/root</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230309 17:21:17.142" endtime="20230309 17:21:17.143"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}/testFile.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:21:17.143" endtime="20230309 17:21:17.145"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:20:46.013" endtime="20230309 17:21:17.145"/>
</test>
<test id="s1-s3-t17" name="Delete recursively" line="128">
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${DEEP_URL}/subdir2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:21:17.156" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/25699-bucket1-ofs/test/ofs/dir/subdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:21:27.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:21:27.720" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:21:17.153" endtime="20230309 17:21:27.720"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:21:27.726" level="INFO"/>
<status status="PASS" starttime="20230309 17:21:27.721" endtime="20230309 17:21:27.726"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:21:27.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:21:27.726" endtime="20230309 17:21:27.729"/>
</kw>
<status status="PASS" starttime="20230309 17:21:17.151" endtime="20230309 17:21:27.729"/>
</kw>
<msg timestamp="20230309 17:21:27.730" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:21:17.151" endtime="20230309 17:21:27.731"/>
</kw>
<status status="PASS" starttime="20230309 17:21:17.150" endtime="20230309 17:21:27.731"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -rm -skipTrash -r ${DEEP_URL}/subdir2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:21:27.744" level="INFO">Running command 'ozone fs -rm -skipTrash -r ofs://om/fstest1/25699-bucket1-ofs/test/ofs/dir/subdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:21:38.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:21:38.202" level="INFO">${output} = Deleted ofs://om/fstest1/25699-bucket1-ofs/test/ofs/dir/subdir2</msg>
<status status="PASS" starttime="20230309 17:21:27.737" endtime="20230309 17:21:38.202"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:21:38.205" level="INFO">Deleted ofs://om/fstest1/25699-bucket1-ofs/test/ofs/dir/subdir2</msg>
<status status="PASS" starttime="20230309 17:21:38.203" endtime="20230309 17:21:38.205"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:21:38.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:21:38.205" endtime="20230309 17:21:38.208"/>
</kw>
<status status="PASS" starttime="20230309 17:21:27.735" endtime="20230309 17:21:38.208"/>
</kw>
<msg timestamp="20230309 17:21:38.208" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:21:27.734" endtime="20230309 17:21:38.209"/>
</kw>
<status status="PASS" starttime="20230309 17:21:27.733" endtime="20230309 17:21:38.210"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:21:38.219" level="INFO">Running command 'ozone sh key list fstest1/25699-bucket1-ofs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:21:50.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:21:50.973" level="INFO">${output} = .Trash/
.Trash/testuser/
.Trash/testuser/Current/
.Trash/testuser/Current/test/
.Trash/testuser/Current/test/ofs/
.Trash/testuser/Current/test/ofs/dir/
.Trash/testuser/Current/test/ofs/dir/testFile.tx...</msg>
<status status="PASS" starttime="20230309 17:21:38.213" endtime="20230309 17:21:50.973"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:21:50.976" level="INFO">.Trash/
.Trash/testuser/
.Trash/testuser/Current/
.Trash/testuser/Current/test/
.Trash/testuser/Current/test/ofs/
.Trash/testuser/Current/test/ofs/dir/
.Trash/testuser/Current/test/ofs/dir/testFile.txt
test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/STREAMING.txt
test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" starttime="20230309 17:21:50.974" endtime="20230309 17:21:50.977"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:21:50.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:21:50.977" endtime="20230309 17:21:50.978"/>
</kw>
<status status="PASS" starttime="20230309 17:21:38.212" endtime="20230309 17:21:50.979"/>
</kw>
<msg timestamp="20230309 17:21:50.979" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:21:38.212" endtime="20230309 17:21:50.980"/>
</kw>
<msg timestamp="20230309 17:21:50.980" level="INFO">${result} = .Trash/
.Trash/testuser/
.Trash/testuser/Current/
.Trash/testuser/Current/test/
.Trash/testuser/Current/test/ofs/
.Trash/testuser/Current/test/ofs/dir/
.Trash/testuser/Current/test/ofs/dir/testFile.tx...</msg>
<status status="PASS" starttime="20230309 17:21:38.211" endtime="20230309 17:21:50.981"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}/subdir2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:21:50.981" endtime="20230309 17:21:50.982"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:21:17.148" endtime="20230309 17:21:50.983"/>
</test>
<test id="s1-s3-t18" name="List recursively" line="134">
<kw name="Setup localdir1" type="SETUP">
<kw name="Execute" library="os">
<arg>rm -Rf /tmp/localdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:21:50.995" level="INFO">Running command 'rm -Rf /tmp/localdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:21:51.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:21:51.001" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:21:50.990" endtime="20230309 17:21:51.001"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:21:51.003" level="INFO"/>
<status status="PASS" starttime="20230309 17:21:51.002" endtime="20230309 17:21:51.003"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:21:51.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:21:51.003" endtime="20230309 17:21:51.004"/>
</kw>
<status status="PASS" starttime="20230309 17:21:50.989" endtime="20230309 17:21:51.005"/>
</kw>
<msg timestamp="20230309 17:21:51.005" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:21:50.988" endtime="20230309 17:21:51.005"/>
</kw>
<status status="PASS" starttime="20230309 17:21:50.987" endtime="20230309 17:21:51.006"/>
</kw>
<kw name="Execute" library="os">
<arg>mkdir /tmp/localdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:21:51.012" level="INFO">Running command 'mkdir /tmp/localdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:21:51.016" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:21:51.017" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:21:51.008" endtime="20230309 17:21:51.017"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:21:51.018" level="INFO"/>
<status status="PASS" starttime="20230309 17:21:51.017" endtime="20230309 17:21:51.019"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:21:51.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:21:51.019" endtime="20230309 17:21:51.021"/>
</kw>
<status status="PASS" starttime="20230309 17:21:51.007" endtime="20230309 17:21:51.021"/>
</kw>
<msg timestamp="20230309 17:21:51.021" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:21:51.007" endtime="20230309 17:21:51.022"/>
</kw>
<status status="PASS" starttime="20230309 17:21:51.006" endtime="20230309 17:21:51.023"/>
</kw>
<kw name="Execute" library="os">
<arg>cp NOTICE.txt /tmp/localdir1/LOCAL.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:21:51.029" level="INFO">Running command 'cp NOTICE.txt /tmp/localdir1/LOCAL.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:21:51.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:21:51.037" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:21:51.025" endtime="20230309 17:21:51.037"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:21:51.038" level="INFO"/>
<status status="PASS" starttime="20230309 17:21:51.037" endtime="20230309 17:21:51.039"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:21:51.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:21:51.039" endtime="20230309 17:21:51.040"/>
</kw>
<status status="PASS" starttime="20230309 17:21:51.025" endtime="20230309 17:21:51.041"/>
</kw>
<msg timestamp="20230309 17:21:51.041" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:21:51.024" endtime="20230309 17:21:51.041"/>
</kw>
<status status="PASS" starttime="20230309 17:21:51.023" endtime="20230309 17:21:51.042"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${BASE_URL}testdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:21:51.049" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/25699-bucket1-ofs/testdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:22:01.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:22:01.751" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:21:51.045" endtime="20230309 17:22:01.751"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:22:01.752" level="INFO"/>
<status status="PASS" starttime="20230309 17:22:01.751" endtime="20230309 17:22:01.753"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:22:01.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:22:01.753" endtime="20230309 17:22:01.754"/>
</kw>
<status status="PASS" starttime="20230309 17:21:51.044" endtime="20230309 17:22:01.754"/>
</kw>
<msg timestamp="20230309 17:22:01.754" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:21:51.043" endtime="20230309 17:22:01.755"/>
</kw>
<status status="PASS" starttime="20230309 17:21:51.042" endtime="20230309 17:22:01.756"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -copyFromLocal /tmp/localdir1 ${BASE_URL}testdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:22:01.763" level="INFO">Running command 'ozone fs -copyFromLocal /tmp/localdir1 ofs://om/fstest1/25699-bucket1-ofs/testdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:22:17.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:22:17.209" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:22:01.759" endtime="20230309 17:22:17.210"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:22:17.211" level="INFO"/>
<status status="PASS" starttime="20230309 17:22:17.210" endtime="20230309 17:22:17.211"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:22:17.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:22:17.211" endtime="20230309 17:22:17.212"/>
</kw>
<status status="PASS" starttime="20230309 17:22:01.757" endtime="20230309 17:22:17.213"/>
</kw>
<msg timestamp="20230309 17:22:17.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:22:01.757" endtime="20230309 17:22:17.214"/>
</kw>
<status status="PASS" starttime="20230309 17:22:01.756" endtime="20230309 17:22:17.215"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -put NOTICE.txt ${BASE_URL}testdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:22:17.224" level="INFO">Running command 'ozone fs -put NOTICE.txt ofs://om/fstest1/25699-bucket1-ofs/testdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:22:32.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:22:32.527" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:22:17.220" endtime="20230309 17:22:32.527"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:22:32.530" level="INFO"/>
<status status="PASS" starttime="20230309 17:22:32.528" endtime="20230309 17:22:32.530"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:22:32.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:22:32.530" endtime="20230309 17:22:32.531"/>
</kw>
<status status="PASS" starttime="20230309 17:22:17.217" endtime="20230309 17:22:32.532"/>
</kw>
<msg timestamp="20230309 17:22:32.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:22:17.216" endtime="20230309 17:22:32.532"/>
</kw>
<status status="PASS" starttime="20230309 17:22:17.215" endtime="20230309 17:22:32.533"/>
</kw>
<status status="PASS" starttime="20230309 17:21:50.986" endtime="20230309 17:22:32.533"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls -R ${BASE_URL}testdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:22:32.539" level="INFO">Running command 'ozone fs -ls -R ofs://om/fstest1/25699-bucket1-ofs/testdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:22:43.926" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:22:43.926" level="INFO">${output} = -rw-rw-rw-   3 testuser testuser      17539 2023-03-09 17:22 ofs://om/fstest1/25699-bucket1-ofs/testdir1/NOTICE.txt
drwxrwxrwx   - testuser testuser          0 2023-03-09 17:22 ofs://om/fstest1/25699-...</msg>
<status status="PASS" starttime="20230309 17:22:32.536" endtime="20230309 17:22:43.926"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:22:43.929" level="INFO">-rw-rw-rw-   3 testuser testuser      17539 2023-03-09 17:22 ofs://om/fstest1/25699-bucket1-ofs/testdir1/NOTICE.txt
drwxrwxrwx   - testuser testuser          0 2023-03-09 17:22 ofs://om/fstest1/25699-bucket1-ofs/testdir1/localdir1
-rw-rw-rw-   3 testuser testuser      17539 2023-03-09 17:22 ofs://om/fstest1/25699-bucket1-ofs/testdir1/localdir1/LOCAL.txt</msg>
<status status="PASS" starttime="20230309 17:22:43.927" endtime="20230309 17:22:43.929"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:22:43.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:22:43.929" endtime="20230309 17:22:43.930"/>
</kw>
<status status="PASS" starttime="20230309 17:22:32.535" endtime="20230309 17:22:43.931"/>
</kw>
<msg timestamp="20230309 17:22:43.931" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:22:32.535" endtime="20230309 17:22:43.931"/>
</kw>
<msg timestamp="20230309 17:22:43.932" level="INFO">${result} = -rw-rw-rw-   3 testuser testuser      17539 2023-03-09 17:22 ofs://om/fstest1/25699-bucket1-ofs/testdir1/NOTICE.txt
drwxrwxrwx   - testuser testuser          0 2023-03-09 17:22 ofs://om/fstest1/25699-...</msg>
<status status="PASS" starttime="20230309 17:22:32.534" endtime="20230309 17:22:43.932"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>localdir1/LOCAL.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:22:43.932" endtime="20230309 17:22:43.932"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testdir1/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:22:43.933" endtime="20230309 17:22:43.933"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:21:50.984" endtime="20230309 17:22:43.933"/>
</test>
<test id="s1-s3-t19" name="Copy to other bucket" line="140">
<kw name="Format FS URL" library="fs">
<var>${target}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET2}</arg>
<arg>testdir2</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 17:22:43.952" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20230309 17:22:43.951" endtime="20230309 17:22:43.952"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 17:22:43.953" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20230309 17:22:43.952" endtime="20230309 17:22:43.953"/>
</kw>
<status status="PASS" starttime="20230309 17:22:43.950" endtime="20230309 17:22:43.954"/>
</kw>
<msg timestamp="20230309 17:22:43.954" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20230309 17:22:43.942" endtime="20230309 17:22:43.954"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 17:22:43.958" level="INFO">${first} = t</msg>
<status status="PASS" starttime="20230309 17:22:43.956" endtime="20230309 17:22:43.958"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 17:22:43.960" level="INFO">${result} = /testdir2</msg>
<status status="PASS" starttime="20230309 17:22:43.959" endtime="20230309 17:22:43.960"/>
</kw>
<status status="PASS" starttime="20230309 17:22:43.956" endtime="20230309 17:22:43.960"/>
</kw>
<msg timestamp="20230309 17:22:43.960" level="INFO">${path_with_leading} = /testdir2</msg>
<status status="PASS" starttime="20230309 17:22:43.954" endtime="20230309 17:22:43.960"/>
</kw>
<status status="PASS" starttime="20230309 17:22:43.940" endtime="20230309 17:22:43.960"/>
</kw>
<msg timestamp="20230309 17:22:43.961" level="INFO">${url} = ofs://om/fstest1/25699-bucket2-ofs/testdir2</msg>
<status status="PASS" starttime="20230309 17:22:43.939" endtime="20230309 17:22:43.961"/>
</kw>
<msg timestamp="20230309 17:22:43.961" level="INFO">${target} = ofs://om/fstest1/25699-bucket2-ofs/testdir2</msg>
<status status="PASS" starttime="20230309 17:22:43.937" endtime="20230309 17:22:43.961"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:22:43.966" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/25699-bucket2-ofs/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:22:54.505" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:22:54.505" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:22:43.963" endtime="20230309 17:22:54.505"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:22:54.507" level="INFO"/>
<status status="PASS" starttime="20230309 17:22:54.506" endtime="20230309 17:22:54.507"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:22:54.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:22:54.507" endtime="20230309 17:22:54.508"/>
</kw>
<status status="PASS" starttime="20230309 17:22:43.962" endtime="20230309 17:22:54.508"/>
</kw>
<msg timestamp="20230309 17:22:54.508" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:22:43.962" endtime="20230309 17:22:54.509"/>
</kw>
<status status="PASS" starttime="20230309 17:22:43.961" endtime="20230309 17:22:54.510"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${BASE_URL}/testdir1/localdir1 ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:22:54.516" level="INFO">Running command 'ozone fs -cp ofs://om/fstest1/25699-bucket1-ofs//testdir1/localdir1 ofs://om/fstest1/25699-bucket2-ofs/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:23:10.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:23:10.882" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:22:54.513" endtime="20230309 17:23:10.882"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:23:10.884" level="INFO"/>
<status status="PASS" starttime="20230309 17:23:10.883" endtime="20230309 17:23:10.884"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:23:10.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:23:10.884" endtime="20230309 17:23:10.885"/>
</kw>
<status status="PASS" starttime="20230309 17:22:54.512" endtime="20230309 17:23:10.885"/>
</kw>
<msg timestamp="20230309 17:23:10.885" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:22:54.512" endtime="20230309 17:23:10.886"/>
</kw>
<status status="PASS" starttime="20230309 17:22:54.511" endtime="20230309 17:23:10.886"/>
</kw>
<kw name="Execute" library="os" type="TEARDOWN">
<arg>ozone fs -rm -r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:23:10.893" level="INFO">Running command 'ozone fs -rm -r ofs://om/fstest1/25699-bucket2-ofs/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:23:20.872" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:23:20.873" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:23:10.890" endtime="20230309 17:23:20.873"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:23:20.875" level="INFO"/>
<status status="PASS" starttime="20230309 17:23:20.874" endtime="20230309 17:23:20.875"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:23:20.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:23:20.875" endtime="20230309 17:23:20.877"/>
</kw>
<status status="PASS" starttime="20230309 17:23:10.888" endtime="20230309 17:23:20.877"/>
</kw>
<msg timestamp="20230309 17:23:20.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:23:10.888" endtime="20230309 17:23:20.877"/>
</kw>
<status status="PASS" starttime="20230309 17:23:10.887" endtime="20230309 17:23:20.878"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:22:43.936" endtime="20230309 17:23:20.878"/>
</test>
<test id="s1-s3-t20" name="Copy to other volume" line="146">
<kw name="Format FS URL" library="fs">
<var>${target}</var>
<arg>${SCHEME}</arg>
<arg>${VOL2}</arg>
<arg>${BUCKET_IN_VOL2}</arg>
<arg>testdir3</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 17:23:20.891" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20230309 17:23:20.889" endtime="20230309 17:23:20.891"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 17:23:20.892" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20230309 17:23:20.891" endtime="20230309 17:23:20.892"/>
</kw>
<status status="PASS" starttime="20230309 17:23:20.889" endtime="20230309 17:23:20.893"/>
</kw>
<msg timestamp="20230309 17:23:20.893" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20230309 17:23:20.887" endtime="20230309 17:23:20.893"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 17:23:20.899" level="INFO">${first} = t</msg>
<status status="PASS" starttime="20230309 17:23:20.898" endtime="20230309 17:23:20.899"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 17:23:20.900" level="INFO">${result} = /testdir3</msg>
<status status="PASS" starttime="20230309 17:23:20.899" endtime="20230309 17:23:20.900"/>
</kw>
<status status="PASS" starttime="20230309 17:23:20.897" endtime="20230309 17:23:20.900"/>
</kw>
<msg timestamp="20230309 17:23:20.901" level="INFO">${path_with_leading} = /testdir3</msg>
<status status="PASS" starttime="20230309 17:23:20.894" endtime="20230309 17:23:20.901"/>
</kw>
<status status="PASS" starttime="20230309 17:23:20.885" endtime="20230309 17:23:20.902"/>
</kw>
<msg timestamp="20230309 17:23:20.902" level="INFO">${url} = ofs://om/fstest2/25699-bucket3-ofs/testdir3</msg>
<status status="PASS" starttime="20230309 17:23:20.884" endtime="20230309 17:23:20.902"/>
</kw>
<msg timestamp="20230309 17:23:20.903" level="INFO">${target} = ofs://om/fstest2/25699-bucket3-ofs/testdir3</msg>
<status status="PASS" starttime="20230309 17:23:20.882" endtime="20230309 17:23:20.903"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:23:20.913" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest2/25699-bucket3-ofs/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:23:32.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:23:32.257" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:23:20.907" endtime="20230309 17:23:32.257"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:23:32.259" level="INFO"/>
<status status="PASS" starttime="20230309 17:23:32.258" endtime="20230309 17:23:32.259"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:23:32.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:23:32.260" endtime="20230309 17:23:32.261"/>
</kw>
<status status="PASS" starttime="20230309 17:23:20.905" endtime="20230309 17:23:32.264"/>
</kw>
<msg timestamp="20230309 17:23:32.264" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:23:20.904" endtime="20230309 17:23:32.265"/>
</kw>
<status status="PASS" starttime="20230309 17:23:20.904" endtime="20230309 17:23:32.265"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${BASE_URL}/testdir1/localdir1 ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:23:32.273" level="INFO">Running command 'ozone fs -cp ofs://om/fstest1/25699-bucket1-ofs//testdir1/localdir1 ofs://om/fstest2/25699-bucket3-ofs/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:23:50.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:23:50.352" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:23:32.268" endtime="20230309 17:23:50.352"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:23:50.353" level="INFO"/>
<status status="PASS" starttime="20230309 17:23:50.352" endtime="20230309 17:23:50.353"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:23:50.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:23:50.353" endtime="20230309 17:23:50.354"/>
</kw>
<status status="PASS" starttime="20230309 17:23:32.267" endtime="20230309 17:23:50.355"/>
</kw>
<msg timestamp="20230309 17:23:50.355" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:23:32.267" endtime="20230309 17:23:50.355"/>
</kw>
<status status="PASS" starttime="20230309 17:23:32.265" endtime="20230309 17:23:50.356"/>
</kw>
<kw name="Execute" library="os" type="TEARDOWN">
<arg>ozone fs -rm -r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:23:50.362" level="INFO">Running command 'ozone fs -rm -r ofs://om/fstest2/25699-bucket3-ofs/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:24:00.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:24:00.883" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:23:50.359" endtime="20230309 17:24:00.884"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:24:00.886" level="INFO"/>
<status status="PASS" starttime="20230309 17:24:00.884" endtime="20230309 17:24:00.886"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:24:00.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:24:00.886" endtime="20230309 17:24:00.887"/>
</kw>
<status status="PASS" starttime="20230309 17:23:50.358" endtime="20230309 17:24:00.887"/>
</kw>
<msg timestamp="20230309 17:24:00.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:23:50.357" endtime="20230309 17:24:00.888"/>
</kw>
<status status="PASS" starttime="20230309 17:23:50.356" endtime="20230309 17:24:00.888"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:23:20.880" endtime="20230309 17:24:00.889"/>
</test>
<test id="s1-s3-t21" name="List file created via shell" line="152">
<kw name="Execute" library="os" type="SETUP">
<arg>ozone sh key put ${VOLUME}/${BUCKET}/${SCHEME}.txt NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:24:00.901" level="INFO">Running command 'ozone sh key put fstest1/25699-bucket1-ofs/ofs.txt NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:24:18.263" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:24:18.263" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:24:00.895" endtime="20230309 17:24:18.263"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:24:18.265" level="INFO"/>
<status status="PASS" starttime="20230309 17:24:18.264" endtime="20230309 17:24:18.265"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:24:18.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:24:18.266" endtime="20230309 17:24:18.267"/>
</kw>
<status status="PASS" starttime="20230309 17:24:00.893" endtime="20230309 17:24:18.267"/>
</kw>
<msg timestamp="20230309 17:24:18.267" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:24:00.893" endtime="20230309 17:24:18.268"/>
</kw>
<status status="PASS" starttime="20230309 17:24:00.892" endtime="20230309 17:24:18.268"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${BASE_URL}${SCHEME}.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:24:18.275" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/25699-bucket1-ofs/ofs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:24:29.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:24:29.014" level="INFO">${output} = -rw-rw-rw-   3 testuser testuser      17539 2023-03-09 17:24 ofs://om/fstest1/25699-bucket1-ofs/ofs.txt</msg>
<status status="PASS" starttime="20230309 17:24:18.272" endtime="20230309 17:24:29.014"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:24:29.016" level="INFO">-rw-rw-rw-   3 testuser testuser      17539 2023-03-09 17:24 ofs://om/fstest1/25699-bucket1-ofs/ofs.txt</msg>
<status status="PASS" starttime="20230309 17:24:29.015" endtime="20230309 17:24:29.016"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:24:29.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:24:29.016" endtime="20230309 17:24:29.017"/>
</kw>
<status status="PASS" starttime="20230309 17:24:18.270" endtime="20230309 17:24:29.017"/>
</kw>
<msg timestamp="20230309 17:24:29.017" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:24:18.270" endtime="20230309 17:24:29.020"/>
</kw>
<msg timestamp="20230309 17:24:29.021" level="INFO">${result} = -rw-rw-rw-   3 testuser testuser      17539 2023-03-09 17:24 ofs://om/fstest1/25699-bucket1-ofs/ofs.txt</msg>
<status status="PASS" starttime="20230309 17:24:18.269" endtime="20230309 17:24:29.021"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${SCHEME}.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:24:29.021" endtime="20230309 17:24:29.022"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:24:00.890" endtime="20230309 17:24:29.022"/>
</test>
<test id="s1-s3-t22" name="Reject overwrite existing" line="157">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -copyFromLocal NOTICE.txt ${BASE_URL}${SCHEME}.txt</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:24:29.032" level="INFO">Running command 'ozone fs -copyFromLocal NOTICE.txt ofs://om/fstest1/25699-bucket1-ofs/ofs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:24:41.217" level="INFO">${rc} = 1</msg>
<msg timestamp="20230309 17:24:41.217" level="INFO">${output} = copyFromLocal: `ofs://om/fstest1/25699-bucket1-ofs/ofs.txt': File exists</msg>
<status status="PASS" starttime="20230309 17:24:29.027" endtime="20230309 17:24:41.218"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:24:41.219" level="INFO">copyFromLocal: `ofs://om/fstest1/25699-bucket1-ofs/ofs.txt': File exists</msg>
<status status="PASS" starttime="20230309 17:24:41.218" endtime="20230309 17:24:41.219"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:24:41.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:24:41.219" endtime="20230309 17:24:41.220"/>
</kw>
<msg timestamp="20230309 17:24:41.221" level="INFO">${result} = copyFromLocal: `ofs://om/fstest1/25699-bucket1-ofs/ofs.txt': File exists</msg>
<status status="PASS" starttime="20230309 17:24:29.025" endtime="20230309 17:24:41.221"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>File exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:24:41.221" endtime="20230309 17:24:41.221"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:24:29.024" endtime="20230309 17:24:41.222"/>
</test>
<test id="s1-s3-t23" name="Get file" line="161">
<kw name="Execute" library="os" type="SETUP">
<arg>rm -Rf /tmp/GET.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:24:41.249" level="INFO">Running command 'rm -Rf /tmp/GET.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:24:41.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:24:41.253" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:24:41.236" endtime="20230309 17:24:41.253"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:24:41.255" level="INFO"/>
<status status="PASS" starttime="20230309 17:24:41.253" endtime="20230309 17:24:41.255"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:24:41.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:24:41.255" endtime="20230309 17:24:41.258"/>
</kw>
<status status="PASS" starttime="20230309 17:24:41.230" endtime="20230309 17:24:41.259"/>
</kw>
<msg timestamp="20230309 17:24:41.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:24:41.230" endtime="20230309 17:24:41.259"/>
</kw>
<status status="PASS" starttime="20230309 17:24:41.229" endtime="20230309 17:24:41.260"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -get ${BASE_URL}${SCHEME}.txt /tmp/GET.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:24:41.273" level="INFO">Running command 'ozone fs -get ofs://om/fstest1/25699-bucket1-ofs/ofs.txt /tmp/GET.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:24:55.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:24:55.045" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:24:41.265" endtime="20230309 17:24:55.045"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:24:55.047" level="INFO"/>
<status status="PASS" starttime="20230309 17:24:55.046" endtime="20230309 17:24:55.047"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:24:55.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:24:55.047" endtime="20230309 17:24:55.048"/>
</kw>
<status status="PASS" starttime="20230309 17:24:41.263" endtime="20230309 17:24:55.050"/>
</kw>
<msg timestamp="20230309 17:24:55.051" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:24:41.261" endtime="20230309 17:24:55.053"/>
</kw>
<status status="PASS" starttime="20230309 17:24:41.260" endtime="20230309 17:24:55.053"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>/tmp/GET.txt</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20230309 17:24:55.056" level="INFO" html="true">File '&lt;a href="file:///tmp/GET.txt"&gt;/tmp/GET.txt&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230309 17:24:55.053" endtime="20230309 17:24:55.056"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:24:41.227" endtime="20230309 17:24:55.056"/>
</test>
<doc>Ozone FS tests</doc>
<status status="PASS" starttime="20230309 17:14:24.563" endtime="20230309 17:24:55.067"/>
</suite>
<suite id="s1-s4" name="ozonefs-o3fs-link" source="/opt/hadoop/smoketest/ozonefs/ozonefs.robot">
<kw name="Setup for FS test" library="setup" type="SETUP">
<kw name="Assign suite vars for FS test" library="setup">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:25:04.510" level="INFO">${random} = 88772</msg>
<status status="PASS" starttime="20230309 17:25:04.509" endtime="20230309 17:25:04.510"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>${random}-${BUCKET_TYPE}1-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:25:04.511" level="INFO">${BUCKET} = 88772-link1-o3fs</msg>
<status status="PASS" starttime="20230309 17:25:04.510" endtime="20230309 17:25:04.511"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET2}</arg>
<arg>${random}-${BUCKET_TYPE}2-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:25:04.513" level="INFO">${BUCKET2} = 88772-link2-o3fs</msg>
<status status="PASS" starttime="20230309 17:25:04.512" endtime="20230309 17:25:04.513"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET_IN_VOL2}</arg>
<arg>${random}-${BUCKET_TYPE}3-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:25:04.514" level="INFO">${BUCKET_IN_VOL2} = 88772-link3-o3fs</msg>
<status status="PASS" starttime="20230309 17:25:04.513" endtime="20230309 17:25:04.514"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${BASE_URL}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<arg>/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 17:25:04.521" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230309 17:25:04.520" endtime="20230309 17:25:04.521"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 17:25:04.522" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20230309 17:25:04.521" endtime="20230309 17:25:04.522"/>
</kw>
<status status="PASS" starttime="20230309 17:25:04.519" endtime="20230309 17:25:04.523"/>
</kw>
<msg timestamp="20230309 17:25:04.523" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20230309 17:25:04.517" endtime="20230309 17:25:04.523"/>
</kw>
<status status="PASS" starttime="20230309 17:25:04.516" endtime="20230309 17:25:04.524"/>
</kw>
<msg timestamp="20230309 17:25:04.524" level="INFO">${url} = o3fs://88772-link1-o3fs.fstest1.om//</msg>
<status status="PASS" starttime="20230309 17:25:04.515" endtime="20230309 17:25:04.524"/>
</kw>
<msg timestamp="20230309 17:25:04.524" level="INFO">${BASE_URL} = o3fs://88772-link1-o3fs.fstest1.om//</msg>
<status status="PASS" starttime="20230309 17:25:04.514" endtime="20230309 17:25:04.524"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BASE_URL}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:25:04.526" level="INFO">${BASE_URL} = o3fs://88772-link1-o3fs.fstest1.om//</msg>
<status status="PASS" starttime="20230309 17:25:04.524" endtime="20230309 17:25:04.526"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${DEEP_URL}</arg>
<arg>${BASE_URL}${DEEP_DIR}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:25:04.528" level="INFO">${DEEP_URL} = o3fs://88772-link1-o3fs.fstest1.om//test/o3fs/dir</msg>
<status status="PASS" starttime="20230309 17:25:04.526" endtime="20230309 17:25:04.529"/>
</kw>
<status status="PASS" starttime="20230309 17:25:04.509" endtime="20230309 17:25:04.529"/>
</kw>
<kw name="Create volumes for FS test" library="setup">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOLUME} --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:25:04.539" level="INFO">Running command 'ozone sh volume create fstest1 --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:25:16.741" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:25:16.741" level="INFO">${output} = VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" starttime="20230309 17:25:04.532" endtime="20230309 17:25:16.741"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:25:16.742" level="INFO">VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" starttime="20230309 17:25:16.742" endtime="20230309 17:25:16.743"/>
</kw>
<status status="PASS" starttime="20230309 17:25:04.530" endtime="20230309 17:25:16.746"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOL2} --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:25:16.751" level="INFO">Running command 'ozone sh volume create fstest2 --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:25:28.479" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:25:28.479" level="INFO">${output} = VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" starttime="20230309 17:25:16.747" endtime="20230309 17:25:28.479"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:25:28.481" level="INFO">VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" starttime="20230309 17:25:28.480" endtime="20230309 17:25:28.481"/>
</kw>
<status status="PASS" starttime="20230309 17:25:16.746" endtime="20230309 17:25:28.482"/>
</kw>
<status status="PASS" starttime="20230309 17:25:04.530" endtime="20230309 17:25:28.482"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create ${BUCKET_TYPE}s for FS test</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create links for FS test" library="setup">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOLUME}-src --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:25:28.491" level="INFO">Running command 'ozone sh volume create fstest1-src --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:25:40.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:25:40.728" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:25:28.485" endtime="20230309 17:25:40.728"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:25:40.730" level="INFO"/>
<status status="PASS" starttime="20230309 17:25:40.729" endtime="20230309 17:25:40.730"/>
</kw>
<status status="PASS" starttime="20230309 17:25:28.484" endtime="20230309 17:25:40.731"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOL2}-src --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:25:40.736" level="INFO">Running command 'ozone sh volume create fstest2-src --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:25:52.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:25:52.705" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:25:40.732" endtime="20230309 17:25:52.705"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:25:52.706" level="INFO"/>
<status status="PASS" starttime="20230309 17:25:52.705" endtime="20230309 17:25:52.706"/>
</kw>
<status status="PASS" starttime="20230309 17:25:40.731" endtime="20230309 17:25:52.707"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOLUME}-src/${BUCKET}-src --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:25:52.716" level="INFO">Running command 'ozone sh bucket create fstest1-src/88772-link1-o3fs-src --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:26:05.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:26:05.173" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:25:52.711" endtime="20230309 17:26:05.173"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:26:05.175" level="INFO"/>
<status status="PASS" starttime="20230309 17:26:05.174" endtime="20230309 17:26:05.175"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:26:05.177" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:26:05.175" endtime="20230309 17:26:05.177"/>
</kw>
<status status="PASS" starttime="20230309 17:25:52.710" endtime="20230309 17:26:05.178"/>
</kw>
<msg timestamp="20230309 17:26:05.178" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:25:52.709" endtime="20230309 17:26:05.180"/>
</kw>
<status status="PASS" starttime="20230309 17:25:52.708" endtime="20230309 17:26:05.180"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOLUME}-src/${BUCKET2}-src --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:26:05.187" level="INFO">Running command 'ozone sh bucket create fstest1-src/88772-link2-o3fs-src --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:26:18.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:26:18.440" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:26:05.183" endtime="20230309 17:26:18.440"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:26:18.442" level="INFO"/>
<status status="PASS" starttime="20230309 17:26:18.441" endtime="20230309 17:26:18.442"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:26:18.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:26:18.442" endtime="20230309 17:26:18.443"/>
</kw>
<status status="PASS" starttime="20230309 17:26:05.182" endtime="20230309 17:26:18.444"/>
</kw>
<msg timestamp="20230309 17:26:18.444" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:26:05.182" endtime="20230309 17:26:18.445"/>
</kw>
<status status="PASS" starttime="20230309 17:26:05.181" endtime="20230309 17:26:18.446"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOL2}-src/${BUCKET_IN_VOL2}-src --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:26:18.452" level="INFO">Running command 'ozone sh bucket create fstest2-src/88772-link3-o3fs-src --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:26:31.157" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:26:31.157" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:26:18.448" endtime="20230309 17:26:31.157"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:26:31.162" level="INFO"/>
<status status="PASS" starttime="20230309 17:26:31.158" endtime="20230309 17:26:31.162"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:26:31.163" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:26:31.162" endtime="20230309 17:26:31.163"/>
</kw>
<status status="PASS" starttime="20230309 17:26:18.447" endtime="20230309 17:26:31.163"/>
</kw>
<msg timestamp="20230309 17:26:31.164" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:26:18.447" endtime="20230309 17:26:31.166"/>
</kw>
<status status="PASS" starttime="20230309 17:26:18.446" endtime="20230309 17:26:31.167"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${VOLUME}-src/${BUCKET}-src ${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:26:31.175" level="INFO">Running command 'ozone sh bucket link fstest1-src/88772-link1-o3fs-src fstest1/88772-link1-o3fs 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:26:45.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:26:45.725" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:26:31.170" endtime="20230309 17:26:45.725"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:26:45.727" level="INFO"/>
<status status="PASS" starttime="20230309 17:26:45.726" endtime="20230309 17:26:45.728"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:26:45.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:26:45.728" endtime="20230309 17:26:45.729"/>
</kw>
<status status="PASS" starttime="20230309 17:26:31.169" endtime="20230309 17:26:45.730"/>
</kw>
<msg timestamp="20230309 17:26:45.730" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:26:31.168" endtime="20230309 17:26:45.731"/>
</kw>
<status status="PASS" starttime="20230309 17:26:31.167" endtime="20230309 17:26:45.731"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${VOLUME}-src/${BUCKET2}-src ${VOLUME}/${BUCKET2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:26:45.739" level="INFO">Running command 'ozone sh bucket link fstest1-src/88772-link2-o3fs-src fstest1/88772-link2-o3fs 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:26:59.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:26:59.140" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:26:45.734" endtime="20230309 17:26:59.140"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:26:59.143" level="INFO"/>
<status status="PASS" starttime="20230309 17:26:59.142" endtime="20230309 17:26:59.143"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:26:59.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:26:59.143" endtime="20230309 17:26:59.144"/>
</kw>
<status status="PASS" starttime="20230309 17:26:45.734" endtime="20230309 17:26:59.145"/>
</kw>
<msg timestamp="20230309 17:26:59.145" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:26:45.733" endtime="20230309 17:26:59.146"/>
</kw>
<status status="PASS" starttime="20230309 17:26:45.732" endtime="20230309 17:26:59.146"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${VOL2}-src/${BUCKET_IN_VOL2}-src ${VOL2}/${BUCKET_IN_VOL2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:26:59.154" level="INFO">Running command 'ozone sh bucket link fstest2-src/88772-link3-o3fs-src fstest2/88772-link3-o3fs 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:27:12.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:27:12.176" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:26:59.150" endtime="20230309 17:27:12.176"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:27:12.184" level="INFO"/>
<status status="PASS" starttime="20230309 17:27:12.182" endtime="20230309 17:27:12.184"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:27:12.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:27:12.184" endtime="20230309 17:27:12.185"/>
</kw>
<status status="PASS" starttime="20230309 17:26:59.149" endtime="20230309 17:27:12.186"/>
</kw>
<msg timestamp="20230309 17:27:12.186" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:26:59.148" endtime="20230309 17:27:12.187"/>
</kw>
<status status="PASS" starttime="20230309 17:26:59.146" endtime="20230309 17:27:12.190"/>
</kw>
<status status="PASS" starttime="20230309 17:25:28.483" endtime="20230309 17:27:12.190"/>
</kw>
<status status="PASS" starttime="20230309 17:25:28.482" endtime="20230309 17:27:12.191"/>
</kw>
<kw name="Sanity check for FS test" library="setup">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:27:12.203" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:27:26.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:27:26.005" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "69711-source",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 3,
  "creationTime" : "2023-03-...</msg>
<status status="PASS" starttime="20230309 17:27:12.198" endtime="20230309 17:27:26.005"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:27:26.006" level="INFO">[ {
  "metadata" : { },
  "name" : "69711-source",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 3,
  "creationTime" : "2023-03-09T16:36:14.750Z",
  "modificationTime" : "2023-03-09T16:37:15.037Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "testuser2/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "69711-target",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 8,
  "creationTime" : "2023-03-09T16:36:20.747Z",
  "modificationTime" : "2023-03-09T16:37:08.238Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "testuser2/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "97126-acls",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-03-09T16:55:08.957Z",
  "modificationTime" : "2023-03-09T16:55:50.963Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "superuser1",
    "aclScope" : "DEFAULT",
    "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "GROUP",
    "name" : "superuser1",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "GROUP",
    "name" : "superuser1",
    "aclScope" : "DEFAULT",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "fstest1",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 4,
  "creationTime" : "2023-03-09T17:14:30.416Z",
  "modificationTime" : "2023-03-09T17:14:30.416Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "fstest1-src",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2023-03-09T17:25:40.196Z",
  "modificationTime" : "2023-03-09T17:25:40.196Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "fstest2",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2023-03-09T17:14:36.909Z",
  "modificationTime" : "2023-03-09T17:14:36.909Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "fstest2-src",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-03-09T17:25:52.232Z",
  "modificationTime" : "2023-03-09T17:25:52.232Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "fstest296",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-03-09T17:06:37.241Z",
  "modificationTime" : "2023-03-09T17:06:37.241Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "fstest396",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-03-09T17:07:08.573Z",
  "modificationTime" : "2023-03-09T17:10:37.537Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "superuser1",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "GROUP",
    "name" : "superuser1",
    "aclScope" : "DEFAULT",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "testuser2/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "LIST", "READ_ACL", "WRITE_ACL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "fstest435",
  "admin" : "testuser",
  "owner" : "testuser2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2023-03-09T17:05:46.607Z",
  "modificationTime" : "2023-03-09T17:05:46.607Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser2",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser2",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "fstest96",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2023-03-09T17:06:30.120Z",
  "modificationTime" : "2023-03-09T17:06:30.120Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "glmigqjv",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-03-09T17:16:27.753Z",
  "modificationTime" : "2023-03-09T17:16:27.753Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "om",
  "owner" : "om",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2023-03-09T16:34:50.615Z",
  "modificationTime" : "2023-03-09T16:34:50.615Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "om",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "om",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol-emwkn",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-03-09T17:04:52.822Z",
  "modificationTime" : "2023-03-09T17:04:52.822Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-03-09T16:35:35.296Z",
  "modificationTime" : "2023-03-09T16:35:35.296Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
} ]</msg>
<status status="PASS" starttime="20230309 17:27:26.005" endtime="20230309 17:27:26.007"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:27:26.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:27:26.007" endtime="20230309 17:27:26.008"/>
</kw>
<status status="PASS" starttime="20230309 17:27:12.195" endtime="20230309 17:27:26.009"/>
</kw>
<msg timestamp="20230309 17:27:26.009" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:27:12.195" endtime="20230309 17:27:26.010"/>
</kw>
<msg timestamp="20230309 17:27:26.010" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "69711-source",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 3,
  "creationTime" : "2023-03-...</msg>
<status status="PASS" starttime="20230309 17:27:12.193" endtime="20230309 17:27:26.010"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${VOLUME}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:27:26.011" endtime="20230309 17:27:26.011"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${VOL2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:27:26.012" endtime="20230309 17:27:26.012"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>"admin" : "(hadoop|testuser)"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230309 17:27:26.012" endtime="20230309 17:27:26.013"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:27:26.020" level="INFO">Running command 'ozone sh bucket list fstest1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:27:40.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:27:40.813" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "25699-bucket1-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 315702,
  "usedNamespace" : 14,
  "creationTime" :...</msg>
<status status="PASS" starttime="20230309 17:27:26.016" endtime="20230309 17:27:40.813"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:27:40.815" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "25699-bucket1-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 315702,
  "usedNamespace" : 14,
  "creationTime" : "2023-03-09T17:14:43.141Z",
  "modificationTime" : "2023-03-09T17:14:43.141Z",
  "quotaInBytes" : 1099511627776,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "testuser",
  "link" : false
}, {
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "25699-bucket2-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 2,
  "creationTime" : "2023-03-09T17:14:49.648Z",
  "modificationTime" : "2023-03-09T17:23:20.722Z",
  "quotaInBytes" : 1099511627776,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "testuser",
  "link" : false
}, {
  "volumeName" : "fstest1",
  "bucketName" : "88772-link1-o3fs",
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "88772-link1-o3fs-src",
  "creationTime" : "2023-03-09T17:26:45.213Z",
  "modificationTime" : "2023-03-09T17:26:45.213Z",
  "owner" : "testuser"
}, {
  "volumeName" : "fstest1",
  "bucketName" : "88772-link2-o3fs",
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "88772-link2-o3fs-src",
  "creationTime" : "2023-03-09T17:26:58.923Z",
  "modificationTime" : "2023-03-09T17:26:58.923Z",
  "owner" : "testuser"
} ]</msg>
<status status="PASS" starttime="20230309 17:27:40.814" endtime="20230309 17:27:40.815"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:27:40.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:27:40.815" endtime="20230309 17:27:40.817"/>
</kw>
<status status="PASS" starttime="20230309 17:27:26.016" endtime="20230309 17:27:40.817"/>
</kw>
<msg timestamp="20230309 17:27:40.818" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:27:26.015" endtime="20230309 17:27:40.818"/>
</kw>
<msg timestamp="20230309 17:27:40.819" level="INFO">${result} = [ {
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "25699-bucket1-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 315702,
  "usedNamespace" : 14,
  "creationTime" :...</msg>
<status status="PASS" starttime="20230309 17:27:26.014" endtime="20230309 17:27:40.819"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:27:40.819" endtime="20230309 17:27:40.820"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:27:40.820" endtime="20230309 17:27:40.821"/>
</kw>
<status status="PASS" starttime="20230309 17:27:12.191" endtime="20230309 17:27:40.821"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Completed setup for ${SCHEME} tests with ${BUCKET_TYPE}s in ${VOLUME}/${BUCKET} using FS base URL: ${BASE_URL}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:27:40.822" level="INFO">Completed setup for o3fs tests with links in fstest1/88772-link1-o3fs using FS base URL: o3fs://88772-link1-o3fs.fstest1.om//</msg>
<status status="PASS" starttime="20230309 17:27:40.822" endtime="20230309 17:27:40.822"/>
</kw>
<status status="PASS" starttime="20230309 17:25:04.508" endtime="20230309 17:27:40.823"/>
</kw>
<test id="s1-s4-t1" name="List root" line="26">
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 17:27:40.838" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230309 17:27:40.837" endtime="20230309 17:27:40.838"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 17:27:40.839" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20230309 17:27:40.838" endtime="20230309 17:27:40.839"/>
</kw>
<status status="PASS" starttime="20230309 17:27:40.836" endtime="20230309 17:27:40.839"/>
</kw>
<msg timestamp="20230309 17:27:40.840" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20230309 17:27:40.835" endtime="20230309 17:27:40.840"/>
</kw>
<status status="PASS" starttime="20230309 17:27:40.834" endtime="20230309 17:27:40.840"/>
</kw>
<msg timestamp="20230309 17:27:40.840" level="INFO">${url} = o3fs://88772-link1-o3fs.fstest1.om/</msg>
<status status="PASS" starttime="20230309 17:27:40.832" endtime="20230309 17:27:40.840"/>
</kw>
<msg timestamp="20230309 17:27:40.841" level="INFO">${root} = o3fs://88772-link1-o3fs.fstest1.om/</msg>
<status status="PASS" starttime="20230309 17:27:40.827" endtime="20230309 17:27:40.841"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -ls ${root}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:27:40.847" level="INFO">Running command 'ozone fs -ls o3fs://88772-link1-o3fs.fstest1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:27:52.862" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:27:52.863" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:27:40.843" endtime="20230309 17:27:52.863"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:27:52.864" level="INFO"/>
<status status="PASS" starttime="20230309 17:27:52.863" endtime="20230309 17:27:52.864"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:27:52.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:27:52.865" endtime="20230309 17:27:52.866"/>
</kw>
<status status="PASS" starttime="20230309 17:27:40.843" endtime="20230309 17:27:52.867"/>
</kw>
<msg timestamp="20230309 17:27:52.867" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:27:40.842" endtime="20230309 17:27:52.868"/>
</kw>
<status status="PASS" starttime="20230309 17:27:40.841" endtime="20230309 17:27:52.868"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:27:40.824" endtime="20230309 17:27:52.869"/>
</test>
<test id="s1-s4-t2" name="List non-existent volume" line="30">
<kw name="Format FS URL" library="fs">
<var>${url}</var>
<arg>${SCHEME}</arg>
<arg>no-such-volume</arg>
<arg>${BUCKET}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 17:27:52.885" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230309 17:27:52.884" endtime="20230309 17:27:52.885"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 17:27:52.886" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20230309 17:27:52.885" endtime="20230309 17:27:52.886"/>
</kw>
<status status="PASS" starttime="20230309 17:27:52.883" endtime="20230309 17:27:52.887"/>
</kw>
<msg timestamp="20230309 17:27:52.887" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20230309 17:27:52.881" endtime="20230309 17:27:52.887"/>
</kw>
<status status="PASS" starttime="20230309 17:27:52.880" endtime="20230309 17:27:52.888"/>
</kw>
<msg timestamp="20230309 17:27:52.888" level="INFO">${url} = o3fs://88772-link1-o3fs.no-such-volume.om/</msg>
<status status="PASS" starttime="20230309 17:27:52.878" endtime="20230309 17:27:52.888"/>
</kw>
<msg timestamp="20230309 17:27:52.888" level="INFO">${url} = o3fs://88772-link1-o3fs.no-such-volume.om/</msg>
<status status="PASS" starttime="20230309 17:27:52.874" endtime="20230309 17:27:52.888"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${url}</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:27:52.894" level="INFO">Running command 'ozone fs -ls o3fs://88772-link1-o3fs.no-such-volume.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:28:03.987" level="INFO">${rc} = 1</msg>
<msg timestamp="20230309 17:28:03.987" level="INFO">${output} = ls: Volume no-such-volume is not found</msg>
<status status="PASS" starttime="20230309 17:27:52.890" endtime="20230309 17:28:03.987"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:28:03.989" level="INFO">ls: Volume no-such-volume is not found</msg>
<status status="PASS" starttime="20230309 17:28:03.988" endtime="20230309 17:28:03.989"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:28:03.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:28:03.990" endtime="20230309 17:28:03.991"/>
</kw>
<msg timestamp="20230309 17:28:03.992" level="INFO">${result} = ls: Volume no-such-volume is not found</msg>
<status status="PASS" starttime="20230309 17:27:52.888" endtime="20230309 17:28:03.992"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(Check access operation failed)|(Volume no-such-volume is not found)|(No such file or directory)</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230309 17:28:03.993" endtime="20230309 17:28:03.995"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:27:52.873" endtime="20230309 17:28:03.995"/>
</test>
<test id="s1-s4-t3" name="List non-existent bucket" line="35">
<kw name="Format FS URL" library="fs">
<var>${url}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>no-such-bucket</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 17:28:04.010" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230309 17:28:04.009" endtime="20230309 17:28:04.010"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 17:28:04.011" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20230309 17:28:04.010" endtime="20230309 17:28:04.011"/>
</kw>
<status status="PASS" starttime="20230309 17:28:04.006" endtime="20230309 17:28:04.012"/>
</kw>
<msg timestamp="20230309 17:28:04.012" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20230309 17:28:04.004" endtime="20230309 17:28:04.012"/>
</kw>
<status status="PASS" starttime="20230309 17:28:04.003" endtime="20230309 17:28:04.012"/>
</kw>
<msg timestamp="20230309 17:28:04.013" level="INFO">${url} = o3fs://no-such-bucket.fstest1.om/</msg>
<status status="PASS" starttime="20230309 17:28:04.001" endtime="20230309 17:28:04.013"/>
</kw>
<msg timestamp="20230309 17:28:04.013" level="INFO">${url} = o3fs://no-such-bucket.fstest1.om/</msg>
<status status="PASS" starttime="20230309 17:28:03.998" endtime="20230309 17:28:04.013"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${url}</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:28:04.018" level="INFO">Running command 'ozone fs -ls o3fs://no-such-bucket.fstest1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:28:15.503" level="INFO">${rc} = 1</msg>
<msg timestamp="20230309 17:28:15.503" level="INFO">${output} = ls: Bucket not found</msg>
<status status="PASS" starttime="20230309 17:28:04.014" endtime="20230309 17:28:15.503"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:28:15.505" level="INFO">ls: Bucket not found</msg>
<status status="PASS" starttime="20230309 17:28:15.504" endtime="20230309 17:28:15.505"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:28:15.507" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:28:15.506" endtime="20230309 17:28:15.508"/>
</kw>
<msg timestamp="20230309 17:28:15.508" level="INFO">${result} = ls: Bucket not found</msg>
<status status="PASS" starttime="20230309 17:28:04.013" endtime="20230309 17:28:15.508"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(Check access operation failed)|(Bucket not found)|(No such file or directory)</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230309 17:28:15.509" endtime="20230309 17:28:15.510"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:28:03.997" endtime="20230309 17:28:15.511"/>
</test>
<test id="s1-s4-t4" name="Create dir with parents" line="40">
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${DEEP_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:28:15.522" level="INFO">Running command 'ozone fs -mkdir -p o3fs://88772-link1-o3fs.fstest1.om//test/o3fs/dir 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:28:27.233" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:28:27.233" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:28:15.517" endtime="20230309 17:28:27.233"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:28:27.235" level="INFO"/>
<status status="PASS" starttime="20230309 17:28:27.234" endtime="20230309 17:28:27.235"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:28:27.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:28:27.236" endtime="20230309 17:28:27.236"/>
</kw>
<status status="PASS" starttime="20230309 17:28:15.516" endtime="20230309 17:28:27.237"/>
</kw>
<msg timestamp="20230309 17:28:27.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:28:15.515" endtime="20230309 17:28:27.238"/>
</kw>
<status status="PASS" starttime="20230309 17:28:15.514" endtime="20230309 17:28:27.238"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:28:27.245" level="INFO">Running command 'ozone sh key list fstest1/88772-link1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:28:41.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:28:41.378" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/</msg>
<status status="PASS" starttime="20230309 17:28:27.241" endtime="20230309 17:28:41.378"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:28:41.380" level="INFO">test/
test/o3fs/
test/o3fs/dir/</msg>
<status status="PASS" starttime="20230309 17:28:41.379" endtime="20230309 17:28:41.380"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:28:41.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:28:41.382" endtime="20230309 17:28:41.383"/>
</kw>
<status status="PASS" starttime="20230309 17:28:27.240" endtime="20230309 17:28:41.383"/>
</kw>
<msg timestamp="20230309 17:28:41.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:28:27.240" endtime="20230309 17:28:41.384"/>
</kw>
<msg timestamp="20230309 17:28:41.384" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/</msg>
<status status="PASS" starttime="20230309 17:28:27.239" endtime="20230309 17:28:41.384"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:28:41.385" endtime="20230309 17:28:41.386"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:28:15.512" endtime="20230309 17:28:41.386"/>
</test>
<test id="s1-s4-t5" name="Copy from local" line="45">
<kw name="Execute" library="os">
<arg>ozone fs -copyFromLocal NOTICE.txt ${DEEP_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:28:41.399" level="INFO">Running command 'ozone fs -copyFromLocal NOTICE.txt o3fs://88772-link1-o3fs.fstest1.om//test/o3fs/dir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:28:58.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:28:58.390" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:28:41.394" endtime="20230309 17:28:58.390"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:28:58.396" level="INFO"/>
<status status="PASS" starttime="20230309 17:28:58.391" endtime="20230309 17:28:58.396"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:28:58.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:28:58.396" endtime="20230309 17:28:58.401"/>
</kw>
<status status="PASS" starttime="20230309 17:28:41.393" endtime="20230309 17:28:58.404"/>
</kw>
<msg timestamp="20230309 17:28:58.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:28:41.393" endtime="20230309 17:28:58.406"/>
</kw>
<status status="PASS" starttime="20230309 17:28:41.391" endtime="20230309 17:28:58.406"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:28:58.421" level="INFO">Running command 'ozone sh key list fstest1/88772-link1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:29:13.163" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:29:13.163" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20230309 17:28:58.412" endtime="20230309 17:29:13.163"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:29:13.166" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20230309 17:29:13.165" endtime="20230309 17:29:13.167"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:29:13.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:29:13.167" endtime="20230309 17:29:13.168"/>
</kw>
<status status="PASS" starttime="20230309 17:28:58.411" endtime="20230309 17:29:13.169"/>
</kw>
<msg timestamp="20230309 17:29:13.169" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:28:58.408" endtime="20230309 17:29:13.171"/>
</kw>
<msg timestamp="20230309 17:29:13.172" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20230309 17:28:58.407" endtime="20230309 17:29:13.172"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:29:13.172" endtime="20230309 17:29:13.173"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${VOLUME}/${BUCKET}/${DEEP_DIR}/NOTICE.txt | jq -r '.replicationConfig.replicationFactor'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:29:13.180" level="INFO">Running command 'ozone sh key info fstest1/88772-link1-o3fs/test/o3fs/dir/NOTICE.txt | jq -r '.replicationConfig.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:29:27.028" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:29:27.029" level="INFO">${output} = THREE</msg>
<status status="PASS" starttime="20230309 17:29:13.176" endtime="20230309 17:29:27.029"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:29:27.030" level="INFO">THREE</msg>
<status status="PASS" starttime="20230309 17:29:27.029" endtime="20230309 17:29:27.031"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:29:27.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:29:27.031" endtime="20230309 17:29:27.032"/>
</kw>
<status status="PASS" starttime="20230309 17:29:13.175" endtime="20230309 17:29:27.034"/>
</kw>
<msg timestamp="20230309 17:29:27.034" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:29:13.174" endtime="20230309 17:29:27.034"/>
</kw>
<msg timestamp="20230309 17:29:27.035" level="INFO">${result} = THREE</msg>
<status status="PASS" starttime="20230309 17:29:13.173" endtime="20230309 17:29:27.035"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>THREE</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 17:29:27.035" endtime="20230309 17:29:27.036"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:28:41.389" endtime="20230309 17:29:27.037"/>
</test>
<test id="s1-s4-t6" name="Put" line="52">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -put NOTICE.txt ${DEEP_URL}/PUTFILE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:29:27.059" level="INFO">Running command 'ozone fs -put NOTICE.txt o3fs://88772-link1-o3fs.fstest1.om//test/o3fs/dir/PUTFILE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:29:44.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:29:44.397" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:29:27.052" endtime="20230309 17:29:44.398"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:29:44.401" level="INFO"/>
<status status="PASS" starttime="20230309 17:29:44.398" endtime="20230309 17:29:44.401"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:29:44.402" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:29:44.401" endtime="20230309 17:29:44.402"/>
</kw>
<status status="PASS" starttime="20230309 17:29:27.047" endtime="20230309 17:29:44.403"/>
</kw>
<msg timestamp="20230309 17:29:44.403" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:29:27.047" endtime="20230309 17:29:44.403"/>
</kw>
<msg timestamp="20230309 17:29:44.404" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 17:29:27.046" endtime="20230309 17:29:44.404"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230309 17:29:44.405" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230309 17:29:44.404" endtime="20230309 17:29:44.405"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:29:44.411" level="INFO">Running command 'ozone sh key list fstest1/88772-link1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:29:58.455" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:29:58.455" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20230309 17:29:44.408" endtime="20230309 17:29:58.455"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:29:58.457" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20230309 17:29:58.456" endtime="20230309 17:29:58.457"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:29:58.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:29:58.458" endtime="20230309 17:29:58.459"/>
</kw>
<status status="PASS" starttime="20230309 17:29:44.407" endtime="20230309 17:29:58.459"/>
</kw>
<msg timestamp="20230309 17:29:58.459" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:29:44.406" endtime="20230309 17:29:58.460"/>
</kw>
<msg timestamp="20230309 17:29:58.461" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20230309 17:29:44.405" endtime="20230309 17:29:58.461"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PUTFILE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:29:58.461" endtime="20230309 17:29:58.463"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:29:27.038" endtime="20230309 17:29:58.463"/>
</test>
<test id="s1-s4-t7" name="Check disk usage after create a file which uses RATIS replication type" line="59">
<kw name="Generate Random String" library="String">
<var>${vol}</var>
<arg>8</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:29:58.468" level="INFO">${vol} = odjxlnud</msg>
<status status="PASS" starttime="20230309 17:29:58.467" endtime="20230309 17:29:58.468"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${bucket}</var>
<arg>8</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:29:58.469" level="INFO">${bucket} = dljvldia</msg>
<status status="PASS" starttime="20230309 17:29:58.468" endtime="20230309 17:29:58.469"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${vol}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:29:58.475" level="INFO">Running command 'ozone sh volume create /odjxlnud 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:30:11.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:30:11.204" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:29:58.471" endtime="20230309 17:30:11.204"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:30:11.206" level="INFO"/>
<status status="PASS" starttime="20230309 17:30:11.205" endtime="20230309 17:30:11.206"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:30:11.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:30:11.207" endtime="20230309 17:30:11.208"/>
</kw>
<status status="PASS" starttime="20230309 17:29:58.471" endtime="20230309 17:30:11.208"/>
</kw>
<msg timestamp="20230309 17:30:11.210" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:29:58.470" endtime="20230309 17:30:11.210"/>
</kw>
<status status="PASS" starttime="20230309 17:29:58.469" endtime="20230309 17:30:11.212"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${vol}/${bucket} --type RATIS --replication 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:30:11.219" level="INFO">Running command 'ozone sh bucket create /odjxlnud/dljvldia --type RATIS --replication 3 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:30:22.953" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:30:22.953" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:30:11.215" endtime="20230309 17:30:22.953"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:30:22.955" level="INFO"/>
<status status="PASS" starttime="20230309 17:30:22.953" endtime="20230309 17:30:22.955"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:30:22.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:30:22.955" endtime="20230309 17:30:22.956"/>
</kw>
<status status="PASS" starttime="20230309 17:30:11.214" endtime="20230309 17:30:22.956"/>
</kw>
<msg timestamp="20230309 17:30:22.956" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:30:11.213" endtime="20230309 17:30:22.958"/>
</kw>
<status status="PASS" starttime="20230309 17:30:11.212" endtime="20230309 17:30:22.960"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -put NOTICE.txt /${vol}/${bucket}/PUTFILE1.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:30:22.980" level="INFO">Running command 'ozone fs -put NOTICE.txt /odjxlnud/dljvldia/PUTFILE1.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:30:39.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:30:39.169" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:30:22.971" endtime="20230309 17:30:39.170"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:30:39.171" level="INFO"/>
<status status="PASS" starttime="20230309 17:30:39.170" endtime="20230309 17:30:39.171"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:30:39.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:30:39.171" endtime="20230309 17:30:39.172"/>
</kw>
<status status="PASS" starttime="20230309 17:30:22.965" endtime="20230309 17:30:39.172"/>
</kw>
<msg timestamp="20230309 17:30:39.172" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:30:22.962" endtime="20230309 17:30:39.173"/>
</kw>
<status status="PASS" starttime="20230309 17:30:22.960" endtime="20230309 17:30:39.175"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedFileLength}</var>
<arg>stat -c %s NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:30:39.186" level="INFO">Running command 'stat -c %s NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:30:39.191" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:30:39.191" level="INFO">${output} = 17539</msg>
<status status="PASS" starttime="20230309 17:30:39.180" endtime="20230309 17:30:39.191"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:30:39.193" level="INFO">17539</msg>
<status status="PASS" starttime="20230309 17:30:39.191" endtime="20230309 17:30:39.193"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:30:39.193" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:30:39.193" endtime="20230309 17:30:39.194"/>
</kw>
<status status="PASS" starttime="20230309 17:30:39.179" endtime="20230309 17:30:39.195"/>
</kw>
<msg timestamp="20230309 17:30:39.195" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:30:39.179" endtime="20230309 17:30:39.195"/>
</kw>
<msg timestamp="20230309 17:30:39.196" level="INFO">${expectedFileLength} = 17539</msg>
<status status="PASS" starttime="20230309 17:30:39.175" endtime="20230309 17:30:39.196"/>
</kw>
<kw name="Get Disk Usage of File with RATIS Replication">
<var>${expectedDiskUsage}</var>
<arg>${expectedFileLength}</arg>
<arg>3</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${expectedDiskUsage}</var>
<arg>${fileLength} * ${replicationFactor}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230309 17:30:39.198" level="INFO">${expectedDiskUsage} = 52617</msg>
<status status="PASS" starttime="20230309 17:30:39.197" endtime="20230309 17:30:39.199"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${expectedDiskUsage}</var>
<arg>${expectedDiskUsage}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230309 17:30:39.199" level="INFO">${expectedDiskUsage} = 52617</msg>
<status status="PASS" starttime="20230309 17:30:39.199" endtime="20230309 17:30:39.199"/>
</kw>
<msg timestamp="20230309 17:30:39.200" level="INFO">${expectedDiskUsage} = 52617</msg>
<status status="PASS" starttime="20230309 17:30:39.196" endtime="20230309 17:30:39.200"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -du /${vol}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:30:39.206" level="INFO">Running command 'ozone fs -du /odjxlnud/dljvldia 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:30:50.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:30:50.821" level="INFO">${output} = 17539  52617  /odjxlnud/dljvldia/PUTFILE1.txt</msg>
<status status="PASS" starttime="20230309 17:30:39.203" endtime="20230309 17:30:50.821"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:30:50.823" level="INFO">17539  52617  /odjxlnud/dljvldia/PUTFILE1.txt</msg>
<status status="PASS" starttime="20230309 17:30:50.822" endtime="20230309 17:30:50.824"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:30:50.825" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:30:50.824" endtime="20230309 17:30:50.825"/>
</kw>
<status status="PASS" starttime="20230309 17:30:39.202" endtime="20230309 17:30:50.825"/>
</kw>
<msg timestamp="20230309 17:30:50.826" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:30:39.202" endtime="20230309 17:30:50.827"/>
</kw>
<msg timestamp="20230309 17:30:50.828" level="INFO">${result} = 17539  52617  /odjxlnud/dljvldia/PUTFILE1.txt</msg>
<status status="PASS" starttime="20230309 17:30:39.201" endtime="20230309 17:30:50.828"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PUTFILE1.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:30:50.828" endtime="20230309 17:30:50.829"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expectedFileLength}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:30:50.829" endtime="20230309 17:30:50.830"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expectedDiskUsage}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:30:50.830" endtime="20230309 17:30:50.831"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:29:58.465" endtime="20230309 17:30:50.831"/>
</test>
<test id="s1-s4-t8" name="Put with Streaming" line="73">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -D ozone.fs.datastream.enabled=true -put NOTICE.txt ${DEEP_URL}/STREAMING.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:30:50.851" level="INFO">Running command 'ozone fs -D ozone.fs.datastream.enabled=true -put NOTICE.txt o3fs://88772-link1-o3fs.fstest1.om//test/o3fs/dir/STREAMING.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:31:25.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:31:25.409" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:30:50.847" endtime="20230309 17:31:25.410"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:31:25.411" level="INFO"/>
<status status="PASS" starttime="20230309 17:31:25.410" endtime="20230309 17:31:25.411"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:31:25.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:31:25.411" endtime="20230309 17:31:25.412"/>
</kw>
<status status="PASS" starttime="20230309 17:30:50.847" endtime="20230309 17:31:25.412"/>
</kw>
<msg timestamp="20230309 17:31:25.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:30:50.846" endtime="20230309 17:31:25.413"/>
</kw>
<msg timestamp="20230309 17:31:25.413" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 17:30:50.842" endtime="20230309 17:31:25.413"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230309 17:31:25.414" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230309 17:31:25.414" endtime="20230309 17:31:25.414"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:31:25.426" level="INFO">Running command 'ozone sh key list fstest1/88772-link1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:31:40.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:31:40.171" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20230309 17:31:25.423" endtime="20230309 17:31:40.171"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:31:40.173" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20230309 17:31:40.172" endtime="20230309 17:31:40.173"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:31:40.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:31:40.173" endtime="20230309 17:31:40.174"/>
</kw>
<status status="PASS" starttime="20230309 17:31:25.421" endtime="20230309 17:31:40.174"/>
</kw>
<msg timestamp="20230309 17:31:40.174" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:31:25.420" endtime="20230309 17:31:40.175"/>
</kw>
<msg timestamp="20230309 17:31:40.175" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20230309 17:31:25.415" endtime="20230309 17:31:40.175"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STREAMING.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:31:40.176" endtime="20230309 17:31:40.176"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:30:50.840" endtime="20230309 17:31:40.176"/>
</test>
<test id="s1-s4-t9" name="List" line="80">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${DEEP_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:31:40.184" level="INFO">Running command 'ozone fs -ls o3fs://88772-link1-o3fs.fstest1.om//test/o3fs/dir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:31:49.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:31:49.725" level="INFO">${output} = Found 3 items
-rw-rw-rw-   3 testuser testuser      17539 2023-03-09 17:28 o3fs://88772-link1-o3fs.fstest1.om/test/o3fs/dir/NOTICE.txt
-rw-rw-rw-   3 testuser testuser      17539 2023-03-09 17:29 o3fs...</msg>
<status status="PASS" starttime="20230309 17:31:40.181" endtime="20230309 17:31:49.725"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:31:49.729" level="INFO">Found 3 items
-rw-rw-rw-   3 testuser testuser      17539 2023-03-09 17:28 o3fs://88772-link1-o3fs.fstest1.om/test/o3fs/dir/NOTICE.txt
-rw-rw-rw-   3 testuser testuser      17539 2023-03-09 17:29 o3fs://88772-link1-o3fs.fstest1.om/test/o3fs/dir/PUTFILE.txt
-rw-rw-rw-   3 testuser testuser      17539 2023-03-09 17:31 o3fs://88772-link1-o3fs.fstest1.om/test/o3fs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20230309 17:31:49.727" endtime="20230309 17:31:49.729"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:31:49.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:31:49.729" endtime="20230309 17:31:49.730"/>
</kw>
<status status="PASS" starttime="20230309 17:31:40.180" endtime="20230309 17:31:49.731"/>
</kw>
<msg timestamp="20230309 17:31:49.731" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:31:40.180" endtime="20230309 17:31:49.732"/>
</kw>
<msg timestamp="20230309 17:31:49.734" level="INFO">${result} = Found 3 items
-rw-rw-rw-   3 testuser testuser      17539 2023-03-09 17:28 o3fs://88772-link1-o3fs.fstest1.om/test/o3fs/dir/NOTICE.txt
-rw-rw-rw-   3 testuser testuser      17539 2023-03-09 17:29 o3fs...</msg>
<status status="PASS" starttime="20230309 17:31:40.178" endtime="20230309 17:31:49.734"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:31:49.734" endtime="20230309 17:31:49.735"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PUTFILE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:31:49.735" endtime="20230309 17:31:49.736"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STREAMING.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:31:49.736" endtime="20230309 17:31:49.736"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:31:40.178" endtime="20230309 17:31:49.737"/>
</test>
<test id="s1-s4-t10" name="Move" line="86">
<kw name="Execute" library="os">
<arg>ozone fs -mv ${DEEP_URL}/NOTICE.txt ${DEEP_URL}/MOVED.TXT</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:31:49.747" level="INFO">Running command 'ozone fs -mv o3fs://88772-link1-o3fs.fstest1.om//test/o3fs/dir/NOTICE.txt o3fs://88772-link1-o3fs.fstest1.om//test/o3fs/dir/MOVED.TXT 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:32:00.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:32:00.731" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:31:49.744" endtime="20230309 17:32:00.732"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:32:00.736" level="INFO"/>
<status status="PASS" starttime="20230309 17:32:00.734" endtime="20230309 17:32:00.736"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:32:00.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:32:00.736" endtime="20230309 17:32:00.738"/>
</kw>
<status status="PASS" starttime="20230309 17:31:49.743" endtime="20230309 17:32:00.740"/>
</kw>
<msg timestamp="20230309 17:32:00.740" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:31:49.743" endtime="20230309 17:32:00.741"/>
</kw>
<status status="PASS" starttime="20230309 17:31:49.741" endtime="20230309 17:32:00.743"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:32:00.757" level="INFO">Running command 'ozone sh key list fstest1/88772-link1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:32:15.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:32:15.473" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20230309 17:32:00.749" endtime="20230309 17:32:15.473"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:32:15.474" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20230309 17:32:15.473" endtime="20230309 17:32:15.475"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:32:15.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:32:15.475" endtime="20230309 17:32:15.476"/>
</kw>
<status status="PASS" starttime="20230309 17:32:00.746" endtime="20230309 17:32:15.476"/>
</kw>
<msg timestamp="20230309 17:32:15.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:32:00.745" endtime="20230309 17:32:15.477"/>
</kw>
<msg timestamp="20230309 17:32:15.477" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20230309 17:32:00.744" endtime="20230309 17:32:15.477"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>MOVED.TXT</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:32:15.478" endtime="20230309 17:32:15.479"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:32:15.480" endtime="20230309 17:32:15.480"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:31:49.739" endtime="20230309 17:32:15.482"/>
</test>
<test id="s1-s4-t11" name="Copy within FS" line="92">
<kw name="Execute" library="os" type="SETUP">
<arg>ozone fs -mkdir -p ${DEEP_URL}/subdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:32:15.492" level="INFO">Running command 'ozone fs -mkdir -p o3fs://88772-link1-o3fs.fstest1.om//test/o3fs/dir/subdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:32:26.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:32:26.730" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:32:15.489" endtime="20230309 17:32:26.730"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:32:26.732" level="INFO"/>
<status status="PASS" starttime="20230309 17:32:26.731" endtime="20230309 17:32:26.732"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:32:26.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:32:26.733" endtime="20230309 17:32:26.734"/>
</kw>
<status status="PASS" starttime="20230309 17:32:15.486" endtime="20230309 17:32:26.734"/>
</kw>
<msg timestamp="20230309 17:32:26.735" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:32:15.486" endtime="20230309 17:32:26.735"/>
</kw>
<status status="PASS" starttime="20230309 17:32:15.484" endtime="20230309 17:32:26.736"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${DEEP_URL}/MOVED.TXT ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:32:26.742" level="INFO">Running command 'ozone fs -cp o3fs://88772-link1-o3fs.fstest1.om//test/o3fs/dir/MOVED.TXT o3fs://88772-link1-o3fs.fstest1.om//test/o3fs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:32:43.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:32:43.549" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:32:26.739" endtime="20230309 17:32:43.549"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:32:43.551" level="INFO"/>
<status status="PASS" starttime="20230309 17:32:43.549" endtime="20230309 17:32:43.551"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:32:43.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:32:43.551" endtime="20230309 17:32:43.554"/>
</kw>
<status status="PASS" starttime="20230309 17:32:26.738" endtime="20230309 17:32:43.555"/>
</kw>
<msg timestamp="20230309 17:32:43.555" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:32:26.737" endtime="20230309 17:32:43.555"/>
</kw>
<status status="PASS" starttime="20230309 17:32:26.736" endtime="20230309 17:32:43.555"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:32:43.564" level="INFO">Running command 'ozone sh key list fstest1/88772-link1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:32:56.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:32:56.928" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt
test/o3fs/dir/subdir1/
test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20230309 17:32:43.559" endtime="20230309 17:32:56.928"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:32:56.931" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt
test/o3fs/dir/subdir1/
test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20230309 17:32:56.930" endtime="20230309 17:32:56.932"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:32:56.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:32:56.932" endtime="20230309 17:32:56.933"/>
</kw>
<status status="PASS" starttime="20230309 17:32:43.558" endtime="20230309 17:32:56.933"/>
</kw>
<msg timestamp="20230309 17:32:56.933" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:32:43.557" endtime="20230309 17:32:56.934"/>
</kw>
<msg timestamp="20230309 17:32:56.936" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt
test/o3fs/dir/subdir1/
test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20230309 17:32:43.556" endtime="20230309 17:32:56.936"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>subdir1/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:32:56.936" endtime="20230309 17:32:56.937"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${DEEP_URL}/subdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:32:56.946" level="INFO">Running command 'ozone fs -ls o3fs://88772-link1-o3fs.fstest1.om//test/o3fs/dir/subdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:33:07.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:33:07.258" level="INFO">${output} = Found 1 items
-rw-rw-rw-   3 testuser testuser      17539 2023-03-09 17:32 o3fs://88772-link1-o3fs.fstest1.om/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20230309 17:32:56.942" endtime="20230309 17:33:07.258"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:33:07.261" level="INFO">Found 1 items
-rw-rw-rw-   3 testuser testuser      17539 2023-03-09 17:32 o3fs://88772-link1-o3fs.fstest1.om/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20230309 17:33:07.259" endtime="20230309 17:33:07.262"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:33:07.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:33:07.262" endtime="20230309 17:33:07.264"/>
</kw>
<status status="PASS" starttime="20230309 17:32:56.941" endtime="20230309 17:33:07.265"/>
</kw>
<msg timestamp="20230309 17:33:07.265" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:32:56.940" endtime="20230309 17:33:07.266"/>
</kw>
<msg timestamp="20230309 17:33:07.266" level="INFO">${result} = Found 1 items
-rw-rw-rw-   3 testuser testuser      17539 2023-03-09 17:32 o3fs://88772-link1-o3fs.fstest1.om/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20230309 17:32:56.939" endtime="20230309 17:33:07.266"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:33:07.266" endtime="20230309 17:33:07.268"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:33:07.268" endtime="20230309 17:33:07.269"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:32:15.483" endtime="20230309 17:33:07.271"/>
</test>
<test id="s1-s4-t12" name="Cat file" line="102">
<kw name="Execute" library="os">
<arg>ozone fs -cat ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:33:07.282" level="INFO">Running command 'ozone fs -cat o3fs://88772-link1-o3fs.fstest1.om//test/o3fs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:33:22.834" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:33:22.835" level="INFO">${output} = Apache Ozone
Copyright 2022 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

Export Control Notice
----------------...</msg>
<status status="PASS" starttime="20230309 17:33:07.278" endtime="20230309 17:33:22.835"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:33:22.837" level="INFO">Apache Ozone
Copyright 2022 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

Export Control Notice
---------------------

This distribution includes cryptographic software.  The country in
which you currently reside may have restrictions on the import,
possession, use, and/or re-export to another country, of
encryption software.  BEFORE using any encryption software, please
check your country's laws, regulations and policies concerning the
import, possession, or use, and re-export of encryption software, to
see if this is permitted.  See &lt;http://www.wassenaar.org/&gt; for more
information.

The U.S. Government Department of Commerce, Bureau of Industry and
Security (BIS), has classified this software as Export Commodity
Control Number (ECCN) 5D002.C.1, which includes information security
software using or performing cryptographic functions with asymmetric
algorithms.  The form and manner of this Apache Software Foundation
distribution makes it eligible for export under the License Exception
ENC Technology Software Unrestricted (TSU) exception (see the BIS
Export Administration Regulations, Section 740.13) for both object
code and source code.

This software uses the SSL libraries from the Jetty project written
by mortbay.org abd BouncyCastle Java cryptography APIs written by the
 Legion of the Bouncy Castle Inc.

**********************
THIRD PARTY COMPONENTS
**********************
This software includes third party software subject to the following copyrights:

io.netty:netty-all
====================


                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * https://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * NOTICE:
    * license/NOTICE.harmony.txt
  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/y-256/libdivsufsort

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * https://github.com/google/protobuf

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * https://github.com/google/snappy

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jboss-remoting/jboss-marshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/google/caliper

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Cory Benfield. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hyper-hpack.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/python-hyper/hpack/

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Tatsuhiro Tsujikawa. It can be obtained at:

  * LICENSE:
    * license/LICENSE.nghttp2-hpack.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/nghttp2/nghttp2/

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/


This product contains the Maven wrapper scripts from 'Maven Wrapper', that provides an easy way to ensure a user has everything necessary to run the Maven build.

  * LICENSE:
    * license/LICENSE.mvn-wrapper.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/takari/maven-wrapper


io.grpc:grpc-core
====================

Copyright 2014 The gRPC Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

-----------------------------------------------------------------------

This product contains a modified portion of 'OkHttp', an open source
HTTP &amp; SPDY client for Android and Java applications, which can be obtained
at:

  * LICENSE:
    * okhttp/third_party/okhttp/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/square/okhttp
  * LOCATION_IN_GRPC:
    * okhttp/third_party/okhttp

This product contains a modified portion of 'Envoy', an open source
cloud-native high-performance edge/middle/service proxy, which can be
obtained at:

  * LICENSE:
    * xds/third_party/envoy/LICENSE (Apache License 2.0)
  * NOTICE:
    * xds/third_party/envoy/NOTICE
  * HOMEPAGE:
    * https://www.envoyproxy.io
  * LOCATION_IN_GRPC:
    * xds/third_party/envoy

This product contains a modified portion of 'gogoprotobuf',
an open source Protocol Buffers support for Go with Gadgets,
which can be obtained at:

  * LICENSE:
    * xds/third_party/gogoproto/LICENSE
  * HOMEPAGE:
    * https://github.com/gogo/protobuf
  * LOCATION_IN_GRPC:
    * xds/third_party/gogoproto

This product contains a modified portion of 'protoc-gen-validate (PGV)',
an open source protoc plugin to generate polyglot message validators,
which can be obtained at:

  * LICENSE:
    * xds/third_party/protoc-gen-validate/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/lyft/protoc-gen-validate
  * LOCATION_IN_GRPC:
    * xds/third_party/protoc-gen-validate

This product contains a modified portion of 'udpa',
an open source universal data plane API, which can be obtained at:

  * LICENSE:
    * xds/third_party/udpa/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/cncf/udpa
  * LOCATION_IN_GRPC:
    * xds/third_party/udpa


com.fasterxml.jackson.dataformat:jackson-dataformat-xml
====================

# Jackson JSON processor

Jackson is a high-performance, Free/Open Source JSON processing library.
It was originally written by Tatu Saloranta (tatu.saloranta@iki.fi), and has
been in development since 2007.
It is currently developed by a community of developers, as well as supported
commercially by FasterXML.com.

## Licensing

Jackson core and extension components may licensed under different licenses.
To find the details that apply to this artifact see the accompanying LICENSE file.
For more information, including possible other licensing options, contact
FasterXML.com (http://fasterxml.com).

## Credits

A list of contributors may be found from CREDITS file, which is included
in some artifacts (usually source distributions); but is always available
from the source code management (SCM) system project uses.


com.jolbox:bonecp
====================

   =========================================================================
   ==  NOTICE file corresponding to the section 4 d of                    ==
   ==  the Apache License, Version 2.0,                                   ==
   ==  in this case for the BoneCP (Java connection pool).                ==
   =========================================================================

   BoneCP
   Copyright 2010 Wallace Wadge

   This product includes software developed by
   Wallace Wadge (http://jolbox.com/).

org.codehaus.jackson:jackson-mapper-asl
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


com.google.inject:guice
====================


Google Guice - Core Library
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




com.google.inject.extensions:guice-assistedinject
====================


Google Guice - Extensions - AssistedInject
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




org.codehaus.jackson:jackson-xc
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


org.codehaus.jackson:jackson-jaxrs
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


com.google.inject.extensions:guice-servlet
====================


Google Guice - Extensions - Servlet
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




org.codehaus.jackson:jackson-core-asl
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


org.bouncycastle:bcprov-jdk15on
====================

Copyright (c) 2000 - 2019 The Legion of the Bouncy Castle Inc. (https://www.bouncycastle.org)

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Source: https://bouncycastle.org/license.html

ch.qos.reload4j:reload4j
====================

Apache log4j
Copyright 2007 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

com.google.inject.extensions:guice-multibindings
====================


Google Guice - Extensions - MultiBindings
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).


====================
ratis-thirdparty-misc is a shaded dependency which includes additional 3rd party dependencies in shaded form.
For the detailed list of the dependencies and the associated NOTICE file see licenses/NOTICE-ratis-thirdparty-misc.txt.</msg>
<status status="PASS" starttime="20230309 17:33:22.836" endtime="20230309 17:33:22.838"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:33:22.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:33:22.838" endtime="20230309 17:33:22.838"/>
</kw>
<status status="PASS" starttime="20230309 17:33:07.277" endtime="20230309 17:33:22.839"/>
</kw>
<msg timestamp="20230309 17:33:22.839" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:33:07.277" endtime="20230309 17:33:22.839"/>
</kw>
<status status="PASS" starttime="20230309 17:33:07.276" endtime="20230309 17:33:22.843"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:33:07.275" endtime="20230309 17:33:22.843"/>
</test>
<test id="s1-s4-t13" name="Delete file" line="105">
<kw name="Execute" library="os">
<arg>ozone fs -rm -skipTrash ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:33:22.855" level="INFO">Running command 'ozone fs -rm -skipTrash o3fs://88772-link1-o3fs.fstest1.om//test/o3fs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:33:33.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:33:33.373" level="INFO">${output} = Deleted o3fs://88772-link1-o3fs.fstest1.om/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20230309 17:33:22.849" endtime="20230309 17:33:33.373"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:33:33.375" level="INFO">Deleted o3fs://88772-link1-o3fs.fstest1.om/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20230309 17:33:33.373" endtime="20230309 17:33:33.375"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:33:33.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:33:33.375" endtime="20230309 17:33:33.377"/>
</kw>
<status status="PASS" starttime="20230309 17:33:22.848" endtime="20230309 17:33:33.377"/>
</kw>
<msg timestamp="20230309 17:33:33.377" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:33:22.848" endtime="20230309 17:33:33.379"/>
</kw>
<status status="PASS" starttime="20230309 17:33:22.845" endtime="20230309 17:33:33.379"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:33:33.387" level="INFO">Running command 'ozone sh key list fstest1/88772-link1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:33:47.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:33:47.668" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt
test/o3fs/dir/subdir1/</msg>
<status status="PASS" starttime="20230309 17:33:33.383" endtime="20230309 17:33:47.668"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:33:47.670" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt
test/o3fs/dir/subdir1/</msg>
<status status="PASS" starttime="20230309 17:33:47.669" endtime="20230309 17:33:47.671"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:33:47.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:33:47.671" endtime="20230309 17:33:47.672"/>
</kw>
<status status="PASS" starttime="20230309 17:33:33.382" endtime="20230309 17:33:47.672"/>
</kw>
<msg timestamp="20230309 17:33:47.672" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:33:33.381" endtime="20230309 17:33:47.673"/>
</kw>
<msg timestamp="20230309 17:33:47.673" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt
test/o3fs/dir/subdir1/</msg>
<status status="PASS" starttime="20230309 17:33:33.379" endtime="20230309 17:33:47.674"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:33:47.674" endtime="20230309 17:33:47.675"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:33:22.844" endtime="20230309 17:33:47.675"/>
</test>
<test id="s1-s4-t14" name="Delete dir" line="110">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -rmdir ${DEEP_URL}/subdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:33:47.683" level="INFO">Running command 'ozone fs -rmdir o3fs://88772-link1-o3fs.fstest1.om//test/o3fs/dir/subdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:33:57.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:33:57.761" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:33:47.680" endtime="20230309 17:33:57.761"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:33:57.763" level="INFO"/>
<status status="PASS" starttime="20230309 17:33:57.762" endtime="20230309 17:33:57.763"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:33:57.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:33:57.763" endtime="20230309 17:33:57.764"/>
</kw>
<status status="PASS" starttime="20230309 17:33:47.680" endtime="20230309 17:33:57.764"/>
</kw>
<msg timestamp="20230309 17:33:57.764" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:33:47.679" endtime="20230309 17:33:57.765"/>
</kw>
<msg timestamp="20230309 17:33:57.765" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 17:33:47.678" endtime="20230309 17:33:57.766"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:33:57.772" level="INFO">Running command 'ozone sh key list fstest1/88772-link1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:34:11.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:34:11.104" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20230309 17:33:57.768" endtime="20230309 17:34:11.105"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:34:11.106" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20230309 17:34:11.105" endtime="20230309 17:34:11.107"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:34:11.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:34:11.107" endtime="20230309 17:34:11.108"/>
</kw>
<status status="PASS" starttime="20230309 17:33:57.767" endtime="20230309 17:34:11.108"/>
</kw>
<msg timestamp="20230309 17:34:11.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:33:57.767" endtime="20230309 17:34:11.109"/>
</kw>
<msg timestamp="20230309 17:34:11.111" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20230309 17:33:57.766" endtime="20230309 17:34:11.111"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>subdir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:34:11.111" endtime="20230309 17:34:11.112"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:33:47.677" endtime="20230309 17:34:11.114"/>
</test>
<test id="s1-s4-t15" name="Touch file" line="115">
<kw name="Execute" library="os">
<arg>ozone fs -touch ${DEEP_URL}/TOUCHFILE-${SCHEME}.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:34:11.128" level="INFO">Running command 'ozone fs -touch o3fs://88772-link1-o3fs.fstest1.om//test/o3fs/dir/TOUCHFILE-o3fs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:34:21.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:34:21.913" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:34:11.123" endtime="20230309 17:34:21.913"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:34:21.915" level="INFO"/>
<status status="PASS" starttime="20230309 17:34:21.914" endtime="20230309 17:34:21.915"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:34:21.916" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:34:21.916" endtime="20230309 17:34:21.916"/>
</kw>
<status status="PASS" starttime="20230309 17:34:11.122" endtime="20230309 17:34:21.917"/>
</kw>
<msg timestamp="20230309 17:34:21.917" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:34:11.121" endtime="20230309 17:34:21.917"/>
</kw>
<status status="PASS" starttime="20230309 17:34:11.119" endtime="20230309 17:34:21.918"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:34:21.924" level="INFO">Running command 'ozone sh key list fstest1/88772-link1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:34:35.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:34:35.642" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt
test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" starttime="20230309 17:34:21.920" endtime="20230309 17:34:35.642"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:34:35.644" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt
test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" starttime="20230309 17:34:35.642" endtime="20230309 17:34:35.644"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:34:35.645" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:34:35.644" endtime="20230309 17:34:35.646"/>
</kw>
<status status="PASS" starttime="20230309 17:34:21.919" endtime="20230309 17:34:35.646"/>
</kw>
<msg timestamp="20230309 17:34:35.646" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:34:21.919" endtime="20230309 17:34:35.648"/>
</kw>
<msg timestamp="20230309 17:34:35.648" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt
test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" starttime="20230309 17:34:21.918" endtime="20230309 17:34:35.649"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TOUCHFILE-${SCHEME}.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:34:35.649" endtime="20230309 17:34:35.649"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:34:11.117" endtime="20230309 17:34:35.652"/>
</test>
<test id="s1-s4-t16" name="Delete file with Trash" line="120">
<kw name="Execute" library="os">
<arg>ozone fs -touch ${DEEP_URL}/testFile.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:34:35.660" level="INFO">Running command 'ozone fs -touch o3fs://88772-link1-o3fs.fstest1.om//test/o3fs/dir/testFile.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:34:47.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:34:47.463" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:34:35.657" endtime="20230309 17:34:47.463"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:34:47.464" level="INFO"/>
<status status="PASS" starttime="20230309 17:34:47.463" endtime="20230309 17:34:47.465"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:34:47.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:34:47.465" endtime="20230309 17:34:47.466"/>
</kw>
<status status="PASS" starttime="20230309 17:34:35.657" endtime="20230309 17:34:47.466"/>
</kw>
<msg timestamp="20230309 17:34:47.467" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:34:35.656" endtime="20230309 17:34:47.467"/>
</kw>
<status status="PASS" starttime="20230309 17:34:35.655" endtime="20230309 17:34:47.468"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -rm ${DEEP_URL}/testFile.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:34:47.474" level="INFO">Running command 'ozone fs -rm o3fs://88772-link1-o3fs.fstest1.om//test/o3fs/dir/testFile.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:34:58.466" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:34:58.466" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:34:47.470" endtime="20230309 17:34:58.467"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:34:58.468" level="INFO"/>
<status status="PASS" starttime="20230309 17:34:58.467" endtime="20230309 17:34:58.468"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:34:58.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:34:58.469" endtime="20230309 17:34:58.469"/>
</kw>
<status status="PASS" starttime="20230309 17:34:47.469" endtime="20230309 17:34:58.470"/>
</kw>
<msg timestamp="20230309 17:34:58.470" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:34:47.469" endtime="20230309 17:34:58.471"/>
</kw>
<status status="PASS" starttime="20230309 17:34:47.468" endtime="20230309 17:34:58.471"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls -R ${BASE_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:34:58.477" level="INFO">Running command 'ozone fs -ls -R o3fs://88772-link1-o3fs.fstest1.om/// 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:35:09.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:35:09.262" level="INFO">${output} = drwxrwxrwx   - testuser testuser          0 2023-03-09 17:34 o3fs://88772-link1-o3fs.fstest1.om/.Trash
drwxrwxrwx   - testuser testuser          0 2023-03-09 17:35 o3fs://88772-link1-o3fs.fstest1.om/....</msg>
<status status="PASS" starttime="20230309 17:34:58.473" endtime="20230309 17:35:09.262"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:35:09.264" level="INFO">drwxrwxrwx   - testuser testuser          0 2023-03-09 17:34 o3fs://88772-link1-o3fs.fstest1.om/.Trash
drwxrwxrwx   - testuser testuser          0 2023-03-09 17:35 o3fs://88772-link1-o3fs.fstest1.om/.Trash/testuser
drwxrwxrwx   - testuser testuser          0 2023-03-09 17:34 o3fs://88772-link1-o3fs.fstest1.om/.Trash/testuser/230309173500
drwxrwxrwx   - testuser testuser          0 2023-03-09 17:34 o3fs://88772-link1-o3fs.fstest1.om/.Trash/testuser/230309173500/test
drwxrwxrwx   - testuser testuser          0 2023-03-09 17:34 o3fs://88772-link1-o3fs.fstest1.om/.Trash/testuser/230309173500/test/o3fs
drwxrwxrwx   - testuser testuser          0 2023-03-09 17:34 o3fs://88772-link1-o3fs.fstest1.om/.Trash/testuser/230309173500/test/o3fs/dir
-rw-rw-rw-   3 testuser testuser          0 2023-03-09 17:34 o3fs://88772-link1-o3fs.fstest1.om/.Trash/testuser/230309173500/test/o3fs/dir/testFile.txt
drwxrwxrwx   - testuser testuser          0 2023-03-09 17:28 o3fs://88772-link1-o3fs.fstest1.om/test
drwxrwxrwx   - testuser testuser          0 2023-03-09 17:28 o3fs://88772-link1-o3fs.fstest1.om/test/o3fs
drwxrwxrwx   - testuser testuser          0 2023-03-09 17:34 o3fs://88772-link1-o3fs.fstest1.om/test/o3fs/dir
-rw-rw-rw-   3 testuser testuser      17539 2023-03-09 17:28 o3fs://88772-link1-o3fs.fstest1.om/test/o3fs/dir/MOVED.TXT
-rw-rw-rw-   3 testuser testuser      17539 2023-03-09 17:29 o3fs://88772-link1-o3fs.fstest1.om/test/o3fs/dir/PUTFILE.txt
-rw-rw-rw-   3 testuser testuser      17539 2023-03-09 17:31 o3fs://88772-link1-o3fs.fstest1.om/test/o3fs/dir/STREAMING.txt
-rw-rw-rw-   3 testuser testuser          0 2023-03-09 17:34 o3fs://88772-link1-o3fs.fstest1.om/test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" starttime="20230309 17:35:09.263" endtime="20230309 17:35:09.264"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:35:09.265" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:35:09.264" endtime="20230309 17:35:09.265"/>
</kw>
<status status="PASS" starttime="20230309 17:34:58.473" endtime="20230309 17:35:09.265"/>
</kw>
<msg timestamp="20230309 17:35:09.266" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:34:58.472" endtime="20230309 17:35:09.267"/>
</kw>
<msg timestamp="20230309 17:35:09.267" level="INFO">${result} = drwxrwxrwx   - testuser testuser          0 2023-03-09 17:34 o3fs://88772-link1-o3fs.fstest1.om/.Trash
drwxrwxrwx   - testuser testuser          0 2023-03-09 17:35 o3fs://88772-link1-o3fs.fstest1.om/....</msg>
<status status="PASS" starttime="20230309 17:34:58.471" endtime="20230309 17:35:09.267"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_URL}/testFile.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:35:09.267" endtime="20230309 17:35:09.268"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>.Trash/hadoop</arg>
<arg>.Trash/testuser</arg>
<arg>.Trash/root</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230309 17:35:09.268" endtime="20230309 17:35:09.269"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}/testFile.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:35:09.269" endtime="20230309 17:35:09.270"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:34:35.654" endtime="20230309 17:35:09.270"/>
</test>
<test id="s1-s4-t17" name="Delete recursively" line="128">
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${DEEP_URL}/subdir2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:35:09.282" level="INFO">Running command 'ozone fs -mkdir -p o3fs://88772-link1-o3fs.fstest1.om//test/o3fs/dir/subdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:35:19.629" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:35:19.629" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:35:09.278" endtime="20230309 17:35:19.629"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:35:19.630" level="INFO"/>
<status status="PASS" starttime="20230309 17:35:19.629" endtime="20230309 17:35:19.630"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:35:19.631" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:35:19.630" endtime="20230309 17:35:19.631"/>
</kw>
<status status="PASS" starttime="20230309 17:35:09.276" endtime="20230309 17:35:19.632"/>
</kw>
<msg timestamp="20230309 17:35:19.632" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:35:09.276" endtime="20230309 17:35:19.632"/>
</kw>
<status status="PASS" starttime="20230309 17:35:09.275" endtime="20230309 17:35:19.633"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -rm -skipTrash -r ${DEEP_URL}/subdir2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:35:19.641" level="INFO">Running command 'ozone fs -rm -skipTrash -r o3fs://88772-link1-o3fs.fstest1.om//test/o3fs/dir/subdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:35:29.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:35:29.585" level="INFO">${output} = Deleted o3fs://88772-link1-o3fs.fstest1.om/test/o3fs/dir/subdir2</msg>
<status status="PASS" starttime="20230309 17:35:19.636" endtime="20230309 17:35:29.585"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:35:29.586" level="INFO">Deleted o3fs://88772-link1-o3fs.fstest1.om/test/o3fs/dir/subdir2</msg>
<status status="PASS" starttime="20230309 17:35:29.585" endtime="20230309 17:35:29.586"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:35:29.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:35:29.587" endtime="20230309 17:35:29.587"/>
</kw>
<status status="PASS" starttime="20230309 17:35:19.635" endtime="20230309 17:35:29.589"/>
</kw>
<msg timestamp="20230309 17:35:29.589" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:35:19.635" endtime="20230309 17:35:29.589"/>
</kw>
<status status="PASS" starttime="20230309 17:35:19.633" endtime="20230309 17:35:29.590"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:35:29.599" level="INFO">Running command 'ozone sh key list fstest1/88772-link1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:35:43.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:35:43.310" level="INFO">${output} = .Trash/
.Trash/testuser/
.Trash/testuser/230309173500/
.Trash/testuser/230309173500/test/
.Trash/testuser/230309173500/test/o3fs/
.Trash/testuser/230309173500/test/o3fs/dir/
.Trash/testuser/2303091735...</msg>
<status status="PASS" starttime="20230309 17:35:29.595" endtime="20230309 17:35:43.310"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:35:43.312" level="INFO">.Trash/
.Trash/testuser/
.Trash/testuser/230309173500/
.Trash/testuser/230309173500/test/
.Trash/testuser/230309173500/test/o3fs/
.Trash/testuser/230309173500/test/o3fs/dir/
.Trash/testuser/230309173500/test/o3fs/dir/testFile.txt
test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt
test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" starttime="20230309 17:35:43.311" endtime="20230309 17:35:43.312"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:35:43.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:35:43.313" endtime="20230309 17:35:43.314"/>
</kw>
<status status="PASS" starttime="20230309 17:35:29.593" endtime="20230309 17:35:43.315"/>
</kw>
<msg timestamp="20230309 17:35:43.315" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:35:29.593" endtime="20230309 17:35:43.317"/>
</kw>
<msg timestamp="20230309 17:35:43.318" level="INFO">${result} = .Trash/
.Trash/testuser/
.Trash/testuser/230309173500/
.Trash/testuser/230309173500/test/
.Trash/testuser/230309173500/test/o3fs/
.Trash/testuser/230309173500/test/o3fs/dir/
.Trash/testuser/2303091735...</msg>
<status status="PASS" starttime="20230309 17:35:29.592" endtime="20230309 17:35:43.318"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}/subdir2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:35:43.318" endtime="20230309 17:35:43.319"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:35:09.273" endtime="20230309 17:35:43.320"/>
</test>
<test id="s1-s4-t18" name="List recursively" line="134">
<kw name="Setup localdir1" type="SETUP">
<kw name="Execute" library="os">
<arg>rm -Rf /tmp/localdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:35:43.329" level="INFO">Running command 'rm -Rf /tmp/localdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:35:43.333" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:35:43.333" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:35:43.325" endtime="20230309 17:35:43.333"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:35:43.335" level="INFO"/>
<status status="PASS" starttime="20230309 17:35:43.334" endtime="20230309 17:35:43.335"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:35:43.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:35:43.335" endtime="20230309 17:35:43.336"/>
</kw>
<status status="PASS" starttime="20230309 17:35:43.324" endtime="20230309 17:35:43.336"/>
</kw>
<msg timestamp="20230309 17:35:43.336" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:35:43.324" endtime="20230309 17:35:43.337"/>
</kw>
<status status="PASS" starttime="20230309 17:35:43.323" endtime="20230309 17:35:43.337"/>
</kw>
<kw name="Execute" library="os">
<arg>mkdir /tmp/localdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:35:43.344" level="INFO">Running command 'mkdir /tmp/localdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:35:43.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:35:43.350" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:35:43.339" endtime="20230309 17:35:43.350"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:35:43.351" level="INFO"/>
<status status="PASS" starttime="20230309 17:35:43.351" endtime="20230309 17:35:43.352"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:35:43.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:35:43.352" endtime="20230309 17:35:43.353"/>
</kw>
<status status="PASS" starttime="20230309 17:35:43.339" endtime="20230309 17:35:43.353"/>
</kw>
<msg timestamp="20230309 17:35:43.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:35:43.338" endtime="20230309 17:35:43.354"/>
</kw>
<status status="PASS" starttime="20230309 17:35:43.338" endtime="20230309 17:35:43.354"/>
</kw>
<kw name="Execute" library="os">
<arg>cp NOTICE.txt /tmp/localdir1/LOCAL.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:35:43.360" level="INFO">Running command 'cp NOTICE.txt /tmp/localdir1/LOCAL.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:35:43.364" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:35:43.365" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:35:43.357" endtime="20230309 17:35:43.365"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:35:43.366" level="INFO"/>
<status status="PASS" starttime="20230309 17:35:43.365" endtime="20230309 17:35:43.366"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:35:43.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:35:43.366" endtime="20230309 17:35:43.367"/>
</kw>
<status status="PASS" starttime="20230309 17:35:43.355" endtime="20230309 17:35:43.368"/>
</kw>
<msg timestamp="20230309 17:35:43.368" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:35:43.355" endtime="20230309 17:35:43.368"/>
</kw>
<status status="PASS" starttime="20230309 17:35:43.354" endtime="20230309 17:35:43.369"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${BASE_URL}testdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:35:43.374" level="INFO">Running command 'ozone fs -mkdir -p o3fs://88772-link1-o3fs.fstest1.om//testdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:35:53.161" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:35:53.161" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:35:43.371" endtime="20230309 17:35:53.162"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:35:53.164" level="INFO"/>
<status status="PASS" starttime="20230309 17:35:53.162" endtime="20230309 17:35:53.165"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:35:53.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:35:53.166" endtime="20230309 17:35:53.168"/>
</kw>
<status status="PASS" starttime="20230309 17:35:43.370" endtime="20230309 17:35:53.168"/>
</kw>
<msg timestamp="20230309 17:35:53.169" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:35:43.370" endtime="20230309 17:35:53.170"/>
</kw>
<status status="PASS" starttime="20230309 17:35:43.369" endtime="20230309 17:35:53.170"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -copyFromLocal /tmp/localdir1 ${BASE_URL}testdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:35:53.184" level="INFO">Running command 'ozone fs -copyFromLocal /tmp/localdir1 o3fs://88772-link1-o3fs.fstest1.om//testdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:36:08.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:36:08.427" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:35:53.173" endtime="20230309 17:36:08.427"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:36:08.428" level="INFO"/>
<status status="PASS" starttime="20230309 17:36:08.427" endtime="20230309 17:36:08.428"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:36:08.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:36:08.428" endtime="20230309 17:36:08.429"/>
</kw>
<status status="PASS" starttime="20230309 17:35:53.173" endtime="20230309 17:36:08.430"/>
</kw>
<msg timestamp="20230309 17:36:08.430" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:35:53.172" endtime="20230309 17:36:08.431"/>
</kw>
<status status="PASS" starttime="20230309 17:35:53.171" endtime="20230309 17:36:08.432"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -put NOTICE.txt ${BASE_URL}testdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:36:08.447" level="INFO">Running command 'ozone fs -put NOTICE.txt o3fs://88772-link1-o3fs.fstest1.om//testdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:36:23.888" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:36:23.888" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:36:08.438" endtime="20230309 17:36:23.888"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:36:23.890" level="INFO"/>
<status status="PASS" starttime="20230309 17:36:23.889" endtime="20230309 17:36:23.890"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:36:23.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:36:23.891" endtime="20230309 17:36:23.892"/>
</kw>
<status status="PASS" starttime="20230309 17:36:08.435" endtime="20230309 17:36:23.892"/>
</kw>
<msg timestamp="20230309 17:36:23.892" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:36:08.435" endtime="20230309 17:36:23.893"/>
</kw>
<status status="PASS" starttime="20230309 17:36:08.432" endtime="20230309 17:36:23.894"/>
</kw>
<status status="PASS" starttime="20230309 17:35:43.322" endtime="20230309 17:36:23.894"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls -R ${BASE_URL}testdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:36:23.904" level="INFO">Running command 'ozone fs -ls -R o3fs://88772-link1-o3fs.fstest1.om//testdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:36:34.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:36:34.661" level="INFO">${output} = -rw-rw-rw-   3 testuser testuser      17539 2023-03-09 17:36 o3fs://88772-link1-o3fs.fstest1.om/testdir1/NOTICE.txt
drwxrwxrwx   - testuser testuser          0 2023-03-09 17:36 o3fs://88772-link1-o3fs...</msg>
<status status="PASS" starttime="20230309 17:36:23.898" endtime="20230309 17:36:34.661"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:36:34.664" level="INFO">-rw-rw-rw-   3 testuser testuser      17539 2023-03-09 17:36 o3fs://88772-link1-o3fs.fstest1.om/testdir1/NOTICE.txt
drwxrwxrwx   - testuser testuser          0 2023-03-09 17:36 o3fs://88772-link1-o3fs.fstest1.om/testdir1/localdir1
-rw-rw-rw-   3 testuser testuser      17539 2023-03-09 17:36 o3fs://88772-link1-o3fs.fstest1.om/testdir1/localdir1/LOCAL.txt</msg>
<status status="PASS" starttime="20230309 17:36:34.662" endtime="20230309 17:36:34.664"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:36:34.666" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:36:34.664" endtime="20230309 17:36:34.667"/>
</kw>
<status status="PASS" starttime="20230309 17:36:23.896" endtime="20230309 17:36:34.667"/>
</kw>
<msg timestamp="20230309 17:36:34.667" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:36:23.896" endtime="20230309 17:36:34.668"/>
</kw>
<msg timestamp="20230309 17:36:34.669" level="INFO">${result} = -rw-rw-rw-   3 testuser testuser      17539 2023-03-09 17:36 o3fs://88772-link1-o3fs.fstest1.om/testdir1/NOTICE.txt
drwxrwxrwx   - testuser testuser          0 2023-03-09 17:36 o3fs://88772-link1-o3fs...</msg>
<status status="PASS" starttime="20230309 17:36:23.895" endtime="20230309 17:36:34.669"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>localdir1/LOCAL.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:36:34.669" endtime="20230309 17:36:34.670"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testdir1/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:36:34.670" endtime="20230309 17:36:34.671"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:35:43.321" endtime="20230309 17:36:34.671"/>
</test>
<test id="s1-s4-t19" name="Copy to other bucket" line="140">
<kw name="Format FS URL" library="fs">
<var>${target}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET2}</arg>
<arg>testdir2</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 17:36:34.684" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230309 17:36:34.683" endtime="20230309 17:36:34.684"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 17:36:34.685" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20230309 17:36:34.685" endtime="20230309 17:36:34.685"/>
</kw>
<status status="PASS" starttime="20230309 17:36:34.683" endtime="20230309 17:36:34.686"/>
</kw>
<msg timestamp="20230309 17:36:34.686" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20230309 17:36:34.680" endtime="20230309 17:36:34.686"/>
</kw>
<status status="PASS" starttime="20230309 17:36:34.678" endtime="20230309 17:36:34.687"/>
</kw>
<msg timestamp="20230309 17:36:34.687" level="INFO">${url} = o3fs://88772-link2-o3fs.fstest1.om/testdir2</msg>
<status status="PASS" starttime="20230309 17:36:34.675" endtime="20230309 17:36:34.687"/>
</kw>
<msg timestamp="20230309 17:36:34.687" level="INFO">${target} = o3fs://88772-link2-o3fs.fstest1.om/testdir2</msg>
<status status="PASS" starttime="20230309 17:36:34.674" endtime="20230309 17:36:34.687"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:36:34.693" level="INFO">Running command 'ozone fs -mkdir -p o3fs://88772-link2-o3fs.fstest1.om/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:36:45.302" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:36:45.303" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:36:34.689" endtime="20230309 17:36:45.303"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:36:45.304" level="INFO"/>
<status status="PASS" starttime="20230309 17:36:45.303" endtime="20230309 17:36:45.304"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:36:45.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:36:45.305" endtime="20230309 17:36:45.305"/>
</kw>
<status status="PASS" starttime="20230309 17:36:34.689" endtime="20230309 17:36:45.306"/>
</kw>
<msg timestamp="20230309 17:36:45.306" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:36:34.688" endtime="20230309 17:36:45.308"/>
</kw>
<status status="PASS" starttime="20230309 17:36:34.688" endtime="20230309 17:36:45.309"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${BASE_URL}/testdir1/localdir1 ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:36:45.314" level="INFO">Running command 'ozone fs -cp o3fs://88772-link1-o3fs.fstest1.om///testdir1/localdir1 o3fs://88772-link2-o3fs.fstest1.om/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:37:01.496" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:37:01.496" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:36:45.311" endtime="20230309 17:37:01.496"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:37:01.499" level="INFO"/>
<status status="PASS" starttime="20230309 17:37:01.498" endtime="20230309 17:37:01.499"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:37:01.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:37:01.499" endtime="20230309 17:37:01.501"/>
</kw>
<status status="PASS" starttime="20230309 17:36:45.310" endtime="20230309 17:37:01.502"/>
</kw>
<msg timestamp="20230309 17:37:01.503" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:36:45.309" endtime="20230309 17:37:01.503"/>
</kw>
<status status="PASS" starttime="20230309 17:36:45.309" endtime="20230309 17:37:01.504"/>
</kw>
<kw name="Execute" library="os" type="TEARDOWN">
<arg>ozone fs -rm -r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:37:01.515" level="INFO">Running command 'ozone fs -rm -r o3fs://88772-link2-o3fs.fstest1.om/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:37:11.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:37:11.937" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:37:01.509" endtime="20230309 17:37:11.937"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:37:11.939" level="INFO"/>
<status status="PASS" starttime="20230309 17:37:11.938" endtime="20230309 17:37:11.939"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:37:11.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:37:11.939" endtime="20230309 17:37:11.940"/>
</kw>
<status status="PASS" starttime="20230309 17:37:01.509" endtime="20230309 17:37:11.941"/>
</kw>
<msg timestamp="20230309 17:37:11.941" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:37:01.507" endtime="20230309 17:37:11.941"/>
</kw>
<status status="PASS" starttime="20230309 17:37:01.505" endtime="20230309 17:37:11.941"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:36:34.673" endtime="20230309 17:37:11.942"/>
</test>
<test id="s1-s4-t20" name="Copy to other volume" line="146">
<kw name="Format FS URL" library="fs">
<var>${target}</var>
<arg>${SCHEME}</arg>
<arg>${VOL2}</arg>
<arg>${BUCKET_IN_VOL2}</arg>
<arg>testdir3</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 17:37:11.954" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230309 17:37:11.953" endtime="20230309 17:37:11.954"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 17:37:11.955" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20230309 17:37:11.954" endtime="20230309 17:37:11.955"/>
</kw>
<status status="PASS" starttime="20230309 17:37:11.952" endtime="20230309 17:37:11.955"/>
</kw>
<msg timestamp="20230309 17:37:11.955" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20230309 17:37:11.949" endtime="20230309 17:37:11.955"/>
</kw>
<status status="PASS" starttime="20230309 17:37:11.948" endtime="20230309 17:37:11.956"/>
</kw>
<msg timestamp="20230309 17:37:11.956" level="INFO">${url} = o3fs://88772-link3-o3fs.fstest2.om/testdir3</msg>
<status status="PASS" starttime="20230309 17:37:11.946" endtime="20230309 17:37:11.956"/>
</kw>
<msg timestamp="20230309 17:37:11.957" level="INFO">${target} = o3fs://88772-link3-o3fs.fstest2.om/testdir3</msg>
<status status="PASS" starttime="20230309 17:37:11.945" endtime="20230309 17:37:11.957"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:37:11.963" level="INFO">Running command 'ozone fs -mkdir -p o3fs://88772-link3-o3fs.fstest2.om/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:37:22.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:37:22.965" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:37:11.959" endtime="20230309 17:37:22.965"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:37:22.967" level="INFO"/>
<status status="PASS" starttime="20230309 17:37:22.966" endtime="20230309 17:37:22.967"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:37:22.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:37:22.968" endtime="20230309 17:37:22.969"/>
</kw>
<status status="PASS" starttime="20230309 17:37:11.959" endtime="20230309 17:37:22.970"/>
</kw>
<msg timestamp="20230309 17:37:22.970" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:37:11.958" endtime="20230309 17:37:22.970"/>
</kw>
<status status="PASS" starttime="20230309 17:37:11.957" endtime="20230309 17:37:22.971"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${BASE_URL}/testdir1/localdir1 ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:37:22.978" level="INFO">Running command 'ozone fs -cp o3fs://88772-link1-o3fs.fstest1.om///testdir1/localdir1 o3fs://88772-link3-o3fs.fstest2.om/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:37:41.304" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:37:41.304" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:37:22.974" endtime="20230309 17:37:41.304"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:37:41.306" level="INFO"/>
<status status="PASS" starttime="20230309 17:37:41.305" endtime="20230309 17:37:41.306"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:37:41.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:37:41.306" endtime="20230309 17:37:41.308"/>
</kw>
<status status="PASS" starttime="20230309 17:37:22.973" endtime="20230309 17:37:41.308"/>
</kw>
<msg timestamp="20230309 17:37:41.308" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:37:22.973" endtime="20230309 17:37:41.309"/>
</kw>
<status status="PASS" starttime="20230309 17:37:22.971" endtime="20230309 17:37:41.309"/>
</kw>
<kw name="Execute" library="os" type="TEARDOWN">
<arg>ozone fs -rm -r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:37:41.318" level="INFO">Running command 'ozone fs -rm -r o3fs://88772-link3-o3fs.fstest2.om/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:37:51.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:37:51.874" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:37:41.313" endtime="20230309 17:37:51.874"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:37:51.875" level="INFO"/>
<status status="PASS" starttime="20230309 17:37:51.874" endtime="20230309 17:37:51.875"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:37:51.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:37:51.876" endtime="20230309 17:37:51.876"/>
</kw>
<status status="PASS" starttime="20230309 17:37:41.311" endtime="20230309 17:37:51.878"/>
</kw>
<msg timestamp="20230309 17:37:51.878" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:37:41.311" endtime="20230309 17:37:51.878"/>
</kw>
<status status="PASS" starttime="20230309 17:37:41.310" endtime="20230309 17:37:51.879"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:37:11.943" endtime="20230309 17:37:51.879"/>
</test>
<test id="s1-s4-t21" name="List file created via shell" line="152">
<kw name="Execute" library="os" type="SETUP">
<arg>ozone sh key put ${VOLUME}/${BUCKET}/${SCHEME}.txt NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:37:51.889" level="INFO">Running command 'ozone sh key put fstest1/88772-link1-o3fs/o3fs.txt NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:38:10.040" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:38:10.040" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:37:51.884" endtime="20230309 17:38:10.040"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:38:10.042" level="INFO"/>
<status status="PASS" starttime="20230309 17:38:10.041" endtime="20230309 17:38:10.042"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:38:10.043" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:38:10.042" endtime="20230309 17:38:10.043"/>
</kw>
<status status="PASS" starttime="20230309 17:37:51.883" endtime="20230309 17:38:10.044"/>
</kw>
<msg timestamp="20230309 17:38:10.044" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:37:51.883" endtime="20230309 17:38:10.044"/>
</kw>
<status status="PASS" starttime="20230309 17:37:51.882" endtime="20230309 17:38:10.045"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${BASE_URL}${SCHEME}.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:38:10.052" level="INFO">Running command 'ozone fs -ls o3fs://88772-link1-o3fs.fstest1.om//o3fs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:38:21.029" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:38:21.029" level="INFO">${output} = -rw-rw-rw-   3 testuser testuser      17539 2023-03-09 17:38 o3fs://88772-link1-o3fs.fstest1.om/o3fs.txt</msg>
<status status="PASS" starttime="20230309 17:38:10.049" endtime="20230309 17:38:21.029"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:38:21.031" level="INFO">-rw-rw-rw-   3 testuser testuser      17539 2023-03-09 17:38 o3fs://88772-link1-o3fs.fstest1.om/o3fs.txt</msg>
<status status="PASS" starttime="20230309 17:38:21.029" endtime="20230309 17:38:21.031"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:38:21.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:38:21.032" endtime="20230309 17:38:21.033"/>
</kw>
<status status="PASS" starttime="20230309 17:38:10.048" endtime="20230309 17:38:21.033"/>
</kw>
<msg timestamp="20230309 17:38:21.033" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:38:10.047" endtime="20230309 17:38:21.035"/>
</kw>
<msg timestamp="20230309 17:38:21.035" level="INFO">${result} = -rw-rw-rw-   3 testuser testuser      17539 2023-03-09 17:38 o3fs://88772-link1-o3fs.fstest1.om/o3fs.txt</msg>
<status status="PASS" starttime="20230309 17:38:10.045" endtime="20230309 17:38:21.035"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${SCHEME}.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:38:21.035" endtime="20230309 17:38:21.037"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:37:51.881" endtime="20230309 17:38:21.037"/>
</test>
<test id="s1-s4-t22" name="Reject overwrite existing" line="157">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -copyFromLocal NOTICE.txt ${BASE_URL}${SCHEME}.txt</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:38:21.045" level="INFO">Running command 'ozone fs -copyFromLocal NOTICE.txt o3fs://88772-link1-o3fs.fstest1.om//o3fs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:38:32.481" level="INFO">${rc} = 1</msg>
<msg timestamp="20230309 17:38:32.481" level="INFO">${output} = copyFromLocal: `o3fs://88772-link1-o3fs.fstest1.om/o3fs.txt': File exists</msg>
<status status="PASS" starttime="20230309 17:38:21.041" endtime="20230309 17:38:32.481"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:38:32.487" level="INFO">copyFromLocal: `o3fs://88772-link1-o3fs.fstest1.om/o3fs.txt': File exists</msg>
<status status="PASS" starttime="20230309 17:38:32.482" endtime="20230309 17:38:32.487"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:38:32.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:38:32.487" endtime="20230309 17:38:32.488"/>
</kw>
<msg timestamp="20230309 17:38:32.489" level="INFO">${result} = copyFromLocal: `o3fs://88772-link1-o3fs.fstest1.om/o3fs.txt': File exists</msg>
<status status="PASS" starttime="20230309 17:38:21.039" endtime="20230309 17:38:32.489"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>File exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:38:32.489" endtime="20230309 17:38:32.490"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:38:21.038" endtime="20230309 17:38:32.490"/>
</test>
<test id="s1-s4-t23" name="Get file" line="161">
<kw name="Execute" library="os" type="SETUP">
<arg>rm -Rf /tmp/GET.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:38:32.505" level="INFO">Running command 'rm -Rf /tmp/GET.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:38:32.509" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:38:32.509" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:38:32.499" endtime="20230309 17:38:32.509"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:38:32.511" level="INFO"/>
<status status="PASS" starttime="20230309 17:38:32.510" endtime="20230309 17:38:32.511"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:38:32.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:38:32.511" endtime="20230309 17:38:32.512"/>
</kw>
<status status="PASS" starttime="20230309 17:38:32.497" endtime="20230309 17:38:32.512"/>
</kw>
<msg timestamp="20230309 17:38:32.512" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:38:32.496" endtime="20230309 17:38:32.513"/>
</kw>
<status status="PASS" starttime="20230309 17:38:32.494" endtime="20230309 17:38:32.514"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -get ${BASE_URL}${SCHEME}.txt /tmp/GET.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:38:32.520" level="INFO">Running command 'ozone fs -get o3fs://88772-link1-o3fs.fstest1.om//o3fs.txt /tmp/GET.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:38:49.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:38:49.146" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:38:32.517" endtime="20230309 17:38:49.146"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:38:49.148" level="INFO"/>
<status status="PASS" starttime="20230309 17:38:49.146" endtime="20230309 17:38:49.148"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:38:49.150" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:38:49.148" endtime="20230309 17:38:49.150"/>
</kw>
<status status="PASS" starttime="20230309 17:38:32.516" endtime="20230309 17:38:49.150"/>
</kw>
<msg timestamp="20230309 17:38:49.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:38:32.516" endtime="20230309 17:38:49.151"/>
</kw>
<status status="PASS" starttime="20230309 17:38:32.515" endtime="20230309 17:38:49.152"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>/tmp/GET.txt</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20230309 17:38:49.153" level="INFO" html="true">File '&lt;a href="file:///tmp/GET.txt"&gt;/tmp/GET.txt&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230309 17:38:49.152" endtime="20230309 17:38:49.153"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:38:32.493" endtime="20230309 17:38:49.154"/>
</test>
<doc>Ozone FS tests</doc>
<status status="PASS" starttime="20230309 17:25:04.386" endtime="20230309 17:38:49.158"/>
</suite>
<suite id="s1-s5" name="s3-encrypted" source="/opt/hadoop/smoketest/s3">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:38:58.467" level="INFO">${randStr} = 2951328702</msg>
<status status="PASS" starttime="20230309 17:38:58.467" endtime="20230309 17:38:58.467"/>
</kw>
<msg timestamp="20230309 17:38:58.468" level="INFO">${random} = ozone-test-2951328702</msg>
<status status="PASS" starttime="20230309 17:38:58.466" endtime="20230309 17:38:58.468"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:38:58.471" level="INFO">${PREFIX} = ozone-test-2951328702</msg>
<status status="PASS" starttime="20230309 17:38:58.468" endtime="20230309 17:38:58.471"/>
</kw>
<status status="PASS" starttime="20230309 17:38:58.466" endtime="20230309 17:38:58.471"/>
</kw>
<status status="PASS" starttime="20230309 17:38:58.465" endtime="20230309 17:38:58.471"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which aws</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:38:58.478" level="INFO">Running command 'which aws 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:38:58.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:38:58.483" level="INFO">${output} = /usr/local/bin/aws</msg>
<status status="PASS" starttime="20230309 17:38:58.472" endtime="20230309 17:38:58.483"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230309 17:38:58.485" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:38:58.484" endtime="20230309 17:38:58.487"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20230309 17:38:58.487" endtime="20230309 17:38:58.487"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230309 17:38:58.488" endtime="20230309 17:38:58.488"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20230309 17:38:58.488" endtime="20230309 17:38:58.488"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230309 17:38:58.489" endtime="20230309 17:38:58.489"/>
</kw>
<status status="PASS" starttime="20230309 17:38:58.472" endtime="20230309 17:38:58.489"/>
</kw>
<status status="PASS" starttime="20230309 17:38:58.471" endtime="20230309 17:38:58.490"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:38:58.499" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:38:58.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:38:58.506" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230309 17:38:58.495" endtime="20230309 17:38:58.506"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:38:58.507" level="INFO">s3g</msg>
<status status="PASS" starttime="20230309 17:38:58.507" endtime="20230309 17:38:58.507"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:38:58.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:38:58.508" endtime="20230309 17:38:58.508"/>
</kw>
<status status="PASS" starttime="20230309 17:38:58.494" endtime="20230309 17:38:58.509"/>
</kw>
<msg timestamp="20230309 17:38:58.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:38:58.494" endtime="20230309 17:38:58.510"/>
</kw>
<msg timestamp="20230309 17:38:58.510" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230309 17:38:58.493" endtime="20230309 17:38:58.510"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:38:58.513" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:38:58.510" endtime="20230309 17:38:58.513"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:38:58.520" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:38:58.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:38:58.605" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:38:58.516" endtime="20230309 17:38:58.605"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:38:58.607" level="INFO"/>
<status status="PASS" starttime="20230309 17:38:58.605" endtime="20230309 17:38:58.607"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:38:58.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:38:58.607" endtime="20230309 17:38:58.608"/>
</kw>
<status status="PASS" starttime="20230309 17:38:58.516" endtime="20230309 17:38:58.608"/>
</kw>
<msg timestamp="20230309 17:38:58.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:38:58.515" endtime="20230309 17:38:58.609"/>
</kw>
<status status="PASS" starttime="20230309 17:38:58.514" endtime="20230309 17:38:58.609"/>
</kw>
<status status="PASS" starttime="20230309 17:38:58.513" endtime="20230309 17:38:58.610"/>
</kw>
<status status="PASS" starttime="20230309 17:38:58.493" endtime="20230309 17:38:58.610"/>
</kw>
<status status="PASS" starttime="20230309 17:38:58.491" endtime="20230309 17:38:58.610"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:38:58.619" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:39:09.101" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:39:09.101" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:38:58.614" endtime="20230309 17:39:09.102"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:39:09.103" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:39:09.102" endtime="20230309 17:39:09.104"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:39:09.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:39:09.104" endtime="20230309 17:39:09.105"/>
</kw>
<status status="PASS" starttime="20230309 17:38:58.613" endtime="20230309 17:39:09.105"/>
</kw>
<msg timestamp="20230309 17:39:09.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:38:58.613" endtime="20230309 17:39:09.107"/>
</kw>
<msg timestamp="20230309 17:39:09.107" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:38:58.612" endtime="20230309 17:39:09.107"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230309 17:39:09.109" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230309 17:39:09.108" endtime="20230309 17:39:09.109"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20230309 17:39:09.110" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230309 17:39:09.109" endtime="20230309 17:39:09.110"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230309 17:39:09.111" level="INFO">${secret} = ['15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670']</msg>
<status status="PASS" starttime="20230309 17:39:09.110" endtime="20230309 17:39:09.111"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:39:09.114" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:39:09.112" endtime="20230309 17:39:09.114"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:39:09.116" level="INFO">${secret} = 15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:39:09.114" endtime="20230309 17:39:09.116"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:39:09.123" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:39:10.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:39:10.166" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:39:09.119" endtime="20230309 17:39:10.166"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:39:10.168" level="INFO"/>
<status status="PASS" starttime="20230309 17:39:10.167" endtime="20230309 17:39:10.168"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:39:10.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:39:10.169" endtime="20230309 17:39:10.171"/>
</kw>
<status status="PASS" starttime="20230309 17:39:09.118" endtime="20230309 17:39:10.171"/>
</kw>
<msg timestamp="20230309 17:39:10.171" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:39:09.117" endtime="20230309 17:39:10.172"/>
</kw>
<status status="PASS" starttime="20230309 17:39:09.116" endtime="20230309 17:39:10.172"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:39:10.179" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:39:11.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:39:11.093" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:39:10.176" endtime="20230309 17:39:11.093"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:39:11.095" level="INFO"/>
<status status="PASS" starttime="20230309 17:39:11.094" endtime="20230309 17:39:11.095"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:39:11.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:39:11.095" endtime="20230309 17:39:11.096"/>
</kw>
<status status="PASS" starttime="20230309 17:39:10.174" endtime="20230309 17:39:11.096"/>
</kw>
<msg timestamp="20230309 17:39:11.097" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:39:10.174" endtime="20230309 17:39:11.098"/>
</kw>
<status status="PASS" starttime="20230309 17:39:10.173" endtime="20230309 17:39:11.098"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:39:11.105" level="INFO">Running command 'aws configure set aws_secret_access_key 15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:39:12.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:39:12.084" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:39:11.101" endtime="20230309 17:39:12.085"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:39:12.087" level="INFO"/>
<status status="PASS" starttime="20230309 17:39:12.086" endtime="20230309 17:39:12.087"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:39:12.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:39:12.087" endtime="20230309 17:39:12.089"/>
</kw>
<status status="PASS" starttime="20230309 17:39:11.100" endtime="20230309 17:39:12.089"/>
</kw>
<msg timestamp="20230309 17:39:12.089" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:39:11.099" endtime="20230309 17:39:12.091"/>
</kw>
<status status="PASS" starttime="20230309 17:39:11.098" endtime="20230309 17:39:12.091"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:39:12.099" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:39:12.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:39:12.993" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:39:12.095" endtime="20230309 17:39:12.993"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:39:12.995" level="INFO"/>
<status status="PASS" starttime="20230309 17:39:12.994" endtime="20230309 17:39:12.995"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:39:12.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:39:12.995" endtime="20230309 17:39:12.998"/>
</kw>
<status status="PASS" starttime="20230309 17:39:12.093" endtime="20230309 17:39:12.999"/>
</kw>
<msg timestamp="20230309 17:39:12.999" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:39:12.093" endtime="20230309 17:39:13.001"/>
</kw>
<status status="PASS" starttime="20230309 17:39:12.092" endtime="20230309 17:39:13.003"/>
</kw>
<status status="PASS" starttime="20230309 17:38:58.611" endtime="20230309 17:39:13.004"/>
</kw>
<status status="PASS" starttime="20230309 17:38:58.610" endtime="20230309 17:39:13.004"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:39:13.004" endtime="20230309 17:39:13.005"/>
</kw>
<status status="PASS" starttime="20230309 17:38:58.491" endtime="20230309 17:39:13.005"/>
</kw>
<status status="PASS" starttime="20230309 17:38:58.490" endtime="20230309 17:39:13.005"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230309 17:39:13.008" endtime="20230309 17:39:13.008"/>
</kw>
<msg timestamp="20230309 17:39:13.008" level="INFO">${BUCKET} = encrypted</msg>
<status status="PASS" starttime="20230309 17:39:13.005" endtime="20230309 17:39:13.008"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:39:13.009" level="INFO">${BUCKET} = encrypted</msg>
<status status="PASS" starttime="20230309 17:39:13.009" endtime="20230309 17:39:13.009"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:39:13.010" endtime="20230309 17:39:13.010"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create encrypted bucket" library="commonawslib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:39:13.011" endtime="20230309 17:39:13.012"/>
</kw>
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/encrypted</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:39:13.016" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:39:24.271" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:39:24.272" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20230309 17:39:13.013" endtime="20230309 17:39:24.272"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230309 17:39:24.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:39:24.274" endtime="20230309 17:39:24.276"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230309 17:39:24.277" endtime="20230309 17:39:24.277"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230309 17:39:24.277" endtime="20230309 17:39:24.278"/>
</kw>
<msg timestamp="20230309 17:39:24.282" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20230309 17:39:13.012" endtime="20230309 17:39:24.282"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:39:24.283" endtime="20230309 17:39:24.283"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create -k ${KEY_NAME} o3://${OM_SERVICE_ID}/s3v/encrypted</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:39:24.296" level="INFO">Running command 'ozone sh bucket create -k key1 o3://om/s3v/encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:39:38.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:39:38.463" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:39:24.287" endtime="20230309 17:39:38.463"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:39:38.465" level="INFO"/>
<status status="PASS" starttime="20230309 17:39:38.464" endtime="20230309 17:39:38.465"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:39:38.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:39:38.465" endtime="20230309 17:39:38.466"/>
</kw>
<status status="PASS" starttime="20230309 17:39:24.287" endtime="20230309 17:39:38.466"/>
</kw>
<msg timestamp="20230309 17:39:38.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:39:24.285" endtime="20230309 17:39:38.467"/>
</kw>
<status status="PASS" starttime="20230309 17:39:24.284" endtime="20230309 17:39:38.467"/>
</kw>
<status status="PASS" starttime="20230309 17:39:13.011" endtime="20230309 17:39:38.468"/>
</kw>
<status status="PASS" starttime="20230309 17:39:13.010" endtime="20230309 17:39:38.468"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:39:38.468" endtime="20230309 17:39:38.469"/>
</kw>
<status status="PASS" starttime="20230309 17:38:58.465" endtime="20230309 17:39:38.469"/>
</kw>
<suite id="s1-s5-s1" name="Awss3" source="/opt/hadoop/smoketest/s3/awss3.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:39:38.491" level="INFO">${randStr} = 2010020417</msg>
<status status="PASS" starttime="20230309 17:39:38.490" endtime="20230309 17:39:38.491"/>
</kw>
<msg timestamp="20230309 17:39:38.491" level="INFO">${random} = ozone-test-2010020417</msg>
<status status="PASS" starttime="20230309 17:39:38.490" endtime="20230309 17:39:38.492"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:39:38.494" level="INFO">${PREFIX} = ozone-test-2010020417</msg>
<status status="PASS" starttime="20230309 17:39:38.492" endtime="20230309 17:39:38.494"/>
</kw>
<status status="PASS" starttime="20230309 17:39:38.489" endtime="20230309 17:39:38.494"/>
</kw>
<status status="PASS" starttime="20230309 17:39:38.489" endtime="20230309 17:39:38.494"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which aws</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:39:38.499" level="INFO">Running command 'which aws 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:39:38.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:39:38.504" level="INFO">${output} = /usr/local/bin/aws</msg>
<status status="PASS" starttime="20230309 17:39:38.495" endtime="20230309 17:39:38.504"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230309 17:39:38.505" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:39:38.504" endtime="20230309 17:39:38.506"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20230309 17:39:38.506" endtime="20230309 17:39:38.507"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230309 17:39:38.507" endtime="20230309 17:39:38.507"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20230309 17:39:38.507" endtime="20230309 17:39:38.507"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230309 17:39:38.508" endtime="20230309 17:39:38.508"/>
</kw>
<status status="PASS" starttime="20230309 17:39:38.495" endtime="20230309 17:39:38.508"/>
</kw>
<status status="PASS" starttime="20230309 17:39:38.494" endtime="20230309 17:39:38.508"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:39:38.517" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:39:38.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:39:38.523" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230309 17:39:38.513" endtime="20230309 17:39:38.523"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:39:38.525" level="INFO">s3g</msg>
<status status="PASS" starttime="20230309 17:39:38.524" endtime="20230309 17:39:38.525"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:39:38.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:39:38.525" endtime="20230309 17:39:38.526"/>
</kw>
<status status="PASS" starttime="20230309 17:39:38.512" endtime="20230309 17:39:38.527"/>
</kw>
<msg timestamp="20230309 17:39:38.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:39:38.512" endtime="20230309 17:39:38.528"/>
</kw>
<msg timestamp="20230309 17:39:38.528" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230309 17:39:38.511" endtime="20230309 17:39:38.528"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:39:38.532" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:39:38.528" endtime="20230309 17:39:38.532"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:39:38.539" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:39:38.607" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:39:38.607" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:39:38.535" endtime="20230309 17:39:38.607"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:39:38.609" level="INFO"/>
<status status="PASS" starttime="20230309 17:39:38.608" endtime="20230309 17:39:38.609"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:39:38.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:39:38.609" endtime="20230309 17:39:38.610"/>
</kw>
<status status="PASS" starttime="20230309 17:39:38.535" endtime="20230309 17:39:38.611"/>
</kw>
<msg timestamp="20230309 17:39:38.611" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:39:38.534" endtime="20230309 17:39:38.612"/>
</kw>
<status status="PASS" starttime="20230309 17:39:38.533" endtime="20230309 17:39:38.613"/>
</kw>
<status status="PASS" starttime="20230309 17:39:38.533" endtime="20230309 17:39:38.613"/>
</kw>
<status status="PASS" starttime="20230309 17:39:38.510" endtime="20230309 17:39:38.613"/>
</kw>
<status status="PASS" starttime="20230309 17:39:38.510" endtime="20230309 17:39:38.613"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:39:38.621" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:39:48.914" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:39:48.914" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:39:38.617" endtime="20230309 17:39:48.914"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:39:48.917" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:39:48.916" endtime="20230309 17:39:48.917"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:39:48.918" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:39:48.917" endtime="20230309 17:39:48.918"/>
</kw>
<status status="PASS" starttime="20230309 17:39:38.616" endtime="20230309 17:39:48.919"/>
</kw>
<msg timestamp="20230309 17:39:48.919" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:39:38.616" endtime="20230309 17:39:48.920"/>
</kw>
<msg timestamp="20230309 17:39:48.921" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:39:38.615" endtime="20230309 17:39:48.921"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230309 17:39:48.922" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230309 17:39:48.921" endtime="20230309 17:39:48.922"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20230309 17:39:48.923" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230309 17:39:48.922" endtime="20230309 17:39:48.923"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230309 17:39:48.924" level="INFO">${secret} = ['15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670']</msg>
<status status="PASS" starttime="20230309 17:39:48.923" endtime="20230309 17:39:48.924"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:39:48.926" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:39:48.924" endtime="20230309 17:39:48.926"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:39:48.928" level="INFO">${secret} = 15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:39:48.927" endtime="20230309 17:39:48.928"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:39:48.942" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:39:49.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:39:49.829" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:39:48.938" endtime="20230309 17:39:49.829"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:39:49.831" level="INFO"/>
<status status="PASS" starttime="20230309 17:39:49.830" endtime="20230309 17:39:49.831"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:39:49.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:39:49.832" endtime="20230309 17:39:49.833"/>
</kw>
<status status="PASS" starttime="20230309 17:39:48.931" endtime="20230309 17:39:49.834"/>
</kw>
<msg timestamp="20230309 17:39:49.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:39:48.930" endtime="20230309 17:39:49.837"/>
</kw>
<status status="PASS" starttime="20230309 17:39:48.929" endtime="20230309 17:39:49.838"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:39:49.844" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:39:50.756" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:39:50.756" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:39:49.840" endtime="20230309 17:39:50.756"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:39:50.758" level="INFO"/>
<status status="PASS" starttime="20230309 17:39:50.757" endtime="20230309 17:39:50.758"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:39:50.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:39:50.758" endtime="20230309 17:39:50.759"/>
</kw>
<status status="PASS" starttime="20230309 17:39:49.839" endtime="20230309 17:39:50.760"/>
</kw>
<msg timestamp="20230309 17:39:50.760" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:39:49.838" endtime="20230309 17:39:50.765"/>
</kw>
<status status="PASS" starttime="20230309 17:39:49.838" endtime="20230309 17:39:50.765"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:39:50.774" level="INFO">Running command 'aws configure set aws_secret_access_key 15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:39:51.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:39:51.651" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:39:50.768" endtime="20230309 17:39:51.651"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:39:51.653" level="INFO"/>
<status status="PASS" starttime="20230309 17:39:51.652" endtime="20230309 17:39:51.653"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:39:51.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:39:51.653" endtime="20230309 17:39:51.654"/>
</kw>
<status status="PASS" starttime="20230309 17:39:50.767" endtime="20230309 17:39:51.655"/>
</kw>
<msg timestamp="20230309 17:39:51.656" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:39:50.767" endtime="20230309 17:39:51.657"/>
</kw>
<status status="PASS" starttime="20230309 17:39:50.765" endtime="20230309 17:39:51.658"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:39:51.665" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:39:52.553" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:39:52.553" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:39:51.661" endtime="20230309 17:39:52.553"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:39:52.555" level="INFO"/>
<status status="PASS" starttime="20230309 17:39:52.554" endtime="20230309 17:39:52.555"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:39:52.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:39:52.555" endtime="20230309 17:39:52.556"/>
</kw>
<status status="PASS" starttime="20230309 17:39:51.660" endtime="20230309 17:39:52.557"/>
</kw>
<msg timestamp="20230309 17:39:52.557" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:39:51.659" endtime="20230309 17:39:52.558"/>
</kw>
<status status="PASS" starttime="20230309 17:39:51.658" endtime="20230309 17:39:52.558"/>
</kw>
<status status="PASS" starttime="20230309 17:39:38.614" endtime="20230309 17:39:52.558"/>
</kw>
<status status="PASS" starttime="20230309 17:39:38.614" endtime="20230309 17:39:52.558"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:39:52.559" endtime="20230309 17:39:52.559"/>
</kw>
<status status="PASS" starttime="20230309 17:39:38.509" endtime="20230309 17:39:52.560"/>
</kw>
<status status="PASS" starttime="20230309 17:39:38.508" endtime="20230309 17:39:52.564"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230309 17:39:52.564" endtime="20230309 17:39:52.565"/>
</kw>
<msg timestamp="20230309 17:39:52.565" level="INFO">${BUCKET} = encrypted</msg>
<status status="PASS" starttime="20230309 17:39:52.564" endtime="20230309 17:39:52.565"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:39:52.567" level="INFO">${BUCKET} = encrypted</msg>
<status status="PASS" starttime="20230309 17:39:52.565" endtime="20230309 17:39:52.567"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:39:52.567" endtime="20230309 17:39:52.567"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create encrypted bucket" library="commonawslib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:39:52.569" endtime="20230309 17:39:52.570"/>
</kw>
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/encrypted</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:39:52.581" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:40:05.532" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:40:05.532" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "s3v",
  "name" : "encrypted",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023-03-09T17:39:3...</msg>
<status status="PASS" starttime="20230309 17:39:52.571" endtime="20230309 17:40:05.532"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:40:05.533" endtime="20230309 17:40:05.534"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:40:05.535" endtime="20230309 17:40:05.535"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:40:05.536" endtime="20230309 17:40:05.537"/>
</kw>
<msg timestamp="20230309 17:40:05.538" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20230309 17:39:52.570" endtime="20230309 17:40:05.538"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230309 17:40:05.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:40:05.538" endtime="20230309 17:40:05.540"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create -k ${KEY_NAME} o3://${OM_SERVICE_ID}/s3v/encrypted</arg>
<status status="NOT RUN" starttime="20230309 17:40:05.541" endtime="20230309 17:40:05.541"/>
</kw>
<status status="PASS" starttime="20230309 17:39:52.568" endtime="20230309 17:40:05.541"/>
</kw>
<status status="PASS" starttime="20230309 17:39:52.567" endtime="20230309 17:40:05.542"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:40:05.542" endtime="20230309 17:40:05.542"/>
</kw>
<status status="PASS" starttime="20230309 17:39:38.488" endtime="20230309 17:40:05.543"/>
</kw>
<test id="s1-s5-s1-t1" name="File upload and directory list" line="31">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:40:05.559" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20230309 17:40:05.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:40:05.566" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:40:05.550" endtime="20230309 17:40:05.566"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:40:05.567" level="INFO"/>
<status status="PASS" starttime="20230309 17:40:05.566" endtime="20230309 17:40:05.568"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:40:05.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:40:05.568" endtime="20230309 17:40:05.569"/>
</kw>
<status status="PASS" starttime="20230309 17:40:05.549" endtime="20230309 17:40:05.570"/>
</kw>
<msg timestamp="20230309 17:40:05.570" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:40:05.548" endtime="20230309 17:40:05.570"/>
</kw>
<status status="PASS" starttime="20230309 17:40:05.547" endtime="20230309 17:40:05.571"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:40:05.576" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:40:07.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:40:07.694" level="INFO">${output} = Completed 29 Bytes/29 Bytes (28 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/testfile            </msg>
<status status="PASS" starttime="20230309 17:40:05.573" endtime="20230309 17:40:07.694"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:40:07.696" level="INFO">Completed 29 Bytes/29 Bytes (28 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/testfile            </msg>
<status status="PASS" starttime="20230309 17:40:07.695" endtime="20230309 17:40:07.696"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:40:07.697" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:40:07.696" endtime="20230309 17:40:07.697"/>
</kw>
<status status="PASS" starttime="20230309 17:40:05.573" endtime="20230309 17:40:07.698"/>
</kw>
<msg timestamp="20230309 17:40:07.698" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:40:05.572" endtime="20230309 17:40:07.699"/>
</kw>
<msg timestamp="20230309 17:40:07.699" level="INFO">${output} = Completed 29 Bytes/29 Bytes (28 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/testfile            </msg>
<status status="PASS" starttime="20230309 17:40:05.572" endtime="20230309 17:40:07.699"/>
</kw>
<msg timestamp="20230309 17:40:07.699" level="INFO">${result} = Completed 29 Bytes/29 Bytes (28 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/testfile            </msg>
<status status="PASS" starttime="20230309 17:40:05.571" endtime="20230309 17:40:07.700"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>upload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:40:07.700" endtime="20230309 17:40:07.700"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/dir1/dir2/file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:40:07.709" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://encrypted/dir1/dir2/file 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:40:08.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:40:08.930" level="INFO">${output} = Completed 29 Bytes/29 Bytes (144 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/dir1/dir2/file       </msg>
<status status="PASS" starttime="20230309 17:40:07.705" endtime="20230309 17:40:08.931"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:40:08.933" level="INFO">Completed 29 Bytes/29 Bytes (144 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/dir1/dir2/file       </msg>
<status status="PASS" starttime="20230309 17:40:08.931" endtime="20230309 17:40:08.933"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:40:08.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:40:08.933" endtime="20230309 17:40:08.934"/>
</kw>
<status status="PASS" starttime="20230309 17:40:07.704" endtime="20230309 17:40:08.935"/>
</kw>
<msg timestamp="20230309 17:40:08.935" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:40:07.703" endtime="20230309 17:40:08.936"/>
</kw>
<msg timestamp="20230309 17:40:08.936" level="INFO">${output} = Completed 29 Bytes/29 Bytes (144 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/dir1/dir2/file       </msg>
<status status="PASS" starttime="20230309 17:40:07.702" endtime="20230309 17:40:08.937"/>
</kw>
<msg timestamp="20230309 17:40:08.939" level="INFO">${result} = Completed 29 Bytes/29 Bytes (144 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/dir1/dir2/file       </msg>
<status status="PASS" starttime="20230309 17:40:07.701" endtime="20230309 17:40:08.939"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>upload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:40:08.940" endtime="20230309 17:40:08.940"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:40:08.950" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:40:10.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:40:10.103" level="INFO">${output} =                            PRE dir1/
2023-03-09 17:40:07         29 testfile</msg>
<status status="PASS" starttime="20230309 17:40:08.946" endtime="20230309 17:40:10.103"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:40:10.105" level="INFO">                           PRE dir1/
2023-03-09 17:40:07         29 testfile</msg>
<status status="PASS" starttime="20230309 17:40:10.104" endtime="20230309 17:40:10.105"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:40:10.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:40:10.105" endtime="20230309 17:40:10.106"/>
</kw>
<status status="PASS" starttime="20230309 17:40:08.945" endtime="20230309 17:40:10.107"/>
</kw>
<msg timestamp="20230309 17:40:10.107" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:40:08.944" endtime="20230309 17:40:10.108"/>
</kw>
<msg timestamp="20230309 17:40:10.108" level="INFO">${output} =                            PRE dir1/
2023-03-09 17:40:07         29 testfile</msg>
<status status="PASS" starttime="20230309 17:40:08.942" endtime="20230309 17:40:10.108"/>
</kw>
<msg timestamp="20230309 17:40:10.109" level="INFO">${result} =                            PRE dir1/
2023-03-09 17:40:07         29 testfile</msg>
<status status="PASS" starttime="20230309 17:40:08.941" endtime="20230309 17:40:10.109"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:40:10.109" endtime="20230309 17:40:10.110"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:40:10.110" endtime="20230309 17:40:10.110"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:40:10.111" endtime="20230309 17:40:10.111"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/dir1/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:40:10.118" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://encrypted/dir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:40:11.159" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:40:11.159" level="INFO">${output} =                            PRE dir2/</msg>
<status status="PASS" starttime="20230309 17:40:10.115" endtime="20230309 17:40:11.159"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:40:11.161" level="INFO">                           PRE dir2/</msg>
<status status="PASS" starttime="20230309 17:40:11.160" endtime="20230309 17:40:11.161"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:40:11.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:40:11.161" endtime="20230309 17:40:11.162"/>
</kw>
<status status="PASS" starttime="20230309 17:40:10.114" endtime="20230309 17:40:11.162"/>
</kw>
<msg timestamp="20230309 17:40:11.163" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:40:10.114" endtime="20230309 17:40:11.163"/>
</kw>
<msg timestamp="20230309 17:40:11.164" level="INFO">${output} =                            PRE dir2/</msg>
<status status="PASS" starttime="20230309 17:40:10.113" endtime="20230309 17:40:11.165"/>
</kw>
<msg timestamp="20230309 17:40:11.166" level="INFO">${result} =                            PRE dir2/</msg>
<status status="PASS" starttime="20230309 17:40:10.111" endtime="20230309 17:40:11.166"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:40:11.166" endtime="20230309 17:40:11.167"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:40:11.169" endtime="20230309 17:40:11.172"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:40:11.172" endtime="20230309 17:40:11.173"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/dir1/dir2/file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:40:11.184" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://encrypted/dir1/dir2/file 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:40:12.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:40:12.315" level="INFO">${output} = 2023-03-09 17:40:08         29 file</msg>
<status status="PASS" starttime="20230309 17:40:11.178" endtime="20230309 17:40:12.315"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:40:12.317" level="INFO">2023-03-09 17:40:08         29 file</msg>
<status status="PASS" starttime="20230309 17:40:12.316" endtime="20230309 17:40:12.317"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:40:12.318" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:40:12.317" endtime="20230309 17:40:12.318"/>
</kw>
<status status="PASS" starttime="20230309 17:40:11.177" endtime="20230309 17:40:12.319"/>
</kw>
<msg timestamp="20230309 17:40:12.319" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:40:11.176" endtime="20230309 17:40:12.320"/>
</kw>
<msg timestamp="20230309 17:40:12.320" level="INFO">${output} = 2023-03-09 17:40:08         29 file</msg>
<status status="PASS" starttime="20230309 17:40:11.175" endtime="20230309 17:40:12.320"/>
</kw>
<msg timestamp="20230309 17:40:12.320" level="INFO">${result} = 2023-03-09 17:40:08         29 file</msg>
<status status="PASS" starttime="20230309 17:40:11.173" endtime="20230309 17:40:12.321"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:40:12.321" endtime="20230309 17:40:12.322"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:40:12.322" endtime="20230309 17:40:12.323"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>file</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:40:12.323" endtime="20230309 17:40:12.324"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:40:05.544" endtime="20230309 17:40:12.324"/>
</test>
<test id="s1-s5-s1-t2" name="File upload with special chars" line="50">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:40:12.335" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20230309 17:40:12.341" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:40:12.341" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:40:12.331" endtime="20230309 17:40:12.341"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:40:12.343" level="INFO"/>
<status status="PASS" starttime="20230309 17:40:12.342" endtime="20230309 17:40:12.343"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:40:12.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:40:12.343" endtime="20230309 17:40:12.344"/>
</kw>
<status status="PASS" starttime="20230309 17:40:12.331" endtime="20230309 17:40:12.344"/>
</kw>
<msg timestamp="20230309 17:40:12.344" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:40:12.330" endtime="20230309 17:40:12.345"/>
</kw>
<status status="PASS" starttime="20230309 17:40:12.329" endtime="20230309 17:40:12.345"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/specialchars/a+b</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:40:12.354" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://encrypted/specialchars/a+b 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:40:13.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:40:13.555" level="INFO">${output} = Completed 29 Bytes/29 Bytes (162 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/specialchars/a+b     </msg>
<status status="PASS" starttime="20230309 17:40:12.349" endtime="20230309 17:40:13.555"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:40:13.557" level="INFO">Completed 29 Bytes/29 Bytes (162 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/specialchars/a+b     </msg>
<status status="PASS" starttime="20230309 17:40:13.556" endtime="20230309 17:40:13.558"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:40:13.559" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:40:13.558" endtime="20230309 17:40:13.559"/>
</kw>
<status status="PASS" starttime="20230309 17:40:12.348" endtime="20230309 17:40:13.559"/>
</kw>
<msg timestamp="20230309 17:40:13.559" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:40:12.347" endtime="20230309 17:40:13.561"/>
</kw>
<msg timestamp="20230309 17:40:13.563" level="INFO">${output} = Completed 29 Bytes/29 Bytes (162 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/specialchars/a+b     </msg>
<status status="PASS" starttime="20230309 17:40:12.346" endtime="20230309 17:40:13.563"/>
</kw>
<msg timestamp="20230309 17:40:13.564" level="INFO">${result} = Completed 29 Bytes/29 Bytes (162 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/specialchars/a+b     </msg>
<status status="PASS" starttime="20230309 17:40:12.345" endtime="20230309 17:40:13.564"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>upload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:40:13.564" endtime="20230309 17:40:13.565"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/specialchars/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:40:13.578" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://encrypted/specialchars/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:40:14.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:40:14.669" level="INFO">${output} = 2023-03-09 17:40:13         29 a+b</msg>
<status status="PASS" starttime="20230309 17:40:13.572" endtime="20230309 17:40:14.670"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:40:14.671" level="INFO">2023-03-09 17:40:13         29 a+b</msg>
<status status="PASS" starttime="20230309 17:40:14.670" endtime="20230309 17:40:14.671"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:40:14.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:40:14.672" endtime="20230309 17:40:14.673"/>
</kw>
<status status="PASS" starttime="20230309 17:40:13.570" endtime="20230309 17:40:14.673"/>
</kw>
<msg timestamp="20230309 17:40:14.673" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:40:13.570" endtime="20230309 17:40:14.674"/>
</kw>
<msg timestamp="20230309 17:40:14.676" level="INFO">${output} = 2023-03-09 17:40:13         29 a+b</msg>
<status status="PASS" starttime="20230309 17:40:13.567" endtime="20230309 17:40:14.676"/>
</kw>
<msg timestamp="20230309 17:40:14.676" level="INFO">${result} = 2023-03-09 17:40:13         29 a+b</msg>
<status status="PASS" starttime="20230309 17:40:13.565" endtime="20230309 17:40:14.676"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>'a b'</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:40:14.676" endtime="20230309 17:40:14.677"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>a+b</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:40:14.677" endtime="20230309 17:40:14.678"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:40:12.326" endtime="20230309 17:40:14.678"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20230309 17:39:38.469" endtime="20230309 17:40:14.683"/>
</suite>
<suite id="s1-s5-s2" name="Boto3" source="/opt/hadoop/smoketest/s3/boto3.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:40:14.729" level="INFO">${randStr} = 6313129201</msg>
<status status="PASS" starttime="20230309 17:40:14.728" endtime="20230309 17:40:14.729"/>
</kw>
<msg timestamp="20230309 17:40:14.730" level="INFO">${random} = ozone-test-6313129201</msg>
<status status="PASS" starttime="20230309 17:40:14.727" endtime="20230309 17:40:14.730"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:40:14.732" level="INFO">${PREFIX} = ozone-test-6313129201</msg>
<status status="PASS" starttime="20230309 17:40:14.730" endtime="20230309 17:40:14.733"/>
</kw>
<status status="PASS" starttime="20230309 17:40:14.727" endtime="20230309 17:40:14.733"/>
</kw>
<status status="PASS" starttime="20230309 17:40:14.726" endtime="20230309 17:40:14.733"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which aws</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:40:14.739" level="INFO">Running command 'which aws 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:40:14.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:40:14.743" level="INFO">${output} = /usr/local/bin/aws</msg>
<status status="PASS" starttime="20230309 17:40:14.734" endtime="20230309 17:40:14.743"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230309 17:40:14.745" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:40:14.744" endtime="20230309 17:40:14.747"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20230309 17:40:14.747" endtime="20230309 17:40:14.747"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230309 17:40:14.747" endtime="20230309 17:40:14.747"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20230309 17:40:14.748" endtime="20230309 17:40:14.748"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230309 17:40:14.748" endtime="20230309 17:40:14.748"/>
</kw>
<status status="PASS" starttime="20230309 17:40:14.734" endtime="20230309 17:40:14.749"/>
</kw>
<status status="PASS" starttime="20230309 17:40:14.733" endtime="20230309 17:40:14.749"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:40:14.758" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:40:14.766" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:40:14.766" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230309 17:40:14.755" endtime="20230309 17:40:14.766"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:40:14.768" level="INFO">s3g</msg>
<status status="PASS" starttime="20230309 17:40:14.767" endtime="20230309 17:40:14.768"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:40:14.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:40:14.768" endtime="20230309 17:40:14.769"/>
</kw>
<status status="PASS" starttime="20230309 17:40:14.753" endtime="20230309 17:40:14.769"/>
</kw>
<msg timestamp="20230309 17:40:14.770" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:40:14.753" endtime="20230309 17:40:14.771"/>
</kw>
<msg timestamp="20230309 17:40:14.771" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230309 17:40:14.752" endtime="20230309 17:40:14.771"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:40:14.776" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:40:14.772" endtime="20230309 17:40:14.776"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:40:14.784" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:40:14.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:40:14.837" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:40:14.780" endtime="20230309 17:40:14.837"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:40:14.839" level="INFO"/>
<status status="PASS" starttime="20230309 17:40:14.838" endtime="20230309 17:40:14.840"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:40:14.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:40:14.840" endtime="20230309 17:40:14.840"/>
</kw>
<status status="PASS" starttime="20230309 17:40:14.779" endtime="20230309 17:40:14.841"/>
</kw>
<msg timestamp="20230309 17:40:14.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:40:14.778" endtime="20230309 17:40:14.842"/>
</kw>
<status status="PASS" starttime="20230309 17:40:14.777" endtime="20230309 17:40:14.843"/>
</kw>
<status status="PASS" starttime="20230309 17:40:14.776" endtime="20230309 17:40:14.843"/>
</kw>
<status status="PASS" starttime="20230309 17:40:14.751" endtime="20230309 17:40:14.843"/>
</kw>
<status status="PASS" starttime="20230309 17:40:14.750" endtime="20230309 17:40:14.843"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:40:14.856" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:40:24.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:40:24.248" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:40:14.851" endtime="20230309 17:40:24.248"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:40:24.250" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:40:24.249" endtime="20230309 17:40:24.250"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:40:24.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:40:24.250" endtime="20230309 17:40:24.253"/>
</kw>
<status status="PASS" starttime="20230309 17:40:14.850" endtime="20230309 17:40:24.253"/>
</kw>
<msg timestamp="20230309 17:40:24.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:40:14.849" endtime="20230309 17:40:24.254"/>
</kw>
<msg timestamp="20230309 17:40:24.254" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:40:14.847" endtime="20230309 17:40:24.254"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230309 17:40:24.255" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230309 17:40:24.255" endtime="20230309 17:40:24.255"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20230309 17:40:24.256" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230309 17:40:24.255" endtime="20230309 17:40:24.256"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230309 17:40:24.257" level="INFO">${secret} = ['15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670']</msg>
<status status="PASS" starttime="20230309 17:40:24.256" endtime="20230309 17:40:24.257"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:40:24.262" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:40:24.257" endtime="20230309 17:40:24.262"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:40:24.264" level="INFO">${secret} = 15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:40:24.262" endtime="20230309 17:40:24.264"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:40:24.271" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:40:25.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:40:25.167" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:40:24.266" endtime="20230309 17:40:25.167"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:40:25.168" level="INFO"/>
<status status="PASS" starttime="20230309 17:40:25.167" endtime="20230309 17:40:25.168"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:40:25.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:40:25.169" endtime="20230309 17:40:25.169"/>
</kw>
<status status="PASS" starttime="20230309 17:40:24.266" endtime="20230309 17:40:25.170"/>
</kw>
<msg timestamp="20230309 17:40:25.171" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:40:24.265" endtime="20230309 17:40:25.171"/>
</kw>
<status status="PASS" starttime="20230309 17:40:24.265" endtime="20230309 17:40:25.172"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:40:25.177" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:40:26.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:40:26.144" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:40:25.174" endtime="20230309 17:40:26.144"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:40:26.147" level="INFO"/>
<status status="PASS" starttime="20230309 17:40:26.145" endtime="20230309 17:40:26.147"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:40:26.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:40:26.147" endtime="20230309 17:40:26.148"/>
</kw>
<status status="PASS" starttime="20230309 17:40:25.174" endtime="20230309 17:40:26.148"/>
</kw>
<msg timestamp="20230309 17:40:26.148" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:40:25.173" endtime="20230309 17:40:26.149"/>
</kw>
<status status="PASS" starttime="20230309 17:40:25.172" endtime="20230309 17:40:26.149"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:40:26.156" level="INFO">Running command 'aws configure set aws_secret_access_key 15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:40:27.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:40:27.067" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:40:26.152" endtime="20230309 17:40:27.067"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:40:27.069" level="INFO"/>
<status status="PASS" starttime="20230309 17:40:27.068" endtime="20230309 17:40:27.069"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:40:27.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:40:27.069" endtime="20230309 17:40:27.070"/>
</kw>
<status status="PASS" starttime="20230309 17:40:26.151" endtime="20230309 17:40:27.070"/>
</kw>
<msg timestamp="20230309 17:40:27.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:40:26.150" endtime="20230309 17:40:27.071"/>
</kw>
<status status="PASS" starttime="20230309 17:40:26.149" endtime="20230309 17:40:27.072"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:40:27.079" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:40:27.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:40:27.957" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:40:27.076" endtime="20230309 17:40:27.957"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:40:27.959" level="INFO"/>
<status status="PASS" starttime="20230309 17:40:27.958" endtime="20230309 17:40:27.959"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:40:27.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:40:27.960" endtime="20230309 17:40:27.960"/>
</kw>
<status status="PASS" starttime="20230309 17:40:27.074" endtime="20230309 17:40:27.962"/>
</kw>
<msg timestamp="20230309 17:40:27.962" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:40:27.073" endtime="20230309 17:40:27.963"/>
</kw>
<status status="PASS" starttime="20230309 17:40:27.072" endtime="20230309 17:40:27.963"/>
</kw>
<status status="PASS" starttime="20230309 17:40:14.846" endtime="20230309 17:40:27.964"/>
</kw>
<status status="PASS" starttime="20230309 17:40:14.844" endtime="20230309 17:40:27.964"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:40:27.964" endtime="20230309 17:40:27.965"/>
</kw>
<status status="PASS" starttime="20230309 17:40:14.750" endtime="20230309 17:40:27.965"/>
</kw>
<status status="PASS" starttime="20230309 17:40:14.749" endtime="20230309 17:40:27.965"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230309 17:40:27.966" endtime="20230309 17:40:27.966"/>
</kw>
<msg timestamp="20230309 17:40:27.967" level="INFO">${BUCKET} = encrypted</msg>
<status status="PASS" starttime="20230309 17:40:27.965" endtime="20230309 17:40:27.967"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:40:27.967" level="INFO">${BUCKET} = encrypted</msg>
<status status="PASS" starttime="20230309 17:40:27.967" endtime="20230309 17:40:27.968"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:40:27.968" endtime="20230309 17:40:27.968"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create encrypted bucket" library="commonawslib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:40:27.970" endtime="20230309 17:40:27.970"/>
</kw>
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/encrypted</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:40:27.975" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:40:40.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:40:40.732" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "s3v",
  "name" : "encrypted",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 261,
  "usedNamespace" : 3,
  "creationTime" : "2023-03-09T17:39...</msg>
<status status="PASS" starttime="20230309 17:40:27.971" endtime="20230309 17:40:40.732"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:40:40.733" endtime="20230309 17:40:40.734"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:40:40.736" endtime="20230309 17:40:40.737"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:40:40.737" endtime="20230309 17:40:40.737"/>
</kw>
<msg timestamp="20230309 17:40:40.738" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20230309 17:40:27.971" endtime="20230309 17:40:40.738"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230309 17:40:40.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:40:40.738" endtime="20230309 17:40:40.740"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create -k ${KEY_NAME} o3://${OM_SERVICE_ID}/s3v/encrypted</arg>
<status status="NOT RUN" starttime="20230309 17:40:40.740" endtime="20230309 17:40:40.740"/>
</kw>
<status status="PASS" starttime="20230309 17:40:27.969" endtime="20230309 17:40:40.740"/>
</kw>
<status status="PASS" starttime="20230309 17:40:27.969" endtime="20230309 17:40:40.741"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:40:40.741" endtime="20230309 17:40:40.742"/>
</kw>
<status status="PASS" starttime="20230309 17:40:14.726" endtime="20230309 17:40:40.742"/>
</kw>
<test id="s1-s5-s2-t1" name="Boto3 Client Test" line="34">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>python3 ${S3_SMOKETEST_DIR}/boto_client.py ${ENDPOINT_URL} ${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:40:40.752" level="INFO">Running command 'python3 /opt/hadoop/smoketest/s3/boto_client.py http://s3g:9878 encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:40:52.021" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:40:52.022" level="INFO">${output} = test_create_bucket (__main__.TestBotoClient) ... ok
test_list_bucket (__main__.TestBotoClient) ... ok
test_head_bucket (__main__.TestBotoClient) ... ok
test_bucket_delete (__main__.TestBotoClient) ......</msg>
<status status="PASS" starttime="20230309 17:40:40.747" endtime="20230309 17:40:52.022"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:40:52.026" level="INFO">test_create_bucket (__main__.TestBotoClient) ... ok
test_list_bucket (__main__.TestBotoClient) ... ok
test_head_bucket (__main__.TestBotoClient) ... ok
test_bucket_delete (__main__.TestBotoClient) ... ok
test_upload_file (__main__.TestBotoClient) ... ok
test_download_file (__main__.TestBotoClient) ... ok
test_delete_objects (__main__.TestBotoClient) ... ok
test_head_object (__main__.TestBotoClient) ... ok
test_multi_uploads (__main__.TestBotoClient) ... ok

----------------------------------------------------------------------
Ran 9 tests in 10.693s

OK
{'ResponseMetadata': {'RequestId': '54767806-363b-40c2-b680-4e5fad2cc3c8', 'HostId': 'zIBkbfunMfeYXmo', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Thu, 09 Mar 2023 17:40:41 GMT', 'cache-control': 'no-cache', 'expires': 'Thu, 09 Mar 2023 17:40:41 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'location': 'http://s3g:9878/ozone-test-mpfazlivon', 'server': 'Ozone', 'x-amz-id-2': 'zIBkbfunMfeYXmo', 'x-amz-request-id': '54767806-363b-40c2-b680-4e5fad2cc3c8', 'content-length': '0'}, 'RetryAttempts': 0}, 'Location': 'http://s3g:9878/ozone-test-mpfazlivon'}
None
None
None
{'ResponseMetadata': {'RequestId': '75be5e72-bf86-4241-9e2a-cc849abf4a9c', 'HostId': 'CpJM4FFnRm9u', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Thu, 09 Mar 2023 17:40:46 GMT', 'cache-control': 'no-cache', 'expires': 'Thu, 09 Mar 2023 17:40:46 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'location': 'http://s3g:9878/bucket-iakidlftmk', 'server': 'Ozone', 'x-amz-id-2': 'CpJM4FFnRm9u', 'x-amz-request-id': '75be5e72-bf86-4241-9e2a-cc849abf4a9c', 'content-length': '0'}, 'RetryAttempts': 0}, 'Location': 'http://s3g:9878/bucket-iakidlftmk'}
{'ResponseMetadata': {'RequestId': '34d8a73d-3087-42fd-86e5-b0042a62ea7c', 'HostId': 'xJKiM70QZjXOu', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Thu, 09 Mar 2023 17:40:46 GMT', 'cache-control': 'no-cache', 'expires': 'Thu, 09 Mar 2023 17:40:46 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'xJKiM70QZjXOu', 'x-amz-request-id': '34d8a73d-3087-42fd-86e5-b0042a62ea7c', 'content-length': '675'}, 'RetryAttempts': 0}, 'Buckets': [{'Name': 'bucket-iakidlftmk', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 40, 46, 527000, tzinfo=tzlocal())}, {'Name': 'bucket-ozone-test-2530672355', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 11, 37, 528000, tzinfo=tzlocal())}, {'Name': 'bucket-test123', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 11, 38, 450000, tzinfo=tzlocal())}, {'Name': 'encrypted', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 39, 38, 26000, tzinfo=tzlocal())}, {'Name': 'ozone-test-mpfazlivon', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 40, 41, 551000, tzinfo=tzlocal())}]}
{'ResponseMetadata': {'RequestId': '3d8173b7-d573-4da5-8f6a-85195f2502e0', 'HostId': 'WYc3x8XiqATPU', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Thu, 09 Mar 2023 17:40:46 GMT', 'cache-control': 'no-cache', 'expires': 'Thu, 09 Mar 2023 17:40:46 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'WYc3x8XiqATPU', 'x-amz-request-id': '3d8173b7-d573-4da5-8f6a-85195f2502e0', 'content-length': '0'}, 'RetryAttempts': 0}}
{'ResponseMetadata': {'RequestId': '98c95054-6f92-42f3-82f7-032a01f25128', 'HostId': 'qNzFBkRDST09', 'HTTPStatusCode': 204, 'HTTPHeaders': {'date': 'Thu, 09 Mar 2023 17:40:46 GMT', 'cache-control': 'no-cache', 'expires': 'Thu, 09 Mar 2023 17:40:46 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'qNzFBkRDST09', 'x-amz-request-id': '98c95054-6f92-42f3-82f7-032a01f25128'}, 'RetryAttempts': 0}}
{'ResponseMetadata': {'RequestId': 'eb69f11d-1689-42c3-98b3-8e87659b9c7f', 'HostId': '6cMzKsmyjqz', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Thu, 09 Mar 2023 17:40:46 GMT', 'cache-control': 'no-cache', 'expires': 'Thu, 09 Mar 2023 17:40:46 GMT', 'pragma': 'no-cache', 'content-type': 'binary/octet-stream', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'etag': '2023-03-09T17:40:46.917Z', 'last-modified': 'Thu, 09 Mar 2023 17:40:46 GMT', 'server': 'Ozone', 'x-amz-id-2': '6cMzKsmyjqz', 'x-amz-request-id': 'eb69f11d-1689-42c3-98b3-8e87659b9c7f', 'content-length': '3879'}, 'RetryAttempts': 0}, 'LastModified': datetime.datetime(2023, 3, 9, 17, 40, 46, tzinfo=tzutc()), 'ContentLength': 3879, 'ETag': '2023-03-09T17:40:46.917Z', 'CacheControl': 'no-cache', 'ContentType': 'binary/octet-stream', 'Expires': datetime.datetime(2023, 3, 9, 17, 40, 46, tzinfo=tzutc()), 'Metadata': {}}
{'ResponseMetadata': {'RequestId': '6e67674a-0ccf-4be2-a473-a77a1e11ff34', 'HostId': 'MPXPgT19XY', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Thu, 09 Mar 2023 17:40:47 GMT', 'cache-control': 'no-cache', 'expires': 'Thu, 09 Mar 2023 17:40:47 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'MPXPgT19XY', 'x-amz-request-id': '6e67674a-0ccf-4be2-a473-a77a1e11ff34', 'content-length': '212'}, 'RetryAttempts': 0}, 'Deleted': [{'Key': 'README4.md'}, {'Key': 'README3.md'}]}
{'ResponseMetadata': {'RequestId': '5b7f7d24-346a-44bb-9ba0-90dc7270855a', 'HostId': 'hFgGWR9imQV7L', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Thu, 09 Mar 2023 17:40:47 GMT', 'cache-control': 'no-cache', 'expires': 'Thu, 09 Mar 2023 17:40:47 GMT', 'pragma': 'no-cache', 'content-type': 'binary/octet-stream', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'etag': '2023-03-09T17:40:42.333Z', 'last-modified': 'Thu, 09 Mar 2023 17:40:42 GMT', 'server': 'Ozone', 'x-amz-id-2': 'hFgGWR9imQV7L', 'x-amz-request-id': '5b7f7d24-346a-44bb-9ba0-90dc7270855a', 'content-length': '3879'}, 'RetryAttempts': 0}, 'LastModified': datetime.datetime(2023, 3, 9, 17, 40, 42, tzinfo=tzutc()), 'ContentLength': 3879, 'ETag': '2023-03-09T17:40:42.333Z', 'CacheControl': 'no-cache', 'ContentType': 'binary/octet-stream', 'Expires': datetime.datetime(2023, 3, 9, 17, 40, 47, tzinfo=tzutc()), 'Metadata': {}}
{'ResponseMetadata': {'RequestId': '1bf96cf2-cf02-4adf-96a6-f6af763a92b3', 'HostId': 'IhaElgHv', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Thu, 09 Mar 2023 17:40:47 GMT', 'cache-control': 'no-cache', 'expires': 'Thu, 09 Mar 2023 17:40:47 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'IhaElgHv', 'x-amz-request-id': '1bf96cf2-cf02-4adf-96a6-f6af763a92b3', 'content-length': '289'}, 'RetryAttempts': 0}, 'Bucket': 'encrypted', 'Key': 'ntezgzmmkl', 'UploadId': '8886a956-4942-41a6-94bd-dd3ff6392455-109994550741762109'}
{'ResponseMetadata': {'RequestId': '55d3f76a-539b-46cf-85d5-b2138adfb6f1', 'HostId': '0AtetT2DX', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Thu, 09 Mar 2023 17:40:51 GMT', 'cache-control': 'no-cache', 'expires': 'Thu, 09 Mar 2023 17:40:51 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': '0AtetT2DX', 'x-amz-request-id': '55d3f76a-539b-46cf-85d5-b2138adfb6f1', 'content-length': '320'}, 'RetryAttempts': 0}, 'Location': 'encrypted', 'Bucket': 'encrypted', 'Key': 'ntezgzmmkl', 'ETag': '16a9781f3bb755ef412cfd3deb9838f5585a017b05f4eeb93919755d89855cab'}
Boto3 Client Test PASSED!</msg>
<status status="PASS" starttime="20230309 17:40:52.023" endtime="20230309 17:40:52.027"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:40:52.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:40:52.027" endtime="20230309 17:40:52.029"/>
</kw>
<status status="PASS" starttime="20230309 17:40:40.746" endtime="20230309 17:40:52.030"/>
</kw>
<msg timestamp="20230309 17:40:52.035" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:40:40.746" endtime="20230309 17:40:52.036"/>
</kw>
<msg timestamp="20230309 17:40:52.038" level="INFO">${result} = test_create_bucket (__main__.TestBotoClient) ... ok
test_list_bucket (__main__.TestBotoClient) ... ok
test_head_bucket (__main__.TestBotoClient) ... ok
test_bucket_delete (__main__.TestBotoClient) ......</msg>
<status status="PASS" starttime="20230309 17:40:40.744" endtime="20230309 17:40:52.038"/>
</kw>
<timeout value="15 minutes"/>
<status status="PASS" starttime="20230309 17:40:40.743" endtime="20230309 17:40:52.039"/>
</test>
<doc>S3 gateway test with Boto3 Client</doc>
<status status="PASS" starttime="20230309 17:40:14.688" endtime="20230309 17:40:52.041"/>
</suite>
<suite id="s1-s5-s3" name="Bucketcreate" source="/opt/hadoop/smoketest/s3/bucketcreate.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:40:52.085" level="INFO">${randStr} = 9925750966</msg>
<status status="PASS" starttime="20230309 17:40:52.085" endtime="20230309 17:40:52.085"/>
</kw>
<msg timestamp="20230309 17:40:52.086" level="INFO">${random} = ozone-test-9925750966</msg>
<status status="PASS" starttime="20230309 17:40:52.084" endtime="20230309 17:40:52.086"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:40:52.092" level="INFO">${PREFIX} = ozone-test-9925750966</msg>
<status status="PASS" starttime="20230309 17:40:52.086" endtime="20230309 17:40:52.092"/>
</kw>
<status status="PASS" starttime="20230309 17:40:52.083" endtime="20230309 17:40:52.092"/>
</kw>
<status status="PASS" starttime="20230309 17:40:52.082" endtime="20230309 17:40:52.092"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which aws</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:40:52.100" level="INFO">Running command 'which aws 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:40:52.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:40:52.110" level="INFO">${output} = /usr/local/bin/aws</msg>
<status status="PASS" starttime="20230309 17:40:52.093" endtime="20230309 17:40:52.110"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230309 17:40:52.112" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:40:52.111" endtime="20230309 17:40:52.113"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20230309 17:40:52.114" endtime="20230309 17:40:52.115"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230309 17:40:52.115" endtime="20230309 17:40:52.115"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20230309 17:40:52.115" endtime="20230309 17:40:52.115"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230309 17:40:52.116" endtime="20230309 17:40:52.116"/>
</kw>
<status status="PASS" starttime="20230309 17:40:52.092" endtime="20230309 17:40:52.118"/>
</kw>
<status status="PASS" starttime="20230309 17:40:52.092" endtime="20230309 17:40:52.118"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:40:52.128" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:40:52.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:40:52.138" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230309 17:40:52.123" endtime="20230309 17:40:52.138"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:40:52.140" level="INFO">s3g</msg>
<status status="PASS" starttime="20230309 17:40:52.139" endtime="20230309 17:40:52.140"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:40:52.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:40:52.140" endtime="20230309 17:40:52.141"/>
</kw>
<status status="PASS" starttime="20230309 17:40:52.122" endtime="20230309 17:40:52.142"/>
</kw>
<msg timestamp="20230309 17:40:52.142" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:40:52.122" endtime="20230309 17:40:52.144"/>
</kw>
<msg timestamp="20230309 17:40:52.144" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230309 17:40:52.121" endtime="20230309 17:40:52.145"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:40:52.148" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:40:52.145" endtime="20230309 17:40:52.148"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:40:52.155" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:40:52.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:40:52.206" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:40:52.152" endtime="20230309 17:40:52.206"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:40:52.208" level="INFO"/>
<status status="PASS" starttime="20230309 17:40:52.207" endtime="20230309 17:40:52.208"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:40:52.209" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:40:52.208" endtime="20230309 17:40:52.209"/>
</kw>
<status status="PASS" starttime="20230309 17:40:52.151" endtime="20230309 17:40:52.209"/>
</kw>
<msg timestamp="20230309 17:40:52.209" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:40:52.151" endtime="20230309 17:40:52.211"/>
</kw>
<status status="PASS" starttime="20230309 17:40:52.149" endtime="20230309 17:40:52.211"/>
</kw>
<status status="PASS" starttime="20230309 17:40:52.148" endtime="20230309 17:40:52.212"/>
</kw>
<status status="PASS" starttime="20230309 17:40:52.120" endtime="20230309 17:40:52.212"/>
</kw>
<status status="PASS" starttime="20230309 17:40:52.120" endtime="20230309 17:40:52.213"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:40:52.224" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:41:03.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:41:03.007" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:40:52.219" endtime="20230309 17:41:03.007"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:41:03.008" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:41:03.007" endtime="20230309 17:41:03.008"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:41:03.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:41:03.009" endtime="20230309 17:41:03.009"/>
</kw>
<status status="PASS" starttime="20230309 17:40:52.218" endtime="20230309 17:41:03.010"/>
</kw>
<msg timestamp="20230309 17:41:03.010" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:40:52.217" endtime="20230309 17:41:03.011"/>
</kw>
<msg timestamp="20230309 17:41:03.011" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:40:52.215" endtime="20230309 17:41:03.011"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230309 17:41:03.012" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230309 17:41:03.011" endtime="20230309 17:41:03.012"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20230309 17:41:03.013" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230309 17:41:03.012" endtime="20230309 17:41:03.013"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230309 17:41:03.014" level="INFO">${secret} = ['15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670']</msg>
<status status="PASS" starttime="20230309 17:41:03.013" endtime="20230309 17:41:03.014"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:41:03.015" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:41:03.014" endtime="20230309 17:41:03.016"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:41:03.017" level="INFO">${secret} = 15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:41:03.016" endtime="20230309 17:41:03.017"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:41:03.023" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:41:03.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:41:03.965" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:41:03.019" endtime="20230309 17:41:03.965"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:41:03.967" level="INFO"/>
<status status="PASS" starttime="20230309 17:41:03.966" endtime="20230309 17:41:03.967"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:41:03.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:41:03.967" endtime="20230309 17:41:03.969"/>
</kw>
<status status="PASS" starttime="20230309 17:41:03.018" endtime="20230309 17:41:03.970"/>
</kw>
<msg timestamp="20230309 17:41:03.970" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:41:03.018" endtime="20230309 17:41:03.971"/>
</kw>
<status status="PASS" starttime="20230309 17:41:03.017" endtime="20230309 17:41:03.971"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:41:03.977" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:41:04.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:41:04.985" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:41:03.974" endtime="20230309 17:41:04.985"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:41:04.987" level="INFO"/>
<status status="PASS" starttime="20230309 17:41:04.986" endtime="20230309 17:41:04.987"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:41:04.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:41:04.987" endtime="20230309 17:41:04.988"/>
</kw>
<status status="PASS" starttime="20230309 17:41:03.974" endtime="20230309 17:41:04.988"/>
</kw>
<msg timestamp="20230309 17:41:04.988" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:41:03.972" endtime="20230309 17:41:04.989"/>
</kw>
<status status="PASS" starttime="20230309 17:41:03.971" endtime="20230309 17:41:04.990"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:41:04.996" level="INFO">Running command 'aws configure set aws_secret_access_key 15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:41:05.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:41:05.986" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:41:04.992" endtime="20230309 17:41:05.986"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:41:05.988" level="INFO"/>
<status status="PASS" starttime="20230309 17:41:05.987" endtime="20230309 17:41:05.988"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:41:05.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:41:05.988" endtime="20230309 17:41:05.989"/>
</kw>
<status status="PASS" starttime="20230309 17:41:04.992" endtime="20230309 17:41:05.990"/>
</kw>
<msg timestamp="20230309 17:41:05.990" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:41:04.991" endtime="20230309 17:41:05.991"/>
</kw>
<status status="PASS" starttime="20230309 17:41:04.990" endtime="20230309 17:41:05.992"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:41:06.001" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:41:06.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:41:06.906" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:41:05.996" endtime="20230309 17:41:06.906"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:41:06.908" level="INFO"/>
<status status="PASS" starttime="20230309 17:41:06.907" endtime="20230309 17:41:06.908"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:41:06.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:41:06.909" endtime="20230309 17:41:06.910"/>
</kw>
<status status="PASS" starttime="20230309 17:41:05.995" endtime="20230309 17:41:06.911"/>
</kw>
<msg timestamp="20230309 17:41:06.911" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:41:05.994" endtime="20230309 17:41:06.912"/>
</kw>
<status status="PASS" starttime="20230309 17:41:05.992" endtime="20230309 17:41:06.913"/>
</kw>
<status status="PASS" starttime="20230309 17:40:52.214" endtime="20230309 17:41:06.913"/>
</kw>
<status status="PASS" starttime="20230309 17:40:52.213" endtime="20230309 17:41:06.913"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:41:06.913" endtime="20230309 17:41:06.915"/>
</kw>
<status status="PASS" starttime="20230309 17:40:52.119" endtime="20230309 17:41:06.915"/>
</kw>
<status status="PASS" starttime="20230309 17:40:52.118" endtime="20230309 17:41:06.915"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230309 17:41:06.916" endtime="20230309 17:41:06.918"/>
</kw>
<msg timestamp="20230309 17:41:06.918" level="INFO">${BUCKET} = encrypted</msg>
<status status="PASS" starttime="20230309 17:41:06.915" endtime="20230309 17:41:06.918"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:41:06.919" level="INFO">${BUCKET} = encrypted</msg>
<status status="PASS" starttime="20230309 17:41:06.919" endtime="20230309 17:41:06.919"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:41:06.919" endtime="20230309 17:41:06.920"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create encrypted bucket" library="commonawslib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:41:06.921" endtime="20230309 17:41:06.921"/>
</kw>
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/encrypted</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:41:06.926" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:41:20.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:41:20.851" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "s3v",
  "name" : "encrypted",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 125852667,
  "usedNamespace" : 8,
  "creationTime" : "2023-03-09...</msg>
<status status="PASS" starttime="20230309 17:41:06.923" endtime="20230309 17:41:20.851"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:41:20.851" endtime="20230309 17:41:20.852"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:41:20.852" endtime="20230309 17:41:20.853"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:41:20.853" endtime="20230309 17:41:20.854"/>
</kw>
<msg timestamp="20230309 17:41:20.855" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20230309 17:41:06.922" endtime="20230309 17:41:20.855"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230309 17:41:20.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:41:20.855" endtime="20230309 17:41:20.857"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create -k ${KEY_NAME} o3://${OM_SERVICE_ID}/s3v/encrypted</arg>
<status status="NOT RUN" starttime="20230309 17:41:20.857" endtime="20230309 17:41:20.857"/>
</kw>
<status status="PASS" starttime="20230309 17:41:06.920" endtime="20230309 17:41:20.858"/>
</kw>
<status status="PASS" starttime="20230309 17:41:06.920" endtime="20230309 17:41:20.858"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:41:20.858" endtime="20230309 17:41:20.859"/>
</kw>
<status status="PASS" starttime="20230309 17:40:52.076" endtime="20230309 17:41:20.859"/>
</kw>
<test id="s1-s5-s3-t1" name="Create new bucket" line="32">
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:41:20.864" level="INFO">${randStr} = 0854448483</msg>
<status status="PASS" starttime="20230309 17:41:20.863" endtime="20230309 17:41:20.864"/>
</kw>
<msg timestamp="20230309 17:41:20.865" level="INFO">${postfix} = ozone-test-0854448483</msg>
<status status="PASS" starttime="20230309 17:41:20.863" endtime="20230309 17:41:20.865"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:41:20.866" level="INFO">${bucket} = bucket-ozone-test-0854448483</msg>
<status status="PASS" starttime="20230309 17:41:20.865" endtime="20230309 17:41:20.866"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:41:20.874" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-0854448483 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:41:22.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:41:22.015" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-0854448483"
}</msg>
<status status="PASS" starttime="20230309 17:41:20.870" endtime="20230309 17:41:22.015"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:41:22.018" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-0854448483"
}</msg>
<status status="PASS" starttime="20230309 17:41:22.017" endtime="20230309 17:41:22.018"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:41:22.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:41:22.018" endtime="20230309 17:41:22.021"/>
</kw>
<status status="PASS" starttime="20230309 17:41:20.869" endtime="20230309 17:41:22.021"/>
</kw>
<msg timestamp="20230309 17:41:22.021" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:41:20.869" endtime="20230309 17:41:22.023"/>
</kw>
<msg timestamp="20230309 17:41:22.023" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-0854448483"
}</msg>
<status status="PASS" starttime="20230309 17:41:20.868" endtime="20230309 17:41:22.023"/>
</kw>
<msg timestamp="20230309 17:41:22.024" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-0854448483"
}</msg>
<status status="PASS" starttime="20230309 17:41:20.867" endtime="20230309 17:41:22.024"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:41:22.025" endtime="20230309 17:41:22.025"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:41:22.025" endtime="20230309 17:41:22.027"/>
</kw>
<status status="PASS" starttime="20230309 17:41:20.866" endtime="20230309 17:41:22.027"/>
</kw>
<status status="PASS" starttime="20230309 17:41:20.862" endtime="20230309 17:41:22.027"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:41:20.860" endtime="20230309 17:41:22.028"/>
</test>
<test id="s1-s5-s3-t2" name="Create bucket which already exists" line="35">
<kw name="Create bucket" library="commonawslib">
<var>${bucket}</var>
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:41:22.033" level="INFO">${randStr} = 2540702007</msg>
<status status="PASS" starttime="20230309 17:41:22.032" endtime="20230309 17:41:22.033"/>
</kw>
<msg timestamp="20230309 17:41:22.034" level="INFO">${postfix} = ozone-test-2540702007</msg>
<status status="PASS" starttime="20230309 17:41:22.031" endtime="20230309 17:41:22.034"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:41:22.034" level="INFO">${bucket} = bucket-ozone-test-2540702007</msg>
<status status="PASS" starttime="20230309 17:41:22.034" endtime="20230309 17:41:22.035"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:41:22.042" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-2540702007 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:41:23.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:41:23.203" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-2540702007"
}</msg>
<status status="PASS" starttime="20230309 17:41:22.038" endtime="20230309 17:41:23.203"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:41:23.205" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-2540702007"
}</msg>
<status status="PASS" starttime="20230309 17:41:23.204" endtime="20230309 17:41:23.205"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:41:23.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:41:23.206" endtime="20230309 17:41:23.207"/>
</kw>
<status status="PASS" starttime="20230309 17:41:22.037" endtime="20230309 17:41:23.207"/>
</kw>
<msg timestamp="20230309 17:41:23.207" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:41:22.037" endtime="20230309 17:41:23.208"/>
</kw>
<msg timestamp="20230309 17:41:23.209" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-2540702007"
}</msg>
<status status="PASS" starttime="20230309 17:41:22.036" endtime="20230309 17:41:23.209"/>
</kw>
<msg timestamp="20230309 17:41:23.210" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-2540702007"
}</msg>
<status status="PASS" starttime="20230309 17:41:22.035" endtime="20230309 17:41:23.210"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:41:23.210" endtime="20230309 17:41:23.211"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:41:23.211" endtime="20230309 17:41:23.212"/>
</kw>
<status status="PASS" starttime="20230309 17:41:22.035" endtime="20230309 17:41:23.212"/>
</kw>
<msg timestamp="20230309 17:41:23.212" level="INFO">${bucket} = bucket-ozone-test-2540702007</msg>
<status status="PASS" starttime="20230309 17:41:22.031" endtime="20230309 17:41:23.212"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:41:23.222" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-2540702007 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:41:24.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:41:24.502" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-2540702007"
}</msg>
<status status="PASS" starttime="20230309 17:41:23.218" endtime="20230309 17:41:24.502"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:41:24.507" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-2540702007"
}</msg>
<status status="PASS" starttime="20230309 17:41:24.504" endtime="20230309 17:41:24.507"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:41:24.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:41:24.508" endtime="20230309 17:41:24.511"/>
</kw>
<status status="PASS" starttime="20230309 17:41:23.217" endtime="20230309 17:41:24.512"/>
</kw>
<msg timestamp="20230309 17:41:24.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:41:23.217" endtime="20230309 17:41:24.514"/>
</kw>
<msg timestamp="20230309 17:41:24.516" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-2540702007"
}</msg>
<status status="PASS" starttime="20230309 17:41:23.216" endtime="20230309 17:41:24.516"/>
</kw>
<msg timestamp="20230309 17:41:24.517" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-2540702007"
}</msg>
<status status="PASS" starttime="20230309 17:41:23.215" endtime="20230309 17:41:24.517"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:41:24.517" endtime="20230309 17:41:24.520"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:41:24.520" endtime="20230309 17:41:24.522"/>
</kw>
<status status="PASS" starttime="20230309 17:41:23.214" endtime="20230309 17:41:24.523"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:41:22.029" endtime="20230309 17:41:24.523"/>
</test>
<test id="s1-s5-s3-t3" name="Create bucket with invalid bucket name" line="39">
<kw name="Generate Ozone String" library="commonawslib">
<var>${randStr}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:41:24.533" level="INFO">${randStr} = 6777776669</msg>
<status status="PASS" starttime="20230309 17:41:24.533" endtime="20230309 17:41:24.535"/>
</kw>
<msg timestamp="20230309 17:41:24.535" level="INFO">${randStr} = ozone-test-6777776669</msg>
<status status="PASS" starttime="20230309 17:41:24.531" endtime="20230309 17:41:24.535"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket invalid_bucket_${randStr}</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:41:24.551" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket invalid_bucket_ozone-test-6777776669 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:41:25.761" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:41:25.761" level="INFO">${output} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20230309 17:41:24.542" endtime="20230309 17:41:25.761"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:41:25.762" level="INFO">
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20230309 17:41:25.761" endtime="20230309 17:41:25.763"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:41:25.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:41:25.763" endtime="20230309 17:41:25.763"/>
</kw>
<msg timestamp="20230309 17:41:25.764" level="INFO">${output} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20230309 17:41:24.539" endtime="20230309 17:41:25.764"/>
</kw>
<msg timestamp="20230309 17:41:25.764" level="INFO">${result} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20230309 17:41:24.535" endtime="20230309 17:41:25.764"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidBucketName</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:41:25.764" endtime="20230309 17:41:25.765"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:41:24.527" endtime="20230309 17:41:25.766"/>
</test>
<test id="s1-s5-s3-t4" name="Create new bucket and check no group ACL" line="43">
<kw name="Create bucket" library="commonawslib">
<var>${bucket}</var>
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:41:25.772" level="INFO">${randStr} = 0662512089</msg>
<status status="PASS" starttime="20230309 17:41:25.771" endtime="20230309 17:41:25.772"/>
</kw>
<msg timestamp="20230309 17:41:25.772" level="INFO">${postfix} = ozone-test-0662512089</msg>
<status status="PASS" starttime="20230309 17:41:25.770" endtime="20230309 17:41:25.772"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:41:25.773" level="INFO">${bucket} = bucket-ozone-test-0662512089</msg>
<status status="PASS" starttime="20230309 17:41:25.773" endtime="20230309 17:41:25.773"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:41:25.781" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-0662512089 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:41:26.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:41:26.920" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-0662512089"
}</msg>
<status status="PASS" starttime="20230309 17:41:25.777" endtime="20230309 17:41:26.920"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:41:26.922" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-0662512089"
}</msg>
<status status="PASS" starttime="20230309 17:41:26.921" endtime="20230309 17:41:26.922"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:41:26.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:41:26.922" endtime="20230309 17:41:26.924"/>
</kw>
<status status="PASS" starttime="20230309 17:41:25.776" endtime="20230309 17:41:26.925"/>
</kw>
<msg timestamp="20230309 17:41:26.926" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:41:25.776" endtime="20230309 17:41:26.928"/>
</kw>
<msg timestamp="20230309 17:41:26.928" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-0662512089"
}</msg>
<status status="PASS" starttime="20230309 17:41:25.775" endtime="20230309 17:41:26.928"/>
</kw>
<msg timestamp="20230309 17:41:26.931" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-0662512089"
}</msg>
<status status="PASS" starttime="20230309 17:41:25.774" endtime="20230309 17:41:26.931"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:41:26.931" endtime="20230309 17:41:26.932"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:41:26.932" endtime="20230309 17:41:26.932"/>
</kw>
<status status="PASS" starttime="20230309 17:41:25.773" endtime="20230309 17:41:26.933"/>
</kw>
<msg timestamp="20230309 17:41:26.934" level="INFO">${bucket} = bucket-ozone-test-0662512089</msg>
<status status="PASS" starttime="20230309 17:41:25.769" endtime="20230309 17:41:26.934"/>
</kw>
<kw name="Execute" library="os">
<var>${acl}</var>
<arg>ozone sh bucket getacl s3v/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:41:26.943" level="INFO">Running command 'ozone sh bucket getacl s3v/bucket-ozone-test-0662512089 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:41:40.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:41:40.900" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/s3g@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230309 17:41:26.937" endtime="20230309 17:41:40.900"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:41:40.902" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/s3g@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "NONE" ]
} ]</msg>
<status status="PASS" starttime="20230309 17:41:40.901" endtime="20230309 17:41:40.903"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:41:40.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:41:40.903" endtime="20230309 17:41:40.905"/>
</kw>
<status status="PASS" starttime="20230309 17:41:26.936" endtime="20230309 17:41:40.905"/>
</kw>
<msg timestamp="20230309 17:41:40.905" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:41:26.935" endtime="20230309 17:41:40.906"/>
</kw>
<msg timestamp="20230309 17:41:40.907" level="INFO">${acl} = [ {
  "type" : "USER",
  "name" : "testuser/s3g@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230309 17:41:26.934" endtime="20230309 17:41:40.907"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${group}</var>
<arg>${acl}</arg>
<arg>"GROUP"</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230309 17:41:40.909" level="INFO">${group} = ['"GROUP"']</msg>
<status status="PASS" starttime="20230309 17:41:40.907" endtime="20230309 17:41:40.909"/>
</kw>
<if>
<branch type="IF" condition="'${group}' is not '[]'">
<kw name="Evaluate" library="BuiltIn">
<var>${json}</var>
<arg>json.loads('''${acl}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230309 17:41:40.924" level="INFO">${json} = [{'type': 'USER', 'name': 'testuser/s3g@EXAMPLE.COM', 'aclScope': 'ACCESS', 'aclList': ['ALL']}, {'type': 'GROUP', 'name': 'testuser', 'aclScope': 'ACCESS', 'aclList': ['NONE']}]</msg>
<status status="PASS" starttime="20230309 17:41:40.910" endtime="20230309 17:41:40.924"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${json}[1][type]</arg>
<arg>GROUP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:41:40.924" endtime="20230309 17:41:40.926"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${json}[1][aclList]</arg>
<arg>NONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:41:40.926" endtime="20230309 17:41:40.927"/>
</kw>
<status status="PASS" starttime="20230309 17:41:40.909" endtime="20230309 17:41:40.927"/>
</branch>
<status status="PASS" starttime="20230309 17:41:40.909" endtime="20230309 17:41:40.927"/>
</if>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:41:25.768" endtime="20230309 17:41:40.927"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20230309 17:40:52.045" endtime="20230309 17:41:40.930"/>
</suite>
<suite id="s1-s5-s4" name="Bucketdelete" source="/opt/hadoop/smoketest/s3/bucketdelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:41:40.960" level="INFO">${randStr} = 3181280282</msg>
<status status="PASS" starttime="20230309 17:41:40.959" endtime="20230309 17:41:40.960"/>
</kw>
<msg timestamp="20230309 17:41:40.960" level="INFO">${random} = ozone-test-3181280282</msg>
<status status="PASS" starttime="20230309 17:41:40.959" endtime="20230309 17:41:40.960"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:41:40.963" level="INFO">${PREFIX} = ozone-test-3181280282</msg>
<status status="PASS" starttime="20230309 17:41:40.961" endtime="20230309 17:41:40.963"/>
</kw>
<status status="PASS" starttime="20230309 17:41:40.958" endtime="20230309 17:41:40.963"/>
</kw>
<status status="PASS" starttime="20230309 17:41:40.958" endtime="20230309 17:41:40.963"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which aws</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:41:40.968" level="INFO">Running command 'which aws 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:41:40.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:41:40.973" level="INFO">${output} = /usr/local/bin/aws</msg>
<status status="PASS" starttime="20230309 17:41:40.965" endtime="20230309 17:41:40.973"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230309 17:41:40.974" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:41:40.973" endtime="20230309 17:41:40.975"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20230309 17:41:40.975" endtime="20230309 17:41:40.975"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230309 17:41:40.976" endtime="20230309 17:41:40.976"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20230309 17:41:40.976" endtime="20230309 17:41:40.976"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230309 17:41:40.977" endtime="20230309 17:41:40.977"/>
</kw>
<status status="PASS" starttime="20230309 17:41:40.964" endtime="20230309 17:41:40.977"/>
</kw>
<status status="PASS" starttime="20230309 17:41:40.963" endtime="20230309 17:41:40.977"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:41:40.986" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:41:40.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:41:40.992" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230309 17:41:40.982" endtime="20230309 17:41:40.992"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:41:40.993" level="INFO">s3g</msg>
<status status="PASS" starttime="20230309 17:41:40.992" endtime="20230309 17:41:40.993"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:41:40.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:41:40.994" endtime="20230309 17:41:40.995"/>
</kw>
<status status="PASS" starttime="20230309 17:41:40.981" endtime="20230309 17:41:40.995"/>
</kw>
<msg timestamp="20230309 17:41:40.995" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:41:40.981" endtime="20230309 17:41:40.996"/>
</kw>
<msg timestamp="20230309 17:41:40.997" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230309 17:41:40.980" endtime="20230309 17:41:40.997"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:41:40.999" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:41:40.997" endtime="20230309 17:41:40.999"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:41:41.006" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:41:41.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:41:41.050" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:41:41.003" endtime="20230309 17:41:41.050"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:41:41.052" level="INFO"/>
<status status="PASS" starttime="20230309 17:41:41.051" endtime="20230309 17:41:41.052"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:41:41.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:41:41.052" endtime="20230309 17:41:41.053"/>
</kw>
<status status="PASS" starttime="20230309 17:41:41.002" endtime="20230309 17:41:41.053"/>
</kw>
<msg timestamp="20230309 17:41:41.054" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:41:41.002" endtime="20230309 17:41:41.055"/>
</kw>
<status status="PASS" starttime="20230309 17:41:41.001" endtime="20230309 17:41:41.055"/>
</kw>
<status status="PASS" starttime="20230309 17:41:41.000" endtime="20230309 17:41:41.055"/>
</kw>
<status status="PASS" starttime="20230309 17:41:40.979" endtime="20230309 17:41:41.056"/>
</kw>
<status status="PASS" starttime="20230309 17:41:40.979" endtime="20230309 17:41:41.056"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:41:41.066" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:41:51.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:41:51.408" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:41:41.062" endtime="20230309 17:41:51.408"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:41:51.410" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:41:51.409" endtime="20230309 17:41:51.410"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:41:51.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:41:51.410" endtime="20230309 17:41:51.413"/>
</kw>
<status status="PASS" starttime="20230309 17:41:41.060" endtime="20230309 17:41:51.414"/>
</kw>
<msg timestamp="20230309 17:41:51.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:41:41.060" endtime="20230309 17:41:51.416"/>
</kw>
<msg timestamp="20230309 17:41:51.422" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:41:41.059" endtime="20230309 17:41:51.422"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230309 17:41:51.423" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230309 17:41:51.422" endtime="20230309 17:41:51.423"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20230309 17:41:51.424" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230309 17:41:51.423" endtime="20230309 17:41:51.424"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230309 17:41:51.425" level="INFO">${secret} = ['15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670']</msg>
<status status="PASS" starttime="20230309 17:41:51.424" endtime="20230309 17:41:51.425"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:41:51.427" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:41:51.425" endtime="20230309 17:41:51.427"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:41:51.429" level="INFO">${secret} = 15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:41:51.427" endtime="20230309 17:41:51.429"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:41:51.436" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:41:52.369" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:41:52.369" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:41:51.432" endtime="20230309 17:41:52.370"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:41:52.371" level="INFO"/>
<status status="PASS" starttime="20230309 17:41:52.370" endtime="20230309 17:41:52.371"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:41:52.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:41:52.372" endtime="20230309 17:41:52.373"/>
</kw>
<status status="PASS" starttime="20230309 17:41:51.430" endtime="20230309 17:41:52.373"/>
</kw>
<msg timestamp="20230309 17:41:52.373" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:41:51.430" endtime="20230309 17:41:52.374"/>
</kw>
<status status="PASS" starttime="20230309 17:41:51.429" endtime="20230309 17:41:52.375"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:41:52.380" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:41:53.233" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:41:53.233" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:41:52.377" endtime="20230309 17:41:53.233"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:41:53.235" level="INFO"/>
<status status="PASS" starttime="20230309 17:41:53.234" endtime="20230309 17:41:53.235"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:41:53.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:41:53.235" endtime="20230309 17:41:53.236"/>
</kw>
<status status="PASS" starttime="20230309 17:41:52.376" endtime="20230309 17:41:53.236"/>
</kw>
<msg timestamp="20230309 17:41:53.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:41:52.376" endtime="20230309 17:41:53.237"/>
</kw>
<status status="PASS" starttime="20230309 17:41:52.375" endtime="20230309 17:41:53.238"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:41:53.244" level="INFO">Running command 'aws configure set aws_secret_access_key 15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:41:54.181" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:41:54.181" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:41:53.241" endtime="20230309 17:41:54.181"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:41:54.183" level="INFO"/>
<status status="PASS" starttime="20230309 17:41:54.182" endtime="20230309 17:41:54.183"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:41:54.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:41:54.183" endtime="20230309 17:41:54.184"/>
</kw>
<status status="PASS" starttime="20230309 17:41:53.240" endtime="20230309 17:41:54.185"/>
</kw>
<msg timestamp="20230309 17:41:54.185" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:41:53.239" endtime="20230309 17:41:54.186"/>
</kw>
<status status="PASS" starttime="20230309 17:41:53.238" endtime="20230309 17:41:54.186"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:41:54.192" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:41:55.096" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:41:55.097" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:41:54.188" endtime="20230309 17:41:55.097"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:41:55.098" level="INFO"/>
<status status="PASS" starttime="20230309 17:41:55.097" endtime="20230309 17:41:55.098"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:41:55.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:41:55.099" endtime="20230309 17:41:55.099"/>
</kw>
<status status="PASS" starttime="20230309 17:41:54.188" endtime="20230309 17:41:55.100"/>
</kw>
<msg timestamp="20230309 17:41:55.100" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:41:54.187" endtime="20230309 17:41:55.102"/>
</kw>
<status status="PASS" starttime="20230309 17:41:54.186" endtime="20230309 17:41:55.102"/>
</kw>
<status status="PASS" starttime="20230309 17:41:41.058" endtime="20230309 17:41:55.102"/>
</kw>
<status status="PASS" starttime="20230309 17:41:41.056" endtime="20230309 17:41:55.103"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:41:55.103" endtime="20230309 17:41:55.103"/>
</kw>
<status status="PASS" starttime="20230309 17:41:40.978" endtime="20230309 17:41:55.104"/>
</kw>
<status status="PASS" starttime="20230309 17:41:40.977" endtime="20230309 17:41:55.104"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230309 17:41:55.105" endtime="20230309 17:41:55.105"/>
</kw>
<msg timestamp="20230309 17:41:55.105" level="INFO">${BUCKET} = encrypted</msg>
<status status="PASS" starttime="20230309 17:41:55.104" endtime="20230309 17:41:55.105"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:41:55.106" level="INFO">${BUCKET} = encrypted</msg>
<status status="PASS" starttime="20230309 17:41:55.106" endtime="20230309 17:41:55.106"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:41:55.107" endtime="20230309 17:41:55.107"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create encrypted bucket" library="commonawslib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:41:55.108" endtime="20230309 17:41:55.109"/>
</kw>
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/encrypted</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:41:55.113" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:42:08.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:42:08.836" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "s3v",
  "name" : "encrypted",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 125852667,
  "usedNamespace" : 8,
  "creationTime" : "2023-03-09...</msg>
<status status="PASS" starttime="20230309 17:41:55.110" endtime="20230309 17:42:08.836"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:42:08.837" endtime="20230309 17:42:08.838"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:42:08.838" endtime="20230309 17:42:08.840"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:42:08.840" endtime="20230309 17:42:08.841"/>
</kw>
<msg timestamp="20230309 17:42:08.841" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20230309 17:41:55.109" endtime="20230309 17:42:08.842"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230309 17:42:08.843" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:42:08.842" endtime="20230309 17:42:08.843"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create -k ${KEY_NAME} o3://${OM_SERVICE_ID}/s3v/encrypted</arg>
<status status="NOT RUN" starttime="20230309 17:42:08.844" endtime="20230309 17:42:08.844"/>
</kw>
<status status="PASS" starttime="20230309 17:41:55.108" endtime="20230309 17:42:08.845"/>
</kw>
<status status="PASS" starttime="20230309 17:41:55.107" endtime="20230309 17:42:08.845"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:42:08.847" endtime="20230309 17:42:08.847"/>
</kw>
<status status="PASS" starttime="20230309 17:41:40.957" endtime="20230309 17:42:08.848"/>
</kw>
<test id="s1-s5-s4-t1" name="Delete existing bucket" line="37">
<kw name="Create bucket to be deleted">
<var>${bucket}</var>
<kw name="Run Keyword If" library="BuiltIn">
<var>${bucket}</var>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Create link</arg>
<arg>to-be-deleted</arg>
<arg>ELSE</arg>
<arg>Run Keyword</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create bucket</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:42:08.853" level="INFO">${randStr} = 5972833503</msg>
<status status="PASS" starttime="20230309 17:42:08.852" endtime="20230309 17:42:08.853"/>
</kw>
<msg timestamp="20230309 17:42:08.853" level="INFO">${postfix} = ozone-test-5972833503</msg>
<status status="PASS" starttime="20230309 17:42:08.852" endtime="20230309 17:42:08.853"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:42:08.854" level="INFO">${bucket} = bucket-ozone-test-5972833503</msg>
<status status="PASS" starttime="20230309 17:42:08.853" endtime="20230309 17:42:08.854"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:42:08.863" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-5972833503 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:42:10.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:42:10.093" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-5972833503"
}</msg>
<status status="PASS" starttime="20230309 17:42:08.858" endtime="20230309 17:42:10.093"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:42:10.095" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-5972833503"
}</msg>
<status status="PASS" starttime="20230309 17:42:10.094" endtime="20230309 17:42:10.095"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:42:10.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:42:10.095" endtime="20230309 17:42:10.096"/>
</kw>
<status status="PASS" starttime="20230309 17:42:08.857" endtime="20230309 17:42:10.096"/>
</kw>
<msg timestamp="20230309 17:42:10.097" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:42:08.856" endtime="20230309 17:42:10.099"/>
</kw>
<msg timestamp="20230309 17:42:10.099" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-5972833503"
}</msg>
<status status="PASS" starttime="20230309 17:42:08.856" endtime="20230309 17:42:10.099"/>
</kw>
<msg timestamp="20230309 17:42:10.100" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-5972833503"
}</msg>
<status status="PASS" starttime="20230309 17:42:08.855" endtime="20230309 17:42:10.100"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:42:10.100" endtime="20230309 17:42:10.101"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:42:10.101" endtime="20230309 17:42:10.102"/>
</kw>
<status status="PASS" starttime="20230309 17:42:08.854" endtime="20230309 17:42:10.103"/>
</kw>
<status status="PASS" starttime="20230309 17:42:08.851" endtime="20230309 17:42:10.103"/>
</kw>
<status status="PASS" starttime="20230309 17:42:08.851" endtime="20230309 17:42:10.103"/>
</kw>
<msg timestamp="20230309 17:42:10.104" level="INFO">${bucket} = bucket-ozone-test-5972833503</msg>
<status status="PASS" starttime="20230309 17:42:08.850" endtime="20230309 17:42:10.104"/>
</kw>
<msg timestamp="20230309 17:42:10.104" level="INFO">${bucket} = bucket-ozone-test-5972833503</msg>
<status status="PASS" starttime="20230309 17:42:08.850" endtime="20230309 17:42:10.104"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>delete-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:42:10.112" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-ozone-test-5972833503 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:42:11.148" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:42:11.149" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:42:10.108" endtime="20230309 17:42:11.149"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:42:11.151" level="INFO"/>
<status status="PASS" starttime="20230309 17:42:11.150" endtime="20230309 17:42:11.151"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:42:11.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:42:11.151" endtime="20230309 17:42:11.152"/>
</kw>
<status status="PASS" starttime="20230309 17:42:10.107" endtime="20230309 17:42:11.153"/>
</kw>
<msg timestamp="20230309 17:42:11.153" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:42:10.106" endtime="20230309 17:42:11.153"/>
</kw>
<msg timestamp="20230309 17:42:11.154" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:42:10.105" endtime="20230309 17:42:11.154"/>
</kw>
<status status="PASS" starttime="20230309 17:42:10.104" endtime="20230309 17:42:11.154"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:42:08.848" endtime="20230309 17:42:11.155"/>
</test>
<test id="s1-s5-s4-t2" name="Delete non-existent bucket" line="41">
<kw name="Generate Ozone String" library="commonawslib">
<var>${randStr}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:42:11.159" level="INFO">${randStr} = 9260248639</msg>
<status status="PASS" starttime="20230309 17:42:11.158" endtime="20230309 17:42:11.159"/>
</kw>
<msg timestamp="20230309 17:42:11.160" level="INFO">${randStr} = ozone-test-9260248639</msg>
<status status="PASS" starttime="20230309 17:42:11.157" endtime="20230309 17:42:11.160"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>delete-bucket --bucket nosuchbucket-${randStr}</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:42:11.165" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket nosuchbucket-ozone-test-9260248639 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:42:12.207" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:42:12.207" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20230309 17:42:11.162" endtime="20230309 17:42:12.207"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:42:12.209" level="INFO">
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20230309 17:42:12.208" endtime="20230309 17:42:12.209"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:42:12.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:42:12.210" endtime="20230309 17:42:12.211"/>
</kw>
<msg timestamp="20230309 17:42:12.211" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20230309 17:42:11.161" endtime="20230309 17:42:12.211"/>
</kw>
<msg timestamp="20230309 17:42:12.212" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20230309 17:42:11.160" endtime="20230309 17:42:12.212"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:42:12.212" endtime="20230309 17:42:12.213"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:42:11.156" endtime="20230309 17:42:12.213"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20230309 17:41:40.937" endtime="20230309 17:42:12.215"/>
</suite>
<suite id="s1-s5-s5" name="Buckethead" source="/opt/hadoop/smoketest/s3/buckethead.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:42:12.241" level="INFO">${randStr} = 0894383148</msg>
<status status="PASS" starttime="20230309 17:42:12.240" endtime="20230309 17:42:12.241"/>
</kw>
<msg timestamp="20230309 17:42:12.242" level="INFO">${random} = ozone-test-0894383148</msg>
<status status="PASS" starttime="20230309 17:42:12.240" endtime="20230309 17:42:12.242"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:42:12.244" level="INFO">${PREFIX} = ozone-test-0894383148</msg>
<status status="PASS" starttime="20230309 17:42:12.242" endtime="20230309 17:42:12.244"/>
</kw>
<status status="PASS" starttime="20230309 17:42:12.239" endtime="20230309 17:42:12.245"/>
</kw>
<status status="PASS" starttime="20230309 17:42:12.239" endtime="20230309 17:42:12.245"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which aws</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:42:12.250" level="INFO">Running command 'which aws 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:42:12.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:42:12.254" level="INFO">${output} = /usr/local/bin/aws</msg>
<status status="PASS" starttime="20230309 17:42:12.246" endtime="20230309 17:42:12.254"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230309 17:42:12.256" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:42:12.255" endtime="20230309 17:42:12.256"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20230309 17:42:12.257" endtime="20230309 17:42:12.257"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230309 17:42:12.257" endtime="20230309 17:42:12.257"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20230309 17:42:12.258" endtime="20230309 17:42:12.258"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230309 17:42:12.258" endtime="20230309 17:42:12.258"/>
</kw>
<status status="PASS" starttime="20230309 17:42:12.245" endtime="20230309 17:42:12.259"/>
</kw>
<status status="PASS" starttime="20230309 17:42:12.245" endtime="20230309 17:42:12.259"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:42:12.270" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:42:12.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:42:12.276" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230309 17:42:12.266" endtime="20230309 17:42:12.276"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:42:12.277" level="INFO">s3g</msg>
<status status="PASS" starttime="20230309 17:42:12.277" endtime="20230309 17:42:12.278"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:42:12.279" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:42:12.278" endtime="20230309 17:42:12.279"/>
</kw>
<status status="PASS" starttime="20230309 17:42:12.265" endtime="20230309 17:42:12.279"/>
</kw>
<msg timestamp="20230309 17:42:12.280" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:42:12.265" endtime="20230309 17:42:12.281"/>
</kw>
<msg timestamp="20230309 17:42:12.281" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230309 17:42:12.264" endtime="20230309 17:42:12.281"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:42:12.289" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:42:12.282" endtime="20230309 17:42:12.289"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:42:12.299" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:42:12.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:42:12.340" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:42:12.294" endtime="20230309 17:42:12.340"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:42:12.341" level="INFO"/>
<status status="PASS" starttime="20230309 17:42:12.341" endtime="20230309 17:42:12.341"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:42:12.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:42:12.342" endtime="20230309 17:42:12.343"/>
</kw>
<status status="PASS" starttime="20230309 17:42:12.293" endtime="20230309 17:42:12.344"/>
</kw>
<msg timestamp="20230309 17:42:12.344" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:42:12.292" endtime="20230309 17:42:12.345"/>
</kw>
<status status="PASS" starttime="20230309 17:42:12.290" endtime="20230309 17:42:12.345"/>
</kw>
<status status="PASS" starttime="20230309 17:42:12.289" endtime="20230309 17:42:12.345"/>
</kw>
<status status="PASS" starttime="20230309 17:42:12.261" endtime="20230309 17:42:12.346"/>
</kw>
<status status="PASS" starttime="20230309 17:42:12.260" endtime="20230309 17:42:12.346"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:42:12.353" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:42:22.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:42:22.037" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:42:12.349" endtime="20230309 17:42:22.037"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:42:22.039" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:42:22.038" endtime="20230309 17:42:22.039"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:42:22.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:42:22.039" endtime="20230309 17:42:22.041"/>
</kw>
<status status="PASS" starttime="20230309 17:42:12.348" endtime="20230309 17:42:22.043"/>
</kw>
<msg timestamp="20230309 17:42:22.043" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:42:12.348" endtime="20230309 17:42:22.044"/>
</kw>
<msg timestamp="20230309 17:42:22.045" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:42:12.347" endtime="20230309 17:42:22.045"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230309 17:42:22.047" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230309 17:42:22.046" endtime="20230309 17:42:22.047"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20230309 17:42:22.049" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230309 17:42:22.047" endtime="20230309 17:42:22.049"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230309 17:42:22.051" level="INFO">${secret} = ['15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670']</msg>
<status status="PASS" starttime="20230309 17:42:22.049" endtime="20230309 17:42:22.051"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:42:22.055" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:42:22.051" endtime="20230309 17:42:22.055"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:42:22.058" level="INFO">${secret} = 15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:42:22.055" endtime="20230309 17:42:22.058"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:42:22.100" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:42:23.134" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:42:23.134" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:42:22.094" endtime="20230309 17:42:23.134"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:42:23.136" level="INFO"/>
<status status="PASS" starttime="20230309 17:42:23.135" endtime="20230309 17:42:23.136"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:42:23.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:42:23.136" endtime="20230309 17:42:23.137"/>
</kw>
<status status="PASS" starttime="20230309 17:42:22.061" endtime="20230309 17:42:23.139"/>
</kw>
<msg timestamp="20230309 17:42:23.139" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:42:22.061" endtime="20230309 17:42:23.141"/>
</kw>
<status status="PASS" starttime="20230309 17:42:22.059" endtime="20230309 17:42:23.141"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:42:23.152" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:42:24.028" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:42:24.028" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:42:23.146" endtime="20230309 17:42:24.028"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:42:24.030" level="INFO"/>
<status status="PASS" starttime="20230309 17:42:24.029" endtime="20230309 17:42:24.030"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:42:24.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:42:24.030" endtime="20230309 17:42:24.031"/>
</kw>
<status status="PASS" starttime="20230309 17:42:23.145" endtime="20230309 17:42:24.031"/>
</kw>
<msg timestamp="20230309 17:42:24.032" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:42:23.143" endtime="20230309 17:42:24.032"/>
</kw>
<status status="PASS" starttime="20230309 17:42:23.141" endtime="20230309 17:42:24.033"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:42:24.038" level="INFO">Running command 'aws configure set aws_secret_access_key 15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:42:24.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:42:24.974" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:42:24.035" endtime="20230309 17:42:24.974"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:42:24.975" level="INFO"/>
<status status="PASS" starttime="20230309 17:42:24.974" endtime="20230309 17:42:24.975"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:42:24.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:42:24.976" endtime="20230309 17:42:24.976"/>
</kw>
<status status="PASS" starttime="20230309 17:42:24.034" endtime="20230309 17:42:24.977"/>
</kw>
<msg timestamp="20230309 17:42:24.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:42:24.034" endtime="20230309 17:42:24.979"/>
</kw>
<status status="PASS" starttime="20230309 17:42:24.033" endtime="20230309 17:42:24.979"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:42:24.985" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:42:25.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:42:25.850" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:42:24.982" endtime="20230309 17:42:25.850"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:42:25.852" level="INFO"/>
<status status="PASS" starttime="20230309 17:42:25.851" endtime="20230309 17:42:25.852"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:42:25.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:42:25.852" endtime="20230309 17:42:25.853"/>
</kw>
<status status="PASS" starttime="20230309 17:42:24.981" endtime="20230309 17:42:25.853"/>
</kw>
<msg timestamp="20230309 17:42:25.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:42:24.980" endtime="20230309 17:42:25.854"/>
</kw>
<status status="PASS" starttime="20230309 17:42:24.979" endtime="20230309 17:42:25.855"/>
</kw>
<status status="PASS" starttime="20230309 17:42:12.347" endtime="20230309 17:42:25.855"/>
</kw>
<status status="PASS" starttime="20230309 17:42:12.346" endtime="20230309 17:42:25.855"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:42:25.855" endtime="20230309 17:42:25.856"/>
</kw>
<status status="PASS" starttime="20230309 17:42:12.260" endtime="20230309 17:42:25.856"/>
</kw>
<status status="PASS" starttime="20230309 17:42:12.259" endtime="20230309 17:42:25.856"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230309 17:42:25.857" endtime="20230309 17:42:25.858"/>
</kw>
<msg timestamp="20230309 17:42:25.858" level="INFO">${BUCKET} = encrypted</msg>
<status status="PASS" starttime="20230309 17:42:25.857" endtime="20230309 17:42:25.858"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:42:25.859" level="INFO">${BUCKET} = encrypted</msg>
<status status="PASS" starttime="20230309 17:42:25.858" endtime="20230309 17:42:25.859"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:42:25.859" endtime="20230309 17:42:25.860"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create encrypted bucket" library="commonawslib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:42:25.862" endtime="20230309 17:42:25.862"/>
</kw>
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/encrypted</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:42:25.870" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:42:38.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:42:38.636" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "s3v",
  "name" : "encrypted",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 125852667,
  "usedNamespace" : 8,
  "creationTime" : "2023-03-09...</msg>
<status status="PASS" starttime="20230309 17:42:25.866" endtime="20230309 17:42:38.636"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:42:38.637" endtime="20230309 17:42:38.638"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:42:38.638" endtime="20230309 17:42:38.639"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:42:38.639" endtime="20230309 17:42:38.640"/>
</kw>
<msg timestamp="20230309 17:42:38.641" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20230309 17:42:25.863" endtime="20230309 17:42:38.641"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230309 17:42:38.642" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:42:38.641" endtime="20230309 17:42:38.643"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create -k ${KEY_NAME} o3://${OM_SERVICE_ID}/s3v/encrypted</arg>
<status status="NOT RUN" starttime="20230309 17:42:38.643" endtime="20230309 17:42:38.644"/>
</kw>
<status status="PASS" starttime="20230309 17:42:25.861" endtime="20230309 17:42:38.644"/>
</kw>
<status status="PASS" starttime="20230309 17:42:25.860" endtime="20230309 17:42:38.644"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:42:38.649" endtime="20230309 17:42:38.650"/>
</kw>
<status status="PASS" starttime="20230309 17:42:12.238" endtime="20230309 17:42:38.650"/>
</kw>
<test id="s1-s5-s5-t1" name="Head Bucket" line="31">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-bucket --bucket ${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:42:38.662" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-bucket --bucket encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:42:39.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:42:39.770" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:42:38.657" endtime="20230309 17:42:39.770"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:42:39.772" level="INFO"/>
<status status="PASS" starttime="20230309 17:42:39.770" endtime="20230309 17:42:39.773"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:42:39.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:42:39.773" endtime="20230309 17:42:39.775"/>
</kw>
<status status="PASS" starttime="20230309 17:42:38.657" endtime="20230309 17:42:39.775"/>
</kw>
<msg timestamp="20230309 17:42:39.776" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:42:38.655" endtime="20230309 17:42:39.777"/>
</kw>
<msg timestamp="20230309 17:42:39.777" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:42:38.654" endtime="20230309 17:42:39.777"/>
</kw>
<msg timestamp="20230309 17:42:39.778" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 17:42:38.653" endtime="20230309 17:42:39.778"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:42:38.651" endtime="20230309 17:42:39.778"/>
</test>
<test id="s1-s5-s5-t2" name="Head Bucket not existent" line="34">
<kw name="Generate Ozone String" library="commonawslib">
<var>${randStr}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:42:39.784" level="INFO">${randStr} = 0325926768</msg>
<status status="PASS" starttime="20230309 17:42:39.783" endtime="20230309 17:42:39.784"/>
</kw>
<msg timestamp="20230309 17:42:39.785" level="INFO">${randStr} = ozone-test-0325926768</msg>
<status status="PASS" starttime="20230309 17:42:39.783" endtime="20230309 17:42:39.785"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-bucket --bucket ozonenosuchbucketqqweqwe-${randStr}</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:42:39.792" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-bucket --bucket ozonenosuchbucketqqweqwe-ozone-test-0325926768 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:42:40.980" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:42:40.980" level="INFO">${output} = 
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20230309 17:42:39.788" endtime="20230309 17:42:40.980"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:42:40.983" level="INFO">
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20230309 17:42:40.981" endtime="20230309 17:42:40.983"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:42:40.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:42:40.983" endtime="20230309 17:42:40.984"/>
</kw>
<msg timestamp="20230309 17:42:40.985" level="INFO">${output} = 
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20230309 17:42:39.787" endtime="20230309 17:42:40.985"/>
</kw>
<msg timestamp="20230309 17:42:40.985" level="INFO">${result} = 
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20230309 17:42:39.785" endtime="20230309 17:42:40.986"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:42:40.986" endtime="20230309 17:42:40.987"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:42:40.987" endtime="20230309 17:42:40.990"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:42:39.781" endtime="20230309 17:42:40.992"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20230309 17:42:12.219" endtime="20230309 17:42:40.996"/>
</suite>
<suite id="s1-s5-s6" name="Bucketlist" source="/opt/hadoop/smoketest/s3/bucketlist.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:42:41.032" level="INFO">${randStr} = 0167569355</msg>
<status status="PASS" starttime="20230309 17:42:41.031" endtime="20230309 17:42:41.032"/>
</kw>
<msg timestamp="20230309 17:42:41.032" level="INFO">${random} = ozone-test-0167569355</msg>
<status status="PASS" starttime="20230309 17:42:41.031" endtime="20230309 17:42:41.032"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:42:41.036" level="INFO">${PREFIX} = ozone-test-0167569355</msg>
<status status="PASS" starttime="20230309 17:42:41.033" endtime="20230309 17:42:41.036"/>
</kw>
<status status="PASS" starttime="20230309 17:42:41.030" endtime="20230309 17:42:41.036"/>
</kw>
<status status="PASS" starttime="20230309 17:42:41.030" endtime="20230309 17:42:41.036"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which aws</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:42:41.042" level="INFO">Running command 'which aws 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:42:41.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:42:41.054" level="INFO">${output} = /usr/local/bin/aws</msg>
<status status="PASS" starttime="20230309 17:42:41.038" endtime="20230309 17:42:41.054"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230309 17:42:41.058" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:42:41.057" endtime="20230309 17:42:41.060"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20230309 17:42:41.060" endtime="20230309 17:42:41.061"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230309 17:42:41.062" endtime="20230309 17:42:41.062"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20230309 17:42:41.062" endtime="20230309 17:42:41.062"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230309 17:42:41.063" endtime="20230309 17:42:41.063"/>
</kw>
<status status="PASS" starttime="20230309 17:42:41.037" endtime="20230309 17:42:41.063"/>
</kw>
<status status="PASS" starttime="20230309 17:42:41.037" endtime="20230309 17:42:41.063"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:42:41.072" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:42:41.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:42:41.077" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230309 17:42:41.069" endtime="20230309 17:42:41.078"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:42:41.079" level="INFO">s3g</msg>
<status status="PASS" starttime="20230309 17:42:41.078" endtime="20230309 17:42:41.079"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:42:41.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:42:41.079" endtime="20230309 17:42:41.080"/>
</kw>
<status status="PASS" starttime="20230309 17:42:41.068" endtime="20230309 17:42:41.081"/>
</kw>
<msg timestamp="20230309 17:42:41.081" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:42:41.066" endtime="20230309 17:42:41.082"/>
</kw>
<msg timestamp="20230309 17:42:41.082" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230309 17:42:41.066" endtime="20230309 17:42:41.082"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:42:41.085" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:42:41.082" endtime="20230309 17:42:41.085"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:42:41.091" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:42:41.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:42:41.140" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:42:41.088" endtime="20230309 17:42:41.140"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:42:41.141" level="INFO"/>
<status status="PASS" starttime="20230309 17:42:41.140" endtime="20230309 17:42:41.141"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:42:41.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:42:41.142" endtime="20230309 17:42:41.142"/>
</kw>
<status status="PASS" starttime="20230309 17:42:41.087" endtime="20230309 17:42:41.143"/>
</kw>
<msg timestamp="20230309 17:42:41.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:42:41.087" endtime="20230309 17:42:41.145"/>
</kw>
<status status="PASS" starttime="20230309 17:42:41.086" endtime="20230309 17:42:41.146"/>
</kw>
<status status="PASS" starttime="20230309 17:42:41.085" endtime="20230309 17:42:41.146"/>
</kw>
<status status="PASS" starttime="20230309 17:42:41.065" endtime="20230309 17:42:41.146"/>
</kw>
<status status="PASS" starttime="20230309 17:42:41.065" endtime="20230309 17:42:41.146"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:42:41.159" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:42:50.756" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:42:50.756" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:42:41.153" endtime="20230309 17:42:50.756"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:42:50.758" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:42:50.757" endtime="20230309 17:42:50.758"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:42:50.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:42:50.759" endtime="20230309 17:42:50.759"/>
</kw>
<status status="PASS" starttime="20230309 17:42:41.152" endtime="20230309 17:42:50.760"/>
</kw>
<msg timestamp="20230309 17:42:50.761" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:42:41.151" endtime="20230309 17:42:50.763"/>
</kw>
<msg timestamp="20230309 17:42:50.764" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:42:41.150" endtime="20230309 17:42:50.764"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230309 17:42:50.766" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230309 17:42:50.764" endtime="20230309 17:42:50.766"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20230309 17:42:50.767" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230309 17:42:50.766" endtime="20230309 17:42:50.767"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230309 17:42:50.768" level="INFO">${secret} = ['15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670']</msg>
<status status="PASS" starttime="20230309 17:42:50.767" endtime="20230309 17:42:50.768"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:42:50.771" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:42:50.768" endtime="20230309 17:42:50.771"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:42:50.776" level="INFO">${secret} = 15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:42:50.771" endtime="20230309 17:42:50.776"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:42:50.783" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:42:51.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:42:51.761" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:42:50.779" endtime="20230309 17:42:51.761"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:42:51.763" level="INFO"/>
<status status="PASS" starttime="20230309 17:42:51.762" endtime="20230309 17:42:51.763"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:42:51.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:42:51.763" endtime="20230309 17:42:51.764"/>
</kw>
<status status="PASS" starttime="20230309 17:42:50.779" endtime="20230309 17:42:51.765"/>
</kw>
<msg timestamp="20230309 17:42:51.765" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:42:50.777" endtime="20230309 17:42:51.766"/>
</kw>
<status status="PASS" starttime="20230309 17:42:50.777" endtime="20230309 17:42:51.766"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:42:51.772" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:42:52.693" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:42:52.694" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:42:51.768" endtime="20230309 17:42:52.694"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:42:52.695" level="INFO"/>
<status status="PASS" starttime="20230309 17:42:52.694" endtime="20230309 17:42:52.695"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:42:52.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:42:52.695" endtime="20230309 17:42:52.696"/>
</kw>
<status status="PASS" starttime="20230309 17:42:51.767" endtime="20230309 17:42:52.697"/>
</kw>
<msg timestamp="20230309 17:42:52.697" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:42:51.767" endtime="20230309 17:42:52.698"/>
</kw>
<status status="PASS" starttime="20230309 17:42:51.766" endtime="20230309 17:42:52.698"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:42:52.705" level="INFO">Running command 'aws configure set aws_secret_access_key 15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:42:53.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:42:53.580" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:42:52.701" endtime="20230309 17:42:53.580"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:42:53.582" level="INFO"/>
<status status="PASS" starttime="20230309 17:42:53.581" endtime="20230309 17:42:53.582"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:42:53.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:42:53.582" endtime="20230309 17:42:53.583"/>
</kw>
<status status="PASS" starttime="20230309 17:42:52.700" endtime="20230309 17:42:53.584"/>
</kw>
<msg timestamp="20230309 17:42:53.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:42:52.699" endtime="20230309 17:42:53.585"/>
</kw>
<status status="PASS" starttime="20230309 17:42:52.698" endtime="20230309 17:42:53.585"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:42:53.591" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:42:54.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:42:54.449" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:42:53.587" endtime="20230309 17:42:54.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:42:54.451" level="INFO"/>
<status status="PASS" starttime="20230309 17:42:54.450" endtime="20230309 17:42:54.451"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:42:54.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:42:54.452" endtime="20230309 17:42:54.452"/>
</kw>
<status status="PASS" starttime="20230309 17:42:53.587" endtime="20230309 17:42:54.453"/>
</kw>
<msg timestamp="20230309 17:42:54.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:42:53.586" endtime="20230309 17:42:54.454"/>
</kw>
<status status="PASS" starttime="20230309 17:42:53.585" endtime="20230309 17:42:54.455"/>
</kw>
<status status="PASS" starttime="20230309 17:42:41.148" endtime="20230309 17:42:54.455"/>
</kw>
<status status="PASS" starttime="20230309 17:42:41.148" endtime="20230309 17:42:54.455"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:42:54.456" endtime="20230309 17:42:54.456"/>
</kw>
<status status="PASS" starttime="20230309 17:42:41.064" endtime="20230309 17:42:54.457"/>
</kw>
<status status="PASS" starttime="20230309 17:42:41.063" endtime="20230309 17:42:54.457"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230309 17:42:54.458" endtime="20230309 17:42:54.458"/>
</kw>
<msg timestamp="20230309 17:42:54.458" level="INFO">${BUCKET} = encrypted</msg>
<status status="PASS" starttime="20230309 17:42:54.457" endtime="20230309 17:42:54.458"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:42:54.459" level="INFO">${BUCKET} = encrypted</msg>
<status status="PASS" starttime="20230309 17:42:54.458" endtime="20230309 17:42:54.459"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:42:54.459" endtime="20230309 17:42:54.460"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create encrypted bucket" library="commonawslib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:42:54.461" endtime="20230309 17:42:54.462"/>
</kw>
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/encrypted</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:42:54.467" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:43:07.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:43:07.279" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "s3v",
  "name" : "encrypted",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 125852667,
  "usedNamespace" : 8,
  "creationTime" : "2023-03-09...</msg>
<status status="PASS" starttime="20230309 17:42:54.463" endtime="20230309 17:43:07.279"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:43:07.280" endtime="20230309 17:43:07.281"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:43:07.281" endtime="20230309 17:43:07.282"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:43:07.282" endtime="20230309 17:43:07.283"/>
</kw>
<msg timestamp="20230309 17:43:07.284" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20230309 17:42:54.462" endtime="20230309 17:43:07.284"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230309 17:43:07.285" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:43:07.284" endtime="20230309 17:43:07.285"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create -k ${KEY_NAME} o3://${OM_SERVICE_ID}/s3v/encrypted</arg>
<status status="NOT RUN" starttime="20230309 17:43:07.286" endtime="20230309 17:43:07.286"/>
</kw>
<status status="PASS" starttime="20230309 17:42:54.461" endtime="20230309 17:43:07.287"/>
</kw>
<status status="PASS" starttime="20230309 17:42:54.460" endtime="20230309 17:43:07.287"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:43:07.287" endtime="20230309 17:43:07.288"/>
</kw>
<status status="PASS" starttime="20230309 17:42:41.029" endtime="20230309 17:43:07.288"/>
</kw>
<test id="s1-s5-s6-t1" name="List buckets" line="31">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-buckets | jq -r '.Buckets[].Name'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:43:07.304" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets | jq -r '.Buckets[].Name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:43:08.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:43:08.394" level="INFO">${output} = bucket-iakidlftmk
bucket-ozone-test-0662512089
bucket-ozone-test-0854448483
bucket-ozone-test-2530672355
bucket-ozone-test-2540702007
bucket-test123
encrypted</msg>
<status status="PASS" starttime="20230309 17:43:07.299" endtime="20230309 17:43:08.394"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:43:08.396" level="INFO">bucket-iakidlftmk
bucket-ozone-test-0662512089
bucket-ozone-test-0854448483
bucket-ozone-test-2530672355
bucket-ozone-test-2540702007
bucket-test123
encrypted</msg>
<status status="PASS" starttime="20230309 17:43:08.395" endtime="20230309 17:43:08.396"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:43:08.397" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:43:08.396" endtime="20230309 17:43:08.397"/>
</kw>
<status status="PASS" starttime="20230309 17:43:07.297" endtime="20230309 17:43:08.398"/>
</kw>
<msg timestamp="20230309 17:43:08.398" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:43:07.296" endtime="20230309 17:43:08.399"/>
</kw>
<msg timestamp="20230309 17:43:08.399" level="INFO">${output} = bucket-iakidlftmk
bucket-ozone-test-0662512089
bucket-ozone-test-0854448483
bucket-ozone-test-2530672355
bucket-ozone-test-2540702007
bucket-test123
encrypted</msg>
<status status="PASS" starttime="20230309 17:43:07.295" endtime="20230309 17:43:08.399"/>
</kw>
<msg timestamp="20230309 17:43:08.400" level="INFO">${result} = bucket-iakidlftmk
bucket-ozone-test-0662512089
bucket-ozone-test-0854448483
bucket-ozone-test-2530672355
bucket-ozone-test-2540702007
bucket-test123
encrypted</msg>
<status status="PASS" starttime="20230309 17:43:07.294" endtime="20230309 17:43:08.400"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:43:08.400" endtime="20230309 17:43:08.401"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:43:07.289" endtime="20230309 17:43:08.401"/>
</test>
<test id="s1-s5-s6-t2" name="Get bucket info with Ozone Shell to check the owner field" line="35">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230309 17:43:08.404" endtime="20230309 17:43:08.404"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /s3v/${BUCKET} | jq -r '.owner'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:43:08.411" level="INFO">Running command 'ozone sh bucket info /s3v/encrypted | jq -r '.owner' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:43:21.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:43:21.362" level="INFO">${output} = testuser</msg>
<status status="PASS" starttime="20230309 17:43:08.407" endtime="20230309 17:43:21.362"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:43:21.363" level="INFO">testuser</msg>
<status status="PASS" starttime="20230309 17:43:21.363" endtime="20230309 17:43:21.364"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:43:21.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:43:21.364" endtime="20230309 17:43:21.365"/>
</kw>
<status status="PASS" starttime="20230309 17:43:08.406" endtime="20230309 17:43:21.365"/>
</kw>
<msg timestamp="20230309 17:43:21.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:43:08.406" endtime="20230309 17:43:21.367"/>
</kw>
<msg timestamp="20230309 17:43:21.367" level="INFO">${result} = testuser</msg>
<status status="PASS" starttime="20230309 17:43:08.405" endtime="20230309 17:43:21.368"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>testuser</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 17:43:21.368" endtime="20230309 17:43:21.369"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:43:08.402" endtime="20230309 17:43:21.369"/>
</test>
<test id="s1-s5-s6-t3" name="List buckets with empty access id" line="43">
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ''</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:43:21.382" level="INFO">Running command 'aws configure set aws_access_key_id '' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:43:22.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:43:22.288" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:43:21.375" endtime="20230309 17:43:22.288"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:43:22.290" level="INFO"/>
<status status="PASS" starttime="20230309 17:43:22.289" endtime="20230309 17:43:22.290"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:43:22.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:43:22.291" endtime="20230309 17:43:22.291"/>
</kw>
<status status="PASS" starttime="20230309 17:43:21.374" endtime="20230309 17:43:22.292"/>
</kw>
<msg timestamp="20230309 17:43:22.292" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:43:21.374" endtime="20230309 17:43:22.293"/>
</kw>
<status status="PASS" starttime="20230309 17:43:21.373" endtime="20230309 17:43:22.293"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>list-buckets</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:43:22.300" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:43:23.480" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:43:23.480" level="INFO">${output} = 
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20230309 17:43:22.296" endtime="20230309 17:43:23.481"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:43:23.486" level="INFO">
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20230309 17:43:23.483" endtime="20230309 17:43:23.486"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:43:23.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:43:23.486" endtime="20230309 17:43:23.487"/>
</kw>
<msg timestamp="20230309 17:43:23.488" level="INFO">${output} = 
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20230309 17:43:22.295" endtime="20230309 17:43:23.488"/>
</kw>
<msg timestamp="20230309 17:43:23.489" level="INFO">${result} = 
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20230309 17:43:22.293" endtime="20230309 17:43:23.489"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>The authorization header you provided is invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:43:23.489" endtime="20230309 17:43:23.489"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:43:21.372" endtime="20230309 17:43:23.490"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20230309 17:42:41.002" endtime="20230309 17:43:23.492"/>
</suite>
<suite id="s1-s5-s7" name="Freon" source="/opt/hadoop/smoketest/s3/freon.robot">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:43:23.525" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:43:23.532" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:43:23.533" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230309 17:43:23.521" endtime="20230309 17:43:23.533"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:43:23.535" level="INFO">s3g</msg>
<status status="PASS" starttime="20230309 17:43:23.534" endtime="20230309 17:43:23.535"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:43:23.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:43:23.535" endtime="20230309 17:43:23.536"/>
</kw>
<status status="PASS" starttime="20230309 17:43:23.520" endtime="20230309 17:43:23.537"/>
</kw>
<msg timestamp="20230309 17:43:23.537" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:43:23.520" endtime="20230309 17:43:23.538"/>
</kw>
<msg timestamp="20230309 17:43:23.538" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230309 17:43:23.519" endtime="20230309 17:43:23.538"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:43:23.542" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:43:23.538" endtime="20230309 17:43:23.542"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:43:23.551" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:43:23.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:43:23.585" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:43:23.547" endtime="20230309 17:43:23.585"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:43:23.587" level="INFO"/>
<status status="PASS" starttime="20230309 17:43:23.586" endtime="20230309 17:43:23.587"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:43:23.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:43:23.587" endtime="20230309 17:43:23.588"/>
</kw>
<status status="PASS" starttime="20230309 17:43:23.545" endtime="20230309 17:43:23.590"/>
</kw>
<msg timestamp="20230309 17:43:23.590" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:43:23.545" endtime="20230309 17:43:23.591"/>
</kw>
<status status="PASS" starttime="20230309 17:43:23.543" endtime="20230309 17:43:23.591"/>
</kw>
<status status="PASS" starttime="20230309 17:43:23.542" endtime="20230309 17:43:23.591"/>
</kw>
<status status="PASS" starttime="20230309 17:43:23.519" endtime="20230309 17:43:23.592"/>
</kw>
<status status="PASS" starttime="20230309 17:43:23.518" endtime="20230309 17:43:23.592"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:43:23.602" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:43:33.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:43:33.211" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:43:23.597" endtime="20230309 17:43:33.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:43:33.213" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:43:33.212" endtime="20230309 17:43:33.213"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:43:33.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:43:33.213" endtime="20230309 17:43:33.214"/>
</kw>
<status status="PASS" starttime="20230309 17:43:23.596" endtime="20230309 17:43:33.215"/>
</kw>
<msg timestamp="20230309 17:43:33.215" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:43:23.595" endtime="20230309 17:43:33.216"/>
</kw>
<msg timestamp="20230309 17:43:33.216" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:43:23.594" endtime="20230309 17:43:33.217"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230309 17:43:33.218" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230309 17:43:33.217" endtime="20230309 17:43:33.218"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20230309 17:43:33.219" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230309 17:43:33.218" endtime="20230309 17:43:33.219"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230309 17:43:33.220" level="INFO">${secret} = ['15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670']</msg>
<status status="PASS" starttime="20230309 17:43:33.219" endtime="20230309 17:43:33.220"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:43:33.223" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:43:33.221" endtime="20230309 17:43:33.223"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:43:33.225" level="INFO">${secret} = 15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:43:33.223" endtime="20230309 17:43:33.225"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:43:33.231" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:43:34.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:43:34.158" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:43:33.227" endtime="20230309 17:43:34.158"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:43:34.160" level="INFO"/>
<status status="PASS" starttime="20230309 17:43:34.159" endtime="20230309 17:43:34.160"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:43:34.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:43:34.161" endtime="20230309 17:43:34.162"/>
</kw>
<status status="PASS" starttime="20230309 17:43:33.226" endtime="20230309 17:43:34.162"/>
</kw>
<msg timestamp="20230309 17:43:34.163" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:43:33.226" endtime="20230309 17:43:34.164"/>
</kw>
<status status="PASS" starttime="20230309 17:43:33.225" endtime="20230309 17:43:34.164"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:43:34.171" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:43:35.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:43:35.037" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:43:34.167" endtime="20230309 17:43:35.038"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:43:35.039" level="INFO"/>
<status status="PASS" starttime="20230309 17:43:35.039" endtime="20230309 17:43:35.040"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:43:35.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:43:35.040" endtime="20230309 17:43:35.041"/>
</kw>
<status status="PASS" starttime="20230309 17:43:34.166" endtime="20230309 17:43:35.041"/>
</kw>
<msg timestamp="20230309 17:43:35.041" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:43:34.166" endtime="20230309 17:43:35.042"/>
</kw>
<status status="PASS" starttime="20230309 17:43:34.165" endtime="20230309 17:43:35.043"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:43:35.049" level="INFO">Running command 'aws configure set aws_secret_access_key 15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:43:35.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:43:35.910" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:43:35.045" endtime="20230309 17:43:35.910"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:43:35.912" level="INFO"/>
<status status="PASS" starttime="20230309 17:43:35.911" endtime="20230309 17:43:35.912"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:43:35.913" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:43:35.912" endtime="20230309 17:43:35.913"/>
</kw>
<status status="PASS" starttime="20230309 17:43:35.045" endtime="20230309 17:43:35.913"/>
</kw>
<msg timestamp="20230309 17:43:35.914" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:43:35.044" endtime="20230309 17:43:35.914"/>
</kw>
<status status="PASS" starttime="20230309 17:43:35.043" endtime="20230309 17:43:35.915"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:43:35.920" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:43:36.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:43:36.749" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:43:35.917" endtime="20230309 17:43:36.749"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:43:36.750" level="INFO"/>
<status status="PASS" starttime="20230309 17:43:36.749" endtime="20230309 17:43:36.750"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:43:36.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:43:36.751" endtime="20230309 17:43:36.752"/>
</kw>
<status status="PASS" starttime="20230309 17:43:35.916" endtime="20230309 17:43:36.753"/>
</kw>
<msg timestamp="20230309 17:43:36.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:43:35.916" endtime="20230309 17:43:36.754"/>
</kw>
<status status="PASS" starttime="20230309 17:43:35.915" endtime="20230309 17:43:36.755"/>
</kw>
<status status="PASS" starttime="20230309 17:43:23.593" endtime="20230309 17:43:36.755"/>
</kw>
<status status="PASS" starttime="20230309 17:43:23.592" endtime="20230309 17:43:36.755"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:43:36.755" endtime="20230309 17:43:36.756"/>
</kw>
<status status="PASS" starttime="20230309 17:43:23.517" endtime="20230309 17:43:36.756"/>
</kw>
<test id="s1-s5-s7-t1" name="Run Freon S3BG" line="42">
<kw name="Setup aws credentials" type="SETUP">
<kw name="Execute" library="os">
<var>${accessKey}</var>
<arg>aws configure get aws_access_key_id</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:43:36.764" level="INFO">Running command 'aws configure get aws_access_key_id 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:43:37.680" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:43:37.680" level="INFO">${output} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:43:36.761" endtime="20230309 17:43:37.680"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:43:37.688" level="INFO">testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:43:37.681" endtime="20230309 17:43:37.689"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:43:37.690" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:43:37.689" endtime="20230309 17:43:37.690"/>
</kw>
<status status="PASS" starttime="20230309 17:43:36.760" endtime="20230309 17:43:37.690"/>
</kw>
<msg timestamp="20230309 17:43:37.690" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:43:36.759" endtime="20230309 17:43:37.692"/>
</kw>
<msg timestamp="20230309 17:43:37.692" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:43:36.759" endtime="20230309 17:43:37.693"/>
</kw>
<kw name="Execute" library="os">
<var>${secret}</var>
<arg>aws configure get aws_secret_access_key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:43:37.703" level="INFO">Running command 'aws configure get aws_secret_access_key 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:43:38.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:43:38.546" level="INFO">${output} = 15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:43:37.697" endtime="20230309 17:43:38.546"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:43:38.548" level="INFO">15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:43:38.547" endtime="20230309 17:43:38.548"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:43:38.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:43:38.549" endtime="20230309 17:43:38.550"/>
</kw>
<status status="PASS" starttime="20230309 17:43:37.695" endtime="20230309 17:43:38.551"/>
</kw>
<msg timestamp="20230309 17:43:38.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:43:37.695" endtime="20230309 17:43:38.551"/>
</kw>
<msg timestamp="20230309 17:43:38.552" level="INFO">${secret} = 15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:43:37.693" endtime="20230309 17:43:38.552"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>AWS_SECRET_ACCESS_KEY</arg>
<arg>${secret}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230309 17:43:38.553" level="INFO">Environment variable 'AWS_SECRET_ACCESS_KEY' set to value '15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670'.</msg>
<status status="PASS" starttime="20230309 17:43:38.552" endtime="20230309 17:43:38.553"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>AWS_ACCESS_KEY_ID</arg>
<arg>${accessKey}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230309 17:43:38.553" level="INFO">Environment variable 'AWS_ACCESS_KEY_ID' set to value 'testuser/s3g@EXAMPLE.COM'.</msg>
<status status="PASS" starttime="20230309 17:43:38.553" endtime="20230309 17:43:38.553"/>
</kw>
<status status="PASS" starttime="20230309 17:43:36.758" endtime="20230309 17:43:38.554"/>
</kw>
<kw name="Freon S3BG">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon s3bg -e ${ENDPOINT_URL} -t ${threads} -n ${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:43:38.562" level="INFO">Running command 'ozone freon s3bg -e http://s3g:9878 -t 10 -n 100 -p s3bg  2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:43:49.680" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:43:49.680" level="INFO">${output} = 2023-03-09 17:43:43,472 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-03-09 17:43:43,830 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230309 17:43:38.558" endtime="20230309 17:43:49.680"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:43:49.683" level="INFO">2023-03-09 17:43:43,472 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-03-09 17:43:43,830 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-03-09 17:43:43,830 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-03-09 17:43:44,231 [main] INFO freon.BaseFreonGenerator: Executing test with prefix s3bg and number-of-tests 100
2023-03-09 17:43:44,430 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-03-09 17:43:45,435 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-03-09 17:43:46,436 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-03-09 17:43:47,443 [Thread-5] INFO freon.ProgressBar: Progress: 15.00 % (15 out of 100)
2023-03-09 17:43:48,444 [Thread-5] INFO freon.ProgressBar: Progress: 64.00 % (64 out of 100)
2023-03-09 17:43:49,446 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-03-09 17:43:49,557 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=100, min=33.270074, max=945.68774, mean=242.80275386779275, stddev=170.23057984992144, median=193.00731, p75=265.5428, p95=669.329346, p98=690.563238, p99=694.954196, p999=945.68774, mean_rate=32.3107770369625, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-03-09 17:43:49,562 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2023-03-09 17:43:49,562 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-03-09 17:43:49,562 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20230309 17:43:49.681" endtime="20230309 17:43:49.683"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:43:49.684" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:43:49.683" endtime="20230309 17:43:49.685"/>
</kw>
<status status="PASS" starttime="20230309 17:43:38.557" endtime="20230309 17:43:49.685"/>
</kw>
<msg timestamp="20230309 17:43:49.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:43:38.557" endtime="20230309 17:43:49.688"/>
</kw>
<msg timestamp="20230309 17:43:49.688" level="INFO">${result} = 2023-03-09 17:43:43,472 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-03-09 17:43:43,830 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230309 17:43:38.555" endtime="20230309 17:43:49.688"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:43:49.689" endtime="20230309 17:43:49.689"/>
</kw>
<status status="PASS" starttime="20230309 17:43:38.554" endtime="20230309 17:43:49.690"/>
</kw>
<status status="PASS" starttime="20230309 17:43:36.757" endtime="20230309 17:43:49.691"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20230309 17:43:23.495" endtime="20230309 17:43:49.694"/>
</suite>
<suite id="s1-s5-s8" name="MultipartUpload" source="/opt/hadoop/smoketest/s3/MultipartUpload.robot">
<kw name="Setup Multipart Tests" type="SETUP">
<kw name="Setup s3 tests" library="commonawslib">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:43:49.738" level="INFO">${randStr} = 1265818296</msg>
<status status="PASS" starttime="20230309 17:43:49.737" endtime="20230309 17:43:49.738"/>
</kw>
<msg timestamp="20230309 17:43:49.738" level="INFO">${random} = ozone-test-1265818296</msg>
<status status="PASS" starttime="20230309 17:43:49.737" endtime="20230309 17:43:49.738"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:43:49.741" level="INFO">${PREFIX} = ozone-test-1265818296</msg>
<status status="PASS" starttime="20230309 17:43:49.739" endtime="20230309 17:43:49.741"/>
</kw>
<status status="PASS" starttime="20230309 17:43:49.736" endtime="20230309 17:43:49.742"/>
</kw>
<status status="PASS" starttime="20230309 17:43:49.736" endtime="20230309 17:43:49.742"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which aws</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:43:49.753" level="INFO">Running command 'which aws 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:43:49.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:43:49.759" level="INFO">${output} = /usr/local/bin/aws</msg>
<status status="PASS" starttime="20230309 17:43:49.749" endtime="20230309 17:43:49.759"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230309 17:43:49.762" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:43:49.760" endtime="20230309 17:43:49.762"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20230309 17:43:49.763" endtime="20230309 17:43:49.763"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230309 17:43:49.763" endtime="20230309 17:43:49.763"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20230309 17:43:49.763" endtime="20230309 17:43:49.763"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230309 17:43:49.763" endtime="20230309 17:43:49.763"/>
</kw>
<status status="PASS" starttime="20230309 17:43:49.749" endtime="20230309 17:43:49.764"/>
</kw>
<status status="PASS" starttime="20230309 17:43:49.742" endtime="20230309 17:43:49.765"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:43:49.774" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:43:49.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:43:49.782" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230309 17:43:49.771" endtime="20230309 17:43:49.782"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:43:49.784" level="INFO">s3g</msg>
<status status="PASS" starttime="20230309 17:43:49.783" endtime="20230309 17:43:49.784"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:43:49.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:43:49.784" endtime="20230309 17:43:49.786"/>
</kw>
<status status="PASS" starttime="20230309 17:43:49.770" endtime="20230309 17:43:49.786"/>
</kw>
<msg timestamp="20230309 17:43:49.786" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:43:49.769" endtime="20230309 17:43:49.787"/>
</kw>
<msg timestamp="20230309 17:43:49.788" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230309 17:43:49.768" endtime="20230309 17:43:49.788"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:43:49.791" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:43:49.788" endtime="20230309 17:43:49.791"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:43:49.800" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:43:49.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:43:49.843" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:43:49.796" endtime="20230309 17:43:49.843"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:43:49.845" level="INFO"/>
<status status="PASS" starttime="20230309 17:43:49.844" endtime="20230309 17:43:49.845"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:43:49.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:43:49.845" endtime="20230309 17:43:49.847"/>
</kw>
<status status="PASS" starttime="20230309 17:43:49.795" endtime="20230309 17:43:49.847"/>
</kw>
<msg timestamp="20230309 17:43:49.847" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:43:49.794" endtime="20230309 17:43:49.848"/>
</kw>
<status status="PASS" starttime="20230309 17:43:49.792" endtime="20230309 17:43:49.850"/>
</kw>
<status status="PASS" starttime="20230309 17:43:49.792" endtime="20230309 17:43:49.850"/>
</kw>
<status status="PASS" starttime="20230309 17:43:49.768" endtime="20230309 17:43:49.850"/>
</kw>
<status status="PASS" starttime="20230309 17:43:49.767" endtime="20230309 17:43:49.850"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:43:49.857" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:43:59.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:43:59.389" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:43:49.853" endtime="20230309 17:43:59.389"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:43:59.391" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:43:59.390" endtime="20230309 17:43:59.391"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:43:59.392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:43:59.391" endtime="20230309 17:43:59.392"/>
</kw>
<status status="PASS" starttime="20230309 17:43:49.853" endtime="20230309 17:43:59.393"/>
</kw>
<msg timestamp="20230309 17:43:59.393" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:43:49.852" endtime="20230309 17:43:59.394"/>
</kw>
<msg timestamp="20230309 17:43:59.395" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:43:49.852" endtime="20230309 17:43:59.395"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230309 17:43:59.396" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230309 17:43:59.395" endtime="20230309 17:43:59.396"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20230309 17:43:59.398" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230309 17:43:59.397" endtime="20230309 17:43:59.398"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230309 17:43:59.399" level="INFO">${secret} = ['15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670']</msg>
<status status="PASS" starttime="20230309 17:43:59.399" endtime="20230309 17:43:59.399"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:43:59.401" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:43:59.399" endtime="20230309 17:43:59.401"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:43:59.403" level="INFO">${secret} = 15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:43:59.402" endtime="20230309 17:43:59.403"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:43:59.411" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:00.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:00.330" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:43:59.407" endtime="20230309 17:44:00.330"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:00.331" level="INFO"/>
<status status="PASS" starttime="20230309 17:44:00.331" endtime="20230309 17:44:00.331"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:00.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:00.332" endtime="20230309 17:44:00.332"/>
</kw>
<status status="PASS" starttime="20230309 17:43:59.405" endtime="20230309 17:44:00.333"/>
</kw>
<msg timestamp="20230309 17:44:00.333" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:43:59.404" endtime="20230309 17:44:00.334"/>
</kw>
<status status="PASS" starttime="20230309 17:43:59.403" endtime="20230309 17:44:00.334"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:00.340" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:01.244" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:01.245" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:44:00.336" endtime="20230309 17:44:01.245"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:01.246" level="INFO"/>
<status status="PASS" starttime="20230309 17:44:01.246" endtime="20230309 17:44:01.247"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:01.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:01.247" endtime="20230309 17:44:01.247"/>
</kw>
<status status="PASS" starttime="20230309 17:44:00.336" endtime="20230309 17:44:01.248"/>
</kw>
<msg timestamp="20230309 17:44:01.248" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:44:00.335" endtime="20230309 17:44:01.250"/>
</kw>
<status status="PASS" starttime="20230309 17:44:00.334" endtime="20230309 17:44:01.250"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:01.257" level="INFO">Running command 'aws configure set aws_secret_access_key 15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:02.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:02.094" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:44:01.254" endtime="20230309 17:44:02.094"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:02.095" level="INFO"/>
<status status="PASS" starttime="20230309 17:44:02.095" endtime="20230309 17:44:02.096"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:02.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:02.096" endtime="20230309 17:44:02.096"/>
</kw>
<status status="PASS" starttime="20230309 17:44:01.252" endtime="20230309 17:44:02.097"/>
</kw>
<msg timestamp="20230309 17:44:02.097" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:44:01.252" endtime="20230309 17:44:02.099"/>
</kw>
<status status="PASS" starttime="20230309 17:44:01.251" endtime="20230309 17:44:02.102"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:02.111" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:02.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:02.947" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:44:02.106" endtime="20230309 17:44:02.947"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:02.949" level="INFO"/>
<status status="PASS" starttime="20230309 17:44:02.948" endtime="20230309 17:44:02.949"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:02.951" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:02.949" endtime="20230309 17:44:02.951"/>
</kw>
<status status="PASS" starttime="20230309 17:44:02.104" endtime="20230309 17:44:02.953"/>
</kw>
<msg timestamp="20230309 17:44:02.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:44:02.104" endtime="20230309 17:44:02.954"/>
</kw>
<status status="PASS" starttime="20230309 17:44:02.103" endtime="20230309 17:44:02.954"/>
</kw>
<status status="PASS" starttime="20230309 17:43:49.851" endtime="20230309 17:44:02.955"/>
</kw>
<status status="PASS" starttime="20230309 17:43:49.851" endtime="20230309 17:44:02.955"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:44:02.955" endtime="20230309 17:44:02.956"/>
</kw>
<status status="PASS" starttime="20230309 17:43:49.767" endtime="20230309 17:44:02.956"/>
</kw>
<status status="PASS" starttime="20230309 17:43:49.765" endtime="20230309 17:44:02.956"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230309 17:44:02.957" endtime="20230309 17:44:02.958"/>
</kw>
<msg timestamp="20230309 17:44:02.958" level="INFO">${BUCKET} = encrypted</msg>
<status status="PASS" starttime="20230309 17:44:02.956" endtime="20230309 17:44:02.958"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:44:02.959" level="INFO">${BUCKET} = encrypted</msg>
<status status="PASS" starttime="20230309 17:44:02.958" endtime="20230309 17:44:02.959"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:44:02.959" endtime="20230309 17:44:02.960"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create encrypted bucket" library="commonawslib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:44:02.961" endtime="20230309 17:44:02.963"/>
</kw>
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/encrypted</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:02.969" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:15.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:15.687" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "s3v",
  "name" : "encrypted",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 125852667,
  "usedNamespace" : 8,
  "creationTime" : "2023-03-09...</msg>
<status status="PASS" starttime="20230309 17:44:02.964" endtime="20230309 17:44:15.687"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:44:15.688" endtime="20230309 17:44:15.689"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:44:15.689" endtime="20230309 17:44:15.690"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:44:15.690" endtime="20230309 17:44:15.690"/>
</kw>
<msg timestamp="20230309 17:44:15.691" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20230309 17:44:02.964" endtime="20230309 17:44:15.691"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230309 17:44:15.692" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:44:15.691" endtime="20230309 17:44:15.693"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create -k ${KEY_NAME} o3://${OM_SERVICE_ID}/s3v/encrypted</arg>
<status status="NOT RUN" starttime="20230309 17:44:15.694" endtime="20230309 17:44:15.694"/>
</kw>
<status status="PASS" starttime="20230309 17:44:02.961" endtime="20230309 17:44:15.695"/>
</kw>
<status status="PASS" starttime="20230309 17:44:02.960" endtime="20230309 17:44:15.695"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:44:15.695" endtime="20230309 17:44:15.696"/>
</kw>
<status status="PASS" starttime="20230309 17:43:49.736" endtime="20230309 17:44:15.697"/>
</kw>
<kw name="Create Random File KB">
<arg>/tmp/part1</arg>
<arg>5121</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${file} bs=1024 count=${size_in_kilobytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:15.706" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1024 count=5121 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:15.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:15.774" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:44:15.702" endtime="20230309 17:44:15.774"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:15.776" level="INFO"/>
<status status="PASS" starttime="20230309 17:44:15.775" endtime="20230309 17:44:15.776"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:15.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:15.776" endtime="20230309 17:44:15.777"/>
</kw>
<status status="PASS" starttime="20230309 17:44:15.701" endtime="20230309 17:44:15.778"/>
</kw>
<msg timestamp="20230309 17:44:15.778" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:44:15.700" endtime="20230309 17:44:15.778"/>
</kw>
<status status="PASS" starttime="20230309 17:44:15.699" endtime="20230309 17:44:15.779"/>
</kw>
<status status="PASS" starttime="20230309 17:44:15.697" endtime="20230309 17:44:15.779"/>
</kw>
<kw name="Create Random File KB">
<arg>/tmp/part2</arg>
<arg>1023</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${file} bs=1024 count=${size_in_kilobytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:15.787" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part2 bs=1024 count=1023 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:15.803" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:15.804" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:44:15.783" endtime="20230309 17:44:15.804"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:15.805" level="INFO"/>
<status status="PASS" starttime="20230309 17:44:15.804" endtime="20230309 17:44:15.805"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:15.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:15.807" endtime="20230309 17:44:15.808"/>
</kw>
<status status="PASS" starttime="20230309 17:44:15.782" endtime="20230309 17:44:15.808"/>
</kw>
<msg timestamp="20230309 17:44:15.809" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:44:15.782" endtime="20230309 17:44:15.809"/>
</kw>
<status status="PASS" starttime="20230309 17:44:15.781" endtime="20230309 17:44:15.811"/>
</kw>
<status status="PASS" starttime="20230309 17:44:15.779" endtime="20230309 17:44:15.811"/>
</kw>
<status status="PASS" starttime="20230309 17:43:49.734" endtime="20230309 17:44:15.811"/>
</kw>
<test id="s1-s5-s8-t1" name="Test Multipart Upload With Adjusted Length" line="57">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:44:15.816" level="INFO">${randStr} = 2951870155</msg>
<status status="PASS" starttime="20230309 17:44:15.815" endtime="20230309 17:44:15.816"/>
</kw>
<msg timestamp="20230309 17:44:15.817" level="INFO">${random} = ozone-test-2951870155</msg>
<status status="PASS" starttime="20230309 17:44:15.814" endtime="20230309 17:44:15.817"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:44:15.820" level="INFO">${PREFIX} = ozone-test-2951870155</msg>
<status status="PASS" starttime="20230309 17:44:15.818" endtime="20230309 17:44:15.820"/>
</kw>
<status status="PASS" starttime="20230309 17:44:15.813" endtime="20230309 17:44:15.820"/>
</kw>
<kw name="Perform Multipart Upload" library="commonawslib">
<arg>${BUCKET}</arg>
<arg>multipart/adjusted_length_${PREFIX}</arg>
<arg>/tmp/part1</arg>
<arg>/tmp/part2</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:15.827" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key multipart/adjusted_length_ozone-test-2951870155 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:16.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:16.947" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "multipart/adjusted_length_ozone-test-2951870155",
    "UploadId": "7874777c-00cd-4331-a160-76acabbf9d3a-109994564439375936"
}</msg>
<status status="PASS" starttime="20230309 17:44:15.824" endtime="20230309 17:44:16.948"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:16.950" level="INFO">{
    "Bucket": "encrypted",
    "Key": "multipart/adjusted_length_ozone-test-2951870155",
    "UploadId": "7874777c-00cd-4331-a160-76acabbf9d3a-109994564439375936"
}</msg>
<status status="PASS" starttime="20230309 17:44:16.949" endtime="20230309 17:44:16.950"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:16.951" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:16.951" endtime="20230309 17:44:16.952"/>
</kw>
<status status="PASS" starttime="20230309 17:44:15.823" endtime="20230309 17:44:16.952"/>
</kw>
<msg timestamp="20230309 17:44:16.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:44:15.823" endtime="20230309 17:44:16.953"/>
</kw>
<msg timestamp="20230309 17:44:16.953" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "multipart/adjusted_length_ozone-test-2951870155",
    "UploadId": "7874777c-00cd-4331-a160-76acabbf9d3a-109994564439375936"
}</msg>
<status status="PASS" starttime="20230309 17:44:15.822" endtime="20230309 17:44:16.954"/>
</kw>
<msg timestamp="20230309 17:44:16.954" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "multipart/adjusted_length_ozone-test-2951870155",
    "UploadId": "7874777c-00cd-4331-a160-76acabbf9d3a-109994564439375936"
}</msg>
<status status="PASS" starttime="20230309 17:44:15.821" endtime="20230309 17:44:16.954"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:16.960" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "multipart/adjusted_length_ozone-test-2951870155",
    "UploadId": "7874777c-00cd-4331-a160-76acabbf9d3a-109994564439375936"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:17.028" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:17.028" level="INFO">${output} = 7874777c-00cd-4331-a160-76acabbf9d3a-109994564439375936</msg>
<status status="PASS" starttime="20230309 17:44:16.956" endtime="20230309 17:44:17.028"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:17.030" level="INFO">7874777c-00cd-4331-a160-76acabbf9d3a-109994564439375936</msg>
<status status="PASS" starttime="20230309 17:44:17.029" endtime="20230309 17:44:17.031"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:17.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:17.031" endtime="20230309 17:44:17.032"/>
</kw>
<msg timestamp="20230309 17:44:17.032" level="INFO">${upload_id} = 7874777c-00cd-4331-a160-76acabbf9d3a-109994564439375936</msg>
<status status="PASS" starttime="20230309 17:44:16.954" endtime="20230309 17:44:17.033"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{etags}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230309 17:44:17.033" level="INFO">@{etags} = [ ]</msg>
<status status="PASS" starttime="20230309 17:44:17.033" endtime="20230309 17:44:17.033"/>
</kw>
<for flavor="IN ENUMERATE">
<var>${i}</var>
<var>${file}</var>
<value>@{files}</value>
<iter>
<var name="${i}">0</var>
<var name="${file}">/tmp/part1</var>
<kw name="Evaluate" library="BuiltIn">
<var>${part}</var>
<arg>${i} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230309 17:44:17.036" level="INFO">${part} = 1</msg>
<status status="PASS" starttime="20230309 17:44:17.035" endtime="20230309 17:44:17.036"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:17.045" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key multipart/adjusted_length_ozone-test-2951870155 --part-number 1 --body /tmp/part1 --upload-id 7874777c-00cd-4331-a160-76acabbf9d3a-109994564439375936 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:18.917" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:18.917" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/multipart/adjusted_length_ozone-test-2951870155-7874777c-00cd-4331-a160-76acabbf9d3a-109994564439375936-1"
}</msg>
<status status="PASS" starttime="20230309 17:44:17.041" endtime="20230309 17:44:18.917"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:18.920" level="INFO">{
    "ETag": "/s3v/encrypted/multipart/adjusted_length_ozone-test-2951870155-7874777c-00cd-4331-a160-76acabbf9d3a-109994564439375936-1"
}</msg>
<status status="PASS" starttime="20230309 17:44:18.917" endtime="20230309 17:44:18.920"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:18.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:18.920" endtime="20230309 17:44:18.921"/>
</kw>
<status status="PASS" starttime="20230309 17:44:17.040" endtime="20230309 17:44:18.921"/>
</kw>
<msg timestamp="20230309 17:44:18.921" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:44:17.039" endtime="20230309 17:44:18.922"/>
</kw>
<msg timestamp="20230309 17:44:18.922" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/multipart/adjusted_length_ozone-test-2951870155-7874777c-00cd-4331-a160-76acabbf9d3a-109994564439375936-1"
}</msg>
<status status="PASS" starttime="20230309 17:44:17.038" endtime="20230309 17:44:18.922"/>
</kw>
<msg timestamp="20230309 17:44:18.923" level="INFO">${result} = {
    "ETag": "/s3v/encrypted/multipart/adjusted_length_ozone-test-2951870155-7874777c-00cd-4331-a160-76acabbf9d3a-109994564439375936-1"
}</msg>
<status status="PASS" starttime="20230309 17:44:17.037" endtime="20230309 17:44:18.923"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:18.932" level="INFO">Running command 'echo '{
    "ETag": "/s3v/encrypted/multipart/adjusted_length_ozone-test-2951870155-7874777c-00cd-4331-a160-76acabbf9d3a-109994564439375936-1"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:19.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:19.009" level="INFO">${output} = /s3v/encrypted/multipart/adjusted_length_ozone-test-2951870155-7874777c-00cd-4331-a160-76acabbf9d3a-109994564439375936-1</msg>
<status status="PASS" starttime="20230309 17:44:18.926" endtime="20230309 17:44:19.009"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:19.014" level="INFO">/s3v/encrypted/multipart/adjusted_length_ozone-test-2951870155-7874777c-00cd-4331-a160-76acabbf9d3a-109994564439375936-1</msg>
<status status="PASS" starttime="20230309 17:44:19.010" endtime="20230309 17:44:19.014"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:19.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:19.014" endtime="20230309 17:44:19.016"/>
</kw>
<status status="PASS" starttime="20230309 17:44:18.924" endtime="20230309 17:44:19.016"/>
</kw>
<msg timestamp="20230309 17:44:19.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:44:18.924" endtime="20230309 17:44:19.018"/>
</kw>
<msg timestamp="20230309 17:44:19.018" level="INFO">${etag} = /s3v/encrypted/multipart/adjusted_length_ozone-test-2951870155-7874777c-00cd-4331-a160-76acabbf9d3a-109994564439375936-1</msg>
<status status="PASS" starttime="20230309 17:44:18.923" endtime="20230309 17:44:19.018"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${etags}</arg>
<arg>{ETag=${etag},PartNumber=${part}}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230309 17:44:19.018" endtime="20230309 17:44:19.020"/>
</kw>
<status status="PASS" starttime="20230309 17:44:17.034" endtime="20230309 17:44:19.020"/>
</iter>
<iter>
<var name="${i}">1</var>
<var name="${file}">/tmp/part2</var>
<kw name="Evaluate" library="BuiltIn">
<var>${part}</var>
<arg>${i} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230309 17:44:19.021" level="INFO">${part} = 2</msg>
<status status="PASS" starttime="20230309 17:44:19.020" endtime="20230309 17:44:19.021"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:19.034" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key multipart/adjusted_length_ozone-test-2951870155 --part-number 2 --body /tmp/part2 --upload-id 7874777c-00cd-4331-a160-76acabbf9d3a-109994564439375936 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:20.413" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:20.413" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/multipart/adjusted_length_ozone-test-2951870155-7874777c-00cd-4331-a160-76acabbf9d3a-109994564439375936-2"
}</msg>
<status status="PASS" starttime="20230309 17:44:19.029" endtime="20230309 17:44:20.417"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:20.420" level="INFO">{
    "ETag": "/s3v/encrypted/multipart/adjusted_length_ozone-test-2951870155-7874777c-00cd-4331-a160-76acabbf9d3a-109994564439375936-2"
}</msg>
<status status="PASS" starttime="20230309 17:44:20.418" endtime="20230309 17:44:20.422"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:20.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:20.422" endtime="20230309 17:44:20.423"/>
</kw>
<status status="PASS" starttime="20230309 17:44:19.026" endtime="20230309 17:44:20.423"/>
</kw>
<msg timestamp="20230309 17:44:20.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:44:19.026" endtime="20230309 17:44:20.425"/>
</kw>
<msg timestamp="20230309 17:44:20.426" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/multipart/adjusted_length_ozone-test-2951870155-7874777c-00cd-4331-a160-76acabbf9d3a-109994564439375936-2"
}</msg>
<status status="PASS" starttime="20230309 17:44:19.023" endtime="20230309 17:44:20.426"/>
</kw>
<msg timestamp="20230309 17:44:20.426" level="INFO">${result} = {
    "ETag": "/s3v/encrypted/multipart/adjusted_length_ozone-test-2951870155-7874777c-00cd-4331-a160-76acabbf9d3a-109994564439375936-2"
}</msg>
<status status="PASS" starttime="20230309 17:44:19.022" endtime="20230309 17:44:20.427"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:20.435" level="INFO">Running command 'echo '{
    "ETag": "/s3v/encrypted/multipart/adjusted_length_ozone-test-2951870155-7874777c-00cd-4331-a160-76acabbf9d3a-109994564439375936-2"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:20.510" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:20.510" level="INFO">${output} = /s3v/encrypted/multipart/adjusted_length_ozone-test-2951870155-7874777c-00cd-4331-a160-76acabbf9d3a-109994564439375936-2</msg>
<status status="PASS" starttime="20230309 17:44:20.430" endtime="20230309 17:44:20.510"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:20.513" level="INFO">/s3v/encrypted/multipart/adjusted_length_ozone-test-2951870155-7874777c-00cd-4331-a160-76acabbf9d3a-109994564439375936-2</msg>
<status status="PASS" starttime="20230309 17:44:20.511" endtime="20230309 17:44:20.513"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:20.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:20.513" endtime="20230309 17:44:20.514"/>
</kw>
<status status="PASS" starttime="20230309 17:44:20.428" endtime="20230309 17:44:20.515"/>
</kw>
<msg timestamp="20230309 17:44:20.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:44:20.427" endtime="20230309 17:44:20.516"/>
</kw>
<msg timestamp="20230309 17:44:20.516" level="INFO">${etag} = /s3v/encrypted/multipart/adjusted_length_ozone-test-2951870155-7874777c-00cd-4331-a160-76acabbf9d3a-109994564439375936-2</msg>
<status status="PASS" starttime="20230309 17:44:20.427" endtime="20230309 17:44:20.516"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${etags}</arg>
<arg>{ETag=${etag},PartNumber=${part}}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230309 17:44:20.517" endtime="20230309 17:44:20.519"/>
</kw>
<status status="PASS" starttime="20230309 17:44:19.020" endtime="20230309 17:44:20.519"/>
</iter>
<status status="PASS" starttime="20230309 17:44:17.033" endtime="20230309 17:44:20.519"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${parts}</var>
<arg>SEPARATOR=,</arg>
<arg>@{etags}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230309 17:44:20.520" level="INFO">${parts} = {ETag=/s3v/encrypted/multipart/adjusted_length_ozone-test-2951870155-7874777c-00cd-4331-a160-76acabbf9d3a-109994564439375936-1,PartNumber=1},{ETag=/s3v/encrypted/multipart/adjusted_length_ozone-test-2...</msg>
<status status="PASS" starttime="20230309 17:44:20.519" endtime="20230309 17:44:20.520"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:20.528" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket encrypted --key multipart/adjusted_length_ozone-test-2951870155 --upload-id 7874777c-00cd-4331-a160-76acabbf9d3a-109994564439375936 --multipart-upload 'Parts=[{ETag=/s3v/encrypted/multipart/adjusted_length_ozone-test-2951870155-7874777c-00cd-4331-a160-76acabbf9d3a-109994564439375936-1,PartNumber=1},{ETag=/s3v/encrypted/multipart/adjusted_length_ozone-test-2951870155-7874777c-00cd-4331-a160-76acabbf9d3a-109994564439375936-2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:21.680" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:21.681" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "multipart/adjusted_length_ozone-test-2951870155",
    "ETag": "f5b816a0f8972ac4617fbaf30c3fb9e7e386e4e150778b1ae8ecff938675ba7b"
}</msg>
<status status="PASS" starttime="20230309 17:44:20.525" endtime="20230309 17:44:21.681"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:21.684" level="INFO">{
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "multipart/adjusted_length_ozone-test-2951870155",
    "ETag": "f5b816a0f8972ac4617fbaf30c3fb9e7e386e4e150778b1ae8ecff938675ba7b"
}</msg>
<status status="PASS" starttime="20230309 17:44:21.683" endtime="20230309 17:44:21.684"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:21.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:21.684" endtime="20230309 17:44:21.685"/>
</kw>
<status status="PASS" starttime="20230309 17:44:20.524" endtime="20230309 17:44:21.685"/>
</kw>
<msg timestamp="20230309 17:44:21.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:44:20.523" endtime="20230309 17:44:21.686"/>
</kw>
<msg timestamp="20230309 17:44:21.687" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "multipart/adjusted_length_ozone-test-2951870155",
    "ETag": "f5b816a0f8972ac4617fbaf30c3fb9e7e386e4e150778b1ae8ecff938675ba7b"
}</msg>
<status status="PASS" starttime="20230309 17:44:20.522" endtime="20230309 17:44:21.687"/>
</kw>
<status status="PASS" starttime="20230309 17:44:20.520" endtime="20230309 17:44:21.688"/>
</kw>
<status status="PASS" starttime="20230309 17:44:15.820" endtime="20230309 17:44:21.689"/>
</kw>
<kw name="Verify Multipart Upload" library="commonawslib">
<arg>${BUCKET}</arg>
<arg>multipart/adjusted_length_${PREFIX}</arg>
<arg>/tmp/part1</arg>
<arg>/tmp/part2</arg>
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:44:21.696" level="INFO">${randStr} = 8780324774</msg>
<status status="PASS" starttime="20230309 17:44:21.695" endtime="20230309 17:44:21.696"/>
</kw>
<msg timestamp="20230309 17:44:21.696" level="INFO">${random} = ozone-test-8780324774</msg>
<status status="PASS" starttime="20230309 17:44:21.691" endtime="20230309 17:44:21.697"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} /tmp/verify${random}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:21.710" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key multipart/adjusted_length_ozone-test-2951870155 /tmp/verifyozone-test-8780324774 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:24.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:24.480" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:44:21 GMT",
    "ContentLength": 6291456,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Ex...</msg>
<status status="PASS" starttime="20230309 17:44:21.703" endtime="20230309 17:44:24.480"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:24.482" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:44:21 GMT",
    "ContentLength": 6291456,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 09 Mar 2023 17:44:22 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230309 17:44:24.481" endtime="20230309 17:44:24.482"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:24.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:24.483" endtime="20230309 17:44:24.483"/>
</kw>
<status status="PASS" starttime="20230309 17:44:21.701" endtime="20230309 17:44:24.484"/>
</kw>
<msg timestamp="20230309 17:44:24.484" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:44:21.700" endtime="20230309 17:44:24.485"/>
</kw>
<msg timestamp="20230309 17:44:24.486" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:44:21 GMT",
    "ContentLength": 6291456,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Ex...</msg>
<status status="PASS" starttime="20230309 17:44:21.699" endtime="20230309 17:44:24.486"/>
</kw>
<status status="PASS" starttime="20230309 17:44:21.697" endtime="20230309 17:44:24.487"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${tmp}</var>
<arg>@{files}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230309 17:44:24.489" level="INFO">${tmp} = /tmp/part1 /tmp/part2</msg>
<status status="PASS" starttime="20230309 17:44:24.487" endtime="20230309 17:44:24.489"/>
</kw>
<kw name="Execute" library="os">
<arg>cat ${tmp} &gt; /tmp/original${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:24.499" level="INFO">Running command 'cat /tmp/part1 /tmp/part2 &gt; /tmp/originalozone-test-8780324774'.</msg>
<msg timestamp="20230309 17:44:24.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:24.515" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:44:24.493" endtime="20230309 17:44:24.515"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:24.520" level="INFO"/>
<status status="PASS" starttime="20230309 17:44:24.516" endtime="20230309 17:44:24.520"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:24.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:24.520" endtime="20230309 17:44:24.525"/>
</kw>
<status status="PASS" starttime="20230309 17:44:24.491" endtime="20230309 17:44:24.526"/>
</kw>
<msg timestamp="20230309 17:44:24.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:44:24.491" endtime="20230309 17:44:24.527"/>
</kw>
<status status="PASS" starttime="20230309 17:44:24.489" endtime="20230309 17:44:24.531"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/original${random}</arg>
<arg>/tmp/verify${random}</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:24.539" level="INFO">Running command 'md5sum /tmp/originalozone-test-8780324774 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:24.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:24.595" level="INFO">${output} = 6c39834781a012418086d1fc97ec9ba8</msg>
<status status="PASS" starttime="20230309 17:44:24.536" endtime="20230309 17:44:24.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:24.597" level="INFO">6c39834781a012418086d1fc97ec9ba8</msg>
<status status="PASS" starttime="20230309 17:44:24.596" endtime="20230309 17:44:24.597"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:24.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:24.597" endtime="20230309 17:44:24.599"/>
</kw>
<status status="PASS" starttime="20230309 17:44:24.535" endtime="20230309 17:44:24.601"/>
</kw>
<msg timestamp="20230309 17:44:24.601" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:44:24.534" endtime="20230309 17:44:24.605"/>
</kw>
<msg timestamp="20230309 17:44:24.606" level="INFO">${checksumbefore} = 6c39834781a012418086d1fc97ec9ba8</msg>
<status status="PASS" starttime="20230309 17:44:24.533" endtime="20230309 17:44:24.606"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:24.616" level="INFO">Running command 'md5sum /tmp/verifyozone-test-8780324774 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:24.643" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:24.644" level="INFO">${output} = 6c39834781a012418086d1fc97ec9ba8</msg>
<status status="PASS" starttime="20230309 17:44:24.611" endtime="20230309 17:44:24.644"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:24.647" level="INFO">6c39834781a012418086d1fc97ec9ba8</msg>
<status status="PASS" starttime="20230309 17:44:24.645" endtime="20230309 17:44:24.647"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:24.648" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:24.647" endtime="20230309 17:44:24.648"/>
</kw>
<status status="PASS" starttime="20230309 17:44:24.608" endtime="20230309 17:44:24.648"/>
</kw>
<msg timestamp="20230309 17:44:24.649" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:44:24.607" endtime="20230309 17:44:24.650"/>
</kw>
<msg timestamp="20230309 17:44:24.650" level="INFO">${checksumafter} = 6c39834781a012418086d1fc97ec9ba8</msg>
<status status="PASS" starttime="20230309 17:44:24.606" endtime="20230309 17:44:24.650"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 17:44:24.650" endtime="20230309 17:44:24.651"/>
</kw>
<status status="PASS" starttime="20230309 17:44:24.531" endtime="20230309 17:44:24.652"/>
</kw>
<status status="PASS" starttime="20230309 17:44:21.690" endtime="20230309 17:44:24.652"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:44:15.811" endtime="20230309 17:44:24.652"/>
</test>
<test id="s1-s5-s8-t2" name="Test Multipart Upload" line="61">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:44:24.657" level="INFO">${randStr} = 1963978561</msg>
<status status="PASS" starttime="20230309 17:44:24.657" endtime="20230309 17:44:24.657"/>
</kw>
<msg timestamp="20230309 17:44:24.658" level="INFO">${random} = ozone-test-1963978561</msg>
<status status="PASS" starttime="20230309 17:44:24.655" endtime="20230309 17:44:24.658"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:44:24.660" level="INFO">${PREFIX} = ozone-test-1963978561</msg>
<status status="PASS" starttime="20230309 17:44:24.659" endtime="20230309 17:44:24.660"/>
</kw>
<status status="PASS" starttime="20230309 17:44:24.654" endtime="20230309 17:44:24.660"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:24.669" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-1963978561/multipartKey 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:25.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:25.788" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-1963978561/multipartKey",
    "UploadId": "3afcc9e7-c534-4943-ba0a-2a4d8b68eb32-109994565018648643"
}</msg>
<status status="PASS" starttime="20230309 17:44:24.665" endtime="20230309 17:44:25.788"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:25.791" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-1963978561/multipartKey",
    "UploadId": "3afcc9e7-c534-4943-ba0a-2a4d8b68eb32-109994565018648643"
}</msg>
<status status="PASS" starttime="20230309 17:44:25.790" endtime="20230309 17:44:25.791"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:25.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:25.791" endtime="20230309 17:44:25.794"/>
</kw>
<status status="PASS" starttime="20230309 17:44:24.664" endtime="20230309 17:44:25.795"/>
</kw>
<msg timestamp="20230309 17:44:25.795" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:44:24.663" endtime="20230309 17:44:25.795"/>
</kw>
<msg timestamp="20230309 17:44:25.795" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-1963978561/multipartKey",
    "UploadId": "3afcc9e7-c534-4943-ba0a-2a4d8b68eb32-109994565018648643"
}</msg>
<status status="PASS" starttime="20230309 17:44:24.662" endtime="20230309 17:44:25.796"/>
</kw>
<msg timestamp="20230309 17:44:25.796" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-1963978561/multipartKey",
    "UploadId": "3afcc9e7-c534-4943-ba0a-2a4d8b68eb32-109994565018648643"
}</msg>
<status status="PASS" starttime="20230309 17:44:24.660" endtime="20230309 17:44:25.796"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:25.800" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-1963978561/multipartKey",
    "UploadId": "3afcc9e7-c534-4943-ba0a-2a4d8b68eb32-109994565018648643"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:25.872" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:25.872" level="INFO">${output} = 3afcc9e7-c534-4943-ba0a-2a4d8b68eb32-109994565018648643</msg>
<status status="PASS" starttime="20230309 17:44:25.797" endtime="20230309 17:44:25.872"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:25.875" level="INFO">3afcc9e7-c534-4943-ba0a-2a4d8b68eb32-109994565018648643</msg>
<status status="PASS" starttime="20230309 17:44:25.873" endtime="20230309 17:44:25.875"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:25.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:25.876" endtime="20230309 17:44:25.877"/>
</kw>
<msg timestamp="20230309 17:44:25.878" level="INFO">${uploadID} = 3afcc9e7-c534-4943-ba0a-2a4d8b68eb32-109994565018648643</msg>
<status status="PASS" starttime="20230309 17:44:25.796" endtime="20230309 17:44:25.878"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:44:25.878" endtime="20230309 17:44:25.879"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:44:25.879" endtime="20230309 17:44:25.880"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:44:25.880" endtime="20230309 17:44:25.881"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:25.890" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-1963978561/multipartKey 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:26.914" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:26.914" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-1963978561/multipartKey",
    "UploadId": "001660b4-e7c4-4837-9e4e-63fddb596de5-109994565094277188"
}</msg>
<status status="PASS" starttime="20230309 17:44:25.887" endtime="20230309 17:44:26.915"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:26.917" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-1963978561/multipartKey",
    "UploadId": "001660b4-e7c4-4837-9e4e-63fddb596de5-109994565094277188"
}</msg>
<status status="PASS" starttime="20230309 17:44:26.915" endtime="20230309 17:44:26.917"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:26.918" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:26.918" endtime="20230309 17:44:26.919"/>
</kw>
<status status="PASS" starttime="20230309 17:44:25.886" endtime="20230309 17:44:26.919"/>
</kw>
<msg timestamp="20230309 17:44:26.920" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:44:25.886" endtime="20230309 17:44:26.921"/>
</kw>
<msg timestamp="20230309 17:44:26.922" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-1963978561/multipartKey",
    "UploadId": "001660b4-e7c4-4837-9e4e-63fddb596de5-109994565094277188"
}</msg>
<status status="PASS" starttime="20230309 17:44:25.882" endtime="20230309 17:44:26.922"/>
</kw>
<msg timestamp="20230309 17:44:26.922" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-1963978561/multipartKey",
    "UploadId": "001660b4-e7c4-4837-9e4e-63fddb596de5-109994565094277188"
}</msg>
<status status="PASS" starttime="20230309 17:44:25.881" endtime="20230309 17:44:26.922"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${nextUploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:26.928" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-1963978561/multipartKey",
    "UploadId": "001660b4-e7c4-4837-9e4e-63fddb596de5-109994565094277188"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:26.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:26.992" level="INFO">${output} = 001660b4-e7c4-4837-9e4e-63fddb596de5-109994565094277188</msg>
<status status="PASS" starttime="20230309 17:44:26.924" endtime="20230309 17:44:26.992"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:26.994" level="INFO">001660b4-e7c4-4837-9e4e-63fddb596de5-109994565094277188</msg>
<status status="PASS" starttime="20230309 17:44:26.993" endtime="20230309 17:44:26.994"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:26.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:26.994" endtime="20230309 17:44:26.996"/>
</kw>
<msg timestamp="20230309 17:44:26.996" level="INFO">${nextUploadID} = 001660b4-e7c4-4837-9e4e-63fddb596de5-109994565094277188</msg>
<status status="PASS" starttime="20230309 17:44:26.923" endtime="20230309 17:44:26.997"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:44:26.998" endtime="20230309 17:44:26.998"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:44:27.000" endtime="20230309 17:44:27.000"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:44:27.002" endtime="20230309 17:44:27.002"/>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${uploadID}</arg>
<arg>${nextUploadID}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="PASS" starttime="20230309 17:44:27.003" endtime="20230309 17:44:27.004"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:27.013" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:27.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:27.051" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:44:27.010" endtime="20230309 17:44:27.051"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:27.054" level="INFO"/>
<status status="PASS" starttime="20230309 17:44:27.052" endtime="20230309 17:44:27.055"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:27.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:27.055" endtime="20230309 17:44:27.056"/>
</kw>
<status status="PASS" starttime="20230309 17:44:27.008" endtime="20230309 17:44:27.056"/>
</kw>
<msg timestamp="20230309 17:44:27.056" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:44:27.008" endtime="20230309 17:44:27.057"/>
</kw>
<status status="PASS" starttime="20230309 17:44:27.007" endtime="20230309 17:44:27.058"/>
</kw>
<status status="PASS" starttime="20230309 17:44:27.005" endtime="20230309 17:44:27.058"/>
</kw>
<status status="PASS" starttime="20230309 17:44:27.004" endtime="20230309 17:44:27.058"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey --part-number 1 --body /tmp/part1 --upload-id ${nextUploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:27.073" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-1963978561/multipartKey --part-number 1 --body /tmp/part1 --upload-id 001660b4-e7c4-4837-9e4e-63fddb596de5-109994565094277188 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:28.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:28.867" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-1963978561/multipartKey-001660b4-e7c4-4837-9e4e-63fddb596de5-109994565094277188-1"
}</msg>
<status status="PASS" starttime="20230309 17:44:27.063" endtime="20230309 17:44:28.867"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:28.870" level="INFO">{
    "ETag": "/s3v/encrypted/ozone-test-1963978561/multipartKey-001660b4-e7c4-4837-9e4e-63fddb596de5-109994565094277188-1"
}</msg>
<status status="PASS" starttime="20230309 17:44:28.868" endtime="20230309 17:44:28.871"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:28.873" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:28.871" endtime="20230309 17:44:28.873"/>
</kw>
<status status="PASS" starttime="20230309 17:44:27.061" endtime="20230309 17:44:28.875"/>
</kw>
<msg timestamp="20230309 17:44:28.875" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:44:27.061" endtime="20230309 17:44:28.876"/>
</kw>
<msg timestamp="20230309 17:44:28.877" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-1963978561/multipartKey-001660b4-e7c4-4837-9e4e-63fddb596de5-109994565094277188-1"
}</msg>
<status status="PASS" starttime="20230309 17:44:27.060" endtime="20230309 17:44:28.877"/>
</kw>
<msg timestamp="20230309 17:44:28.877" level="INFO">${result} = {
    "ETag": "/s3v/encrypted/ozone-test-1963978561/multipartKey-001660b4-e7c4-4837-9e4e-63fddb596de5-109994565094277188-1"
}</msg>
<status status="PASS" starttime="20230309 17:44:27.059" endtime="20230309 17:44:28.877"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:44:28.878" endtime="20230309 17:44:28.878"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:28.890" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:28.945" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:28.948" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:44:28.886" endtime="20230309 17:44:28.948"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:28.952" level="INFO"/>
<status status="PASS" starttime="20230309 17:44:28.950" endtime="20230309 17:44:28.952"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:28.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:28.952" endtime="20230309 17:44:28.956"/>
</kw>
<status status="PASS" starttime="20230309 17:44:28.885" endtime="20230309 17:44:28.957"/>
</kw>
<msg timestamp="20230309 17:44:28.957" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:44:28.884" endtime="20230309 17:44:28.959"/>
</kw>
<status status="PASS" starttime="20230309 17:44:28.882" endtime="20230309 17:44:28.959"/>
</kw>
<status status="PASS" starttime="20230309 17:44:28.880" endtime="20230309 17:44:28.962"/>
</kw>
<status status="PASS" starttime="20230309 17:44:28.879" endtime="20230309 17:44:28.962"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey --part-number 1 --body /tmp/part1 --upload-id ${nextUploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:28.972" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-1963978561/multipartKey --part-number 1 --body /tmp/part1 --upload-id 001660b4-e7c4-4837-9e4e-63fddb596de5-109994565094277188 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:30.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:30.913" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-1963978561/multipartKey-001660b4-e7c4-4837-9e4e-63fddb596de5-109994565094277188-1"
}</msg>
<status status="PASS" starttime="20230309 17:44:28.968" endtime="20230309 17:44:30.913"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:30.915" level="INFO">{
    "ETag": "/s3v/encrypted/ozone-test-1963978561/multipartKey-001660b4-e7c4-4837-9e4e-63fddb596de5-109994565094277188-1"
}</msg>
<status status="PASS" starttime="20230309 17:44:30.914" endtime="20230309 17:44:30.915"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:30.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:30.916" endtime="20230309 17:44:30.918"/>
</kw>
<status status="PASS" starttime="20230309 17:44:28.967" endtime="20230309 17:44:30.918"/>
</kw>
<msg timestamp="20230309 17:44:30.918" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:44:28.966" endtime="20230309 17:44:30.919"/>
</kw>
<msg timestamp="20230309 17:44:30.920" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-1963978561/multipartKey-001660b4-e7c4-4837-9e4e-63fddb596de5-109994565094277188-1"
}</msg>
<status status="PASS" starttime="20230309 17:44:28.964" endtime="20230309 17:44:30.920"/>
</kw>
<msg timestamp="20230309 17:44:30.921" level="INFO">${result} = {
    "ETag": "/s3v/encrypted/ozone-test-1963978561/multipartKey-001660b4-e7c4-4837-9e4e-63fddb596de5-109994565094277188-1"
}</msg>
<status status="PASS" starttime="20230309 17:44:28.962" endtime="20230309 17:44:30.921"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:44:30.921" endtime="20230309 17:44:30.923"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:44:24.653" endtime="20230309 17:44:30.924"/>
</test>
<test id="s1-s5-s8-t3" name="Test Multipart Upload Complete" line="89">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:44:30.939" level="INFO">${randStr} = 9475121440</msg>
<status status="PASS" starttime="20230309 17:44:30.937" endtime="20230309 17:44:30.942"/>
</kw>
<msg timestamp="20230309 17:44:30.943" level="INFO">${random} = ozone-test-9475121440</msg>
<status status="PASS" starttime="20230309 17:44:30.935" endtime="20230309 17:44:30.943"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:44:30.945" level="INFO">${PREFIX} = ozone-test-9475121440</msg>
<status status="PASS" starttime="20230309 17:44:30.945" endtime="20230309 17:44:30.945"/>
</kw>
<status status="PASS" starttime="20230309 17:44:30.932" endtime="20230309 17:44:30.946"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:30.963" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-9475121440/multipartKey1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:32.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:32.089" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-9475121440/multipartKey1",
    "UploadId": "3013d289-7420-4fcc-98d0-011af53104eb-109994565433491527"
}</msg>
<status status="PASS" starttime="20230309 17:44:30.957" endtime="20230309 17:44:32.089"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:32.091" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-9475121440/multipartKey1",
    "UploadId": "3013d289-7420-4fcc-98d0-011af53104eb-109994565433491527"
}</msg>
<status status="PASS" starttime="20230309 17:44:32.090" endtime="20230309 17:44:32.092"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:32.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:32.092" endtime="20230309 17:44:32.093"/>
</kw>
<status status="PASS" starttime="20230309 17:44:30.953" endtime="20230309 17:44:32.093"/>
</kw>
<msg timestamp="20230309 17:44:32.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:44:30.953" endtime="20230309 17:44:32.094"/>
</kw>
<msg timestamp="20230309 17:44:32.095" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-9475121440/multipartKey1",
    "UploadId": "3013d289-7420-4fcc-98d0-011af53104eb-109994565433491527"
}</msg>
<status status="PASS" starttime="20230309 17:44:30.952" endtime="20230309 17:44:32.095"/>
</kw>
<msg timestamp="20230309 17:44:32.097" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-9475121440/multipartKey1",
    "UploadId": "3013d289-7420-4fcc-98d0-011af53104eb-109994565433491527"
}</msg>
<status status="PASS" starttime="20230309 17:44:30.948" endtime="20230309 17:44:32.097"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:32.104" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-9475121440/multipartKey1",
    "UploadId": "3013d289-7420-4fcc-98d0-011af53104eb-109994565433491527"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:32.184" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:32.184" level="INFO">${output} = 3013d289-7420-4fcc-98d0-011af53104eb-109994565433491527</msg>
<status status="PASS" starttime="20230309 17:44:32.098" endtime="20230309 17:44:32.184"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:32.186" level="INFO">3013d289-7420-4fcc-98d0-011af53104eb-109994565433491527</msg>
<status status="PASS" starttime="20230309 17:44:32.184" endtime="20230309 17:44:32.186"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:32.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:32.186" endtime="20230309 17:44:32.187"/>
</kw>
<msg timestamp="20230309 17:44:32.189" level="INFO">${uploadID} = 3013d289-7420-4fcc-98d0-011af53104eb-109994565433491527</msg>
<status status="PASS" starttime="20230309 17:44:32.097" endtime="20230309 17:44:32.189"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:44:32.189" endtime="20230309 17:44:32.191"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:44:32.191" endtime="20230309 17:44:32.192"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:44:32.192" endtime="20230309 17:44:32.193"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:32.211" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:32.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:32.251" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:44:32.198" endtime="20230309 17:44:32.251"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:32.254" level="INFO"/>
<status status="PASS" starttime="20230309 17:44:32.252" endtime="20230309 17:44:32.255"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:32.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:32.255" endtime="20230309 17:44:32.258"/>
</kw>
<status status="PASS" starttime="20230309 17:44:32.196" endtime="20230309 17:44:32.258"/>
</kw>
<msg timestamp="20230309 17:44:32.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:44:32.196" endtime="20230309 17:44:32.260"/>
</kw>
<status status="PASS" starttime="20230309 17:44:32.195" endtime="20230309 17:44:32.260"/>
</kw>
<status status="PASS" starttime="20230309 17:44:32.193" endtime="20230309 17:44:32.261"/>
</kw>
<status status="PASS" starttime="20230309 17:44:32.193" endtime="20230309 17:44:32.261"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:32.271" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-9475121440/multipartKey1 --part-number 1 --body /tmp/part1 --upload-id 3013d289-7420-4fcc-98d0-011af53104eb-109994565433491527 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:33.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:33.975" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-9475121440/multipartKey1-3013d289-7420-4fcc-98d0-011af53104eb-109994565433491527-1"
}</msg>
<status status="PASS" starttime="20230309 17:44:32.265" endtime="20230309 17:44:33.975"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:33.977" level="INFO">{
    "ETag": "/s3v/encrypted/ozone-test-9475121440/multipartKey1-3013d289-7420-4fcc-98d0-011af53104eb-109994565433491527-1"
}</msg>
<status status="PASS" starttime="20230309 17:44:33.975" endtime="20230309 17:44:33.977"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:33.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:33.977" endtime="20230309 17:44:33.978"/>
</kw>
<status status="PASS" starttime="20230309 17:44:32.264" endtime="20230309 17:44:33.979"/>
</kw>
<msg timestamp="20230309 17:44:33.979" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:44:32.263" endtime="20230309 17:44:33.979"/>
</kw>
<msg timestamp="20230309 17:44:33.980" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-9475121440/multipartKey1-3013d289-7420-4fcc-98d0-011af53104eb-109994565433491527-1"
}</msg>
<status status="PASS" starttime="20230309 17:44:32.262" endtime="20230309 17:44:33.980"/>
</kw>
<msg timestamp="20230309 17:44:33.980" level="INFO">${result} = {
    "ETag": "/s3v/encrypted/ozone-test-9475121440/multipartKey1-3013d289-7420-4fcc-98d0-011af53104eb-109994565433491527-1"
}</msg>
<status status="PASS" starttime="20230309 17:44:32.261" endtime="20230309 17:44:33.980"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:33.985" level="INFO">Running command 'echo '{
    "ETag": "/s3v/encrypted/ozone-test-9475121440/multipartKey1-3013d289-7420-4fcc-98d0-011af53104eb-109994565433491527-1"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:34.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:34.046" level="INFO">${output} = /s3v/encrypted/ozone-test-9475121440/multipartKey1-3013d289-7420-4fcc-98d0-011af53104eb-109994565433491527-1</msg>
<status status="PASS" starttime="20230309 17:44:33.982" endtime="20230309 17:44:34.046"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:34.048" level="INFO">/s3v/encrypted/ozone-test-9475121440/multipartKey1-3013d289-7420-4fcc-98d0-011af53104eb-109994565433491527-1</msg>
<status status="PASS" starttime="20230309 17:44:34.047" endtime="20230309 17:44:34.049"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:34.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:34.049" endtime="20230309 17:44:34.050"/>
</kw>
<msg timestamp="20230309 17:44:34.051" level="INFO">${eTag1} = /s3v/encrypted/ozone-test-9475121440/multipartKey1-3013d289-7420-4fcc-98d0-011af53104eb-109994565433491527-1</msg>
<status status="PASS" starttime="20230309 17:44:33.981" endtime="20230309 17:44:34.051"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:44:34.057" endtime="20230309 17:44:34.057"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part2" &gt; /tmp/part2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:34.065" level="INFO">Running command 'echo "Part2" &gt; /tmp/part2'.</msg>
<msg timestamp="20230309 17:44:34.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:34.069" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:44:34.060" endtime="20230309 17:44:34.069"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:34.072" level="INFO"/>
<status status="PASS" starttime="20230309 17:44:34.071" endtime="20230309 17:44:34.072"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:34.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:34.074" endtime="20230309 17:44:34.076"/>
</kw>
<status status="PASS" starttime="20230309 17:44:34.059" endtime="20230309 17:44:34.078"/>
</kw>
<msg timestamp="20230309 17:44:34.078" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:44:34.059" endtime="20230309 17:44:34.080"/>
</kw>
<status status="PASS" starttime="20230309 17:44:34.058" endtime="20230309 17:44:34.080"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 2 --body /tmp/part2 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:34.094" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-9475121440/multipartKey1 --part-number 2 --body /tmp/part2 --upload-id 3013d289-7420-4fcc-98d0-011af53104eb-109994565433491527 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:35.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:35.207" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-9475121440/multipartKey1-3013d289-7420-4fcc-98d0-011af53104eb-109994565433491527-2"
}</msg>
<status status="PASS" starttime="20230309 17:44:34.089" endtime="20230309 17:44:35.207"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:35.210" level="INFO">{
    "ETag": "/s3v/encrypted/ozone-test-9475121440/multipartKey1-3013d289-7420-4fcc-98d0-011af53104eb-109994565433491527-2"
}</msg>
<status status="PASS" starttime="20230309 17:44:35.208" endtime="20230309 17:44:35.210"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:35.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:35.211" endtime="20230309 17:44:35.213"/>
</kw>
<status status="PASS" starttime="20230309 17:44:34.087" endtime="20230309 17:44:35.214"/>
</kw>
<msg timestamp="20230309 17:44:35.214" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:44:34.085" endtime="20230309 17:44:35.215"/>
</kw>
<msg timestamp="20230309 17:44:35.215" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-9475121440/multipartKey1-3013d289-7420-4fcc-98d0-011af53104eb-109994565433491527-2"
}</msg>
<status status="PASS" starttime="20230309 17:44:34.083" endtime="20230309 17:44:35.216"/>
</kw>
<msg timestamp="20230309 17:44:35.216" level="INFO">${result} = {
    "ETag": "/s3v/encrypted/ozone-test-9475121440/multipartKey1-3013d289-7420-4fcc-98d0-011af53104eb-109994565433491527-2"
}</msg>
<status status="PASS" starttime="20230309 17:44:34.080" endtime="20230309 17:44:35.217"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:35.224" level="INFO">Running command 'echo '{
    "ETag": "/s3v/encrypted/ozone-test-9475121440/multipartKey1-3013d289-7420-4fcc-98d0-011af53104eb-109994565433491527-2"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:35.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:35.286" level="INFO">${output} = /s3v/encrypted/ozone-test-9475121440/multipartKey1-3013d289-7420-4fcc-98d0-011af53104eb-109994565433491527-2</msg>
<status status="PASS" starttime="20230309 17:44:35.218" endtime="20230309 17:44:35.286"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:35.288" level="INFO">/s3v/encrypted/ozone-test-9475121440/multipartKey1-3013d289-7420-4fcc-98d0-011af53104eb-109994565433491527-2</msg>
<status status="PASS" starttime="20230309 17:44:35.287" endtime="20230309 17:44:35.288"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:35.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:35.288" endtime="20230309 17:44:35.289"/>
</kw>
<msg timestamp="20230309 17:44:35.290" level="INFO">${eTag2} = /s3v/encrypted/ozone-test-9475121440/multipartKey1-3013d289-7420-4fcc-98d0-011af53104eb-109994565433491527-2</msg>
<status status="PASS" starttime="20230309 17:44:35.217" endtime="20230309 17:44:35.290"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:44:35.290" endtime="20230309 17:44:35.291"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:35.301" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 3013d289-7420-4fcc-98d0-011af53104eb-109994565433491527 --bucket encrypted --key ozone-test-9475121440/multipartKey1 --multipart-upload 'Parts=[{ETag=/s3v/encrypted/ozone-test-9475121440/multipartKey1-3013d289-7420-4fcc-98d0-011af53104eb-109994565433491527-1,PartNumber=1},{ETag=/s3v/encrypted/ozone-test-9475121440/multipartKey1-3013d289-7420-4fcc-98d0-011af53104eb-109994565433491527-2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:36.432" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:36.433" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-9475121440/multipartKey1",
    "ETag": "118891602c7551b130711b92fc965a284d887e59b2f292101ed6802af83f87d3"
}</msg>
<status status="PASS" starttime="20230309 17:44:35.296" endtime="20230309 17:44:36.433"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:36.436" level="INFO">{
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-9475121440/multipartKey1",
    "ETag": "118891602c7551b130711b92fc965a284d887e59b2f292101ed6802af83f87d3"
}</msg>
<status status="PASS" starttime="20230309 17:44:36.433" endtime="20230309 17:44:36.436"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:36.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:36.436" endtime="20230309 17:44:36.438"/>
</kw>
<status status="PASS" starttime="20230309 17:44:35.295" endtime="20230309 17:44:36.438"/>
</kw>
<msg timestamp="20230309 17:44:36.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:44:35.294" endtime="20230309 17:44:36.439"/>
</kw>
<msg timestamp="20230309 17:44:36.440" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-9475121440/multipartKey1",
    "ETag": "118891602c7551b130711b92fc965a284d887e59b2f292101ed6802af83f87d3"
}</msg>
<status status="PASS" starttime="20230309 17:44:35.293" endtime="20230309 17:44:36.440"/>
</kw>
<msg timestamp="20230309 17:44:36.441" level="INFO">${result} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-9475121440/multipartKey1",
    "ETag": "118891602c7551b130711b92fc965a284d887e59b2f292101ed6802af83f87d3"
}</msg>
<status status="PASS" starttime="20230309 17:44:35.291" endtime="20230309 17:44:36.441"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:44:36.442" endtime="20230309 17:44:36.443"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:44:36.443" endtime="20230309 17:44:36.445"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:44:36.445" endtime="20230309 17:44:36.445"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 /tmp/${PREFIX}-multipartKey1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:36.457" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-9475121440/multipartKey1 /tmp/ozone-test-9475121440-multipartKey1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:38.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:38.268" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:44:36 GMT",
    "ContentLength": 5242886,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Ex...</msg>
<status status="PASS" starttime="20230309 17:44:36.451" endtime="20230309 17:44:38.268"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:38.272" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:44:36 GMT",
    "ContentLength": 5242886,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 09 Mar 2023 17:44:37 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230309 17:44:38.270" endtime="20230309 17:44:38.272"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:38.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:38.272" endtime="20230309 17:44:38.273"/>
</kw>
<status status="PASS" starttime="20230309 17:44:36.449" endtime="20230309 17:44:38.273"/>
</kw>
<msg timestamp="20230309 17:44:38.273" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:44:36.448" endtime="20230309 17:44:38.274"/>
</kw>
<msg timestamp="20230309 17:44:38.274" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:44:36 GMT",
    "ContentLength": 5242886,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Ex...</msg>
<status status="PASS" starttime="20230309 17:44:36.446" endtime="20230309 17:44:38.274"/>
</kw>
<msg timestamp="20230309 17:44:38.277" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:44:36 GMT",
    "ContentLength": 5242886,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Ex...</msg>
<status status="PASS" starttime="20230309 17:44:36.445" endtime="20230309 17:44:38.277"/>
</kw>
<kw name="Execute" library="os">
<arg>cat /tmp/part1 /tmp/part2 &gt; /tmp/${PREFIX}-multipartKey1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:38.284" level="INFO">Running command 'cat /tmp/part1 /tmp/part2 &gt; /tmp/ozone-test-9475121440-multipartKey1'.</msg>
<msg timestamp="20230309 17:44:38.302" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:38.303" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:44:38.280" endtime="20230309 17:44:38.303"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:38.308" level="INFO"/>
<status status="PASS" starttime="20230309 17:44:38.303" endtime="20230309 17:44:38.308"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:38.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:38.308" endtime="20230309 17:44:38.309"/>
</kw>
<status status="PASS" starttime="20230309 17:44:38.279" endtime="20230309 17:44:38.311"/>
</kw>
<msg timestamp="20230309 17:44:38.311" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:44:38.279" endtime="20230309 17:44:38.313"/>
</kw>
<status status="PASS" starttime="20230309 17:44:38.277" endtime="20230309 17:44:38.314"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/${PREFIX}-multipartKey1</arg>
<arg>/tmp/${PREFIX}-multipartKey1.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:38.330" level="INFO">Running command 'md5sum /tmp/ozone-test-9475121440-multipartKey1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:38.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:38.363" level="INFO">${output} = b673549faefb75a6912839b9b740e58d</msg>
<status status="PASS" starttime="20230309 17:44:38.319" endtime="20230309 17:44:38.363"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:38.365" level="INFO">b673549faefb75a6912839b9b740e58d</msg>
<status status="PASS" starttime="20230309 17:44:38.363" endtime="20230309 17:44:38.365"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:38.366" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:38.365" endtime="20230309 17:44:38.366"/>
</kw>
<status status="PASS" starttime="20230309 17:44:38.316" endtime="20230309 17:44:38.367"/>
</kw>
<msg timestamp="20230309 17:44:38.367" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:44:38.315" endtime="20230309 17:44:38.371"/>
</kw>
<msg timestamp="20230309 17:44:38.371" level="INFO">${checksumbefore} = b673549faefb75a6912839b9b740e58d</msg>
<status status="PASS" starttime="20230309 17:44:38.314" endtime="20230309 17:44:38.372"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:38.385" level="INFO">Running command 'md5sum /tmp/ozone-test-9475121440-multipartKey1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:38.404" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:38.404" level="INFO">${output} = b673549faefb75a6912839b9b740e58d</msg>
<status status="PASS" starttime="20230309 17:44:38.375" endtime="20230309 17:44:38.404"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:38.405" level="INFO">b673549faefb75a6912839b9b740e58d</msg>
<status status="PASS" starttime="20230309 17:44:38.404" endtime="20230309 17:44:38.406"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:38.406" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:38.406" endtime="20230309 17:44:38.407"/>
</kw>
<status status="PASS" starttime="20230309 17:44:38.374" endtime="20230309 17:44:38.407"/>
</kw>
<msg timestamp="20230309 17:44:38.407" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:44:38.373" endtime="20230309 17:44:38.408"/>
</kw>
<msg timestamp="20230309 17:44:38.409" level="INFO">${checksumafter} = b673549faefb75a6912839b9b740e58d</msg>
<status status="PASS" starttime="20230309 17:44:38.372" endtime="20230309 17:44:38.409"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 17:44:38.409" endtime="20230309 17:44:38.411"/>
</kw>
<status status="PASS" starttime="20230309 17:44:38.314" endtime="20230309 17:44:38.411"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:44:30.928" endtime="20230309 17:44:38.411"/>
</test>
<test id="s1-s5-s8-t4" name="Test Multipart Upload Complete Entity too small" line="118">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:44:38.419" level="INFO">${randStr} = 6285878441</msg>
<status status="PASS" starttime="20230309 17:44:38.418" endtime="20230309 17:44:38.419"/>
</kw>
<msg timestamp="20230309 17:44:38.420" level="INFO">${random} = ozone-test-6285878441</msg>
<status status="PASS" starttime="20230309 17:44:38.418" endtime="20230309 17:44:38.420"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:44:38.421" level="INFO">${PREFIX} = ozone-test-6285878441</msg>
<status status="PASS" starttime="20230309 17:44:38.420" endtime="20230309 17:44:38.421"/>
</kw>
<status status="PASS" starttime="20230309 17:44:38.416" endtime="20230309 17:44:38.421"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:38.431" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-6285878441/multipartKey2 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:39.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:39.414" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-6285878441/multipartKey2",
    "UploadId": "97ece0f0-7994-437b-9e73-8940621bc4eb-109994565913804874"
}</msg>
<status status="PASS" starttime="20230309 17:44:38.427" endtime="20230309 17:44:39.414"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:39.416" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-6285878441/multipartKey2",
    "UploadId": "97ece0f0-7994-437b-9e73-8940621bc4eb-109994565913804874"
}</msg>
<status status="PASS" starttime="20230309 17:44:39.415" endtime="20230309 17:44:39.416"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:39.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:39.416" endtime="20230309 17:44:39.417"/>
</kw>
<status status="PASS" starttime="20230309 17:44:38.425" endtime="20230309 17:44:39.418"/>
</kw>
<msg timestamp="20230309 17:44:39.418" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:44:38.425" endtime="20230309 17:44:39.418"/>
</kw>
<msg timestamp="20230309 17:44:39.419" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-6285878441/multipartKey2",
    "UploadId": "97ece0f0-7994-437b-9e73-8940621bc4eb-109994565913804874"
}</msg>
<status status="PASS" starttime="20230309 17:44:38.423" endtime="20230309 17:44:39.419"/>
</kw>
<msg timestamp="20230309 17:44:39.419" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-6285878441/multipartKey2",
    "UploadId": "97ece0f0-7994-437b-9e73-8940621bc4eb-109994565913804874"
}</msg>
<status status="PASS" starttime="20230309 17:44:38.422" endtime="20230309 17:44:39.419"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:39.425" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-6285878441/multipartKey2",
    "UploadId": "97ece0f0-7994-437b-9e73-8940621bc4eb-109994565913804874"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:39.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:39.524" level="INFO">${output} = 97ece0f0-7994-437b-9e73-8940621bc4eb-109994565913804874</msg>
<status status="PASS" starttime="20230309 17:44:39.420" endtime="20230309 17:44:39.524"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:39.526" level="INFO">97ece0f0-7994-437b-9e73-8940621bc4eb-109994565913804874</msg>
<status status="PASS" starttime="20230309 17:44:39.525" endtime="20230309 17:44:39.526"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:39.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:39.527" endtime="20230309 17:44:39.528"/>
</kw>
<msg timestamp="20230309 17:44:39.529" level="INFO">${uploadID} = 97ece0f0-7994-437b-9e73-8940621bc4eb-109994565913804874</msg>
<status status="PASS" starttime="20230309 17:44:39.419" endtime="20230309 17:44:39.529"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:44:39.529" endtime="20230309 17:44:39.530"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:44:39.530" endtime="20230309 17:44:39.532"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:44:39.532" endtime="20230309 17:44:39.533"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part1" &gt; /tmp/part1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:39.540" level="INFO">Running command 'echo "Part1" &gt; /tmp/part1'.</msg>
<msg timestamp="20230309 17:44:39.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:39.546" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:44:39.536" endtime="20230309 17:44:39.546"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:39.549" level="INFO"/>
<status status="PASS" starttime="20230309 17:44:39.548" endtime="20230309 17:44:39.549"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:39.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:39.549" endtime="20230309 17:44:39.550"/>
</kw>
<status status="PASS" starttime="20230309 17:44:39.535" endtime="20230309 17:44:39.551"/>
</kw>
<msg timestamp="20230309 17:44:39.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:44:39.534" endtime="20230309 17:44:39.552"/>
</kw>
<status status="PASS" starttime="20230309 17:44:39.533" endtime="20230309 17:44:39.553"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey2 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:39.561" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-6285878441/multipartKey2 --part-number 1 --body /tmp/part1 --upload-id 97ece0f0-7994-437b-9e73-8940621bc4eb-109994565913804874 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:40.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:40.709" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-6285878441/multipartKey2-97ece0f0-7994-437b-9e73-8940621bc4eb-109994565913804874-1"
}</msg>
<status status="PASS" starttime="20230309 17:44:39.558" endtime="20230309 17:44:40.709"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:40.711" level="INFO">{
    "ETag": "/s3v/encrypted/ozone-test-6285878441/multipartKey2-97ece0f0-7994-437b-9e73-8940621bc4eb-109994565913804874-1"
}</msg>
<status status="PASS" starttime="20230309 17:44:40.710" endtime="20230309 17:44:40.711"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:40.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:40.712" endtime="20230309 17:44:40.713"/>
</kw>
<status status="PASS" starttime="20230309 17:44:39.556" endtime="20230309 17:44:40.715"/>
</kw>
<msg timestamp="20230309 17:44:40.715" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:44:39.556" endtime="20230309 17:44:40.717"/>
</kw>
<msg timestamp="20230309 17:44:40.718" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-6285878441/multipartKey2-97ece0f0-7994-437b-9e73-8940621bc4eb-109994565913804874-1"
}</msg>
<status status="PASS" starttime="20230309 17:44:39.554" endtime="20230309 17:44:40.718"/>
</kw>
<msg timestamp="20230309 17:44:40.718" level="INFO">${result} = {
    "ETag": "/s3v/encrypted/ozone-test-6285878441/multipartKey2-97ece0f0-7994-437b-9e73-8940621bc4eb-109994565913804874-1"
}</msg>
<status status="PASS" starttime="20230309 17:44:39.553" endtime="20230309 17:44:40.719"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:40.726" level="INFO">Running command 'echo '{
    "ETag": "/s3v/encrypted/ozone-test-6285878441/multipartKey2-97ece0f0-7994-437b-9e73-8940621bc4eb-109994565913804874-1"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:40.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:40.791" level="INFO">${output} = /s3v/encrypted/ozone-test-6285878441/multipartKey2-97ece0f0-7994-437b-9e73-8940621bc4eb-109994565913804874-1</msg>
<status status="PASS" starttime="20230309 17:44:40.720" endtime="20230309 17:44:40.791"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:40.793" level="INFO">/s3v/encrypted/ozone-test-6285878441/multipartKey2-97ece0f0-7994-437b-9e73-8940621bc4eb-109994565913804874-1</msg>
<status status="PASS" starttime="20230309 17:44:40.792" endtime="20230309 17:44:40.793"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:40.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:40.793" endtime="20230309 17:44:40.793"/>
</kw>
<msg timestamp="20230309 17:44:40.794" level="INFO">${eTag1} = /s3v/encrypted/ozone-test-6285878441/multipartKey2-97ece0f0-7994-437b-9e73-8940621bc4eb-109994565913804874-1</msg>
<status status="PASS" starttime="20230309 17:44:40.720" endtime="20230309 17:44:40.794"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:44:40.794" endtime="20230309 17:44:40.795"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part2" &gt; /tmp/part2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:40.800" level="INFO">Running command 'echo "Part2" &gt; /tmp/part2'.</msg>
<msg timestamp="20230309 17:44:40.803" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:40.804" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:44:40.797" endtime="20230309 17:44:40.804"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:40.805" level="INFO"/>
<status status="PASS" starttime="20230309 17:44:40.805" endtime="20230309 17:44:40.805"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:40.807" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:40.806" endtime="20230309 17:44:40.807"/>
</kw>
<status status="PASS" starttime="20230309 17:44:40.796" endtime="20230309 17:44:40.807"/>
</kw>
<msg timestamp="20230309 17:44:40.809" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:44:40.796" endtime="20230309 17:44:40.810"/>
</kw>
<status status="PASS" starttime="20230309 17:44:40.795" endtime="20230309 17:44:40.810"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey2 --part-number 2 --body /tmp/part2 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:40.817" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-6285878441/multipartKey2 --part-number 2 --body /tmp/part2 --upload-id 97ece0f0-7994-437b-9e73-8940621bc4eb-109994565913804874 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:41.916" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:41.916" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-6285878441/multipartKey2-97ece0f0-7994-437b-9e73-8940621bc4eb-109994565913804874-2"
}</msg>
<status status="PASS" starttime="20230309 17:44:40.814" endtime="20230309 17:44:41.916"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:41.918" level="INFO">{
    "ETag": "/s3v/encrypted/ozone-test-6285878441/multipartKey2-97ece0f0-7994-437b-9e73-8940621bc4eb-109994565913804874-2"
}</msg>
<status status="PASS" starttime="20230309 17:44:41.917" endtime="20230309 17:44:41.919"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:41.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:41.919" endtime="20230309 17:44:41.919"/>
</kw>
<status status="PASS" starttime="20230309 17:44:40.814" endtime="20230309 17:44:41.920"/>
</kw>
<msg timestamp="20230309 17:44:41.920" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:44:40.813" endtime="20230309 17:44:41.921"/>
</kw>
<msg timestamp="20230309 17:44:41.921" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-6285878441/multipartKey2-97ece0f0-7994-437b-9e73-8940621bc4eb-109994565913804874-2"
}</msg>
<status status="PASS" starttime="20230309 17:44:40.811" endtime="20230309 17:44:41.921"/>
</kw>
<msg timestamp="20230309 17:44:41.922" level="INFO">${result} = {
    "ETag": "/s3v/encrypted/ozone-test-6285878441/multipartKey2-97ece0f0-7994-437b-9e73-8940621bc4eb-109994565913804874-2"
}</msg>
<status status="PASS" starttime="20230309 17:44:40.810" endtime="20230309 17:44:41.922"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:41.926" level="INFO">Running command 'echo '{
    "ETag": "/s3v/encrypted/ozone-test-6285878441/multipartKey2-97ece0f0-7994-437b-9e73-8940621bc4eb-109994565913804874-2"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:41.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:41.985" level="INFO">${output} = /s3v/encrypted/ozone-test-6285878441/multipartKey2-97ece0f0-7994-437b-9e73-8940621bc4eb-109994565913804874-2</msg>
<status status="PASS" starttime="20230309 17:44:41.923" endtime="20230309 17:44:41.985"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:41.987" level="INFO">/s3v/encrypted/ozone-test-6285878441/multipartKey2-97ece0f0-7994-437b-9e73-8940621bc4eb-109994565913804874-2</msg>
<status status="PASS" starttime="20230309 17:44:41.986" endtime="20230309 17:44:41.987"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:41.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:41.987" endtime="20230309 17:44:41.988"/>
</kw>
<msg timestamp="20230309 17:44:41.989" level="INFO">${eTag2} = /s3v/encrypted/ozone-test-6285878441/multipartKey2-97ece0f0-7994-437b-9e73-8940621bc4eb-109994565913804874-2</msg>
<status status="PASS" starttime="20230309 17:44:41.922" endtime="20230309 17:44:41.989"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:44:41.989" endtime="20230309 17:44:41.990"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey2 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:41.997" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 97ece0f0-7994-437b-9e73-8940621bc4eb-109994565913804874 --bucket encrypted --key ozone-test-6285878441/multipartKey2 --multipart-upload 'Parts=[{ETag=/s3v/encrypted/ozone-test-6285878441/multipartKey2-97ece0f0-7994-437b-9e73-8940621bc4eb-109994565913804874-1,PartNumber=1},{ETag=/s3v/encrypted/ozone-test-6285878441/multipartKey2-97ece0f0-7994-437b-9e73-8940621bc4eb-109994565913804874-2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:43.106" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:44:43.106" level="INFO">${output} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20230309 17:44:41.993" endtime="20230309 17:44:43.106"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:43.111" level="INFO">
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, except the last part.</msg>
<status status="PASS" starttime="20230309 17:44:43.109" endtime="20230309 17:44:43.112"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:43.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:43.112" endtime="20230309 17:44:43.114"/>
</kw>
<msg timestamp="20230309 17:44:43.114" level="INFO">${output} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20230309 17:44:41.992" endtime="20230309 17:44:43.114"/>
</kw>
<msg timestamp="20230309 17:44:43.115" level="INFO">${result} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20230309 17:44:41.990" endtime="20230309 17:44:43.115"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>EntityTooSmall</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:44:43.115" endtime="20230309 17:44:43.116"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:44:38.414" endtime="20230309 17:44:43.116"/>
</test>
<test id="s1-s5-s8-t5" name="Test Multipart Upload Complete Invalid part errors and complete mpu with few parts" line="141">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:44:43.128" level="INFO">${randStr} = 7265260871</msg>
<status status="PASS" starttime="20230309 17:44:43.126" endtime="20230309 17:44:43.128"/>
</kw>
<msg timestamp="20230309 17:44:43.128" level="INFO">${random} = ozone-test-7265260871</msg>
<status status="PASS" starttime="20230309 17:44:43.120" endtime="20230309 17:44:43.129"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:44:43.130" level="INFO">${PREFIX} = ozone-test-7265260871</msg>
<status status="PASS" starttime="20230309 17:44:43.130" endtime="20230309 17:44:43.131"/>
</kw>
<status status="PASS" starttime="20230309 17:44:43.119" endtime="20230309 17:44:43.131"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey3</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:43.138" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-7265260871/multipartKey3 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:44.119" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:44.119" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-7265260871/multipartKey3",
    "UploadId": "baefb76b-9df3-44a5-a78e-0e906a2b7b2c-109994566221955149"
}</msg>
<status status="PASS" starttime="20230309 17:44:43.135" endtime="20230309 17:44:44.119"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:44.121" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-7265260871/multipartKey3",
    "UploadId": "baefb76b-9df3-44a5-a78e-0e906a2b7b2c-109994566221955149"
}</msg>
<status status="PASS" starttime="20230309 17:44:44.120" endtime="20230309 17:44:44.121"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:44.122" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:44.122" endtime="20230309 17:44:44.123"/>
</kw>
<status status="PASS" starttime="20230309 17:44:43.134" endtime="20230309 17:44:44.123"/>
</kw>
<msg timestamp="20230309 17:44:44.123" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:44:43.133" endtime="20230309 17:44:44.124"/>
</kw>
<msg timestamp="20230309 17:44:44.124" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-7265260871/multipartKey3",
    "UploadId": "baefb76b-9df3-44a5-a78e-0e906a2b7b2c-109994566221955149"
}</msg>
<status status="PASS" starttime="20230309 17:44:43.133" endtime="20230309 17:44:44.124"/>
</kw>
<msg timestamp="20230309 17:44:44.125" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-7265260871/multipartKey3",
    "UploadId": "baefb76b-9df3-44a5-a78e-0e906a2b7b2c-109994566221955149"
}</msg>
<status status="PASS" starttime="20230309 17:44:43.132" endtime="20230309 17:44:44.125"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:44.131" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-7265260871/multipartKey3",
    "UploadId": "baefb76b-9df3-44a5-a78e-0e906a2b7b2c-109994566221955149"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:44.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:44.207" level="INFO">${output} = baefb76b-9df3-44a5-a78e-0e906a2b7b2c-109994566221955149</msg>
<status status="PASS" starttime="20230309 17:44:44.126" endtime="20230309 17:44:44.207"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:44.209" level="INFO">baefb76b-9df3-44a5-a78e-0e906a2b7b2c-109994566221955149</msg>
<status status="PASS" starttime="20230309 17:44:44.208" endtime="20230309 17:44:44.209"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:44.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:44.209" endtime="20230309 17:44:44.211"/>
</kw>
<msg timestamp="20230309 17:44:44.211" level="INFO">${uploadID} = baefb76b-9df3-44a5-a78e-0e906a2b7b2c-109994566221955149</msg>
<status status="PASS" starttime="20230309 17:44:44.125" endtime="20230309 17:44:44.212"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:44:44.213" endtime="20230309 17:44:44.214"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:44:44.214" endtime="20230309 17:44:44.216"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:44:44.216" endtime="20230309 17:44:44.217"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:44.226" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id baefb76b-9df3-44a5-a78e-0e906a2b7b2c-109994566221955149 --bucket encrypted --key ozone-test-7265260871/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:45.311" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:44:45.311" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20230309 17:44:44.220" endtime="20230309 17:44:45.311"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:45.313" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20230309 17:44:45.312" endtime="20230309 17:44:45.313"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:45.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:45.314" endtime="20230309 17:44:45.315"/>
</kw>
<msg timestamp="20230309 17:44:45.315" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20230309 17:44:44.219" endtime="20230309 17:44:45.316"/>
</kw>
<msg timestamp="20230309 17:44:45.316" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20230309 17:44:44.217" endtime="20230309 17:44:45.316"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:44:45.316" endtime="20230309 17:44:45.317"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=2},{ETag=etag2,PartNumber=1}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:45.323" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id baefb76b-9df3-44a5-a78e-0e906a2b7b2c-109994566221955149 --bucket encrypted --key ozone-test-7265260871/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=2},{ETag=etag2,PartNumber=1}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:46.291" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:44:46.291" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20230309 17:44:45.320" endtime="20230309 17:44:46.292"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:46.294" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20230309 17:44:46.293" endtime="20230309 17:44:46.294"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:46.295" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:46.294" endtime="20230309 17:44:46.295"/>
</kw>
<msg timestamp="20230309 17:44:46.296" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20230309 17:44:45.319" endtime="20230309 17:44:46.296"/>
</kw>
<msg timestamp="20230309 17:44:46.297" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20230309 17:44:45.318" endtime="20230309 17:44:46.297"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:44:46.297" endtime="20230309 17:44:46.298"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:46.305" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:46.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:46.345" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:44:46.301" endtime="20230309 17:44:46.345"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:46.348" level="INFO"/>
<status status="PASS" starttime="20230309 17:44:46.346" endtime="20230309 17:44:46.354"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:46.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:46.354" endtime="20230309 17:44:46.355"/>
</kw>
<status status="PASS" starttime="20230309 17:44:46.300" endtime="20230309 17:44:46.355"/>
</kw>
<msg timestamp="20230309 17:44:46.356" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:44:46.300" endtime="20230309 17:44:46.356"/>
</kw>
<status status="PASS" starttime="20230309 17:44:46.299" endtime="20230309 17:44:46.357"/>
</kw>
<status status="PASS" starttime="20230309 17:44:46.298" endtime="20230309 17:44:46.357"/>
</kw>
<status status="PASS" starttime="20230309 17:44:46.298" endtime="20230309 17:44:46.357"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:46.366" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-7265260871/multipartKey3 --part-number 1 --body /tmp/part1 --upload-id baefb76b-9df3-44a5-a78e-0e906a2b7b2c-109994566221955149 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:47.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:47.905" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-7265260871/multipartKey3-baefb76b-9df3-44a5-a78e-0e906a2b7b2c-109994566221955149-1"
}</msg>
<status status="PASS" starttime="20230309 17:44:46.361" endtime="20230309 17:44:47.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:47.907" level="INFO">{
    "ETag": "/s3v/encrypted/ozone-test-7265260871/multipartKey3-baefb76b-9df3-44a5-a78e-0e906a2b7b2c-109994566221955149-1"
}</msg>
<status status="PASS" starttime="20230309 17:44:47.906" endtime="20230309 17:44:47.907"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:47.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:47.908" endtime="20230309 17:44:47.908"/>
</kw>
<status status="PASS" starttime="20230309 17:44:46.360" endtime="20230309 17:44:47.909"/>
</kw>
<msg timestamp="20230309 17:44:47.909" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:44:46.359" endtime="20230309 17:44:47.910"/>
</kw>
<msg timestamp="20230309 17:44:47.911" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-7265260871/multipartKey3-baefb76b-9df3-44a5-a78e-0e906a2b7b2c-109994566221955149-1"
}</msg>
<status status="PASS" starttime="20230309 17:44:46.358" endtime="20230309 17:44:47.911"/>
</kw>
<msg timestamp="20230309 17:44:47.911" level="INFO">${result} = {
    "ETag": "/s3v/encrypted/ozone-test-7265260871/multipartKey3-baefb76b-9df3-44a5-a78e-0e906a2b7b2c-109994566221955149-1"
}</msg>
<status status="PASS" starttime="20230309 17:44:46.357" endtime="20230309 17:44:47.911"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:47.916" level="INFO">Running command 'echo '{
    "ETag": "/s3v/encrypted/ozone-test-7265260871/multipartKey3-baefb76b-9df3-44a5-a78e-0e906a2b7b2c-109994566221955149-1"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:48.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:48.008" level="INFO">${output} = /s3v/encrypted/ozone-test-7265260871/multipartKey3-baefb76b-9df3-44a5-a78e-0e906a2b7b2c-109994566221955149-1</msg>
<status status="PASS" starttime="20230309 17:44:47.912" endtime="20230309 17:44:48.008"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:48.010" level="INFO">/s3v/encrypted/ozone-test-7265260871/multipartKey3-baefb76b-9df3-44a5-a78e-0e906a2b7b2c-109994566221955149-1</msg>
<status status="PASS" starttime="20230309 17:44:48.009" endtime="20230309 17:44:48.010"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:48.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:48.010" endtime="20230309 17:44:48.011"/>
</kw>
<msg timestamp="20230309 17:44:48.011" level="INFO">${eTag1} = /s3v/encrypted/ozone-test-7265260871/multipartKey3-baefb76b-9df3-44a5-a78e-0e906a2b7b2c-109994566221955149-1</msg>
<status status="PASS" starttime="20230309 17:44:47.911" endtime="20230309 17:44:48.011"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:44:48.011" endtime="20230309 17:44:48.012"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 2 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:48.018" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-7265260871/multipartKey3 --part-number 2 --body /tmp/part1 --upload-id baefb76b-9df3-44a5-a78e-0e906a2b7b2c-109994566221955149 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:49.621" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:49.622" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-7265260871/multipartKey3-baefb76b-9df3-44a5-a78e-0e906a2b7b2c-109994566221955149-2"
}</msg>
<status status="PASS" starttime="20230309 17:44:48.015" endtime="20230309 17:44:49.622"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:49.623" level="INFO">{
    "ETag": "/s3v/encrypted/ozone-test-7265260871/multipartKey3-baefb76b-9df3-44a5-a78e-0e906a2b7b2c-109994566221955149-2"
}</msg>
<status status="PASS" starttime="20230309 17:44:49.622" endtime="20230309 17:44:49.623"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:49.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:49.624" endtime="20230309 17:44:49.625"/>
</kw>
<status status="PASS" starttime="20230309 17:44:48.014" endtime="20230309 17:44:49.625"/>
</kw>
<msg timestamp="20230309 17:44:49.626" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:44:48.014" endtime="20230309 17:44:49.626"/>
</kw>
<msg timestamp="20230309 17:44:49.628" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-7265260871/multipartKey3-baefb76b-9df3-44a5-a78e-0e906a2b7b2c-109994566221955149-2"
}</msg>
<status status="PASS" starttime="20230309 17:44:48.013" endtime="20230309 17:44:49.628"/>
</kw>
<msg timestamp="20230309 17:44:49.628" level="INFO">${result} = {
    "ETag": "/s3v/encrypted/ozone-test-7265260871/multipartKey3-baefb76b-9df3-44a5-a78e-0e906a2b7b2c-109994566221955149-2"
}</msg>
<status status="PASS" starttime="20230309 17:44:48.012" endtime="20230309 17:44:49.628"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:49.635" level="INFO">Running command 'echo '{
    "ETag": "/s3v/encrypted/ozone-test-7265260871/multipartKey3-baefb76b-9df3-44a5-a78e-0e906a2b7b2c-109994566221955149-2"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:49.714" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:49.714" level="INFO">${output} = /s3v/encrypted/ozone-test-7265260871/multipartKey3-baefb76b-9df3-44a5-a78e-0e906a2b7b2c-109994566221955149-2</msg>
<status status="PASS" starttime="20230309 17:44:49.631" endtime="20230309 17:44:49.715"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:49.717" level="INFO">/s3v/encrypted/ozone-test-7265260871/multipartKey3-baefb76b-9df3-44a5-a78e-0e906a2b7b2c-109994566221955149-2</msg>
<status status="PASS" starttime="20230309 17:44:49.715" endtime="20230309 17:44:49.717"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:49.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:49.717" endtime="20230309 17:44:49.719"/>
</kw>
<msg timestamp="20230309 17:44:49.720" level="INFO">${eTag2} = /s3v/encrypted/ozone-test-7265260871/multipartKey3-baefb76b-9df3-44a5-a78e-0e906a2b7b2c-109994566221955149-2</msg>
<status status="PASS" starttime="20230309 17:44:49.629" endtime="20230309 17:44:49.720"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:44:49.721" endtime="20230309 17:44:49.722"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part3" &gt; /tmp/part3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:49.730" level="INFO">Running command 'echo "Part3" &gt; /tmp/part3'.</msg>
<msg timestamp="20230309 17:44:49.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:49.733" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:44:49.725" endtime="20230309 17:44:49.733"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:49.737" level="INFO"/>
<status status="PASS" starttime="20230309 17:44:49.734" endtime="20230309 17:44:49.737"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:49.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:49.737" endtime="20230309 17:44:49.738"/>
</kw>
<status status="PASS" starttime="20230309 17:44:49.724" endtime="20230309 17:44:49.739"/>
</kw>
<msg timestamp="20230309 17:44:49.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:44:49.724" endtime="20230309 17:44:49.740"/>
</kw>
<status status="PASS" starttime="20230309 17:44:49.722" endtime="20230309 17:44:49.740"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 3 --body /tmp/part3 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:49.756" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-7265260871/multipartKey3 --part-number 3 --body /tmp/part3 --upload-id baefb76b-9df3-44a5-a78e-0e906a2b7b2c-109994566221955149 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:50.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:50.858" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-7265260871/multipartKey3-baefb76b-9df3-44a5-a78e-0e906a2b7b2c-109994566221955149-3"
}</msg>
<status status="PASS" starttime="20230309 17:44:49.752" endtime="20230309 17:44:50.859"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:50.861" level="INFO">{
    "ETag": "/s3v/encrypted/ozone-test-7265260871/multipartKey3-baefb76b-9df3-44a5-a78e-0e906a2b7b2c-109994566221955149-3"
}</msg>
<status status="PASS" starttime="20230309 17:44:50.860" endtime="20230309 17:44:50.861"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:50.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:50.861" endtime="20230309 17:44:50.862"/>
</kw>
<status status="PASS" starttime="20230309 17:44:49.749" endtime="20230309 17:44:50.863"/>
</kw>
<msg timestamp="20230309 17:44:50.863" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:44:49.748" endtime="20230309 17:44:50.864"/>
</kw>
<msg timestamp="20230309 17:44:50.864" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-7265260871/multipartKey3-baefb76b-9df3-44a5-a78e-0e906a2b7b2c-109994566221955149-3"
}</msg>
<status status="PASS" starttime="20230309 17:44:49.741" endtime="20230309 17:44:50.864"/>
</kw>
<msg timestamp="20230309 17:44:50.865" level="INFO">${result} = {
    "ETag": "/s3v/encrypted/ozone-test-7265260871/multipartKey3-baefb76b-9df3-44a5-a78e-0e906a2b7b2c-109994566221955149-3"
}</msg>
<status status="PASS" starttime="20230309 17:44:49.740" endtime="20230309 17:44:50.865"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag3}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:50.869" level="INFO">Running command 'echo '{
    "ETag": "/s3v/encrypted/ozone-test-7265260871/multipartKey3-baefb76b-9df3-44a5-a78e-0e906a2b7b2c-109994566221955149-3"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:50.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:50.938" level="INFO">${output} = /s3v/encrypted/ozone-test-7265260871/multipartKey3-baefb76b-9df3-44a5-a78e-0e906a2b7b2c-109994566221955149-3</msg>
<status status="PASS" starttime="20230309 17:44:50.866" endtime="20230309 17:44:50.938"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:50.941" level="INFO">/s3v/encrypted/ozone-test-7265260871/multipartKey3-baefb76b-9df3-44a5-a78e-0e906a2b7b2c-109994566221955149-3</msg>
<status status="PASS" starttime="20230309 17:44:50.938" endtime="20230309 17:44:50.942"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:50.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:50.942" endtime="20230309 17:44:50.943"/>
</kw>
<msg timestamp="20230309 17:44:50.943" level="INFO">${eTag3} = /s3v/encrypted/ozone-test-7265260871/multipartKey3-baefb76b-9df3-44a5-a78e-0e906a2b7b2c-109994566221955149-3</msg>
<status status="PASS" starttime="20230309 17:44:50.865" endtime="20230309 17:44:50.944"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:44:50.944" endtime="20230309 17:44:50.945"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:50.953" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id baefb76b-9df3-44a5-a78e-0e906a2b7b2c-109994566221955149 --bucket encrypted --key ozone-test-7265260871/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:52.010" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:44:52.010" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20230309 17:44:50.948" endtime="20230309 17:44:52.010"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:52.013" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20230309 17:44:52.011" endtime="20230309 17:44:52.013"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:52.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:52.013" endtime="20230309 17:44:52.015"/>
</kw>
<msg timestamp="20230309 17:44:52.018" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20230309 17:44:50.947" endtime="20230309 17:44:52.019"/>
</kw>
<msg timestamp="20230309 17:44:52.019" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20230309 17:44:50.945" endtime="20230309 17:44:52.020"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:44:52.022" endtime="20230309 17:44:52.022"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:52.038" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id baefb76b-9df3-44a5-a78e-0e906a2b7b2c-109994566221955149 --bucket encrypted --key ozone-test-7265260871/multipartKey3 --multipart-upload 'Parts=[{ETag=/s3v/encrypted/ozone-test-7265260871/multipartKey3-baefb76b-9df3-44a5-a78e-0e906a2b7b2c-109994566221955149-1,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:53.084" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:44:53.084" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20230309 17:44:52.031" endtime="20230309 17:44:53.084"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:53.086" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20230309 17:44:53.085" endtime="20230309 17:44:53.086"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:53.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:53.086" endtime="20230309 17:44:53.087"/>
</kw>
<msg timestamp="20230309 17:44:53.088" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20230309 17:44:52.029" endtime="20230309 17:44:53.088"/>
</kw>
<msg timestamp="20230309 17:44:53.088" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20230309 17:44:52.024" endtime="20230309 17:44:53.088"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:44:53.088" endtime="20230309 17:44:53.089"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=4},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:53.094" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id baefb76b-9df3-44a5-a78e-0e906a2b7b2c-109994566221955149 --bucket encrypted --key ozone-test-7265260871/multipartKey3 --multipart-upload 'Parts=[{ETag=/s3v/encrypted/ozone-test-7265260871/multipartKey3-baefb76b-9df3-44a5-a78e-0e906a2b7b2c-109994566221955149-1,PartNumber=4},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:54.033" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:44:54.034" level="INFO">${output} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20230309 17:44:53.091" endtime="20230309 17:44:54.034"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:54.036" level="INFO">
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20230309 17:44:54.035" endtime="20230309 17:44:54.036"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:54.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:54.036" endtime="20230309 17:44:54.037"/>
</kw>
<msg timestamp="20230309 17:44:54.038" level="INFO">${output} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20230309 17:44:53.090" endtime="20230309 17:44:54.038"/>
</kw>
<msg timestamp="20230309 17:44:54.038" level="INFO">${result} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20230309 17:44:53.089" endtime="20230309 17:44:54.038"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPartOrder</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:44:54.038" endtime="20230309 17:44:54.039"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag3},PartNumber=3}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:54.048" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id baefb76b-9df3-44a5-a78e-0e906a2b7b2c-109994566221955149 --bucket encrypted --key ozone-test-7265260871/multipartKey3 --multipart-upload 'Parts=[{ETag=/s3v/encrypted/ozone-test-7265260871/multipartKey3-baefb76b-9df3-44a5-a78e-0e906a2b7b2c-109994566221955149-1,PartNumber=1},{ETag=/s3v/encrypted/ozone-test-7265260871/multipartKey3-baefb76b-9df3-44a5-a78e-0e906a2b7b2c-109994566221955149-3,PartNumber=3}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:54.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:54.983" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-7265260871/multipartKey3",
    "ETag": "2c1f2769566cc0485903e307961e08f78a849f739cdd8eaaa95f9257e9167303"
}</msg>
<status status="PASS" starttime="20230309 17:44:54.043" endtime="20230309 17:44:54.983"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:54.987" level="INFO">{
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-7265260871/multipartKey3",
    "ETag": "2c1f2769566cc0485903e307961e08f78a849f739cdd8eaaa95f9257e9167303"
}</msg>
<status status="PASS" starttime="20230309 17:44:54.984" endtime="20230309 17:44:54.987"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:54.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:54.988" endtime="20230309 17:44:54.990"/>
</kw>
<status status="PASS" starttime="20230309 17:44:54.043" endtime="20230309 17:44:54.990"/>
</kw>
<msg timestamp="20230309 17:44:54.990" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:44:54.042" endtime="20230309 17:44:54.991"/>
</kw>
<msg timestamp="20230309 17:44:54.991" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-7265260871/multipartKey3",
    "ETag": "2c1f2769566cc0485903e307961e08f78a849f739cdd8eaaa95f9257e9167303"
}</msg>
<status status="PASS" starttime="20230309 17:44:54.041" endtime="20230309 17:44:54.991"/>
</kw>
<msg timestamp="20230309 17:44:54.992" level="INFO">${result} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-7265260871/multipartKey3",
    "ETag": "2c1f2769566cc0485903e307961e08f78a849f739cdd8eaaa95f9257e9167303"
}</msg>
<status status="PASS" starttime="20230309 17:44:54.039" endtime="20230309 17:44:54.992"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:44:54.992" endtime="20230309 17:44:54.993"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:44:54.993" endtime="20230309 17:44:54.993"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:44:54.994" endtime="20230309 17:44:54.996"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 /tmp/${PREFIX}-multipartKey3.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:55.010" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-7265260871/multipartKey3 /tmp/ozone-test-7265260871-multipartKey3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:56.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:56.668" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:44:54 GMT",
    "ContentLength": 5242886,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Ex...</msg>
<status status="PASS" starttime="20230309 17:44:55.004" endtime="20230309 17:44:56.668"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:56.670" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:44:54 GMT",
    "ContentLength": 5242886,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 09 Mar 2023 17:44:55 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230309 17:44:56.669" endtime="20230309 17:44:56.670"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:56.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:56.670" endtime="20230309 17:44:56.671"/>
</kw>
<status status="PASS" starttime="20230309 17:44:55.003" endtime="20230309 17:44:56.672"/>
</kw>
<msg timestamp="20230309 17:44:56.672" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:44:55.000" endtime="20230309 17:44:56.675"/>
</kw>
<msg timestamp="20230309 17:44:56.675" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:44:54 GMT",
    "ContentLength": 5242886,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Ex...</msg>
<status status="PASS" starttime="20230309 17:44:54.998" endtime="20230309 17:44:56.675"/>
</kw>
<msg timestamp="20230309 17:44:56.676" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:44:54 GMT",
    "ContentLength": 5242886,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Ex...</msg>
<status status="PASS" starttime="20230309 17:44:54.996" endtime="20230309 17:44:56.676"/>
</kw>
<kw name="Execute" library="os">
<arg>cat /tmp/part1 /tmp/part3 &gt; /tmp/${PREFIX}-multipartKey3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:56.684" level="INFO">Running command 'cat /tmp/part1 /tmp/part3 &gt; /tmp/ozone-test-7265260871-multipartKey3'.</msg>
<msg timestamp="20230309 17:44:56.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:56.703" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:44:56.678" endtime="20230309 17:44:56.703"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:56.707" level="INFO"/>
<status status="PASS" starttime="20230309 17:44:56.705" endtime="20230309 17:44:56.707"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:56.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:56.707" endtime="20230309 17:44:56.709"/>
</kw>
<status status="PASS" starttime="20230309 17:44:56.677" endtime="20230309 17:44:56.710"/>
</kw>
<msg timestamp="20230309 17:44:56.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:44:56.677" endtime="20230309 17:44:56.712"/>
</kw>
<status status="PASS" starttime="20230309 17:44:56.676" endtime="20230309 17:44:56.712"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/${PREFIX}-multipartKey3</arg>
<arg>/tmp/${PREFIX}-multipartKey3.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:56.719" level="INFO">Running command 'md5sum /tmp/ozone-test-7265260871-multipartKey3 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:56.742" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:56.742" level="INFO">${output} = 68142e393717c18d808876c2b19fad93</msg>
<status status="PASS" starttime="20230309 17:44:56.716" endtime="20230309 17:44:56.742"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:56.744" level="INFO">68142e393717c18d808876c2b19fad93</msg>
<status status="PASS" starttime="20230309 17:44:56.743" endtime="20230309 17:44:56.744"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:56.744" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:56.744" endtime="20230309 17:44:56.745"/>
</kw>
<status status="PASS" starttime="20230309 17:44:56.715" endtime="20230309 17:44:56.745"/>
</kw>
<msg timestamp="20230309 17:44:56.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:44:56.715" endtime="20230309 17:44:56.746"/>
</kw>
<msg timestamp="20230309 17:44:56.747" level="INFO">${checksumbefore} = 68142e393717c18d808876c2b19fad93</msg>
<status status="PASS" starttime="20230309 17:44:56.714" endtime="20230309 17:44:56.747"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:56.753" level="INFO">Running command 'md5sum /tmp/ozone-test-7265260871-multipartKey3.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:56.773" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:56.774" level="INFO">${output} = 68142e393717c18d808876c2b19fad93</msg>
<status status="PASS" starttime="20230309 17:44:56.749" endtime="20230309 17:44:56.774"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:56.776" level="INFO">68142e393717c18d808876c2b19fad93</msg>
<status status="PASS" starttime="20230309 17:44:56.775" endtime="20230309 17:44:56.776"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:56.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:56.776" endtime="20230309 17:44:56.777"/>
</kw>
<status status="PASS" starttime="20230309 17:44:56.748" endtime="20230309 17:44:56.778"/>
</kw>
<msg timestamp="20230309 17:44:56.778" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:44:56.747" endtime="20230309 17:44:56.780"/>
</kw>
<msg timestamp="20230309 17:44:56.781" level="INFO">${checksumafter} = 68142e393717c18d808876c2b19fad93</msg>
<status status="PASS" starttime="20230309 17:44:56.747" endtime="20230309 17:44:56.781"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 17:44:56.781" endtime="20230309 17:44:56.782"/>
</kw>
<status status="PASS" starttime="20230309 17:44:56.713" endtime="20230309 17:44:56.782"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:44:43.118" endtime="20230309 17:44:56.783"/>
</test>
<test id="s1-s5-s8-t6" name="Test abort Multipart upload" line="186">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:44:56.790" level="INFO">${randStr} = 4409261435</msg>
<status status="PASS" starttime="20230309 17:44:56.789" endtime="20230309 17:44:56.790"/>
</kw>
<msg timestamp="20230309 17:44:56.791" level="INFO">${random} = ozone-test-4409261435</msg>
<status status="PASS" starttime="20230309 17:44:56.787" endtime="20230309 17:44:56.791"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:44:56.792" level="INFO">${PREFIX} = ozone-test-4409261435</msg>
<status status="PASS" starttime="20230309 17:44:56.792" endtime="20230309 17:44:56.792"/>
</kw>
<status status="PASS" starttime="20230309 17:44:56.786" endtime="20230309 17:44:56.794"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey4 --storage-class REDUCED_REDUNDANCY</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:56.800" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-4409261435/multipartKey4 --storage-class REDUCED_REDUNDANCY 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:57.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:57.755" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-4409261435/multipartKey4",
    "UploadId": "2281d99e-c4ca-4cb8-9da6-7939dd83d766-109994567117176913"
}</msg>
<status status="PASS" starttime="20230309 17:44:56.796" endtime="20230309 17:44:57.755"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:57.757" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-4409261435/multipartKey4",
    "UploadId": "2281d99e-c4ca-4cb8-9da6-7939dd83d766-109994567117176913"
}</msg>
<status status="PASS" starttime="20230309 17:44:57.756" endtime="20230309 17:44:57.757"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:57.757" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:57.757" endtime="20230309 17:44:57.758"/>
</kw>
<status status="PASS" starttime="20230309 17:44:56.796" endtime="20230309 17:44:57.758"/>
</kw>
<msg timestamp="20230309 17:44:57.758" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:44:56.795" endtime="20230309 17:44:57.759"/>
</kw>
<msg timestamp="20230309 17:44:57.760" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-4409261435/multipartKey4",
    "UploadId": "2281d99e-c4ca-4cb8-9da6-7939dd83d766-109994567117176913"
}</msg>
<status status="PASS" starttime="20230309 17:44:56.795" endtime="20230309 17:44:57.760"/>
</kw>
<msg timestamp="20230309 17:44:57.760" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-4409261435/multipartKey4",
    "UploadId": "2281d99e-c4ca-4cb8-9da6-7939dd83d766-109994567117176913"
}</msg>
<status status="PASS" starttime="20230309 17:44:56.794" endtime="20230309 17:44:57.761"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:57.765" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-4409261435/multipartKey4",
    "UploadId": "2281d99e-c4ca-4cb8-9da6-7939dd83d766-109994567117176913"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:57.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:57.827" level="INFO">${output} = 2281d99e-c4ca-4cb8-9da6-7939dd83d766-109994567117176913</msg>
<status status="PASS" starttime="20230309 17:44:57.762" endtime="20230309 17:44:57.827"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:57.829" level="INFO">2281d99e-c4ca-4cb8-9da6-7939dd83d766-109994567117176913</msg>
<status status="PASS" starttime="20230309 17:44:57.827" endtime="20230309 17:44:57.829"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:57.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:57.829" endtime="20230309 17:44:57.830"/>
</kw>
<msg timestamp="20230309 17:44:57.830" level="INFO">${uploadID} = 2281d99e-c4ca-4cb8-9da6-7939dd83d766-109994567117176913</msg>
<status status="PASS" starttime="20230309 17:44:57.761" endtime="20230309 17:44:57.831"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:44:57.831" endtime="20230309 17:44:57.832"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:44:57.832" endtime="20230309 17:44:57.833"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:44:57.833" endtime="20230309 17:44:57.833"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey4 --upload-id ${uploadID}</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:57.840" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket encrypted --key ozone-test-4409261435/multipartKey4 --upload-id 2281d99e-c4ca-4cb8-9da6-7939dd83d766-109994567117176913 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:58.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:44:58.941" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:44:57.836" endtime="20230309 17:44:58.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:58.943" level="INFO"/>
<status status="PASS" starttime="20230309 17:44:58.942" endtime="20230309 17:44:58.943"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:58.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:58.943" endtime="20230309 17:44:58.944"/>
</kw>
<msg timestamp="20230309 17:44:58.944" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:44:57.835" endtime="20230309 17:44:58.944"/>
</kw>
<msg timestamp="20230309 17:44:58.945" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 17:44:57.834" endtime="20230309 17:44:58.945"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:44:56.785" endtime="20230309 17:44:58.945"/>
</test>
<test id="s1-s5-s8-t7" name="Test abort Multipart upload with invalid uploadId" line="195">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:44:58.951" level="INFO">${randStr} = 4906303298</msg>
<status status="PASS" starttime="20230309 17:44:58.951" endtime="20230309 17:44:58.952"/>
</kw>
<msg timestamp="20230309 17:44:58.952" level="INFO">${random} = ozone-test-4906303298</msg>
<status status="PASS" starttime="20230309 17:44:58.950" endtime="20230309 17:44:58.952"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:44:58.953" level="INFO">${PREFIX} = ozone-test-4906303298</msg>
<status status="PASS" starttime="20230309 17:44:58.952" endtime="20230309 17:44:58.953"/>
</kw>
<status status="PASS" starttime="20230309 17:44:58.949" endtime="20230309 17:44:58.953"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id "random"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:44:58.960" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket encrypted --key ozone-test-4906303298/multipartKey5 --upload-id "random" 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:44:59.975" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:44:59.975" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20230309 17:44:58.955" endtime="20230309 17:44:59.975"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:44:59.978" level="INFO">
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted or completed.</msg>
<status status="PASS" starttime="20230309 17:44:59.976" endtime="20230309 17:44:59.978"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:44:59.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:44:59.979" endtime="20230309 17:44:59.981"/>
</kw>
<msg timestamp="20230309 17:44:59.981" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20230309 17:44:58.954" endtime="20230309 17:44:59.981"/>
</kw>
<msg timestamp="20230309 17:44:59.982" level="INFO">${result} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20230309 17:44:58.953" endtime="20230309 17:44:59.982"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:44:58.948" endtime="20230309 17:44:59.982"/>
</test>
<test id="s1-s5-s8-t8" name="Upload part with Incorrect uploadID" line="198">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:44:59.990" level="INFO">${randStr} = 5926594670</msg>
<status status="PASS" starttime="20230309 17:44:59.989" endtime="20230309 17:44:59.990"/>
</kw>
<msg timestamp="20230309 17:44:59.990" level="INFO">${random} = ozone-test-5926594670</msg>
<status status="PASS" starttime="20230309 17:44:59.987" endtime="20230309 17:44:59.990"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:44:59.991" level="INFO">${PREFIX} = ozone-test-5926594670</msg>
<status status="PASS" starttime="20230309 17:44:59.991" endtime="20230309 17:44:59.991"/>
</kw>
<status status="PASS" starttime="20230309 17:44:59.987" endtime="20230309 17:44:59.992"/>
</kw>
<kw name="Skip" library="BuiltIn">
<arg>TODO: HDDS-7811</arg>
<doc>Skips the rest of the current test.</doc>
<msg timestamp="20230309 17:44:59.993" level="SKIP">TODO: HDDS-7811</msg>
<status status="SKIP" starttime="20230309 17:44:59.993" endtime="20230309 17:44:59.994"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Multipart upload" &gt; /tmp/testfile</arg>
<status status="NOT RUN" starttime="20230309 17:44:59.994" endtime="20230309 17:44:59.994"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey --part-number 1 --body /tmp/testfile --upload-id "random"</arg>
<arg>255</arg>
<status status="NOT RUN" starttime="20230309 17:44:59.994" endtime="20230309 17:44:59.994"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchUpload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230309 17:44:59.995" endtime="20230309 17:44:59.995"/>
</kw>
<timeout value="5 minutes"/>
<status status="SKIP" starttime="20230309 17:44:59.985" endtime="20230309 17:44:59.995">TODO: HDDS-7811</status>
</test>
<test id="s1-s5-s8-t9" name="Test list parts" line="204">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:45:00.011" level="INFO">${randStr} = 6009571426</msg>
<status status="PASS" starttime="20230309 17:45:00.008" endtime="20230309 17:45:00.011"/>
</kw>
<msg timestamp="20230309 17:45:00.012" level="INFO">${random} = ozone-test-6009571426</msg>
<status status="PASS" starttime="20230309 17:45:00.000" endtime="20230309 17:45:00.012"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:45:00.017" level="INFO">${PREFIX} = ozone-test-6009571426</msg>
<status status="PASS" starttime="20230309 17:45:00.016" endtime="20230309 17:45:00.017"/>
</kw>
<status status="PASS" starttime="20230309 17:44:59.999" endtime="20230309 17:45:00.020"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey5</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:00.032" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-6009571426/multipartKey5 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:01.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:01.177" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-6009571426/multipartKey5",
    "UploadId": "b2d6784c-c7c4-4b52-8a6e-cae2540be6fb-109994567340458066"
}</msg>
<status status="PASS" starttime="20230309 17:45:00.029" endtime="20230309 17:45:01.177"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:01.179" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-6009571426/multipartKey5",
    "UploadId": "b2d6784c-c7c4-4b52-8a6e-cae2540be6fb-109994567340458066"
}</msg>
<status status="PASS" starttime="20230309 17:45:01.178" endtime="20230309 17:45:01.181"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:01.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:01.181" endtime="20230309 17:45:01.183"/>
</kw>
<status status="PASS" starttime="20230309 17:45:00.028" endtime="20230309 17:45:01.184"/>
</kw>
<msg timestamp="20230309 17:45:01.184" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:45:00.023" endtime="20230309 17:45:01.185"/>
</kw>
<msg timestamp="20230309 17:45:01.186" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-6009571426/multipartKey5",
    "UploadId": "b2d6784c-c7c4-4b52-8a6e-cae2540be6fb-109994567340458066"
}</msg>
<status status="PASS" starttime="20230309 17:45:00.023" endtime="20230309 17:45:01.186"/>
</kw>
<msg timestamp="20230309 17:45:01.187" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-6009571426/multipartKey5",
    "UploadId": "b2d6784c-c7c4-4b52-8a6e-cae2540be6fb-109994567340458066"
}</msg>
<status status="PASS" starttime="20230309 17:45:00.020" endtime="20230309 17:45:01.187"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:01.195" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-6009571426/multipartKey5",
    "UploadId": "b2d6784c-c7c4-4b52-8a6e-cae2540be6fb-109994567340458066"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:01.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:01.260" level="INFO">${output} = b2d6784c-c7c4-4b52-8a6e-cae2540be6fb-109994567340458066</msg>
<status status="PASS" starttime="20230309 17:45:01.189" endtime="20230309 17:45:01.260"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:01.263" level="INFO">b2d6784c-c7c4-4b52-8a6e-cae2540be6fb-109994567340458066</msg>
<status status="PASS" starttime="20230309 17:45:01.261" endtime="20230309 17:45:01.263"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:01.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:01.264" endtime="20230309 17:45:01.264"/>
</kw>
<msg timestamp="20230309 17:45:01.265" level="INFO">${uploadID} = b2d6784c-c7c4-4b52-8a6e-cae2540be6fb-109994567340458066</msg>
<status status="PASS" starttime="20230309 17:45:01.187" endtime="20230309 17:45:01.265"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:45:01.265" endtime="20230309 17:45:01.266"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:45:01.266" endtime="20230309 17:45:01.267"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:45:01.267" endtime="20230309 17:45:01.268"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:01.278" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:01.338" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:01.339" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:45:01.272" endtime="20230309 17:45:01.339"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:01.342" level="INFO"/>
<status status="PASS" starttime="20230309 17:45:01.340" endtime="20230309 17:45:01.342"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:01.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:01.342" endtime="20230309 17:45:01.343"/>
</kw>
<status status="PASS" starttime="20230309 17:45:01.272" endtime="20230309 17:45:01.343"/>
</kw>
<msg timestamp="20230309 17:45:01.344" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:45:01.271" endtime="20230309 17:45:01.344"/>
</kw>
<status status="PASS" starttime="20230309 17:45:01.270" endtime="20230309 17:45:01.346"/>
</kw>
<status status="PASS" starttime="20230309 17:45:01.269" endtime="20230309 17:45:01.346"/>
</kw>
<status status="PASS" starttime="20230309 17:45:01.269" endtime="20230309 17:45:01.347"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:01.355" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-6009571426/multipartKey5 --part-number 1 --body /tmp/part1 --upload-id b2d6784c-c7c4-4b52-8a6e-cae2540be6fb-109994567340458066 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:02.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:02.985" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-6009571426/multipartKey5-b2d6784c-c7c4-4b52-8a6e-cae2540be6fb-109994567340458066-1"
}</msg>
<status status="PASS" starttime="20230309 17:45:01.351" endtime="20230309 17:45:02.985"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:02.994" level="INFO">{
    "ETag": "/s3v/encrypted/ozone-test-6009571426/multipartKey5-b2d6784c-c7c4-4b52-8a6e-cae2540be6fb-109994567340458066-1"
}</msg>
<status status="PASS" starttime="20230309 17:45:02.990" endtime="20230309 17:45:02.997"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:02.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:02.998" endtime="20230309 17:45:02.999"/>
</kw>
<status status="PASS" starttime="20230309 17:45:01.350" endtime="20230309 17:45:03.003"/>
</kw>
<msg timestamp="20230309 17:45:03.003" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:45:01.349" endtime="20230309 17:45:03.007"/>
</kw>
<msg timestamp="20230309 17:45:03.010" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-6009571426/multipartKey5-b2d6784c-c7c4-4b52-8a6e-cae2540be6fb-109994567340458066-1"
}</msg>
<status status="PASS" starttime="20230309 17:45:01.348" endtime="20230309 17:45:03.010"/>
</kw>
<msg timestamp="20230309 17:45:03.010" level="INFO">${result} = {
    "ETag": "/s3v/encrypted/ozone-test-6009571426/multipartKey5-b2d6784c-c7c4-4b52-8a6e-cae2540be6fb-109994567340458066-1"
}</msg>
<status status="PASS" starttime="20230309 17:45:01.347" endtime="20230309 17:45:03.011"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:03.020" level="INFO">Running command 'echo '{
    "ETag": "/s3v/encrypted/ozone-test-6009571426/multipartKey5-b2d6784c-c7c4-4b52-8a6e-cae2540be6fb-109994567340458066-1"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:03.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:03.092" level="INFO">${output} = /s3v/encrypted/ozone-test-6009571426/multipartKey5-b2d6784c-c7c4-4b52-8a6e-cae2540be6fb-109994567340458066-1</msg>
<status status="PASS" starttime="20230309 17:45:03.015" endtime="20230309 17:45:03.092"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:03.094" level="INFO">/s3v/encrypted/ozone-test-6009571426/multipartKey5-b2d6784c-c7c4-4b52-8a6e-cae2540be6fb-109994567340458066-1</msg>
<status status="PASS" starttime="20230309 17:45:03.093" endtime="20230309 17:45:03.095"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:03.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:03.095" endtime="20230309 17:45:03.096"/>
</kw>
<msg timestamp="20230309 17:45:03.097" level="INFO">${eTag1} = /s3v/encrypted/ozone-test-6009571426/multipartKey5-b2d6784c-c7c4-4b52-8a6e-cae2540be6fb-109994567340458066-1</msg>
<status status="PASS" starttime="20230309 17:45:03.013" endtime="20230309 17:45:03.097"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:45:03.097" endtime="20230309 17:45:03.098"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part2" &gt; /tmp/part2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:03.105" level="INFO">Running command 'echo "Part2" &gt; /tmp/part2'.</msg>
<msg timestamp="20230309 17:45:03.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:03.109" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:45:03.101" endtime="20230309 17:45:03.109"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:03.111" level="INFO"/>
<status status="PASS" starttime="20230309 17:45:03.110" endtime="20230309 17:45:03.111"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:03.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:03.111" endtime="20230309 17:45:03.112"/>
</kw>
<status status="PASS" starttime="20230309 17:45:03.100" endtime="20230309 17:45:03.113"/>
</kw>
<msg timestamp="20230309 17:45:03.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:45:03.099" endtime="20230309 17:45:03.114"/>
</kw>
<status status="PASS" starttime="20230309 17:45:03.098" endtime="20230309 17:45:03.115"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --part-number 2 --body /tmp/part2 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:03.122" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-6009571426/multipartKey5 --part-number 2 --body /tmp/part2 --upload-id b2d6784c-c7c4-4b52-8a6e-cae2540be6fb-109994567340458066 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:04.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:04.315" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-6009571426/multipartKey5-b2d6784c-c7c4-4b52-8a6e-cae2540be6fb-109994567340458066-2"
}</msg>
<status status="PASS" starttime="20230309 17:45:03.119" endtime="20230309 17:45:04.315"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:04.317" level="INFO">{
    "ETag": "/s3v/encrypted/ozone-test-6009571426/multipartKey5-b2d6784c-c7c4-4b52-8a6e-cae2540be6fb-109994567340458066-2"
}</msg>
<status status="PASS" starttime="20230309 17:45:04.316" endtime="20230309 17:45:04.317"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:04.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:04.318" endtime="20230309 17:45:04.319"/>
</kw>
<status status="PASS" starttime="20230309 17:45:03.118" endtime="20230309 17:45:04.319"/>
</kw>
<msg timestamp="20230309 17:45:04.319" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:45:03.117" endtime="20230309 17:45:04.320"/>
</kw>
<msg timestamp="20230309 17:45:04.321" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-6009571426/multipartKey5-b2d6784c-c7c4-4b52-8a6e-cae2540be6fb-109994567340458066-2"
}</msg>
<status status="PASS" starttime="20230309 17:45:03.116" endtime="20230309 17:45:04.321"/>
</kw>
<msg timestamp="20230309 17:45:04.321" level="INFO">${result} = {
    "ETag": "/s3v/encrypted/ozone-test-6009571426/multipartKey5-b2d6784c-c7c4-4b52-8a6e-cae2540be6fb-109994567340458066-2"
}</msg>
<status status="PASS" starttime="20230309 17:45:03.115" endtime="20230309 17:45:04.321"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:04.327" level="INFO">Running command 'echo '{
    "ETag": "/s3v/encrypted/ozone-test-6009571426/multipartKey5-b2d6784c-c7c4-4b52-8a6e-cae2540be6fb-109994567340458066-2"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:04.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:04.392" level="INFO">${output} = /s3v/encrypted/ozone-test-6009571426/multipartKey5-b2d6784c-c7c4-4b52-8a6e-cae2540be6fb-109994567340458066-2</msg>
<status status="PASS" starttime="20230309 17:45:04.323" endtime="20230309 17:45:04.392"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:04.396" level="INFO">/s3v/encrypted/ozone-test-6009571426/multipartKey5-b2d6784c-c7c4-4b52-8a6e-cae2540be6fb-109994567340458066-2</msg>
<status status="PASS" starttime="20230309 17:45:04.393" endtime="20230309 17:45:04.396"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:04.397" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:04.397" endtime="20230309 17:45:04.397"/>
</kw>
<msg timestamp="20230309 17:45:04.398" level="INFO">${eTag2} = /s3v/encrypted/ozone-test-6009571426/multipartKey5-b2d6784c-c7c4-4b52-8a6e-cae2540be6fb-109994567340458066-2</msg>
<status status="PASS" starttime="20230309 17:45:04.321" endtime="20230309 17:45:04.398"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:45:04.398" endtime="20230309 17:45:04.399"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:04.407" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket encrypted --key ozone-test-6009571426/multipartKey5 --upload-id b2d6784c-c7c4-4b52-8a6e-cae2540be6fb-109994567340458066 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:05.550" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:05.550" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-03-09T17:45:02.817Z",
            "ETag": "/s3v/encrypted/ozone-test-6009571426/multipartKey5-b2d6784c-c7c4-4b...</msg>
<status status="PASS" starttime="20230309 17:45:04.402" endtime="20230309 17:45:05.550"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:05.555" level="INFO">{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-03-09T17:45:02.817Z",
            "ETag": "/s3v/encrypted/ozone-test-6009571426/multipartKey5-b2d6784c-c7c4-4b52-8a6e-cae2540be6fb-109994567340458066-1",
            "Size": 5242880
        },
        {
            "PartNumber": 2,
            "LastModified": "2023-03-09T17:45:04.152Z",
            "ETag": "/s3v/encrypted/ozone-test-6009571426/multipartKey5-b2d6784c-c7c4-4b52-8a6e-cae2540be6fb-109994567340458066-2",
            "Size": 6
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}</msg>
<status status="PASS" starttime="20230309 17:45:05.551" endtime="20230309 17:45:05.555"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:05.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:05.555" endtime="20230309 17:45:05.556"/>
</kw>
<status status="PASS" starttime="20230309 17:45:04.402" endtime="20230309 17:45:05.557"/>
</kw>
<msg timestamp="20230309 17:45:05.557" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:45:04.401" endtime="20230309 17:45:05.558"/>
</kw>
<msg timestamp="20230309 17:45:05.558" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-03-09T17:45:02.817Z",
            "ETag": "/s3v/encrypted/ozone-test-6009571426/multipartKey5-b2d6784c-c7c4-4b...</msg>
<status status="PASS" starttime="20230309 17:45:04.400" endtime="20230309 17:45:05.558"/>
</kw>
<msg timestamp="20230309 17:45:05.560" level="INFO">${result} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-03-09T17:45:02.817Z",
            "ETag": "/s3v/encrypted/ozone-test-6009571426/multipartKey5-b2d6784c-c7c4-4b...</msg>
<status status="PASS" starttime="20230309 17:45:04.399" endtime="20230309 17:45:05.560"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part1}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:05.565" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-03-09T17:45:02.817Z",
            "ETag": "/s3v/encrypted/ozone-test-6009571426/multipartKey5-b2d6784c-c7c4-4b52-8a6e-cae2540be6fb-109994567340458066-1",
            "Size": 5242880
        },
        {
            "PartNumber": 2,
            "LastModified": "2023-03-09T17:45:04.152Z",
            "ETag": "/s3v/encrypted/ozone-test-6009571426/multipartKey5-b2d6784c-c7c4-4b52-8a6e-cae2540be6fb-109994567340458066-2",
            "Size": 6
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:05.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:05.634" level="INFO">${output} = /s3v/encrypted/ozone-test-6009571426/multipartKey5-b2d6784c-c7c4-4b52-8a6e-cae2540be6fb-109994567340458066-1</msg>
<status status="PASS" starttime="20230309 17:45:05.562" endtime="20230309 17:45:05.634"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:05.636" level="INFO">/s3v/encrypted/ozone-test-6009571426/multipartKey5-b2d6784c-c7c4-4b52-8a6e-cae2540be6fb-109994567340458066-1</msg>
<status status="PASS" starttime="20230309 17:45:05.635" endtime="20230309 17:45:05.636"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:05.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:05.637" endtime="20230309 17:45:05.638"/>
</kw>
<msg timestamp="20230309 17:45:05.638" level="INFO">${part1} = /s3v/encrypted/ozone-test-6009571426/multipartKey5-b2d6784c-c7c4-4b52-8a6e-cae2540be6fb-109994567340458066-1</msg>
<status status="PASS" starttime="20230309 17:45:05.561" endtime="20230309 17:45:05.638"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part2}</var>
<arg>echo '${result}' | jq -r '.Parts[1].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:05.646" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-03-09T17:45:02.817Z",
            "ETag": "/s3v/encrypted/ozone-test-6009571426/multipartKey5-b2d6784c-c7c4-4b52-8a6e-cae2540be6fb-109994567340458066-1",
            "Size": 5242880
        },
        {
            "PartNumber": 2,
            "LastModified": "2023-03-09T17:45:04.152Z",
            "ETag": "/s3v/encrypted/ozone-test-6009571426/multipartKey5-b2d6784c-c7c4-4b52-8a6e-cae2540be6fb-109994567340458066-2",
            "Size": 6
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[1].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:05.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:05.715" level="INFO">${output} = /s3v/encrypted/ozone-test-6009571426/multipartKey5-b2d6784c-c7c4-4b52-8a6e-cae2540be6fb-109994567340458066-2</msg>
<status status="PASS" starttime="20230309 17:45:05.641" endtime="20230309 17:45:05.715"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:05.718" level="INFO">/s3v/encrypted/ozone-test-6009571426/multipartKey5-b2d6784c-c7c4-4b52-8a6e-cae2540be6fb-109994567340458066-2</msg>
<status status="PASS" starttime="20230309 17:45:05.717" endtime="20230309 17:45:05.718"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:05.720" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:05.719" endtime="20230309 17:45:05.720"/>
</kw>
<msg timestamp="20230309 17:45:05.721" level="INFO">${part2} = /s3v/encrypted/ozone-test-6009571426/multipartKey5-b2d6784c-c7c4-4b52-8a6e-cae2540be6fb-109994567340458066-2</msg>
<status status="PASS" starttime="20230309 17:45:05.639" endtime="20230309 17:45:05.721"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part1}</arg>
<arg>${eTag1}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 17:45:05.721" endtime="20230309 17:45:05.722"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${part2}</arg>
<arg>${eTag2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:45:05.722" endtime="20230309 17:45:05.723"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:45:05.723" endtime="20230309 17:45:05.724"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID} --max-items 1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:05.734" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket encrypted --key ozone-test-6009571426/multipartKey5 --upload-id b2d6784c-c7c4-4b52-8a6e-cae2540be6fb-109994567340458066 --max-items 1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:06.788" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:06.788" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-03-09T17:45:02.817Z",
            "ETag": "/s3v/encrypted/ozone-test-6009571426/multipartKey5-b2d6784c-c7c4-4b...</msg>
<status status="PASS" starttime="20230309 17:45:05.730" endtime="20230309 17:45:06.788"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:06.790" level="INFO">{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-03-09T17:45:02.817Z",
            "ETag": "/s3v/encrypted/ozone-test-6009571426/multipartKey5-b2d6784c-c7c4-4b52-8a6e-cae2540be6fb-109994567340458066-1",
            "Size": 5242880
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD",
    "NextToken": "eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0="
}</msg>
<status status="PASS" starttime="20230309 17:45:06.789" endtime="20230309 17:45:06.791"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:06.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:06.791" endtime="20230309 17:45:06.794"/>
</kw>
<status status="PASS" starttime="20230309 17:45:05.729" endtime="20230309 17:45:06.795"/>
</kw>
<msg timestamp="20230309 17:45:06.795" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:45:05.728" endtime="20230309 17:45:06.797"/>
</kw>
<msg timestamp="20230309 17:45:06.797" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-03-09T17:45:02.817Z",
            "ETag": "/s3v/encrypted/ozone-test-6009571426/multipartKey5-b2d6784c-c7c4-4b...</msg>
<status status="PASS" starttime="20230309 17:45:05.725" endtime="20230309 17:45:06.797"/>
</kw>
<msg timestamp="20230309 17:45:06.798" level="INFO">${result} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-03-09T17:45:02.817Z",
            "ETag": "/s3v/encrypted/ozone-test-6009571426/multipartKey5-b2d6784c-c7c4-4b...</msg>
<status status="PASS" starttime="20230309 17:45:05.724" endtime="20230309 17:45:06.798"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part1}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:06.806" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-03-09T17:45:02.817Z",
            "ETag": "/s3v/encrypted/ozone-test-6009571426/multipartKey5-b2d6784c-c7c4-4b52-8a6e-cae2540be6fb-109994567340458066-1",
            "Size": 5242880
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD",
    "NextToken": "eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0="
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:06.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:06.883" level="INFO">${output} = /s3v/encrypted/ozone-test-6009571426/multipartKey5-b2d6784c-c7c4-4b52-8a6e-cae2540be6fb-109994567340458066-1</msg>
<status status="PASS" starttime="20230309 17:45:06.800" endtime="20230309 17:45:06.883"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:06.885" level="INFO">/s3v/encrypted/ozone-test-6009571426/multipartKey5-b2d6784c-c7c4-4b52-8a6e-cae2540be6fb-109994567340458066-1</msg>
<status status="PASS" starttime="20230309 17:45:06.884" endtime="20230309 17:45:06.885"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:06.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:06.885" endtime="20230309 17:45:06.886"/>
</kw>
<msg timestamp="20230309 17:45:06.886" level="INFO">${part1} = /s3v/encrypted/ozone-test-6009571426/multipartKey5-b2d6784c-c7c4-4b52-8a6e-cae2540be6fb-109994567340458066-1</msg>
<status status="PASS" starttime="20230309 17:45:06.798" endtime="20230309 17:45:06.886"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${token}</var>
<arg>echo '${result}' | jq -r '.NextToken'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:06.895" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-03-09T17:45:02.817Z",
            "ETag": "/s3v/encrypted/ozone-test-6009571426/multipartKey5-b2d6784c-c7c4-4b52-8a6e-cae2540be6fb-109994567340458066-1",
            "Size": 5242880
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD",
    "NextToken": "eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0="
}' | jq -r '.NextToken' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:06.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:06.967" level="INFO">${output} = eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0=</msg>
<status status="PASS" starttime="20230309 17:45:06.889" endtime="20230309 17:45:06.967"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:06.970" level="INFO">eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0=</msg>
<status status="PASS" starttime="20230309 17:45:06.968" endtime="20230309 17:45:06.970"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:06.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:06.970" endtime="20230309 17:45:06.971"/>
</kw>
<msg timestamp="20230309 17:45:06.972" level="INFO">${token} = eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0=</msg>
<status status="PASS" starttime="20230309 17:45:06.887" endtime="20230309 17:45:06.972"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part1}</arg>
<arg>${eTag1}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 17:45:06.973" endtime="20230309 17:45:06.973"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:45:06.974" endtime="20230309 17:45:06.974"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID} --max-items 1 --starting-token ${token}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:06.982" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket encrypted --key ozone-test-6009571426/multipartKey5 --upload-id b2d6784c-c7c4-4b52-8a6e-cae2540be6fb-109994567340458066 --max-items 1 --starting-token eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0= 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:08.021" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:08.022" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2023-03-09T17:45:04.152Z",
            "ETag": "/s3v/encrypted/ozone-test-6009571426/multipartKey5-b2d6784c-c7c4-4b...</msg>
<status status="PASS" starttime="20230309 17:45:06.978" endtime="20230309 17:45:08.022"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:08.023" level="INFO">{
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2023-03-09T17:45:04.152Z",
            "ETag": "/s3v/encrypted/ozone-test-6009571426/multipartKey5-b2d6784c-c7c4-4b52-8a6e-cae2540be6fb-109994567340458066-2",
            "Size": 6
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}</msg>
<status status="PASS" starttime="20230309 17:45:08.022" endtime="20230309 17:45:08.023"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:08.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:08.024" endtime="20230309 17:45:08.024"/>
</kw>
<status status="PASS" starttime="20230309 17:45:06.977" endtime="20230309 17:45:08.025"/>
</kw>
<msg timestamp="20230309 17:45:08.025" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:45:06.977" endtime="20230309 17:45:08.025"/>
</kw>
<msg timestamp="20230309 17:45:08.026" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2023-03-09T17:45:04.152Z",
            "ETag": "/s3v/encrypted/ozone-test-6009571426/multipartKey5-b2d6784c-c7c4-4b...</msg>
<status status="PASS" starttime="20230309 17:45:06.976" endtime="20230309 17:45:08.026"/>
</kw>
<msg timestamp="20230309 17:45:08.026" level="INFO">${result} = {
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2023-03-09T17:45:04.152Z",
            "ETag": "/s3v/encrypted/ozone-test-6009571426/multipartKey5-b2d6784c-c7c4-4b...</msg>
<status status="PASS" starttime="20230309 17:45:06.975" endtime="20230309 17:45:08.026"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part2}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:08.033" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2023-03-09T17:45:04.152Z",
            "ETag": "/s3v/encrypted/ozone-test-6009571426/multipartKey5-b2d6784c-c7c4-4b52-8a6e-cae2540be6fb-109994567340458066-2",
            "Size": 6
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:08.101" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:08.102" level="INFO">${output} = /s3v/encrypted/ozone-test-6009571426/multipartKey5-b2d6784c-c7c4-4b52-8a6e-cae2540be6fb-109994567340458066-2</msg>
<status status="PASS" starttime="20230309 17:45:08.028" endtime="20230309 17:45:08.102"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:08.103" level="INFO">/s3v/encrypted/ozone-test-6009571426/multipartKey5-b2d6784c-c7c4-4b52-8a6e-cae2540be6fb-109994567340458066-2</msg>
<status status="PASS" starttime="20230309 17:45:08.102" endtime="20230309 17:45:08.103"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:08.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:08.104" endtime="20230309 17:45:08.105"/>
</kw>
<msg timestamp="20230309 17:45:08.106" level="INFO">${part2} = /s3v/encrypted/ozone-test-6009571426/multipartKey5-b2d6784c-c7c4-4b52-8a6e-cae2540be6fb-109994567340458066-2</msg>
<status status="PASS" starttime="20230309 17:45:08.027" endtime="20230309 17:45:08.106"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part2}</arg>
<arg>${eTag2}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 17:45:08.107" endtime="20230309 17:45:08.108"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:45:08.108" endtime="20230309 17:45:08.109"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID}</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:08.116" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket encrypted --key ozone-test-6009571426/multipartKey5 --upload-id b2d6784c-c7c4-4b52-8a6e-cae2540be6fb-109994567340458066 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:09.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:09.189" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:45:08.112" endtime="20230309 17:45:09.189"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:09.190" level="INFO"/>
<status status="PASS" starttime="20230309 17:45:09.189" endtime="20230309 17:45:09.191"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:09.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:09.191" endtime="20230309 17:45:09.193"/>
</kw>
<msg timestamp="20230309 17:45:09.193" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:45:08.111" endtime="20230309 17:45:09.193"/>
</kw>
<msg timestamp="20230309 17:45:09.194" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 17:45:08.110" endtime="20230309 17:45:09.194"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:44:59.998" endtime="20230309 17:45:09.195"/>
</test>
<test id="s1-s5-s8-t10" name="Test Multipart Upload with the simplified aws s3 cp API" line="246">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:45:09.200" level="INFO">${randStr} = 4283773583</msg>
<status status="PASS" starttime="20230309 17:45:09.199" endtime="20230309 17:45:09.200"/>
</kw>
<msg timestamp="20230309 17:45:09.201" level="INFO">${random} = ozone-test-4283773583</msg>
<status status="PASS" starttime="20230309 17:45:09.199" endtime="20230309 17:45:09.201"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:45:09.203" level="INFO">${PREFIX} = ozone-test-4283773583</msg>
<status status="PASS" starttime="20230309 17:45:09.201" endtime="20230309 17:45:09.203"/>
</kw>
<status status="PASS" starttime="20230309 17:45:09.198" endtime="20230309 17:45:09.203"/>
</kw>
<kw name="Create Random file">
<arg>22</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:09.214" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=22 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:09.361" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:09.361" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:45:09.208" endtime="20230309 17:45:09.361"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:09.364" level="INFO"/>
<status status="PASS" starttime="20230309 17:45:09.363" endtime="20230309 17:45:09.365"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:09.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:09.365" endtime="20230309 17:45:09.367"/>
</kw>
<status status="PASS" starttime="20230309 17:45:09.207" endtime="20230309 17:45:09.367"/>
</kw>
<msg timestamp="20230309 17:45:09.368" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:45:09.206" endtime="20230309 17:45:09.369"/>
</kw>
<status status="PASS" starttime="20230309 17:45:09.205" endtime="20230309 17:45:09.369"/>
</kw>
<status status="PASS" starttime="20230309 17:45:09.203" endtime="20230309 17:45:09.369"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>cp /tmp/part1 s3://${BUCKET}/mpyawscli</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:09.381" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/part1 s3://encrypted/mpyawscli 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:12.359" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:12.359" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (966.6 KiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (1.9 MiB/s) with 1 file(s) remaining  
Completed 768.0 KiB/22.0 MiB (2.7 MiB/s) with 1 file(s) remainin...</msg>
<status status="PASS" starttime="20230309 17:45:09.375" endtime="20230309 17:45:12.359"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:12.363" level="INFO">Completed 256.0 KiB/22.0 MiB (966.6 KiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (1.9 MiB/s) with 1 file(s) remaining  
Completed 768.0 KiB/22.0 MiB (2.7 MiB/s) with 1 file(s) remaining  
Completed 1.0 MiB/22.0 MiB (3.4 MiB/s) with 1 file(s) remaining    
Completed 1.2 MiB/22.0 MiB (4.3 MiB/s) with 1 file(s) remaining    
Completed 1.5 MiB/22.0 MiB (5.0 MiB/s) with 1 file(s) remaining    
Completed 1.8 MiB/22.0 MiB (5.5 MiB/s) with 1 file(s) remaining    
Completed 2.0 MiB/22.0 MiB (6.3 MiB/s) with 1 file(s) remaining    
Completed 2.2 MiB/22.0 MiB (7.0 MiB/s) with 1 file(s) remaining    
Completed 2.5 MiB/22.0 MiB (7.8 MiB/s) with 1 file(s) remaining    
Completed 2.8 MiB/22.0 MiB (8.5 MiB/s) with 1 file(s) remaining    
Completed 3.0 MiB/22.0 MiB (9.2 MiB/s) with 1 file(s) remaining    
Completed 3.2 MiB/22.0 MiB (9.5 MiB/s) with 1 file(s) remaining    
Completed 3.5 MiB/22.0 MiB (10.2 MiB/s) with 1 file(s) remaining   
Completed 3.8 MiB/22.0 MiB (10.3 MiB/s) with 1 file(s) remaining   
Completed 4.0 MiB/22.0 MiB (10.8 MiB/s) with 1 file(s) remaining   
Completed 4.2 MiB/22.0 MiB (11.5 MiB/s) with 1 file(s) remaining   
Completed 4.5 MiB/22.0 MiB (11.8 MiB/s) with 1 file(s) remaining   
Completed 4.8 MiB/22.0 MiB (12.2 MiB/s) with 1 file(s) remaining   
Completed 5.0 MiB/22.0 MiB (12.7 MiB/s) with 1 file(s) remaining   
Completed 5.2 MiB/22.0 MiB (13.0 MiB/s) with 1 file(s) remaining   
Completed 5.5 MiB/22.0 MiB (13.6 MiB/s) with 1 file(s) remaining   
Completed 5.8 MiB/22.0 MiB (14.2 MiB/s) with 1 file(s) remaining   
Completed 6.0 MiB/22.0 MiB (14.3 MiB/s) with 1 file(s) remaining   
Completed 6.2 MiB/22.0 MiB (14.5 MiB/s) with 1 file(s) remaining   
Completed 6.5 MiB/22.0 MiB (14.9 MiB/s) with 1 file(s) remaining   
Completed 6.8 MiB/22.0 MiB (15.4 MiB/s) with 1 file(s) remaining   
Completed 7.0 MiB/22.0 MiB (15.9 MiB/s) with 1 file(s) remaining   
Completed 7.2 MiB/22.0 MiB (16.4 MiB/s) with 1 file(s) remaining   
Completed 7.5 MiB/22.0 MiB (16.8 MiB/s) with 1 file(s) remaining   
Completed 7.8 MiB/22.0 MiB (17.4 MiB/s) with 1 file(s) remaining   
Completed 8.0 MiB/22.0 MiB (17.7 MiB/s) with 1 file(s) remaining   
Completed 8.2 MiB/22.0 MiB (17.9 MiB/s) with 1 file(s) remaining   
Completed 8.5 MiB/22.0 MiB (18.3 MiB/s) with 1 file(s) remaining   
Completed 8.8 MiB/22.0 MiB (18.6 MiB/s) with 1 file(s) remaining   
Completed 9.0 MiB/22.0 MiB (18.6 MiB/s) with 1 file(s) remaining   
Completed 9.2 MiB/22.0 MiB (19.1 MiB/s) with 1 file(s) remaining   
Completed 9.5 MiB/22.0 MiB (19.5 MiB/s) with 1 file(s) remaining   
Completed 9.8 MiB/22.0 MiB (19.1 MiB/s) with 1 file(s) remaining   
Completed 10.0 MiB/22.0 MiB (19.5 MiB/s) with 1 file(s) remaining  
Completed 10.2 MiB/22.0 MiB (19.9 MiB/s) with 1 file(s) remaining  
Completed 10.5 MiB/22.0 MiB (20.3 MiB/s) with 1 file(s) remaining  
Completed 10.8 MiB/22.0 MiB (20.7 MiB/s) with 1 file(s) remaining  
Completed 11.0 MiB/22.0 MiB (21.2 MiB/s) with 1 file(s) remaining  
Completed 11.2 MiB/22.0 MiB (21.6 MiB/s) with 1 file(s) remaining  
Completed 11.5 MiB/22.0 MiB (22.0 MiB/s) with 1 file(s) remaining  
Completed 11.8 MiB/22.0 MiB (22.4 MiB/s) with 1 file(s) remaining  
Completed 12.0 MiB/22.0 MiB (22.8 MiB/s) with 1 file(s) remaining  
Completed 12.2 MiB/22.0 MiB (23.2 MiB/s) with 1 file(s) remaining  
Completed 12.5 MiB/22.0 MiB (23.6 MiB/s) with 1 file(s) remaining  
Completed 12.8 MiB/22.0 MiB (23.9 MiB/s) with 1 file(s) remaining  
Completed 13.0 MiB/22.0 MiB (24.4 MiB/s) with 1 file(s) remaining  
Completed 13.2 MiB/22.0 MiB (24.7 MiB/s) with 1 file(s) remaining  
Completed 13.5 MiB/22.0 MiB (25.1 MiB/s) with 1 file(s) remaining  
Completed 13.8 MiB/22.0 MiB (25.5 MiB/s) with 1 file(s) remaining  
Completed 14.0 MiB/22.0 MiB (25.9 MiB/s) with 1 file(s) remaining  
Completed 14.2 MiB/22.0 MiB (26.3 MiB/s) with 1 file(s) remaining  
Completed 14.5 MiB/22.0 MiB (26.7 MiB/s) with 1 file(s) remaining  
Completed 14.8 MiB/22.0 MiB (27.1 MiB/s) with 1 file(s) remaining  
Completed 15.0 MiB/22.0 MiB (27.4 MiB/s) with 1 file(s) remaining  
Completed 15.2 MiB/22.0 MiB (27.0 MiB/s) with 1 file(s) remaining  
Completed 15.5 MiB/22.0 MiB (26.7 MiB/s) with 1 file(s) remaining  
Completed 15.8 MiB/22.0 MiB (27.1 MiB/s) with 1 file(s) remaining  
Completed 16.0 MiB/22.0 MiB (27.4 MiB/s) with 1 file(s) remaining  
Completed 16.2 MiB/22.0 MiB (27.8 MiB/s) with 1 file(s) remaining  
Completed 16.5 MiB/22.0 MiB (28.1 MiB/s) with 1 file(s) remaining  
Completed 16.8 MiB/22.0 MiB (28.4 MiB/s) with 1 file(s) remaining  
Completed 17.0 MiB/22.0 MiB (28.6 MiB/s) with 1 file(s) remaining  
Completed 17.2 MiB/22.0 MiB (29.0 MiB/s) with 1 file(s) remaining  
Completed 17.5 MiB/22.0 MiB (29.3 MiB/s) with 1 file(s) remaining  
Completed 17.8 MiB/22.0 MiB (29.6 MiB/s) with 1 file(s) remaining  
Completed 18.0 MiB/22.0 MiB (29.1 MiB/s) with 1 file(s) remaining  
Completed 18.2 MiB/22.0 MiB (29.4 MiB/s) with 1 file(s) remaining  
Completed 18.5 MiB/22.0 MiB (29.8 MiB/s) with 1 file(s) remaining  
Completed 18.8 MiB/22.0 MiB (30.1 MiB/s) with 1 file(s) remaining  
Completed 19.0 MiB/22.0 MiB (30.5 MiB/s) with 1 file(s) remaining  
Completed 19.2 MiB/22.0 MiB (30.7 MiB/s) with 1 file(s) remaining  
Completed 19.5 MiB/22.0 MiB (31.0 MiB/s) with 1 file(s) remaining  
Completed 19.8 MiB/22.0 MiB (31.4 MiB/s) with 1 file(s) remaining  
Completed 20.0 MiB/22.0 MiB (31.6 MiB/s) with 1 file(s) remaining  
Completed 20.2 MiB/22.0 MiB (31.9 MiB/s) with 1 file(s) remaining  
Completed 20.5 MiB/22.0 MiB (32.3 MiB/s) with 1 file(s) remaining  
Completed 20.8 MiB/22.0 MiB (32.4 MiB/s) with 1 file(s) remaining  
Completed 21.0 MiB/22.0 MiB (32.4 MiB/s) with 1 file(s) remaining  
Completed 21.2 MiB/22.0 MiB (32.5 MiB/s) with 1 file(s) remaining  
Completed 21.5 MiB/22.0 MiB (32.8 MiB/s) with 1 file(s) remaining  
Completed 21.8 MiB/22.0 MiB (32.9 MiB/s) with 1 file(s) remaining  
Completed 22.0 MiB/22.0 MiB (32.7 MiB/s) with 1 file(s) remaining  
upload: ../../tmp/part1 to s3://encrypted/mpyawscli                </msg>
<status status="PASS" starttime="20230309 17:45:12.360" endtime="20230309 17:45:12.363"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:12.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:12.364" endtime="20230309 17:45:12.366"/>
</kw>
<status status="PASS" starttime="20230309 17:45:09.374" endtime="20230309 17:45:12.367"/>
</kw>
<msg timestamp="20230309 17:45:12.367" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:45:09.373" endtime="20230309 17:45:12.368"/>
</kw>
<msg timestamp="20230309 17:45:12.369" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (966.6 KiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (1.9 MiB/s) with 1 file(s) remaining  
Completed 768.0 KiB/22.0 MiB (2.7 MiB/s) with 1 file(s) remainin...</msg>
<status status="PASS" starttime="20230309 17:45:09.371" endtime="20230309 17:45:12.369"/>
</kw>
<status status="PASS" starttime="20230309 17:45:09.370" endtime="20230309 17:45:12.370"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>cp s3://${BUCKET}/mpyawscli /tmp/part1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:12.393" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp s3://encrypted/mpyawscli /tmp/part1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:16.261" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:16.262" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (684.2 KiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (1.3 MiB/s) with 1 file(s) remaining  
Completed 768.0 KiB/22.0 MiB (1.9 MiB/s) with 1 file(s) remainin...</msg>
<status status="PASS" starttime="20230309 17:45:12.387" endtime="20230309 17:45:16.262"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:16.266" level="INFO">Completed 256.0 KiB/22.0 MiB (684.2 KiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (1.3 MiB/s) with 1 file(s) remaining  
Completed 768.0 KiB/22.0 MiB (1.9 MiB/s) with 1 file(s) remaining  
Completed 1.0 MiB/22.0 MiB (2.2 MiB/s) with 1 file(s) remaining    
Completed 1.2 MiB/22.0 MiB (2.7 MiB/s) with 1 file(s) remaining    
Completed 1.5 MiB/22.0 MiB (3.2 MiB/s) with 1 file(s) remaining    
Completed 1.8 MiB/22.0 MiB (3.4 MiB/s) with 1 file(s) remaining    
Completed 2.0 MiB/22.0 MiB (3.9 MiB/s) with 1 file(s) remaining    
Completed 2.2 MiB/22.0 MiB (4.3 MiB/s) with 1 file(s) remaining    
Completed 2.5 MiB/22.0 MiB (4.0 MiB/s) with 1 file(s) remaining    
Completed 2.8 MiB/22.0 MiB (4.2 MiB/s) with 1 file(s) remaining    
Completed 3.0 MiB/22.0 MiB (4.0 MiB/s) with 1 file(s) remaining    
Completed 3.2 MiB/22.0 MiB (3.8 MiB/s) with 1 file(s) remaining    
Completed 3.5 MiB/22.0 MiB (3.9 MiB/s) with 1 file(s) remaining    
Completed 3.8 MiB/22.0 MiB (4.0 MiB/s) with 1 file(s) remaining    
Completed 4.0 MiB/22.0 MiB (4.3 MiB/s) with 1 file(s) remaining    
Completed 4.2 MiB/22.0 MiB (4.3 MiB/s) with 1 file(s) remaining    
Completed 4.5 MiB/22.0 MiB (4.5 MiB/s) with 1 file(s) remaining    
Completed 4.8 MiB/22.0 MiB (4.6 MiB/s) with 1 file(s) remaining    
Completed 5.0 MiB/22.0 MiB (4.6 MiB/s) with 1 file(s) remaining    
Completed 5.2 MiB/22.0 MiB (4.7 MiB/s) with 1 file(s) remaining    
Completed 5.5 MiB/22.0 MiB (4.9 MiB/s) with 1 file(s) remaining    
Completed 5.8 MiB/22.0 MiB (5.0 MiB/s) with 1 file(s) remaining    
Completed 6.0 MiB/22.0 MiB (5.1 MiB/s) with 1 file(s) remaining    
Completed 6.2 MiB/22.0 MiB (5.3 MiB/s) with 1 file(s) remaining    
Completed 6.5 MiB/22.0 MiB (5.4 MiB/s) with 1 file(s) remaining    
Completed 6.8 MiB/22.0 MiB (5.5 MiB/s) with 1 file(s) remaining    
Completed 7.0 MiB/22.0 MiB (5.4 MiB/s) with 1 file(s) remaining    
Completed 7.2 MiB/22.0 MiB (5.5 MiB/s) with 1 file(s) remaining    
Completed 7.5 MiB/22.0 MiB (5.7 MiB/s) with 1 file(s) remaining    
Completed 7.8 MiB/22.0 MiB (5.7 MiB/s) with 1 file(s) remaining    
Completed 8.0 MiB/22.0 MiB (5.8 MiB/s) with 1 file(s) remaining    
Completed 8.2 MiB/22.0 MiB (6.0 MiB/s) with 1 file(s) remaining    
Completed 8.5 MiB/22.0 MiB (6.0 MiB/s) with 1 file(s) remaining    
Completed 8.8 MiB/22.0 MiB (6.0 MiB/s) with 1 file(s) remaining    
Completed 9.0 MiB/22.0 MiB (6.0 MiB/s) with 1 file(s) remaining    
Completed 9.2 MiB/22.0 MiB (6.0 MiB/s) with 1 file(s) remaining    
Completed 9.5 MiB/22.0 MiB (6.1 MiB/s) with 1 file(s) remaining    
Completed 9.8 MiB/22.0 MiB (6.3 MiB/s) with 1 file(s) remaining    
Completed 10.0 MiB/22.0 MiB (6.2 MiB/s) with 1 file(s) remaining   
Completed 10.2 MiB/22.0 MiB (6.3 MiB/s) with 1 file(s) remaining   
Completed 10.5 MiB/22.0 MiB (6.4 MiB/s) with 1 file(s) remaining   
Completed 10.8 MiB/22.0 MiB (6.4 MiB/s) with 1 file(s) remaining   
Completed 11.0 MiB/22.0 MiB (6.5 MiB/s) with 1 file(s) remaining   
Completed 11.2 MiB/22.0 MiB (6.6 MiB/s) with 1 file(s) remaining   
Completed 11.5 MiB/22.0 MiB (6.5 MiB/s) with 1 file(s) remaining   
Completed 11.8 MiB/22.0 MiB (6.7 MiB/s) with 1 file(s) remaining   
Completed 12.0 MiB/22.0 MiB (6.6 MiB/s) with 1 file(s) remaining   
Completed 12.2 MiB/22.0 MiB (6.7 MiB/s) with 1 file(s) remaining   
Completed 12.5 MiB/22.0 MiB (6.6 MiB/s) with 1 file(s) remaining   
Completed 12.8 MiB/22.0 MiB (6.7 MiB/s) with 1 file(s) remaining   
Completed 13.0 MiB/22.0 MiB (6.8 MiB/s) with 1 file(s) remaining   
Completed 13.2 MiB/22.0 MiB (6.8 MiB/s) with 1 file(s) remaining   
Completed 13.5 MiB/22.0 MiB (6.8 MiB/s) with 1 file(s) remaining   
Completed 13.8 MiB/22.0 MiB (6.8 MiB/s) with 1 file(s) remaining   
Completed 14.0 MiB/22.0 MiB (6.9 MiB/s) with 1 file(s) remaining   
Completed 14.2 MiB/22.0 MiB (6.9 MiB/s) with 1 file(s) remaining   
Completed 14.5 MiB/22.0 MiB (7.0 MiB/s) with 1 file(s) remaining   
Completed 14.8 MiB/22.0 MiB (7.1 MiB/s) with 1 file(s) remaining   
Completed 15.0 MiB/22.0 MiB (7.2 MiB/s) with 1 file(s) remaining   
Completed 15.2 MiB/22.0 MiB (7.2 MiB/s) with 1 file(s) remaining   
Completed 15.5 MiB/22.0 MiB (7.2 MiB/s) with 1 file(s) remaining   
Completed 15.8 MiB/22.0 MiB (7.1 MiB/s) with 1 file(s) remaining   
Completed 16.0 MiB/22.0 MiB (7.2 MiB/s) with 1 file(s) remaining   
Completed 16.2 MiB/22.0 MiB (7.3 MiB/s) with 1 file(s) remaining   
Completed 16.5 MiB/22.0 MiB (7.3 MiB/s) with 1 file(s) remaining   
Completed 16.8 MiB/22.0 MiB (7.4 MiB/s) with 1 file(s) remaining   
Completed 17.0 MiB/22.0 MiB (7.4 MiB/s) with 1 file(s) remaining   
Completed 17.2 MiB/22.0 MiB (7.5 MiB/s) with 1 file(s) remaining   
Completed 17.5 MiB/22.0 MiB (7.5 MiB/s) with 1 file(s) remaining   
Completed 17.8 MiB/22.0 MiB (7.5 MiB/s) with 1 file(s) remaining   
Completed 18.0 MiB/22.0 MiB (7.5 MiB/s) with 1 file(s) remaining   
Completed 18.2 MiB/22.0 MiB (7.5 MiB/s) with 1 file(s) remaining   
Completed 18.5 MiB/22.0 MiB (7.6 MiB/s) with 1 file(s) remaining   
Completed 18.8 MiB/22.0 MiB (7.7 MiB/s) with 1 file(s) remaining   
Completed 19.0 MiB/22.0 MiB (7.5 MiB/s) with 1 file(s) remaining   
Completed 19.2 MiB/22.0 MiB (7.6 MiB/s) with 1 file(s) remaining   
Completed 19.5 MiB/22.0 MiB (7.5 MiB/s) with 1 file(s) remaining   
Completed 19.8 MiB/22.0 MiB (7.6 MiB/s) with 1 file(s) remaining   
Completed 20.0 MiB/22.0 MiB (7.7 MiB/s) with 1 file(s) remaining   
Completed 20.2 MiB/22.0 MiB (7.7 MiB/s) with 1 file(s) remaining   
Completed 20.5 MiB/22.0 MiB (7.8 MiB/s) with 1 file(s) remaining   
Completed 20.8 MiB/22.0 MiB (7.7 MiB/s) with 1 file(s) remaining   
Completed 21.0 MiB/22.0 MiB (7.8 MiB/s) with 1 file(s) remaining   
Completed 21.2 MiB/22.0 MiB (7.7 MiB/s) with 1 file(s) remaining   
Completed 21.5 MiB/22.0 MiB (7.8 MiB/s) with 1 file(s) remaining   
Completed 21.8 MiB/22.0 MiB (7.9 MiB/s) with 1 file(s) remaining   
Completed 22.0 MiB/22.0 MiB (7.8 MiB/s) with 1 file(s) remaining   
download: s3://encrypted/mpyawscli to ../../tmp/part1.result       </msg>
<status status="PASS" starttime="20230309 17:45:16.263" endtime="20230309 17:45:16.267"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:16.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:16.267" endtime="20230309 17:45:16.272"/>
</kw>
<status status="PASS" starttime="20230309 17:45:12.384" endtime="20230309 17:45:16.275"/>
</kw>
<msg timestamp="20230309 17:45:16.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:45:12.384" endtime="20230309 17:45:16.278"/>
</kw>
<msg timestamp="20230309 17:45:16.278" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (684.2 KiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (1.3 MiB/s) with 1 file(s) remaining  
Completed 768.0 KiB/22.0 MiB (1.9 MiB/s) with 1 file(s) remainin...</msg>
<status status="PASS" starttime="20230309 17:45:12.381" endtime="20230309 17:45:16.278"/>
</kw>
<status status="PASS" starttime="20230309 17:45:12.371" endtime="20230309 17:45:16.279"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/mpyawscli</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:16.293" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://encrypted/mpyawscli 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:17.287" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:17.287" level="INFO">${output} = delete: s3://encrypted/mpyawscli</msg>
<status status="PASS" starttime="20230309 17:45:16.286" endtime="20230309 17:45:17.287"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:17.290" level="INFO">delete: s3://encrypted/mpyawscli</msg>
<status status="PASS" starttime="20230309 17:45:17.289" endtime="20230309 17:45:17.290"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:17.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:17.290" endtime="20230309 17:45:17.291"/>
</kw>
<status status="PASS" starttime="20230309 17:45:16.285" endtime="20230309 17:45:17.292"/>
</kw>
<msg timestamp="20230309 17:45:17.292" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:45:16.284" endtime="20230309 17:45:17.293"/>
</kw>
<msg timestamp="20230309 17:45:17.293" level="INFO">${output} = delete: s3://encrypted/mpyawscli</msg>
<status status="PASS" starttime="20230309 17:45:16.282" endtime="20230309 17:45:17.293"/>
</kw>
<status status="PASS" starttime="20230309 17:45:16.281" endtime="20230309 17:45:17.293"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part1.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:17.301" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:17.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:17.368" level="INFO">${output} = 6c42cacd29f2221c1e7363d0c9444f4f</msg>
<status status="PASS" starttime="20230309 17:45:17.297" endtime="20230309 17:45:17.368"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:17.370" level="INFO">6c42cacd29f2221c1e7363d0c9444f4f</msg>
<status status="PASS" starttime="20230309 17:45:17.369" endtime="20230309 17:45:17.370"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:17.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:17.371" endtime="20230309 17:45:17.372"/>
</kw>
<status status="PASS" starttime="20230309 17:45:17.296" endtime="20230309 17:45:17.372"/>
</kw>
<msg timestamp="20230309 17:45:17.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:45:17.295" endtime="20230309 17:45:17.373"/>
</kw>
<msg timestamp="20230309 17:45:17.374" level="INFO">${checksumbefore} = 6c42cacd29f2221c1e7363d0c9444f4f</msg>
<status status="PASS" starttime="20230309 17:45:17.295" endtime="20230309 17:45:17.374"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:17.380" level="INFO">Running command 'md5sum /tmp/part1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:17.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:17.452" level="INFO">${output} = 6c42cacd29f2221c1e7363d0c9444f4f</msg>
<status status="PASS" starttime="20230309 17:45:17.376" endtime="20230309 17:45:17.452"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:17.454" level="INFO">6c42cacd29f2221c1e7363d0c9444f4f</msg>
<status status="PASS" starttime="20230309 17:45:17.453" endtime="20230309 17:45:17.454"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:17.455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:17.454" endtime="20230309 17:45:17.455"/>
</kw>
<status status="PASS" starttime="20230309 17:45:17.375" endtime="20230309 17:45:17.455"/>
</kw>
<msg timestamp="20230309 17:45:17.455" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:45:17.375" endtime="20230309 17:45:17.456"/>
</kw>
<msg timestamp="20230309 17:45:17.457" level="INFO">${checksumafter} = 6c42cacd29f2221c1e7363d0c9444f4f</msg>
<status status="PASS" starttime="20230309 17:45:17.374" endtime="20230309 17:45:17.457"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 17:45:17.457" endtime="20230309 17:45:17.458"/>
</kw>
<status status="PASS" starttime="20230309 17:45:17.294" endtime="20230309 17:45:17.458"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:45:09.197" endtime="20230309 17:45:17.458"/>
</test>
<test id="s1-s5-s8-t11" name="Test Multipart Upload Put With Copy" line="253">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:45:17.464" level="INFO">${randStr} = 2725639707</msg>
<status status="PASS" starttime="20230309 17:45:17.463" endtime="20230309 17:45:17.464"/>
</kw>
<msg timestamp="20230309 17:45:17.464" level="INFO">${random} = ozone-test-2725639707</msg>
<status status="PASS" starttime="20230309 17:45:17.463" endtime="20230309 17:45:17.464"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:45:17.465" level="INFO">${PREFIX} = ozone-test-2725639707</msg>
<status status="PASS" starttime="20230309 17:45:17.465" endtime="20230309 17:45:17.466"/>
</kw>
<status status="PASS" starttime="20230309 17:45:17.462" endtime="20230309 17:45:17.466"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:17.475" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:17.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:17.516" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:45:17.471" endtime="20230309 17:45:17.517"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:17.518" level="INFO"/>
<status status="PASS" starttime="20230309 17:45:17.517" endtime="20230309 17:45:17.519"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:17.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:17.519" endtime="20230309 17:45:17.521"/>
</kw>
<status status="PASS" starttime="20230309 17:45:17.470" endtime="20230309 17:45:17.521"/>
</kw>
<msg timestamp="20230309 17:45:17.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:45:17.470" endtime="20230309 17:45:17.522"/>
</kw>
<status status="PASS" starttime="20230309 17:45:17.468" endtime="20230309 17:45:17.522"/>
</kw>
<status status="PASS" starttime="20230309 17:45:17.467" endtime="20230309 17:45:17.522"/>
</kw>
<status status="PASS" starttime="20230309 17:45:17.466" endtime="20230309 17:45:17.523"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copytest/source --body /tmp/part1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:17.530" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-2725639707/copytest/source --body /tmp/part1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:18.897" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:18.898" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:45:17.527" endtime="20230309 17:45:18.898"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:18.900" level="INFO"/>
<status status="PASS" starttime="20230309 17:45:18.899" endtime="20230309 17:45:18.900"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:18.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:18.900" endtime="20230309 17:45:18.901"/>
</kw>
<status status="PASS" starttime="20230309 17:45:17.526" endtime="20230309 17:45:18.901"/>
</kw>
<msg timestamp="20230309 17:45:18.902" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:45:17.525" endtime="20230309 17:45:18.902"/>
</kw>
<msg timestamp="20230309 17:45:18.903" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:45:17.525" endtime="20230309 17:45:18.903"/>
</kw>
<msg timestamp="20230309 17:45:18.903" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 17:45:17.524" endtime="20230309 17:45:18.903"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/copytest/destination</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:18.910" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-2725639707/copytest/destination 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:19.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:19.894" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2725639707/copytest/destination",
    "UploadId": "4acfd8a1-a46f-4a02-910c-3a79107848dc-109994568566964314"
}</msg>
<status status="PASS" starttime="20230309 17:45:18.907" endtime="20230309 17:45:19.895"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:19.896" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-2725639707/copytest/destination",
    "UploadId": "4acfd8a1-a46f-4a02-910c-3a79107848dc-109994568566964314"
}</msg>
<status status="PASS" starttime="20230309 17:45:19.895" endtime="20230309 17:45:19.897"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:19.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:19.897" endtime="20230309 17:45:19.898"/>
</kw>
<status status="PASS" starttime="20230309 17:45:18.905" endtime="20230309 17:45:19.898"/>
</kw>
<msg timestamp="20230309 17:45:19.898" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:45:18.905" endtime="20230309 17:45:19.899"/>
</kw>
<msg timestamp="20230309 17:45:19.900" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2725639707/copytest/destination",
    "UploadId": "4acfd8a1-a46f-4a02-910c-3a79107848dc-109994568566964314"
}</msg>
<status status="PASS" starttime="20230309 17:45:18.904" endtime="20230309 17:45:19.900"/>
</kw>
<msg timestamp="20230309 17:45:19.900" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2725639707/copytest/destination",
    "UploadId": "4acfd8a1-a46f-4a02-910c-3a79107848dc-109994568566964314"
}</msg>
<status status="PASS" starttime="20230309 17:45:18.903" endtime="20230309 17:45:19.900"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:19.907" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-2725639707/copytest/destination",
    "UploadId": "4acfd8a1-a46f-4a02-910c-3a79107848dc-109994568566964314"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:19.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:19.976" level="INFO">${output} = 4acfd8a1-a46f-4a02-910c-3a79107848dc-109994568566964314</msg>
<status status="PASS" starttime="20230309 17:45:19.902" endtime="20230309 17:45:19.976"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:19.978" level="INFO">4acfd8a1-a46f-4a02-910c-3a79107848dc-109994568566964314</msg>
<status status="PASS" starttime="20230309 17:45:19.977" endtime="20230309 17:45:19.978"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:19.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:19.979" endtime="20230309 17:45:19.979"/>
</kw>
<msg timestamp="20230309 17:45:19.980" level="INFO">${uploadID} = 4acfd8a1-a46f-4a02-910c-3a79107848dc-109994568566964314</msg>
<status status="PASS" starttime="20230309 17:45:19.901" endtime="20230309 17:45:19.981"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:45:19.981" endtime="20230309 17:45:19.982"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:45:19.982" endtime="20230309 17:45:19.983"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copytest/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copytest/source</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:19.990" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket encrypted --key ozone-test-2725639707/copytest/destination --upload-id 4acfd8a1-a46f-4a02-910c-3a79107848dc-109994568566964314 --part-number 1 --copy-source encrypted/ozone-test-2725639707/copytest/source 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:21.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:21.863" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-2725639707/copytest/destination-4acfd8a1-a46f-4a02-910c-3a79107848dc-109994568566964314-1",
        "LastModified": "2023-03-09T17:...</msg>
<status status="PASS" starttime="20230309 17:45:19.987" endtime="20230309 17:45:21.863"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:21.867" level="INFO">{
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-2725639707/copytest/destination-4acfd8a1-a46f-4a02-910c-3a79107848dc-109994568566964314-1",
        "LastModified": "2023-03-09T17:45:21.641Z"
    }
}</msg>
<status status="PASS" starttime="20230309 17:45:21.864" endtime="20230309 17:45:21.868"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:21.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:21.868" endtime="20230309 17:45:21.869"/>
</kw>
<status status="PASS" starttime="20230309 17:45:19.986" endtime="20230309 17:45:21.871"/>
</kw>
<msg timestamp="20230309 17:45:21.871" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:45:19.985" endtime="20230309 17:45:21.873"/>
</kw>
<msg timestamp="20230309 17:45:21.874" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-2725639707/copytest/destination-4acfd8a1-a46f-4a02-910c-3a79107848dc-109994568566964314-1",
        "LastModified": "2023-03-09T17:...</msg>
<status status="PASS" starttime="20230309 17:45:19.984" endtime="20230309 17:45:21.874"/>
</kw>
<msg timestamp="20230309 17:45:21.874" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-2725639707/copytest/destination-4acfd8a1-a46f-4a02-910c-3a79107848dc-109994568566964314-1",
        "LastModified": "2023-03-09T17:...</msg>
<status status="PASS" starttime="20230309 17:45:19.983" endtime="20230309 17:45:21.874"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:45:21.874" endtime="20230309 17:45:21.879"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:45:21.879" endtime="20230309 17:45:21.881"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:21.898" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-2725639707/copytest/destination-4acfd8a1-a46f-4a02-910c-3a79107848dc-109994568566964314-1",
        "LastModified": "2023-03-09T17:45:21.641Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:22.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:22.044" level="INFO">${output} = /s3v/encrypted/ozone-test-2725639707/copytest/destination-4acfd8a1-a46f-4a02-910c-3a79107848dc-109994568566964314-1</msg>
<status status="PASS" starttime="20230309 17:45:21.884" endtime="20230309 17:45:22.045"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:22.048" level="INFO">/s3v/encrypted/ozone-test-2725639707/copytest/destination-4acfd8a1-a46f-4a02-910c-3a79107848dc-109994568566964314-1</msg>
<status status="PASS" starttime="20230309 17:45:22.046" endtime="20230309 17:45:22.048"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:22.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:22.048" endtime="20230309 17:45:22.049"/>
</kw>
<msg timestamp="20230309 17:45:22.050" level="INFO">${eTag1} = /s3v/encrypted/ozone-test-2725639707/copytest/destination-4acfd8a1-a46f-4a02-910c-3a79107848dc-109994568566964314-1</msg>
<status status="PASS" starttime="20230309 17:45:21.881" endtime="20230309 17:45:22.050"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/copytest/destination --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:22.068" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 4acfd8a1-a46f-4a02-910c-3a79107848dc-109994568566964314 --bucket encrypted --key ozone-test-2725639707/copytest/destination --multipart-upload 'Parts=[{ETag=/s3v/encrypted/ozone-test-2725639707/copytest/destination-4acfd8a1-a46f-4a02-910c-3a79107848dc-109994568566964314-1,PartNumber=1}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:23.101" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:23.101" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-2725639707/copytest/destination",
    "ETag": "b8b66da38c36d8839d96c9d500c843ccbf5143ee2d640e0260333be839d9f47d"
}</msg>
<status status="PASS" starttime="20230309 17:45:22.056" endtime="20230309 17:45:23.101"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:23.103" level="INFO">{
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-2725639707/copytest/destination",
    "ETag": "b8b66da38c36d8839d96c9d500c843ccbf5143ee2d640e0260333be839d9f47d"
}</msg>
<status status="PASS" starttime="20230309 17:45:23.102" endtime="20230309 17:45:23.103"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:23.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:23.103" endtime="20230309 17:45:23.104"/>
</kw>
<status status="PASS" starttime="20230309 17:45:22.055" endtime="20230309 17:45:23.105"/>
</kw>
<msg timestamp="20230309 17:45:23.105" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:45:22.054" endtime="20230309 17:45:23.106"/>
</kw>
<msg timestamp="20230309 17:45:23.106" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-2725639707/copytest/destination",
    "ETag": "b8b66da38c36d8839d96c9d500c843ccbf5143ee2d640e0260333be839d9f47d"
}</msg>
<status status="PASS" starttime="20230309 17:45:22.052" endtime="20230309 17:45:23.106"/>
</kw>
<status status="PASS" starttime="20230309 17:45:22.050" endtime="20230309 17:45:23.107"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copytest/destination /tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:23.114" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-2725639707/copytest/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:24.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:24.416" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:45:22 GMT",
    "ContentLength": 5242880,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Ex...</msg>
<status status="PASS" starttime="20230309 17:45:23.110" endtime="20230309 17:45:24.416"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:24.422" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:45:22 GMT",
    "ContentLength": 5242880,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 09 Mar 2023 17:45:23 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230309 17:45:24.419" endtime="20230309 17:45:24.422"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:24.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:24.423" endtime="20230309 17:45:24.425"/>
</kw>
<status status="PASS" starttime="20230309 17:45:23.109" endtime="20230309 17:45:24.426"/>
</kw>
<msg timestamp="20230309 17:45:24.426" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:45:23.109" endtime="20230309 17:45:24.428"/>
</kw>
<msg timestamp="20230309 17:45:24.428" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:45:22 GMT",
    "ContentLength": 5242880,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Ex...</msg>
<status status="PASS" starttime="20230309 17:45:23.108" endtime="20230309 17:45:24.428"/>
</kw>
<status status="PASS" starttime="20230309 17:45:23.107" endtime="20230309 17:45:24.431"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:24.453" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:24.497" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:24.497" level="INFO">${output} = d671d7f5b2050d1a072d901886182267</msg>
<status status="PASS" starttime="20230309 17:45:24.443" endtime="20230309 17:45:24.497"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:24.499" level="INFO">d671d7f5b2050d1a072d901886182267</msg>
<status status="PASS" starttime="20230309 17:45:24.497" endtime="20230309 17:45:24.499"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:24.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:24.499" endtime="20230309 17:45:24.501"/>
</kw>
<status status="PASS" starttime="20230309 17:45:24.441" endtime="20230309 17:45:24.501"/>
</kw>
<msg timestamp="20230309 17:45:24.502" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:45:24.440" endtime="20230309 17:45:24.503"/>
</kw>
<msg timestamp="20230309 17:45:24.503" level="INFO">${checksumbefore} = d671d7f5b2050d1a072d901886182267</msg>
<status status="PASS" starttime="20230309 17:45:24.436" endtime="20230309 17:45:24.503"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:24.511" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:24.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:24.533" level="INFO">${output} = d671d7f5b2050d1a072d901886182267</msg>
<status status="PASS" starttime="20230309 17:45:24.507" endtime="20230309 17:45:24.533"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:24.541" level="INFO">d671d7f5b2050d1a072d901886182267</msg>
<status status="PASS" starttime="20230309 17:45:24.540" endtime="20230309 17:45:24.541"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:24.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:24.541" endtime="20230309 17:45:24.544"/>
</kw>
<status status="PASS" starttime="20230309 17:45:24.505" endtime="20230309 17:45:24.546"/>
</kw>
<msg timestamp="20230309 17:45:24.546" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:45:24.505" endtime="20230309 17:45:24.548"/>
</kw>
<msg timestamp="20230309 17:45:24.548" level="INFO">${checksumafter} = d671d7f5b2050d1a072d901886182267</msg>
<status status="PASS" starttime="20230309 17:45:24.504" endtime="20230309 17:45:24.548"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 17:45:24.548" endtime="20230309 17:45:24.549"/>
</kw>
<status status="PASS" starttime="20230309 17:45:24.432" endtime="20230309 17:45:24.550"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:45:17.461" endtime="20230309 17:45:24.551"/>
</test>
<test id="s1-s5-s8-t12" name="Test Multipart Upload Put With Copy and range" line="275">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:45:24.558" level="INFO">${randStr} = 2330862950</msg>
<status status="PASS" starttime="20230309 17:45:24.557" endtime="20230309 17:45:24.558"/>
</kw>
<msg timestamp="20230309 17:45:24.559" level="INFO">${random} = ozone-test-2330862950</msg>
<status status="PASS" starttime="20230309 17:45:24.555" endtime="20230309 17:45:24.559"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:45:24.560" level="INFO">${PREFIX} = ozone-test-2330862950</msg>
<status status="PASS" starttime="20230309 17:45:24.559" endtime="20230309 17:45:24.560"/>
</kw>
<status status="PASS" starttime="20230309 17:45:24.555" endtime="20230309 17:45:24.560"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>10</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>10</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:24.570" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=10 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:24.637" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:24.638" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:45:24.565" endtime="20230309 17:45:24.638"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:24.640" level="INFO"/>
<status status="PASS" starttime="20230309 17:45:24.639" endtime="20230309 17:45:24.640"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:24.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:24.641" endtime="20230309 17:45:24.641"/>
</kw>
<status status="PASS" starttime="20230309 17:45:24.564" endtime="20230309 17:45:24.642"/>
</kw>
<msg timestamp="20230309 17:45:24.642" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:45:24.563" endtime="20230309 17:45:24.644"/>
</kw>
<status status="PASS" starttime="20230309 17:45:24.562" endtime="20230309 17:45:24.644"/>
</kw>
<status status="PASS" starttime="20230309 17:45:24.561" endtime="20230309 17:45:24.645"/>
</kw>
<status status="PASS" starttime="20230309 17:45:24.560" endtime="20230309 17:45:24.645"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source --body /tmp/part1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:24.654" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-2330862950/copyrange/source --body /tmp/part1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:26.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:26.432" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:45:24.649" endtime="20230309 17:45:26.432"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:26.434" level="INFO"/>
<status status="PASS" starttime="20230309 17:45:26.433" endtime="20230309 17:45:26.435"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:26.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:26.435" endtime="20230309 17:45:26.436"/>
</kw>
<status status="PASS" starttime="20230309 17:45:24.648" endtime="20230309 17:45:26.436"/>
</kw>
<msg timestamp="20230309 17:45:26.436" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:45:24.647" endtime="20230309 17:45:26.437"/>
</kw>
<msg timestamp="20230309 17:45:26.437" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:45:24.646" endtime="20230309 17:45:26.437"/>
</kw>
<msg timestamp="20230309 17:45:26.438" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 17:45:24.645" endtime="20230309 17:45:26.438"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:26.447" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-2330862950/copyrange/destination 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:27.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:27.745" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2330862950/copyrange/destination",
    "UploadId": "44b2324e-de2b-4477-b326-a810c58f10e1-109994569080766557"
}</msg>
<status status="PASS" starttime="20230309 17:45:26.444" endtime="20230309 17:45:27.745"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:27.746" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-2330862950/copyrange/destination",
    "UploadId": "44b2324e-de2b-4477-b326-a810c58f10e1-109994569080766557"
}</msg>
<status status="PASS" starttime="20230309 17:45:27.745" endtime="20230309 17:45:27.746"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:27.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:27.746" endtime="20230309 17:45:27.748"/>
</kw>
<status status="PASS" starttime="20230309 17:45:26.442" endtime="20230309 17:45:27.748"/>
</kw>
<msg timestamp="20230309 17:45:27.749" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:45:26.441" endtime="20230309 17:45:27.749"/>
</kw>
<msg timestamp="20230309 17:45:27.750" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2330862950/copyrange/destination",
    "UploadId": "44b2324e-de2b-4477-b326-a810c58f10e1-109994569080766557"
}</msg>
<status status="PASS" starttime="20230309 17:45:26.440" endtime="20230309 17:45:27.750"/>
</kw>
<msg timestamp="20230309 17:45:27.750" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2330862950/copyrange/destination",
    "UploadId": "44b2324e-de2b-4477-b326-a810c58f10e1-109994569080766557"
}</msg>
<status status="PASS" starttime="20230309 17:45:26.439" endtime="20230309 17:45:27.750"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:27.756" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-2330862950/copyrange/destination",
    "UploadId": "44b2324e-de2b-4477-b326-a810c58f10e1-109994569080766557"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:27.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:27.821" level="INFO">${output} = 44b2324e-de2b-4477-b326-a810c58f10e1-109994569080766557</msg>
<status status="PASS" starttime="20230309 17:45:27.752" endtime="20230309 17:45:27.822"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:27.823" level="INFO">44b2324e-de2b-4477-b326-a810c58f10e1-109994569080766557</msg>
<status status="PASS" starttime="20230309 17:45:27.822" endtime="20230309 17:45:27.823"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:27.825" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:27.824" endtime="20230309 17:45:27.826"/>
</kw>
<msg timestamp="20230309 17:45:27.826" level="INFO">${uploadID} = 44b2324e-de2b-4477-b326-a810c58f10e1-109994569080766557</msg>
<status status="PASS" starttime="20230309 17:45:27.751" endtime="20230309 17:45:27.827"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:45:27.827" endtime="20230309 17:45:27.828"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:45:27.828" endtime="20230309 17:45:27.829"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:27.837" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket encrypted --key ozone-test-2330862950/copyrange/destination --upload-id 44b2324e-de2b-4477-b326-a810c58f10e1-109994569080766557 --part-number 1 --copy-source encrypted/ozone-test-2330862950/copyrange/source --copy-source-range bytes=0-10485757 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:30.035" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:30.035" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-2330862950/copyrange/destination-44b2324e-de2b-4477-b326-a810c58f10e1-109994569080766557-1",
        "LastModified": "2023-03-09T17...</msg>
<status status="PASS" starttime="20230309 17:45:27.834" endtime="20230309 17:45:30.035"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:30.037" level="INFO">{
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-2330862950/copyrange/destination-44b2324e-de2b-4477-b326-a810c58f10e1-109994569080766557-1",
        "LastModified": "2023-03-09T17:45:29.908Z"
    }
}</msg>
<status status="PASS" starttime="20230309 17:45:30.036" endtime="20230309 17:45:30.037"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:30.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:30.037" endtime="20230309 17:45:30.038"/>
</kw>
<status status="PASS" starttime="20230309 17:45:27.833" endtime="20230309 17:45:30.038"/>
</kw>
<msg timestamp="20230309 17:45:30.038" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:45:27.833" endtime="20230309 17:45:30.039"/>
</kw>
<msg timestamp="20230309 17:45:30.039" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-2330862950/copyrange/destination-44b2324e-de2b-4477-b326-a810c58f10e1-109994569080766557-1",
        "LastModified": "2023-03-09T17...</msg>
<status status="PASS" starttime="20230309 17:45:27.832" endtime="20230309 17:45:30.039"/>
</kw>
<msg timestamp="20230309 17:45:30.040" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-2330862950/copyrange/destination-44b2324e-de2b-4477-b326-a810c58f10e1-109994569080766557-1",
        "LastModified": "2023-03-09T17...</msg>
<status status="PASS" starttime="20230309 17:45:27.830" endtime="20230309 17:45:30.040"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:45:30.040" endtime="20230309 17:45:30.041"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:45:30.041" endtime="20230309 17:45:30.042"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:30.046" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-2330862950/copyrange/destination-44b2324e-de2b-4477-b326-a810c58f10e1-109994569080766557-1",
        "LastModified": "2023-03-09T17:45:29.908Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:30.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:30.127" level="INFO">${output} = /s3v/encrypted/ozone-test-2330862950/copyrange/destination-44b2324e-de2b-4477-b326-a810c58f10e1-109994569080766557-1</msg>
<status status="PASS" starttime="20230309 17:45:30.043" endtime="20230309 17:45:30.127"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:30.133" level="INFO">/s3v/encrypted/ozone-test-2330862950/copyrange/destination-44b2324e-de2b-4477-b326-a810c58f10e1-109994569080766557-1</msg>
<status status="PASS" starttime="20230309 17:45:30.128" endtime="20230309 17:45:30.135"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:30.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:30.136" endtime="20230309 17:45:30.137"/>
</kw>
<msg timestamp="20230309 17:45:30.137" level="INFO">${eTag1} = /s3v/encrypted/ozone-test-2330862950/copyrange/destination-44b2324e-de2b-4477-b326-a810c58f10e1-109994569080766557-1</msg>
<status status="PASS" starttime="20230309 17:45:30.042" endtime="20230309 17:45:30.137"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:30.146" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket encrypted --key ozone-test-2330862950/copyrange/destination --upload-id 44b2324e-de2b-4477-b326-a810c58f10e1-109994569080766557 --part-number 2 --copy-source encrypted/ozone-test-2330862950/copyrange/source --copy-source-range bytes=10485758-10485759 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:31.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:31.484" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-2330862950/copyrange/destination-44b2324e-de2b-4477-b326-a810c58f10e1-109994569080766557-2",
        "LastModified": "2023-03-09T17...</msg>
<status status="PASS" starttime="20230309 17:45:30.143" endtime="20230309 17:45:31.484"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:31.486" level="INFO">{
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-2330862950/copyrange/destination-44b2324e-de2b-4477-b326-a810c58f10e1-109994569080766557-2",
        "LastModified": "2023-03-09T17:45:31.305Z"
    }
}</msg>
<status status="PASS" starttime="20230309 17:45:31.485" endtime="20230309 17:45:31.486"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:31.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:31.486" endtime="20230309 17:45:31.487"/>
</kw>
<status status="PASS" starttime="20230309 17:45:30.142" endtime="20230309 17:45:31.487"/>
</kw>
<msg timestamp="20230309 17:45:31.487" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:45:30.142" endtime="20230309 17:45:31.488"/>
</kw>
<msg timestamp="20230309 17:45:31.488" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-2330862950/copyrange/destination-44b2324e-de2b-4477-b326-a810c58f10e1-109994569080766557-2",
        "LastModified": "2023-03-09T17...</msg>
<status status="PASS" starttime="20230309 17:45:30.141" endtime="20230309 17:45:31.488"/>
</kw>
<msg timestamp="20230309 17:45:31.489" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-2330862950/copyrange/destination-44b2324e-de2b-4477-b326-a810c58f10e1-109994569080766557-2",
        "LastModified": "2023-03-09T17...</msg>
<status status="PASS" starttime="20230309 17:45:30.138" endtime="20230309 17:45:31.489"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:45:31.489" endtime="20230309 17:45:31.489"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:45:31.490" endtime="20230309 17:45:31.490"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:31.495" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-2330862950/copyrange/destination-44b2324e-de2b-4477-b326-a810c58f10e1-109994569080766557-2",
        "LastModified": "2023-03-09T17:45:31.305Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:31.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:31.571" level="INFO">${output} = /s3v/encrypted/ozone-test-2330862950/copyrange/destination-44b2324e-de2b-4477-b326-a810c58f10e1-109994569080766557-2</msg>
<status status="PASS" starttime="20230309 17:45:31.492" endtime="20230309 17:45:31.571"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:31.572" level="INFO">/s3v/encrypted/ozone-test-2330862950/copyrange/destination-44b2324e-de2b-4477-b326-a810c58f10e1-109994569080766557-2</msg>
<status status="PASS" starttime="20230309 17:45:31.571" endtime="20230309 17:45:31.573"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:31.573" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:31.573" endtime="20230309 17:45:31.573"/>
</kw>
<msg timestamp="20230309 17:45:31.574" level="INFO">${eTag2} = /s3v/encrypted/ozone-test-2330862950/copyrange/destination-44b2324e-de2b-4477-b326-a810c58f10e1-109994569080766557-2</msg>
<status status="PASS" starttime="20230309 17:45:31.491" endtime="20230309 17:45:31.574"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:31.584" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 44b2324e-de2b-4477-b326-a810c58f10e1-109994569080766557 --bucket encrypted --key ozone-test-2330862950/copyrange/destination --multipart-upload 'Parts=[{ETag=/s3v/encrypted/ozone-test-2330862950/copyrange/destination-44b2324e-de2b-4477-b326-a810c58f10e1-109994569080766557-1,PartNumber=1},{ETag=/s3v/encrypted/ozone-test-2330862950/copyrange/destination-44b2324e-de2b-4477-b326-a810c58f10e1-109994569080766557-2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:32.612" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:32.612" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-2330862950/copyrange/destination",
    "ETag": "586cc858ba73513b9e5e85a7f0c53887f8a093dfe5a08f4c287518dd335c7e0c"
}</msg>
<status status="PASS" starttime="20230309 17:45:31.581" endtime="20230309 17:45:32.612"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:32.614" level="INFO">{
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-2330862950/copyrange/destination",
    "ETag": "586cc858ba73513b9e5e85a7f0c53887f8a093dfe5a08f4c287518dd335c7e0c"
}</msg>
<status status="PASS" starttime="20230309 17:45:32.613" endtime="20230309 17:45:32.614"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:32.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:32.614" endtime="20230309 17:45:32.615"/>
</kw>
<status status="PASS" starttime="20230309 17:45:31.580" endtime="20230309 17:45:32.615"/>
</kw>
<msg timestamp="20230309 17:45:32.616" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:45:31.578" endtime="20230309 17:45:32.616"/>
</kw>
<msg timestamp="20230309 17:45:32.617" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-2330862950/copyrange/destination",
    "ETag": "586cc858ba73513b9e5e85a7f0c53887f8a093dfe5a08f4c287518dd335c7e0c"
}</msg>
<status status="PASS" starttime="20230309 17:45:31.575" endtime="20230309 17:45:32.617"/>
</kw>
<status status="PASS" starttime="20230309 17:45:31.574" endtime="20230309 17:45:32.617"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination /tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:32.626" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-2330862950/copyrange/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:34.802" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:34.803" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:45:32 GMT",
    "ContentLength": 10485760,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "E...</msg>
<status status="PASS" starttime="20230309 17:45:32.622" endtime="20230309 17:45:34.803"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:34.804" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:45:32 GMT",
    "ContentLength": 10485760,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 09 Mar 2023 17:45:33 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230309 17:45:34.803" endtime="20230309 17:45:34.804"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:34.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:34.805" endtime="20230309 17:45:34.811"/>
</kw>
<status status="PASS" starttime="20230309 17:45:32.621" endtime="20230309 17:45:34.811"/>
</kw>
<msg timestamp="20230309 17:45:34.811" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:45:32.621" endtime="20230309 17:45:34.812"/>
</kw>
<msg timestamp="20230309 17:45:34.812" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:45:32 GMT",
    "ContentLength": 10485760,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "E...</msg>
<status status="PASS" starttime="20230309 17:45:32.620" endtime="20230309 17:45:34.812"/>
</kw>
<status status="PASS" starttime="20230309 17:45:32.619" endtime="20230309 17:45:34.813"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:34.829" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:34.907" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:34.907" level="INFO">${output} = 5ae1479570cb7cb75e9006494a0cf503</msg>
<status status="PASS" starttime="20230309 17:45:34.824" endtime="20230309 17:45:34.907"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:34.909" level="INFO">5ae1479570cb7cb75e9006494a0cf503</msg>
<status status="PASS" starttime="20230309 17:45:34.908" endtime="20230309 17:45:34.909"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:34.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:34.909" endtime="20230309 17:45:34.915"/>
</kw>
<status status="PASS" starttime="20230309 17:45:34.824" endtime="20230309 17:45:34.916"/>
</kw>
<msg timestamp="20230309 17:45:34.916" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:45:34.820" endtime="20230309 17:45:34.917"/>
</kw>
<msg timestamp="20230309 17:45:34.917" level="INFO">${checksumbefore} = 5ae1479570cb7cb75e9006494a0cf503</msg>
<status status="PASS" starttime="20230309 17:45:34.819" endtime="20230309 17:45:34.917"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:34.929" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:34.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:34.967" level="INFO">${output} = 5ae1479570cb7cb75e9006494a0cf503</msg>
<status status="PASS" starttime="20230309 17:45:34.921" endtime="20230309 17:45:34.967"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:34.969" level="INFO">5ae1479570cb7cb75e9006494a0cf503</msg>
<status status="PASS" starttime="20230309 17:45:34.968" endtime="20230309 17:45:34.969"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:34.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:34.970" endtime="20230309 17:45:34.970"/>
</kw>
<status status="PASS" starttime="20230309 17:45:34.921" endtime="20230309 17:45:34.971"/>
</kw>
<msg timestamp="20230309 17:45:34.971" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:45:34.920" endtime="20230309 17:45:34.974"/>
</kw>
<msg timestamp="20230309 17:45:34.975" level="INFO">${checksumafter} = 5ae1479570cb7cb75e9006494a0cf503</msg>
<status status="PASS" starttime="20230309 17:45:34.917" endtime="20230309 17:45:34.975"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 17:45:34.975" endtime="20230309 17:45:34.976"/>
</kw>
<status status="PASS" starttime="20230309 17:45:34.818" endtime="20230309 17:45:34.976"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:45:24.553" endtime="20230309 17:45:34.977"/>
</test>
<test id="s1-s5-s8-t13" name="Test Multipart Upload Put With Copy and range with IfModifiedSince" line="302">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:45:34.986" level="INFO">${randStr} = 6829075632</msg>
<status status="PASS" starttime="20230309 17:45:34.984" endtime="20230309 17:45:34.986"/>
</kw>
<msg timestamp="20230309 17:45:34.988" level="INFO">${random} = ozone-test-6829075632</msg>
<status status="PASS" starttime="20230309 17:45:34.981" endtime="20230309 17:45:34.988"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:45:34.989" level="INFO">${PREFIX} = ozone-test-6829075632</msg>
<status status="PASS" starttime="20230309 17:45:34.988" endtime="20230309 17:45:34.989"/>
</kw>
<status status="PASS" starttime="20230309 17:45:34.980" endtime="20230309 17:45:34.990"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>10</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>10</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:34.999" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=10 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:35.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:35.081" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:45:34.995" endtime="20230309 17:45:35.081"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:35.083" level="INFO"/>
<status status="PASS" starttime="20230309 17:45:35.082" endtime="20230309 17:45:35.084"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:35.085" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:35.084" endtime="20230309 17:45:35.085"/>
</kw>
<status status="PASS" starttime="20230309 17:45:34.994" endtime="20230309 17:45:35.085"/>
</kw>
<msg timestamp="20230309 17:45:35.086" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:45:34.994" endtime="20230309 17:45:35.086"/>
</kw>
<status status="PASS" starttime="20230309 17:45:34.993" endtime="20230309 17:45:35.087"/>
</kw>
<status status="PASS" starttime="20230309 17:45:34.991" endtime="20230309 17:45:35.087"/>
</kw>
<status status="PASS" starttime="20230309 17:45:34.991" endtime="20230309 17:45:35.087"/>
</kw>
<kw name="Get Current Date" library="DateTime">
<var>${curDate}</var>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20230309 17:45:35.089" level="INFO">${curDate} = 2023-03-09 17:45:35.088</msg>
<status status="PASS" starttime="20230309 17:45:35.087" endtime="20230309 17:45:35.089"/>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<var>${beforeCreate}</var>
<arg>${curDate}</arg>
<arg>1 day</arg>
<doc>Subtracts time from date and returns the resulting date.</doc>
<msg timestamp="20230309 17:45:35.101" level="INFO">${beforeCreate} = 2023-03-08 17:45:35.088</msg>
<status status="PASS" starttime="20230309 17:45:35.089" endtime="20230309 17:45:35.101"/>
</kw>
<kw name="Add Time To Date" library="DateTime">
<var>${tomorrow}</var>
<arg>${curDate}</arg>
<arg>1 day</arg>
<doc>Adds time to date and returns the resulting date.</doc>
<msg timestamp="20230309 17:45:35.103" level="INFO">${tomorrow} = 2023-03-10 17:45:35.088</msg>
<status status="PASS" starttime="20230309 17:45:35.101" endtime="20230309 17:45:35.103"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source --body /tmp/part1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:35.111" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-6829075632/copyrange/source --body /tmp/part1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:37.025" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:37.025" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:45:35.107" endtime="20230309 17:45:37.025"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:37.028" level="INFO"/>
<status status="PASS" starttime="20230309 17:45:37.026" endtime="20230309 17:45:37.028"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:37.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:37.028" endtime="20230309 17:45:37.029"/>
</kw>
<status status="PASS" starttime="20230309 17:45:35.106" endtime="20230309 17:45:37.030"/>
</kw>
<msg timestamp="20230309 17:45:37.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:45:35.105" endtime="20230309 17:45:37.030"/>
</kw>
<msg timestamp="20230309 17:45:37.030" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:45:35.105" endtime="20230309 17:45:37.031"/>
</kw>
<msg timestamp="20230309 17:45:37.035" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 17:45:35.103" endtime="20230309 17:45:37.035"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:37.044" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-6829075632/copyrange/destination 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:38.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:38.153" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-6829075632/copyrange/destination",
    "UploadId": "7d381bf0-9d72-4984-ac61-cbf39259248e-109994569761620065"
}</msg>
<status status="PASS" starttime="20230309 17:45:37.038" endtime="20230309 17:45:38.153"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:38.155" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-6829075632/copyrange/destination",
    "UploadId": "7d381bf0-9d72-4984-ac61-cbf39259248e-109994569761620065"
}</msg>
<status status="PASS" starttime="20230309 17:45:38.154" endtime="20230309 17:45:38.155"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:38.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:38.155" endtime="20230309 17:45:38.159"/>
</kw>
<status status="PASS" starttime="20230309 17:45:37.037" endtime="20230309 17:45:38.161"/>
</kw>
<msg timestamp="20230309 17:45:38.162" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:45:37.037" endtime="20230309 17:45:38.162"/>
</kw>
<msg timestamp="20230309 17:45:38.164" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-6829075632/copyrange/destination",
    "UploadId": "7d381bf0-9d72-4984-ac61-cbf39259248e-109994569761620065"
}</msg>
<status status="PASS" starttime="20230309 17:45:37.036" endtime="20230309 17:45:38.164"/>
</kw>
<msg timestamp="20230309 17:45:38.167" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-6829075632/copyrange/destination",
    "UploadId": "7d381bf0-9d72-4984-ac61-cbf39259248e-109994569761620065"
}</msg>
<status status="PASS" starttime="20230309 17:45:37.035" endtime="20230309 17:45:38.167"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:38.181" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-6829075632/copyrange/destination",
    "UploadId": "7d381bf0-9d72-4984-ac61-cbf39259248e-109994569761620065"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:38.246" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:38.246" level="INFO">${output} = 7d381bf0-9d72-4984-ac61-cbf39259248e-109994569761620065</msg>
<status status="PASS" starttime="20230309 17:45:38.170" endtime="20230309 17:45:38.246"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:38.249" level="INFO">7d381bf0-9d72-4984-ac61-cbf39259248e-109994569761620065</msg>
<status status="PASS" starttime="20230309 17:45:38.248" endtime="20230309 17:45:38.249"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:38.250" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:38.249" endtime="20230309 17:45:38.250"/>
</kw>
<msg timestamp="20230309 17:45:38.251" level="INFO">${uploadID} = 7d381bf0-9d72-4984-ac61-cbf39259248e-109994569761620065</msg>
<status status="PASS" starttime="20230309 17:45:38.168" endtime="20230309 17:45:38.251"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:45:38.252" endtime="20230309 17:45:38.253"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:45:38.253" endtime="20230309 17:45:38.254"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:38.261" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-6829075632/copyrange/source 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:39.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:39.218" level="INFO">${output} = {
    "LastModified": "Thu, 09 Mar 2023 17:45:36 GMT",
    "ContentLength": 10485760,
    "ETag": "2023-03-09T17:45:36.803Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
...</msg>
<status status="PASS" starttime="20230309 17:45:38.258" endtime="20230309 17:45:39.218"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:39.220" level="INFO">{
    "LastModified": "Thu, 09 Mar 2023 17:45:36 GMT",
    "ContentLength": 10485760,
    "ETag": "2023-03-09T17:45:36.803Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Thu, 09 Mar 2023 17:45:39 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230309 17:45:39.219" endtime="20230309 17:45:39.220"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:39.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:39.220" endtime="20230309 17:45:39.221"/>
</kw>
<status status="PASS" starttime="20230309 17:45:38.257" endtime="20230309 17:45:39.221"/>
</kw>
<msg timestamp="20230309 17:45:39.223" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:45:38.256" endtime="20230309 17:45:39.223"/>
</kw>
<msg timestamp="20230309 17:45:39.224" level="INFO">${output} = {
    "LastModified": "Thu, 09 Mar 2023 17:45:36 GMT",
    "ContentLength": 10485760,
    "ETag": "2023-03-09T17:45:36.803Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
...</msg>
<status status="PASS" starttime="20230309 17:45:38.255" endtime="20230309 17:45:39.224"/>
</kw>
<msg timestamp="20230309 17:45:39.225" level="INFO">${result} = {
    "LastModified": "Thu, 09 Mar 2023 17:45:36 GMT",
    "ContentLength": 10485760,
    "ETag": "2023-03-09T17:45:36.803Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
...</msg>
<status status="PASS" starttime="20230309 17:45:38.254" endtime="20230309 17:45:39.225"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${lastModified}</var>
<arg>echo '${result}' | jq -r '.LastModified'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:39.231" level="INFO">Running command 'echo '{
    "LastModified": "Thu, 09 Mar 2023 17:45:36 GMT",
    "ContentLength": 10485760,
    "ETag": "2023-03-09T17:45:36.803Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Thu, 09 Mar 2023 17:45:39 GMT",
    "Metadata": {}
}' | jq -r '.LastModified' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:39.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:39.297" level="INFO">${output} = Thu, 09 Mar 2023 17:45:36 GMT</msg>
<status status="PASS" starttime="20230309 17:45:39.226" endtime="20230309 17:45:39.297"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:39.300" level="INFO">Thu, 09 Mar 2023 17:45:36 GMT</msg>
<status status="PASS" starttime="20230309 17:45:39.298" endtime="20230309 17:45:39.300"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:39.302" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:39.300" endtime="20230309 17:45:39.302"/>
</kw>
<msg timestamp="20230309 17:45:39.303" level="INFO">${lastModified} = Thu, 09 Mar 2023 17:45:36 GMT</msg>
<status status="PASS" starttime="20230309 17:45:39.225" endtime="20230309 17:45:39.303"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${LastModified}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:45:39.303" endtime="20230309 17:45:39.304"/>
</kw>
<kw name="Convert Date" library="DateTime">
<var>${lmDate}</var>
<arg>${lastModified}</arg>
<arg>date_format=%a, %d %b %Y %H:%M:%S %Z</arg>
<doc>Converts between supported `date formats`.</doc>
<msg timestamp="20230309 17:45:39.311" level="INFO">${lmDate} = 2023-03-09 17:45:36.000</msg>
<status status="PASS" starttime="20230309 17:45:39.304" endtime="20230309 17:45:39.311"/>
</kw>
<kw name="Add Time To Date" library="DateTime">
<var>${afterCreate}</var>
<arg>${lmDate}</arg>
<arg>3 seconds</arg>
<doc>Adds time to date and returns the resulting date.</doc>
<msg timestamp="20230309 17:45:39.313" level="INFO">${afterCreate} = 2023-03-09 17:45:39.000</msg>
<status status="PASS" starttime="20230309 17:45:39.312" endtime="20230309 17:45:39.313"/>
</kw>
<kw name="Wait Til Date Past">
<arg>${afterCreate}</arg>
<kw name="Get Current Date" library="DateTime">
<var>${latestDate}</var>
<arg>UTC</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20230309 17:45:39.318" level="INFO">${latestDate} = 2023-03-09 17:45:39.318</msg>
<status status="PASS" starttime="20230309 17:45:39.315" endtime="20230309 17:45:39.319"/>
</kw>
<kw name="Subtract Date From Date" library="DateTime">
<var>${sleepSeconds}</var>
<arg>${date}</arg>
<arg>${latestDate}</arg>
<doc>Subtracts date from another date and returns time between.</doc>
<msg timestamp="20230309 17:45:39.320" level="INFO">${sleepSeconds} = -0.318</msg>
<status status="PASS" starttime="20230309 17:45:39.319" endtime="20230309 17:45:39.320"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${sleepSeconds} &gt; 0</arg>
<arg>Sleep</arg>
<arg>${sleepSeconds}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:45:39.320" endtime="20230309 17:45:39.321"/>
</kw>
<status status="PASS" starttime="20230309 17:45:39.314" endtime="20230309 17:45:39.321"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '${afterCreate}'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:39.328" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket encrypted --key ozone-test-6829075632/copyrange/destination --upload-id 7d381bf0-9d72-4984-ac61-cbf39259248e-109994569761620065 --part-number 1 --copy-source encrypted/ozone-test-6829075632/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '2023-03-09 17:45:39.000' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:40.400" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:45:40.400" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20230309 17:45:39.325" endtime="20230309 17:45:40.400"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:40.403" level="INFO">
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20230309 17:45:40.402" endtime="20230309 17:45:40.404"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:40.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:40.404" endtime="20230309 17:45:40.406"/>
</kw>
<msg timestamp="20230309 17:45:40.406" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20230309 17:45:39.323" endtime="20230309 17:45:40.407"/>
</kw>
<msg timestamp="20230309 17:45:40.407" level="INFO">${result} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20230309 17:45:39.321" endtime="20230309 17:45:40.407"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PreconditionFailed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:45:40.407" endtime="20230309 17:45:40.408"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '${beforeCreate}'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:40.413" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket encrypted --key ozone-test-6829075632/copyrange/destination --upload-id 7d381bf0-9d72-4984-ac61-cbf39259248e-109994569761620065 --part-number 2 --copy-source encrypted/ozone-test-6829075632/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '2023-03-08 17:45:35.088' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:41.391" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:45:41.391" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20230309 17:45:40.410" endtime="20230309 17:45:41.391"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:41.393" level="INFO">
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20230309 17:45:41.392" endtime="20230309 17:45:41.393"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:41.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:41.393" endtime="20230309 17:45:41.394"/>
</kw>
<msg timestamp="20230309 17:45:41.395" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20230309 17:45:40.410" endtime="20230309 17:45:41.395"/>
</kw>
<msg timestamp="20230309 17:45:41.395" level="INFO">${result} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20230309 17:45:40.408" endtime="20230309 17:45:41.395"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PreconditionFailed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:45:41.396" endtime="20230309 17:45:41.396"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '${beforeCreate}'</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:41.404" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket encrypted --key ozone-test-6829075632/copyrange/destination --upload-id 7d381bf0-9d72-4984-ac61-cbf39259248e-109994569761620065 --part-number 1 --copy-source encrypted/ozone-test-6829075632/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '2023-03-08 17:45:35.088' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:43.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:43.177" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-6829075632/copyrange/destination-7d381bf0-9d72-4984-ac61-cbf39259248e-109994569761620065-1",
        "LastModified": "2023-03-09T17...</msg>
<status status="PASS" starttime="20230309 17:45:41.399" endtime="20230309 17:45:43.177"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:43.178" level="INFO">{
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-6829075632/copyrange/destination-7d381bf0-9d72-4984-ac61-cbf39259248e-109994569761620065-1",
        "LastModified": "2023-03-09T17:45:43.027Z"
    }
}</msg>
<status status="PASS" starttime="20230309 17:45:43.177" endtime="20230309 17:45:43.179"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:43.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:43.179" endtime="20230309 17:45:43.183"/>
</kw>
<msg timestamp="20230309 17:45:43.185" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-6829075632/copyrange/destination-7d381bf0-9d72-4984-ac61-cbf39259248e-109994569761620065-1",
        "LastModified": "2023-03-09T17...</msg>
<status status="PASS" starttime="20230309 17:45:41.398" endtime="20230309 17:45:43.185"/>
</kw>
<msg timestamp="20230309 17:45:43.186" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-6829075632/copyrange/destination-7d381bf0-9d72-4984-ac61-cbf39259248e-109994569761620065-1",
        "LastModified": "2023-03-09T17...</msg>
<status status="PASS" starttime="20230309 17:45:41.396" endtime="20230309 17:45:43.187"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:45:43.188" endtime="20230309 17:45:43.190"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:45:43.190" endtime="20230309 17:45:43.191"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:43.202" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-6829075632/copyrange/destination-7d381bf0-9d72-4984-ac61-cbf39259248e-109994569761620065-1",
        "LastModified": "2023-03-09T17:45:43.027Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:43.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:43.305" level="INFO">${output} = /s3v/encrypted/ozone-test-6829075632/copyrange/destination-7d381bf0-9d72-4984-ac61-cbf39259248e-109994569761620065-1</msg>
<status status="PASS" starttime="20230309 17:45:43.194" endtime="20230309 17:45:43.305"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:43.307" level="INFO">/s3v/encrypted/ozone-test-6829075632/copyrange/destination-7d381bf0-9d72-4984-ac61-cbf39259248e-109994569761620065-1</msg>
<status status="PASS" starttime="20230309 17:45:43.306" endtime="20230309 17:45:43.308"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:43.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:43.308" endtime="20230309 17:45:43.309"/>
</kw>
<msg timestamp="20230309 17:45:43.310" level="INFO">${eTag1} = /s3v/encrypted/ozone-test-6829075632/copyrange/destination-7d381bf0-9d72-4984-ac61-cbf39259248e-109994569761620065-1</msg>
<status status="PASS" starttime="20230309 17:45:43.191" endtime="20230309 17:45:43.310"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '${afterCreate}'</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:43.318" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket encrypted --key ozone-test-6829075632/copyrange/destination --upload-id 7d381bf0-9d72-4984-ac61-cbf39259248e-109994569761620065 --part-number 2 --copy-source encrypted/ozone-test-6829075632/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '2023-03-09 17:45:39.000' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:44.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:44.357" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-6829075632/copyrange/destination-7d381bf0-9d72-4984-ac61-cbf39259248e-109994569761620065-2",
        "LastModified": "2023-03-09T17...</msg>
<status status="PASS" starttime="20230309 17:45:43.314" endtime="20230309 17:45:44.357"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:44.358" level="INFO">{
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-6829075632/copyrange/destination-7d381bf0-9d72-4984-ac61-cbf39259248e-109994569761620065-2",
        "LastModified": "2023-03-09T17:45:44.258Z"
    }
}</msg>
<status status="PASS" starttime="20230309 17:45:44.357" endtime="20230309 17:45:44.358"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:44.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:44.358" endtime="20230309 17:45:44.360"/>
</kw>
<msg timestamp="20230309 17:45:44.361" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-6829075632/copyrange/destination-7d381bf0-9d72-4984-ac61-cbf39259248e-109994569761620065-2",
        "LastModified": "2023-03-09T17...</msg>
<status status="PASS" starttime="20230309 17:45:43.313" endtime="20230309 17:45:44.361"/>
</kw>
<msg timestamp="20230309 17:45:44.361" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-6829075632/copyrange/destination-7d381bf0-9d72-4984-ac61-cbf39259248e-109994569761620065-2",
        "LastModified": "2023-03-09T17...</msg>
<status status="PASS" starttime="20230309 17:45:43.310" endtime="20230309 17:45:44.361"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:45:44.361" endtime="20230309 17:45:44.362"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:45:44.362" endtime="20230309 17:45:44.363"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:44.371" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-6829075632/copyrange/destination-7d381bf0-9d72-4984-ac61-cbf39259248e-109994569761620065-2",
        "LastModified": "2023-03-09T17:45:44.258Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:44.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:44.437" level="INFO">${output} = /s3v/encrypted/ozone-test-6829075632/copyrange/destination-7d381bf0-9d72-4984-ac61-cbf39259248e-109994569761620065-2</msg>
<status status="PASS" starttime="20230309 17:45:44.364" endtime="20230309 17:45:44.437"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:44.440" level="INFO">/s3v/encrypted/ozone-test-6829075632/copyrange/destination-7d381bf0-9d72-4984-ac61-cbf39259248e-109994569761620065-2</msg>
<status status="PASS" starttime="20230309 17:45:44.438" endtime="20230309 17:45:44.441"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:44.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:44.441" endtime="20230309 17:45:44.442"/>
</kw>
<msg timestamp="20230309 17:45:44.442" level="INFO">${eTag2} = /s3v/encrypted/ozone-test-6829075632/copyrange/destination-7d381bf0-9d72-4984-ac61-cbf39259248e-109994569761620065-2</msg>
<status status="PASS" starttime="20230309 17:45:44.363" endtime="20230309 17:45:44.442"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '${tomorrow}'</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:44.451" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket encrypted --key ozone-test-6829075632/copyrange/destination --upload-id 7d381bf0-9d72-4984-ac61-cbf39259248e-109994569761620065 --part-number 1 --copy-source encrypted/ozone-test-6829075632/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '2023-03-10 17:45:35.088' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:46.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:46.285" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-6829075632/copyrange/destination-7d381bf0-9d72-4984-ac61-cbf39259248e-109994569761620065-1",
        "LastModified": "2023-03-09T17...</msg>
<status status="PASS" starttime="20230309 17:45:44.447" endtime="20230309 17:45:46.285"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:46.291" level="INFO">{
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-6829075632/copyrange/destination-7d381bf0-9d72-4984-ac61-cbf39259248e-109994569761620065-1",
        "LastModified": "2023-03-09T17:45:46.119Z"
    }
}</msg>
<status status="PASS" starttime="20230309 17:45:46.286" endtime="20230309 17:45:46.291"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:46.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:46.291" endtime="20230309 17:45:46.293"/>
</kw>
<msg timestamp="20230309 17:45:46.293" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-6829075632/copyrange/destination-7d381bf0-9d72-4984-ac61-cbf39259248e-109994569761620065-1",
        "LastModified": "2023-03-09T17...</msg>
<status status="PASS" starttime="20230309 17:45:44.445" endtime="20230309 17:45:46.293"/>
</kw>
<msg timestamp="20230309 17:45:46.294" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-6829075632/copyrange/destination-7d381bf0-9d72-4984-ac61-cbf39259248e-109994569761620065-1",
        "LastModified": "2023-03-09T17...</msg>
<status status="PASS" starttime="20230309 17:45:44.443" endtime="20230309 17:45:46.294"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:45:46.294" endtime="20230309 17:45:46.295"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:45:46.296" endtime="20230309 17:45:46.296"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:46.301" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-6829075632/copyrange/destination-7d381bf0-9d72-4984-ac61-cbf39259248e-109994569761620065-1",
        "LastModified": "2023-03-09T17:45:46.119Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:46.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:46.365" level="INFO">${output} = /s3v/encrypted/ozone-test-6829075632/copyrange/destination-7d381bf0-9d72-4984-ac61-cbf39259248e-109994569761620065-1</msg>
<status status="PASS" starttime="20230309 17:45:46.298" endtime="20230309 17:45:46.365"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:46.367" level="INFO">/s3v/encrypted/ozone-test-6829075632/copyrange/destination-7d381bf0-9d72-4984-ac61-cbf39259248e-109994569761620065-1</msg>
<status status="PASS" starttime="20230309 17:45:46.366" endtime="20230309 17:45:46.368"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:46.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:46.368" endtime="20230309 17:45:46.369"/>
</kw>
<msg timestamp="20230309 17:45:46.370" level="INFO">${eTag1} = /s3v/encrypted/ozone-test-6829075632/copyrange/destination-7d381bf0-9d72-4984-ac61-cbf39259248e-109994569761620065-1</msg>
<status status="PASS" starttime="20230309 17:45:46.297" endtime="20230309 17:45:46.370"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:46.380" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 7d381bf0-9d72-4984-ac61-cbf39259248e-109994569761620065 --bucket encrypted --key ozone-test-6829075632/copyrange/destination --multipart-upload 'Parts=[{ETag=/s3v/encrypted/ozone-test-6829075632/copyrange/destination-7d381bf0-9d72-4984-ac61-cbf39259248e-109994569761620065-1,PartNumber=1},{ETag=/s3v/encrypted/ozone-test-6829075632/copyrange/destination-7d381bf0-9d72-4984-ac61-cbf39259248e-109994569761620065-2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:47.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:47.311" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-6829075632/copyrange/destination",
    "ETag": "a0deb4aec26750ea760c4afdba8535c8597532a8c4d0609d4d376d261f138e6b"
}</msg>
<status status="PASS" starttime="20230309 17:45:46.375" endtime="20230309 17:45:47.311"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:47.313" level="INFO">{
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-6829075632/copyrange/destination",
    "ETag": "a0deb4aec26750ea760c4afdba8535c8597532a8c4d0609d4d376d261f138e6b"
}</msg>
<status status="PASS" starttime="20230309 17:45:47.312" endtime="20230309 17:45:47.313"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:47.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:47.313" endtime="20230309 17:45:47.314"/>
</kw>
<status status="PASS" starttime="20230309 17:45:46.374" endtime="20230309 17:45:47.315"/>
</kw>
<msg timestamp="20230309 17:45:47.315" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:45:46.373" endtime="20230309 17:45:47.316"/>
</kw>
<msg timestamp="20230309 17:45:47.316" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-6829075632/copyrange/destination",
    "ETag": "a0deb4aec26750ea760c4afdba8535c8597532a8c4d0609d4d376d261f138e6b"
}</msg>
<status status="PASS" starttime="20230309 17:45:46.372" endtime="20230309 17:45:47.316"/>
</kw>
<status status="PASS" starttime="20230309 17:45:46.371" endtime="20230309 17:45:47.317"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination /tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:47.325" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-6829075632/copyrange/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:49.271" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:49.271" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:45:47 GMT",
    "ContentLength": 10485760,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "E...</msg>
<status status="PASS" starttime="20230309 17:45:47.321" endtime="20230309 17:45:49.271"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:49.273" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:45:47 GMT",
    "ContentLength": 10485760,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 09 Mar 2023 17:45:48 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230309 17:45:49.272" endtime="20230309 17:45:49.274"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:49.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:49.274" endtime="20230309 17:45:49.275"/>
</kw>
<status status="PASS" starttime="20230309 17:45:47.320" endtime="20230309 17:45:49.275"/>
</kw>
<msg timestamp="20230309 17:45:49.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:45:47.320" endtime="20230309 17:45:49.276"/>
</kw>
<msg timestamp="20230309 17:45:49.276" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:45:47 GMT",
    "ContentLength": 10485760,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "E...</msg>
<status status="PASS" starttime="20230309 17:45:47.319" endtime="20230309 17:45:49.277"/>
</kw>
<status status="PASS" starttime="20230309 17:45:47.317" endtime="20230309 17:45:49.277"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:49.284" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:49.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:49.318" level="INFO">${output} = c4cad709462f0ebfce2216141b50eb53</msg>
<status status="PASS" starttime="20230309 17:45:49.281" endtime="20230309 17:45:49.318"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:49.321" level="INFO">c4cad709462f0ebfce2216141b50eb53</msg>
<status status="PASS" starttime="20230309 17:45:49.319" endtime="20230309 17:45:49.321"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:49.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:49.321" endtime="20230309 17:45:49.322"/>
</kw>
<status status="PASS" starttime="20230309 17:45:49.280" endtime="20230309 17:45:49.322"/>
</kw>
<msg timestamp="20230309 17:45:49.322" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:45:49.279" endtime="20230309 17:45:49.323"/>
</kw>
<msg timestamp="20230309 17:45:49.324" level="INFO">${checksumbefore} = c4cad709462f0ebfce2216141b50eb53</msg>
<status status="PASS" starttime="20230309 17:45:49.278" endtime="20230309 17:45:49.324"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:49.332" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:49.369" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:49.369" level="INFO">${output} = c4cad709462f0ebfce2216141b50eb53</msg>
<status status="PASS" starttime="20230309 17:45:49.326" endtime="20230309 17:45:49.369"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:49.371" level="INFO">c4cad709462f0ebfce2216141b50eb53</msg>
<status status="PASS" starttime="20230309 17:45:49.370" endtime="20230309 17:45:49.371"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:49.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:49.371" endtime="20230309 17:45:49.372"/>
</kw>
<status status="PASS" starttime="20230309 17:45:49.325" endtime="20230309 17:45:49.373"/>
</kw>
<msg timestamp="20230309 17:45:49.373" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:45:49.325" endtime="20230309 17:45:49.374"/>
</kw>
<msg timestamp="20230309 17:45:49.374" level="INFO">${checksumafter} = c4cad709462f0ebfce2216141b50eb53</msg>
<status status="PASS" starttime="20230309 17:45:49.324" endtime="20230309 17:45:49.374"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 17:45:49.374" endtime="20230309 17:45:49.375"/>
</kw>
<status status="PASS" starttime="20230309 17:45:49.277" endtime="20230309 17:45:49.375"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:45:34.979" endtime="20230309 17:45:49.376"/>
</test>
<test id="s1-s5-s8-t14" name="Test Multipart Upload list" line="355">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:45:49.381" level="INFO">${randStr} = 5714556768</msg>
<status status="PASS" starttime="20230309 17:45:49.381" endtime="20230309 17:45:49.381"/>
</kw>
<msg timestamp="20230309 17:45:49.382" level="INFO">${random} = ozone-test-5714556768</msg>
<status status="PASS" starttime="20230309 17:45:49.380" endtime="20230309 17:45:49.382"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:45:49.382" level="INFO">${PREFIX} = ozone-test-5714556768</msg>
<status status="PASS" starttime="20230309 17:45:49.382" endtime="20230309 17:45:49.383"/>
</kw>
<status status="PASS" starttime="20230309 17:45:49.380" endtime="20230309 17:45:49.383"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/listtest/key1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:49.390" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-5714556768/listtest/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:50.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:50.458" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-5714556768/listtest/key1",
    "UploadId": "8a680315-33bd-4127-984b-ab01377ef05c-109994570563584103"
}</msg>
<status status="PASS" starttime="20230309 17:45:49.386" endtime="20230309 17:45:50.458"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:50.460" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-5714556768/listtest/key1",
    "UploadId": "8a680315-33bd-4127-984b-ab01377ef05c-109994570563584103"
}</msg>
<status status="PASS" starttime="20230309 17:45:50.459" endtime="20230309 17:45:50.460"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:50.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:50.460" endtime="20230309 17:45:50.461"/>
</kw>
<status status="PASS" starttime="20230309 17:45:49.385" endtime="20230309 17:45:50.461"/>
</kw>
<msg timestamp="20230309 17:45:50.461" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:45:49.385" endtime="20230309 17:45:50.464"/>
</kw>
<msg timestamp="20230309 17:45:50.465" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-5714556768/listtest/key1",
    "UploadId": "8a680315-33bd-4127-984b-ab01377ef05c-109994570563584103"
}</msg>
<status status="PASS" starttime="20230309 17:45:49.384" endtime="20230309 17:45:50.465"/>
</kw>
<msg timestamp="20230309 17:45:50.465" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-5714556768/listtest/key1",
    "UploadId": "8a680315-33bd-4127-984b-ab01377ef05c-109994570563584103"
}</msg>
<status status="PASS" starttime="20230309 17:45:49.383" endtime="20230309 17:45:50.466"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID1}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:50.473" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-5714556768/listtest/key1",
    "UploadId": "8a680315-33bd-4127-984b-ab01377ef05c-109994570563584103"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:50.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:50.554" level="INFO">${output} = 8a680315-33bd-4127-984b-ab01377ef05c-109994570563584103</msg>
<status status="PASS" starttime="20230309 17:45:50.467" endtime="20230309 17:45:50.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:50.555" level="INFO">8a680315-33bd-4127-984b-ab01377ef05c-109994570563584103</msg>
<status status="PASS" starttime="20230309 17:45:50.554" endtime="20230309 17:45:50.556"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:50.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:50.556" endtime="20230309 17:45:50.557"/>
</kw>
<msg timestamp="20230309 17:45:50.558" level="INFO">${uploadID1} = 8a680315-33bd-4127-984b-ab01377ef05c-109994570563584103</msg>
<status status="PASS" starttime="20230309 17:45:50.466" endtime="20230309 17:45:50.558"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:45:50.558" endtime="20230309 17:45:50.559"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/listtest/key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:45:50.559" endtime="20230309 17:45:50.560"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:45:50.560" endtime="20230309 17:45:50.561"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/listtest/key2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:50.572" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-5714556768/listtest/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:51.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:51.506" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-5714556768/listtest/key2",
    "UploadId": "56c46d2d-396c-4a9c-968d-1dd8e3d84ba4-109994570638950504"
}</msg>
<status status="PASS" starttime="20230309 17:45:50.568" endtime="20230309 17:45:51.506"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:51.511" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-5714556768/listtest/key2",
    "UploadId": "56c46d2d-396c-4a9c-968d-1dd8e3d84ba4-109994570638950504"
}</msg>
<status status="PASS" starttime="20230309 17:45:51.507" endtime="20230309 17:45:51.511"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:51.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:51.511" endtime="20230309 17:45:51.513"/>
</kw>
<status status="PASS" starttime="20230309 17:45:50.567" endtime="20230309 17:45:51.514"/>
</kw>
<msg timestamp="20230309 17:45:51.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:45:50.567" endtime="20230309 17:45:51.516"/>
</kw>
<msg timestamp="20230309 17:45:51.522" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-5714556768/listtest/key2",
    "UploadId": "56c46d2d-396c-4a9c-968d-1dd8e3d84ba4-109994570638950504"
}</msg>
<status status="PASS" starttime="20230309 17:45:50.564" endtime="20230309 17:45:51.522"/>
</kw>
<msg timestamp="20230309 17:45:51.522" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-5714556768/listtest/key2",
    "UploadId": "56c46d2d-396c-4a9c-968d-1dd8e3d84ba4-109994570638950504"
}</msg>
<status status="PASS" starttime="20230309 17:45:50.562" endtime="20230309 17:45:51.522"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID2}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:51.530" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-5714556768/listtest/key2",
    "UploadId": "56c46d2d-396c-4a9c-968d-1dd8e3d84ba4-109994570638950504"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:51.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:51.599" level="INFO">${output} = 56c46d2d-396c-4a9c-968d-1dd8e3d84ba4-109994570638950504</msg>
<status status="PASS" starttime="20230309 17:45:51.526" endtime="20230309 17:45:51.599"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:51.601" level="INFO">56c46d2d-396c-4a9c-968d-1dd8e3d84ba4-109994570638950504</msg>
<status status="PASS" starttime="20230309 17:45:51.600" endtime="20230309 17:45:51.601"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:51.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:51.601" endtime="20230309 17:45:51.602"/>
</kw>
<msg timestamp="20230309 17:45:51.603" level="INFO">${uploadID2} = 56c46d2d-396c-4a9c-968d-1dd8e3d84ba4-109994570638950504</msg>
<status status="PASS" starttime="20230309 17:45:51.523" endtime="20230309 17:45:51.603"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:45:51.603" endtime="20230309 17:45:51.604"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/listtest/key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:45:51.604" endtime="20230309 17:45:51.605"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:45:51.605" endtime="20230309 17:45:51.606"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-multipart-uploads --bucket ${BUCKET} --prefix ${PREFIX}/listtest</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:51.615" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-multipart-uploads --bucket encrypted --prefix ozone-test-5714556768/listtest 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:52.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:52.761" level="INFO">${output} = {
    "Uploads": [
        {
            "UploadId": "8a680315-33bd-4127-984b-ab01377ef05c-109994570563584103",
            "Key": "ozone-test-5714556768/listtest/key1",
            "Initiated": "2023...</msg>
<status status="PASS" starttime="20230309 17:45:51.610" endtime="20230309 17:45:52.762"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:52.763" level="INFO">{
    "Uploads": [
        {
            "UploadId": "8a680315-33bd-4127-984b-ab01377ef05c-109994570563584103",
            "Key": "ozone-test-5714556768/listtest/key1",
            "Initiated": "2023-03-09T17:45:50.250Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "56c46d2d-396c-4a9c-968d-1dd8e3d84ba4-109994570638950504",
            "Key": "ozone-test-5714556768/listtest/key2",
            "Initiated": "2023-03-09T17:45:51.400Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        }
    ]
}</msg>
<status status="PASS" starttime="20230309 17:45:52.762" endtime="20230309 17:45:52.763"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:52.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:52.764" endtime="20230309 17:45:52.764"/>
</kw>
<status status="PASS" starttime="20230309 17:45:51.609" endtime="20230309 17:45:52.765"/>
</kw>
<msg timestamp="20230309 17:45:52.765" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:45:51.609" endtime="20230309 17:45:52.765"/>
</kw>
<msg timestamp="20230309 17:45:52.766" level="INFO">${output} = {
    "Uploads": [
        {
            "UploadId": "8a680315-33bd-4127-984b-ab01377ef05c-109994570563584103",
            "Key": "ozone-test-5714556768/listtest/key1",
            "Initiated": "2023...</msg>
<status status="PASS" starttime="20230309 17:45:51.607" endtime="20230309 17:45:52.766"/>
</kw>
<msg timestamp="20230309 17:45:52.766" level="INFO">${result} = {
    "Uploads": [
        {
            "UploadId": "8a680315-33bd-4127-984b-ab01377ef05c-109994570563584103",
            "Key": "ozone-test-5714556768/listtest/key1",
            "Initiated": "2023...</msg>
<status status="PASS" starttime="20230309 17:45:51.606" endtime="20230309 17:45:52.766"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${uploadID1}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:45:52.766" endtime="20230309 17:45:52.767"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${uploadID2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:45:52.767" endtime="20230309 17:45:52.768"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${count}</var>
<arg>echo '${result}' | jq -r '.Uploads | length'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:52.785" level="INFO">Running command 'echo '{
    "Uploads": [
        {
            "UploadId": "8a680315-33bd-4127-984b-ab01377ef05c-109994570563584103",
            "Key": "ozone-test-5714556768/listtest/key1",
            "Initiated": "2023-03-09T17:45:50.250Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "56c46d2d-396c-4a9c-968d-1dd8e3d84ba4-109994570638950504",
            "Key": "ozone-test-5714556768/listtest/key2",
            "Initiated": "2023-03-09T17:45:51.400Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        }
    ]
}' | jq -r '.Uploads | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:52.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:52.867" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20230309 17:45:52.771" endtime="20230309 17:45:52.867"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:52.870" level="INFO">2</msg>
<status status="PASS" starttime="20230309 17:45:52.868" endtime="20230309 17:45:52.870"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:52.872" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:52.871" endtime="20230309 17:45:52.872"/>
</kw>
<msg timestamp="20230309 17:45:52.872" level="INFO">${count} = 2</msg>
<status status="PASS" starttime="20230309 17:45:52.769" endtime="20230309 17:45:52.873"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${count}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 17:45:52.873" endtime="20230309 17:45:52.874"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:45:49.378" endtime="20230309 17:45:52.874"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20230309 17:43:49.699" endtime="20230309 17:45:52.876"/>
</suite>
<suite id="s1-s5-s9" name="Objectcopy" source="/opt/hadoop/smoketest/s3/objectcopy.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:45:52.899" level="INFO">${randStr} = 8502002700</msg>
<status status="PASS" starttime="20230309 17:45:52.899" endtime="20230309 17:45:52.899"/>
</kw>
<msg timestamp="20230309 17:45:52.900" level="INFO">${random} = ozone-test-8502002700</msg>
<status status="PASS" starttime="20230309 17:45:52.898" endtime="20230309 17:45:52.900"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:45:52.902" level="INFO">${PREFIX} = ozone-test-8502002700</msg>
<status status="PASS" starttime="20230309 17:45:52.900" endtime="20230309 17:45:52.903"/>
</kw>
<status status="PASS" starttime="20230309 17:45:52.897" endtime="20230309 17:45:52.903"/>
</kw>
<status status="PASS" starttime="20230309 17:45:52.896" endtime="20230309 17:45:52.903"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which aws</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:52.907" level="INFO">Running command 'which aws 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:52.911" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:52.912" level="INFO">${output} = /usr/local/bin/aws</msg>
<status status="PASS" starttime="20230309 17:45:52.904" endtime="20230309 17:45:52.912"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230309 17:45:52.913" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:45:52.912" endtime="20230309 17:45:52.914"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20230309 17:45:52.914" endtime="20230309 17:45:52.914"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230309 17:45:52.914" endtime="20230309 17:45:52.915"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20230309 17:45:52.915" endtime="20230309 17:45:52.915"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230309 17:45:52.915" endtime="20230309 17:45:52.915"/>
</kw>
<status status="PASS" starttime="20230309 17:45:52.903" endtime="20230309 17:45:52.915"/>
</kw>
<status status="PASS" starttime="20230309 17:45:52.903" endtime="20230309 17:45:52.915"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:52.923" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:52.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:52.928" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230309 17:45:52.920" endtime="20230309 17:45:52.928"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:52.930" level="INFO">s3g</msg>
<status status="PASS" starttime="20230309 17:45:52.929" endtime="20230309 17:45:52.930"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:52.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:52.931" endtime="20230309 17:45:52.932"/>
</kw>
<status status="PASS" starttime="20230309 17:45:52.919" endtime="20230309 17:45:52.932"/>
</kw>
<msg timestamp="20230309 17:45:52.933" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:45:52.919" endtime="20230309 17:45:52.934"/>
</kw>
<msg timestamp="20230309 17:45:52.934" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230309 17:45:52.918" endtime="20230309 17:45:52.934"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:45:52.937" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:45:52.935" endtime="20230309 17:45:52.937"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:52.944" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:45:52.991" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:45:52.991" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:45:52.940" endtime="20230309 17:45:52.991"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:45:52.994" level="INFO"/>
<status status="PASS" starttime="20230309 17:45:52.992" endtime="20230309 17:45:52.994"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:45:52.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:45:52.994" endtime="20230309 17:45:52.995"/>
</kw>
<status status="PASS" starttime="20230309 17:45:52.940" endtime="20230309 17:45:52.995"/>
</kw>
<msg timestamp="20230309 17:45:52.995" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:45:52.939" endtime="20230309 17:45:52.996"/>
</kw>
<status status="PASS" starttime="20230309 17:45:52.938" endtime="20230309 17:45:52.996"/>
</kw>
<status status="PASS" starttime="20230309 17:45:52.938" endtime="20230309 17:45:52.996"/>
</kw>
<status status="PASS" starttime="20230309 17:45:52.918" endtime="20230309 17:45:52.997"/>
</kw>
<status status="PASS" starttime="20230309 17:45:52.917" endtime="20230309 17:45:52.997"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:45:53.003" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:46:02.935" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:46:02.935" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:45:52.999" endtime="20230309 17:46:02.935"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:46:02.937" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:46:02.936" endtime="20230309 17:46:02.937"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:46:02.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:46:02.937" endtime="20230309 17:46:02.940"/>
</kw>
<status status="PASS" starttime="20230309 17:45:52.999" endtime="20230309 17:46:02.941"/>
</kw>
<msg timestamp="20230309 17:46:02.942" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:45:52.998" endtime="20230309 17:46:02.943"/>
</kw>
<msg timestamp="20230309 17:46:02.945" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:45:52.998" endtime="20230309 17:46:02.945"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230309 17:46:02.946" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230309 17:46:02.945" endtime="20230309 17:46:02.946"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20230309 17:46:02.948" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230309 17:46:02.946" endtime="20230309 17:46:02.948"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230309 17:46:02.951" level="INFO">${secret} = ['15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670']</msg>
<status status="PASS" starttime="20230309 17:46:02.950" endtime="20230309 17:46:02.951"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:46:02.956" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:46:02.951" endtime="20230309 17:46:02.956"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:46:02.958" level="INFO">${secret} = 15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:46:02.956" endtime="20230309 17:46:02.958"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:46:02.968" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:46:03.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:46:03.852" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:46:02.963" endtime="20230309 17:46:03.852"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:46:03.855" level="INFO"/>
<status status="PASS" starttime="20230309 17:46:03.853" endtime="20230309 17:46:03.855"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:46:03.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:46:03.855" endtime="20230309 17:46:03.857"/>
</kw>
<status status="PASS" starttime="20230309 17:46:02.961" endtime="20230309 17:46:03.858"/>
</kw>
<msg timestamp="20230309 17:46:03.858" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:46:02.960" endtime="20230309 17:46:03.859"/>
</kw>
<status status="PASS" starttime="20230309 17:46:02.958" endtime="20230309 17:46:03.859"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:46:03.867" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:46:04.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:46:04.691" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:46:03.863" endtime="20230309 17:46:04.691"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:46:04.692" level="INFO"/>
<status status="PASS" starttime="20230309 17:46:04.691" endtime="20230309 17:46:04.692"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:46:04.694" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:46:04.693" endtime="20230309 17:46:04.694"/>
</kw>
<status status="PASS" starttime="20230309 17:46:03.861" endtime="20230309 17:46:04.695"/>
</kw>
<msg timestamp="20230309 17:46:04.695" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:46:03.861" endtime="20230309 17:46:04.697"/>
</kw>
<status status="PASS" starttime="20230309 17:46:03.859" endtime="20230309 17:46:04.698"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:46:04.707" level="INFO">Running command 'aws configure set aws_secret_access_key 15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:46:05.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:46:05.618" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:46:04.703" endtime="20230309 17:46:05.618"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:46:05.620" level="INFO"/>
<status status="PASS" starttime="20230309 17:46:05.618" endtime="20230309 17:46:05.620"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:46:05.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:46:05.620" endtime="20230309 17:46:05.621"/>
</kw>
<status status="PASS" starttime="20230309 17:46:04.701" endtime="20230309 17:46:05.621"/>
</kw>
<msg timestamp="20230309 17:46:05.621" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:46:04.700" endtime="20230309 17:46:05.622"/>
</kw>
<status status="PASS" starttime="20230309 17:46:04.698" endtime="20230309 17:46:05.622"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:46:05.628" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:46:06.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:46:06.420" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:46:05.625" endtime="20230309 17:46:06.420"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:46:06.422" level="INFO"/>
<status status="PASS" starttime="20230309 17:46:06.421" endtime="20230309 17:46:06.422"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:46:06.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:46:06.422" endtime="20230309 17:46:06.423"/>
</kw>
<status status="PASS" starttime="20230309 17:46:05.624" endtime="20230309 17:46:06.423"/>
</kw>
<msg timestamp="20230309 17:46:06.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:46:05.624" endtime="20230309 17:46:06.424"/>
</kw>
<status status="PASS" starttime="20230309 17:46:05.623" endtime="20230309 17:46:06.425"/>
</kw>
<status status="PASS" starttime="20230309 17:45:52.997" endtime="20230309 17:46:06.425"/>
</kw>
<status status="PASS" starttime="20230309 17:45:52.997" endtime="20230309 17:46:06.425"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:46:06.425" endtime="20230309 17:46:06.426"/>
</kw>
<status status="PASS" starttime="20230309 17:45:52.917" endtime="20230309 17:46:06.426"/>
</kw>
<status status="PASS" starttime="20230309 17:45:52.916" endtime="20230309 17:46:06.426"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230309 17:46:06.428" endtime="20230309 17:46:06.428"/>
</kw>
<msg timestamp="20230309 17:46:06.428" level="INFO">${BUCKET} = encrypted</msg>
<status status="PASS" starttime="20230309 17:46:06.427" endtime="20230309 17:46:06.428"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:46:06.429" level="INFO">${BUCKET} = encrypted</msg>
<status status="PASS" starttime="20230309 17:46:06.428" endtime="20230309 17:46:06.429"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:46:06.430" endtime="20230309 17:46:06.430"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create encrypted bucket" library="commonawslib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:46:06.432" endtime="20230309 17:46:06.433"/>
</kw>
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/encrypted</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:46:06.437" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:46:19.438" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:46:19.438" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "s3v",
  "name" : "encrypted",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 364928067,
  "usedNamespace" : 17,
  "creationTime" : "2023-03-0...</msg>
<status status="PASS" starttime="20230309 17:46:06.433" endtime="20230309 17:46:19.438"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:46:19.439" endtime="20230309 17:46:19.440"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:46:19.440" endtime="20230309 17:46:19.442"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:46:19.442" endtime="20230309 17:46:19.442"/>
</kw>
<msg timestamp="20230309 17:46:19.443" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20230309 17:46:06.433" endtime="20230309 17:46:19.443"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230309 17:46:19.444" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:46:19.443" endtime="20230309 17:46:19.445"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create -k ${KEY_NAME} o3://${OM_SERVICE_ID}/s3v/encrypted</arg>
<status status="NOT RUN" starttime="20230309 17:46:19.445" endtime="20230309 17:46:19.445"/>
</kw>
<status status="PASS" starttime="20230309 17:46:06.431" endtime="20230309 17:46:19.445"/>
</kw>
<status status="PASS" starttime="20230309 17:46:06.431" endtime="20230309 17:46:19.445"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:46:19.446" endtime="20230309 17:46:19.446"/>
</kw>
<status status="PASS" starttime="20230309 17:45:52.896" endtime="20230309 17:46:19.446"/>
</kw>
<test id="s1-s5-s9-t1" name="Copy Object Happy Scenario" line="37">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${DESTBUCKET}' == 'generated1'</arg>
<arg>Create Dest Bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create Dest Bucket">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:46:19.452" level="INFO">${postfix} = 65213</msg>
<status status="PASS" starttime="20230309 17:46:19.450" endtime="20230309 17:46:19.452"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${DESTBUCKET}</arg>
<arg>destbucket-${postfix}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:46:19.453" level="INFO">${DESTBUCKET} = destbucket-65213</msg>
<status status="PASS" starttime="20230309 17:46:19.452" endtime="20230309 17:46:19.453"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>create-bucket --bucket ${DESTBUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:46:19.462" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket destbucket-65213 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:46:20.489" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:46:20.489" level="INFO">${output} = {
    "Location": "http://s3g:9878/destbucket-65213"
}</msg>
<status status="PASS" starttime="20230309 17:46:19.457" endtime="20230309 17:46:20.489"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:46:20.492" level="INFO">{
    "Location": "http://s3g:9878/destbucket-65213"
}</msg>
<status status="PASS" starttime="20230309 17:46:20.490" endtime="20230309 17:46:20.492"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:46:20.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:46:20.492" endtime="20230309 17:46:20.493"/>
</kw>
<status status="PASS" starttime="20230309 17:46:19.456" endtime="20230309 17:46:20.494"/>
</kw>
<msg timestamp="20230309 17:46:20.494" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:46:19.456" endtime="20230309 17:46:20.495"/>
</kw>
<msg timestamp="20230309 17:46:20.495" level="INFO">${output} = {
    "Location": "http://s3g:9878/destbucket-65213"
}</msg>
<status status="PASS" starttime="20230309 17:46:19.454" endtime="20230309 17:46:20.495"/>
</kw>
<status status="PASS" starttime="20230309 17:46:19.453" endtime="20230309 17:46:20.496"/>
</kw>
<status status="PASS" starttime="20230309 17:46:19.449" endtime="20230309 17:46:20.496"/>
</kw>
<status status="PASS" starttime="20230309 17:46:19.448" endtime="20230309 17:46:20.496"/>
</kw>
<kw name="Execute" library="os">
<arg>date &gt; /tmp/copyfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:46:20.503" level="INFO">Running command 'date &gt; /tmp/copyfile'.</msg>
<msg timestamp="20230309 17:46:20.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:46:20.507" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:46:20.500" endtime="20230309 17:46:20.508"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:46:20.509" level="INFO"/>
<status status="PASS" starttime="20230309 17:46:20.508" endtime="20230309 17:46:20.509"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:46:20.510" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:46:20.509" endtime="20230309 17:46:20.511"/>
</kw>
<status status="PASS" starttime="20230309 17:46:20.499" endtime="20230309 17:46:20.513"/>
</kw>
<msg timestamp="20230309 17:46:20.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:46:20.498" endtime="20230309 17:46:20.514"/>
</kw>
<status status="PASS" starttime="20230309 17:46:20.497" endtime="20230309 17:46:20.515"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyobject/key=value/f1 --body /tmp/copyfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:46:20.526" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-8502002700/copyobject/key=value/f1 --body /tmp/copyfile 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:46:21.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:46:21.883" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:46:20.521" endtime="20230309 17:46:21.883"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:46:21.885" level="INFO"/>
<status status="PASS" starttime="20230309 17:46:21.884" endtime="20230309 17:46:21.885"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:46:21.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:46:21.885" endtime="20230309 17:46:21.886"/>
</kw>
<status status="PASS" starttime="20230309 17:46:20.520" endtime="20230309 17:46:21.887"/>
</kw>
<msg timestamp="20230309 17:46:21.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:46:20.519" endtime="20230309 17:46:21.888"/>
</kw>
<msg timestamp="20230309 17:46:21.888" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:46:20.518" endtime="20230309 17:46:21.888"/>
</kw>
<msg timestamp="20230309 17:46:21.890" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 17:46:20.515" endtime="20230309 17:46:21.890"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/copyobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:46:21.908" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket encrypted --prefix ozone-test-8502002700/copyobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:46:22.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:46:22.906" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-8502002700/copyobject/key=value/f1",
            "LastModified": "2023-03-09T17:46:21.674Z",
            "ETag": "2023-03-09T17:46:21.674Z"...</msg>
<status status="PASS" starttime="20230309 17:46:21.898" endtime="20230309 17:46:22.906"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:46:22.908" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-8502002700/copyobject/key=value/f1",
            "LastModified": "2023-03-09T17:46:21.674Z",
            "ETag": "2023-03-09T17:46:21.674Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20230309 17:46:22.907" endtime="20230309 17:46:22.908"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:46:22.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:46:22.908" endtime="20230309 17:46:22.910"/>
</kw>
<status status="PASS" starttime="20230309 17:46:21.896" endtime="20230309 17:46:22.910"/>
</kw>
<msg timestamp="20230309 17:46:22.910" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:46:21.895" endtime="20230309 17:46:22.911"/>
</kw>
<msg timestamp="20230309 17:46:22.911" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-8502002700/copyobject/key=value/f1",
            "LastModified": "2023-03-09T17:46:21.674Z",
            "ETag": "2023-03-09T17:46:21.674Z"...</msg>
<status status="PASS" starttime="20230309 17:46:21.893" endtime="20230309 17:46:22.912"/>
</kw>
<msg timestamp="20230309 17:46:22.912" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-8502002700/copyobject/key=value/f1",
            "LastModified": "2023-03-09T17:46:21.674Z",
            "ETag": "2023-03-09T17:46:21.674Z"...</msg>
<status status="PASS" starttime="20230309 17:46:21.891" endtime="20230309 17:46:22.912"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:46:22.912" endtime="20230309 17:46:22.913"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:46:22.920" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-65213 --key ozone-test-8502002700/copyobject/key=value/f1 --copy-source encrypted/ozone-test-8502002700/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:46:24.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:46:24.037" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "867f30bf-e062-4071-892a-d4cc9600197d",
        "LastModified": "2023-03-09T17:46:23.915Z"
    }
}</msg>
<status status="PASS" starttime="20230309 17:46:22.917" endtime="20230309 17:46:24.037"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:46:24.038" level="INFO">{
    "CopyObjectResult": {
        "ETag": "867f30bf-e062-4071-892a-d4cc9600197d",
        "LastModified": "2023-03-09T17:46:23.915Z"
    }
}</msg>
<status status="PASS" starttime="20230309 17:46:24.037" endtime="20230309 17:46:24.038"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:46:24.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:46:24.039" endtime="20230309 17:46:24.042"/>
</kw>
<status status="PASS" starttime="20230309 17:46:22.916" endtime="20230309 17:46:24.042"/>
</kw>
<msg timestamp="20230309 17:46:24.043" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:46:22.915" endtime="20230309 17:46:24.045"/>
</kw>
<msg timestamp="20230309 17:46:24.046" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "867f30bf-e062-4071-892a-d4cc9600197d",
        "LastModified": "2023-03-09T17:46:23.915Z"
    }
}</msg>
<status status="PASS" starttime="20230309 17:46:22.915" endtime="20230309 17:46:24.046"/>
</kw>
<msg timestamp="20230309 17:46:24.047" level="INFO">${result} = {
    "CopyObjectResult": {
        "ETag": "867f30bf-e062-4071-892a-d4cc9600197d",
        "LastModified": "2023-03-09T17:46:23.915Z"
    }
}</msg>
<status status="PASS" starttime="20230309 17:46:22.913" endtime="20230309 17:46:24.047"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${DESTBUCKET} --prefix ${PREFIX}/copyobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:46:24.059" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket destbucket-65213 --prefix ozone-test-8502002700/copyobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:46:24.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:46:25.000" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-8502002700/copyobject/key=value/f1",
            "LastModified": "2023-03-09T17:46:23.915Z",
            "ETag": "2023-03-09T17:46:23.915Z"...</msg>
<status status="PASS" starttime="20230309 17:46:24.055" endtime="20230309 17:46:25.000"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:46:25.001" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-8502002700/copyobject/key=value/f1",
            "LastModified": "2023-03-09T17:46:23.915Z",
            "ETag": "2023-03-09T17:46:23.915Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20230309 17:46:25.000" endtime="20230309 17:46:25.001"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:46:25.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:46:25.001" endtime="20230309 17:46:25.003"/>
</kw>
<status status="PASS" starttime="20230309 17:46:24.055" endtime="20230309 17:46:25.003"/>
</kw>
<msg timestamp="20230309 17:46:25.003" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:46:24.051" endtime="20230309 17:46:25.004"/>
</kw>
<msg timestamp="20230309 17:46:25.005" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-8502002700/copyobject/key=value/f1",
            "LastModified": "2023-03-09T17:46:23.915Z",
            "ETag": "2023-03-09T17:46:23.915Z"...</msg>
<status status="PASS" starttime="20230309 17:46:24.049" endtime="20230309 17:46:25.005"/>
</kw>
<msg timestamp="20230309 17:46:25.005" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-8502002700/copyobject/key=value/f1",
            "LastModified": "2023-03-09T17:46:23.915Z",
            "ETag": "2023-03-09T17:46:23.915Z"...</msg>
<status status="PASS" starttime="20230309 17:46:24.048" endtime="20230309 17:46:25.006"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:46:25.006" endtime="20230309 17:46:25.007"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:46:25.015" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-65213 --key ozone-test-8502002700/copyobject/key=value/f1 --copy-source encrypted/ozone-test-8502002700/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:46:26.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:46:26.168" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "5ffda064-6134-4bb9-86f0-e486412bdb79",
        "LastModified": "2023-03-09T17:46:26.002Z"
    }
}</msg>
<status status="PASS" starttime="20230309 17:46:25.012" endtime="20230309 17:46:26.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:46:26.172" level="INFO">{
    "CopyObjectResult": {
        "ETag": "5ffda064-6134-4bb9-86f0-e486412bdb79",
        "LastModified": "2023-03-09T17:46:26.002Z"
    }
}</msg>
<status status="PASS" starttime="20230309 17:46:26.169" endtime="20230309 17:46:26.172"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:46:26.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:46:26.172" endtime="20230309 17:46:26.174"/>
</kw>
<status status="PASS" starttime="20230309 17:46:25.010" endtime="20230309 17:46:26.175"/>
</kw>
<msg timestamp="20230309 17:46:26.175" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:46:25.010" endtime="20230309 17:46:26.175"/>
</kw>
<msg timestamp="20230309 17:46:26.176" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "5ffda064-6134-4bb9-86f0-e486412bdb79",
        "LastModified": "2023-03-09T17:46:26.002Z"
    }
}</msg>
<status status="PASS" starttime="20230309 17:46:25.009" endtime="20230309 17:46:26.176"/>
</kw>
<msg timestamp="20230309 17:46:26.177" level="INFO">${result} = {
    "CopyObjectResult": {
        "ETag": "5ffda064-6134-4bb9-86f0-e486412bdb79",
        "LastModified": "2023-03-09T17:46:26.002Z"
    }
}</msg>
<status status="PASS" starttime="20230309 17:46:25.007" endtime="20230309 17:46:26.177"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${DESTBUCKET} --prefix ${PREFIX}/copyobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:46:26.186" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket destbucket-65213 --prefix ozone-test-8502002700/copyobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:46:27.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:46:27.220" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-8502002700/copyobject/key=value/f1",
            "LastModified": "2023-03-09T17:46:26.002Z",
            "ETag": "2023-03-09T17:46:26.002Z"...</msg>
<status status="PASS" starttime="20230309 17:46:26.182" endtime="20230309 17:46:27.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:46:27.222" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-8502002700/copyobject/key=value/f1",
            "LastModified": "2023-03-09T17:46:26.002Z",
            "ETag": "2023-03-09T17:46:26.002Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20230309 17:46:27.221" endtime="20230309 17:46:27.222"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:46:27.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:46:27.222" endtime="20230309 17:46:27.223"/>
</kw>
<status status="PASS" starttime="20230309 17:46:26.181" endtime="20230309 17:46:27.224"/>
</kw>
<msg timestamp="20230309 17:46:27.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:46:26.181" endtime="20230309 17:46:27.225"/>
</kw>
<msg timestamp="20230309 17:46:27.225" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-8502002700/copyobject/key=value/f1",
            "LastModified": "2023-03-09T17:46:26.002Z",
            "ETag": "2023-03-09T17:46:26.002Z"...</msg>
<status status="PASS" starttime="20230309 17:46:26.179" endtime="20230309 17:46:27.225"/>
</kw>
<msg timestamp="20230309 17:46:27.225" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-8502002700/copyobject/key=value/f1",
            "LastModified": "2023-03-09T17:46:26.002Z",
            "ETag": "2023-03-09T17:46:26.002Z"...</msg>
<status status="PASS" starttime="20230309 17:46:26.177" endtime="20230309 17:46:27.226"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:46:27.226" endtime="20230309 17:46:27.227"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:46:19.447" endtime="20230309 17:46:27.228"/>
</test>
<test id="s1-s5-s9-t2" name="Copy Object Where Bucket is not available" line="52">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket dfdfdfdfdfnonexistent --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:46:27.237" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket dfdfdfdfdfnonexistent --key ozone-test-8502002700/copyobject/key=value/f1 --copy-source encrypted/ozone-test-8502002700/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:46:28.332" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:46:28.332" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20230309 17:46:27.234" endtime="20230309 17:46:28.332"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:46:28.334" level="INFO">
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20230309 17:46:28.333" endtime="20230309 17:46:28.334"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:46:28.335" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:46:28.334" endtime="20230309 17:46:28.335"/>
</kw>
<msg timestamp="20230309 17:46:28.335" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20230309 17:46:27.233" endtime="20230309 17:46:28.336"/>
</kw>
<msg timestamp="20230309 17:46:28.337" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20230309 17:46:27.231" endtime="20230309 17:46:28.337"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:46:28.337" endtime="20230309 17:46:28.337"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source dfdfdfdfdfnonexistent/${PREFIX}/copyobject/key=value/f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:46:28.345" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-65213 --key ozone-test-8502002700/copyobject/key=value/f1 --copy-source dfdfdfdfdfnonexistent/ozone-test-8502002700/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:46:29.408" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:46:29.408" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20230309 17:46:28.340" endtime="20230309 17:46:29.408"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:46:29.410" level="INFO">
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20230309 17:46:29.409" endtime="20230309 17:46:29.411"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:46:29.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:46:29.411" endtime="20230309 17:46:29.412"/>
</kw>
<msg timestamp="20230309 17:46:29.412" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20230309 17:46:28.339" endtime="20230309 17:46:29.412"/>
</kw>
<msg timestamp="20230309 17:46:29.413" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20230309 17:46:28.338" endtime="20230309 17:46:29.413"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:46:29.413" endtime="20230309 17:46:29.414"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:46:27.230" endtime="20230309 17:46:29.414"/>
</test>
<test id="s1-s5-s9-t3" name="Copy Object Where both source and dest are same with change to storageclass" line="58">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --storage-class REDUCED_REDUNDANCY --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${DESTBUCKET}/${PREFIX}/copyobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:46:29.427" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --storage-class REDUCED_REDUNDANCY --bucket destbucket-65213 --key ozone-test-8502002700/copyobject/key=value/f1 --copy-source destbucket-65213/ozone-test-8502002700/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:46:30.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:46:30.478" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "b2bebd27-de78-4cb9-a623-3d09487248ea",
        "LastModified": "2023-03-09T17:46:30.354Z"
    }
}</msg>
<status status="PASS" starttime="20230309 17:46:29.423" endtime="20230309 17:46:30.478"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:46:30.481" level="INFO">{
    "CopyObjectResult": {
        "ETag": "b2bebd27-de78-4cb9-a623-3d09487248ea",
        "LastModified": "2023-03-09T17:46:30.354Z"
    }
}</msg>
<status status="PASS" starttime="20230309 17:46:30.478" endtime="20230309 17:46:30.481"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:46:30.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:46:30.483" endtime="20230309 17:46:30.491"/>
</kw>
<status status="PASS" starttime="20230309 17:46:29.423" endtime="20230309 17:46:30.494"/>
</kw>
<msg timestamp="20230309 17:46:30.494" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:46:29.422" endtime="20230309 17:46:30.496"/>
</kw>
<msg timestamp="20230309 17:46:30.496" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "b2bebd27-de78-4cb9-a623-3d09487248ea",
        "LastModified": "2023-03-09T17:46:30.354Z"
    }
}</msg>
<status status="PASS" starttime="20230309 17:46:29.421" endtime="20230309 17:46:30.496"/>
</kw>
<msg timestamp="20230309 17:46:30.497" level="INFO">${result} = {
    "CopyObjectResult": {
        "ETag": "b2bebd27-de78-4cb9-a623-3d09487248ea",
        "LastModified": "2023-03-09T17:46:30.354Z"
    }
}</msg>
<status status="PASS" starttime="20230309 17:46:29.419" endtime="20230309 17:46:30.497"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:46:30.497" endtime="20230309 17:46:30.498"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:46:29.417" endtime="20230309 17:46:30.499"/>
</test>
<test id="s1-s5-s9-t4" name="Copy Object Where Key not available" line="62">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/nonnonexistentkey</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:46:30.510" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-65213 --key ozone-test-8502002700/copyobject/key=value/f1 --copy-source encrypted/nonnonexistentkey 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:46:31.592" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:46:31.592" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20230309 17:46:30.505" endtime="20230309 17:46:31.592"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:46:31.594" level="INFO">
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20230309 17:46:31.593" endtime="20230309 17:46:31.594"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:46:31.596" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:46:31.594" endtime="20230309 17:46:31.596"/>
</kw>
<msg timestamp="20230309 17:46:31.596" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20230309 17:46:30.503" endtime="20230309 17:46:31.596"/>
</kw>
<msg timestamp="20230309 17:46:31.597" level="INFO">${result} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20230309 17:46:30.502" endtime="20230309 17:46:31.597"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:46:31.597" endtime="20230309 17:46:31.598"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:46:30.501" endtime="20230309 17:46:31.598"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20230309 17:45:52.880" endtime="20230309 17:46:31.600"/>
</suite>
<suite id="s1-s5-s10" name="Objectdelete" source="/opt/hadoop/smoketest/s3/objectdelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:46:31.622" level="INFO">${randStr} = 4102153293</msg>
<status status="PASS" starttime="20230309 17:46:31.621" endtime="20230309 17:46:31.622"/>
</kw>
<msg timestamp="20230309 17:46:31.623" level="INFO">${random} = ozone-test-4102153293</msg>
<status status="PASS" starttime="20230309 17:46:31.620" endtime="20230309 17:46:31.623"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:46:31.625" level="INFO">${PREFIX} = ozone-test-4102153293</msg>
<status status="PASS" starttime="20230309 17:46:31.623" endtime="20230309 17:46:31.625"/>
</kw>
<status status="PASS" starttime="20230309 17:46:31.620" endtime="20230309 17:46:31.625"/>
</kw>
<status status="PASS" starttime="20230309 17:46:31.619" endtime="20230309 17:46:31.625"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which aws</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:46:31.629" level="INFO">Running command 'which aws 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:46:31.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:46:31.633" level="INFO">${output} = /usr/local/bin/aws</msg>
<status status="PASS" starttime="20230309 17:46:31.626" endtime="20230309 17:46:31.633"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230309 17:46:31.634" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:46:31.634" endtime="20230309 17:46:31.635"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20230309 17:46:31.635" endtime="20230309 17:46:31.635"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230309 17:46:31.635" endtime="20230309 17:46:31.636"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20230309 17:46:31.636" endtime="20230309 17:46:31.636"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230309 17:46:31.636" endtime="20230309 17:46:31.636"/>
</kw>
<status status="PASS" starttime="20230309 17:46:31.626" endtime="20230309 17:46:31.636"/>
</kw>
<status status="PASS" starttime="20230309 17:46:31.625" endtime="20230309 17:46:31.636"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:46:31.643" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:46:31.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:46:31.650" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230309 17:46:31.641" endtime="20230309 17:46:31.650"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:46:31.652" level="INFO">s3g</msg>
<status status="PASS" starttime="20230309 17:46:31.651" endtime="20230309 17:46:31.652"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:46:31.653" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:46:31.652" endtime="20230309 17:46:31.654"/>
</kw>
<status status="PASS" starttime="20230309 17:46:31.640" endtime="20230309 17:46:31.654"/>
</kw>
<msg timestamp="20230309 17:46:31.654" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:46:31.640" endtime="20230309 17:46:31.655"/>
</kw>
<msg timestamp="20230309 17:46:31.656" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230309 17:46:31.639" endtime="20230309 17:46:31.656"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:46:31.660" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:46:31.657" endtime="20230309 17:46:31.660"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:46:31.668" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:46:31.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:46:31.758" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:46:31.664" endtime="20230309 17:46:31.758"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:46:31.759" level="INFO"/>
<status status="PASS" starttime="20230309 17:46:31.758" endtime="20230309 17:46:31.759"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:46:31.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:46:31.760" endtime="20230309 17:46:31.760"/>
</kw>
<status status="PASS" starttime="20230309 17:46:31.663" endtime="20230309 17:46:31.761"/>
</kw>
<msg timestamp="20230309 17:46:31.761" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:46:31.662" endtime="20230309 17:46:31.763"/>
</kw>
<status status="PASS" starttime="20230309 17:46:31.661" endtime="20230309 17:46:31.764"/>
</kw>
<status status="PASS" starttime="20230309 17:46:31.660" endtime="20230309 17:46:31.764"/>
</kw>
<status status="PASS" starttime="20230309 17:46:31.639" endtime="20230309 17:46:31.764"/>
</kw>
<status status="PASS" starttime="20230309 17:46:31.638" endtime="20230309 17:46:31.764"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:46:31.775" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:46:42.445" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:46:42.445" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:46:31.770" endtime="20230309 17:46:42.445"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:46:42.447" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:46:42.446" endtime="20230309 17:46:42.447"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:46:42.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:46:42.449" endtime="20230309 17:46:42.450"/>
</kw>
<status status="PASS" starttime="20230309 17:46:31.768" endtime="20230309 17:46:42.451"/>
</kw>
<msg timestamp="20230309 17:46:42.451" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:46:31.768" endtime="20230309 17:46:42.452"/>
</kw>
<msg timestamp="20230309 17:46:42.452" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:46:31.767" endtime="20230309 17:46:42.452"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230309 17:46:42.453" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230309 17:46:42.452" endtime="20230309 17:46:42.453"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20230309 17:46:42.454" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230309 17:46:42.453" endtime="20230309 17:46:42.454"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230309 17:46:42.454" level="INFO">${secret} = ['15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670']</msg>
<status status="PASS" starttime="20230309 17:46:42.454" endtime="20230309 17:46:42.454"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:46:42.456" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:46:42.454" endtime="20230309 17:46:42.456"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:46:42.459" level="INFO">${secret} = 15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:46:42.456" endtime="20230309 17:46:42.459"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:46:42.467" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:46:43.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:46:43.350" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:46:42.463" endtime="20230309 17:46:43.351"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:46:43.352" level="INFO"/>
<status status="PASS" starttime="20230309 17:46:43.351" endtime="20230309 17:46:43.352"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:46:43.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:46:43.353" endtime="20230309 17:46:43.353"/>
</kw>
<status status="PASS" starttime="20230309 17:46:42.461" endtime="20230309 17:46:43.354"/>
</kw>
<msg timestamp="20230309 17:46:43.354" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:46:42.461" endtime="20230309 17:46:43.355"/>
</kw>
<status status="PASS" starttime="20230309 17:46:42.459" endtime="20230309 17:46:43.356"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:46:43.361" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:46:44.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:46:44.180" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:46:43.358" endtime="20230309 17:46:44.180"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:46:44.182" level="INFO"/>
<status status="PASS" starttime="20230309 17:46:44.181" endtime="20230309 17:46:44.182"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:46:44.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:46:44.182" endtime="20230309 17:46:44.183"/>
</kw>
<status status="PASS" starttime="20230309 17:46:43.357" endtime="20230309 17:46:44.183"/>
</kw>
<msg timestamp="20230309 17:46:44.184" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:46:43.357" endtime="20230309 17:46:44.186"/>
</kw>
<status status="PASS" starttime="20230309 17:46:43.356" endtime="20230309 17:46:44.187"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:46:44.194" level="INFO">Running command 'aws configure set aws_secret_access_key 15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:46:45.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:46:45.033" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:46:44.190" endtime="20230309 17:46:45.033"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:46:45.035" level="INFO"/>
<status status="PASS" starttime="20230309 17:46:45.034" endtime="20230309 17:46:45.035"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:46:45.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:46:45.035" endtime="20230309 17:46:45.036"/>
</kw>
<status status="PASS" starttime="20230309 17:46:44.189" endtime="20230309 17:46:45.036"/>
</kw>
<msg timestamp="20230309 17:46:45.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:46:44.189" endtime="20230309 17:46:45.038"/>
</kw>
<status status="PASS" starttime="20230309 17:46:44.187" endtime="20230309 17:46:45.039"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:46:45.046" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:46:45.874" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:46:45.875" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:46:45.042" endtime="20230309 17:46:45.875"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:46:45.876" level="INFO"/>
<status status="PASS" starttime="20230309 17:46:45.875" endtime="20230309 17:46:45.876"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:46:45.877" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:46:45.876" endtime="20230309 17:46:45.877"/>
</kw>
<status status="PASS" starttime="20230309 17:46:45.041" endtime="20230309 17:46:45.878"/>
</kw>
<msg timestamp="20230309 17:46:45.879" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:46:45.041" endtime="20230309 17:46:45.880"/>
</kw>
<status status="PASS" starttime="20230309 17:46:45.039" endtime="20230309 17:46:45.880"/>
</kw>
<status status="PASS" starttime="20230309 17:46:31.766" endtime="20230309 17:46:45.880"/>
</kw>
<status status="PASS" starttime="20230309 17:46:31.765" endtime="20230309 17:46:45.880"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:46:45.884" endtime="20230309 17:46:45.884"/>
</kw>
<status status="PASS" starttime="20230309 17:46:31.638" endtime="20230309 17:46:45.885"/>
</kw>
<status status="PASS" starttime="20230309 17:46:31.637" endtime="20230309 17:46:45.885"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230309 17:46:45.886" endtime="20230309 17:46:45.887"/>
</kw>
<msg timestamp="20230309 17:46:45.887" level="INFO">${BUCKET} = encrypted</msg>
<status status="PASS" starttime="20230309 17:46:45.886" endtime="20230309 17:46:45.887"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:46:45.888" level="INFO">${BUCKET} = encrypted</msg>
<status status="PASS" starttime="20230309 17:46:45.888" endtime="20230309 17:46:45.888"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:46:45.889" endtime="20230309 17:46:45.889"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create encrypted bucket" library="commonawslib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:46:45.890" endtime="20230309 17:46:45.891"/>
</kw>
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/encrypted</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:46:45.897" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:46:58.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:46:58.915" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "s3v",
  "name" : "encrypted",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 364928154,
  "usedNamespace" : 18,
  "creationTime" : "2023-03-0...</msg>
<status status="PASS" starttime="20230309 17:46:45.892" endtime="20230309 17:46:58.917"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:46:58.918" endtime="20230309 17:46:58.920"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:46:58.920" endtime="20230309 17:46:58.921"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:46:58.922" endtime="20230309 17:46:58.923"/>
</kw>
<msg timestamp="20230309 17:46:58.924" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20230309 17:46:45.892" endtime="20230309 17:46:58.924"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230309 17:46:58.924" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:46:58.924" endtime="20230309 17:46:58.925"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create -k ${KEY_NAME} o3://${OM_SERVICE_ID}/s3v/encrypted</arg>
<status status="NOT RUN" starttime="20230309 17:46:58.925" endtime="20230309 17:46:58.926"/>
</kw>
<status status="PASS" starttime="20230309 17:46:45.890" endtime="20230309 17:46:58.926"/>
</kw>
<status status="PASS" starttime="20230309 17:46:45.889" endtime="20230309 17:46:58.926"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:46:58.926" endtime="20230309 17:46:58.927"/>
</kw>
<status status="PASS" starttime="20230309 17:46:31.619" endtime="20230309 17:46:58.928"/>
</kw>
<test id="s1-s5-s10-t1" name="Delete file with s3api" line="30">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:46:58.935" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20230309 17:46:58.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:46:58.940" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:46:58.932" endtime="20230309 17:46:58.940"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:46:58.942" level="INFO"/>
<status status="PASS" starttime="20230309 17:46:58.941" endtime="20230309 17:46:58.942"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:46:58.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:46:58.942" endtime="20230309 17:46:58.943"/>
</kw>
<status status="PASS" starttime="20230309 17:46:58.931" endtime="20230309 17:46:58.944"/>
</kw>
<msg timestamp="20230309 17:46:58.944" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:46:58.930" endtime="20230309 17:46:58.945"/>
</kw>
<status status="PASS" starttime="20230309 17:46:58.930" endtime="20230309 17:46:58.945"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapi/key=value/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:46:58.955" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-4102153293/deletetestapi/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:47:00.505" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:47:00.505" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:46:58.951" endtime="20230309 17:47:00.506"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:47:00.507" level="INFO"/>
<status status="PASS" starttime="20230309 17:47:00.507" endtime="20230309 17:47:00.508"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:47:00.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:47:00.508" endtime="20230309 17:47:00.509"/>
</kw>
<status status="PASS" starttime="20230309 17:46:58.948" endtime="20230309 17:47:00.509"/>
</kw>
<msg timestamp="20230309 17:47:00.510" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:46:58.947" endtime="20230309 17:47:00.510"/>
</kw>
<msg timestamp="20230309 17:47:00.510" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:46:58.947" endtime="20230309 17:47:00.510"/>
</kw>
<msg timestamp="20230309 17:47:00.511" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 17:46:58.945" endtime="20230309 17:47:00.511"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/deletetestapi/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:47:00.519" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket encrypted --prefix ozone-test-4102153293/deletetestapi/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:47:01.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:47:01.625" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-4102153293/deletetestapi/key=value/f1",
            "LastModified": "2023-03-09T17:47:00.391Z",
            "ETag": "2023-03-09T17:47:00.39...</msg>
<status status="PASS" starttime="20230309 17:47:00.515" endtime="20230309 17:47:01.625"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:47:01.626" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-4102153293/deletetestapi/key=value/f1",
            "LastModified": "2023-03-09T17:47:00.391Z",
            "ETag": "2023-03-09T17:47:00.391Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20230309 17:47:01.625" endtime="20230309 17:47:01.626"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:47:01.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:47:01.626" endtime="20230309 17:47:01.627"/>
</kw>
<status status="PASS" starttime="20230309 17:47:00.514" endtime="20230309 17:47:01.628"/>
</kw>
<msg timestamp="20230309 17:47:01.628" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:47:00.513" endtime="20230309 17:47:01.629"/>
</kw>
<msg timestamp="20230309 17:47:01.629" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-4102153293/deletetestapi/key=value/f1",
            "LastModified": "2023-03-09T17:47:00.391Z",
            "ETag": "2023-03-09T17:47:00.39...</msg>
<status status="PASS" starttime="20230309 17:47:00.513" endtime="20230309 17:47:01.629"/>
</kw>
<msg timestamp="20230309 17:47:01.631" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-4102153293/deletetestapi/key=value/f1",
            "LastModified": "2023-03-09T17:47:00.391Z",
            "ETag": "2023-03-09T17:47:00.39...</msg>
<status status="PASS" starttime="20230309 17:47:00.511" endtime="20230309 17:47:01.631"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>"${PREFIX}/deletetestapi/key=value/f1"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:47:01.631" endtime="20230309 17:47:01.632"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapi/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:47:01.639" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket encrypted --key ozone-test-4102153293/deletetestapi/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:47:02.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:47:02.650" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:47:01.636" endtime="20230309 17:47:02.650"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:47:02.652" level="INFO"/>
<status status="PASS" starttime="20230309 17:47:02.651" endtime="20230309 17:47:02.652"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:47:02.653" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:47:02.653" endtime="20230309 17:47:02.655"/>
</kw>
<status status="PASS" starttime="20230309 17:47:01.635" endtime="20230309 17:47:02.656"/>
</kw>
<msg timestamp="20230309 17:47:02.656" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:47:01.635" endtime="20230309 17:47:02.657"/>
</kw>
<msg timestamp="20230309 17:47:02.657" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:47:01.633" endtime="20230309 17:47:02.658"/>
</kw>
<msg timestamp="20230309 17:47:02.659" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 17:47:01.632" endtime="20230309 17:47:02.659"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/deletetestapi/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:47:02.670" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket encrypted --prefix ozone-test-4102153293/deletetestapi/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:47:03.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:47:03.661" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:47:02.666" endtime="20230309 17:47:03.661"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:47:03.663" level="INFO"/>
<status status="PASS" starttime="20230309 17:47:03.662" endtime="20230309 17:47:03.663"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:47:03.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:47:03.664" endtime="20230309 17:47:03.665"/>
</kw>
<status status="PASS" starttime="20230309 17:47:02.664" endtime="20230309 17:47:03.666"/>
</kw>
<msg timestamp="20230309 17:47:03.666" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:47:02.661" endtime="20230309 17:47:03.667"/>
</kw>
<msg timestamp="20230309 17:47:03.667" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:47:02.660" endtime="20230309 17:47:03.667"/>
</kw>
<msg timestamp="20230309 17:47:03.668" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 17:47:02.659" endtime="20230309 17:47:03.668"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>"${PREFIX}/deletetestapi/key=value/f1"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:47:03.668" endtime="20230309 17:47:03.669"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:46:58.928" endtime="20230309 17:47:03.670"/>
</test>
<test id="s1-s5-s10-t2" name="Delete file with s3api, file doesn't exist" line="39">
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:47:03.678" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://encrypted/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:47:04.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:47:04.755" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-2330862950/
                           PRE ozone-test-2725639707/
             ...</msg>
<status status="PASS" starttime="20230309 17:47:03.675" endtime="20230309 17:47:04.755"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:47:04.763" level="INFO">                           PRE dir1/
                           PRE multipart/
                           PRE ozone-test-2330862950/
                           PRE ozone-test-2725639707/
                           PRE ozone-test-6829075632/
                           PRE ozone-test-7265260871/
                           PRE ozone-test-8502002700/
                           PRE ozone-test-9475121440/
                           PRE specialchars/
2023-03-09 17:40:46       3879 README1.md
2023-03-09 17:40:42       3879 README10.md
2023-03-09 17:40:44   10485761 multiUpload.1.gz
2023-03-09 17:40:46   10485761 multiUpload.2.gz
2023-03-09 17:40:51   20971522 ntezgzmmkl
2023-03-09 17:40:07         29 testfile</msg>
<status status="PASS" starttime="20230309 17:47:04.755" endtime="20230309 17:47:04.763"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:47:04.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:47:04.763" endtime="20230309 17:47:04.765"/>
</kw>
<status status="PASS" starttime="20230309 17:47:03.674" endtime="20230309 17:47:04.766"/>
</kw>
<msg timestamp="20230309 17:47:04.766" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:47:03.674" endtime="20230309 17:47:04.770"/>
</kw>
<msg timestamp="20230309 17:47:04.770" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-2330862950/
                           PRE ozone-test-2725639707/
             ...</msg>
<status status="PASS" starttime="20230309 17:47:03.673" endtime="20230309 17:47:04.770"/>
</kw>
<msg timestamp="20230309 17:47:04.771" level="INFO">${result} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-2330862950/
                           PRE ozone-test-2725639707/
             ...</msg>
<status status="PASS" starttime="20230309 17:47:03.672" endtime="20230309 17:47:04.771"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>thereisnosuchfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:47:04.772" endtime="20230309 17:47:04.773"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key thereisnosuchfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:47:04.781" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket encrypted --key thereisnosuchfile 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:47:06.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:47:06.071" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:47:04.777" endtime="20230309 17:47:06.071"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:47:06.073" level="INFO"/>
<status status="PASS" starttime="20230309 17:47:06.072" endtime="20230309 17:47:06.073"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:47:06.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:47:06.074" endtime="20230309 17:47:06.075"/>
</kw>
<status status="PASS" starttime="20230309 17:47:04.776" endtime="20230309 17:47:06.075"/>
</kw>
<msg timestamp="20230309 17:47:06.075" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:47:04.775" endtime="20230309 17:47:06.077"/>
</kw>
<msg timestamp="20230309 17:47:06.077" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:47:04.774" endtime="20230309 17:47:06.077"/>
</kw>
<msg timestamp="20230309 17:47:06.078" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 17:47:04.773" endtime="20230309 17:47:06.078"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:47:06.086" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://encrypted/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:47:07.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:47:07.194" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-2330862950/
                           PRE ozone-test-2725639707/
             ...</msg>
<status status="PASS" starttime="20230309 17:47:06.081" endtime="20230309 17:47:07.194"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:47:07.195" level="INFO">                           PRE dir1/
                           PRE multipart/
                           PRE ozone-test-2330862950/
                           PRE ozone-test-2725639707/
                           PRE ozone-test-6829075632/
                           PRE ozone-test-7265260871/
                           PRE ozone-test-8502002700/
                           PRE ozone-test-9475121440/
                           PRE specialchars/
2023-03-09 17:40:46       3879 README1.md
2023-03-09 17:40:42       3879 README10.md
2023-03-09 17:40:44   10485761 multiUpload.1.gz
2023-03-09 17:40:46   10485761 multiUpload.2.gz
2023-03-09 17:40:51   20971522 ntezgzmmkl
2023-03-09 17:40:07         29 testfile</msg>
<status status="PASS" starttime="20230309 17:47:07.195" endtime="20230309 17:47:07.196"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:47:07.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:47:07.196" endtime="20230309 17:47:07.197"/>
</kw>
<status status="PASS" starttime="20230309 17:47:06.081" endtime="20230309 17:47:07.197"/>
</kw>
<msg timestamp="20230309 17:47:07.197" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:47:06.080" endtime="20230309 17:47:07.199"/>
</kw>
<msg timestamp="20230309 17:47:07.200" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-2330862950/
                           PRE ozone-test-2725639707/
             ...</msg>
<status status="PASS" starttime="20230309 17:47:06.079" endtime="20230309 17:47:07.200"/>
</kw>
<msg timestamp="20230309 17:47:07.200" level="INFO">${result} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-2330862950/
                           PRE ozone-test-2725639707/
             ...</msg>
<status status="PASS" starttime="20230309 17:47:06.078" endtime="20230309 17:47:07.200"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>thereisnosuchfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:47:07.200" endtime="20230309 17:47:07.201"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:47:03.671" endtime="20230309 17:47:07.202"/>
</test>
<test id="s1-s5-s10-t3" name="Delete dir with s3api" line="46">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:47:07.213" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20230309 17:47:07.217" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:47:07.217" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:47:07.208" endtime="20230309 17:47:07.217"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:47:07.222" level="INFO"/>
<status status="PASS" starttime="20230309 17:47:07.217" endtime="20230309 17:47:07.222"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:47:07.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:47:07.223" endtime="20230309 17:47:07.224"/>
</kw>
<status status="PASS" starttime="20230309 17:47:07.207" endtime="20230309 17:47:07.225"/>
</kw>
<msg timestamp="20230309 17:47:07.225" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:47:07.207" endtime="20230309 17:47:07.225"/>
</kw>
<status status="PASS" starttime="20230309 17:47:07.206" endtime="20230309 17:47:07.226"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/${PREFIX}/deletetestapidir/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:47:07.235" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://encrypted/ozone-test-4102153293/deletetestapidir/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:47:08.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:47:08.415" level="INFO">${output} = Completed 29 Bytes/29 Bytes (174 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/ozone-test-4102153293/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20230309 17:47:07.232" endtime="20230309 17:47:08.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:47:08.417" level="INFO">Completed 29 Bytes/29 Bytes (174 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/ozone-test-4102153293/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20230309 17:47:08.416" endtime="20230309 17:47:08.417"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:47:08.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:47:08.417" endtime="20230309 17:47:08.418"/>
</kw>
<status status="PASS" starttime="20230309 17:47:07.231" endtime="20230309 17:47:08.419"/>
</kw>
<msg timestamp="20230309 17:47:08.419" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:47:07.229" endtime="20230309 17:47:08.420"/>
</kw>
<msg timestamp="20230309 17:47:08.420" level="INFO">${output} = Completed 29 Bytes/29 Bytes (174 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/ozone-test-4102153293/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20230309 17:47:07.228" endtime="20230309 17:47:08.420"/>
</kw>
<msg timestamp="20230309 17:47:08.421" level="INFO">${result} = Completed 29 Bytes/29 Bytes (174 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/ozone-test-4102153293/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20230309 17:47:07.227" endtime="20230309 17:47:08.421"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapidir/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:47:08.429" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://encrypted/ozone-test-4102153293/deletetestapidir/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:47:09.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:47:09.500" level="INFO">${output} = 2023-03-09 17:47:08         29 f1</msg>
<status status="PASS" starttime="20230309 17:47:08.425" endtime="20230309 17:47:09.500"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:47:09.510" level="INFO">2023-03-09 17:47:08         29 f1</msg>
<status status="PASS" starttime="20230309 17:47:09.502" endtime="20230309 17:47:09.510"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:47:09.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:47:09.510" endtime="20230309 17:47:09.514"/>
</kw>
<status status="PASS" starttime="20230309 17:47:08.424" endtime="20230309 17:47:09.516"/>
</kw>
<msg timestamp="20230309 17:47:09.516" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:47:08.424" endtime="20230309 17:47:09.517"/>
</kw>
<msg timestamp="20230309 17:47:09.519" level="INFO">${output} = 2023-03-09 17:47:08         29 f1</msg>
<status status="PASS" starttime="20230309 17:47:08.423" endtime="20230309 17:47:09.519"/>
</kw>
<msg timestamp="20230309 17:47:09.519" level="INFO">${result} = 2023-03-09 17:47:08         29 f1</msg>
<status status="PASS" starttime="20230309 17:47:08.421" endtime="20230309 17:47:09.519"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:47:09.522" endtime="20230309 17:47:09.523"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapidir/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:47:09.539" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket encrypted --key ozone-test-4102153293/deletetestapidir/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:47:10.572" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:47:10.572" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:47:09.533" endtime="20230309 17:47:10.572"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:47:10.574" level="INFO"/>
<status status="PASS" starttime="20230309 17:47:10.572" endtime="20230309 17:47:10.575"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:47:10.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:47:10.575" endtime="20230309 17:47:10.577"/>
</kw>
<status status="PASS" starttime="20230309 17:47:09.531" endtime="20230309 17:47:10.578"/>
</kw>
<msg timestamp="20230309 17:47:10.578" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:47:09.528" endtime="20230309 17:47:10.580"/>
</kw>
<msg timestamp="20230309 17:47:10.581" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:47:09.526" endtime="20230309 17:47:10.581"/>
</kw>
<msg timestamp="20230309 17:47:10.581" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 17:47:09.524" endtime="20230309 17:47:10.581"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapidir/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:47:10.594" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://encrypted/ozone-test-4102153293/deletetestapidir/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:47:11.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:47:11.706" level="INFO">${output} = 2023-03-09 17:47:08         29 f1</msg>
<status status="PASS" starttime="20230309 17:47:10.589" endtime="20230309 17:47:11.706"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:47:11.707" level="INFO">2023-03-09 17:47:08         29 f1</msg>
<status status="PASS" starttime="20230309 17:47:11.707" endtime="20230309 17:47:11.708"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:47:11.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:47:11.708" endtime="20230309 17:47:11.708"/>
</kw>
<status status="PASS" starttime="20230309 17:47:10.586" endtime="20230309 17:47:11.709"/>
</kw>
<msg timestamp="20230309 17:47:11.709" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:47:10.585" endtime="20230309 17:47:11.710"/>
</kw>
<msg timestamp="20230309 17:47:11.710" level="INFO">${output} = 2023-03-09 17:47:08         29 f1</msg>
<status status="PASS" starttime="20230309 17:47:10.584" endtime="20230309 17:47:11.710"/>
</kw>
<msg timestamp="20230309 17:47:11.710" level="INFO">${result} = 2023-03-09 17:47:08         29 f1</msg>
<status status="PASS" starttime="20230309 17:47:10.582" endtime="20230309 17:47:11.710"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:47:11.711" endtime="20230309 17:47:11.711"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapidir/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:47:11.717" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket encrypted --key ozone-test-4102153293/deletetestapidir/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:47:12.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:47:12.724" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:47:11.714" endtime="20230309 17:47:12.724"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:47:12.727" level="INFO"/>
<status status="PASS" starttime="20230309 17:47:12.725" endtime="20230309 17:47:12.727"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:47:12.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:47:12.727" endtime="20230309 17:47:12.728"/>
</kw>
<status status="PASS" starttime="20230309 17:47:11.713" endtime="20230309 17:47:12.728"/>
</kw>
<msg timestamp="20230309 17:47:12.728" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:47:11.713" endtime="20230309 17:47:12.729"/>
</kw>
<msg timestamp="20230309 17:47:12.731" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:47:11.712" endtime="20230309 17:47:12.731"/>
</kw>
<msg timestamp="20230309 17:47:12.731" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 17:47:11.711" endtime="20230309 17:47:12.731"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:47:07.204" endtime="20230309 17:47:12.732"/>
</test>
<test id="s1-s5-s10-t4" name="Delete file with s3api, file doesn't exist, prefix of a real file" line="57">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:47:12.745" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20230309 17:47:12.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:47:12.749" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:47:12.740" endtime="20230309 17:47:12.749"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:47:12.751" level="INFO"/>
<status status="PASS" starttime="20230309 17:47:12.750" endtime="20230309 17:47:12.751"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:47:12.751" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:47:12.751" endtime="20230309 17:47:12.752"/>
</kw>
<status status="PASS" starttime="20230309 17:47:12.739" endtime="20230309 17:47:12.752"/>
</kw>
<msg timestamp="20230309 17:47:12.752" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:47:12.738" endtime="20230309 17:47:12.753"/>
</kw>
<status status="PASS" starttime="20230309 17:47:12.738" endtime="20230309 17:47:12.753"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/${PREFIX}/deletetestapiprefix/key=value/filefile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:47:12.763" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://encrypted/ozone-test-4102153293/deletetestapiprefix/key=value/filefile 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:47:13.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:47:13.951" level="INFO">${output} = Completed 29 Bytes/29 Bytes (211 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/ozone-test-4102153293/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20230309 17:47:12.759" endtime="20230309 17:47:13.951"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:47:13.954" level="INFO">Completed 29 Bytes/29 Bytes (211 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/ozone-test-4102153293/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20230309 17:47:13.952" endtime="20230309 17:47:13.955"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:47:13.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:47:13.955" endtime="20230309 17:47:13.959"/>
</kw>
<status status="PASS" starttime="20230309 17:47:12.757" endtime="20230309 17:47:13.960"/>
</kw>
<msg timestamp="20230309 17:47:13.960" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:47:12.757" endtime="20230309 17:47:13.961"/>
</kw>
<msg timestamp="20230309 17:47:13.964" level="INFO">${output} = Completed 29 Bytes/29 Bytes (211 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/ozone-test-4102153293/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20230309 17:47:12.755" endtime="20230309 17:47:13.964"/>
</kw>
<msg timestamp="20230309 17:47:13.965" level="INFO">${result} = Completed 29 Bytes/29 Bytes (211 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/ozone-test-4102153293/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20230309 17:47:12.754" endtime="20230309 17:47:13.965"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapiprefix/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:47:13.982" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://encrypted/ozone-test-4102153293/deletetestapiprefix/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:47:15.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:47:15.354" level="INFO">${output} = 2023-03-09 17:47:13         29 filefile</msg>
<status status="PASS" starttime="20230309 17:47:13.975" endtime="20230309 17:47:15.354"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:47:15.358" level="INFO">2023-03-09 17:47:13         29 filefile</msg>
<status status="PASS" starttime="20230309 17:47:15.356" endtime="20230309 17:47:15.358"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:47:15.361" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:47:15.358" endtime="20230309 17:47:15.361"/>
</kw>
<status status="PASS" starttime="20230309 17:47:13.974" endtime="20230309 17:47:15.362"/>
</kw>
<msg timestamp="20230309 17:47:15.362" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:47:13.973" endtime="20230309 17:47:15.364"/>
</kw>
<msg timestamp="20230309 17:47:15.364" level="INFO">${output} = 2023-03-09 17:47:13         29 filefile</msg>
<status status="PASS" starttime="20230309 17:47:13.970" endtime="20230309 17:47:15.364"/>
</kw>
<msg timestamp="20230309 17:47:15.365" level="INFO">${result} = 2023-03-09 17:47:13         29 filefile</msg>
<status status="PASS" starttime="20230309 17:47:13.966" endtime="20230309 17:47:15.365"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>filefile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:47:15.366" endtime="20230309 17:47:15.367"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapiprefix/key=value/file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:47:15.382" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket encrypted --key ozone-test-4102153293/deletetestapiprefix/key=value/file 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:47:16.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:47:16.472" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:47:15.375" endtime="20230309 17:47:16.472"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:47:16.474" level="INFO"/>
<status status="PASS" starttime="20230309 17:47:16.473" endtime="20230309 17:47:16.474"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:47:16.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:47:16.474" endtime="20230309 17:47:16.475"/>
</kw>
<status status="PASS" starttime="20230309 17:47:15.373" endtime="20230309 17:47:16.476"/>
</kw>
<msg timestamp="20230309 17:47:16.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:47:15.371" endtime="20230309 17:47:16.477"/>
</kw>
<msg timestamp="20230309 17:47:16.478" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:47:15.369" endtime="20230309 17:47:16.478"/>
</kw>
<msg timestamp="20230309 17:47:16.478" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 17:47:15.368" endtime="20230309 17:47:16.478"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapiprefix/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:47:16.487" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://encrypted/ozone-test-4102153293/deletetestapiprefix/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:47:17.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:47:17.462" level="INFO">${output} = 2023-03-09 17:47:13         29 filefile</msg>
<status status="PASS" starttime="20230309 17:47:16.483" endtime="20230309 17:47:17.462"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:47:17.464" level="INFO">2023-03-09 17:47:13         29 filefile</msg>
<status status="PASS" starttime="20230309 17:47:17.463" endtime="20230309 17:47:17.464"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:47:17.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:47:17.464" endtime="20230309 17:47:17.465"/>
</kw>
<status status="PASS" starttime="20230309 17:47:16.482" endtime="20230309 17:47:17.465"/>
</kw>
<msg timestamp="20230309 17:47:17.465" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:47:16.481" endtime="20230309 17:47:17.466"/>
</kw>
<msg timestamp="20230309 17:47:17.467" level="INFO">${output} = 2023-03-09 17:47:13         29 filefile</msg>
<status status="PASS" starttime="20230309 17:47:16.480" endtime="20230309 17:47:17.467"/>
</kw>
<msg timestamp="20230309 17:47:17.467" level="INFO">${result} = 2023-03-09 17:47:13         29 filefile</msg>
<status status="PASS" starttime="20230309 17:47:16.479" endtime="20230309 17:47:17.467"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>filefile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:47:17.467" endtime="20230309 17:47:17.468"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapiprefix/key=value/filefile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:47:17.476" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket encrypted --key ozone-test-4102153293/deletetestapiprefix/key=value/filefile 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:47:18.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:47:18.514" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:47:17.472" endtime="20230309 17:47:18.514"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:47:18.515" level="INFO"/>
<status status="PASS" starttime="20230309 17:47:18.514" endtime="20230309 17:47:18.516"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:47:18.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:47:18.516" endtime="20230309 17:47:18.517"/>
</kw>
<status status="PASS" starttime="20230309 17:47:17.471" endtime="20230309 17:47:18.518"/>
</kw>
<msg timestamp="20230309 17:47:18.518" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:47:17.470" endtime="20230309 17:47:18.520"/>
</kw>
<msg timestamp="20230309 17:47:18.520" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:47:17.470" endtime="20230309 17:47:18.520"/>
</kw>
<msg timestamp="20230309 17:47:18.521" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 17:47:17.468" endtime="20230309 17:47:18.521"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:47:12.734" endtime="20230309 17:47:18.521"/>
</test>
<test id="s1-s5-s10-t5" name="Delete file with s3api, bucket doesn't exist" line="69">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET}-nosuchbucket --key f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:47:18.532" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket encrypted-nosuchbucket --key f1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:47:19.590" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:47:19.590" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20230309 17:47:18.527" endtime="20230309 17:47:19.590"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:47:19.592" level="INFO">
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20230309 17:47:19.591" endtime="20230309 17:47:19.592"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:47:19.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:47:19.593" endtime="20230309 17:47:19.593"/>
</kw>
<msg timestamp="20230309 17:47:19.594" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20230309 17:47:18.526" endtime="20230309 17:47:19.594"/>
</kw>
<msg timestamp="20230309 17:47:19.595" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20230309 17:47:18.525" endtime="20230309 17:47:19.595"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:47:19.595" endtime="20230309 17:47:19.596"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:47:18.524" endtime="20230309 17:47:19.596"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20230309 17:46:31.603" endtime="20230309 17:47:19.598"/>
</suite>
<suite id="s1-s5-s11" name="Objecthead" source="/opt/hadoop/smoketest/s3/objecthead.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:47:19.623" level="INFO">${randStr} = 0397558187</msg>
<status status="PASS" starttime="20230309 17:47:19.622" endtime="20230309 17:47:19.623"/>
</kw>
<msg timestamp="20230309 17:47:19.623" level="INFO">${random} = ozone-test-0397558187</msg>
<status status="PASS" starttime="20230309 17:47:19.622" endtime="20230309 17:47:19.624"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:47:19.629" level="INFO">${PREFIX} = ozone-test-0397558187</msg>
<status status="PASS" starttime="20230309 17:47:19.624" endtime="20230309 17:47:19.630"/>
</kw>
<status status="PASS" starttime="20230309 17:47:19.621" endtime="20230309 17:47:19.630"/>
</kw>
<status status="PASS" starttime="20230309 17:47:19.621" endtime="20230309 17:47:19.630"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which aws</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:47:19.636" level="INFO">Running command 'which aws 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:47:19.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:47:19.640" level="INFO">${output} = /usr/local/bin/aws</msg>
<status status="PASS" starttime="20230309 17:47:19.632" endtime="20230309 17:47:19.640"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230309 17:47:19.641" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:47:19.640" endtime="20230309 17:47:19.642"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20230309 17:47:19.642" endtime="20230309 17:47:19.642"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230309 17:47:19.643" endtime="20230309 17:47:19.644"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20230309 17:47:19.644" endtime="20230309 17:47:19.644"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230309 17:47:19.644" endtime="20230309 17:47:19.644"/>
</kw>
<status status="PASS" starttime="20230309 17:47:19.632" endtime="20230309 17:47:19.645"/>
</kw>
<status status="PASS" starttime="20230309 17:47:19.631" endtime="20230309 17:47:19.645"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:47:19.659" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:47:19.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:47:19.664" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230309 17:47:19.652" endtime="20230309 17:47:19.664"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:47:19.666" level="INFO">s3g</msg>
<status status="PASS" starttime="20230309 17:47:19.665" endtime="20230309 17:47:19.666"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:47:19.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:47:19.666" endtime="20230309 17:47:19.667"/>
</kw>
<status status="PASS" starttime="20230309 17:47:19.651" endtime="20230309 17:47:19.667"/>
</kw>
<msg timestamp="20230309 17:47:19.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:47:19.651" endtime="20230309 17:47:19.668"/>
</kw>
<msg timestamp="20230309 17:47:19.669" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230309 17:47:19.649" endtime="20230309 17:47:19.669"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:47:19.672" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:47:19.669" endtime="20230309 17:47:19.672"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:47:19.679" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:47:19.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:47:19.731" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:47:19.675" endtime="20230309 17:47:19.731"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:47:19.733" level="INFO"/>
<status status="PASS" starttime="20230309 17:47:19.732" endtime="20230309 17:47:19.733"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:47:19.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:47:19.733" endtime="20230309 17:47:19.735"/>
</kw>
<status status="PASS" starttime="20230309 17:47:19.674" endtime="20230309 17:47:19.735"/>
</kw>
<msg timestamp="20230309 17:47:19.735" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:47:19.674" endtime="20230309 17:47:19.736"/>
</kw>
<status status="PASS" starttime="20230309 17:47:19.673" endtime="20230309 17:47:19.737"/>
</kw>
<status status="PASS" starttime="20230309 17:47:19.672" endtime="20230309 17:47:19.737"/>
</kw>
<status status="PASS" starttime="20230309 17:47:19.647" endtime="20230309 17:47:19.737"/>
</kw>
<status status="PASS" starttime="20230309 17:47:19.647" endtime="20230309 17:47:19.737"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:47:19.749" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:47:29.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:47:29.152" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:47:19.746" endtime="20230309 17:47:29.152"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:47:29.154" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:47:29.152" endtime="20230309 17:47:29.154"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:47:29.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:47:29.154" endtime="20230309 17:47:29.155"/>
</kw>
<status status="PASS" starttime="20230309 17:47:19.741" endtime="20230309 17:47:29.155"/>
</kw>
<msg timestamp="20230309 17:47:29.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:47:19.740" endtime="20230309 17:47:29.156"/>
</kw>
<msg timestamp="20230309 17:47:29.156" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:47:19.740" endtime="20230309 17:47:29.157"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230309 17:47:29.158" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230309 17:47:29.157" endtime="20230309 17:47:29.158"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20230309 17:47:29.159" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230309 17:47:29.158" endtime="20230309 17:47:29.159"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230309 17:47:29.160" level="INFO">${secret} = ['15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670']</msg>
<status status="PASS" starttime="20230309 17:47:29.159" endtime="20230309 17:47:29.160"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:47:29.161" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:47:29.160" endtime="20230309 17:47:29.161"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:47:29.163" level="INFO">${secret} = 15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:47:29.162" endtime="20230309 17:47:29.163"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:47:29.170" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:47:30.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:47:30.014" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:47:29.166" endtime="20230309 17:47:30.014"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:47:30.016" level="INFO"/>
<status status="PASS" starttime="20230309 17:47:30.015" endtime="20230309 17:47:30.016"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:47:30.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:47:30.016" endtime="20230309 17:47:30.017"/>
</kw>
<status status="PASS" starttime="20230309 17:47:29.165" endtime="20230309 17:47:30.018"/>
</kw>
<msg timestamp="20230309 17:47:30.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:47:29.164" endtime="20230309 17:47:30.019"/>
</kw>
<status status="PASS" starttime="20230309 17:47:29.164" endtime="20230309 17:47:30.019"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:47:30.024" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:47:30.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:47:30.975" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:47:30.021" endtime="20230309 17:47:30.975"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:47:30.977" level="INFO"/>
<status status="PASS" starttime="20230309 17:47:30.976" endtime="20230309 17:47:30.977"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:47:30.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:47:30.977" endtime="20230309 17:47:30.982"/>
</kw>
<status status="PASS" starttime="20230309 17:47:30.020" endtime="20230309 17:47:30.982"/>
</kw>
<msg timestamp="20230309 17:47:30.983" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:47:30.020" endtime="20230309 17:47:30.984"/>
</kw>
<status status="PASS" starttime="20230309 17:47:30.019" endtime="20230309 17:47:30.984"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:47:30.993" level="INFO">Running command 'aws configure set aws_secret_access_key 15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:47:31.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:47:31.869" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:47:30.987" endtime="20230309 17:47:31.869"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:47:31.871" level="INFO"/>
<status status="PASS" starttime="20230309 17:47:31.870" endtime="20230309 17:47:31.871"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:47:31.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:47:31.871" endtime="20230309 17:47:31.871"/>
</kw>
<status status="PASS" starttime="20230309 17:47:30.986" endtime="20230309 17:47:31.872"/>
</kw>
<msg timestamp="20230309 17:47:31.872" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:47:30.985" endtime="20230309 17:47:31.873"/>
</kw>
<status status="PASS" starttime="20230309 17:47:30.985" endtime="20230309 17:47:31.875"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:47:31.882" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:47:32.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:47:32.819" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:47:31.877" endtime="20230309 17:47:32.820"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:47:32.821" level="INFO"/>
<status status="PASS" starttime="20230309 17:47:32.820" endtime="20230309 17:47:32.821"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:47:32.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:47:32.824" endtime="20230309 17:47:32.824"/>
</kw>
<status status="PASS" starttime="20230309 17:47:31.876" endtime="20230309 17:47:32.825"/>
</kw>
<msg timestamp="20230309 17:47:32.825" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:47:31.876" endtime="20230309 17:47:32.825"/>
</kw>
<status status="PASS" starttime="20230309 17:47:31.875" endtime="20230309 17:47:32.826"/>
</kw>
<status status="PASS" starttime="20230309 17:47:19.738" endtime="20230309 17:47:32.826"/>
</kw>
<status status="PASS" starttime="20230309 17:47:19.738" endtime="20230309 17:47:32.826"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:47:32.826" endtime="20230309 17:47:32.830"/>
</kw>
<status status="PASS" starttime="20230309 17:47:19.646" endtime="20230309 17:47:32.830"/>
</kw>
<status status="PASS" starttime="20230309 17:47:19.645" endtime="20230309 17:47:32.830"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230309 17:47:32.832" endtime="20230309 17:47:32.834"/>
</kw>
<msg timestamp="20230309 17:47:32.834" level="INFO">${BUCKET} = encrypted</msg>
<status status="PASS" starttime="20230309 17:47:32.831" endtime="20230309 17:47:32.835"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:47:32.835" level="INFO">${BUCKET} = encrypted</msg>
<status status="PASS" starttime="20230309 17:47:32.835" endtime="20230309 17:47:32.835"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:47:32.836" endtime="20230309 17:47:32.836"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create encrypted bucket" library="commonawslib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:47:32.837" endtime="20230309 17:47:32.837"/>
</kw>
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/encrypted</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:47:32.843" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:47:45.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:47:45.483" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "s3v",
  "name" : "encrypted",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 364928154,
  "usedNamespace" : 18,
  "creationTime" : "2023-03-0...</msg>
<status status="PASS" starttime="20230309 17:47:32.838" endtime="20230309 17:47:45.483"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:47:45.484" endtime="20230309 17:47:45.485"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:47:45.485" endtime="20230309 17:47:45.486"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:47:45.486" endtime="20230309 17:47:45.486"/>
</kw>
<msg timestamp="20230309 17:47:45.487" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20230309 17:47:32.837" endtime="20230309 17:47:45.487"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230309 17:47:45.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:47:45.487" endtime="20230309 17:47:45.488"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create -k ${KEY_NAME} o3://${OM_SERVICE_ID}/s3v/encrypted</arg>
<status status="NOT RUN" starttime="20230309 17:47:45.488" endtime="20230309 17:47:45.488"/>
</kw>
<status status="PASS" starttime="20230309 17:47:32.837" endtime="20230309 17:47:45.489"/>
</kw>
<status status="PASS" starttime="20230309 17:47:32.836" endtime="20230309 17:47:45.489"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:47:45.489" endtime="20230309 17:47:45.490"/>
</kw>
<status status="PASS" starttime="20230309 17:47:19.620" endtime="20230309 17:47:45.490"/>
</kw>
<test id="s1-s5-s11-t1" name="Head existing object" line="32">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:47:45.498" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20230309 17:47:45.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:47:45.502" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:47:45.495" endtime="20230309 17:47:45.502"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:47:45.504" level="INFO"/>
<status status="PASS" starttime="20230309 17:47:45.503" endtime="20230309 17:47:45.504"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:47:45.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:47:45.504" endtime="20230309 17:47:45.505"/>
</kw>
<status status="PASS" starttime="20230309 17:47:45.494" endtime="20230309 17:47:45.506"/>
</kw>
<msg timestamp="20230309 17:47:45.506" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:47:45.494" endtime="20230309 17:47:45.506"/>
</kw>
<status status="PASS" starttime="20230309 17:47:45.492" endtime="20230309 17:47:45.507"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/headobject/key=value/f1 --body /tmp/testfile</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:47:45.513" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-0397558187/headobject/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:47:46.647" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:47:46.648" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:47:45.510" endtime="20230309 17:47:46.648"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:47:46.649" level="INFO"/>
<status status="PASS" starttime="20230309 17:47:46.648" endtime="20230309 17:47:46.649"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:47:46.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:47:46.649" endtime="20230309 17:47:46.650"/>
</kw>
<msg timestamp="20230309 17:47:46.650" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:47:45.508" endtime="20230309 17:47:46.651"/>
</kw>
<msg timestamp="20230309 17:47:46.654" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 17:47:45.507" endtime="20230309 17:47:46.654"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/headobject/key=value/f1</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:47:46.664" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-0397558187/headobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:47:47.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:47:47.672" level="INFO">${output} = {
    "LastModified": "Thu, 09 Mar 2023 17:47:46 GMT",
    "ContentLength": 11,
    "ETag": "2023-03-09T17:47:46.542Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "E...</msg>
<status status="PASS" starttime="20230309 17:47:46.658" endtime="20230309 17:47:47.672"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:47:47.673" level="INFO">{
    "LastModified": "Thu, 09 Mar 2023 17:47:46 GMT",
    "ContentLength": 11,
    "ETag": "2023-03-09T17:47:46.542Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Thu, 09 Mar 2023 17:47:47 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230309 17:47:47.672" endtime="20230309 17:47:47.675"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:47:47.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:47:47.675" endtime="20230309 17:47:47.677"/>
</kw>
<msg timestamp="20230309 17:47:47.681" level="INFO">${output} = {
    "LastModified": "Thu, 09 Mar 2023 17:47:46 GMT",
    "ContentLength": 11,
    "ETag": "2023-03-09T17:47:46.542Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "E...</msg>
<status status="PASS" starttime="20230309 17:47:46.656" endtime="20230309 17:47:47.681"/>
</kw>
<msg timestamp="20230309 17:47:47.682" level="INFO">${result} = {
    "LastModified": "Thu, 09 Mar 2023 17:47:46 GMT",
    "ContentLength": 11,
    "ETag": "2023-03-09T17:47:46.542Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "E...</msg>
<status status="PASS" starttime="20230309 17:47:46.655" endtime="20230309 17:47:47.682"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/headobject/key=value/f1</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:47:47.690" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket encrypted --key ozone-test-0397558187/headobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:47:48.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:47:48.746" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:47:47.686" endtime="20230309 17:47:48.746"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:47:48.748" level="INFO"/>
<status status="PASS" starttime="20230309 17:47:48.747" endtime="20230309 17:47:48.748"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:47:48.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:47:48.748" endtime="20230309 17:47:48.749"/>
</kw>
<msg timestamp="20230309 17:47:48.750" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:47:47.685" endtime="20230309 17:47:48.750"/>
</kw>
<msg timestamp="20230309 17:47:48.750" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 17:47:47.682" endtime="20230309 17:47:48.751"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:47:45.490" endtime="20230309 17:47:48.751"/>
</test>
<test id="s1-s5-s11-t2" name="Head object in non existing bucket" line="39">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET}-non-existent --key ${PREFIX}/headobject/key=value/f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:47:48.761" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted-non-existent --key ozone-test-0397558187/headobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:47:49.952" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:47:49.952" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20230309 17:47:48.757" endtime="20230309 17:47:49.952"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:47:49.954" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20230309 17:47:49.953" endtime="20230309 17:47:49.954"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:47:49.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:47:49.954" endtime="20230309 17:47:49.957"/>
</kw>
<msg timestamp="20230309 17:47:49.959" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20230309 17:47:48.756" endtime="20230309 17:47:49.959"/>
</kw>
<msg timestamp="20230309 17:47:49.962" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20230309 17:47:48.755" endtime="20230309 17:47:49.962"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:47:49.962" endtime="20230309 17:47:49.965"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:47:49.965" endtime="20230309 17:47:49.965"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:47:48.753" endtime="20230309 17:47:49.968"/>
</test>
<test id="s1-s5-s11-t3" name="Head non existing key" line="44">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/non-existent</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:47:49.991" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-0397558187/non-existent 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:47:51.053" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:47:51.055" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20230309 17:47:49.983" endtime="20230309 17:47:51.055"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:47:51.064" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20230309 17:47:51.059" endtime="20230309 17:47:51.064"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:47:51.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:47:51.064" endtime="20230309 17:47:51.068"/>
</kw>
<msg timestamp="20230309 17:47:51.070" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20230309 17:47:49.980" endtime="20230309 17:47:51.071"/>
</kw>
<msg timestamp="20230309 17:47:51.073" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20230309 17:47:49.976" endtime="20230309 17:47:51.073"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:47:51.073" endtime="20230309 17:47:51.074"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:47:51.074" endtime="20230309 17:47:51.079"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:47:49.973" endtime="20230309 17:47:51.080"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20230309 17:47:19.603" endtime="20230309 17:47:51.088"/>
</suite>
<suite id="s1-s5-s12" name="Objectmultidelete" source="/opt/hadoop/smoketest/s3/objectmultidelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:47:51.150" level="INFO">${randStr} = 9275086752</msg>
<status status="PASS" starttime="20230309 17:47:51.148" endtime="20230309 17:47:51.150"/>
</kw>
<msg timestamp="20230309 17:47:51.150" level="INFO">${random} = ozone-test-9275086752</msg>
<status status="PASS" starttime="20230309 17:47:51.146" endtime="20230309 17:47:51.150"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:47:51.157" level="INFO">${PREFIX} = ozone-test-9275086752</msg>
<status status="PASS" starttime="20230309 17:47:51.151" endtime="20230309 17:47:51.157"/>
</kw>
<status status="PASS" starttime="20230309 17:47:51.145" endtime="20230309 17:47:51.157"/>
</kw>
<status status="PASS" starttime="20230309 17:47:51.142" endtime="20230309 17:47:51.157"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which aws</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:47:51.170" level="INFO">Running command 'which aws 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:47:51.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:47:51.180" level="INFO">${output} = /usr/local/bin/aws</msg>
<status status="PASS" starttime="20230309 17:47:51.163" endtime="20230309 17:47:51.180"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230309 17:47:51.182" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:47:51.181" endtime="20230309 17:47:51.183"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20230309 17:47:51.183" endtime="20230309 17:47:51.183"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230309 17:47:51.184" endtime="20230309 17:47:51.184"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20230309 17:47:51.184" endtime="20230309 17:47:51.184"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230309 17:47:51.184" endtime="20230309 17:47:51.184"/>
</kw>
<status status="PASS" starttime="20230309 17:47:51.159" endtime="20230309 17:47:51.185"/>
</kw>
<status status="PASS" starttime="20230309 17:47:51.159" endtime="20230309 17:47:51.185"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:47:51.198" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:47:51.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:47:51.204" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230309 17:47:51.193" endtime="20230309 17:47:51.204"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:47:51.206" level="INFO">s3g</msg>
<status status="PASS" starttime="20230309 17:47:51.205" endtime="20230309 17:47:51.206"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:47:51.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:47:51.206" endtime="20230309 17:47:51.208"/>
</kw>
<status status="PASS" starttime="20230309 17:47:51.190" endtime="20230309 17:47:51.208"/>
</kw>
<msg timestamp="20230309 17:47:51.208" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:47:51.189" endtime="20230309 17:47:51.209"/>
</kw>
<msg timestamp="20230309 17:47:51.210" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230309 17:47:51.189" endtime="20230309 17:47:51.210"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:47:51.214" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:47:51.210" endtime="20230309 17:47:51.214"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:47:51.223" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:47:51.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:47:51.314" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:47:51.219" endtime="20230309 17:47:51.314"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:47:51.316" level="INFO"/>
<status status="PASS" starttime="20230309 17:47:51.315" endtime="20230309 17:47:51.316"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:47:51.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:47:51.317" endtime="20230309 17:47:51.317"/>
</kw>
<status status="PASS" starttime="20230309 17:47:51.218" endtime="20230309 17:47:51.318"/>
</kw>
<msg timestamp="20230309 17:47:51.318" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:47:51.217" endtime="20230309 17:47:51.319"/>
</kw>
<status status="PASS" starttime="20230309 17:47:51.216" endtime="20230309 17:47:51.319"/>
</kw>
<status status="PASS" starttime="20230309 17:47:51.214" endtime="20230309 17:47:51.319"/>
</kw>
<status status="PASS" starttime="20230309 17:47:51.188" endtime="20230309 17:47:51.320"/>
</kw>
<status status="PASS" starttime="20230309 17:47:51.187" endtime="20230309 17:47:51.320"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:47:51.327" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:48:00.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:48:00.710" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:47:51.324" endtime="20230309 17:48:00.710"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:48:00.712" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:48:00.711" endtime="20230309 17:48:00.712"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:48:00.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:48:00.712" endtime="20230309 17:48:00.713"/>
</kw>
<status status="PASS" starttime="20230309 17:47:51.323" endtime="20230309 17:48:00.713"/>
</kw>
<msg timestamp="20230309 17:48:00.713" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:47:51.322" endtime="20230309 17:48:00.715"/>
</kw>
<msg timestamp="20230309 17:48:00.716" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:47:51.322" endtime="20230309 17:48:00.716"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230309 17:48:00.717" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230309 17:48:00.716" endtime="20230309 17:48:00.717"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20230309 17:48:00.718" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230309 17:48:00.717" endtime="20230309 17:48:00.718"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230309 17:48:00.719" level="INFO">${secret} = ['15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670']</msg>
<status status="PASS" starttime="20230309 17:48:00.718" endtime="20230309 17:48:00.719"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:48:00.720" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:48:00.719" endtime="20230309 17:48:00.721"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:48:00.724" level="INFO">${secret} = 15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:48:00.721" endtime="20230309 17:48:00.724"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:48:00.729" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:48:01.626" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:48:01.627" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:48:00.725" endtime="20230309 17:48:01.627"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:48:01.628" level="INFO"/>
<status status="PASS" starttime="20230309 17:48:01.627" endtime="20230309 17:48:01.628"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:48:01.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:48:01.628" endtime="20230309 17:48:01.629"/>
</kw>
<status status="PASS" starttime="20230309 17:48:00.725" endtime="20230309 17:48:01.631"/>
</kw>
<msg timestamp="20230309 17:48:01.631" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:48:00.724" endtime="20230309 17:48:01.634"/>
</kw>
<status status="PASS" starttime="20230309 17:48:00.724" endtime="20230309 17:48:01.634"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:48:01.640" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:48:02.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:48:02.480" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:48:01.636" endtime="20230309 17:48:02.480"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:48:02.482" level="INFO"/>
<status status="PASS" starttime="20230309 17:48:02.481" endtime="20230309 17:48:02.482"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:48:02.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:48:02.482" endtime="20230309 17:48:02.484"/>
</kw>
<status status="PASS" starttime="20230309 17:48:01.636" endtime="20230309 17:48:02.484"/>
</kw>
<msg timestamp="20230309 17:48:02.484" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:48:01.635" endtime="20230309 17:48:02.485"/>
</kw>
<status status="PASS" starttime="20230309 17:48:01.634" endtime="20230309 17:48:02.485"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:48:02.491" level="INFO">Running command 'aws configure set aws_secret_access_key 15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:48:03.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:48:03.315" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:48:02.487" endtime="20230309 17:48:03.315"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:48:03.316" level="INFO"/>
<status status="PASS" starttime="20230309 17:48:03.315" endtime="20230309 17:48:03.316"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:48:03.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:48:03.317" endtime="20230309 17:48:03.318"/>
</kw>
<status status="PASS" starttime="20230309 17:48:02.487" endtime="20230309 17:48:03.319"/>
</kw>
<msg timestamp="20230309 17:48:03.319" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:48:02.486" endtime="20230309 17:48:03.320"/>
</kw>
<status status="PASS" starttime="20230309 17:48:02.486" endtime="20230309 17:48:03.320"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:48:03.327" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:48:04.287" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:48:04.287" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:48:03.323" endtime="20230309 17:48:04.287"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:48:04.288" level="INFO"/>
<status status="PASS" starttime="20230309 17:48:04.288" endtime="20230309 17:48:04.288"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:48:04.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:48:04.289" endtime="20230309 17:48:04.289"/>
</kw>
<status status="PASS" starttime="20230309 17:48:03.322" endtime="20230309 17:48:04.290"/>
</kw>
<msg timestamp="20230309 17:48:04.290" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:48:03.321" endtime="20230309 17:48:04.291"/>
</kw>
<status status="PASS" starttime="20230309 17:48:03.320" endtime="20230309 17:48:04.292"/>
</kw>
<status status="PASS" starttime="20230309 17:47:51.321" endtime="20230309 17:48:04.292"/>
</kw>
<status status="PASS" starttime="20230309 17:47:51.320" endtime="20230309 17:48:04.292"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:48:04.292" endtime="20230309 17:48:04.293"/>
</kw>
<status status="PASS" starttime="20230309 17:47:51.187" endtime="20230309 17:48:04.293"/>
</kw>
<status status="PASS" starttime="20230309 17:47:51.185" endtime="20230309 17:48:04.294"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230309 17:48:04.295" endtime="20230309 17:48:04.296"/>
</kw>
<msg timestamp="20230309 17:48:04.296" level="INFO">${BUCKET} = encrypted</msg>
<status status="PASS" starttime="20230309 17:48:04.294" endtime="20230309 17:48:04.296"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:48:04.297" level="INFO">${BUCKET} = encrypted</msg>
<status status="PASS" starttime="20230309 17:48:04.297" endtime="20230309 17:48:04.297"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:48:04.299" endtime="20230309 17:48:04.300"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create encrypted bucket" library="commonawslib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:48:04.303" endtime="20230309 17:48:04.304"/>
</kw>
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/encrypted</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:48:04.314" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:48:16.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:48:16.996" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "s3v",
  "name" : "encrypted",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 364928154,
  "usedNamespace" : 18,
  "creationTime" : "2023-03-0...</msg>
<status status="PASS" starttime="20230309 17:48:04.305" endtime="20230309 17:48:16.996"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:48:16.997" endtime="20230309 17:48:16.997"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:48:16.998" endtime="20230309 17:48:16.998"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:48:16.999" endtime="20230309 17:48:16.999"/>
</kw>
<msg timestamp="20230309 17:48:17.000" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20230309 17:48:04.305" endtime="20230309 17:48:17.000"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230309 17:48:17.001" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:48:17.000" endtime="20230309 17:48:17.001"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create -k ${KEY_NAME} o3://${OM_SERVICE_ID}/s3v/encrypted</arg>
<status status="NOT RUN" starttime="20230309 17:48:17.002" endtime="20230309 17:48:17.002"/>
</kw>
<status status="PASS" starttime="20230309 17:48:04.303" endtime="20230309 17:48:17.003"/>
</kw>
<status status="PASS" starttime="20230309 17:48:04.300" endtime="20230309 17:48:17.003"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:48:17.003" endtime="20230309 17:48:17.004"/>
</kw>
<status status="PASS" starttime="20230309 17:47:51.142" endtime="20230309 17:48:17.004"/>
</kw>
<test id="s1-s5-s12-t1" name="Delete file with multi delete" line="31">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:48:17.013" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20230309 17:48:17.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:48:17.017" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:48:17.009" endtime="20230309 17:48:17.018"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:48:17.019" level="INFO"/>
<status status="PASS" starttime="20230309 17:48:17.018" endtime="20230309 17:48:17.020"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:48:17.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:48:17.020" endtime="20230309 17:48:17.021"/>
</kw>
<status status="PASS" starttime="20230309 17:48:17.008" endtime="20230309 17:48:17.021"/>
</kw>
<msg timestamp="20230309 17:48:17.021" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:48:17.007" endtime="20230309 17:48:17.022"/>
</kw>
<status status="PASS" starttime="20230309 17:48:17.007" endtime="20230309 17:48:17.022"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/key=value/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:48:17.030" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-9275086752/multidelete/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:48:18.217" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:48:18.217" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:48:17.027" endtime="20230309 17:48:18.217"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:48:18.219" level="INFO"/>
<status status="PASS" starttime="20230309 17:48:18.218" endtime="20230309 17:48:18.220"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:48:18.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:48:18.220" endtime="20230309 17:48:18.221"/>
</kw>
<status status="PASS" starttime="20230309 17:48:17.026" endtime="20230309 17:48:18.221"/>
</kw>
<msg timestamp="20230309 17:48:18.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:48:17.025" endtime="20230309 17:48:18.222"/>
</kw>
<msg timestamp="20230309 17:48:18.223" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:48:17.024" endtime="20230309 17:48:18.223"/>
</kw>
<msg timestamp="20230309 17:48:18.223" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 17:48:17.022" endtime="20230309 17:48:18.223"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/key=value/f2 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:48:18.231" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-9275086752/multidelete/key=value/f2 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:48:19.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:48:19.352" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:48:18.227" endtime="20230309 17:48:19.352"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:48:19.354" level="INFO"/>
<status status="PASS" starttime="20230309 17:48:19.353" endtime="20230309 17:48:19.354"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:48:19.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:48:19.354" endtime="20230309 17:48:19.355"/>
</kw>
<status status="PASS" starttime="20230309 17:48:18.226" endtime="20230309 17:48:19.356"/>
</kw>
<msg timestamp="20230309 17:48:19.356" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:48:18.226" endtime="20230309 17:48:19.357"/>
</kw>
<msg timestamp="20230309 17:48:19.358" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:48:18.225" endtime="20230309 17:48:19.358"/>
</kw>
<msg timestamp="20230309 17:48:19.358" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 17:48:18.224" endtime="20230309 17:48:19.358"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/key=value/f3 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:48:19.365" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-9275086752/multidelete/key=value/f3 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:48:20.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:48:20.442" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:48:19.362" endtime="20230309 17:48:20.442"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:48:20.444" level="INFO"/>
<status status="PASS" starttime="20230309 17:48:20.443" endtime="20230309 17:48:20.444"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:48:20.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:48:20.445" endtime="20230309 17:48:20.445"/>
</kw>
<status status="PASS" starttime="20230309 17:48:19.361" endtime="20230309 17:48:20.446"/>
</kw>
<msg timestamp="20230309 17:48:20.446" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:48:19.361" endtime="20230309 17:48:20.447"/>
</kw>
<msg timestamp="20230309 17:48:20.447" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:48:19.360" endtime="20230309 17:48:20.448"/>
</kw>
<msg timestamp="20230309 17:48:20.448" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 17:48:19.359" endtime="20230309 17:48:20.448"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/multidelete/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:48:20.457" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket encrypted --prefix ozone-test-9275086752/multidelete/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:48:21.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:48:21.654" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-9275086752/multidelete/key=value/f1",
            "LastModified": "2023-03-09T17:48:18.109Z",
            "ETag": "2023-03-09T17:48:18.109Z...</msg>
<status status="PASS" starttime="20230309 17:48:20.453" endtime="20230309 17:48:21.654"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:48:21.657" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-9275086752/multidelete/key=value/f1",
            "LastModified": "2023-03-09T17:48:18.109Z",
            "ETag": "2023-03-09T17:48:18.109Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-9275086752/multidelete/key=value/f2",
            "LastModified": "2023-03-09T17:48:19.239Z",
            "ETag": "2023-03-09T17:48:19.239Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-9275086752/multidelete/key=value/f3",
            "LastModified": "2023-03-09T17:48:20.342Z",
            "ETag": "2023-03-09T17:48:20.342Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20230309 17:48:21.655" endtime="20230309 17:48:21.657"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:48:21.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:48:21.658" endtime="20230309 17:48:21.660"/>
</kw>
<status status="PASS" starttime="20230309 17:48:20.451" endtime="20230309 17:48:21.660"/>
</kw>
<msg timestamp="20230309 17:48:21.660" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:48:20.451" endtime="20230309 17:48:21.661"/>
</kw>
<msg timestamp="20230309 17:48:21.661" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-9275086752/multidelete/key=value/f1",
            "LastModified": "2023-03-09T17:48:18.109Z",
            "ETag": "2023-03-09T17:48:18.109Z...</msg>
<status status="PASS" starttime="20230309 17:48:20.450" endtime="20230309 17:48:21.661"/>
</kw>
<msg timestamp="20230309 17:48:21.662" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-9275086752/multidelete/key=value/f1",
            "LastModified": "2023-03-09T17:48:18.109Z",
            "ETag": "2023-03-09T17:48:18.109Z...</msg>
<status status="PASS" starttime="20230309 17:48:20.449" endtime="20230309 17:48:21.662"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:48:21.662" endtime="20230309 17:48:21.664"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:48:21.664" endtime="20230309 17:48:21.666"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:48:21.667" endtime="20230309 17:48:21.668"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:48:21.668" endtime="20230309 17:48:21.669"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>REDUCED_REDUNDANCY</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:48:21.670" endtime="20230309 17:48:21.670"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-objects --bucket ${BUCKET} --delete 'Objects=[{Key=${PREFIX}/multidelete/key=value/f1},{Key=${PREFIX}/multidelete/key=value/f2},{Key=${PREFIX}/multidelete/key=value/f4}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:48:21.683" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-objects --bucket encrypted --delete 'Objects=[{Key=ozone-test-9275086752/multidelete/key=value/f1},{Key=ozone-test-9275086752/multidelete/key=value/f2},{Key=ozone-test-9275086752/multidelete/key=value/f4}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:48:22.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:48:22.795" level="INFO">${output} = {
    "Deleted": [
        {
            "Key": "ozone-test-9275086752/multidelete/key=value/f1"
        },
        {
            "Key": "ozone-test-9275086752/multidelete/key=value/f2"
        },
   ...</msg>
<status status="PASS" starttime="20230309 17:48:21.677" endtime="20230309 17:48:22.795"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:48:22.798" level="INFO">{
    "Deleted": [
        {
            "Key": "ozone-test-9275086752/multidelete/key=value/f1"
        },
        {
            "Key": "ozone-test-9275086752/multidelete/key=value/f2"
        },
        {
            "Key": "ozone-test-9275086752/multidelete/key=value/f4"
        }
    ]
}</msg>
<status status="PASS" starttime="20230309 17:48:22.797" endtime="20230309 17:48:22.798"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:48:22.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:48:22.798" endtime="20230309 17:48:22.799"/>
</kw>
<status status="PASS" starttime="20230309 17:48:21.677" endtime="20230309 17:48:22.800"/>
</kw>
<msg timestamp="20230309 17:48:22.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:48:21.675" endtime="20230309 17:48:22.801"/>
</kw>
<msg timestamp="20230309 17:48:22.801" level="INFO">${output} = {
    "Deleted": [
        {
            "Key": "ozone-test-9275086752/multidelete/key=value/f1"
        },
        {
            "Key": "ozone-test-9275086752/multidelete/key=value/f2"
        },
   ...</msg>
<status status="PASS" starttime="20230309 17:48:21.674" endtime="20230309 17:48:22.801"/>
</kw>
<msg timestamp="20230309 17:48:22.802" level="INFO">${result} = {
    "Deleted": [
        {
            "Key": "ozone-test-9275086752/multidelete/key=value/f1"
        },
        {
            "Key": "ozone-test-9275086752/multidelete/key=value/f2"
        },
   ...</msg>
<status status="PASS" starttime="20230309 17:48:21.671" endtime="20230309 17:48:22.802"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:48:22.803" endtime="20230309 17:48:22.803"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/multidelete/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:48:22.812" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket encrypted --prefix ozone-test-9275086752/multidelete/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:48:23.911" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:48:23.911" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-9275086752/multidelete/key=value/f3",
            "LastModified": "2023-03-09T17:48:20.342Z",
            "ETag": "2023-03-09T17:48:20.342Z...</msg>
<status status="PASS" starttime="20230309 17:48:22.808" endtime="20230309 17:48:23.911"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:48:23.914" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-9275086752/multidelete/key=value/f3",
            "LastModified": "2023-03-09T17:48:20.342Z",
            "ETag": "2023-03-09T17:48:20.342Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20230309 17:48:23.912" endtime="20230309 17:48:23.914"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:48:23.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:48:23.914" endtime="20230309 17:48:23.915"/>
</kw>
<status status="PASS" starttime="20230309 17:48:22.807" endtime="20230309 17:48:23.916"/>
</kw>
<msg timestamp="20230309 17:48:23.916" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:48:22.806" endtime="20230309 17:48:23.916"/>
</kw>
<msg timestamp="20230309 17:48:23.917" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-9275086752/multidelete/key=value/f3",
            "LastModified": "2023-03-09T17:48:20.342Z",
            "ETag": "2023-03-09T17:48:20.342Z...</msg>
<status status="PASS" starttime="20230309 17:48:22.805" endtime="20230309 17:48:23.917"/>
</kw>
<msg timestamp="20230309 17:48:23.917" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-9275086752/multidelete/key=value/f3",
            "LastModified": "2023-03-09T17:48:20.342Z",
            "ETag": "2023-03-09T17:48:20.342Z...</msg>
<status status="PASS" starttime="20230309 17:48:22.804" endtime="20230309 17:48:23.917"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:48:23.918" endtime="20230309 17:48:23.919"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:48:23.919" endtime="20230309 17:48:23.920"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:48:23.920" endtime="20230309 17:48:23.921"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:48:23.921" endtime="20230309 17:48:23.922"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>REDUCED_REDUNDANCY</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:48:23.922" endtime="20230309 17:48:23.923"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:48:17.004" endtime="20230309 17:48:23.923"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20230309 17:47:51.093" endtime="20230309 17:48:23.925"/>
</suite>
<suite id="s1-s5-s13" name="Objectputget" source="/opt/hadoop/smoketest/s3/objectputget.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:48:23.949" level="INFO">${randStr} = 4930423984</msg>
<status status="PASS" starttime="20230309 17:48:23.948" endtime="20230309 17:48:23.949"/>
</kw>
<msg timestamp="20230309 17:48:23.949" level="INFO">${random} = ozone-test-4930423984</msg>
<status status="PASS" starttime="20230309 17:48:23.948" endtime="20230309 17:48:23.949"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:48:23.952" level="INFO">${PREFIX} = ozone-test-4930423984</msg>
<status status="PASS" starttime="20230309 17:48:23.949" endtime="20230309 17:48:23.952"/>
</kw>
<status status="PASS" starttime="20230309 17:48:23.947" endtime="20230309 17:48:23.952"/>
</kw>
<status status="PASS" starttime="20230309 17:48:23.947" endtime="20230309 17:48:23.953"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which aws</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:48:23.957" level="INFO">Running command 'which aws 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:48:23.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:48:23.961" level="INFO">${output} = /usr/local/bin/aws</msg>
<status status="PASS" starttime="20230309 17:48:23.954" endtime="20230309 17:48:23.961"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230309 17:48:23.962" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:48:23.962" endtime="20230309 17:48:23.963"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20230309 17:48:23.964" endtime="20230309 17:48:23.964"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230309 17:48:23.964" endtime="20230309 17:48:23.964"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20230309 17:48:23.964" endtime="20230309 17:48:23.964"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230309 17:48:23.965" endtime="20230309 17:48:23.965"/>
</kw>
<status status="PASS" starttime="20230309 17:48:23.953" endtime="20230309 17:48:23.965"/>
</kw>
<status status="PASS" starttime="20230309 17:48:23.953" endtime="20230309 17:48:23.965"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:48:23.976" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:48:23.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:48:23.981" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230309 17:48:23.973" endtime="20230309 17:48:23.981"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:48:23.983" level="INFO">s3g</msg>
<status status="PASS" starttime="20230309 17:48:23.982" endtime="20230309 17:48:23.983"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:48:23.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:48:23.983" endtime="20230309 17:48:23.984"/>
</kw>
<status status="PASS" starttime="20230309 17:48:23.971" endtime="20230309 17:48:23.984"/>
</kw>
<msg timestamp="20230309 17:48:23.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:48:23.971" endtime="20230309 17:48:23.986"/>
</kw>
<msg timestamp="20230309 17:48:23.987" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230309 17:48:23.970" endtime="20230309 17:48:23.987"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:48:23.990" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:48:23.987" endtime="20230309 17:48:23.990"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:48:23.998" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:48:24.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:48:24.046" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:48:23.994" endtime="20230309 17:48:24.046"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:48:24.048" level="INFO"/>
<status status="PASS" starttime="20230309 17:48:24.047" endtime="20230309 17:48:24.048"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:48:24.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:48:24.048" endtime="20230309 17:48:24.049"/>
</kw>
<status status="PASS" starttime="20230309 17:48:23.992" endtime="20230309 17:48:24.049"/>
</kw>
<msg timestamp="20230309 17:48:24.049" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:48:23.991" endtime="20230309 17:48:24.051"/>
</kw>
<status status="PASS" starttime="20230309 17:48:23.990" endtime="20230309 17:48:24.051"/>
</kw>
<status status="PASS" starttime="20230309 17:48:23.990" endtime="20230309 17:48:24.051"/>
</kw>
<status status="PASS" starttime="20230309 17:48:23.968" endtime="20230309 17:48:24.052"/>
</kw>
<status status="PASS" starttime="20230309 17:48:23.967" endtime="20230309 17:48:24.052"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:48:24.061" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:48:34.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:48:34.142" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:48:24.056" endtime="20230309 17:48:34.142"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:48:34.143" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:48:34.142" endtime="20230309 17:48:34.143"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:48:34.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:48:34.143" endtime="20230309 17:48:34.144"/>
</kw>
<status status="PASS" starttime="20230309 17:48:24.055" endtime="20230309 17:48:34.145"/>
</kw>
<msg timestamp="20230309 17:48:34.145" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:48:24.054" endtime="20230309 17:48:34.146"/>
</kw>
<msg timestamp="20230309 17:48:34.146" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:48:24.054" endtime="20230309 17:48:34.146"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230309 17:48:34.147" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230309 17:48:34.146" endtime="20230309 17:48:34.147"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20230309 17:48:34.150" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230309 17:48:34.149" endtime="20230309 17:48:34.150"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230309 17:48:34.152" level="INFO">${secret} = ['15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670']</msg>
<status status="PASS" starttime="20230309 17:48:34.151" endtime="20230309 17:48:34.152"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:48:34.155" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:48:34.152" endtime="20230309 17:48:34.155"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:48:34.157" level="INFO">${secret} = 15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:48:34.155" endtime="20230309 17:48:34.157"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:48:34.164" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:48:35.002" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:48:35.003" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:48:34.160" endtime="20230309 17:48:35.003"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:48:35.005" level="INFO"/>
<status status="PASS" starttime="20230309 17:48:35.004" endtime="20230309 17:48:35.005"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:48:35.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:48:35.005" endtime="20230309 17:48:35.006"/>
</kw>
<status status="PASS" starttime="20230309 17:48:34.159" endtime="20230309 17:48:35.006"/>
</kw>
<msg timestamp="20230309 17:48:35.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:48:34.158" endtime="20230309 17:48:35.008"/>
</kw>
<status status="PASS" starttime="20230309 17:48:34.157" endtime="20230309 17:48:35.008"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:48:35.014" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:48:35.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:48:35.807" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:48:35.010" endtime="20230309 17:48:35.807"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:48:35.809" level="INFO"/>
<status status="PASS" starttime="20230309 17:48:35.808" endtime="20230309 17:48:35.809"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:48:35.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:48:35.809" endtime="20230309 17:48:35.811"/>
</kw>
<status status="PASS" starttime="20230309 17:48:35.010" endtime="20230309 17:48:35.811"/>
</kw>
<msg timestamp="20230309 17:48:35.811" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:48:35.009" endtime="20230309 17:48:35.812"/>
</kw>
<status status="PASS" starttime="20230309 17:48:35.008" endtime="20230309 17:48:35.813"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:48:35.821" level="INFO">Running command 'aws configure set aws_secret_access_key 15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:48:36.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:48:36.639" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:48:35.817" endtime="20230309 17:48:36.639"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:48:36.640" level="INFO"/>
<status status="PASS" starttime="20230309 17:48:36.639" endtime="20230309 17:48:36.640"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:48:36.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:48:36.640" endtime="20230309 17:48:36.641"/>
</kw>
<status status="PASS" starttime="20230309 17:48:35.815" endtime="20230309 17:48:36.642"/>
</kw>
<msg timestamp="20230309 17:48:36.642" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:48:35.815" endtime="20230309 17:48:36.643"/>
</kw>
<status status="PASS" starttime="20230309 17:48:35.814" endtime="20230309 17:48:36.643"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:48:36.652" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:48:37.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:48:37.477" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:48:36.648" endtime="20230309 17:48:37.477"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:48:37.480" level="INFO"/>
<status status="PASS" starttime="20230309 17:48:37.479" endtime="20230309 17:48:37.481"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:48:37.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:48:37.481" endtime="20230309 17:48:37.481"/>
</kw>
<status status="PASS" starttime="20230309 17:48:36.646" endtime="20230309 17:48:37.482"/>
</kw>
<msg timestamp="20230309 17:48:37.482" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:48:36.645" endtime="20230309 17:48:37.483"/>
</kw>
<status status="PASS" starttime="20230309 17:48:36.643" endtime="20230309 17:48:37.484"/>
</kw>
<status status="PASS" starttime="20230309 17:48:24.053" endtime="20230309 17:48:37.484"/>
</kw>
<status status="PASS" starttime="20230309 17:48:24.052" endtime="20230309 17:48:37.484"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:48:37.485" endtime="20230309 17:48:37.486"/>
</kw>
<status status="PASS" starttime="20230309 17:48:23.967" endtime="20230309 17:48:37.487"/>
</kw>
<status status="PASS" starttime="20230309 17:48:23.965" endtime="20230309 17:48:37.487"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230309 17:48:37.488" endtime="20230309 17:48:37.488"/>
</kw>
<msg timestamp="20230309 17:48:37.488" level="INFO">${BUCKET} = encrypted</msg>
<status status="PASS" starttime="20230309 17:48:37.487" endtime="20230309 17:48:37.488"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:48:37.489" level="INFO">${BUCKET} = encrypted</msg>
<status status="PASS" starttime="20230309 17:48:37.489" endtime="20230309 17:48:37.489"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:48:37.490" endtime="20230309 17:48:37.490"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create encrypted bucket" library="commonawslib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:48:37.493" endtime="20230309 17:48:37.493"/>
</kw>
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/encrypted</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:48:37.498" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:48:49.617" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:48:49.618" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "s3v",
  "name" : "encrypted",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 364928241,
  "usedNamespace" : 19,
  "creationTime" : "2023-03-0...</msg>
<status status="PASS" starttime="20230309 17:48:37.494" endtime="20230309 17:48:49.618"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:48:49.618" endtime="20230309 17:48:49.619"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:48:49.620" endtime="20230309 17:48:49.620"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:48:49.620" endtime="20230309 17:48:49.621"/>
</kw>
<msg timestamp="20230309 17:48:49.622" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20230309 17:48:37.493" endtime="20230309 17:48:49.622"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230309 17:48:49.623" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:48:49.622" endtime="20230309 17:48:49.624"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create -k ${KEY_NAME} o3://${OM_SERVICE_ID}/s3v/encrypted</arg>
<status status="NOT RUN" starttime="20230309 17:48:49.624" endtime="20230309 17:48:49.624"/>
</kw>
<status status="PASS" starttime="20230309 17:48:37.492" endtime="20230309 17:48:49.625"/>
</kw>
<status status="PASS" starttime="20230309 17:48:37.490" endtime="20230309 17:48:49.625"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:48:49.625" endtime="20230309 17:48:49.626"/>
</kw>
<status status="PASS" starttime="20230309 17:48:23.946" endtime="20230309 17:48:49.626"/>
</kw>
<test id="s1-s5-s13-t1" name="Put object to s3" line="32">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:48:49.635" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20230309 17:48:49.637" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:48:49.638" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:48:49.630" endtime="20230309 17:48:49.638"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:48:49.639" level="INFO"/>
<status status="PASS" starttime="20230309 17:48:49.638" endtime="20230309 17:48:49.639"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:48:49.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:48:49.639" endtime="20230309 17:48:49.640"/>
</kw>
<status status="PASS" starttime="20230309 17:48:49.630" endtime="20230309 17:48:49.642"/>
</kw>
<msg timestamp="20230309 17:48:49.642" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:48:49.629" endtime="20230309 17:48:49.643"/>
</kw>
<status status="PASS" starttime="20230309 17:48:49.628" endtime="20230309 17:48:49.644"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:48:49.653" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-4930423984/putobject/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:48:50.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:48:50.936" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:48:49.649" endtime="20230309 17:48:50.937"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:48:50.939" level="INFO"/>
<status status="PASS" starttime="20230309 17:48:50.937" endtime="20230309 17:48:50.939"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:48:50.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:48:50.940" endtime="20230309 17:48:50.940"/>
</kw>
<status status="PASS" starttime="20230309 17:48:49.647" endtime="20230309 17:48:50.941"/>
</kw>
<msg timestamp="20230309 17:48:50.941" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:48:49.647" endtime="20230309 17:48:50.943"/>
</kw>
<msg timestamp="20230309 17:48:50.943" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:48:49.646" endtime="20230309 17:48:50.943"/>
</kw>
<msg timestamp="20230309 17:48:50.944" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 17:48:49.644" endtime="20230309 17:48:50.944"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/putobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:48:50.958" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket encrypted --prefix ozone-test-4930423984/putobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:48:52.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:48:52.038" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-4930423984/putobject/key=value/f1",
            "LastModified": "2023-03-09T17:48:50.776Z",
            "ETag": "2023-03-09T17:48:50.776Z",...</msg>
<status status="PASS" starttime="20230309 17:48:50.949" endtime="20230309 17:48:52.038"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:48:52.041" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-4930423984/putobject/key=value/f1",
            "LastModified": "2023-03-09T17:48:50.776Z",
            "ETag": "2023-03-09T17:48:50.776Z",
            "Size": 11,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20230309 17:48:52.039" endtime="20230309 17:48:52.041"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:48:52.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:48:52.042" endtime="20230309 17:48:52.043"/>
</kw>
<status status="PASS" starttime="20230309 17:48:50.948" endtime="20230309 17:48:52.044"/>
</kw>
<msg timestamp="20230309 17:48:52.044" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:48:50.947" endtime="20230309 17:48:52.044"/>
</kw>
<msg timestamp="20230309 17:48:52.045" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-4930423984/putobject/key=value/f1",
            "LastModified": "2023-03-09T17:48:50.776Z",
            "ETag": "2023-03-09T17:48:50.776Z",...</msg>
<status status="PASS" starttime="20230309 17:48:50.945" endtime="20230309 17:48:52.045"/>
</kw>
<msg timestamp="20230309 17:48:52.045" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-4930423984/putobject/key=value/f1",
            "LastModified": "2023-03-09T17:48:50.776Z",
            "ETag": "2023-03-09T17:48:50.776Z",...</msg>
<status status="PASS" starttime="20230309 17:48:50.944" endtime="20230309 17:48:52.045"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:48:52.046" endtime="20230309 17:48:52.047"/>
</kw>
<kw name="Execute" library="os">
<arg>touch -f /tmp/zerobyte</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:48:52.053" level="INFO">Running command 'touch -f /tmp/zerobyte 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:48:52.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:48:52.060" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:48:52.049" endtime="20230309 17:48:52.061"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:48:52.063" level="INFO"/>
<status status="PASS" starttime="20230309 17:48:52.062" endtime="20230309 17:48:52.063"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:48:52.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:48:52.063" endtime="20230309 17:48:52.065"/>
</kw>
<status status="PASS" starttime="20230309 17:48:52.048" endtime="20230309 17:48:52.066"/>
</kw>
<msg timestamp="20230309 17:48:52.066" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:48:52.048" endtime="20230309 17:48:52.066"/>
</kw>
<status status="PASS" starttime="20230309 17:48:52.047" endtime="20230309 17:48:52.067"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --body /tmp/zerobyte</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:48:52.077" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-4930423984/putobject/key=value/zerobyte --body /tmp/zerobyte 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:48:53.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:48:53.116" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:48:52.072" endtime="20230309 17:48:53.116"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:48:53.118" level="INFO"/>
<status status="PASS" starttime="20230309 17:48:53.117" endtime="20230309 17:48:53.118"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:48:53.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:48:53.118" endtime="20230309 17:48:53.119"/>
</kw>
<status status="PASS" starttime="20230309 17:48:52.071" endtime="20230309 17:48:53.119"/>
</kw>
<msg timestamp="20230309 17:48:53.119" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:48:52.070" endtime="20230309 17:48:53.120"/>
</kw>
<msg timestamp="20230309 17:48:53.121" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:48:52.069" endtime="20230309 17:48:53.121"/>
</kw>
<msg timestamp="20230309 17:48:53.121" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 17:48:52.068" endtime="20230309 17:48:53.121"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/putobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:48:53.128" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket encrypted --prefix ozone-test-4930423984/putobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:48:54.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:48:54.113" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-4930423984/putobject/key=value/f1",
            "LastModified": "2023-03-09T17:48:50.776Z",
            "ETag": "2023-03-09T17:48:50.776Z",...</msg>
<status status="PASS" starttime="20230309 17:48:53.125" endtime="20230309 17:48:54.113"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:48:54.115" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-4930423984/putobject/key=value/f1",
            "LastModified": "2023-03-09T17:48:50.776Z",
            "ETag": "2023-03-09T17:48:50.776Z",
            "Size": 11,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-4930423984/putobject/key=value/zerobyte",
            "LastModified": "2023-03-09T17:48:52.987Z",
            "ETag": "2023-03-09T17:48:52.987Z",
            "Size": 0,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20230309 17:48:54.114" endtime="20230309 17:48:54.116"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:48:54.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:48:54.117" endtime="20230309 17:48:54.118"/>
</kw>
<status status="PASS" starttime="20230309 17:48:53.124" endtime="20230309 17:48:54.119"/>
</kw>
<msg timestamp="20230309 17:48:54.119" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:48:53.124" endtime="20230309 17:48:54.121"/>
</kw>
<msg timestamp="20230309 17:48:54.121" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-4930423984/putobject/key=value/f1",
            "LastModified": "2023-03-09T17:48:50.776Z",
            "ETag": "2023-03-09T17:48:50.776Z",...</msg>
<status status="PASS" starttime="20230309 17:48:53.123" endtime="20230309 17:48:54.121"/>
</kw>
<msg timestamp="20230309 17:48:54.121" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-4930423984/putobject/key=value/f1",
            "LastModified": "2023-03-09T17:48:50.776Z",
            "ETag": "2023-03-09T17:48:50.776Z",...</msg>
<status status="PASS" starttime="20230309 17:48:53.121" endtime="20230309 17:48:54.122"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>zerobyte</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:48:54.122" endtime="20230309 17:48:54.124"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:48:49.627" endtime="20230309 17:48:54.124"/>
</test>
<test id="s1-s5-s13-t2" name="Get object from s3" line="44">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 /tmp/testfile.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:48:54.137" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-4930423984/putobject/key=value/f1 /tmp/testfile.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:48:55.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:48:55.186" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:48:50 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230309 17:48:54.134" endtime="20230309 17:48:55.186"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:48:55.188" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:48:50 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 09 Mar 2023 17:48:54 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230309 17:48:55.187" endtime="20230309 17:48:55.188"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:48:55.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:48:55.188" endtime="20230309 17:48:55.190"/>
</kw>
<status status="PASS" starttime="20230309 17:48:54.133" endtime="20230309 17:48:55.191"/>
</kw>
<msg timestamp="20230309 17:48:55.191" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:48:54.132" endtime="20230309 17:48:55.192"/>
</kw>
<msg timestamp="20230309 17:48:55.192" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:48:50 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230309 17:48:54.130" endtime="20230309 17:48:55.192"/>
</kw>
<msg timestamp="20230309 17:48:55.193" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:48:50 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230309 17:48:54.128" endtime="20230309 17:48:55.193"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/testfile</arg>
<arg>/tmp/testfile.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:48:55.200" level="INFO">Running command 'md5sum /tmp/testfile | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:48:55.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:48:55.204" level="INFO">${output} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20230309 17:48:55.197" endtime="20230309 17:48:55.204"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:48:55.207" level="INFO">09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20230309 17:48:55.205" endtime="20230309 17:48:55.207"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:48:55.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:48:55.207" endtime="20230309 17:48:55.209"/>
</kw>
<status status="PASS" starttime="20230309 17:48:55.195" endtime="20230309 17:48:55.209"/>
</kw>
<msg timestamp="20230309 17:48:55.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:48:55.195" endtime="20230309 17:48:55.213"/>
</kw>
<msg timestamp="20230309 17:48:55.215" level="INFO">${checksumbefore} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20230309 17:48:55.194" endtime="20230309 17:48:55.215"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:48:55.224" level="INFO">Running command 'md5sum /tmp/testfile.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:48:55.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:48:55.230" level="INFO">${output} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20230309 17:48:55.219" endtime="20230309 17:48:55.230"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:48:55.232" level="INFO">09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20230309 17:48:55.231" endtime="20230309 17:48:55.232"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:48:55.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:48:55.233" endtime="20230309 17:48:55.233"/>
</kw>
<status status="PASS" starttime="20230309 17:48:55.218" endtime="20230309 17:48:55.234"/>
</kw>
<msg timestamp="20230309 17:48:55.234" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:48:55.218" endtime="20230309 17:48:55.235"/>
</kw>
<msg timestamp="20230309 17:48:55.239" level="INFO">${checksumafter} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20230309 17:48:55.216" endtime="20230309 17:48:55.239"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 17:48:55.239" endtime="20230309 17:48:55.240"/>
</kw>
<status status="PASS" starttime="20230309 17:48:55.194" endtime="20230309 17:48:55.242"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:48:54.127" endtime="20230309 17:48:55.242"/>
</test>
<test id="s1-s5-s13-t3" name="Get object with wrong signature" line="49">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230309 17:48:55.247" endtime="20230309 17:48:55.248"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>curl -i -H 'Authorization: AWS scm/scm@EXAMPLE.COM:asdfqwerty' ${ENDPOINT_URL}/${BUCKET}/${PREFIX}/putobject/key=value/f1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:48:55.255" level="INFO">Running command 'curl -i -H 'Authorization: AWS scm/scm@EXAMPLE.COM:asdfqwerty' http://s3g:9878/encrypted/ozone-test-4930423984/putobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:48:55.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:48:55.319" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20230309 17:48:55.250" endtime="20230309 17:48:55.319"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:48:55.322" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
100   288  100   288    0     0  13615      0 --:--:-- --:--:-- --:--:-- 13714
HTTP/1.1 403 Forbidden
Date: Thu, 09 Mar 2023 17:48:55 GMT
Cache-Control: no-cache
Expires: Thu, 09 Mar 2023 17:48:55 GMT
Pragma: no-cache
Content-Type: text/plain
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Server: Ozone
x-amz-id-2: YCD42Tuh3hqH3S
x-amz-request-id: 1dc8548b-23ef-4745-a9f2-f99a1066ea5f
Content-Length: 288

&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;Error&gt;
  &lt;Code&gt;AccessDenied&lt;/Code&gt;
  &lt;Message&gt;User doesn't have the right to access this resource.&lt;/Message&gt;
  &lt;Resource&gt;ozone-test-4930423984/putobject/key=value/f1&lt;/Resource&gt;
  &lt;RequestId&gt;1dc8548b-23ef-4745-a9f2-f99a1066ea5f&lt;/RequestId&gt;
&lt;/Error&gt;</msg>
<status status="PASS" starttime="20230309 17:48:55.320" endtime="20230309 17:48:55.322"/>
</kw>
<msg timestamp="20230309 17:48:55.323" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20230309 17:48:55.248" endtime="20230309 17:48:55.323"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>403 Forbidden</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:48:55.323" endtime="20230309 17:48:55.324"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:48:55.244" endtime="20230309 17:48:55.325"/>
</test>
<test id="s1-s5-s13-t4" name="Get Partial object from s3 with both start and endoffset" line="54">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0-4 /tmp/testfile1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:48:55.335" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-4930423984/putobject/key=value/f1 --range bytes=0-4 /tmp/testfile1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:48:56.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:48:56.352" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:48:50 GMT",
    "ContentLength": 5,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-4/11",
    "ContentType": "appl...</msg>
<status status="PASS" starttime="20230309 17:48:55.332" endtime="20230309 17:48:56.352"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:48:56.355" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:48:50 GMT",
    "ContentLength": 5,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-4/11",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 09 Mar 2023 17:48:56 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230309 17:48:56.353" endtime="20230309 17:48:56.355"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:48:56.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:48:56.355" endtime="20230309 17:48:56.356"/>
</kw>
<status status="PASS" starttime="20230309 17:48:55.331" endtime="20230309 17:48:56.357"/>
</kw>
<msg timestamp="20230309 17:48:56.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:48:55.330" endtime="20230309 17:48:56.358"/>
</kw>
<msg timestamp="20230309 17:48:56.358" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:48:50 GMT",
    "ContentLength": 5,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-4/11",
    "ContentType": "appl...</msg>
<status status="PASS" starttime="20230309 17:48:55.329" endtime="20230309 17:48:56.358"/>
</kw>
<msg timestamp="20230309 17:48:56.360" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:48:50 GMT",
    "ContentLength": 5,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-4/11",
    "ContentType": "appl...</msg>
<status status="PASS" starttime="20230309 17:48:55.328" endtime="20230309 17:48:56.360"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:48:56.361" endtime="20230309 17:48:56.361"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:48:56.362" endtime="20230309 17:48:56.363"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:48:56.363" endtime="20230309 17:48:56.365"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=0 bs=1 count=5 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:48:56.382" level="INFO">Running command 'dd if=/tmp/testfile skip=0 bs=1 count=5 2&gt;/dev/null'.</msg>
<msg timestamp="20230309 17:48:56.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:48:56.398" level="INFO">${output} = Rando</msg>
<status status="PASS" starttime="20230309 17:48:56.370" endtime="20230309 17:48:56.398"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:48:56.400" level="INFO">Rando</msg>
<status status="PASS" starttime="20230309 17:48:56.399" endtime="20230309 17:48:56.400"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:48:56.402" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:48:56.400" endtime="20230309 17:48:56.402"/>
</kw>
<status status="PASS" starttime="20230309 17:48:56.368" endtime="20230309 17:48:56.402"/>
</kw>
<msg timestamp="20230309 17:48:56.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:48:56.367" endtime="20230309 17:48:56.403"/>
</kw>
<msg timestamp="20230309 17:48:56.405" level="INFO">${expectedData} = Rando</msg>
<status status="PASS" starttime="20230309 17:48:56.365" endtime="20230309 17:48:56.405"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:48:56.411" level="INFO">Running command 'cat /tmp/testfile1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:48:56.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:48:56.417" level="INFO">${output} = Rando</msg>
<status status="PASS" starttime="20230309 17:48:56.408" endtime="20230309 17:48:56.417"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:48:56.419" level="INFO">Rando</msg>
<status status="PASS" starttime="20230309 17:48:56.417" endtime="20230309 17:48:56.419"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:48:56.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:48:56.419" endtime="20230309 17:48:56.420"/>
</kw>
<status status="PASS" starttime="20230309 17:48:56.407" endtime="20230309 17:48:56.421"/>
</kw>
<msg timestamp="20230309 17:48:56.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:48:56.406" endtime="20230309 17:48:56.422"/>
</kw>
<msg timestamp="20230309 17:48:56.422" level="INFO">${actualData} = Rando</msg>
<status status="PASS" starttime="20230309 17:48:56.405" endtime="20230309 17:48:56.422"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 17:48:56.422" endtime="20230309 17:48:56.423"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=2-4 /tmp/testfile1.result1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:48:56.431" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-4930423984/putobject/key=value/f1 --range bytes=2-4 /tmp/testfile1.result1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:48:57.508" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:48:57.508" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:48:50 GMT",
    "ContentLength": 3,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-4/11",
    "ContentType": "appl...</msg>
<status status="PASS" starttime="20230309 17:48:56.429" endtime="20230309 17:48:57.509"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:48:57.510" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:48:50 GMT",
    "ContentLength": 3,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-4/11",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 09 Mar 2023 17:48:57 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230309 17:48:57.509" endtime="20230309 17:48:57.511"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:48:57.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:48:57.511" endtime="20230309 17:48:57.512"/>
</kw>
<status status="PASS" starttime="20230309 17:48:56.427" endtime="20230309 17:48:57.512"/>
</kw>
<msg timestamp="20230309 17:48:57.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:48:56.426" endtime="20230309 17:48:57.513"/>
</kw>
<msg timestamp="20230309 17:48:57.514" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:48:50 GMT",
    "ContentLength": 3,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-4/11",
    "ContentType": "appl...</msg>
<status status="PASS" starttime="20230309 17:48:56.424" endtime="20230309 17:48:57.514"/>
</kw>
<msg timestamp="20230309 17:48:57.514" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:48:50 GMT",
    "ContentLength": 3,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-4/11",
    "ContentType": "appl...</msg>
<status status="PASS" starttime="20230309 17:48:56.423" endtime="20230309 17:48:57.514"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:48:57.515" endtime="20230309 17:48:57.516"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 2-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:48:57.516" endtime="20230309 17:48:57.517"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:48:57.517" endtime="20230309 17:48:57.517"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=2 bs=1 count=3 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:48:57.523" level="INFO">Running command 'dd if=/tmp/testfile skip=2 bs=1 count=3 2&gt;/dev/null'.</msg>
<msg timestamp="20230309 17:48:57.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:48:57.528" level="INFO">${output} = ndo</msg>
<status status="PASS" starttime="20230309 17:48:57.520" endtime="20230309 17:48:57.528"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:48:57.529" level="INFO">ndo</msg>
<status status="PASS" starttime="20230309 17:48:57.529" endtime="20230309 17:48:57.530"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:48:57.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:48:57.530" endtime="20230309 17:48:57.531"/>
</kw>
<status status="PASS" starttime="20230309 17:48:57.519" endtime="20230309 17:48:57.532"/>
</kw>
<msg timestamp="20230309 17:48:57.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:48:57.518" endtime="20230309 17:48:57.533"/>
</kw>
<msg timestamp="20230309 17:48:57.533" level="INFO">${expectedData} = ndo</msg>
<status status="PASS" starttime="20230309 17:48:57.517" endtime="20230309 17:48:57.533"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:48:57.538" level="INFO">Running command 'cat /tmp/testfile1.result1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:48:57.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:48:57.541" level="INFO">${output} = ndo</msg>
<status status="PASS" starttime="20230309 17:48:57.535" endtime="20230309 17:48:57.542"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:48:57.543" level="INFO">ndo</msg>
<status status="PASS" starttime="20230309 17:48:57.542" endtime="20230309 17:48:57.543"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:48:57.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:48:57.543" endtime="20230309 17:48:57.544"/>
</kw>
<status status="PASS" starttime="20230309 17:48:57.535" endtime="20230309 17:48:57.544"/>
</kw>
<msg timestamp="20230309 17:48:57.545" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:48:57.534" endtime="20230309 17:48:57.545"/>
</kw>
<msg timestamp="20230309 17:48:57.545" level="INFO">${actualData} = ndo</msg>
<status status="PASS" starttime="20230309 17:48:57.533" endtime="20230309 17:48:57.545"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 17:48:57.546" endtime="20230309 17:48:57.546"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=2-1000 /tmp/testfile1.result2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:48:57.557" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-4930423984/putobject/key=value/f1 --range bytes=2-1000 /tmp/testfile1.result2 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:48:58.582" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:48:58.582" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:48:50 GMT",
    "ContentLength": 9,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-10/11",
    "ContentType": "app...</msg>
<status status="PASS" starttime="20230309 17:48:57.550" endtime="20230309 17:48:58.583"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:48:58.585" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:48:50 GMT",
    "ContentLength": 9,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 09 Mar 2023 17:48:58 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230309 17:48:58.583" endtime="20230309 17:48:58.585"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:48:58.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:48:58.585" endtime="20230309 17:48:58.586"/>
</kw>
<status status="PASS" starttime="20230309 17:48:57.549" endtime="20230309 17:48:58.587"/>
</kw>
<msg timestamp="20230309 17:48:58.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:48:57.549" endtime="20230309 17:48:58.588"/>
</kw>
<msg timestamp="20230309 17:48:58.588" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:48:50 GMT",
    "ContentLength": 9,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-10/11",
    "ContentType": "app...</msg>
<status status="PASS" starttime="20230309 17:48:57.548" endtime="20230309 17:48:58.589"/>
</kw>
<msg timestamp="20230309 17:48:58.589" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:48:50 GMT",
    "ContentLength": 9,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-10/11",
    "ContentType": "app...</msg>
<status status="PASS" starttime="20230309 17:48:57.547" endtime="20230309 17:48:58.589"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:48:58.589" endtime="20230309 17:48:58.590"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 2-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:48:58.590" endtime="20230309 17:48:58.591"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:48:58.591" endtime="20230309 17:48:58.591"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=2 bs=1 count=9 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:48:58.599" level="INFO">Running command 'dd if=/tmp/testfile skip=2 bs=1 count=9 2&gt;/dev/null'.</msg>
<msg timestamp="20230309 17:48:58.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:48:58.605" level="INFO">${output} = ndomtext</msg>
<status status="PASS" starttime="20230309 17:48:58.595" endtime="20230309 17:48:58.605"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:48:58.606" level="INFO">ndomtext</msg>
<status status="PASS" starttime="20230309 17:48:58.605" endtime="20230309 17:48:58.606"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:48:58.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:48:58.607" endtime="20230309 17:48:58.608"/>
</kw>
<status status="PASS" starttime="20230309 17:48:58.593" endtime="20230309 17:48:58.609"/>
</kw>
<msg timestamp="20230309 17:48:58.610" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:48:58.593" endtime="20230309 17:48:58.610"/>
</kw>
<msg timestamp="20230309 17:48:58.611" level="INFO">${expectedData} = ndomtext</msg>
<status status="PASS" starttime="20230309 17:48:58.592" endtime="20230309 17:48:58.611"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:48:58.617" level="INFO">Running command 'cat /tmp/testfile1.result2 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:48:58.620" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:48:58.620" level="INFO">${output} = ndomtext</msg>
<status status="PASS" starttime="20230309 17:48:58.613" endtime="20230309 17:48:58.620"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:48:58.622" level="INFO">ndomtext</msg>
<status status="PASS" starttime="20230309 17:48:58.621" endtime="20230309 17:48:58.622"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:48:58.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:48:58.622" endtime="20230309 17:48:58.623"/>
</kw>
<status status="PASS" starttime="20230309 17:48:58.613" endtime="20230309 17:48:58.624"/>
</kw>
<msg timestamp="20230309 17:48:58.624" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:48:58.612" endtime="20230309 17:48:58.625"/>
</kw>
<msg timestamp="20230309 17:48:58.626" level="INFO">${actualData} = ndomtext</msg>
<status status="PASS" starttime="20230309 17:48:58.611" endtime="20230309 17:48:58.626"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 17:48:58.626" endtime="20230309 17:48:58.627"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:48:55.327" endtime="20230309 17:48:58.627"/>
</test>
<test id="s1-s5-s13-t5" name="Get Partial object from s3 with both start and endoffset(start offset and endoffset is greater than file size)" line="80">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=10000-10000 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:48:58.637" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-4930423984/putobject/key=value/f1 --range bytes=10000-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:48:59.585" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:48:59.585" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20230309 17:48:58.634" endtime="20230309 17:48:59.585"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:48:59.587" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20230309 17:48:59.586" endtime="20230309 17:48:59.587"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:48:59.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:48:59.587" endtime="20230309 17:48:59.588"/>
</kw>
<msg timestamp="20230309 17:48:59.588" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20230309 17:48:58.632" endtime="20230309 17:48:59.588"/>
</kw>
<msg timestamp="20230309 17:48:59.589" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20230309 17:48:58.631" endtime="20230309 17:48:59.589"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:48:59.589" endtime="20230309 17:48:59.589"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:48:58.629" endtime="20230309 17:48:59.590"/>
</test>
<test id="s1-s5-s13-t6" name="Get Partial object from s3 with both start and endoffset(end offset is greater than file size)" line="85">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0-10000 /tmp/testfile2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:48:59.599" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-4930423984/putobject/key=value/f1 --range bytes=0-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:49:00.626" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:49:00.626" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:48:50 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "ap...</msg>
<status status="PASS" starttime="20230309 17:48:59.597" endtime="20230309 17:49:00.626"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:49:00.628" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:48:50 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 09 Mar 2023 17:49:00 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230309 17:49:00.627" endtime="20230309 17:49:00.628"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:49:00.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:49:00.628" endtime="20230309 17:49:00.630"/>
</kw>
<status status="PASS" starttime="20230309 17:48:59.595" endtime="20230309 17:49:00.631"/>
</kw>
<msg timestamp="20230309 17:49:00.631" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:48:59.594" endtime="20230309 17:49:00.632"/>
</kw>
<msg timestamp="20230309 17:49:00.633" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:48:50 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "ap...</msg>
<status status="PASS" starttime="20230309 17:48:59.593" endtime="20230309 17:49:00.633"/>
</kw>
<msg timestamp="20230309 17:49:00.633" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:48:50 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "ap...</msg>
<status status="PASS" starttime="20230309 17:48:59.592" endtime="20230309 17:49:00.633"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:49:00.634" endtime="20230309 17:49:00.634"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:49:00.634" endtime="20230309 17:49:00.635"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:49:00.636" endtime="20230309 17:49:00.636"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:49:00.642" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:49:00.646" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:49:00.646" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20230309 17:49:00.638" endtime="20230309 17:49:00.646"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:49:00.647" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20230309 17:49:00.647" endtime="20230309 17:49:00.648"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:49:00.648" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:49:00.648" endtime="20230309 17:49:00.648"/>
</kw>
<status status="PASS" starttime="20230309 17:49:00.637" endtime="20230309 17:49:00.649"/>
</kw>
<msg timestamp="20230309 17:49:00.649" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:49:00.637" endtime="20230309 17:49:00.650"/>
</kw>
<msg timestamp="20230309 17:49:00.650" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20230309 17:49:00.636" endtime="20230309 17:49:00.650"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile2.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:49:00.657" level="INFO">Running command 'cat /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:49:00.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:49:00.660" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20230309 17:49:00.652" endtime="20230309 17:49:00.660"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:49:00.662" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20230309 17:49:00.661" endtime="20230309 17:49:00.662"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:49:00.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:49:00.662" endtime="20230309 17:49:00.663"/>
</kw>
<status status="PASS" starttime="20230309 17:49:00.651" endtime="20230309 17:49:00.663"/>
</kw>
<msg timestamp="20230309 17:49:00.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:49:00.651" endtime="20230309 17:49:00.664"/>
</kw>
<msg timestamp="20230309 17:49:00.664" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20230309 17:49:00.650" endtime="20230309 17:49:00.664"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 17:49:00.665" endtime="20230309 17:49:00.666"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:48:59.591" endtime="20230309 17:49:00.666"/>
</test>
<test id="s1-s5-s13-t7" name="Get Partial object from s3 with only start offset" line="94">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0- /tmp/testfile3.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:49:00.676" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-4930423984/putobject/key=value/f1 --range bytes=0- /tmp/testfile3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:49:01.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:49:01.782" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:48:50 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "ap...</msg>
<status status="PASS" starttime="20230309 17:49:00.673" endtime="20230309 17:49:01.782"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:49:01.784" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:48:50 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 09 Mar 2023 17:49:01 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230309 17:49:01.782" endtime="20230309 17:49:01.784"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:49:01.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:49:01.785" endtime="20230309 17:49:01.786"/>
</kw>
<status status="PASS" starttime="20230309 17:49:00.672" endtime="20230309 17:49:01.786"/>
</kw>
<msg timestamp="20230309 17:49:01.786" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:49:00.671" endtime="20230309 17:49:01.787"/>
</kw>
<msg timestamp="20230309 17:49:01.788" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:48:50 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "ap...</msg>
<status status="PASS" starttime="20230309 17:49:00.670" endtime="20230309 17:49:01.788"/>
</kw>
<msg timestamp="20230309 17:49:01.789" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:48:50 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "ap...</msg>
<status status="PASS" starttime="20230309 17:49:00.669" endtime="20230309 17:49:01.789"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:49:01.789" endtime="20230309 17:49:01.790"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:49:01.791" endtime="20230309 17:49:01.792"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:49:01.792" endtime="20230309 17:49:01.793"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:49:01.801" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:49:01.805" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:49:01.805" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20230309 17:49:01.796" endtime="20230309 17:49:01.805"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:49:01.807" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20230309 17:49:01.806" endtime="20230309 17:49:01.807"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:49:01.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:49:01.808" endtime="20230309 17:49:01.809"/>
</kw>
<status status="PASS" starttime="20230309 17:49:01.796" endtime="20230309 17:49:01.809"/>
</kw>
<msg timestamp="20230309 17:49:01.809" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:49:01.794" endtime="20230309 17:49:01.810"/>
</kw>
<msg timestamp="20230309 17:49:01.810" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20230309 17:49:01.793" endtime="20230309 17:49:01.811"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile3.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:49:01.816" level="INFO">Running command 'cat /tmp/testfile3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:49:01.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:49:01.821" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20230309 17:49:01.813" endtime="20230309 17:49:01.821"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:49:01.823" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20230309 17:49:01.822" endtime="20230309 17:49:01.823"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:49:01.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:49:01.823" endtime="20230309 17:49:01.824"/>
</kw>
<status status="PASS" starttime="20230309 17:49:01.812" endtime="20230309 17:49:01.826"/>
</kw>
<msg timestamp="20230309 17:49:01.826" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:49:01.812" endtime="20230309 17:49:01.827"/>
</kw>
<msg timestamp="20230309 17:49:01.827" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20230309 17:49:01.811" endtime="20230309 17:49:01.827"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 17:49:01.828" endtime="20230309 17:49:01.828"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:49:00.668" endtime="20230309 17:49:01.829"/>
</test>
<test id="s1-s5-s13-t8" name="Get Partial object from s3 with both start and endoffset which are equal" line="103">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0-0 /tmp/testfile4.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:49:01.840" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-4930423984/putobject/key=value/f1 --range bytes=0-0 /tmp/testfile4.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:49:02.804" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:49:02.804" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:48:50 GMT",
    "ContentLength": 1,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-0/11",
    "ContentType": "appl...</msg>
<status status="PASS" starttime="20230309 17:49:01.837" endtime="20230309 17:49:02.805"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:49:02.807" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:48:50 GMT",
    "ContentLength": 1,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-0/11",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 09 Mar 2023 17:49:02 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230309 17:49:02.806" endtime="20230309 17:49:02.807"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:49:02.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:49:02.808" endtime="20230309 17:49:02.809"/>
</kw>
<status status="PASS" starttime="20230309 17:49:01.835" endtime="20230309 17:49:02.810"/>
</kw>
<msg timestamp="20230309 17:49:02.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:49:01.835" endtime="20230309 17:49:02.811"/>
</kw>
<msg timestamp="20230309 17:49:02.812" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:48:50 GMT",
    "ContentLength": 1,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-0/11",
    "ContentType": "appl...</msg>
<status status="PASS" starttime="20230309 17:49:01.834" endtime="20230309 17:49:02.812"/>
</kw>
<msg timestamp="20230309 17:49:02.813" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:48:50 GMT",
    "ContentLength": 1,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-0/11",
    "ContentType": "appl...</msg>
<status status="PASS" starttime="20230309 17:49:01.833" endtime="20230309 17:49:02.813"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:49:02.813" endtime="20230309 17:49:02.814"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-0/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:49:02.815" endtime="20230309 17:49:02.815"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:49:02.816" endtime="20230309 17:49:02.817"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=0 bs=1 count=1 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:49:02.825" level="INFO">Running command 'dd if=/tmp/testfile skip=0 bs=1 count=1 2&gt;/dev/null'.</msg>
<msg timestamp="20230309 17:49:02.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:49:02.830" level="INFO">${output} = R</msg>
<status status="PASS" starttime="20230309 17:49:02.821" endtime="20230309 17:49:02.830"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:49:02.833" level="INFO">R</msg>
<status status="PASS" starttime="20230309 17:49:02.831" endtime="20230309 17:49:02.833"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:49:02.834" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:49:02.833" endtime="20230309 17:49:02.834"/>
</kw>
<status status="PASS" starttime="20230309 17:49:02.819" endtime="20230309 17:49:02.835"/>
</kw>
<msg timestamp="20230309 17:49:02.835" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:49:02.818" endtime="20230309 17:49:02.835"/>
</kw>
<msg timestamp="20230309 17:49:02.836" level="INFO">${expectedData} = R</msg>
<status status="PASS" starttime="20230309 17:49:02.817" endtime="20230309 17:49:02.836"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile4.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:49:02.844" level="INFO">Running command 'cat /tmp/testfile4.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:49:02.848" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:49:02.848" level="INFO">${output} = R</msg>
<status status="PASS" starttime="20230309 17:49:02.839" endtime="20230309 17:49:02.848"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:49:02.849" level="INFO">R</msg>
<status status="PASS" starttime="20230309 17:49:02.849" endtime="20230309 17:49:02.849"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:49:02.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:49:02.850" endtime="20230309 17:49:02.851"/>
</kw>
<status status="PASS" starttime="20230309 17:49:02.838" endtime="20230309 17:49:02.851"/>
</kw>
<msg timestamp="20230309 17:49:02.852" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:49:02.837" endtime="20230309 17:49:02.853"/>
</kw>
<msg timestamp="20230309 17:49:02.853" level="INFO">${actualData} = R</msg>
<status status="PASS" starttime="20230309 17:49:02.836" endtime="20230309 17:49:02.853"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 17:49:02.854" endtime="20230309 17:49:02.855"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=4-4 /tmp/testfile5.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:49:02.862" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-4930423984/putobject/key=value/f1 --range bytes=4-4 /tmp/testfile5.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:49:04.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:49:04.055" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:48:50 GMT",
    "ContentLength": 1,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 4-4/11",
    "ContentType": "appl...</msg>
<status status="PASS" starttime="20230309 17:49:02.859" endtime="20230309 17:49:04.055"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:49:04.058" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:48:50 GMT",
    "ContentLength": 1,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 4-4/11",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 09 Mar 2023 17:49:03 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230309 17:49:04.056" endtime="20230309 17:49:04.058"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:49:04.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:49:04.058" endtime="20230309 17:49:04.060"/>
</kw>
<status status="PASS" starttime="20230309 17:49:02.858" endtime="20230309 17:49:04.060"/>
</kw>
<msg timestamp="20230309 17:49:04.060" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:49:02.857" endtime="20230309 17:49:04.062"/>
</kw>
<msg timestamp="20230309 17:49:04.062" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:48:50 GMT",
    "ContentLength": 1,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 4-4/11",
    "ContentType": "appl...</msg>
<status status="PASS" starttime="20230309 17:49:02.856" endtime="20230309 17:49:04.062"/>
</kw>
<msg timestamp="20230309 17:49:04.065" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:48:50 GMT",
    "ContentLength": 1,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 4-4/11",
    "ContentType": "appl...</msg>
<status status="PASS" starttime="20230309 17:49:02.855" endtime="20230309 17:49:04.065"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:49:04.067" endtime="20230309 17:49:04.070"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 4-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:49:04.070" endtime="20230309 17:49:04.072"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:49:04.073" endtime="20230309 17:49:04.073"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=4 bs=1 count=1 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:49:04.093" level="INFO">Running command 'dd if=/tmp/testfile skip=4 bs=1 count=1 2&gt;/dev/null'.</msg>
<msg timestamp="20230309 17:49:04.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:49:04.104" level="INFO">${output} = o</msg>
<status status="PASS" starttime="20230309 17:49:04.082" endtime="20230309 17:49:04.104"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:49:04.106" level="INFO">o</msg>
<status status="PASS" starttime="20230309 17:49:04.105" endtime="20230309 17:49:04.106"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:49:04.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:49:04.106" endtime="20230309 17:49:04.108"/>
</kw>
<status status="PASS" starttime="20230309 17:49:04.079" endtime="20230309 17:49:04.108"/>
</kw>
<msg timestamp="20230309 17:49:04.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:49:04.078" endtime="20230309 17:49:04.109"/>
</kw>
<msg timestamp="20230309 17:49:04.110" level="INFO">${expectedData} = o</msg>
<status status="PASS" starttime="20230309 17:49:04.075" endtime="20230309 17:49:04.110"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile5.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:49:04.128" level="INFO">Running command 'cat /tmp/testfile5.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:49:04.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:49:04.138" level="INFO">${output} = o</msg>
<status status="PASS" starttime="20230309 17:49:04.116" endtime="20230309 17:49:04.139"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:49:04.141" level="INFO">o</msg>
<status status="PASS" starttime="20230309 17:49:04.139" endtime="20230309 17:49:04.141"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:49:04.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:49:04.141" endtime="20230309 17:49:04.142"/>
</kw>
<status status="PASS" starttime="20230309 17:49:04.114" endtime="20230309 17:49:04.143"/>
</kw>
<msg timestamp="20230309 17:49:04.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:49:04.112" endtime="20230309 17:49:04.145"/>
</kw>
<msg timestamp="20230309 17:49:04.145" level="INFO">${actualData} = o</msg>
<status status="PASS" starttime="20230309 17:49:04.110" endtime="20230309 17:49:04.145"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 17:49:04.147" endtime="20230309 17:49:04.149"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:49:01.831" endtime="20230309 17:49:04.149"/>
</test>
<test id="s1-s5-s13-t9" name="Get Partial object from s3 to get last n bytes" line="120">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=-4 /tmp/testfile6.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:49:04.175" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-4930423984/putobject/key=value/f1 --range bytes=-4 /tmp/testfile6.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:49:05.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:49:05.467" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:48:50 GMT",
    "ContentLength": 4,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 7-10/11",
    "ContentType": "app...</msg>
<status status="PASS" starttime="20230309 17:49:04.163" endtime="20230309 17:49:05.467"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:49:05.470" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:48:50 GMT",
    "ContentLength": 4,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 7-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 09 Mar 2023 17:49:05 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230309 17:49:05.468" endtime="20230309 17:49:05.470"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:49:05.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:49:05.471" endtime="20230309 17:49:05.477"/>
</kw>
<status status="PASS" starttime="20230309 17:49:04.161" endtime="20230309 17:49:05.477"/>
</kw>
<msg timestamp="20230309 17:49:05.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:49:04.160" endtime="20230309 17:49:05.478"/>
</kw>
<msg timestamp="20230309 17:49:05.479" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:48:50 GMT",
    "ContentLength": 4,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 7-10/11",
    "ContentType": "app...</msg>
<status status="PASS" starttime="20230309 17:49:04.159" endtime="20230309 17:49:05.479"/>
</kw>
<msg timestamp="20230309 17:49:05.479" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:48:50 GMT",
    "ContentLength": 4,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 7-10/11",
    "ContentType": "app...</msg>
<status status="PASS" starttime="20230309 17:49:04.154" endtime="20230309 17:49:05.479"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:49:05.480" endtime="20230309 17:49:05.480"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 7-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:49:05.480" endtime="20230309 17:49:05.481"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:49:05.481" endtime="20230309 17:49:05.481"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=7 bs=1 count=4 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:49:05.490" level="INFO">Running command 'dd if=/tmp/testfile skip=7 bs=1 count=4 2&gt;/dev/null'.</msg>
<msg timestamp="20230309 17:49:05.494" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:49:05.494" level="INFO">${output} = ext</msg>
<status status="PASS" starttime="20230309 17:49:05.485" endtime="20230309 17:49:05.494"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:49:05.496" level="INFO">ext</msg>
<status status="PASS" starttime="20230309 17:49:05.495" endtime="20230309 17:49:05.496"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:49:05.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:49:05.496" endtime="20230309 17:49:05.501"/>
</kw>
<status status="PASS" starttime="20230309 17:49:05.483" endtime="20230309 17:49:05.501"/>
</kw>
<msg timestamp="20230309 17:49:05.502" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:49:05.482" endtime="20230309 17:49:05.502"/>
</kw>
<msg timestamp="20230309 17:49:05.503" level="INFO">${expectedData} = ext</msg>
<status status="PASS" starttime="20230309 17:49:05.481" endtime="20230309 17:49:05.503"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile6.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:49:05.508" level="INFO">Running command 'cat /tmp/testfile6.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:49:05.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:49:05.513" level="INFO">${output} = ext</msg>
<status status="PASS" starttime="20230309 17:49:05.505" endtime="20230309 17:49:05.513"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:49:05.514" level="INFO">ext</msg>
<status status="PASS" starttime="20230309 17:49:05.513" endtime="20230309 17:49:05.514"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:49:05.516" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:49:05.514" endtime="20230309 17:49:05.516"/>
</kw>
<status status="PASS" starttime="20230309 17:49:05.504" endtime="20230309 17:49:05.516"/>
</kw>
<msg timestamp="20230309 17:49:05.517" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:49:05.504" endtime="20230309 17:49:05.517"/>
</kw>
<msg timestamp="20230309 17:49:05.518" level="INFO">${actualData} = ext</msg>
<status status="PASS" starttime="20230309 17:49:05.503" endtime="20230309 17:49:05.518"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 17:49:05.518" endtime="20230309 17:49:05.519"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=-10000 /tmp/testfile7.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:49:05.528" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-4930423984/putobject/key=value/f1 --range bytes=-10000 /tmp/testfile7.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:49:06.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:49:06.549" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:48:50 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "ap...</msg>
<status status="PASS" starttime="20230309 17:49:05.524" endtime="20230309 17:49:06.549"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:49:06.551" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:48:50 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 09 Mar 2023 17:49:06 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230309 17:49:06.550" endtime="20230309 17:49:06.552"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:49:06.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:49:06.552" endtime="20230309 17:49:06.553"/>
</kw>
<status status="PASS" starttime="20230309 17:49:05.523" endtime="20230309 17:49:06.553"/>
</kw>
<msg timestamp="20230309 17:49:06.553" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:49:05.523" endtime="20230309 17:49:06.554"/>
</kw>
<msg timestamp="20230309 17:49:06.555" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:48:50 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "ap...</msg>
<status status="PASS" starttime="20230309 17:49:05.522" endtime="20230309 17:49:06.555"/>
</kw>
<msg timestamp="20230309 17:49:06.555" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:48:50 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "ap...</msg>
<status status="PASS" starttime="20230309 17:49:05.520" endtime="20230309 17:49:06.555"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:49:06.556" endtime="20230309 17:49:06.557"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:49:06.558" endtime="20230309 17:49:06.559"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:49:06.559" endtime="20230309 17:49:06.560"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:49:06.568" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:49:06.572" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:49:06.572" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20230309 17:49:06.563" endtime="20230309 17:49:06.572"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:49:06.573" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20230309 17:49:06.573" endtime="20230309 17:49:06.574"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:49:06.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:49:06.574" endtime="20230309 17:49:06.575"/>
</kw>
<status status="PASS" starttime="20230309 17:49:06.562" endtime="20230309 17:49:06.575"/>
</kw>
<msg timestamp="20230309 17:49:06.575" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:49:06.561" endtime="20230309 17:49:06.575"/>
</kw>
<msg timestamp="20230309 17:49:06.576" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20230309 17:49:06.560" endtime="20230309 17:49:06.576"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile7.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:49:06.582" level="INFO">Running command 'cat /tmp/testfile7.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:49:06.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:49:06.585" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20230309 17:49:06.578" endtime="20230309 17:49:06.585"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:49:06.586" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20230309 17:49:06.585" endtime="20230309 17:49:06.586"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:49:06.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:49:06.586" endtime="20230309 17:49:06.587"/>
</kw>
<status status="PASS" starttime="20230309 17:49:06.577" endtime="20230309 17:49:06.587"/>
</kw>
<msg timestamp="20230309 17:49:06.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:49:06.577" endtime="20230309 17:49:06.588"/>
</kw>
<msg timestamp="20230309 17:49:06.588" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20230309 17:49:06.576" endtime="20230309 17:49:06.588"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 17:49:06.588" endtime="20230309 17:49:06.589"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:49:04.152" endtime="20230309 17:49:06.589"/>
</test>
<test id="s1-s5-s13-t10" name="Incorrect values for end and start offset" line="138">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=-11-10000 /tmp/testfile8.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:49:06.606" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-4930423984/putobject/key=value/f1 --range bytes=-11-10000 /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:49:07.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:49:07.629" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:48:50 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230309 17:49:06.600" endtime="20230309 17:49:07.629"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:49:07.631" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:48:50 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 09 Mar 2023 17:49:07 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230309 17:49:07.630" endtime="20230309 17:49:07.631"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:49:07.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:49:07.631" endtime="20230309 17:49:07.632"/>
</kw>
<status status="PASS" starttime="20230309 17:49:06.594" endtime="20230309 17:49:07.633"/>
</kw>
<msg timestamp="20230309 17:49:07.633" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:49:06.594" endtime="20230309 17:49:07.633"/>
</kw>
<msg timestamp="20230309 17:49:07.634" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:48:50 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230309 17:49:06.593" endtime="20230309 17:49:07.634"/>
</kw>
<msg timestamp="20230309 17:49:07.634" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:48:50 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230309 17:49:06.592" endtime="20230309 17:49:07.634"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:49:07.635" endtime="20230309 17:49:07.635"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:49:07.636" endtime="20230309 17:49:07.636"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:49:07.642" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:49:07.646" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:49:07.646" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20230309 17:49:07.639" endtime="20230309 17:49:07.646"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:49:07.648" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20230309 17:49:07.647" endtime="20230309 17:49:07.649"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:49:07.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:49:07.649" endtime="20230309 17:49:07.650"/>
</kw>
<status status="PASS" starttime="20230309 17:49:07.638" endtime="20230309 17:49:07.651"/>
</kw>
<msg timestamp="20230309 17:49:07.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:49:07.637" endtime="20230309 17:49:07.652"/>
</kw>
<msg timestamp="20230309 17:49:07.653" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20230309 17:49:07.636" endtime="20230309 17:49:07.653"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile8.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:49:07.660" level="INFO">Running command 'cat /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:49:07.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:49:07.665" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20230309 17:49:07.656" endtime="20230309 17:49:07.665"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:49:07.667" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20230309 17:49:07.665" endtime="20230309 17:49:07.667"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:49:07.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:49:07.667" endtime="20230309 17:49:07.668"/>
</kw>
<status status="PASS" starttime="20230309 17:49:07.655" endtime="20230309 17:49:07.669"/>
</kw>
<msg timestamp="20230309 17:49:07.669" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:49:07.655" endtime="20230309 17:49:07.670"/>
</kw>
<msg timestamp="20230309 17:49:07.671" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20230309 17:49:07.653" endtime="20230309 17:49:07.671"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 17:49:07.671" endtime="20230309 17:49:07.672"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=11-8 /tmp/testfile9.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:49:07.680" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-4930423984/putobject/key=value/f1 --range bytes=11-8 /tmp/testfile9.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:49:08.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:49:08.793" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:48:50 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230309 17:49:07.677" endtime="20230309 17:49:08.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:49:08.795" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:48:50 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 09 Mar 2023 17:49:08 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230309 17:49:08.794" endtime="20230309 17:49:08.795"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:49:08.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:49:08.795" endtime="20230309 17:49:08.796"/>
</kw>
<status status="PASS" starttime="20230309 17:49:07.675" endtime="20230309 17:49:08.797"/>
</kw>
<msg timestamp="20230309 17:49:08.797" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:49:07.674" endtime="20230309 17:49:08.798"/>
</kw>
<msg timestamp="20230309 17:49:08.799" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:48:50 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230309 17:49:07.673" endtime="20230309 17:49:08.799"/>
</kw>
<msg timestamp="20230309 17:49:08.799" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:48:50 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230309 17:49:07.672" endtime="20230309 17:49:08.800"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:49:08.800" endtime="20230309 17:49:08.803"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:49:08.803" endtime="20230309 17:49:08.804"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:49:08.814" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:49:08.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:49:08.818" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20230309 17:49:08.808" endtime="20230309 17:49:08.818"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:49:08.821" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20230309 17:49:08.819" endtime="20230309 17:49:08.821"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:49:08.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:49:08.821" endtime="20230309 17:49:08.823"/>
</kw>
<status status="PASS" starttime="20230309 17:49:08.806" endtime="20230309 17:49:08.825"/>
</kw>
<msg timestamp="20230309 17:49:08.825" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:49:08.806" endtime="20230309 17:49:08.825"/>
</kw>
<msg timestamp="20230309 17:49:08.828" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20230309 17:49:08.805" endtime="20230309 17:49:08.828"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile8.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:49:08.838" level="INFO">Running command 'cat /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:49:08.848" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:49:08.849" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20230309 17:49:08.831" endtime="20230309 17:49:08.849"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:49:08.852" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20230309 17:49:08.850" endtime="20230309 17:49:08.852"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:49:08.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:49:08.853" endtime="20230309 17:49:08.854"/>
</kw>
<status status="PASS" starttime="20230309 17:49:08.831" endtime="20230309 17:49:08.857"/>
</kw>
<msg timestamp="20230309 17:49:08.857" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:49:08.829" endtime="20230309 17:49:08.857"/>
</kw>
<msg timestamp="20230309 17:49:08.859" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20230309 17:49:08.828" endtime="20230309 17:49:08.859"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 17:49:08.859" endtime="20230309 17:49:08.861"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:49:06.591" endtime="20230309 17:49:08.861"/>
</test>
<test id="s1-s5-s13-t11" name="Zero byte file" line="153">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --range bytes=0-0 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:49:08.874" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-4930423984/putobject/key=value/zerobyte --range bytes=0-0 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:49:09.988" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:49:09.988" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20230309 17:49:08.869" endtime="20230309 17:49:09.988"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:49:09.990" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20230309 17:49:09.989" endtime="20230309 17:49:09.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:49:09.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:49:09.990" endtime="20230309 17:49:09.991"/>
</kw>
<msg timestamp="20230309 17:49:09.991" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20230309 17:49:08.867" endtime="20230309 17:49:09.991"/>
</kw>
<msg timestamp="20230309 17:49:09.992" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20230309 17:49:08.865" endtime="20230309 17:49:09.992"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:49:09.992" endtime="20230309 17:49:09.992"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --range bytes=0-1 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:49:09.998" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-4930423984/putobject/key=value/zerobyte --range bytes=0-1 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:49:11.048" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:49:11.048" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20230309 17:49:09.994" endtime="20230309 17:49:11.048"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:49:11.050" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20230309 17:49:11.049" endtime="20230309 17:49:11.050"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:49:11.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:49:11.051" endtime="20230309 17:49:11.052"/>
</kw>
<msg timestamp="20230309 17:49:11.052" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20230309 17:49:09.994" endtime="20230309 17:49:11.052"/>
</kw>
<msg timestamp="20230309 17:49:11.053" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20230309 17:49:09.993" endtime="20230309 17:49:11.053"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:49:11.053" endtime="20230309 17:49:11.054"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --range bytes=0-10000 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:49:11.062" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-4930423984/putobject/key=value/zerobyte --range bytes=0-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:49:12.132" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:49:12.132" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20230309 17:49:11.058" endtime="20230309 17:49:12.132"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:49:12.134" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20230309 17:49:12.133" endtime="20230309 17:49:12.134"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:49:12.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:49:12.134" endtime="20230309 17:49:12.135"/>
</kw>
<msg timestamp="20230309 17:49:12.136" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20230309 17:49:11.055" endtime="20230309 17:49:12.136"/>
</kw>
<msg timestamp="20230309 17:49:12.136" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20230309 17:49:11.054" endtime="20230309 17:49:12.136"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:49:12.137" endtime="20230309 17:49:12.137"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:49:08.864" endtime="20230309 17:49:12.138"/>
</test>
<test id="s1-s5-s13-t12" name="Create file with user defined metadata" line="163">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:49:12.148" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile2'.</msg>
<msg timestamp="20230309 17:49:12.151" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:49:12.152" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:49:12.143" endtime="20230309 17:49:12.152"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:49:12.153" level="INFO"/>
<status status="PASS" starttime="20230309 17:49:12.152" endtime="20230309 17:49:12.154"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:49:12.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:49:12.154" endtime="20230309 17:49:12.155"/>
</kw>
<status status="PASS" starttime="20230309 17:49:12.142" endtime="20230309 17:49:12.156"/>
</kw>
<msg timestamp="20230309 17:49:12.156" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:49:12.142" endtime="20230309 17:49:12.157"/>
</kw>
<status status="PASS" starttime="20230309 17:49:12.141" endtime="20230309 17:49:12.157"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key1 --body /tmp/testfile2 --metadata="custom-key1=custom-value1,custom-key2=custom-value2"</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:49:12.166" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-4930423984/putobject/custom-metadata/key1 --body /tmp/testfile2 --metadata="custom-key1=custom-value1,custom-key2=custom-value2" 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:49:13.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:49:13.441" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:49:12.162" endtime="20230309 17:49:13.441"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:49:13.443" level="INFO"/>
<status status="PASS" starttime="20230309 17:49:13.442" endtime="20230309 17:49:13.444"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:49:13.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:49:13.444" endtime="20230309 17:49:13.446"/>
</kw>
<status status="PASS" starttime="20230309 17:49:12.160" endtime="20230309 17:49:13.447"/>
</kw>
<msg timestamp="20230309 17:49:13.447" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:49:12.159" endtime="20230309 17:49:13.449"/>
</kw>
<msg timestamp="20230309 17:49:13.450" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:49:12.159" endtime="20230309 17:49:13.450"/>
</kw>
<status status="PASS" starttime="20230309 17:49:12.157" endtime="20230309 17:49:13.451"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:49:13.462" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-4930423984/putobject/custom-metadata/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:49:14.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:49:14.537" level="INFO">${output} = {
    "LastModified": "Thu, 09 Mar 2023 17:49:13 GMT",
    "ContentLength": 11,
    "ETag": "2023-03-09T17:49:13.291Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "E...</msg>
<status status="PASS" starttime="20230309 17:49:13.457" endtime="20230309 17:49:14.537"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:49:14.539" level="INFO">{
    "LastModified": "Thu, 09 Mar 2023 17:49:13 GMT",
    "ContentLength": 11,
    "ETag": "2023-03-09T17:49:13.291Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Thu, 09 Mar 2023 17:49:14 GMT",
    "Metadata": {
        "custom-key1": "custom-value1",
        "custom-key2": "custom-value2"
    }
}</msg>
<status status="PASS" starttime="20230309 17:49:14.538" endtime="20230309 17:49:14.539"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:49:14.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:49:14.540" endtime="20230309 17:49:14.540"/>
</kw>
<status status="PASS" starttime="20230309 17:49:13.456" endtime="20230309 17:49:14.541"/>
</kw>
<msg timestamp="20230309 17:49:14.541" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:49:13.455" endtime="20230309 17:49:14.542"/>
</kw>
<msg timestamp="20230309 17:49:14.543" level="INFO">${output} = {
    "LastModified": "Thu, 09 Mar 2023 17:49:13 GMT",
    "ContentLength": 11,
    "ETag": "2023-03-09T17:49:13.291Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "E...</msg>
<status status="PASS" starttime="20230309 17:49:13.454" endtime="20230309 17:49:14.543"/>
</kw>
<msg timestamp="20230309 17:49:14.543" level="INFO">${result} = {
    "LastModified": "Thu, 09 Mar 2023 17:49:13 GMT",
    "ContentLength": 11,
    "ETag": "2023-03-09T17:49:13.291Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "E...</msg>
<status status="PASS" starttime="20230309 17:49:13.451" endtime="20230309 17:49:14.543"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key1\": \"custom-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:49:14.544" endtime="20230309 17:49:14.544"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\": \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:49:14.545" endtime="20230309 17:49:14.545"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /s3v/${BUCKET}/${PREFIX}/putobject/custom-metadata/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:49:14.552" level="INFO">Running command 'ozone sh key info /s3v/encrypted/ozone-test-4930423984/putobject/custom-metadata/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:49:26.805" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:49:26.805" level="INFO">${output} = {
  "volumeName" : "s3v",
  "bucketName" : "encrypted",
  "name" : "ozone-test-4930423984/putobject/custom-metadata/key1",
  "dataSize" : 11,
  "creationTime" : "2023-03-09T17:49:13.127Z",
  "modifica...</msg>
<status status="PASS" starttime="20230309 17:49:14.548" endtime="20230309 17:49:26.805"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:49:26.808" level="INFO">{
  "volumeName" : "s3v",
  "bucketName" : "encrypted",
  "name" : "ozone-test-4930423984/putobject/custom-metadata/key1",
  "dataSize" : 11,
  "creationTime" : "2023-03-09T17:49:13.127Z",
  "modificationTime" : "2023-03-09T17:49:13.291Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : {
    "custom-key1" : "custom-value1",
    "custom-key2" : "custom-value2"
  },
  "ozoneKeyLocations" : [ {
    "containerID" : 1,
    "localID" : 111677748019200099,
    "length" : 11,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "fileEncryptionInfo" : {
    "cipherSuite" : "AES_CTR_NOPADDING",
    "iv" : "Yfww4HhJU8fUMkzYL9KhYg==",
    "keyName" : "key1",
    "ezKeyVersionName" : "key1@0",
    "cryptoProtocolVersion" : "ENCRYPTION_ZONES",
    "encryptedDataEncryptionKey" : "8ChO0pWiIIOMP1iQ6VEKhw=="
  }
}</msg>
<status status="PASS" starttime="20230309 17:49:26.807" endtime="20230309 17:49:26.810"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:49:26.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:49:26.810" endtime="20230309 17:49:26.811"/>
</kw>
<status status="PASS" starttime="20230309 17:49:14.548" endtime="20230309 17:49:26.811"/>
</kw>
<msg timestamp="20230309 17:49:26.811" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:49:14.547" endtime="20230309 17:49:26.812"/>
</kw>
<msg timestamp="20230309 17:49:26.813" level="INFO">${result} = {
  "volumeName" : "s3v",
  "bucketName" : "encrypted",
  "name" : "ozone-test-4930423984/putobject/custom-metadata/key1",
  "dataSize" : 11,
  "creationTime" : "2023-03-09T17:49:13.127Z",
  "modifica...</msg>
<status status="PASS" starttime="20230309 17:49:14.546" endtime="20230309 17:49:26.813"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key1\" : \"custom-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:49:26.813" endtime="20230309 17:49:26.814"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\" : \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:49:26.814" endtime="20230309 17:49:26.816"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:49:12.139" endtime="20230309 17:49:26.817"/>
</test>
<test id="s1-s5-s13-t13" name="Create file with user defined metadata with gdpr enabled value in request" line="175">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:49:26.826" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile2'.</msg>
<msg timestamp="20230309 17:49:26.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:49:26.830" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:49:26.823" endtime="20230309 17:49:26.830"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:49:26.831" level="INFO"/>
<status status="PASS" starttime="20230309 17:49:26.830" endtime="20230309 17:49:26.832"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:49:26.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:49:26.832" endtime="20230309 17:49:26.833"/>
</kw>
<status status="PASS" starttime="20230309 17:49:26.823" endtime="20230309 17:49:26.833"/>
</kw>
<msg timestamp="20230309 17:49:26.833" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:49:26.822" endtime="20230309 17:49:26.834"/>
</kw>
<status status="PASS" starttime="20230309 17:49:26.821" endtime="20230309 17:49:26.834"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="gdprEnabled=true,custom-key2=custom-value2"</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:49:26.842" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-4930423984/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="gdprEnabled=true,custom-key2=custom-value2" 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:49:28.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:49:28.050" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:49:26.838" endtime="20230309 17:49:28.050"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:49:28.052" level="INFO"/>
<status status="PASS" starttime="20230309 17:49:28.051" endtime="20230309 17:49:28.052"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:49:28.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:49:28.053" endtime="20230309 17:49:28.055"/>
</kw>
<status status="PASS" starttime="20230309 17:49:26.837" endtime="20230309 17:49:28.059"/>
</kw>
<msg timestamp="20230309 17:49:28.059" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:49:26.837" endtime="20230309 17:49:28.060"/>
</kw>
<msg timestamp="20230309 17:49:28.063" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:49:26.836" endtime="20230309 17:49:28.063"/>
</kw>
<status status="PASS" starttime="20230309 17:49:26.834" endtime="20230309 17:49:28.064"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:49:28.075" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-4930423984/putobject/custom-metadata/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:49:29.088" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:49:29.088" level="INFO">${output} = {
    "LastModified": "Thu, 09 Mar 2023 17:49:27 GMT",
    "ContentLength": 11,
    "ETag": "2023-03-09T17:49:27.934Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "E...</msg>
<status status="PASS" starttime="20230309 17:49:28.071" endtime="20230309 17:49:29.088"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:49:29.091" level="INFO">{
    "LastModified": "Thu, 09 Mar 2023 17:49:27 GMT",
    "ContentLength": 11,
    "ETag": "2023-03-09T17:49:27.934Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Thu, 09 Mar 2023 17:49:28 GMT",
    "Metadata": {
        "custom-key2": "custom-value2"
    }
}</msg>
<status status="PASS" starttime="20230309 17:49:29.089" endtime="20230309 17:49:29.091"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:49:29.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:49:29.092" endtime="20230309 17:49:29.093"/>
</kw>
<status status="PASS" starttime="20230309 17:49:28.068" endtime="20230309 17:49:29.093"/>
</kw>
<msg timestamp="20230309 17:49:29.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:49:28.068" endtime="20230309 17:49:29.094"/>
</kw>
<msg timestamp="20230309 17:49:29.095" level="INFO">${output} = {
    "LastModified": "Thu, 09 Mar 2023 17:49:27 GMT",
    "ContentLength": 11,
    "ETag": "2023-03-09T17:49:27.934Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "E...</msg>
<status status="PASS" starttime="20230309 17:49:28.065" endtime="20230309 17:49:29.095"/>
</kw>
<msg timestamp="20230309 17:49:29.096" level="INFO">${result} = {
    "LastModified": "Thu, 09 Mar 2023 17:49:27 GMT",
    "ContentLength": 11,
    "ETag": "2023-03-09T17:49:27.934Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "E...</msg>
<status status="PASS" starttime="20230309 17:49:28.064" endtime="20230309 17:49:29.096"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\": \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:49:29.096" endtime="20230309 17:49:29.097"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"gdprEnabled\": \"true\"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:49:29.097" endtime="20230309 17:49:29.098"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:49:26.819" endtime="20230309 17:49:29.098"/>
</test>
<test id="s1-s5-s13-t14" name="Create file with user defined metadata size larger than 2 KB" line="183">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:49:29.110" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile2'.</msg>
<msg timestamp="20230309 17:49:29.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:49:29.114" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:49:29.106" endtime="20230309 17:49:29.114"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:49:29.116" level="INFO"/>
<status status="PASS" starttime="20230309 17:49:29.115" endtime="20230309 17:49:29.116"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:49:29.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:49:29.116" endtime="20230309 17:49:29.117"/>
</kw>
<status status="PASS" starttime="20230309 17:49:29.105" endtime="20230309 17:49:29.117"/>
</kw>
<msg timestamp="20230309 17:49:29.119" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:49:29.104" endtime="20230309 17:49:29.119"/>
</kw>
<status status="PASS" starttime="20230309 17:49:29.103" endtime="20230309 17:49:29.120"/>
</kw>
<kw name="Execute" library="os">
<var>${custom_metadata_value}</var>
<arg>printf 'v%.0s' {1..3000}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:49:29.128" level="INFO">Running command 'printf 'v%.0s' {1..3000} 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:49:29.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:49:29.133" level="INFO">${output} = vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv...</msg>
<status status="PASS" starttime="20230309 17:49:29.124" endtime="20230309 17:49:29.133"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:49:29.134" level="INFO">vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv</msg>
<status status="PASS" starttime="20230309 17:49:29.133" endtime="20230309 17:49:29.135"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:49:29.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:49:29.135" endtime="20230309 17:49:29.136"/>
</kw>
<status status="PASS" starttime="20230309 17:49:29.122" endtime="20230309 17:49:29.136"/>
</kw>
<msg timestamp="20230309 17:49:29.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:49:29.121" endtime="20230309 17:49:29.137"/>
</kw>
<msg timestamp="20230309 17:49:29.138" level="INFO">${custom_metadata_value} = vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv...</msg>
<status status="PASS" starttime="20230309 17:49:29.120" endtime="20230309 17:49:29.138"/>
</kw>
<kw name="Execute AWSS3APICli and ignore error" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="custom-key1=${custom_metadata_value}"</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:49:29.143" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-4930423984/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="custom-key1=vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv" 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:49:39.990" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:49:39.990" level="INFO">${output} = 
An error occurred (500) when calling the PutObject operation (reached max retries: 4): Internal Server Error</msg>
<status status="PASS" starttime="20230309 17:49:29.140" endtime="20230309 17:49:39.990"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:49:39.991" level="INFO">
An error occurred (500) when calling the PutObject operation (reached max retries: 4): Internal Server Error</msg>
<status status="PASS" starttime="20230309 17:49:39.990" endtime="20230309 17:49:39.992"/>
</kw>
<msg timestamp="20230309 17:49:39.992" level="INFO">${output} = 
An error occurred (500) when calling the PutObject operation (reached max retries: 4): Internal Server Error</msg>
<status status="PASS" starttime="20230309 17:49:29.139" endtime="20230309 17:49:39.992"/>
</kw>
<msg timestamp="20230309 17:49:39.992" level="INFO">${result} = 
An error occurred (500) when calling the PutObject operation (reached max retries: 4): Internal Server Error</msg>
<status status="PASS" starttime="20230309 17:49:29.138" endtime="20230309 17:49:39.993"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>custom-key1: ${custom_metadata_value}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:49:39.993" endtime="20230309 17:49:39.994"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:49:29.102" endtime="20230309 17:49:39.994"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20230309 17:48:23.928" endtime="20230309 17:49:39.997"/>
</suite>
<suite id="s1-s5-s14" name="Webui" source="/opt/hadoop/smoketest/s3/webui.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:49:40.022" level="INFO">${randStr} = 2904900844</msg>
<status status="PASS" starttime="20230309 17:49:40.021" endtime="20230309 17:49:40.022"/>
</kw>
<msg timestamp="20230309 17:49:40.022" level="INFO">${random} = ozone-test-2904900844</msg>
<status status="PASS" starttime="20230309 17:49:40.021" endtime="20230309 17:49:40.022"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:49:40.025" level="INFO">${PREFIX} = ozone-test-2904900844</msg>
<status status="PASS" starttime="20230309 17:49:40.023" endtime="20230309 17:49:40.026"/>
</kw>
<status status="PASS" starttime="20230309 17:49:40.020" endtime="20230309 17:49:40.026"/>
</kw>
<status status="PASS" starttime="20230309 17:49:40.020" endtime="20230309 17:49:40.026"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which aws</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:49:40.032" level="INFO">Running command 'which aws 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:49:40.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:49:40.037" level="INFO">${output} = /usr/local/bin/aws</msg>
<status status="PASS" starttime="20230309 17:49:40.028" endtime="20230309 17:49:40.038"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230309 17:49:40.039" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:49:40.038" endtime="20230309 17:49:40.040"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20230309 17:49:40.040" endtime="20230309 17:49:40.040"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230309 17:49:40.041" endtime="20230309 17:49:40.041"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20230309 17:49:40.042" endtime="20230309 17:49:40.042"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230309 17:49:40.042" endtime="20230309 17:49:40.042"/>
</kw>
<status status="PASS" starttime="20230309 17:49:40.027" endtime="20230309 17:49:40.043"/>
</kw>
<status status="PASS" starttime="20230309 17:49:40.026" endtime="20230309 17:49:40.043"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:49:40.053" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:49:40.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:49:40.061" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230309 17:49:40.050" endtime="20230309 17:49:40.061"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:49:40.063" level="INFO">s3g</msg>
<status status="PASS" starttime="20230309 17:49:40.062" endtime="20230309 17:49:40.063"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:49:40.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:49:40.063" endtime="20230309 17:49:40.065"/>
</kw>
<status status="PASS" starttime="20230309 17:49:40.049" endtime="20230309 17:49:40.066"/>
</kw>
<msg timestamp="20230309 17:49:40.066" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:49:40.049" endtime="20230309 17:49:40.068"/>
</kw>
<msg timestamp="20230309 17:49:40.068" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230309 17:49:40.045" endtime="20230309 17:49:40.068"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:49:40.073" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:49:40.069" endtime="20230309 17:49:40.073"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:49:40.080" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:49:40.134" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:49:40.134" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:49:40.076" endtime="20230309 17:49:40.134"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:49:40.136" level="INFO"/>
<status status="PASS" starttime="20230309 17:49:40.135" endtime="20230309 17:49:40.136"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:49:40.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:49:40.136" endtime="20230309 17:49:40.137"/>
</kw>
<status status="PASS" starttime="20230309 17:49:40.075" endtime="20230309 17:49:40.137"/>
</kw>
<msg timestamp="20230309 17:49:40.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:49:40.074" endtime="20230309 17:49:40.138"/>
</kw>
<status status="PASS" starttime="20230309 17:49:40.073" endtime="20230309 17:49:40.138"/>
</kw>
<status status="PASS" starttime="20230309 17:49:40.073" endtime="20230309 17:49:40.138"/>
</kw>
<status status="PASS" starttime="20230309 17:49:40.045" endtime="20230309 17:49:40.139"/>
</kw>
<status status="PASS" starttime="20230309 17:49:40.044" endtime="20230309 17:49:40.139"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:49:40.146" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:49:49.879" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:49:49.879" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:49:40.142" endtime="20230309 17:49:49.879"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:49:49.880" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:49:49.880" endtime="20230309 17:49:49.881"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:49:49.881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:49:49.881" endtime="20230309 17:49:49.882"/>
</kw>
<status status="PASS" starttime="20230309 17:49:40.141" endtime="20230309 17:49:49.882"/>
</kw>
<msg timestamp="20230309 17:49:49.882" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:49:40.141" endtime="20230309 17:49:49.883"/>
</kw>
<msg timestamp="20230309 17:49:49.884" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:49:40.140" endtime="20230309 17:49:49.884"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230309 17:49:49.885" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230309 17:49:49.884" endtime="20230309 17:49:49.885"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20230309 17:49:49.886" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230309 17:49:49.885" endtime="20230309 17:49:49.886"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230309 17:49:49.887" level="INFO">${secret} = ['15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670']</msg>
<status status="PASS" starttime="20230309 17:49:49.887" endtime="20230309 17:49:49.887"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:49:49.889" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:49:49.887" endtime="20230309 17:49:49.889"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:49:49.891" level="INFO">${secret} = 15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:49:49.889" endtime="20230309 17:49:49.891"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:49:49.896" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:49:50.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:49:50.696" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:49:49.893" endtime="20230309 17:49:50.696"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:49:50.697" level="INFO"/>
<status status="PASS" starttime="20230309 17:49:50.696" endtime="20230309 17:49:50.697"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:49:50.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:49:50.698" endtime="20230309 17:49:50.698"/>
</kw>
<status status="PASS" starttime="20230309 17:49:49.892" endtime="20230309 17:49:50.699"/>
</kw>
<msg timestamp="20230309 17:49:50.699" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:49:49.892" endtime="20230309 17:49:50.700"/>
</kw>
<status status="PASS" starttime="20230309 17:49:49.891" endtime="20230309 17:49:50.700"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:49:50.706" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:49:51.573" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:49:51.573" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:49:50.702" endtime="20230309 17:49:51.573"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:49:51.575" level="INFO"/>
<status status="PASS" starttime="20230309 17:49:51.574" endtime="20230309 17:49:51.575"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:49:51.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:49:51.575" endtime="20230309 17:49:51.576"/>
</kw>
<status status="PASS" starttime="20230309 17:49:50.701" endtime="20230309 17:49:51.577"/>
</kw>
<msg timestamp="20230309 17:49:51.577" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:49:50.701" endtime="20230309 17:49:51.579"/>
</kw>
<status status="PASS" starttime="20230309 17:49:50.700" endtime="20230309 17:49:51.579"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:49:51.587" level="INFO">Running command 'aws configure set aws_secret_access_key 15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:49:52.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:49:52.403" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:49:51.583" endtime="20230309 17:49:52.403"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:49:52.405" level="INFO"/>
<status status="PASS" starttime="20230309 17:49:52.404" endtime="20230309 17:49:52.405"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:49:52.406" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:49:52.405" endtime="20230309 17:49:52.406"/>
</kw>
<status status="PASS" starttime="20230309 17:49:51.582" endtime="20230309 17:49:52.407"/>
</kw>
<msg timestamp="20230309 17:49:52.407" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:49:51.580" endtime="20230309 17:49:52.408"/>
</kw>
<status status="PASS" starttime="20230309 17:49:51.579" endtime="20230309 17:49:52.409"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:49:52.417" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:49:53.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:49:53.286" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:49:52.412" endtime="20230309 17:49:53.286"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:49:53.288" level="INFO"/>
<status status="PASS" starttime="20230309 17:49:53.287" endtime="20230309 17:49:53.288"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:49:53.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:49:53.288" endtime="20230309 17:49:53.289"/>
</kw>
<status status="PASS" starttime="20230309 17:49:52.411" endtime="20230309 17:49:53.290"/>
</kw>
<msg timestamp="20230309 17:49:53.290" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:49:52.411" endtime="20230309 17:49:53.291"/>
</kw>
<status status="PASS" starttime="20230309 17:49:52.409" endtime="20230309 17:49:53.292"/>
</kw>
<status status="PASS" starttime="20230309 17:49:40.140" endtime="20230309 17:49:53.292"/>
</kw>
<status status="PASS" starttime="20230309 17:49:40.139" endtime="20230309 17:49:53.293"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:49:53.293" endtime="20230309 17:49:53.294"/>
</kw>
<status status="PASS" starttime="20230309 17:49:40.043" endtime="20230309 17:49:53.294"/>
</kw>
<status status="PASS" starttime="20230309 17:49:40.043" endtime="20230309 17:49:53.294"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230309 17:49:53.295" endtime="20230309 17:49:53.296"/>
</kw>
<msg timestamp="20230309 17:49:53.296" level="INFO">${BUCKET} = encrypted</msg>
<status status="PASS" starttime="20230309 17:49:53.295" endtime="20230309 17:49:53.296"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:49:53.297" level="INFO">${BUCKET} = encrypted</msg>
<status status="PASS" starttime="20230309 17:49:53.297" endtime="20230309 17:49:53.298"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:49:53.298" endtime="20230309 17:49:53.299"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create encrypted bucket" library="commonawslib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:49:53.301" endtime="20230309 17:49:53.301"/>
</kw>
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/encrypted</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:49:53.308" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:50:06.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:50:06.683" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "s3v",
  "name" : "encrypted",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 364928340,
  "usedNamespace" : 23,
  "creationTime" : "2023-03-0...</msg>
<status status="PASS" starttime="20230309 17:49:53.302" endtime="20230309 17:50:06.683"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:50:06.684" endtime="20230309 17:50:06.685"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:50:06.685" endtime="20230309 17:50:06.685"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:50:06.685" endtime="20230309 17:50:06.686"/>
</kw>
<msg timestamp="20230309 17:50:06.686" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20230309 17:49:53.301" endtime="20230309 17:50:06.686"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230309 17:50:06.687" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:50:06.687" endtime="20230309 17:50:06.688"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create -k ${KEY_NAME} o3://${OM_SERVICE_ID}/s3v/encrypted</arg>
<status status="NOT RUN" starttime="20230309 17:50:06.688" endtime="20230309 17:50:06.688"/>
</kw>
<status status="PASS" starttime="20230309 17:49:53.299" endtime="20230309 17:50:06.688"/>
</kw>
<status status="PASS" starttime="20230309 17:49:53.299" endtime="20230309 17:50:06.688"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:50:06.689" endtime="20230309 17:50:06.689"/>
</kw>
<status status="PASS" starttime="20230309 17:49:40.020" endtime="20230309 17:50:06.689"/>
</kw>
<test id="s1-s5-s14-t1" name="S3 Gateway Web UI" line="32">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:50:06.701" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:50:06.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:50:06.706" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230309 17:50:06.696" endtime="20230309 17:50:06.706"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:50:06.708" level="INFO">s3g</msg>
<status status="PASS" starttime="20230309 17:50:06.706" endtime="20230309 17:50:06.708"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:50:06.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:50:06.708" endtime="20230309 17:50:06.709"/>
</kw>
<status status="PASS" starttime="20230309 17:50:06.695" endtime="20230309 17:50:06.709"/>
</kw>
<msg timestamp="20230309 17:50:06.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:50:06.694" endtime="20230309 17:50:06.710"/>
</kw>
<msg timestamp="20230309 17:50:06.711" level="INFO">${hostname} = s3g</msg>
<status status="PASS" starttime="20230309 17:50:06.693" endtime="20230309 17:50:06.711"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:50:06.717" level="INFO">Running command 'kinit -k HTTP/s3g@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:50:06.762" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:50:06.762" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:50:06.713" endtime="20230309 17:50:06.762"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:50:06.764" level="INFO"/>
<status status="PASS" starttime="20230309 17:50:06.763" endtime="20230309 17:50:06.764"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:50:06.765" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:50:06.764" endtime="20230309 17:50:06.766"/>
</kw>
<status status="PASS" starttime="20230309 17:50:06.712" endtime="20230309 17:50:06.766"/>
</kw>
<msg timestamp="20230309 17:50:06.766" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:50:06.712" endtime="20230309 17:50:06.767"/>
</kw>
<status status="PASS" starttime="20230309 17:50:06.711" endtime="20230309 17:50:06.767"/>
</kw>
<status status="PASS" starttime="20230309 17:50:06.711" endtime="20230309 17:50:06.768"/>
</kw>
<status status="PASS" starttime="20230309 17:50:06.692" endtime="20230309 17:50:06.768"/>
</kw>
<status status="PASS" starttime="20230309 17:50:06.692" endtime="20230309 17:50:06.768"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -v ${ENDPOINT_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:50:06.777" level="INFO">Running command 'curl --negotiate -u : -v http://s3g:9878 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:50:06.793" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:50:06.793" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20230309 17:50:06.772" endtime="20230309 17:50:06.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:50:06.795" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to s3g port 9878 (#0)
*   Trying 172.18.0.7...
* Connected to s3g (172.18.0.7) port 9878 (#0)
&gt; GET / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: s3g:9878
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 302 Found
&lt; Date: Thu, 09 Mar 2023 17:50:06 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 09 Mar 2023 17:50:06 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/plain;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; Location: http://s3g:9878/static/
&lt; Content-Length: 0
&lt; 

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Connection #0 to host s3g left intact</msg>
<status status="PASS" starttime="20230309 17:50:06.794" endtime="20230309 17:50:06.795"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:50:06.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:50:06.796" endtime="20230309 17:50:06.796"/>
</kw>
<status status="PASS" starttime="20230309 17:50:06.771" endtime="20230309 17:50:06.797"/>
</kw>
<msg timestamp="20230309 17:50:06.797" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:50:06.770" endtime="20230309 17:50:06.798"/>
</kw>
<msg timestamp="20230309 17:50:06.799" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20230309 17:50:06.768" endtime="20230309 17:50:06.799"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location:</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:50:06.799" endtime="20230309 17:50:06.800"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>/static/</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:50:06.800" endtime="20230309 17:50:06.800"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -v ${ENDPOINT_URL}/static/index.html</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:50:06.808" level="INFO">Running command 'curl --negotiate -u : -v http://s3g:9878/static/index.html 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:50:06.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:50:06.958" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20230309 17:50:06.803" endtime="20230309 17:50:06.958"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:50:06.962" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to s3g port 9878 (#0)
*   Trying 172.18.0.7...
* Connected to s3g (172.18.0.7) port 9878 (#0)
&gt; GET /static/index.html HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: s3g:9878
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Authentication required
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 463
&lt; 
* Ignoring the response-body
{ [data not shown]

100   463  100   463    0     0   8996      0 --:--:-- --:--:-- --:--:--  9078
* Connection #0 to host s3g left intact
* Issue another request to this URL: 'http://s3g:9878/static/index.html'
* Found bundle for host s3g: 0xb5afa0
* Re-using existing connection! (#0) with host s3g
* Connected to s3g (172.18.0.7) port 9878 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; GET /static/index.html HTTP/1.1
&gt; Authorization: Negotiate YIICUQYJKoZIhvcSAQICAQBuggJAMIICPKADAgEFoQMCAQ6iBwMFACAAAACjggFQYYIBTDCCAUigAwIBBaENGwtFWEFNUExFLkNPTaIWMBSgAwIBA6ENMAsbBEhUVFAbA3MzZ6OCARgwggEUoAMCARKhAwIBAaKCAQYEggECfQn9QDhiqaPyzvyhQB7WeHs+BVbVu9wze5AvypKI8oGNIAIVQzpaQH6efLxV6ORmeSOczWqD2LVbn2eTQB9TzLi82nvbaCmLmLFCmsQhYxJ+khpybtdwxsKWvR68sv5aiLif5Z2IvXwucJWFxZwMvbdfVAYBn28g80LoUQlBwZhLgAXxConU+qH5y2oAYXoYA0j9rcqtAX+db8vczjXlyMIOEZ3XUFB6BMrMLeiv7SbKSlWtKPzNxZ7X86g7R8S3PwDNcLNivkXTnMtO96kZJoMBC2m+sBTeWZQFn1A+4OpQMvxYPuBxIePV23OJPUnWaocYrnC+SLdzaeo17ycpsCCBpIHSMIHPoAMCARKigccEgcS3lur+QCKm0T5MkUyYqD0r9zXX/MWr8zrVmcRHFRucdyxWTvWuuC+T6J8a427HTrjWDGJtS7GKF60YE93blPRxUSSDXbTjW9D1BKEk0fLlrV/AE4yWPBDrILUjNQLEf9g9h2PNxlz2lM6vOnq7VYApl1oIv6qbAKUqthkk4fKXmZ8wA23K4QPg32yp+8IyJ0oM4eBDuzRMfmQw5HqzJaxfuEx/fNBzpkKw6WKdzrUj/rbmnn3diuDFK0g1mhV2XMyeCWx5
&gt; User-Agent: curl/7.29.0
&gt; Host: s3g:9878
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 09 Mar 2023 17:50:06 GMT
&lt; Content-Type: text/html
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCqtoV5PILaLuw5WDoc9rP66ilMuxHl4mvRMsKNWE0xmVvJTmDLuJ0v2ADhsTdSnWw7qdUi+axcST/bC1fPj88VDhi
&lt; Set-Cookie: hadoop.auth="u=HTTP&amp;p=HTTP/s3g@EXAMPLE.COM&amp;t=kerberos&amp;e=1678420206933&amp;s=bxCb7u2Au7Aa7ziuX+Su889DG0bQG6MLR3wsqngyZFM="; Path=/; HttpOnly
&lt; Last-Modified: Thu, 09 Mar 2023 16:21:58 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 3106
&lt; 
{ [data not shown]

100  3106  100  3106    0     0  22303      0 --:--:-- --:--:-- --:--:-- 22303
* Closing connection 0
&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;
&lt;!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
--&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="utf-8"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1"&gt;
    &lt;meta http-equiv="Content-Security-Policy" content="script-src 'self';"&gt;
    &lt;!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags --&gt;
    &lt;meta name="description" content="Apache Ozone S3 gateway"&gt;

    &lt;title&gt;S3 gateway -- Apache Ozone&lt;/title&gt;

    &lt;link href="bootstrap-3.4.1/css/bootstrap.min.css" rel="stylesheet"&gt;
    &lt;link href="hadoop.css" rel="stylesheet"&gt;
    &lt;link href="ozone.css" rel="stylesheet"&gt;

&lt;/head&gt;

&lt;body&gt;

&lt;header class="navbar navbar-inverse navbar-fixed-top bs-docs-nav"&gt;
    &lt;div class="container-fluid"&gt;
        &lt;div class="navbar-header"&gt;
            &lt;button type="button" class="navbar-toggle collapsed"
                    data-toggle="collapse" data-target="#navbar"
                    aria-expanded="false" aria-controls="navbar"&gt;
                &lt;span class="sr-only"&gt;Toggle navigation&lt;/span&gt;
                &lt;span class="icon-bar"&gt;&lt;/span&gt;
                &lt;span class="icon-bar"&gt;&lt;/span&gt;
                &lt;span class="icon-bar"&gt;&lt;/span&gt;
            &lt;/button&gt;
            &lt;a class="navbar-brand" href="#"&gt;Ozone S3G&lt;/a&gt;
        &lt;/div&gt;
        &lt;div id="navbar" class="collapse navbar-collapse"&gt;
            &lt;ul class="nav navbar-nav" id="ui-tabs"&gt;
                &lt;li&gt;&lt;a href="docs"&gt;Documentation&lt;/a&gt;&lt;/li&gt;

            &lt;/ul&gt;
        &lt;/div&gt;&lt;!--/.nav-collapse --&gt;

    &lt;/div&gt;
&lt;/header&gt;


&lt;div class="container-fluid" style="margin: 12pt"&gt;

    &lt;h1&gt;S3 gateway&lt;/h1&gt;

    &lt;p&gt;This is an endpoint of Apache Ozone S3 gateway. Use it with any
        AWS S3 compatible tool
        with setting this url as an endpoint&lt;/p&gt;

    &lt;p&gt;For example with aws-cli:&lt;/p&gt;

    &lt;pre&gt;aws s3api --endpoint &lt;span id="s3gurl"&gt;&lt;/span&gt; create-bucket --bucket=wordcount&lt;/pre&gt;

    &lt;p&gt;For more information, please check the &lt;a href="docs"&gt;documentation.&lt;/a&gt;
    &lt;/p&gt;
&lt;/div&gt;&lt;!-- /.container --&gt;

&lt;script src="jquery-3.5.1.min.js"&gt;&lt;/script&gt;
&lt;script src="bootstrap-3.4.1/js/bootstrap.min.js"&gt;&lt;/script&gt;
&lt;script src="s3g.js"&gt;&lt;/script&gt;

&lt;/body&gt;
&lt;/html&gt;</msg>
<status status="PASS" starttime="20230309 17:50:06.961" endtime="20230309 17:50:06.962"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:50:06.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:50:06.963" endtime="20230309 17:50:06.966"/>
</kw>
<status status="PASS" starttime="20230309 17:50:06.802" endtime="20230309 17:50:06.967"/>
</kw>
<msg timestamp="20230309 17:50:06.967" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:50:06.801" endtime="20230309 17:50:06.968"/>
</kw>
<msg timestamp="20230309 17:50:06.969" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20230309 17:50:06.800" endtime="20230309 17:50:06.969"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Apache Ozone S3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:50:06.969" endtime="20230309 17:50:06.970"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:50:06.690" endtime="20230309 17:50:06.971"/>
</test>
<doc>S3 gateway web ui test</doc>
<status status="PASS" starttime="20230309 17:49:40.003" endtime="20230309 17:50:06.975"/>
</suite>
<status status="PASS" starttime="20230309 17:38:58.306" endtime="20230309 17:50:06.986"/>
</suite>
<suite id="s1-s6" name="s3-link" source="/opt/hadoop/smoketest/s3">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:50:16.339" level="INFO">${randStr} = 7683991580</msg>
<status status="PASS" starttime="20230309 17:50:16.338" endtime="20230309 17:50:16.339"/>
</kw>
<msg timestamp="20230309 17:50:16.340" level="INFO">${random} = ozone-test-7683991580</msg>
<status status="PASS" starttime="20230309 17:50:16.338" endtime="20230309 17:50:16.340"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:50:16.342" level="INFO">${PREFIX} = ozone-test-7683991580</msg>
<status status="PASS" starttime="20230309 17:50:16.340" endtime="20230309 17:50:16.342"/>
</kw>
<status status="PASS" starttime="20230309 17:50:16.337" endtime="20230309 17:50:16.343"/>
</kw>
<status status="PASS" starttime="20230309 17:50:16.337" endtime="20230309 17:50:16.343"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which aws</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:50:16.350" level="INFO">Running command 'which aws 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:50:16.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:50:16.354" level="INFO">${output} = /usr/local/bin/aws</msg>
<status status="PASS" starttime="20230309 17:50:16.344" endtime="20230309 17:50:16.354"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230309 17:50:16.356" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:50:16.355" endtime="20230309 17:50:16.358"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20230309 17:50:16.358" endtime="20230309 17:50:16.358"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230309 17:50:16.358" endtime="20230309 17:50:16.358"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20230309 17:50:16.359" endtime="20230309 17:50:16.359"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230309 17:50:16.359" endtime="20230309 17:50:16.359"/>
</kw>
<status status="PASS" starttime="20230309 17:50:16.344" endtime="20230309 17:50:16.359"/>
</kw>
<status status="PASS" starttime="20230309 17:50:16.343" endtime="20230309 17:50:16.360"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:50:16.368" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:50:16.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:50:16.374" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230309 17:50:16.365" endtime="20230309 17:50:16.374"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:50:16.376" level="INFO">s3g</msg>
<status status="PASS" starttime="20230309 17:50:16.375" endtime="20230309 17:50:16.376"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:50:16.377" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:50:16.376" endtime="20230309 17:50:16.377"/>
</kw>
<status status="PASS" starttime="20230309 17:50:16.364" endtime="20230309 17:50:16.378"/>
</kw>
<msg timestamp="20230309 17:50:16.378" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:50:16.363" endtime="20230309 17:50:16.379"/>
</kw>
<msg timestamp="20230309 17:50:16.379" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230309 17:50:16.363" endtime="20230309 17:50:16.379"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:50:16.382" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:50:16.379" endtime="20230309 17:50:16.382"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:50:16.389" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:50:16.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:50:16.413" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:50:16.385" endtime="20230309 17:50:16.413"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:50:16.415" level="INFO"/>
<status status="PASS" starttime="20230309 17:50:16.413" endtime="20230309 17:50:16.415"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:50:16.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:50:16.415" endtime="20230309 17:50:16.416"/>
</kw>
<status status="PASS" starttime="20230309 17:50:16.385" endtime="20230309 17:50:16.416"/>
</kw>
<msg timestamp="20230309 17:50:16.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:50:16.384" endtime="20230309 17:50:16.417"/>
</kw>
<status status="PASS" starttime="20230309 17:50:16.383" endtime="20230309 17:50:16.418"/>
</kw>
<status status="PASS" starttime="20230309 17:50:16.382" endtime="20230309 17:50:16.418"/>
</kw>
<status status="PASS" starttime="20230309 17:50:16.362" endtime="20230309 17:50:16.418"/>
</kw>
<status status="PASS" starttime="20230309 17:50:16.361" endtime="20230309 17:50:16.418"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:50:16.425" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:50:26.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:50:26.470" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:50:16.422" endtime="20230309 17:50:26.470"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:50:26.471" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:50:26.471" endtime="20230309 17:50:26.472"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:50:26.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:50:26.472" endtime="20230309 17:50:26.472"/>
</kw>
<status status="PASS" starttime="20230309 17:50:16.421" endtime="20230309 17:50:26.473"/>
</kw>
<msg timestamp="20230309 17:50:26.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:50:16.421" endtime="20230309 17:50:26.474"/>
</kw>
<msg timestamp="20230309 17:50:26.475" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:50:16.420" endtime="20230309 17:50:26.475"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230309 17:50:26.476" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230309 17:50:26.475" endtime="20230309 17:50:26.477"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20230309 17:50:26.477" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230309 17:50:26.477" endtime="20230309 17:50:26.477"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230309 17:50:26.478" level="INFO">${secret} = ['15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670']</msg>
<status status="PASS" starttime="20230309 17:50:26.478" endtime="20230309 17:50:26.478"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:50:26.481" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:50:26.479" endtime="20230309 17:50:26.481"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:50:26.486" level="INFO">${secret} = 15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:50:26.481" endtime="20230309 17:50:26.486"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:50:26.494" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:50:27.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:50:27.402" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:50:26.490" endtime="20230309 17:50:27.402"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:50:27.404" level="INFO"/>
<status status="PASS" starttime="20230309 17:50:27.403" endtime="20230309 17:50:27.404"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:50:27.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:50:27.405" endtime="20230309 17:50:27.406"/>
</kw>
<status status="PASS" starttime="20230309 17:50:26.489" endtime="20230309 17:50:27.407"/>
</kw>
<msg timestamp="20230309 17:50:27.407" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:50:26.487" endtime="20230309 17:50:27.407"/>
</kw>
<status status="PASS" starttime="20230309 17:50:26.486" endtime="20230309 17:50:27.408"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:50:27.413" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:50:28.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:50:28.393" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:50:27.410" endtime="20230309 17:50:28.393"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:50:28.395" level="INFO"/>
<status status="PASS" starttime="20230309 17:50:28.394" endtime="20230309 17:50:28.395"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:50:28.396" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:50:28.396" endtime="20230309 17:50:28.396"/>
</kw>
<status status="PASS" starttime="20230309 17:50:27.409" endtime="20230309 17:50:28.397"/>
</kw>
<msg timestamp="20230309 17:50:28.397" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:50:27.409" endtime="20230309 17:50:28.398"/>
</kw>
<status status="PASS" starttime="20230309 17:50:27.408" endtime="20230309 17:50:28.399"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:50:28.405" level="INFO">Running command 'aws configure set aws_secret_access_key 15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:50:29.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:50:29.320" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:50:28.401" endtime="20230309 17:50:29.320"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:50:29.321" level="INFO"/>
<status status="PASS" starttime="20230309 17:50:29.320" endtime="20230309 17:50:29.321"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:50:29.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:50:29.321" endtime="20230309 17:50:29.322"/>
</kw>
<status status="PASS" starttime="20230309 17:50:28.400" endtime="20230309 17:50:29.322"/>
</kw>
<msg timestamp="20230309 17:50:29.323" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:50:28.400" endtime="20230309 17:50:29.324"/>
</kw>
<status status="PASS" starttime="20230309 17:50:28.399" endtime="20230309 17:50:29.325"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:50:29.332" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:50:30.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:50:30.262" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:50:29.329" endtime="20230309 17:50:30.263"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:50:30.266" level="INFO"/>
<status status="PASS" starttime="20230309 17:50:30.264" endtime="20230309 17:50:30.266"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:50:30.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:50:30.266" endtime="20230309 17:50:30.267"/>
</kw>
<status status="PASS" starttime="20230309 17:50:29.328" endtime="20230309 17:50:30.268"/>
</kw>
<msg timestamp="20230309 17:50:30.268" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:50:29.327" endtime="20230309 17:50:30.269"/>
</kw>
<status status="PASS" starttime="20230309 17:50:29.326" endtime="20230309 17:50:30.269"/>
</kw>
<status status="PASS" starttime="20230309 17:50:16.419" endtime="20230309 17:50:30.270"/>
</kw>
<status status="PASS" starttime="20230309 17:50:16.419" endtime="20230309 17:50:30.270"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:50:30.270" endtime="20230309 17:50:30.271"/>
</kw>
<status status="PASS" starttime="20230309 17:50:16.361" endtime="20230309 17:50:30.271"/>
</kw>
<status status="PASS" starttime="20230309 17:50:16.360" endtime="20230309 17:50:30.271"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230309 17:50:30.272" endtime="20230309 17:50:30.273"/>
</kw>
<msg timestamp="20230309 17:50:30.273" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20230309 17:50:30.271" endtime="20230309 17:50:30.273"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:50:30.274" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20230309 17:50:30.273" endtime="20230309 17:50:30.274"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup links for S3 tests" library="commonawslib">
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:50:30.282" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/link 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:50:44.097" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:50:44.097" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20230309 17:50:30.276" endtime="20230309 17:50:44.097"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230309 17:50:44.101" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:50:44.099" endtime="20230309 17:50:44.103"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230309 17:50:44.103" endtime="20230309 17:50:44.103"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230309 17:50:44.104" endtime="20230309 17:50:44.104"/>
</kw>
<msg timestamp="20230309 17:50:44.108" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20230309 17:50:30.276" endtime="20230309 17:50:44.108"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:50:44.108" endtime="20230309 17:50:44.108"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://${OM_SERVICE_ID}/legacy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:50:44.115" level="INFO">Running command 'ozone sh volume create o3://om/legacy 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:50:57.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:50:57.568" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:50:44.112" endtime="20230309 17:50:57.568"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:50:57.570" level="INFO"/>
<status status="PASS" starttime="20230309 17:50:57.569" endtime="20230309 17:50:57.570"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:50:57.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:50:57.570" endtime="20230309 17:50:57.571"/>
</kw>
<status status="PASS" starttime="20230309 17:50:44.111" endtime="20230309 17:50:57.571"/>
</kw>
<msg timestamp="20230309 17:50:57.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:50:44.110" endtime="20230309 17:50:57.572"/>
</kw>
<status status="PASS" starttime="20230309 17:50:44.109" endtime="20230309 17:50:57.572"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create o3://${OM_SERVICE_ID}/legacy/source-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:50:57.578" level="INFO">Running command 'ozone sh bucket create o3://om/legacy/source-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:51:10.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:51:10.368" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:50:57.575" endtime="20230309 17:51:10.368"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:51:10.371" level="INFO"/>
<status status="PASS" starttime="20230309 17:51:10.369" endtime="20230309 17:51:10.371"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:51:10.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:51:10.371" endtime="20230309 17:51:10.373"/>
</kw>
<status status="PASS" starttime="20230309 17:50:57.574" endtime="20230309 17:51:10.374"/>
</kw>
<msg timestamp="20230309 17:51:10.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:50:57.573" endtime="20230309 17:51:10.375"/>
</kw>
<status status="PASS" starttime="20230309 17:50:57.573" endtime="20230309 17:51:10.375"/>
</kw>
<kw name="Create link" library="commonawslib">
<arg>link</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket link o3://${OM_SERVICE_ID}/legacy/source-bucket o3://${OM_SERVICE_ID}/s3v/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:51:10.386" level="INFO">Running command 'ozone sh bucket link o3://om/legacy/source-bucket o3://om/s3v/link 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:51:22.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:51:22.704" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:51:10.382" endtime="20230309 17:51:22.704"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:51:22.705" level="INFO"/>
<status status="PASS" starttime="20230309 17:51:22.704" endtime="20230309 17:51:22.705"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:51:22.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:51:22.706" endtime="20230309 17:51:22.706"/>
</kw>
<status status="PASS" starttime="20230309 17:51:10.381" endtime="20230309 17:51:22.707"/>
</kw>
<msg timestamp="20230309 17:51:22.707" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:51:10.380" endtime="20230309 17:51:22.708"/>
</kw>
<status status="PASS" starttime="20230309 17:51:10.377" endtime="20230309 17:51:22.708"/>
</kw>
<status status="PASS" starttime="20230309 17:51:10.375" endtime="20230309 17:51:22.710"/>
</kw>
<status status="PASS" starttime="20230309 17:50:30.275" endtime="20230309 17:51:22.710"/>
</kw>
<status status="PASS" starttime="20230309 17:50:30.274" endtime="20230309 17:51:22.710"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:51:22.711" endtime="20230309 17:51:22.712"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:51:22.712" endtime="20230309 17:51:22.713"/>
</kw>
<status status="PASS" starttime="20230309 17:50:16.336" endtime="20230309 17:51:22.713"/>
</kw>
<suite id="s1-s6-s1" name="Awss3" source="/opt/hadoop/smoketest/s3/awss3.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:51:22.737" level="INFO">${randStr} = 8811320515</msg>
<status status="PASS" starttime="20230309 17:51:22.736" endtime="20230309 17:51:22.737"/>
</kw>
<msg timestamp="20230309 17:51:22.739" level="INFO">${random} = ozone-test-8811320515</msg>
<status status="PASS" starttime="20230309 17:51:22.736" endtime="20230309 17:51:22.739"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:51:22.742" level="INFO">${PREFIX} = ozone-test-8811320515</msg>
<status status="PASS" starttime="20230309 17:51:22.739" endtime="20230309 17:51:22.742"/>
</kw>
<status status="PASS" starttime="20230309 17:51:22.735" endtime="20230309 17:51:22.742"/>
</kw>
<status status="PASS" starttime="20230309 17:51:22.734" endtime="20230309 17:51:22.742"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which aws</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:51:22.749" level="INFO">Running command 'which aws 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:51:22.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:51:22.754" level="INFO">${output} = /usr/local/bin/aws</msg>
<status status="PASS" starttime="20230309 17:51:22.745" endtime="20230309 17:51:22.754"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230309 17:51:22.755" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:51:22.755" endtime="20230309 17:51:22.756"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20230309 17:51:22.756" endtime="20230309 17:51:22.756"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230309 17:51:22.757" endtime="20230309 17:51:22.757"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20230309 17:51:22.757" endtime="20230309 17:51:22.757"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230309 17:51:22.758" endtime="20230309 17:51:22.758"/>
</kw>
<status status="PASS" starttime="20230309 17:51:22.744" endtime="20230309 17:51:22.758"/>
</kw>
<status status="PASS" starttime="20230309 17:51:22.743" endtime="20230309 17:51:22.759"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:51:22.767" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:51:22.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:51:22.774" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230309 17:51:22.764" endtime="20230309 17:51:22.774"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:51:22.776" level="INFO">s3g</msg>
<status status="PASS" starttime="20230309 17:51:22.775" endtime="20230309 17:51:22.776"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:51:22.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:51:22.776" endtime="20230309 17:51:22.777"/>
</kw>
<status status="PASS" starttime="20230309 17:51:22.763" endtime="20230309 17:51:22.777"/>
</kw>
<msg timestamp="20230309 17:51:22.778" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:51:22.762" endtime="20230309 17:51:22.779"/>
</kw>
<msg timestamp="20230309 17:51:22.780" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230309 17:51:22.761" endtime="20230309 17:51:22.780"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:51:22.782" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:51:22.780" endtime="20230309 17:51:22.782"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:51:22.789" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:51:22.834" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:51:22.834" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:51:22.785" endtime="20230309 17:51:22.834"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:51:22.837" level="INFO"/>
<status status="PASS" starttime="20230309 17:51:22.835" endtime="20230309 17:51:22.837"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:51:22.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:51:22.837" endtime="20230309 17:51:22.839"/>
</kw>
<status status="PASS" starttime="20230309 17:51:22.785" endtime="20230309 17:51:22.840"/>
</kw>
<msg timestamp="20230309 17:51:22.840" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:51:22.784" endtime="20230309 17:51:22.841"/>
</kw>
<status status="PASS" starttime="20230309 17:51:22.783" endtime="20230309 17:51:22.841"/>
</kw>
<status status="PASS" starttime="20230309 17:51:22.782" endtime="20230309 17:51:22.841"/>
</kw>
<status status="PASS" starttime="20230309 17:51:22.761" endtime="20230309 17:51:22.842"/>
</kw>
<status status="PASS" starttime="20230309 17:51:22.760" endtime="20230309 17:51:22.842"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:51:22.849" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:51:33.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:51:33.089" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:51:22.846" endtime="20230309 17:51:33.089"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:51:33.091" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:51:33.090" endtime="20230309 17:51:33.091"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:51:33.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:51:33.091" endtime="20230309 17:51:33.092"/>
</kw>
<status status="PASS" starttime="20230309 17:51:22.845" endtime="20230309 17:51:33.092"/>
</kw>
<msg timestamp="20230309 17:51:33.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:51:22.845" endtime="20230309 17:51:33.093"/>
</kw>
<msg timestamp="20230309 17:51:33.097" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:51:22.844" endtime="20230309 17:51:33.097"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230309 17:51:33.098" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230309 17:51:33.097" endtime="20230309 17:51:33.098"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20230309 17:51:33.099" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230309 17:51:33.098" endtime="20230309 17:51:33.099"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230309 17:51:33.101" level="INFO">${secret} = ['15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670']</msg>
<status status="PASS" starttime="20230309 17:51:33.100" endtime="20230309 17:51:33.101"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:51:33.103" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:51:33.102" endtime="20230309 17:51:33.103"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:51:33.105" level="INFO">${secret} = 15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:51:33.103" endtime="20230309 17:51:33.105"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:51:33.113" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:51:34.043" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:51:34.043" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:51:33.107" endtime="20230309 17:51:34.043"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:51:34.044" level="INFO"/>
<status status="PASS" starttime="20230309 17:51:34.043" endtime="20230309 17:51:34.044"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:51:34.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:51:34.045" endtime="20230309 17:51:34.045"/>
</kw>
<status status="PASS" starttime="20230309 17:51:33.106" endtime="20230309 17:51:34.046"/>
</kw>
<msg timestamp="20230309 17:51:34.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:51:33.106" endtime="20230309 17:51:34.047"/>
</kw>
<status status="PASS" starttime="20230309 17:51:33.105" endtime="20230309 17:51:34.047"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:51:34.055" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:51:35.002" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:51:35.003" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:51:34.050" endtime="20230309 17:51:35.003"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:51:35.005" level="INFO"/>
<status status="PASS" starttime="20230309 17:51:35.003" endtime="20230309 17:51:35.005"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:51:35.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:51:35.005" endtime="20230309 17:51:35.006"/>
</kw>
<status status="PASS" starttime="20230309 17:51:34.050" endtime="20230309 17:51:35.006"/>
</kw>
<msg timestamp="20230309 17:51:35.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:51:34.049" endtime="20230309 17:51:35.007"/>
</kw>
<status status="PASS" starttime="20230309 17:51:34.048" endtime="20230309 17:51:35.008"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:51:35.015" level="INFO">Running command 'aws configure set aws_secret_access_key 15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:51:35.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:51:35.915" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:51:35.011" endtime="20230309 17:51:35.915"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:51:35.918" level="INFO"/>
<status status="PASS" starttime="20230309 17:51:35.916" endtime="20230309 17:51:35.918"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:51:35.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:51:35.918" endtime="20230309 17:51:35.919"/>
</kw>
<status status="PASS" starttime="20230309 17:51:35.009" endtime="20230309 17:51:35.920"/>
</kw>
<msg timestamp="20230309 17:51:35.920" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:51:35.009" endtime="20230309 17:51:35.921"/>
</kw>
<status status="PASS" starttime="20230309 17:51:35.008" endtime="20230309 17:51:35.921"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:51:35.931" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:51:36.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:51:36.855" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:51:35.925" endtime="20230309 17:51:36.855"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:51:36.857" level="INFO"/>
<status status="PASS" starttime="20230309 17:51:36.856" endtime="20230309 17:51:36.857"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:51:36.858" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:51:36.857" endtime="20230309 17:51:36.859"/>
</kw>
<status status="PASS" starttime="20230309 17:51:35.923" endtime="20230309 17:51:36.859"/>
</kw>
<msg timestamp="20230309 17:51:36.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:51:35.923" endtime="20230309 17:51:36.860"/>
</kw>
<status status="PASS" starttime="20230309 17:51:35.922" endtime="20230309 17:51:36.862"/>
</kw>
<status status="PASS" starttime="20230309 17:51:22.843" endtime="20230309 17:51:36.862"/>
</kw>
<status status="PASS" starttime="20230309 17:51:22.842" endtime="20230309 17:51:36.862"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:51:36.862" endtime="20230309 17:51:36.863"/>
</kw>
<status status="PASS" starttime="20230309 17:51:22.759" endtime="20230309 17:51:36.863"/>
</kw>
<status status="PASS" starttime="20230309 17:51:22.759" endtime="20230309 17:51:36.863"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230309 17:51:36.865" endtime="20230309 17:51:36.865"/>
</kw>
<msg timestamp="20230309 17:51:36.865" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20230309 17:51:36.864" endtime="20230309 17:51:36.865"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:51:36.867" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20230309 17:51:36.866" endtime="20230309 17:51:36.867"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup links for S3 tests" library="commonawslib">
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:51:36.874" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/link 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:51:51.026" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:51:51.026" level="INFO">${output} = {
  "volumeName" : "s3v",
  "bucketName" : "link",
  "sourceVolume" : "legacy",
  "sourceBucket" : "source-bucket",
  "creationTime" : "2023-03-09T17:51:22.562Z",
  "modificationTime" : "2023-03-09T17...</msg>
<status status="PASS" starttime="20230309 17:51:36.870" endtime="20230309 17:51:51.026"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:51:51.027" endtime="20230309 17:51:51.028"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:51:51.028" endtime="20230309 17:51:51.028"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:51:51.028" endtime="20230309 17:51:51.029"/>
</kw>
<msg timestamp="20230309 17:51:51.029" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20230309 17:51:36.869" endtime="20230309 17:51:51.029"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230309 17:51:51.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:51:51.030" endtime="20230309 17:51:51.031"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://${OM_SERVICE_ID}/legacy</arg>
<status status="NOT RUN" starttime="20230309 17:51:51.031" endtime="20230309 17:51:51.031"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create o3://${OM_SERVICE_ID}/legacy/source-bucket</arg>
<status status="NOT RUN" starttime="20230309 17:51:51.031" endtime="20230309 17:51:51.031"/>
</kw>
<kw name="Create link" library="commonawslib">
<arg>link</arg>
<status status="NOT RUN" starttime="20230309 17:51:51.031" endtime="20230309 17:51:51.031"/>
</kw>
<status status="PASS" starttime="20230309 17:51:36.868" endtime="20230309 17:51:51.032"/>
</kw>
<status status="PASS" starttime="20230309 17:51:36.867" endtime="20230309 17:51:51.032"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:51:51.032" endtime="20230309 17:51:51.032"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:51:51.033" endtime="20230309 17:51:51.033"/>
</kw>
<status status="PASS" starttime="20230309 17:51:22.733" endtime="20230309 17:51:51.033"/>
</kw>
<test id="s1-s6-s1-t1" name="File upload and directory list" line="31">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:51:51.042" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20230309 17:51:51.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:51:51.046" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:51:51.038" endtime="20230309 17:51:51.046"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:51:51.048" level="INFO"/>
<status status="PASS" starttime="20230309 17:51:51.047" endtime="20230309 17:51:51.048"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:51:51.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:51:51.048" endtime="20230309 17:51:51.049"/>
</kw>
<status status="PASS" starttime="20230309 17:51:51.038" endtime="20230309 17:51:51.049"/>
</kw>
<msg timestamp="20230309 17:51:51.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:51:51.037" endtime="20230309 17:51:51.050"/>
</kw>
<status status="PASS" starttime="20230309 17:51:51.036" endtime="20230309 17:51:51.051"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:51:51.057" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://link 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:51:54.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:51:54.758" level="INFO">${output} = Completed 29 Bytes/29 Bytes (10 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/testfile                 </msg>
<status status="PASS" starttime="20230309 17:51:51.054" endtime="20230309 17:51:54.758"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:51:54.760" level="INFO">Completed 29 Bytes/29 Bytes (10 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/testfile                 </msg>
<status status="PASS" starttime="20230309 17:51:54.759" endtime="20230309 17:51:54.760"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:51:54.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:51:54.760" endtime="20230309 17:51:54.761"/>
</kw>
<status status="PASS" starttime="20230309 17:51:51.053" endtime="20230309 17:51:54.761"/>
</kw>
<msg timestamp="20230309 17:51:54.762" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:51:51.052" endtime="20230309 17:51:54.763"/>
</kw>
<msg timestamp="20230309 17:51:54.763" level="INFO">${output} = Completed 29 Bytes/29 Bytes (10 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/testfile                 </msg>
<status status="PASS" starttime="20230309 17:51:51.052" endtime="20230309 17:51:54.763"/>
</kw>
<msg timestamp="20230309 17:51:54.764" level="INFO">${result} = Completed 29 Bytes/29 Bytes (10 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/testfile                 </msg>
<status status="PASS" starttime="20230309 17:51:51.051" endtime="20230309 17:51:54.764"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>upload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:51:54.764" endtime="20230309 17:51:54.765"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/dir1/dir2/file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:51:54.775" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://link/dir1/dir2/file 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:51:55.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:51:55.980" level="INFO">${output} = Completed 29 Bytes/29 Bytes (294 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/dir1/dir2/file            </msg>
<status status="PASS" starttime="20230309 17:51:54.768" endtime="20230309 17:51:55.981"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:51:55.984" level="INFO">Completed 29 Bytes/29 Bytes (294 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/dir1/dir2/file            </msg>
<status status="PASS" starttime="20230309 17:51:55.981" endtime="20230309 17:51:55.984"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:51:55.985" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:51:55.984" endtime="20230309 17:51:55.985"/>
</kw>
<status status="PASS" starttime="20230309 17:51:54.768" endtime="20230309 17:51:55.986"/>
</kw>
<msg timestamp="20230309 17:51:55.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:51:54.767" endtime="20230309 17:51:55.987"/>
</kw>
<msg timestamp="20230309 17:51:55.987" level="INFO">${output} = Completed 29 Bytes/29 Bytes (294 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/dir1/dir2/file            </msg>
<status status="PASS" starttime="20230309 17:51:54.766" endtime="20230309 17:51:55.988"/>
</kw>
<msg timestamp="20230309 17:51:55.994" level="INFO">${result} = Completed 29 Bytes/29 Bytes (294 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/dir1/dir2/file            </msg>
<status status="PASS" starttime="20230309 17:51:54.765" endtime="20230309 17:51:55.994"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>upload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:51:55.994" endtime="20230309 17:51:55.995"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:51:56.004" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://link 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:51:57.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:51:57.113" level="INFO">${output} =                            PRE dir1/
2023-03-09 17:51:54         29 testfile</msg>
<status status="PASS" starttime="20230309 17:51:56.000" endtime="20230309 17:51:57.113"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:51:57.115" level="INFO">                           PRE dir1/
2023-03-09 17:51:54         29 testfile</msg>
<status status="PASS" starttime="20230309 17:51:57.114" endtime="20230309 17:51:57.115"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:51:57.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:51:57.115" endtime="20230309 17:51:57.116"/>
</kw>
<status status="PASS" starttime="20230309 17:51:55.999" endtime="20230309 17:51:57.117"/>
</kw>
<msg timestamp="20230309 17:51:57.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:51:55.999" endtime="20230309 17:51:57.118"/>
</kw>
<msg timestamp="20230309 17:51:57.118" level="INFO">${output} =                            PRE dir1/
2023-03-09 17:51:54         29 testfile</msg>
<status status="PASS" starttime="20230309 17:51:55.998" endtime="20230309 17:51:57.118"/>
</kw>
<msg timestamp="20230309 17:51:57.118" level="INFO">${result} =                            PRE dir1/
2023-03-09 17:51:54         29 testfile</msg>
<status status="PASS" starttime="20230309 17:51:55.995" endtime="20230309 17:51:57.118"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:51:57.119" endtime="20230309 17:51:57.119"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:51:57.119" endtime="20230309 17:51:57.120"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:51:57.120" endtime="20230309 17:51:57.121"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/dir1/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:51:57.129" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://link/dir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:51:58.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:51:58.228" level="INFO">${output} =                            PRE dir2/</msg>
<status status="PASS" starttime="20230309 17:51:57.124" endtime="20230309 17:51:58.228"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:51:58.232" level="INFO">                           PRE dir2/</msg>
<status status="PASS" starttime="20230309 17:51:58.230" endtime="20230309 17:51:58.232"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:51:58.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:51:58.232" endtime="20230309 17:51:58.233"/>
</kw>
<status status="PASS" starttime="20230309 17:51:57.124" endtime="20230309 17:51:58.234"/>
</kw>
<msg timestamp="20230309 17:51:58.234" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:51:57.123" endtime="20230309 17:51:58.235"/>
</kw>
<msg timestamp="20230309 17:51:58.237" level="INFO">${output} =                            PRE dir2/</msg>
<status status="PASS" starttime="20230309 17:51:57.122" endtime="20230309 17:51:58.237"/>
</kw>
<msg timestamp="20230309 17:51:58.238" level="INFO">${result} =                            PRE dir2/</msg>
<status status="PASS" starttime="20230309 17:51:57.121" endtime="20230309 17:51:58.238"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:51:58.238" endtime="20230309 17:51:58.240"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:51:58.240" endtime="20230309 17:51:58.241"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:51:58.242" endtime="20230309 17:51:58.243"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/dir1/dir2/file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:51:58.252" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://link/dir1/dir2/file 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:51:59.375" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:51:59.376" level="INFO">${output} = 2023-03-09 17:51:55         29 file</msg>
<status status="PASS" starttime="20230309 17:51:58.246" endtime="20230309 17:51:59.376"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:51:59.377" level="INFO">2023-03-09 17:51:55         29 file</msg>
<status status="PASS" starttime="20230309 17:51:59.376" endtime="20230309 17:51:59.378"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:51:59.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:51:59.378" endtime="20230309 17:51:59.380"/>
</kw>
<status status="PASS" starttime="20230309 17:51:58.245" endtime="20230309 17:51:59.380"/>
</kw>
<msg timestamp="20230309 17:51:59.382" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:51:58.245" endtime="20230309 17:51:59.383"/>
</kw>
<msg timestamp="20230309 17:51:59.383" level="INFO">${output} = 2023-03-09 17:51:55         29 file</msg>
<status status="PASS" starttime="20230309 17:51:58.244" endtime="20230309 17:51:59.383"/>
</kw>
<msg timestamp="20230309 17:51:59.385" level="INFO">${result} = 2023-03-09 17:51:55         29 file</msg>
<status status="PASS" starttime="20230309 17:51:58.243" endtime="20230309 17:51:59.385"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:51:59.386" endtime="20230309 17:51:59.386"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:51:59.386" endtime="20230309 17:51:59.387"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>file</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:51:59.387" endtime="20230309 17:51:59.388"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:51:51.035" endtime="20230309 17:51:59.388"/>
</test>
<test id="s1-s6-s1-t2" name="File upload with special chars" line="50">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:51:59.400" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20230309 17:51:59.404" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:51:59.404" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:51:59.397" endtime="20230309 17:51:59.405"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:51:59.406" level="INFO"/>
<status status="PASS" starttime="20230309 17:51:59.405" endtime="20230309 17:51:59.407"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:51:59.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:51:59.407" endtime="20230309 17:51:59.408"/>
</kw>
<status status="PASS" starttime="20230309 17:51:59.395" endtime="20230309 17:51:59.408"/>
</kw>
<msg timestamp="20230309 17:51:59.408" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:51:59.394" endtime="20230309 17:51:59.409"/>
</kw>
<status status="PASS" starttime="20230309 17:51:59.393" endtime="20230309 17:51:59.410"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/specialchars/a+b</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:51:59.417" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://link/specialchars/a+b 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:52:00.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:52:00.695" level="INFO">${output} = Completed 29 Bytes/29 Bytes (250 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/specialchars/a+b          </msg>
<status status="PASS" starttime="20230309 17:51:59.413" endtime="20230309 17:52:00.695"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:52:00.696" level="INFO">Completed 29 Bytes/29 Bytes (250 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/specialchars/a+b          </msg>
<status status="PASS" starttime="20230309 17:52:00.695" endtime="20230309 17:52:00.697"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:52:00.697" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:52:00.697" endtime="20230309 17:52:00.698"/>
</kw>
<status status="PASS" starttime="20230309 17:51:59.412" endtime="20230309 17:52:00.699"/>
</kw>
<msg timestamp="20230309 17:52:00.699" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:51:59.412" endtime="20230309 17:52:00.700"/>
</kw>
<msg timestamp="20230309 17:52:00.700" level="INFO">${output} = Completed 29 Bytes/29 Bytes (250 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/specialchars/a+b          </msg>
<status status="PASS" starttime="20230309 17:51:59.411" endtime="20230309 17:52:00.700"/>
</kw>
<msg timestamp="20230309 17:52:00.700" level="INFO">${result} = Completed 29 Bytes/29 Bytes (250 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/specialchars/a+b          </msg>
<status status="PASS" starttime="20230309 17:51:59.410" endtime="20230309 17:52:00.701"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>upload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:52:00.701" endtime="20230309 17:52:00.701"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/specialchars/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:52:00.709" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://link/specialchars/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:52:01.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:52:01.678" level="INFO">${output} = 2023-03-09 17:52:00         29 a+b</msg>
<status status="PASS" starttime="20230309 17:52:00.705" endtime="20230309 17:52:01.678"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:52:01.680" level="INFO">2023-03-09 17:52:00         29 a+b</msg>
<status status="PASS" starttime="20230309 17:52:01.679" endtime="20230309 17:52:01.680"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:52:01.681" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:52:01.680" endtime="20230309 17:52:01.681"/>
</kw>
<status status="PASS" starttime="20230309 17:52:00.704" endtime="20230309 17:52:01.682"/>
</kw>
<msg timestamp="20230309 17:52:01.682" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:52:00.703" endtime="20230309 17:52:01.683"/>
</kw>
<msg timestamp="20230309 17:52:01.683" level="INFO">${output} = 2023-03-09 17:52:00         29 a+b</msg>
<status status="PASS" starttime="20230309 17:52:00.702" endtime="20230309 17:52:01.683"/>
</kw>
<msg timestamp="20230309 17:52:01.684" level="INFO">${result} = 2023-03-09 17:52:00         29 a+b</msg>
<status status="PASS" starttime="20230309 17:52:00.702" endtime="20230309 17:52:01.684"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>'a b'</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:52:01.684" endtime="20230309 17:52:01.685"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>a+b</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:52:01.685" endtime="20230309 17:52:01.686"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:51:59.391" endtime="20230309 17:52:01.686"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20230309 17:51:22.713" endtime="20230309 17:52:01.690"/>
</suite>
<suite id="s1-s6-s2" name="Boto3" source="/opt/hadoop/smoketest/s3/boto3.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:52:01.732" level="INFO">${randStr} = 5275077134</msg>
<status status="PASS" starttime="20230309 17:52:01.731" endtime="20230309 17:52:01.732"/>
</kw>
<msg timestamp="20230309 17:52:01.733" level="INFO">${random} = ozone-test-5275077134</msg>
<status status="PASS" starttime="20230309 17:52:01.730" endtime="20230309 17:52:01.733"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:52:01.737" level="INFO">${PREFIX} = ozone-test-5275077134</msg>
<status status="PASS" starttime="20230309 17:52:01.733" endtime="20230309 17:52:01.737"/>
</kw>
<status status="PASS" starttime="20230309 17:52:01.729" endtime="20230309 17:52:01.739"/>
</kw>
<status status="PASS" starttime="20230309 17:52:01.729" endtime="20230309 17:52:01.739"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which aws</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:52:01.747" level="INFO">Running command 'which aws 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:52:01.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:52:01.751" level="INFO">${output} = /usr/local/bin/aws</msg>
<status status="PASS" starttime="20230309 17:52:01.742" endtime="20230309 17:52:01.751"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230309 17:52:01.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:52:01.752" endtime="20230309 17:52:01.754"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20230309 17:52:01.754" endtime="20230309 17:52:01.754"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230309 17:52:01.755" endtime="20230309 17:52:01.755"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20230309 17:52:01.755" endtime="20230309 17:52:01.755"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230309 17:52:01.755" endtime="20230309 17:52:01.756"/>
</kw>
<status status="PASS" starttime="20230309 17:52:01.742" endtime="20230309 17:52:01.756"/>
</kw>
<status status="PASS" starttime="20230309 17:52:01.740" endtime="20230309 17:52:01.756"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:52:01.767" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:52:01.773" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:52:01.773" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230309 17:52:01.762" endtime="20230309 17:52:01.773"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:52:01.775" level="INFO">s3g</msg>
<status status="PASS" starttime="20230309 17:52:01.774" endtime="20230309 17:52:01.775"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:52:01.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:52:01.775" endtime="20230309 17:52:01.776"/>
</kw>
<status status="PASS" starttime="20230309 17:52:01.761" endtime="20230309 17:52:01.776"/>
</kw>
<msg timestamp="20230309 17:52:01.776" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:52:01.761" endtime="20230309 17:52:01.777"/>
</kw>
<msg timestamp="20230309 17:52:01.778" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230309 17:52:01.760" endtime="20230309 17:52:01.778"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:52:01.780" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:52:01.778" endtime="20230309 17:52:01.780"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:52:01.788" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:52:01.848" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:52:01.848" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:52:01.784" endtime="20230309 17:52:01.848"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:52:01.850" level="INFO"/>
<status status="PASS" starttime="20230309 17:52:01.849" endtime="20230309 17:52:01.850"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:52:01.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:52:01.850" endtime="20230309 17:52:01.851"/>
</kw>
<status status="PASS" starttime="20230309 17:52:01.783" endtime="20230309 17:52:01.851"/>
</kw>
<msg timestamp="20230309 17:52:01.852" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:52:01.782" endtime="20230309 17:52:01.852"/>
</kw>
<status status="PASS" starttime="20230309 17:52:01.781" endtime="20230309 17:52:01.853"/>
</kw>
<status status="PASS" starttime="20230309 17:52:01.781" endtime="20230309 17:52:01.853"/>
</kw>
<status status="PASS" starttime="20230309 17:52:01.759" endtime="20230309 17:52:01.853"/>
</kw>
<status status="PASS" starttime="20230309 17:52:01.759" endtime="20230309 17:52:01.853"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:52:01.862" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:52:12.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:52:12.518" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:52:01.859" endtime="20230309 17:52:12.518"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:52:12.520" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:52:12.519" endtime="20230309 17:52:12.520"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:52:12.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:52:12.520" endtime="20230309 17:52:12.521"/>
</kw>
<status status="PASS" starttime="20230309 17:52:01.857" endtime="20230309 17:52:12.522"/>
</kw>
<msg timestamp="20230309 17:52:12.522" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:52:01.857" endtime="20230309 17:52:12.522"/>
</kw>
<msg timestamp="20230309 17:52:12.523" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:52:01.856" endtime="20230309 17:52:12.523"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230309 17:52:12.524" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230309 17:52:12.523" endtime="20230309 17:52:12.524"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20230309 17:52:12.525" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230309 17:52:12.524" endtime="20230309 17:52:12.525"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230309 17:52:12.525" level="INFO">${secret} = ['15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670']</msg>
<status status="PASS" starttime="20230309 17:52:12.525" endtime="20230309 17:52:12.525"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:52:12.527" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:52:12.526" endtime="20230309 17:52:12.527"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:52:12.528" level="INFO">${secret} = 15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:52:12.527" endtime="20230309 17:52:12.528"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:52:12.536" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:52:13.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:52:13.476" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:52:12.532" endtime="20230309 17:52:13.476"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:52:13.478" level="INFO"/>
<status status="PASS" starttime="20230309 17:52:13.477" endtime="20230309 17:52:13.478"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:52:13.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:52:13.479" endtime="20230309 17:52:13.479"/>
</kw>
<status status="PASS" starttime="20230309 17:52:12.530" endtime="20230309 17:52:13.480"/>
</kw>
<msg timestamp="20230309 17:52:13.480" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:52:12.529" endtime="20230309 17:52:13.481"/>
</kw>
<status status="PASS" starttime="20230309 17:52:12.529" endtime="20230309 17:52:13.482"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:52:13.488" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:52:14.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:52:14.307" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:52:13.484" endtime="20230309 17:52:14.307"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:52:14.308" level="INFO"/>
<status status="PASS" starttime="20230309 17:52:14.308" endtime="20230309 17:52:14.309"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:52:14.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:52:14.309" endtime="20230309 17:52:14.310"/>
</kw>
<status status="PASS" starttime="20230309 17:52:13.483" endtime="20230309 17:52:14.310"/>
</kw>
<msg timestamp="20230309 17:52:14.311" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:52:13.483" endtime="20230309 17:52:14.312"/>
</kw>
<status status="PASS" starttime="20230309 17:52:13.482" endtime="20230309 17:52:14.312"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:52:14.317" level="INFO">Running command 'aws configure set aws_secret_access_key 15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:52:15.181" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:52:15.181" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:52:14.314" endtime="20230309 17:52:15.181"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:52:15.183" level="INFO"/>
<status status="PASS" starttime="20230309 17:52:15.182" endtime="20230309 17:52:15.183"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:52:15.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:52:15.184" endtime="20230309 17:52:15.185"/>
</kw>
<status status="PASS" starttime="20230309 17:52:14.313" endtime="20230309 17:52:15.185"/>
</kw>
<msg timestamp="20230309 17:52:15.185" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:52:14.313" endtime="20230309 17:52:15.186"/>
</kw>
<status status="PASS" starttime="20230309 17:52:14.312" endtime="20230309 17:52:15.187"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:52:15.196" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:52:16.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:52:16.052" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:52:15.190" endtime="20230309 17:52:16.052"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:52:16.053" level="INFO"/>
<status status="PASS" starttime="20230309 17:52:16.052" endtime="20230309 17:52:16.053"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:52:16.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:52:16.054" endtime="20230309 17:52:16.057"/>
</kw>
<status status="PASS" starttime="20230309 17:52:15.189" endtime="20230309 17:52:16.057"/>
</kw>
<msg timestamp="20230309 17:52:16.057" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:52:15.189" endtime="20230309 17:52:16.059"/>
</kw>
<status status="PASS" starttime="20230309 17:52:15.187" endtime="20230309 17:52:16.060"/>
</kw>
<status status="PASS" starttime="20230309 17:52:01.855" endtime="20230309 17:52:16.060"/>
</kw>
<status status="PASS" starttime="20230309 17:52:01.854" endtime="20230309 17:52:16.061"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:52:16.061" endtime="20230309 17:52:16.064"/>
</kw>
<status status="PASS" starttime="20230309 17:52:01.758" endtime="20230309 17:52:16.064"/>
</kw>
<status status="PASS" starttime="20230309 17:52:01.757" endtime="20230309 17:52:16.065"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230309 17:52:16.067" endtime="20230309 17:52:16.067"/>
</kw>
<msg timestamp="20230309 17:52:16.068" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20230309 17:52:16.065" endtime="20230309 17:52:16.068"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:52:16.069" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20230309 17:52:16.068" endtime="20230309 17:52:16.069"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup links for S3 tests" library="commonawslib">
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:52:16.075" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/link 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:52:28.556" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:52:28.556" level="INFO">${output} = {
  "volumeName" : "s3v",
  "bucketName" : "link",
  "sourceVolume" : "legacy",
  "sourceBucket" : "source-bucket",
  "creationTime" : "2023-03-09T17:51:22.562Z",
  "modificationTime" : "2023-03-09T17...</msg>
<status status="PASS" starttime="20230309 17:52:16.071" endtime="20230309 17:52:28.556"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:52:28.557" endtime="20230309 17:52:28.558"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:52:28.558" endtime="20230309 17:52:28.559"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:52:28.559" endtime="20230309 17:52:28.559"/>
</kw>
<msg timestamp="20230309 17:52:28.561" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20230309 17:52:16.070" endtime="20230309 17:52:28.561"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230309 17:52:28.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:52:28.561" endtime="20230309 17:52:28.562"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://${OM_SERVICE_ID}/legacy</arg>
<status status="NOT RUN" starttime="20230309 17:52:28.562" endtime="20230309 17:52:28.563"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create o3://${OM_SERVICE_ID}/legacy/source-bucket</arg>
<status status="NOT RUN" starttime="20230309 17:52:28.563" endtime="20230309 17:52:28.563"/>
</kw>
<kw name="Create link" library="commonawslib">
<arg>link</arg>
<status status="NOT RUN" starttime="20230309 17:52:28.563" endtime="20230309 17:52:28.563"/>
</kw>
<status status="PASS" starttime="20230309 17:52:16.070" endtime="20230309 17:52:28.563"/>
</kw>
<status status="PASS" starttime="20230309 17:52:16.069" endtime="20230309 17:52:28.564"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:52:28.564" endtime="20230309 17:52:28.564"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:52:28.565" endtime="20230309 17:52:28.566"/>
</kw>
<status status="PASS" starttime="20230309 17:52:01.728" endtime="20230309 17:52:28.566"/>
</kw>
<test id="s1-s6-s2-t1" name="Boto3 Client Test" line="34">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>python3 ${S3_SMOKETEST_DIR}/boto_client.py ${ENDPOINT_URL} ${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:52:28.575" level="INFO">Running command 'python3 /opt/hadoop/smoketest/s3/boto_client.py http://s3g:9878 link 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:52:34.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:52:34.468" level="INFO">${output} = test_create_bucket (__main__.TestBotoClient) ... ok
test_list_bucket (__main__.TestBotoClient) ... {'ResponseMetadata': {'RequestId': '74f287db-e498-475b-b147-eb563ba112ca', 'HostId': 'uJVscabPd8xWEGz...</msg>
<status status="PASS" starttime="20230309 17:52:28.571" endtime="20230309 17:52:34.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:52:34.474" level="INFO">test_create_bucket (__main__.TestBotoClient) ... ok
test_list_bucket (__main__.TestBotoClient) ... {'ResponseMetadata': {'RequestId': '74f287db-e498-475b-b147-eb563ba112ca', 'HostId': 'uJVscabPd8xWEGz', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Thu, 09 Mar 2023 17:52:29 GMT', 'cache-control': 'no-cache', 'expires': 'Thu, 09 Mar 2023 17:52:29 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'location': 'http://s3g:9878/ozone-test-bqbewxqjep', 'server': 'Ozone', 'x-amz-id-2': 'uJVscabPd8xWEGz', 'x-amz-request-id': '74f287db-e498-475b-b147-eb563ba112ca', 'content-length': '0'}, 'RetryAttempts': 0}, 'Location': 'http://s3g:9878/ozone-test-bqbewxqjep'}
None
None
None
{'ResponseMetadata': {'RequestId': 'bb0e15f8-b129-45f6-834a-ea18d64ff825', 'HostId': 'RI9MCTGl5J1', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Thu, 09 Mar 2023 17:52:31 GMT', 'cache-control': 'no-cache', 'expires': 'Thu, 09 Mar 2023 17:52:31 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'location': 'http://s3g:9878/bucket-xqwicagvbg', 'server': 'Ozone', 'x-amz-id-2': 'RI9MCTGl5J1', 'x-amz-request-id': 'bb0e15f8-b129-45f6-834a-ea18d64ff825', 'content-length': '0'}, 'RetryAttempts': 0}, 'Location': 'http://s3g:9878/bucket-xqwicagvbg'}
{'ResponseMetadata': {'RequestId': '57f79e27-d7e2-4d48-b2c0-d10ff400b9fa', 'HostId': 'uz5U50zIGS', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Thu, 09 Mar 2023 17:52:31 GMT', 'cache-control': 'no-cache', 'expires': 'Thu, 09 Mar 2023 17:52:31 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'uz5U50zIGS', 'x-amz-request-id': '57f79e27-d7e2-4d48-b2c0-d10ff400b9fa', 'transfer-encoding': 'chunked'}, 'RetryAttempts': 0}, 'Buckets': [{'Name': 'bucket-iakidlftmk', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 40, 46, 527000, tzinfo=tzlocal())}, {'Name': 'bucket-ozone-test-0662512089', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 41, 26, 739000, tzinfo=tzlocal())}, {'Name': 'bucket-ozone-test-0854448483', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 41, 21, 851000, tzinfo=tzlocal())}, {'Name': 'bucket-ozone-test-2530672355', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 11, 37, 528000, tzinfo=tzlocal())}, {'Name': 'bucket-ozone-test-2540702007', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 41, 23, 95000, tzinfo=tzlocal())}, {'Name': 'bucket-test123', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 11, 38, 450000, tzinfo=tzlocal())}, {'Name': 'bucket-xqwicagvbg', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 52, 31, 783000, tzinfo=tzlocal())}, {'Name': 'destbucket-65213', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 46, 20, 398000, tzinfo=tzlocal())}, {'Name': 'encrypted', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 39, 38, 26000, tzinfo=tzlocal())}, {'Name': 'link', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 51, 22, 562000, tzinfo=tzlocal())}, {'Name': 'ozone-test-bqbewxqjep', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 52, 29, 433000, tzinfo=tzlocal())}, {'Name': 's3bg0', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 47, 56000, tzinfo=tzlocal())}, {'Name': 's3bg1', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 46, 995000, tzinfo=tzlocal())}, {'Name': 's3bg10', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 47, 408000, tzinfo=tzlocal())}, {'Name': 's3bg11', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 47, 321000, tzinfo=tzlocal())}, {'Name': 's3bg12', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 47, 343000, tzinfo=tzlocal())}, {'Name': 's3bg13', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 47, 341000, tzinfo=tzlocal())}, {'Name': 's3bg14', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 47, 255000, tzinfo=tzlocal())}, {'Name': 's3bg15', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 47, 323000, tzinfo=tzlocal())}, {'Name': 's3bg16', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 47, 332000, tzinfo=tzlocal())}, {'Name': 's3bg17', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 47, 337000, tzinfo=tzlocal())}, {'Name': 's3bg18', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 47, 324000, tzinfo=tzlocal())}, {'Name': 's3bg19', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 47, 422000, tzinfo=tzlocal())}, {'Name': 's3bg2', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 47, 46000, tzinfo=tzlocal())}, {'Name': 's3bg20', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 47, 425000, tzinfo=tzlocal())}, {'Name': 's3bg21', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 47, 661000, tzinfo=tzlocal())}, {'Name': 's3bg22', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 47, 648000, tzinfo=tzlocal())}, {'Name': 's3bg23', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 47, 851000, tzinfo=tzlocal())}, {'Name': 's3bg24', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 47, 660000, tzinfo=tzlocal())}, {'Name': 's3bg25', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 47, 521000, tzinfo=tzlocal())}, {'Name': 's3bg26', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 47, 530000, tzinfo=tzlocal())}, {'Name': 's3bg27', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 47, 516000, tzinfo=tzlocal())}, {'Name': 's3bg28', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 47, 622000, tzinfo=tzlocal())}, {'Name': 's3bg29', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 47, 622000, tzinfo=tzlocal())}, {'Name': 's3bg3', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 47, 87000, tzinfo=tzlocal())}, {'Name': 's3bg30', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 47, 629000, tzinfo=tzlocal())}, {'Name': 's3bg31', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 47, 636000, tzinfo=tzlocal())}, {'Name': 's3bg32', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 47, 614000, tzinfo=tzlocal())}, {'Name': 's3bg33', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 47, 805000, tzinfo=tzlocal())}, {'Name': 's3bg34', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 47, 914000, tzinfo=tzlocal())}, {'Name': 's3bg35', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 47, 808000, tzinfo=tzlocal())}, {'Name': 's3bg36', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 47, 923000, tzinfo=tzlocal())}, {'Name': 's3bg37', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 47, 875000, tzinfo=tzlocal())}, {'Name': 's3bg38', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 47, 882000, tzinfo=tzlocal())}, {'Name': 's3bg39', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 47, 851000, tzinfo=tzlocal())}, {'Name': 's3bg4', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 47, 423000, tzinfo=tzlocal())}, {'Name': 's3bg40', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 47, 796000, tzinfo=tzlocal())}, {'Name': 's3bg41', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 47, 809000, tzinfo=tzlocal())}, {'Name': 's3bg42', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 47, 949000, tzinfo=tzlocal())}, {'Name': 's3bg43', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 47, 882000, tzinfo=tzlocal())}, {'Name': 's3bg44', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 48, 176000, tzinfo=tzlocal())}, {'Name': 's3bg45', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 48, 67000, tzinfo=tzlocal())}, {'Name': 's3bg46', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 48, 27000, tzinfo=tzlocal())}, {'Name': 's3bg47', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 48, 186000, tzinfo=tzlocal())}, {'Name': 's3bg48', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 48, 5000, tzinfo=tzlocal())}, {'Name': 's3bg49', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 48, 64000, tzinfo=tzlocal())}, {'Name': 's3bg5', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 47, 34000, tzinfo=tzlocal())}, {'Name': 's3bg50', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 47, 993000, tzinfo=tzlocal())}, {'Name': 's3bg51', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 48, 5000, tzinfo=tzlocal())}, {'Name': 's3bg52', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 48, 67000, tzinfo=tzlocal())}, {'Name': 's3bg53', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 48, 122000, tzinfo=tzlocal())}, {'Name': 's3bg54', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 48, 194000, tzinfo=tzlocal())}, {'Name': 's3bg55', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 48, 188000, tzinfo=tzlocal())}, {'Name': 's3bg56', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 48, 184000, tzinfo=tzlocal())}, {'Name': 's3bg57', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 48, 190000, tzinfo=tzlocal())}, {'Name': 's3bg58', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 48, 193000, tzinfo=tzlocal())}, {'Name': 's3bg59', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 48, 187000, tzinfo=tzlocal())}, {'Name': 's3bg6', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 47, 31000, tzinfo=tzlocal())}, {'Name': 's3bg60', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 48, 197000, tzinfo=tzlocal())}, {'Name': 's3bg61', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 48, 186000, tzinfo=tzlocal())}, {'Name': 's3bg62', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 48, 417000, tzinfo=tzlocal())}, {'Name': 's3bg63', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 48, 382000, tzinfo=tzlocal())}, {'Name': 's3bg64', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 48, 309000, tzinfo=tzlocal())}, {'Name': 's3bg65', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 48, 417000, tzinfo=tzlocal())}, {'Name': 's3bg66', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 48, 371000, tzinfo=tzlocal())}, {'Name': 's3bg67', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 48, 382000, tzinfo=tzlocal())}, {'Name': 's3bg68', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 48, 409000, tzinfo=tzlocal())}, {'Name': 's3bg69', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 48, 384000, tzinfo=tzlocal())}, {'Name': 's3bg7', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 47, 32000, tzinfo=tzlocal())}, {'Name': 's3bg70', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 48, 380000, tzinfo=tzlocal())}, {'Name': 's3bg71', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 48, 589000, tzinfo=tzlocal())}, {'Name': 's3bg72', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 48, 634000, tzinfo=tzlocal())}, {'Name': 's3bg73', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 48, 579000, tzinfo=tzlocal())}, {'Name': 's3bg74', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 48, 701000, tzinfo=tzlocal())}, {'Name': 's3bg75', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 48, 589000, tzinfo=tzlocal())}, {'Name': 's3bg76', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 48, 589000, tzinfo=tzlocal())}, {'Name': 's3bg77', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 48, 594000, tzinfo=tzlocal())}, {'Name': 's3bg78', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 48, 606000, tzinfo=tzlocal())}, {'Name': 's3bg79', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 48, 588000, tzinfo=tzlocal())}, {'Name': 's3bg8', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 47, 14000, tzinfo=tzlocal())}, {'Name': 's3bg80', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 48, 563000, tzinfo=tzlocal())}, {'Name': 's3bg81', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 48, 781000, tzinfo=tzlocal())}, {'Name': 's3bg82', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 48, 711000, tzinfo=tzlocal())}, {'Name': 's3bg83', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 48, 728000, tzinfo=tzlocal())}, {'Name': 's3bg84', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 48, 868000, tzinfo=tzlocal())}, {'Name': 's3bg85', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 48, 863000, tzinfo=tzlocal())}, {'Name': 's3bg86', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 48, 746000, tzinfo=tzlocal())}, {'Name': 's3bg87', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 48, 729000, tzinfo=tzlocal())}, {'Name': 's3bg88', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 48, 758000, tzinfo=tzlocal())}, {'Name': 's3bg89', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 48, 846000, tzinfo=tzlocal())}, {'Name': 's3bg9', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 47, 25000, tzinfo=tzlocal())}, {'Name': 's3bg90', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 48, 969000, tzinfo=tzlocal())}, {'Name': 's3bg91', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 48, 792000, tzinfo=tzlocal())}, {'Name': 's3bg92', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 48, 929000, tzinfo=tzlocal())}, {'Name': 's3bg93', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 48, 928000, tzinfo=tzlocal())}, {'Name': 's3bg94', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 48, 929000, tzinfo=tzlocal())}, {'Name': 's3bg95', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 48, 957000, tzinfo=tzlocal())}, {'Name': 's3bg96', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 48, 971000, tzinfo=tzlocal())}, {'Name': 's3bg97', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 48, 835000, tzinfo=tzlocal())}, {'Name': 's3bg98', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 48, 955000, tzinfo=tzlocal())}, {'Name': 's3bg99', 'CreationDate': datetime.datetime(2023, 3, 9, 17, 43, 49, 17000, tzinfo=tzlocal())}]}ok
test_head_bucket (__main__.TestBotoClient) ... ok
test_bucket_delete (__main__.TestBotoClient) ... ok
test_upload_file (__main__.TestBotoClient) ... ok
test_download_file (__main__.TestBotoClient) ... ok
test_delete_objects (__main__.TestBotoClient) ... ok
test_head_object (__main__.TestBotoClient) ... ok
test_multi_uploads (__main__.TestBotoClient) ... ok

----------------------------------------------------------------------
Ran 9 tests in 5.305s

OK

{'ResponseMetadata': {'RequestId': 'b9064c2d-48be-4e34-b2a0-dc8ae97f2f4c', 'HostId': '8swpIOZu1aIid', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Thu, 09 Mar 2023 17:52:31 GMT', 'cache-control': 'no-cache', 'expires': 'Thu, 09 Mar 2023 17:52:31 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': '8swpIOZu1aIid', 'x-amz-request-id': 'b9064c2d-48be-4e34-b2a0-dc8ae97f2f4c', 'content-length': '0'}, 'RetryAttempts': 0}}
{'ResponseMetadata': {'RequestId': 'c86d1ea8-088a-4b70-ac30-c56c46e976d6', 'HostId': 'TVsmnkXhY', 'HTTPStatusCode': 204, 'HTTPHeaders': {'date': 'Thu, 09 Mar 2023 17:52:31 GMT', 'cache-control': 'no-cache', 'expires': 'Thu, 09 Mar 2023 17:52:31 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'TVsmnkXhY', 'x-amz-request-id': 'c86d1ea8-088a-4b70-ac30-c56c46e976d6'}, 'RetryAttempts': 0}}
{'ResponseMetadata': {'RequestId': '03b7a0b6-4987-4708-b1af-619ade456fd8', 'HostId': 'DCGYd6cgwMTVbd', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Thu, 09 Mar 2023 17:52:32 GMT', 'cache-control': 'no-cache', 'expires': 'Thu, 09 Mar 2023 17:52:32 GMT', 'pragma': 'no-cache', 'content-type': 'binary/octet-stream', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'etag': '2023-03-09T17:52:32.088Z', 'last-modified': 'Thu, 09 Mar 2023 17:52:32 GMT', 'server': 'Ozone', 'x-amz-id-2': 'DCGYd6cgwMTVbd', 'x-amz-request-id': '03b7a0b6-4987-4708-b1af-619ade456fd8', 'content-length': '3879'}, 'RetryAttempts': 0}, 'LastModified': datetime.datetime(2023, 3, 9, 17, 52, 32, tzinfo=tzutc()), 'ContentLength': 3879, 'ETag': '2023-03-09T17:52:32.088Z', 'CacheControl': 'no-cache', 'ContentType': 'binary/octet-stream', 'Expires': datetime.datetime(2023, 3, 9, 17, 52, 32, tzinfo=tzutc()), 'Metadata': {}}
{'ResponseMetadata': {'RequestId': 'f07816b0-2e9f-4f9f-9243-07836455f3d9', 'HostId': 'BDUN40Iv', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Thu, 09 Mar 2023 17:52:32 GMT', 'cache-control': 'no-cache', 'expires': 'Thu, 09 Mar 2023 17:52:32 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'BDUN40Iv', 'x-amz-request-id': 'f07816b0-2e9f-4f9f-9243-07836455f3d9', 'content-length': '212'}, 'RetryAttempts': 0}, 'Deleted': [{'Key': 'README4.md'}, {'Key': 'README3.md'}]}
{'ResponseMetadata': {'RequestId': '182d9491-05f0-4473-a196-531d8d79b67b', 'HostId': 'qeQoTXj3FiYxA', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Thu, 09 Mar 2023 17:52:32 GMT', 'cache-control': 'no-cache', 'expires': 'Thu, 09 Mar 2023 17:52:32 GMT', 'pragma': 'no-cache', 'content-type': 'binary/octet-stream', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'etag': '2023-03-09T17:52:29.888Z', 'last-modified': 'Thu, 09 Mar 2023 17:52:29 GMT', 'server': 'Ozone', 'x-amz-id-2': 'qeQoTXj3FiYxA', 'x-amz-request-id': '182d9491-05f0-4473-a196-531d8d79b67b', 'content-length': '3879'}, 'RetryAttempts': 0}, 'LastModified': datetime.datetime(2023, 3, 9, 17, 52, 29, tzinfo=tzutc()), 'ContentLength': 3879, 'ETag': '2023-03-09T17:52:29.888Z', 'CacheControl': 'no-cache', 'ContentType': 'binary/octet-stream', 'Expires': datetime.datetime(2023, 3, 9, 17, 52, 32, tzinfo=tzutc()), 'Metadata': {}}
{'ResponseMetadata': {'RequestId': 'f0a0de14-9aa0-4ad3-97ad-7282ce970502', 'HostId': 'RzUrbGdnFQ', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Thu, 09 Mar 2023 17:52:32 GMT', 'cache-control': 'no-cache', 'expires': 'Thu, 09 Mar 2023 17:52:32 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'RzUrbGdnFQ', 'x-amz-request-id': 'f0a0de14-9aa0-4ad3-97ad-7282ce970502', 'content-length': '284'}, 'RetryAttempts': 0}, 'Bucket': 'link', 'Key': 'cvtbyojzsg', 'UploadId': '4fa75f83-bd4e-4744-8455-1f690f2baa87-109994596914036868'}
{'ResponseMetadata': {'RequestId': 'e87ee93f-f8ff-4a7e-811b-e5787dcb148c', 'HostId': 'eNjql2sQT5s', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Thu, 09 Mar 2023 17:52:34 GMT', 'cache-control': 'no-cache', 'expires': 'Thu, 09 Mar 2023 17:52:34 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'eNjql2sQT5s', 'x-amz-request-id': 'e87ee93f-f8ff-4a7e-811b-e5787dcb148c', 'content-length': '310'}, 'RetryAttempts': 0}, 'Location': 'link', 'Bucket': 'link', 'Key': 'cvtbyojzsg', 'ETag': 'a37ea1e900b7918399090ff9a5dee98ec82d45c62232293a4580f96dbee943ba'}
Boto3 Client Test PASSED!</msg>
<status status="PASS" starttime="20230309 17:52:34.472" endtime="20230309 17:52:34.476"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:52:34.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:52:34.476" endtime="20230309 17:52:34.477"/>
</kw>
<status status="PASS" starttime="20230309 17:52:28.570" endtime="20230309 17:52:34.477"/>
</kw>
<msg timestamp="20230309 17:52:34.478" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:52:28.570" endtime="20230309 17:52:34.480"/>
</kw>
<msg timestamp="20230309 17:52:34.484" level="INFO">${result} = test_create_bucket (__main__.TestBotoClient) ... ok
test_list_bucket (__main__.TestBotoClient) ... {'ResponseMetadata': {'RequestId': '74f287db-e498-475b-b147-eb563ba112ca', 'HostId': 'uJVscabPd8xWEGz...</msg>
<status status="PASS" starttime="20230309 17:52:28.569" endtime="20230309 17:52:34.484"/>
</kw>
<timeout value="15 minutes"/>
<status status="PASS" starttime="20230309 17:52:28.567" endtime="20230309 17:52:34.485"/>
</test>
<doc>S3 gateway test with Boto3 Client</doc>
<status status="PASS" starttime="20230309 17:52:01.693" endtime="20230309 17:52:34.490"/>
</suite>
<suite id="s1-s6-s3" name="Bucketdelete" source="/opt/hadoop/smoketest/s3/bucketdelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:52:34.526" level="INFO">${randStr} = 1832799541</msg>
<status status="PASS" starttime="20230309 17:52:34.526" endtime="20230309 17:52:34.526"/>
</kw>
<msg timestamp="20230309 17:52:34.527" level="INFO">${random} = ozone-test-1832799541</msg>
<status status="PASS" starttime="20230309 17:52:34.525" endtime="20230309 17:52:34.527"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:52:34.530" level="INFO">${PREFIX} = ozone-test-1832799541</msg>
<status status="PASS" starttime="20230309 17:52:34.527" endtime="20230309 17:52:34.530"/>
</kw>
<status status="PASS" starttime="20230309 17:52:34.525" endtime="20230309 17:52:34.530"/>
</kw>
<status status="PASS" starttime="20230309 17:52:34.525" endtime="20230309 17:52:34.530"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which aws</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:52:34.536" level="INFO">Running command 'which aws 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:52:34.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:52:34.541" level="INFO">${output} = /usr/local/bin/aws</msg>
<status status="PASS" starttime="20230309 17:52:34.531" endtime="20230309 17:52:34.541"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230309 17:52:34.543" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:52:34.542" endtime="20230309 17:52:34.544"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20230309 17:52:34.545" endtime="20230309 17:52:34.545"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230309 17:52:34.545" endtime="20230309 17:52:34.545"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20230309 17:52:34.545" endtime="20230309 17:52:34.545"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230309 17:52:34.546" endtime="20230309 17:52:34.546"/>
</kw>
<status status="PASS" starttime="20230309 17:52:34.531" endtime="20230309 17:52:34.546"/>
</kw>
<status status="PASS" starttime="20230309 17:52:34.531" endtime="20230309 17:52:34.546"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:52:34.556" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:52:34.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:52:34.563" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230309 17:52:34.553" endtime="20230309 17:52:34.563"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:52:34.565" level="INFO">s3g</msg>
<status status="PASS" starttime="20230309 17:52:34.564" endtime="20230309 17:52:34.565"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:52:34.566" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:52:34.565" endtime="20230309 17:52:34.566"/>
</kw>
<status status="PASS" starttime="20230309 17:52:34.552" endtime="20230309 17:52:34.567"/>
</kw>
<msg timestamp="20230309 17:52:34.567" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:52:34.552" endtime="20230309 17:52:34.568"/>
</kw>
<msg timestamp="20230309 17:52:34.568" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230309 17:52:34.551" endtime="20230309 17:52:34.568"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:52:34.571" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:52:34.569" endtime="20230309 17:52:34.571"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:52:34.579" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:52:34.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:52:34.613" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:52:34.574" endtime="20230309 17:52:34.613"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:52:34.615" level="INFO"/>
<status status="PASS" starttime="20230309 17:52:34.614" endtime="20230309 17:52:34.616"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:52:34.617" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:52:34.616" endtime="20230309 17:52:34.617"/>
</kw>
<status status="PASS" starttime="20230309 17:52:34.573" endtime="20230309 17:52:34.617"/>
</kw>
<msg timestamp="20230309 17:52:34.618" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:52:34.573" endtime="20230309 17:52:34.618"/>
</kw>
<status status="PASS" starttime="20230309 17:52:34.572" endtime="20230309 17:52:34.619"/>
</kw>
<status status="PASS" starttime="20230309 17:52:34.572" endtime="20230309 17:52:34.619"/>
</kw>
<status status="PASS" starttime="20230309 17:52:34.549" endtime="20230309 17:52:34.620"/>
</kw>
<status status="PASS" starttime="20230309 17:52:34.548" endtime="20230309 17:52:34.620"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:52:34.628" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:52:45.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:52:45.347" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:52:34.625" endtime="20230309 17:52:45.347"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:52:45.350" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:52:45.348" endtime="20230309 17:52:45.350"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:52:45.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:52:45.350" endtime="20230309 17:52:45.351"/>
</kw>
<status status="PASS" starttime="20230309 17:52:34.624" endtime="20230309 17:52:45.352"/>
</kw>
<msg timestamp="20230309 17:52:45.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:52:34.623" endtime="20230309 17:52:45.354"/>
</kw>
<msg timestamp="20230309 17:52:45.355" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:52:34.622" endtime="20230309 17:52:45.355"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230309 17:52:45.356" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230309 17:52:45.355" endtime="20230309 17:52:45.357"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20230309 17:52:45.358" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230309 17:52:45.357" endtime="20230309 17:52:45.358"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230309 17:52:45.361" level="INFO">${secret} = ['15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670']</msg>
<status status="PASS" starttime="20230309 17:52:45.360" endtime="20230309 17:52:45.361"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:52:45.364" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:52:45.362" endtime="20230309 17:52:45.364"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:52:45.365" level="INFO">${secret} = 15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:52:45.364" endtime="20230309 17:52:45.365"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:52:45.375" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:52:46.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:52:46.334" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:52:45.368" endtime="20230309 17:52:46.334"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:52:46.335" level="INFO"/>
<status status="PASS" starttime="20230309 17:52:46.334" endtime="20230309 17:52:46.335"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:52:46.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:52:46.335" endtime="20230309 17:52:46.336"/>
</kw>
<status status="PASS" starttime="20230309 17:52:45.367" endtime="20230309 17:52:46.337"/>
</kw>
<msg timestamp="20230309 17:52:46.337" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:52:45.366" endtime="20230309 17:52:46.338"/>
</kw>
<status status="PASS" starttime="20230309 17:52:45.366" endtime="20230309 17:52:46.339"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:52:46.345" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:52:47.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:52:47.232" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:52:46.341" endtime="20230309 17:52:47.232"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:52:47.234" level="INFO"/>
<status status="PASS" starttime="20230309 17:52:47.233" endtime="20230309 17:52:47.234"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:52:47.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:52:47.234" endtime="20230309 17:52:47.235"/>
</kw>
<status status="PASS" starttime="20230309 17:52:46.340" endtime="20230309 17:52:47.235"/>
</kw>
<msg timestamp="20230309 17:52:47.235" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:52:46.339" endtime="20230309 17:52:47.236"/>
</kw>
<status status="PASS" starttime="20230309 17:52:46.339" endtime="20230309 17:52:47.236"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:52:47.242" level="INFO">Running command 'aws configure set aws_secret_access_key 15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:52:48.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:52:48.087" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:52:47.239" endtime="20230309 17:52:48.087"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:52:48.089" level="INFO"/>
<status status="PASS" starttime="20230309 17:52:48.087" endtime="20230309 17:52:48.089"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:52:48.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:52:48.089" endtime="20230309 17:52:48.090"/>
</kw>
<status status="PASS" starttime="20230309 17:52:47.238" endtime="20230309 17:52:48.090"/>
</kw>
<msg timestamp="20230309 17:52:48.091" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:52:47.238" endtime="20230309 17:52:48.091"/>
</kw>
<status status="PASS" starttime="20230309 17:52:47.237" endtime="20230309 17:52:48.092"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:52:48.099" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:52:48.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:52:48.941" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:52:48.094" endtime="20230309 17:52:48.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:52:48.943" level="INFO"/>
<status status="PASS" starttime="20230309 17:52:48.942" endtime="20230309 17:52:48.943"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:52:48.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:52:48.943" endtime="20230309 17:52:48.944"/>
</kw>
<status status="PASS" starttime="20230309 17:52:48.093" endtime="20230309 17:52:48.945"/>
</kw>
<msg timestamp="20230309 17:52:48.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:52:48.093" endtime="20230309 17:52:48.946"/>
</kw>
<status status="PASS" starttime="20230309 17:52:48.092" endtime="20230309 17:52:48.946"/>
</kw>
<status status="PASS" starttime="20230309 17:52:34.621" endtime="20230309 17:52:48.947"/>
</kw>
<status status="PASS" starttime="20230309 17:52:34.620" endtime="20230309 17:52:48.947"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:52:48.947" endtime="20230309 17:52:48.948"/>
</kw>
<status status="PASS" starttime="20230309 17:52:34.548" endtime="20230309 17:52:48.948"/>
</kw>
<status status="PASS" starttime="20230309 17:52:34.546" endtime="20230309 17:52:48.948"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230309 17:52:48.949" endtime="20230309 17:52:48.950"/>
</kw>
<msg timestamp="20230309 17:52:48.950" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20230309 17:52:48.948" endtime="20230309 17:52:48.950"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:52:48.951" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20230309 17:52:48.950" endtime="20230309 17:52:48.951"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup links for S3 tests" library="commonawslib">
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:52:48.960" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/link 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:53:02.788" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:53:02.788" level="INFO">${output} = {
  "volumeName" : "s3v",
  "bucketName" : "link",
  "sourceVolume" : "legacy",
  "sourceBucket" : "source-bucket",
  "creationTime" : "2023-03-09T17:51:22.562Z",
  "modificationTime" : "2023-03-09T17...</msg>
<status status="PASS" starttime="20230309 17:52:48.955" endtime="20230309 17:53:02.788"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:53:02.789" endtime="20230309 17:53:02.791"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:53:02.791" endtime="20230309 17:53:02.791"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:53:02.792" endtime="20230309 17:53:02.793"/>
</kw>
<msg timestamp="20230309 17:53:02.794" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20230309 17:52:48.955" endtime="20230309 17:53:02.794"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230309 17:53:02.795" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:53:02.794" endtime="20230309 17:53:02.796"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://${OM_SERVICE_ID}/legacy</arg>
<status status="NOT RUN" starttime="20230309 17:53:02.796" endtime="20230309 17:53:02.796"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create o3://${OM_SERVICE_ID}/legacy/source-bucket</arg>
<status status="NOT RUN" starttime="20230309 17:53:02.796" endtime="20230309 17:53:02.796"/>
</kw>
<kw name="Create link" library="commonawslib">
<arg>link</arg>
<status status="NOT RUN" starttime="20230309 17:53:02.796" endtime="20230309 17:53:02.797"/>
</kw>
<status status="PASS" starttime="20230309 17:52:48.954" endtime="20230309 17:53:02.797"/>
</kw>
<status status="PASS" starttime="20230309 17:52:48.952" endtime="20230309 17:53:02.797"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:53:02.797" endtime="20230309 17:53:02.798"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:53:02.798" endtime="20230309 17:53:02.799"/>
</kw>
<status status="PASS" starttime="20230309 17:52:34.524" endtime="20230309 17:53:02.800"/>
</kw>
<test id="s1-s6-s3-t1" name="Delete existing bucket" line="37">
<kw name="Create bucket to be deleted">
<var>${bucket}</var>
<kw name="Run Keyword If" library="BuiltIn">
<var>${bucket}</var>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Create link</arg>
<arg>to-be-deleted</arg>
<arg>ELSE</arg>
<arg>Run Keyword</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create link" library="commonawslib">
<arg>to-be-deleted</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket link o3://${OM_SERVICE_ID}/legacy/source-bucket o3://${OM_SERVICE_ID}/s3v/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:53:02.812" level="INFO">Running command 'ozone sh bucket link o3://om/legacy/source-bucket o3://om/s3v/to-be-deleted 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:53:15.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:53:15.619" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:53:02.808" endtime="20230309 17:53:15.619"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:53:15.622" level="INFO"/>
<status status="PASS" starttime="20230309 17:53:15.620" endtime="20230309 17:53:15.622"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:53:15.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:53:15.622" endtime="20230309 17:53:15.624"/>
</kw>
<status status="PASS" starttime="20230309 17:53:02.808" endtime="20230309 17:53:15.625"/>
</kw>
<msg timestamp="20230309 17:53:15.626" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:53:02.807" endtime="20230309 17:53:15.627"/>
</kw>
<status status="PASS" starttime="20230309 17:53:02.806" endtime="20230309 17:53:15.628"/>
</kw>
<status status="PASS" starttime="20230309 17:53:02.805" endtime="20230309 17:53:15.628"/>
</kw>
<msg timestamp="20230309 17:53:15.628" level="INFO">${bucket} = to-be-deleted</msg>
<status status="PASS" starttime="20230309 17:53:02.804" endtime="20230309 17:53:15.628"/>
</kw>
<msg timestamp="20230309 17:53:15.629" level="INFO">${bucket} = to-be-deleted</msg>
<status status="PASS" starttime="20230309 17:53:02.803" endtime="20230309 17:53:15.629"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>delete-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:53:15.642" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket to-be-deleted 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:53:16.805" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:53:16.806" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:53:15.639" endtime="20230309 17:53:16.806"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:53:16.807" level="INFO"/>
<status status="PASS" starttime="20230309 17:53:16.806" endtime="20230309 17:53:16.808"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:53:16.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:53:16.808" endtime="20230309 17:53:16.809"/>
</kw>
<status status="PASS" starttime="20230309 17:53:15.636" endtime="20230309 17:53:16.810"/>
</kw>
<msg timestamp="20230309 17:53:16.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:53:15.636" endtime="20230309 17:53:16.810"/>
</kw>
<msg timestamp="20230309 17:53:16.811" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:53:15.635" endtime="20230309 17:53:16.811"/>
</kw>
<status status="PASS" starttime="20230309 17:53:15.629" endtime="20230309 17:53:16.811"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:53:02.801" endtime="20230309 17:53:16.812"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20230309 17:52:34.494" endtime="20230309 17:53:16.814"/>
</suite>
<suite id="s1-s6-s4" name="Buckethead" source="/opt/hadoop/smoketest/s3/buckethead.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:53:16.838" level="INFO">${randStr} = 9372599454</msg>
<status status="PASS" starttime="20230309 17:53:16.838" endtime="20230309 17:53:16.838"/>
</kw>
<msg timestamp="20230309 17:53:16.839" level="INFO">${random} = ozone-test-9372599454</msg>
<status status="PASS" starttime="20230309 17:53:16.837" endtime="20230309 17:53:16.839"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:53:16.842" level="INFO">${PREFIX} = ozone-test-9372599454</msg>
<status status="PASS" starttime="20230309 17:53:16.839" endtime="20230309 17:53:16.843"/>
</kw>
<status status="PASS" starttime="20230309 17:53:16.836" endtime="20230309 17:53:16.843"/>
</kw>
<status status="PASS" starttime="20230309 17:53:16.836" endtime="20230309 17:53:16.843"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which aws</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:53:16.849" level="INFO">Running command 'which aws 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:53:16.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:53:16.854" level="INFO">${output} = /usr/local/bin/aws</msg>
<status status="PASS" starttime="20230309 17:53:16.846" endtime="20230309 17:53:16.854"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230309 17:53:16.856" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:53:16.855" endtime="20230309 17:53:16.857"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20230309 17:53:16.857" endtime="20230309 17:53:16.857"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230309 17:53:16.857" endtime="20230309 17:53:16.857"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20230309 17:53:16.858" endtime="20230309 17:53:16.858"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230309 17:53:16.858" endtime="20230309 17:53:16.858"/>
</kw>
<status status="PASS" starttime="20230309 17:53:16.845" endtime="20230309 17:53:16.858"/>
</kw>
<status status="PASS" starttime="20230309 17:53:16.843" endtime="20230309 17:53:16.859"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:53:16.867" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:53:16.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:53:16.873" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230309 17:53:16.864" endtime="20230309 17:53:16.873"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:53:16.875" level="INFO">s3g</msg>
<status status="PASS" starttime="20230309 17:53:16.874" endtime="20230309 17:53:16.875"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:53:16.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:53:16.875" endtime="20230309 17:53:16.876"/>
</kw>
<status status="PASS" starttime="20230309 17:53:16.863" endtime="20230309 17:53:16.877"/>
</kw>
<msg timestamp="20230309 17:53:16.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:53:16.863" endtime="20230309 17:53:16.878"/>
</kw>
<msg timestamp="20230309 17:53:16.879" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230309 17:53:16.862" endtime="20230309 17:53:16.879"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:53:16.882" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:53:16.879" endtime="20230309 17:53:16.882"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:53:16.890" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:53:16.924" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:53:16.924" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:53:16.885" endtime="20230309 17:53:16.924"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:53:16.931" level="INFO"/>
<status status="PASS" starttime="20230309 17:53:16.925" endtime="20230309 17:53:16.932"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:53:16.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:53:16.932" endtime="20230309 17:53:16.933"/>
</kw>
<status status="PASS" starttime="20230309 17:53:16.885" endtime="20230309 17:53:16.934"/>
</kw>
<msg timestamp="20230309 17:53:16.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:53:16.884" endtime="20230309 17:53:16.935"/>
</kw>
<status status="PASS" starttime="20230309 17:53:16.883" endtime="20230309 17:53:16.936"/>
</kw>
<status status="PASS" starttime="20230309 17:53:16.882" endtime="20230309 17:53:16.936"/>
</kw>
<status status="PASS" starttime="20230309 17:53:16.861" endtime="20230309 17:53:16.936"/>
</kw>
<status status="PASS" starttime="20230309 17:53:16.860" endtime="20230309 17:53:16.936"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:53:16.945" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:53:26.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:53:26.391" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:53:16.941" endtime="20230309 17:53:26.391"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:53:26.395" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:53:26.394" endtime="20230309 17:53:26.395"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:53:26.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:53:26.395" endtime="20230309 17:53:26.396"/>
</kw>
<status status="PASS" starttime="20230309 17:53:16.940" endtime="20230309 17:53:26.396"/>
</kw>
<msg timestamp="20230309 17:53:26.396" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:53:16.940" endtime="20230309 17:53:26.398"/>
</kw>
<msg timestamp="20230309 17:53:26.398" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:53:16.938" endtime="20230309 17:53:26.398"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230309 17:53:26.399" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230309 17:53:26.399" endtime="20230309 17:53:26.399"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20230309 17:53:26.400" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230309 17:53:26.399" endtime="20230309 17:53:26.400"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230309 17:53:26.401" level="INFO">${secret} = ['15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670']</msg>
<status status="PASS" starttime="20230309 17:53:26.400" endtime="20230309 17:53:26.401"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:53:26.405" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:53:26.401" endtime="20230309 17:53:26.405"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:53:26.407" level="INFO">${secret} = 15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:53:26.405" endtime="20230309 17:53:26.407"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:53:26.413" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:53:27.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:53:27.319" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:53:26.410" endtime="20230309 17:53:27.319"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:53:27.321" level="INFO"/>
<status status="PASS" starttime="20230309 17:53:27.320" endtime="20230309 17:53:27.321"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:53:27.321" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:53:27.321" endtime="20230309 17:53:27.321"/>
</kw>
<status status="PASS" starttime="20230309 17:53:26.409" endtime="20230309 17:53:27.322"/>
</kw>
<msg timestamp="20230309 17:53:27.322" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:53:26.408" endtime="20230309 17:53:27.324"/>
</kw>
<status status="PASS" starttime="20230309 17:53:26.407" endtime="20230309 17:53:27.326"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:53:27.331" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:53:28.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:53:28.262" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:53:27.328" endtime="20230309 17:53:28.262"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:53:28.264" level="INFO"/>
<status status="PASS" starttime="20230309 17:53:28.263" endtime="20230309 17:53:28.265"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:53:28.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:53:28.265" endtime="20230309 17:53:28.266"/>
</kw>
<status status="PASS" starttime="20230309 17:53:27.327" endtime="20230309 17:53:28.267"/>
</kw>
<msg timestamp="20230309 17:53:28.267" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:53:27.327" endtime="20230309 17:53:28.269"/>
</kw>
<status status="PASS" starttime="20230309 17:53:27.326" endtime="20230309 17:53:28.269"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:53:28.276" level="INFO">Running command 'aws configure set aws_secret_access_key 15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:53:29.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:53:29.231" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:53:28.272" endtime="20230309 17:53:29.231"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:53:29.233" level="INFO"/>
<status status="PASS" starttime="20230309 17:53:29.232" endtime="20230309 17:53:29.233"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:53:29.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:53:29.233" endtime="20230309 17:53:29.234"/>
</kw>
<status status="PASS" starttime="20230309 17:53:28.271" endtime="20230309 17:53:29.234"/>
</kw>
<msg timestamp="20230309 17:53:29.234" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:53:28.271" endtime="20230309 17:53:29.235"/>
</kw>
<status status="PASS" starttime="20230309 17:53:28.269" endtime="20230309 17:53:29.236"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:53:29.243" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:53:30.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:53:30.162" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:53:29.240" endtime="20230309 17:53:30.163"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:53:30.164" level="INFO"/>
<status status="PASS" starttime="20230309 17:53:30.163" endtime="20230309 17:53:30.164"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:53:30.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:53:30.165" endtime="20230309 17:53:30.166"/>
</kw>
<status status="PASS" starttime="20230309 17:53:29.239" endtime="20230309 17:53:30.167"/>
</kw>
<msg timestamp="20230309 17:53:30.167" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:53:29.238" endtime="20230309 17:53:30.169"/>
</kw>
<status status="PASS" starttime="20230309 17:53:29.236" endtime="20230309 17:53:30.169"/>
</kw>
<status status="PASS" starttime="20230309 17:53:16.938" endtime="20230309 17:53:30.170"/>
</kw>
<status status="PASS" starttime="20230309 17:53:16.937" endtime="20230309 17:53:30.170"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:53:30.171" endtime="20230309 17:53:30.171"/>
</kw>
<status status="PASS" starttime="20230309 17:53:16.860" endtime="20230309 17:53:30.172"/>
</kw>
<status status="PASS" starttime="20230309 17:53:16.859" endtime="20230309 17:53:30.172"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230309 17:53:30.174" endtime="20230309 17:53:30.175"/>
</kw>
<msg timestamp="20230309 17:53:30.175" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20230309 17:53:30.172" endtime="20230309 17:53:30.175"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:53:30.177" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20230309 17:53:30.176" endtime="20230309 17:53:30.177"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup links for S3 tests" library="commonawslib">
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:53:30.183" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/link 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:53:43.802" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:53:43.802" level="INFO">${output} = {
  "volumeName" : "s3v",
  "bucketName" : "link",
  "sourceVolume" : "legacy",
  "sourceBucket" : "source-bucket",
  "creationTime" : "2023-03-09T17:51:22.562Z",
  "modificationTime" : "2023-03-09T17...</msg>
<status status="PASS" starttime="20230309 17:53:30.180" endtime="20230309 17:53:43.802"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:53:43.803" endtime="20230309 17:53:43.804"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:53:43.804" endtime="20230309 17:53:43.804"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:53:43.805" endtime="20230309 17:53:43.805"/>
</kw>
<msg timestamp="20230309 17:53:43.806" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20230309 17:53:30.179" endtime="20230309 17:53:43.806"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230309 17:53:43.807" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:53:43.807" endtime="20230309 17:53:43.809"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://${OM_SERVICE_ID}/legacy</arg>
<status status="NOT RUN" starttime="20230309 17:53:43.809" endtime="20230309 17:53:43.809"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create o3://${OM_SERVICE_ID}/legacy/source-bucket</arg>
<status status="NOT RUN" starttime="20230309 17:53:43.809" endtime="20230309 17:53:43.809"/>
</kw>
<kw name="Create link" library="commonawslib">
<arg>link</arg>
<status status="NOT RUN" starttime="20230309 17:53:43.810" endtime="20230309 17:53:43.810"/>
</kw>
<status status="PASS" starttime="20230309 17:53:30.178" endtime="20230309 17:53:43.810"/>
</kw>
<status status="PASS" starttime="20230309 17:53:30.178" endtime="20230309 17:53:43.810"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:53:43.810" endtime="20230309 17:53:43.811"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:53:43.811" endtime="20230309 17:53:43.811"/>
</kw>
<status status="PASS" starttime="20230309 17:53:16.835" endtime="20230309 17:53:43.812"/>
</kw>
<test id="s1-s6-s4-t1" name="Head Bucket" line="31">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-bucket --bucket ${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:53:43.822" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-bucket --bucket link 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:53:44.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:53:44.895" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:53:43.819" endtime="20230309 17:53:44.895"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:53:44.899" level="INFO"/>
<status status="PASS" starttime="20230309 17:53:44.896" endtime="20230309 17:53:44.899"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:53:44.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:53:44.899" endtime="20230309 17:53:44.900"/>
</kw>
<status status="PASS" starttime="20230309 17:53:43.818" endtime="20230309 17:53:44.902"/>
</kw>
<msg timestamp="20230309 17:53:44.902" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:53:43.818" endtime="20230309 17:53:44.904"/>
</kw>
<msg timestamp="20230309 17:53:44.905" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:53:43.817" endtime="20230309 17:53:44.905"/>
</kw>
<msg timestamp="20230309 17:53:44.906" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 17:53:43.816" endtime="20230309 17:53:44.907"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:53:43.813" endtime="20230309 17:53:44.908"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20230309 17:53:16.819" endtime="20230309 17:53:44.909"/>
</suite>
<suite id="s1-s6-s5" name="Bucketlist" source="/opt/hadoop/smoketest/s3/bucketlist.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:53:44.935" level="INFO">${randStr} = 0512370033</msg>
<status status="PASS" starttime="20230309 17:53:44.935" endtime="20230309 17:53:44.935"/>
</kw>
<msg timestamp="20230309 17:53:44.936" level="INFO">${random} = ozone-test-0512370033</msg>
<status status="PASS" starttime="20230309 17:53:44.934" endtime="20230309 17:53:44.936"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:53:44.939" level="INFO">${PREFIX} = ozone-test-0512370033</msg>
<status status="PASS" starttime="20230309 17:53:44.937" endtime="20230309 17:53:44.939"/>
</kw>
<status status="PASS" starttime="20230309 17:53:44.934" endtime="20230309 17:53:44.939"/>
</kw>
<status status="PASS" starttime="20230309 17:53:44.933" endtime="20230309 17:53:44.939"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which aws</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:53:44.944" level="INFO">Running command 'which aws 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:53:44.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:53:44.948" level="INFO">${output} = /usr/local/bin/aws</msg>
<status status="PASS" starttime="20230309 17:53:44.940" endtime="20230309 17:53:44.948"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230309 17:53:44.949" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:53:44.948" endtime="20230309 17:53:44.950"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20230309 17:53:44.950" endtime="20230309 17:53:44.950"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230309 17:53:44.951" endtime="20230309 17:53:44.951"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20230309 17:53:44.951" endtime="20230309 17:53:44.951"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230309 17:53:44.951" endtime="20230309 17:53:44.951"/>
</kw>
<status status="PASS" starttime="20230309 17:53:44.940" endtime="20230309 17:53:44.952"/>
</kw>
<status status="PASS" starttime="20230309 17:53:44.940" endtime="20230309 17:53:44.952"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:53:44.959" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:53:44.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:53:44.965" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230309 17:53:44.956" endtime="20230309 17:53:44.965"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:53:44.966" level="INFO">s3g</msg>
<status status="PASS" starttime="20230309 17:53:44.965" endtime="20230309 17:53:44.966"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:53:44.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:53:44.967" endtime="20230309 17:53:44.967"/>
</kw>
<status status="PASS" starttime="20230309 17:53:44.956" endtime="20230309 17:53:44.968"/>
</kw>
<msg timestamp="20230309 17:53:44.969" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:53:44.955" endtime="20230309 17:53:44.969"/>
</kw>
<msg timestamp="20230309 17:53:44.970" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230309 17:53:44.955" endtime="20230309 17:53:44.970"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:53:44.973" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:53:44.970" endtime="20230309 17:53:44.973"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:53:44.986" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:53:45.030" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:53:45.031" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:53:44.982" endtime="20230309 17:53:45.031"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:53:45.033" level="INFO"/>
<status status="PASS" starttime="20230309 17:53:45.031" endtime="20230309 17:53:45.033"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:53:45.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:53:45.034" endtime="20230309 17:53:45.035"/>
</kw>
<status status="PASS" starttime="20230309 17:53:44.976" endtime="20230309 17:53:45.035"/>
</kw>
<msg timestamp="20230309 17:53:45.035" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:53:44.976" endtime="20230309 17:53:45.036"/>
</kw>
<status status="PASS" starttime="20230309 17:53:44.974" endtime="20230309 17:53:45.037"/>
</kw>
<status status="PASS" starttime="20230309 17:53:44.973" endtime="20230309 17:53:45.038"/>
</kw>
<status status="PASS" starttime="20230309 17:53:44.954" endtime="20230309 17:53:45.038"/>
</kw>
<status status="PASS" starttime="20230309 17:53:44.954" endtime="20230309 17:53:45.038"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:53:45.046" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:53:54.629" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:53:54.629" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:53:45.043" endtime="20230309 17:53:54.629"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:53:54.631" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:53:54.630" endtime="20230309 17:53:54.632"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:53:54.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:53:54.632" endtime="20230309 17:53:54.633"/>
</kw>
<status status="PASS" starttime="20230309 17:53:45.041" endtime="20230309 17:53:54.633"/>
</kw>
<msg timestamp="20230309 17:53:54.634" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:53:45.040" endtime="20230309 17:53:54.634"/>
</kw>
<msg timestamp="20230309 17:53:54.635" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:53:45.040" endtime="20230309 17:53:54.635"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230309 17:53:54.636" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230309 17:53:54.636" endtime="20230309 17:53:54.636"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20230309 17:53:54.637" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230309 17:53:54.636" endtime="20230309 17:53:54.637"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230309 17:53:54.638" level="INFO">${secret} = ['15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670']</msg>
<status status="PASS" starttime="20230309 17:53:54.637" endtime="20230309 17:53:54.638"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:53:54.640" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:53:54.638" endtime="20230309 17:53:54.640"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:53:54.642" level="INFO">${secret} = 15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:53:54.640" endtime="20230309 17:53:54.642"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:53:54.648" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:53:55.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:53:55.506" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:53:54.644" endtime="20230309 17:53:55.506"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:53:55.508" level="INFO"/>
<status status="PASS" starttime="20230309 17:53:55.507" endtime="20230309 17:53:55.508"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:53:55.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:53:55.508" endtime="20230309 17:53:55.509"/>
</kw>
<status status="PASS" starttime="20230309 17:53:54.643" endtime="20230309 17:53:55.509"/>
</kw>
<msg timestamp="20230309 17:53:55.510" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:53:54.643" endtime="20230309 17:53:55.511"/>
</kw>
<status status="PASS" starttime="20230309 17:53:54.643" endtime="20230309 17:53:55.511"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:53:55.517" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:53:56.328" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:53:56.328" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:53:55.514" endtime="20230309 17:53:56.328"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:53:56.330" level="INFO"/>
<status status="PASS" starttime="20230309 17:53:56.329" endtime="20230309 17:53:56.330"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:53:56.331" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:53:56.330" endtime="20230309 17:53:56.331"/>
</kw>
<status status="PASS" starttime="20230309 17:53:55.513" endtime="20230309 17:53:56.332"/>
</kw>
<msg timestamp="20230309 17:53:56.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:53:55.512" endtime="20230309 17:53:56.333"/>
</kw>
<status status="PASS" starttime="20230309 17:53:55.511" endtime="20230309 17:53:56.333"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:53:56.340" level="INFO">Running command 'aws configure set aws_secret_access_key 15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:53:57.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:53:57.087" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:53:56.336" endtime="20230309 17:53:57.087"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:53:57.089" level="INFO"/>
<status status="PASS" starttime="20230309 17:53:57.088" endtime="20230309 17:53:57.089"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:53:57.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:53:57.089" endtime="20230309 17:53:57.090"/>
</kw>
<status status="PASS" starttime="20230309 17:53:56.334" endtime="20230309 17:53:57.090"/>
</kw>
<msg timestamp="20230309 17:53:57.090" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:53:56.334" endtime="20230309 17:53:57.091"/>
</kw>
<status status="PASS" starttime="20230309 17:53:56.333" endtime="20230309 17:53:57.091"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:53:57.097" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:53:57.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:53:57.881" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:53:57.094" endtime="20230309 17:53:57.881"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:53:57.882" level="INFO"/>
<status status="PASS" starttime="20230309 17:53:57.882" endtime="20230309 17:53:57.882"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:53:57.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:53:57.883" endtime="20230309 17:53:57.883"/>
</kw>
<status status="PASS" starttime="20230309 17:53:57.093" endtime="20230309 17:53:57.884"/>
</kw>
<msg timestamp="20230309 17:53:57.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:53:57.093" endtime="20230309 17:53:57.885"/>
</kw>
<status status="PASS" starttime="20230309 17:53:57.092" endtime="20230309 17:53:57.885"/>
</kw>
<status status="PASS" starttime="20230309 17:53:45.039" endtime="20230309 17:53:57.885"/>
</kw>
<status status="PASS" starttime="20230309 17:53:45.038" endtime="20230309 17:53:57.885"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:53:57.886" endtime="20230309 17:53:57.886"/>
</kw>
<status status="PASS" starttime="20230309 17:53:44.953" endtime="20230309 17:53:57.886"/>
</kw>
<status status="PASS" starttime="20230309 17:53:44.952" endtime="20230309 17:53:57.887"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230309 17:53:57.887" endtime="20230309 17:53:57.888"/>
</kw>
<msg timestamp="20230309 17:53:57.888" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20230309 17:53:57.887" endtime="20230309 17:53:57.888"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:53:57.888" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20230309 17:53:57.888" endtime="20230309 17:53:57.889"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup links for S3 tests" library="commonawslib">
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:53:57.893" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/link 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:54:10.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:54:10.437" level="INFO">${output} = {
  "volumeName" : "s3v",
  "bucketName" : "link",
  "sourceVolume" : "legacy",
  "sourceBucket" : "source-bucket",
  "creationTime" : "2023-03-09T17:51:22.562Z",
  "modificationTime" : "2023-03-09T17...</msg>
<status status="PASS" starttime="20230309 17:53:57.891" endtime="20230309 17:54:10.438"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:54:10.438" endtime="20230309 17:54:10.440"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:54:10.440" endtime="20230309 17:54:10.441"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:54:10.441" endtime="20230309 17:54:10.442"/>
</kw>
<msg timestamp="20230309 17:54:10.443" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20230309 17:53:57.890" endtime="20230309 17:54:10.443"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230309 17:54:10.444" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:54:10.444" endtime="20230309 17:54:10.445"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://${OM_SERVICE_ID}/legacy</arg>
<status status="NOT RUN" starttime="20230309 17:54:10.445" endtime="20230309 17:54:10.445"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create o3://${OM_SERVICE_ID}/legacy/source-bucket</arg>
<status status="NOT RUN" starttime="20230309 17:54:10.445" endtime="20230309 17:54:10.446"/>
</kw>
<kw name="Create link" library="commonawslib">
<arg>link</arg>
<status status="NOT RUN" starttime="20230309 17:54:10.446" endtime="20230309 17:54:10.446"/>
</kw>
<status status="PASS" starttime="20230309 17:53:57.889" endtime="20230309 17:54:10.446"/>
</kw>
<status status="PASS" starttime="20230309 17:53:57.889" endtime="20230309 17:54:10.446"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:54:10.447" endtime="20230309 17:54:10.447"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:54:10.448" endtime="20230309 17:54:10.448"/>
</kw>
<status status="PASS" starttime="20230309 17:53:44.933" endtime="20230309 17:54:10.449"/>
</kw>
<test id="s1-s6-s5-t1" name="List buckets" line="31">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-buckets | jq -r '.Buckets[].Name'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:54:10.462" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets | jq -r '.Buckets[].Name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:54:11.573" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:54:11.573" level="INFO">${output} = bucket-iakidlftmk
bucket-ozone-test-0662512089
bucket-ozone-test-0854448483
bucket-ozone-test-2530672355
bucket-ozone-test-2540702007
bucket-test123
bucket-xqwicagvbg
destbucket-65213
encrypted
link
s...</msg>
<status status="PASS" starttime="20230309 17:54:10.456" endtime="20230309 17:54:11.573"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:54:11.575" level="INFO">bucket-iakidlftmk
bucket-ozone-test-0662512089
bucket-ozone-test-0854448483
bucket-ozone-test-2530672355
bucket-ozone-test-2540702007
bucket-test123
bucket-xqwicagvbg
destbucket-65213
encrypted
link
s3bg0
s3bg1
s3bg10
s3bg11
s3bg12
s3bg13
s3bg14
s3bg15
s3bg16
s3bg17
s3bg18
s3bg19
s3bg2
s3bg20
s3bg21
s3bg22
s3bg23
s3bg24
s3bg25
s3bg26
s3bg27
s3bg28
s3bg29
s3bg3
s3bg30
s3bg31
s3bg32
s3bg33
s3bg34
s3bg35
s3bg36
s3bg37
s3bg38
s3bg39
s3bg4
s3bg40
s3bg41
s3bg42
s3bg43
s3bg44
s3bg45
s3bg46
s3bg47
s3bg48
s3bg49
s3bg5
s3bg50
s3bg51
s3bg52
s3bg53
s3bg54
s3bg55
s3bg56
s3bg57
s3bg58
s3bg59
s3bg6
s3bg60
s3bg61
s3bg62
s3bg63
s3bg64
s3bg65
s3bg66
s3bg67
s3bg68
s3bg69
s3bg7
s3bg70
s3bg71
s3bg72
s3bg73
s3bg74
s3bg75
s3bg76
s3bg77
s3bg78
s3bg79
s3bg8
s3bg80
s3bg81
s3bg82
s3bg83
s3bg84
s3bg85
s3bg86
s3bg87
s3bg88
s3bg89
s3bg9
s3bg90
s3bg91
s3bg92
s3bg93
s3bg94
s3bg95
s3bg96
s3bg97
s3bg98
s3bg99</msg>
<status status="PASS" starttime="20230309 17:54:11.574" endtime="20230309 17:54:11.576"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:54:11.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:54:11.576" endtime="20230309 17:54:11.577"/>
</kw>
<status status="PASS" starttime="20230309 17:54:10.455" endtime="20230309 17:54:11.578"/>
</kw>
<msg timestamp="20230309 17:54:11.578" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:54:10.454" endtime="20230309 17:54:11.579"/>
</kw>
<msg timestamp="20230309 17:54:11.579" level="INFO">${output} = bucket-iakidlftmk
bucket-ozone-test-0662512089
bucket-ozone-test-0854448483
bucket-ozone-test-2530672355
bucket-ozone-test-2540702007
bucket-test123
bucket-xqwicagvbg
destbucket-65213
encrypted
link
s...</msg>
<status status="PASS" starttime="20230309 17:54:10.453" endtime="20230309 17:54:11.579"/>
</kw>
<msg timestamp="20230309 17:54:11.580" level="INFO">${result} = bucket-iakidlftmk
bucket-ozone-test-0662512089
bucket-ozone-test-0854448483
bucket-ozone-test-2530672355
bucket-ozone-test-2540702007
bucket-test123
bucket-xqwicagvbg
destbucket-65213
encrypted
link
s...</msg>
<status status="PASS" starttime="20230309 17:54:10.452" endtime="20230309 17:54:11.580"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:54:11.580" endtime="20230309 17:54:11.581"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:54:10.450" endtime="20230309 17:54:11.581"/>
</test>
<test id="s1-s6-s5-t2" name="Get bucket info with Ozone Shell to check the owner field" line="35">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230309 17:54:11.584" endtime="20230309 17:54:11.585"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /s3v/${BUCKET} | jq -r '.owner'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:54:11.600" level="INFO">Running command 'ozone sh bucket info /s3v/link | jq -r '.owner' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:54:23.083" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:54:23.083" level="INFO">${output} = testuser</msg>
<status status="PASS" starttime="20230309 17:54:11.596" endtime="20230309 17:54:23.083"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:54:23.086" level="INFO">testuser</msg>
<status status="PASS" starttime="20230309 17:54:23.084" endtime="20230309 17:54:23.086"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:54:23.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:54:23.087" endtime="20230309 17:54:23.088"/>
</kw>
<status status="PASS" starttime="20230309 17:54:11.595" endtime="20230309 17:54:23.089"/>
</kw>
<msg timestamp="20230309 17:54:23.089" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:54:11.595" endtime="20230309 17:54:23.090"/>
</kw>
<msg timestamp="20230309 17:54:23.090" level="INFO">${result} = testuser</msg>
<status status="PASS" starttime="20230309 17:54:11.585" endtime="20230309 17:54:23.091"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>testuser</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 17:54:23.092" endtime="20230309 17:54:23.092"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:54:11.583" endtime="20230309 17:54:23.093"/>
</test>
<test id="s1-s6-s5-t3" name="List buckets with empty access id" line="43">
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ''</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:54:23.110" level="INFO">Running command 'aws configure set aws_access_key_id '' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:54:23.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:54:23.883" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:54:23.104" endtime="20230309 17:54:23.883"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:54:23.885" level="INFO"/>
<status status="PASS" starttime="20230309 17:54:23.884" endtime="20230309 17:54:23.885"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:54:23.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:54:23.885" endtime="20230309 17:54:23.886"/>
</kw>
<status status="PASS" starttime="20230309 17:54:23.102" endtime="20230309 17:54:23.888"/>
</kw>
<msg timestamp="20230309 17:54:23.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:54:23.100" endtime="20230309 17:54:23.888"/>
</kw>
<status status="PASS" starttime="20230309 17:54:23.099" endtime="20230309 17:54:23.890"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>list-buckets</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:54:23.897" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:54:24.815" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:54:24.816" level="INFO">${output} = 
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20230309 17:54:23.893" endtime="20230309 17:54:24.816"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:54:24.817" level="INFO">
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20230309 17:54:24.817" endtime="20230309 17:54:24.818"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:54:24.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:54:24.818" endtime="20230309 17:54:24.818"/>
</kw>
<msg timestamp="20230309 17:54:24.819" level="INFO">${output} = 
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20230309 17:54:23.892" endtime="20230309 17:54:24.819"/>
</kw>
<msg timestamp="20230309 17:54:24.819" level="INFO">${result} = 
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20230309 17:54:23.891" endtime="20230309 17:54:24.819"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>The authorization header you provided is invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:54:24.819" endtime="20230309 17:54:24.820"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:54:23.094" endtime="20230309 17:54:24.820"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20230309 17:53:44.911" endtime="20230309 17:54:24.823"/>
</suite>
<suite id="s1-s6-s6" name="Freon" source="/opt/hadoop/smoketest/s3/freon.robot">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:54:24.879" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:54:24.887" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:54:24.887" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230309 17:54:24.876" endtime="20230309 17:54:24.887"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:54:24.888" level="INFO">s3g</msg>
<status status="PASS" starttime="20230309 17:54:24.888" endtime="20230309 17:54:24.888"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:54:24.889" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:54:24.889" endtime="20230309 17:54:24.890"/>
</kw>
<status status="PASS" starttime="20230309 17:54:24.875" endtime="20230309 17:54:24.890"/>
</kw>
<msg timestamp="20230309 17:54:24.890" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:54:24.874" endtime="20230309 17:54:24.892"/>
</kw>
<msg timestamp="20230309 17:54:24.892" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230309 17:54:24.874" endtime="20230309 17:54:24.892"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:54:24.895" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:54:24.893" endtime="20230309 17:54:24.895"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:54:24.901" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:54:24.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:54:24.957" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:54:24.898" endtime="20230309 17:54:24.957"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:54:24.960" level="INFO"/>
<status status="PASS" starttime="20230309 17:54:24.959" endtime="20230309 17:54:24.960"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:54:24.962" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:54:24.961" endtime="20230309 17:54:24.962"/>
</kw>
<status status="PASS" starttime="20230309 17:54:24.898" endtime="20230309 17:54:24.963"/>
</kw>
<msg timestamp="20230309 17:54:24.965" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:54:24.897" endtime="20230309 17:54:24.965"/>
</kw>
<status status="PASS" starttime="20230309 17:54:24.896" endtime="20230309 17:54:24.965"/>
</kw>
<status status="PASS" starttime="20230309 17:54:24.896" endtime="20230309 17:54:24.966"/>
</kw>
<status status="PASS" starttime="20230309 17:54:24.873" endtime="20230309 17:54:24.966"/>
</kw>
<status status="PASS" starttime="20230309 17:54:24.872" endtime="20230309 17:54:24.966"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:54:24.976" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:54:34.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:54:34.492" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:54:24.971" endtime="20230309 17:54:34.492"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:54:34.493" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:54:34.493" endtime="20230309 17:54:34.494"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:54:34.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:54:34.494" endtime="20230309 17:54:34.494"/>
</kw>
<status status="PASS" starttime="20230309 17:54:24.970" endtime="20230309 17:54:34.495"/>
</kw>
<msg timestamp="20230309 17:54:34.495" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:54:24.969" endtime="20230309 17:54:34.496"/>
</kw>
<msg timestamp="20230309 17:54:34.496" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:54:24.968" endtime="20230309 17:54:34.497"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230309 17:54:34.498" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230309 17:54:34.497" endtime="20230309 17:54:34.498"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20230309 17:54:34.499" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230309 17:54:34.498" endtime="20230309 17:54:34.499"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230309 17:54:34.500" level="INFO">${secret} = ['15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670']</msg>
<status status="PASS" starttime="20230309 17:54:34.499" endtime="20230309 17:54:34.500"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:54:34.502" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:54:34.500" endtime="20230309 17:54:34.502"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:54:34.504" level="INFO">${secret} = 15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:54:34.502" endtime="20230309 17:54:34.504"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:54:34.509" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:54:35.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:54:35.353" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:54:34.506" endtime="20230309 17:54:35.353"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:54:35.354" level="INFO"/>
<status status="PASS" starttime="20230309 17:54:35.353" endtime="20230309 17:54:35.354"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:54:35.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:54:35.355" endtime="20230309 17:54:35.355"/>
</kw>
<status status="PASS" starttime="20230309 17:54:34.505" endtime="20230309 17:54:35.356"/>
</kw>
<msg timestamp="20230309 17:54:35.356" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:54:34.504" endtime="20230309 17:54:35.357"/>
</kw>
<status status="PASS" starttime="20230309 17:54:34.504" endtime="20230309 17:54:35.357"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:54:35.363" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:54:36.183" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:54:36.183" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:54:35.359" endtime="20230309 17:54:36.183"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:54:36.185" level="INFO"/>
<status status="PASS" starttime="20230309 17:54:36.184" endtime="20230309 17:54:36.185"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:54:36.186" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:54:36.185" endtime="20230309 17:54:36.186"/>
</kw>
<status status="PASS" starttime="20230309 17:54:35.359" endtime="20230309 17:54:36.187"/>
</kw>
<msg timestamp="20230309 17:54:36.187" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:54:35.358" endtime="20230309 17:54:36.188"/>
</kw>
<status status="PASS" starttime="20230309 17:54:35.357" endtime="20230309 17:54:36.188"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:54:36.196" level="INFO">Running command 'aws configure set aws_secret_access_key 15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:54:37.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:54:37.045" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:54:36.191" endtime="20230309 17:54:37.045"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:54:37.046" level="INFO"/>
<status status="PASS" starttime="20230309 17:54:37.045" endtime="20230309 17:54:37.046"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:54:37.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:54:37.047" endtime="20230309 17:54:37.047"/>
</kw>
<status status="PASS" starttime="20230309 17:54:36.190" endtime="20230309 17:54:37.048"/>
</kw>
<msg timestamp="20230309 17:54:37.048" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:54:36.189" endtime="20230309 17:54:37.049"/>
</kw>
<status status="PASS" starttime="20230309 17:54:36.188" endtime="20230309 17:54:37.049"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:54:37.057" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:54:37.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:54:37.899" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:54:37.052" endtime="20230309 17:54:37.899"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:54:37.901" level="INFO"/>
<status status="PASS" starttime="20230309 17:54:37.900" endtime="20230309 17:54:37.901"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:54:37.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:54:37.901" endtime="20230309 17:54:37.902"/>
</kw>
<status status="PASS" starttime="20230309 17:54:37.051" endtime="20230309 17:54:37.902"/>
</kw>
<msg timestamp="20230309 17:54:37.902" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:54:37.051" endtime="20230309 17:54:37.903"/>
</kw>
<status status="PASS" starttime="20230309 17:54:37.050" endtime="20230309 17:54:37.904"/>
</kw>
<status status="PASS" starttime="20230309 17:54:24.967" endtime="20230309 17:54:37.904"/>
</kw>
<status status="PASS" starttime="20230309 17:54:24.966" endtime="20230309 17:54:37.904"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:54:37.904" endtime="20230309 17:54:37.905"/>
</kw>
<status status="PASS" starttime="20230309 17:54:24.872" endtime="20230309 17:54:37.905"/>
</kw>
<test id="s1-s6-s6-t1" name="Run Freon S3BG" line="42">
<kw name="Setup aws credentials" type="SETUP">
<kw name="Execute" library="os">
<var>${accessKey}</var>
<arg>aws configure get aws_access_key_id</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:54:37.914" level="INFO">Running command 'aws configure get aws_access_key_id 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:54:38.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:54:38.761" level="INFO">${output} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:54:37.910" endtime="20230309 17:54:38.761"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:54:38.763" level="INFO">testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:54:38.761" endtime="20230309 17:54:38.763"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:54:38.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:54:38.763" endtime="20230309 17:54:38.764"/>
</kw>
<status status="PASS" starttime="20230309 17:54:37.909" endtime="20230309 17:54:38.765"/>
</kw>
<msg timestamp="20230309 17:54:38.765" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:54:37.909" endtime="20230309 17:54:38.765"/>
</kw>
<msg timestamp="20230309 17:54:38.766" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:54:37.908" endtime="20230309 17:54:38.766"/>
</kw>
<kw name="Execute" library="os">
<var>${secret}</var>
<arg>aws configure get aws_secret_access_key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:54:38.774" level="INFO">Running command 'aws configure get aws_secret_access_key 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:54:39.783" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:54:39.784" level="INFO">${output} = 15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:54:38.771" endtime="20230309 17:54:39.784"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:54:39.786" level="INFO">15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:54:39.785" endtime="20230309 17:54:39.786"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:54:39.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:54:39.787" endtime="20230309 17:54:39.788"/>
</kw>
<status status="PASS" starttime="20230309 17:54:38.770" endtime="20230309 17:54:39.789"/>
</kw>
<msg timestamp="20230309 17:54:39.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:54:38.769" endtime="20230309 17:54:39.790"/>
</kw>
<msg timestamp="20230309 17:54:39.790" level="INFO">${secret} = 15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:54:38.766" endtime="20230309 17:54:39.790"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>AWS_SECRET_ACCESS_KEY</arg>
<arg>${secret}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230309 17:54:39.791" level="INFO">Environment variable 'AWS_SECRET_ACCESS_KEY' set to value '15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670'.</msg>
<status status="PASS" starttime="20230309 17:54:39.791" endtime="20230309 17:54:39.791"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>AWS_ACCESS_KEY_ID</arg>
<arg>${accessKey}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230309 17:54:39.792" level="INFO">Environment variable 'AWS_ACCESS_KEY_ID' set to value 'testuser/s3g@EXAMPLE.COM'.</msg>
<status status="PASS" starttime="20230309 17:54:39.792" endtime="20230309 17:54:39.792"/>
</kw>
<status status="PASS" starttime="20230309 17:54:37.908" endtime="20230309 17:54:39.793"/>
</kw>
<kw name="Freon S3BG">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon s3bg -e ${ENDPOINT_URL} -t ${threads} -n ${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:54:39.805" level="INFO">Running command 'ozone freon s3bg -e http://s3g:9878 -t 10 -n 100 -p s3bg  2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:54:50.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:54:50.166" level="INFO">${output} = 2023-03-09 17:54:44,970 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-03-09 17:54:45,286 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230309 17:54:39.800" endtime="20230309 17:54:50.166"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:54:50.167" level="INFO">2023-03-09 17:54:44,970 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-03-09 17:54:45,286 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-03-09 17:54:45,291 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-03-09 17:54:45,676 [main] INFO freon.BaseFreonGenerator: Executing test with prefix s3bg and number-of-tests 100
2023-03-09 17:54:45,843 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-03-09 17:54:46,847 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-03-09 17:54:47,848 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-03-09 17:54:48,859 [Thread-5] INFO freon.ProgressBar: Progress: 63.00 % (63 out of 100)
2023-03-09 17:54:49,859 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-03-09 17:54:49,965 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=100, min=20.337892, max=683.927315, mean=179.9767732451739, stddev=134.74738156439463, median=142.310646, p75=198.368373, p95=525.836129, p98=526.68512, p99=531.540071, p999=683.927315, mean_rate=40.796686456245816, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-03-09 17:54:49,969 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2023-03-09 17:54:49,971 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-03-09 17:54:49,971 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20230309 17:54:50.167" endtime="20230309 17:54:50.167"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:54:50.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:54:50.168" endtime="20230309 17:54:50.168"/>
</kw>
<status status="PASS" starttime="20230309 17:54:39.799" endtime="20230309 17:54:50.169"/>
</kw>
<msg timestamp="20230309 17:54:50.169" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:54:39.798" endtime="20230309 17:54:50.169"/>
</kw>
<msg timestamp="20230309 17:54:50.170" level="INFO">${result} = 2023-03-09 17:54:44,970 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-03-09 17:54:45,286 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230309 17:54:39.796" endtime="20230309 17:54:50.170"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:54:50.170" endtime="20230309 17:54:50.171"/>
</kw>
<status status="PASS" starttime="20230309 17:54:39.794" endtime="20230309 17:54:50.171"/>
</kw>
<status status="PASS" starttime="20230309 17:54:37.906" endtime="20230309 17:54:50.172"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20230309 17:54:24.826" endtime="20230309 17:54:50.174"/>
</suite>
<suite id="s1-s6-s7" name="MultipartUpload" source="/opt/hadoop/smoketest/s3/MultipartUpload.robot">
<kw name="Setup Multipart Tests" type="SETUP">
<kw name="Setup s3 tests" library="commonawslib">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:54:50.209" level="INFO">${randStr} = 2719616190</msg>
<status status="PASS" starttime="20230309 17:54:50.208" endtime="20230309 17:54:50.209"/>
</kw>
<msg timestamp="20230309 17:54:50.210" level="INFO">${random} = ozone-test-2719616190</msg>
<status status="PASS" starttime="20230309 17:54:50.207" endtime="20230309 17:54:50.210"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:54:50.214" level="INFO">${PREFIX} = ozone-test-2719616190</msg>
<status status="PASS" starttime="20230309 17:54:50.210" endtime="20230309 17:54:50.214"/>
</kw>
<status status="PASS" starttime="20230309 17:54:50.207" endtime="20230309 17:54:50.214"/>
</kw>
<status status="PASS" starttime="20230309 17:54:50.206" endtime="20230309 17:54:50.216"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which aws</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:54:50.222" level="INFO">Running command 'which aws 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:54:50.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:54:50.229" level="INFO">${output} = /usr/local/bin/aws</msg>
<status status="PASS" starttime="20230309 17:54:50.219" endtime="20230309 17:54:50.229"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230309 17:54:50.230" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:54:50.229" endtime="20230309 17:54:50.231"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20230309 17:54:50.231" endtime="20230309 17:54:50.232"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230309 17:54:50.232" endtime="20230309 17:54:50.232"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20230309 17:54:50.232" endtime="20230309 17:54:50.232"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230309 17:54:50.232" endtime="20230309 17:54:50.233"/>
</kw>
<status status="PASS" starttime="20230309 17:54:50.218" endtime="20230309 17:54:50.233"/>
</kw>
<status status="PASS" starttime="20230309 17:54:50.217" endtime="20230309 17:54:50.233"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:54:50.244" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:54:50.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:54:50.253" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230309 17:54:50.238" endtime="20230309 17:54:50.253"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:54:50.256" level="INFO">s3g</msg>
<status status="PASS" starttime="20230309 17:54:50.254" endtime="20230309 17:54:50.256"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:54:50.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:54:50.257" endtime="20230309 17:54:50.258"/>
</kw>
<status status="PASS" starttime="20230309 17:54:50.238" endtime="20230309 17:54:50.259"/>
</kw>
<msg timestamp="20230309 17:54:50.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:54:50.237" endtime="20230309 17:54:50.260"/>
</kw>
<msg timestamp="20230309 17:54:50.261" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230309 17:54:50.237" endtime="20230309 17:54:50.261"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:54:50.266" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:54:50.261" endtime="20230309 17:54:50.267"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:54:50.277" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:54:50.340" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:54:50.340" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:54:50.270" endtime="20230309 17:54:50.340"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:54:50.341" level="INFO"/>
<status status="PASS" starttime="20230309 17:54:50.340" endtime="20230309 17:54:50.341"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:54:50.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:54:50.341" endtime="20230309 17:54:50.342"/>
</kw>
<status status="PASS" starttime="20230309 17:54:50.270" endtime="20230309 17:54:50.343"/>
</kw>
<msg timestamp="20230309 17:54:50.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:54:50.269" endtime="20230309 17:54:50.344"/>
</kw>
<status status="PASS" starttime="20230309 17:54:50.268" endtime="20230309 17:54:50.344"/>
</kw>
<status status="PASS" starttime="20230309 17:54:50.267" endtime="20230309 17:54:50.344"/>
</kw>
<status status="PASS" starttime="20230309 17:54:50.236" endtime="20230309 17:54:50.345"/>
</kw>
<status status="PASS" starttime="20230309 17:54:50.235" endtime="20230309 17:54:50.345"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:54:50.353" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:54:59.749" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:54:59.749" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:54:50.348" endtime="20230309 17:54:59.749"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:54:59.751" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:54:59.751" endtime="20230309 17:54:59.752"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:54:59.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:54:59.752" endtime="20230309 17:54:59.753"/>
</kw>
<status status="PASS" starttime="20230309 17:54:50.347" endtime="20230309 17:54:59.753"/>
</kw>
<msg timestamp="20230309 17:54:59.754" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:54:50.347" endtime="20230309 17:54:59.755"/>
</kw>
<msg timestamp="20230309 17:54:59.755" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:54:50.346" endtime="20230309 17:54:59.756"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230309 17:54:59.757" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230309 17:54:59.756" endtime="20230309 17:54:59.757"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20230309 17:54:59.763" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230309 17:54:59.758" endtime="20230309 17:54:59.763"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230309 17:54:59.765" level="INFO">${secret} = ['15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670']</msg>
<status status="PASS" starttime="20230309 17:54:59.763" endtime="20230309 17:54:59.765"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:54:59.767" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:54:59.765" endtime="20230309 17:54:59.767"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:54:59.769" level="INFO">${secret} = 15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:54:59.767" endtime="20230309 17:54:59.769"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:54:59.775" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:00.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:00.666" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:54:59.771" endtime="20230309 17:55:00.666"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:00.668" level="INFO"/>
<status status="PASS" starttime="20230309 17:55:00.666" endtime="20230309 17:55:00.668"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:00.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:00.668" endtime="20230309 17:55:00.669"/>
</kw>
<status status="PASS" starttime="20230309 17:54:59.770" endtime="20230309 17:55:00.670"/>
</kw>
<msg timestamp="20230309 17:55:00.670" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:54:59.770" endtime="20230309 17:55:00.671"/>
</kw>
<status status="PASS" starttime="20230309 17:54:59.769" endtime="20230309 17:55:00.672"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:00.680" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:01.593" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:01.593" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:55:00.675" endtime="20230309 17:55:01.593"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:01.594" level="INFO"/>
<status status="PASS" starttime="20230309 17:55:01.593" endtime="20230309 17:55:01.594"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:01.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:01.594" endtime="20230309 17:55:01.595"/>
</kw>
<status status="PASS" starttime="20230309 17:55:00.675" endtime="20230309 17:55:01.596"/>
</kw>
<msg timestamp="20230309 17:55:01.596" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:55:00.673" endtime="20230309 17:55:01.597"/>
</kw>
<status status="PASS" starttime="20230309 17:55:00.673" endtime="20230309 17:55:01.598"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:01.605" level="INFO">Running command 'aws configure set aws_secret_access_key 15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:02.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:02.471" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:55:01.601" endtime="20230309 17:55:02.471"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:02.472" level="INFO"/>
<status status="PASS" starttime="20230309 17:55:02.471" endtime="20230309 17:55:02.472"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:02.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:02.473" endtime="20230309 17:55:02.473"/>
</kw>
<status status="PASS" starttime="20230309 17:55:01.601" endtime="20230309 17:55:02.474"/>
</kw>
<msg timestamp="20230309 17:55:02.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:55:01.600" endtime="20230309 17:55:02.475"/>
</kw>
<status status="PASS" starttime="20230309 17:55:01.598" endtime="20230309 17:55:02.476"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:02.483" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:03.324" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:03.324" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:55:02.480" endtime="20230309 17:55:03.324"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:03.326" level="INFO"/>
<status status="PASS" starttime="20230309 17:55:03.325" endtime="20230309 17:55:03.326"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:03.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:03.327" endtime="20230309 17:55:03.327"/>
</kw>
<status status="PASS" starttime="20230309 17:55:02.477" endtime="20230309 17:55:03.328"/>
</kw>
<msg timestamp="20230309 17:55:03.328" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:55:02.476" endtime="20230309 17:55:03.329"/>
</kw>
<status status="PASS" starttime="20230309 17:55:02.476" endtime="20230309 17:55:03.329"/>
</kw>
<status status="PASS" starttime="20230309 17:54:50.345" endtime="20230309 17:55:03.329"/>
</kw>
<status status="PASS" starttime="20230309 17:54:50.345" endtime="20230309 17:55:03.329"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:55:03.330" endtime="20230309 17:55:03.330"/>
</kw>
<status status="PASS" starttime="20230309 17:54:50.234" endtime="20230309 17:55:03.331"/>
</kw>
<status status="PASS" starttime="20230309 17:54:50.233" endtime="20230309 17:55:03.331"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230309 17:55:03.331" endtime="20230309 17:55:03.332"/>
</kw>
<msg timestamp="20230309 17:55:03.332" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20230309 17:55:03.331" endtime="20230309 17:55:03.332"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:55:03.333" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20230309 17:55:03.333" endtime="20230309 17:55:03.333"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup links for S3 tests" library="commonawslib">
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:03.339" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/link 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:15.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:15.560" level="INFO">${output} = {
  "volumeName" : "s3v",
  "bucketName" : "link",
  "sourceVolume" : "legacy",
  "sourceBucket" : "source-bucket",
  "creationTime" : "2023-03-09T17:51:22.562Z",
  "modificationTime" : "2023-03-09T17...</msg>
<status status="PASS" starttime="20230309 17:55:03.335" endtime="20230309 17:55:15.560"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:55:15.561" endtime="20230309 17:55:15.561"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:55:15.562" endtime="20230309 17:55:15.563"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:55:15.563" endtime="20230309 17:55:15.564"/>
</kw>
<msg timestamp="20230309 17:55:15.564" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20230309 17:55:03.334" endtime="20230309 17:55:15.564"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230309 17:55:15.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:55:15.564" endtime="20230309 17:55:15.566"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://${OM_SERVICE_ID}/legacy</arg>
<status status="NOT RUN" starttime="20230309 17:55:15.566" endtime="20230309 17:55:15.566"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create o3://${OM_SERVICE_ID}/legacy/source-bucket</arg>
<status status="NOT RUN" starttime="20230309 17:55:15.566" endtime="20230309 17:55:15.566"/>
</kw>
<kw name="Create link" library="commonawslib">
<arg>link</arg>
<status status="NOT RUN" starttime="20230309 17:55:15.567" endtime="20230309 17:55:15.567"/>
</kw>
<status status="PASS" starttime="20230309 17:55:03.334" endtime="20230309 17:55:15.568"/>
</kw>
<status status="PASS" starttime="20230309 17:55:03.333" endtime="20230309 17:55:15.568"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:55:15.568" endtime="20230309 17:55:15.569"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:55:15.569" endtime="20230309 17:55:15.569"/>
</kw>
<status status="PASS" starttime="20230309 17:54:50.206" endtime="20230309 17:55:15.570"/>
</kw>
<kw name="Create Random File KB">
<arg>/tmp/part1</arg>
<arg>5121</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${file} bs=1024 count=${size_in_kilobytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:15.574" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1024 count=5121 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:15.620" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:15.620" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:55:15.572" endtime="20230309 17:55:15.620"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:15.621" level="INFO"/>
<status status="PASS" starttime="20230309 17:55:15.621" endtime="20230309 17:55:15.621"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:15.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:15.622" endtime="20230309 17:55:15.622"/>
</kw>
<status status="PASS" starttime="20230309 17:55:15.571" endtime="20230309 17:55:15.623"/>
</kw>
<msg timestamp="20230309 17:55:15.623" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:55:15.571" endtime="20230309 17:55:15.625"/>
</kw>
<status status="PASS" starttime="20230309 17:55:15.570" endtime="20230309 17:55:15.625"/>
</kw>
<status status="PASS" starttime="20230309 17:55:15.570" endtime="20230309 17:55:15.625"/>
</kw>
<kw name="Create Random File KB">
<arg>/tmp/part2</arg>
<arg>1023</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${file} bs=1024 count=${size_in_kilobytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:15.631" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part2 bs=1024 count=1023 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:15.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:15.648" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:55:15.628" endtime="20230309 17:55:15.648"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:15.649" level="INFO"/>
<status status="PASS" starttime="20230309 17:55:15.648" endtime="20230309 17:55:15.649"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:15.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:15.650" endtime="20230309 17:55:15.650"/>
</kw>
<status status="PASS" starttime="20230309 17:55:15.627" endtime="20230309 17:55:15.650"/>
</kw>
<msg timestamp="20230309 17:55:15.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:55:15.627" endtime="20230309 17:55:15.651"/>
</kw>
<status status="PASS" starttime="20230309 17:55:15.626" endtime="20230309 17:55:15.651"/>
</kw>
<status status="PASS" starttime="20230309 17:55:15.625" endtime="20230309 17:55:15.652"/>
</kw>
<status status="PASS" starttime="20230309 17:54:50.205" endtime="20230309 17:55:15.652"/>
</kw>
<test id="s1-s6-s7-t1" name="Test Multipart Upload With Adjusted Length" line="57">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:55:15.659" level="INFO">${randStr} = 3749057879</msg>
<status status="PASS" starttime="20230309 17:55:15.658" endtime="20230309 17:55:15.659"/>
</kw>
<msg timestamp="20230309 17:55:15.660" level="INFO">${random} = ozone-test-3749057879</msg>
<status status="PASS" starttime="20230309 17:55:15.657" endtime="20230309 17:55:15.660"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:55:15.661" level="INFO">${PREFIX} = ozone-test-3749057879</msg>
<status status="PASS" starttime="20230309 17:55:15.660" endtime="20230309 17:55:15.661"/>
</kw>
<status status="PASS" starttime="20230309 17:55:15.655" endtime="20230309 17:55:15.661"/>
</kw>
<kw name="Perform Multipart Upload" library="commonawslib">
<arg>${BUCKET}</arg>
<arg>multipart/adjusted_length_${PREFIX}</arg>
<arg>/tmp/part1</arg>
<arg>/tmp/part2</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:15.671" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key multipart/adjusted_length_ozone-test-3749057879 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:16.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:16.594" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "multipart/adjusted_length_ozone-test-3749057879",
    "UploadId": "f8f784cb-c278-4b7b-9207-ae18b1b6ae6e-109994607674196103"
}</msg>
<status status="PASS" starttime="20230309 17:55:15.667" endtime="20230309 17:55:16.594"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:16.597" level="INFO">{
    "Bucket": "link",
    "Key": "multipart/adjusted_length_ozone-test-3749057879",
    "UploadId": "f8f784cb-c278-4b7b-9207-ae18b1b6ae6e-109994607674196103"
}</msg>
<status status="PASS" starttime="20230309 17:55:16.595" endtime="20230309 17:55:16.597"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:16.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:16.598" endtime="20230309 17:55:16.598"/>
</kw>
<status status="PASS" starttime="20230309 17:55:15.666" endtime="20230309 17:55:16.599"/>
</kw>
<msg timestamp="20230309 17:55:16.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:55:15.665" endtime="20230309 17:55:16.600"/>
</kw>
<msg timestamp="20230309 17:55:16.602" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "multipart/adjusted_length_ozone-test-3749057879",
    "UploadId": "f8f784cb-c278-4b7b-9207-ae18b1b6ae6e-109994607674196103"
}</msg>
<status status="PASS" starttime="20230309 17:55:15.664" endtime="20230309 17:55:16.602"/>
</kw>
<msg timestamp="20230309 17:55:16.602" level="INFO">${result} = {
    "Bucket": "link",
    "Key": "multipart/adjusted_length_ozone-test-3749057879",
    "UploadId": "f8f784cb-c278-4b7b-9207-ae18b1b6ae6e-109994607674196103"
}</msg>
<status status="PASS" starttime="20230309 17:55:15.663" endtime="20230309 17:55:16.603"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:16.608" level="INFO">Running command 'echo '{
    "Bucket": "link",
    "Key": "multipart/adjusted_length_ozone-test-3749057879",
    "UploadId": "f8f784cb-c278-4b7b-9207-ae18b1b6ae6e-109994607674196103"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:16.698" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:16.699" level="INFO">${output} = f8f784cb-c278-4b7b-9207-ae18b1b6ae6e-109994607674196103</msg>
<status status="PASS" starttime="20230309 17:55:16.605" endtime="20230309 17:55:16.699"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:16.701" level="INFO">f8f784cb-c278-4b7b-9207-ae18b1b6ae6e-109994607674196103</msg>
<status status="PASS" starttime="20230309 17:55:16.699" endtime="20230309 17:55:16.701"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:16.702" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:16.701" endtime="20230309 17:55:16.702"/>
</kw>
<msg timestamp="20230309 17:55:16.703" level="INFO">${upload_id} = f8f784cb-c278-4b7b-9207-ae18b1b6ae6e-109994607674196103</msg>
<status status="PASS" starttime="20230309 17:55:16.604" endtime="20230309 17:55:16.703"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{etags}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230309 17:55:16.704" level="INFO">@{etags} = [ ]</msg>
<status status="PASS" starttime="20230309 17:55:16.703" endtime="20230309 17:55:16.704"/>
</kw>
<for flavor="IN ENUMERATE">
<var>${i}</var>
<var>${file}</var>
<value>@{files}</value>
<iter>
<var name="${i}">0</var>
<var name="${file}">/tmp/part1</var>
<kw name="Evaluate" library="BuiltIn">
<var>${part}</var>
<arg>${i} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230309 17:55:16.706" level="INFO">${part} = 1</msg>
<status status="PASS" starttime="20230309 17:55:16.705" endtime="20230309 17:55:16.706"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:16.713" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key multipart/adjusted_length_ozone-test-3749057879 --part-number 1 --body /tmp/part1 --upload-id f8f784cb-c278-4b7b-9207-ae18b1b6ae6e-109994607674196103 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:18.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:18.015" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/multipart/adjusted_length_ozone-test-3749057879-f8f784cb-c278-4b7b-9207-ae18b1b6ae6e-109994607674196103-1"
}</msg>
<status status="PASS" starttime="20230309 17:55:16.709" endtime="20230309 17:55:18.015"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:18.017" level="INFO">{
    "ETag": "/legacy/source-bucket/multipart/adjusted_length_ozone-test-3749057879-f8f784cb-c278-4b7b-9207-ae18b1b6ae6e-109994607674196103-1"
}</msg>
<status status="PASS" starttime="20230309 17:55:18.015" endtime="20230309 17:55:18.017"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:18.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:18.017" endtime="20230309 17:55:18.019"/>
</kw>
<status status="PASS" starttime="20230309 17:55:16.708" endtime="20230309 17:55:18.019"/>
</kw>
<msg timestamp="20230309 17:55:18.019" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:55:16.708" endtime="20230309 17:55:18.020"/>
</kw>
<msg timestamp="20230309 17:55:18.020" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/multipart/adjusted_length_ozone-test-3749057879-f8f784cb-c278-4b7b-9207-ae18b1b6ae6e-109994607674196103-1"
}</msg>
<status status="PASS" starttime="20230309 17:55:16.707" endtime="20230309 17:55:18.020"/>
</kw>
<msg timestamp="20230309 17:55:18.021" level="INFO">${result} = {
    "ETag": "/legacy/source-bucket/multipart/adjusted_length_ozone-test-3749057879-f8f784cb-c278-4b7b-9207-ae18b1b6ae6e-109994607674196103-1"
}</msg>
<status status="PASS" starttime="20230309 17:55:16.706" endtime="20230309 17:55:18.021"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:18.027" level="INFO">Running command 'echo '{
    "ETag": "/legacy/source-bucket/multipart/adjusted_length_ozone-test-3749057879-f8f784cb-c278-4b7b-9207-ae18b1b6ae6e-109994607674196103-1"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:18.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:18.094" level="INFO">${output} = /legacy/source-bucket/multipart/adjusted_length_ozone-test-3749057879-f8f784cb-c278-4b7b-9207-ae18b1b6ae6e-109994607674196103-1</msg>
<status status="PASS" starttime="20230309 17:55:18.024" endtime="20230309 17:55:18.094"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:18.096" level="INFO">/legacy/source-bucket/multipart/adjusted_length_ozone-test-3749057879-f8f784cb-c278-4b7b-9207-ae18b1b6ae6e-109994607674196103-1</msg>
<status status="PASS" starttime="20230309 17:55:18.095" endtime="20230309 17:55:18.096"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:18.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:18.097" endtime="20230309 17:55:18.098"/>
</kw>
<status status="PASS" starttime="20230309 17:55:18.023" endtime="20230309 17:55:18.098"/>
</kw>
<msg timestamp="20230309 17:55:18.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:55:18.022" endtime="20230309 17:55:18.099"/>
</kw>
<msg timestamp="20230309 17:55:18.100" level="INFO">${etag} = /legacy/source-bucket/multipart/adjusted_length_ozone-test-3749057879-f8f784cb-c278-4b7b-9207-ae18b1b6ae6e-109994607674196103-1</msg>
<status status="PASS" starttime="20230309 17:55:18.022" endtime="20230309 17:55:18.100"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${etags}</arg>
<arg>{ETag=${etag},PartNumber=${part}}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230309 17:55:18.100" endtime="20230309 17:55:18.101"/>
</kw>
<status status="PASS" starttime="20230309 17:55:16.705" endtime="20230309 17:55:18.101"/>
</iter>
<iter>
<var name="${i}">1</var>
<var name="${file}">/tmp/part2</var>
<kw name="Evaluate" library="BuiltIn">
<var>${part}</var>
<arg>${i} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230309 17:55:18.102" level="INFO">${part} = 2</msg>
<status status="PASS" starttime="20230309 17:55:18.102" endtime="20230309 17:55:18.102"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:18.110" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key multipart/adjusted_length_ozone-test-3749057879 --part-number 2 --body /tmp/part2 --upload-id f8f784cb-c278-4b7b-9207-ae18b1b6ae6e-109994607674196103 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:19.184" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:19.184" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/multipart/adjusted_length_ozone-test-3749057879-f8f784cb-c278-4b7b-9207-ae18b1b6ae6e-109994607674196103-2"
}</msg>
<status status="PASS" starttime="20230309 17:55:18.106" endtime="20230309 17:55:19.184"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:19.186" level="INFO">{
    "ETag": "/legacy/source-bucket/multipart/adjusted_length_ozone-test-3749057879-f8f784cb-c278-4b7b-9207-ae18b1b6ae6e-109994607674196103-2"
}</msg>
<status status="PASS" starttime="20230309 17:55:19.185" endtime="20230309 17:55:19.186"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:19.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:19.186" endtime="20230309 17:55:19.187"/>
</kw>
<status status="PASS" starttime="20230309 17:55:18.105" endtime="20230309 17:55:19.188"/>
</kw>
<msg timestamp="20230309 17:55:19.188" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:55:18.105" endtime="20230309 17:55:19.189"/>
</kw>
<msg timestamp="20230309 17:55:19.190" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/multipart/adjusted_length_ozone-test-3749057879-f8f784cb-c278-4b7b-9207-ae18b1b6ae6e-109994607674196103-2"
}</msg>
<status status="PASS" starttime="20230309 17:55:18.104" endtime="20230309 17:55:19.190"/>
</kw>
<msg timestamp="20230309 17:55:19.191" level="INFO">${result} = {
    "ETag": "/legacy/source-bucket/multipart/adjusted_length_ozone-test-3749057879-f8f784cb-c278-4b7b-9207-ae18b1b6ae6e-109994607674196103-2"
}</msg>
<status status="PASS" starttime="20230309 17:55:18.103" endtime="20230309 17:55:19.191"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:19.200" level="INFO">Running command 'echo '{
    "ETag": "/legacy/source-bucket/multipart/adjusted_length_ozone-test-3749057879-f8f784cb-c278-4b7b-9207-ae18b1b6ae6e-109994607674196103-2"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:19.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:19.268" level="INFO">${output} = /legacy/source-bucket/multipart/adjusted_length_ozone-test-3749057879-f8f784cb-c278-4b7b-9207-ae18b1b6ae6e-109994607674196103-2</msg>
<status status="PASS" starttime="20230309 17:55:19.196" endtime="20230309 17:55:19.268"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:19.270" level="INFO">/legacy/source-bucket/multipart/adjusted_length_ozone-test-3749057879-f8f784cb-c278-4b7b-9207-ae18b1b6ae6e-109994607674196103-2</msg>
<status status="PASS" starttime="20230309 17:55:19.269" endtime="20230309 17:55:19.270"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:19.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:19.270" endtime="20230309 17:55:19.274"/>
</kw>
<status status="PASS" starttime="20230309 17:55:19.194" endtime="20230309 17:55:19.274"/>
</kw>
<msg timestamp="20230309 17:55:19.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:55:19.193" endtime="20230309 17:55:19.278"/>
</kw>
<msg timestamp="20230309 17:55:19.278" level="INFO">${etag} = /legacy/source-bucket/multipart/adjusted_length_ozone-test-3749057879-f8f784cb-c278-4b7b-9207-ae18b1b6ae6e-109994607674196103-2</msg>
<status status="PASS" starttime="20230309 17:55:19.191" endtime="20230309 17:55:19.278"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${etags}</arg>
<arg>{ETag=${etag},PartNumber=${part}}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230309 17:55:19.279" endtime="20230309 17:55:19.280"/>
</kw>
<status status="PASS" starttime="20230309 17:55:18.101" endtime="20230309 17:55:19.280"/>
</iter>
<status status="PASS" starttime="20230309 17:55:16.704" endtime="20230309 17:55:19.280"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${parts}</var>
<arg>SEPARATOR=,</arg>
<arg>@{etags}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230309 17:55:19.282" level="INFO">${parts} = {ETag=/legacy/source-bucket/multipart/adjusted_length_ozone-test-3749057879-f8f784cb-c278-4b7b-9207-ae18b1b6ae6e-109994607674196103-1,PartNumber=1},{ETag=/legacy/source-bucket/multipart/adjusted_lengt...</msg>
<status status="PASS" starttime="20230309 17:55:19.280" endtime="20230309 17:55:19.282"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:19.294" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket link --key multipart/adjusted_length_ozone-test-3749057879 --upload-id f8f784cb-c278-4b7b-9207-ae18b1b6ae6e-109994607674196103 --multipart-upload 'Parts=[{ETag=/legacy/source-bucket/multipart/adjusted_length_ozone-test-3749057879-f8f784cb-c278-4b7b-9207-ae18b1b6ae6e-109994607674196103-1,PartNumber=1},{ETag=/legacy/source-bucket/multipart/adjusted_length_ozone-test-3749057879-f8f784cb-c278-4b7b-9207-ae18b1b6ae6e-109994607674196103-2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:20.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:20.362" level="INFO">${output} = {
    "Location": "link",
    "Bucket": "link",
    "Key": "multipart/adjusted_length_ozone-test-3749057879",
    "ETag": "514e94bc249225f03d56ac14bb9f8b1633b25fd9659e5ba01b22679e8eb1e2b3"
}</msg>
<status status="PASS" starttime="20230309 17:55:19.291" endtime="20230309 17:55:20.362"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:20.365" level="INFO">{
    "Location": "link",
    "Bucket": "link",
    "Key": "multipart/adjusted_length_ozone-test-3749057879",
    "ETag": "514e94bc249225f03d56ac14bb9f8b1633b25fd9659e5ba01b22679e8eb1e2b3"
}</msg>
<status status="PASS" starttime="20230309 17:55:20.363" endtime="20230309 17:55:20.365"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:20.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:20.365" endtime="20230309 17:55:20.367"/>
</kw>
<status status="PASS" starttime="20230309 17:55:19.289" endtime="20230309 17:55:20.367"/>
</kw>
<msg timestamp="20230309 17:55:20.368" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:55:19.288" endtime="20230309 17:55:20.369"/>
</kw>
<msg timestamp="20230309 17:55:20.369" level="INFO">${output} = {
    "Location": "link",
    "Bucket": "link",
    "Key": "multipart/adjusted_length_ozone-test-3749057879",
    "ETag": "514e94bc249225f03d56ac14bb9f8b1633b25fd9659e5ba01b22679e8eb1e2b3"
}</msg>
<status status="PASS" starttime="20230309 17:55:19.287" endtime="20230309 17:55:20.369"/>
</kw>
<status status="PASS" starttime="20230309 17:55:19.284" endtime="20230309 17:55:20.370"/>
</kw>
<status status="PASS" starttime="20230309 17:55:15.662" endtime="20230309 17:55:20.370"/>
</kw>
<kw name="Verify Multipart Upload" library="commonawslib">
<arg>${BUCKET}</arg>
<arg>multipart/adjusted_length_${PREFIX}</arg>
<arg>/tmp/part1</arg>
<arg>/tmp/part2</arg>
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:55:20.373" level="INFO">${randStr} = 0361978004</msg>
<status status="PASS" starttime="20230309 17:55:20.373" endtime="20230309 17:55:20.373"/>
</kw>
<msg timestamp="20230309 17:55:20.374" level="INFO">${random} = ozone-test-0361978004</msg>
<status status="PASS" starttime="20230309 17:55:20.371" endtime="20230309 17:55:20.374"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} /tmp/verify${random}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:20.381" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key multipart/adjusted_length_ozone-test-3749057879 /tmp/verifyozone-test-0361978004 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:22.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:22.229" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:55:20 GMT",
    "ContentLength": 6291456,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Ex...</msg>
<status status="PASS" starttime="20230309 17:55:20.377" endtime="20230309 17:55:22.229"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:22.231" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:55:20 GMT",
    "ContentLength": 6291456,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 09 Mar 2023 17:55:21 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230309 17:55:22.230" endtime="20230309 17:55:22.231"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:22.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:22.232" endtime="20230309 17:55:22.232"/>
</kw>
<status status="PASS" starttime="20230309 17:55:20.377" endtime="20230309 17:55:22.233"/>
</kw>
<msg timestamp="20230309 17:55:22.233" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:55:20.376" endtime="20230309 17:55:22.234"/>
</kw>
<msg timestamp="20230309 17:55:22.235" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:55:20 GMT",
    "ContentLength": 6291456,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Ex...</msg>
<status status="PASS" starttime="20230309 17:55:20.375" endtime="20230309 17:55:22.235"/>
</kw>
<status status="PASS" starttime="20230309 17:55:20.374" endtime="20230309 17:55:22.235"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${tmp}</var>
<arg>@{files}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230309 17:55:22.237" level="INFO">${tmp} = /tmp/part1 /tmp/part2</msg>
<status status="PASS" starttime="20230309 17:55:22.236" endtime="20230309 17:55:22.237"/>
</kw>
<kw name="Execute" library="os">
<arg>cat ${tmp} &gt; /tmp/original${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:22.244" level="INFO">Running command 'cat /tmp/part1 /tmp/part2 &gt; /tmp/originalozone-test-0361978004'.</msg>
<msg timestamp="20230309 17:55:22.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:22.260" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:55:22.240" endtime="20230309 17:55:22.260"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:22.262" level="INFO"/>
<status status="PASS" starttime="20230309 17:55:22.260" endtime="20230309 17:55:22.262"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:22.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:22.262" endtime="20230309 17:55:22.263"/>
</kw>
<status status="PASS" starttime="20230309 17:55:22.240" endtime="20230309 17:55:22.264"/>
</kw>
<msg timestamp="20230309 17:55:22.264" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:55:22.239" endtime="20230309 17:55:22.265"/>
</kw>
<status status="PASS" starttime="20230309 17:55:22.237" endtime="20230309 17:55:22.265"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/original${random}</arg>
<arg>/tmp/verify${random}</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:22.285" level="INFO">Running command 'md5sum /tmp/originalozone-test-0361978004 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:22.321" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:22.321" level="INFO">${output} = 3557d17184d44c4475b7d79f7c1410fe</msg>
<status status="PASS" starttime="20230309 17:55:22.278" endtime="20230309 17:55:22.321"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:22.323" level="INFO">3557d17184d44c4475b7d79f7c1410fe</msg>
<status status="PASS" starttime="20230309 17:55:22.322" endtime="20230309 17:55:22.324"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:22.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:22.324" endtime="20230309 17:55:22.328"/>
</kw>
<status status="PASS" starttime="20230309 17:55:22.275" endtime="20230309 17:55:22.333"/>
</kw>
<msg timestamp="20230309 17:55:22.333" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:55:22.275" endtime="20230309 17:55:22.335"/>
</kw>
<msg timestamp="20230309 17:55:22.337" level="INFO">${checksumbefore} = 3557d17184d44c4475b7d79f7c1410fe</msg>
<status status="PASS" starttime="20230309 17:55:22.272" endtime="20230309 17:55:22.337"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:22.354" level="INFO">Running command 'md5sum /tmp/verifyozone-test-0361978004 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:22.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:22.414" level="INFO">${output} = 3557d17184d44c4475b7d79f7c1410fe</msg>
<status status="PASS" starttime="20230309 17:55:22.344" endtime="20230309 17:55:22.414"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:22.420" level="INFO">3557d17184d44c4475b7d79f7c1410fe</msg>
<status status="PASS" starttime="20230309 17:55:22.416" endtime="20230309 17:55:22.420"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:22.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:22.421" endtime="20230309 17:55:22.422"/>
</kw>
<status status="PASS" starttime="20230309 17:55:22.340" endtime="20230309 17:55:22.422"/>
</kw>
<msg timestamp="20230309 17:55:22.425" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:55:22.340" endtime="20230309 17:55:22.426"/>
</kw>
<msg timestamp="20230309 17:55:22.426" level="INFO">${checksumafter} = 3557d17184d44c4475b7d79f7c1410fe</msg>
<status status="PASS" starttime="20230309 17:55:22.337" endtime="20230309 17:55:22.427"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 17:55:22.428" endtime="20230309 17:55:22.429"/>
</kw>
<status status="PASS" starttime="20230309 17:55:22.265" endtime="20230309 17:55:22.431"/>
</kw>
<status status="PASS" starttime="20230309 17:55:20.370" endtime="20230309 17:55:22.432"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:55:15.652" endtime="20230309 17:55:22.433"/>
</test>
<test id="s1-s6-s7-t2" name="Test Multipart Upload" line="61">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:55:22.446" level="INFO">${randStr} = 9706203270</msg>
<status status="PASS" starttime="20230309 17:55:22.444" endtime="20230309 17:55:22.446"/>
</kw>
<msg timestamp="20230309 17:55:22.447" level="INFO">${random} = ozone-test-9706203270</msg>
<status status="PASS" starttime="20230309 17:55:22.442" endtime="20230309 17:55:22.447"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:55:22.448" level="INFO">${PREFIX} = ozone-test-9706203270</msg>
<status status="PASS" starttime="20230309 17:55:22.447" endtime="20230309 17:55:22.449"/>
</kw>
<status status="PASS" starttime="20230309 17:55:22.441" endtime="20230309 17:55:22.449"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:22.456" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key ozone-test-9706203270/multipartKey 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:23.404" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:23.404" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-9706203270/multipartKey",
    "UploadId": "941ecb60-1f3f-41a5-8455-5cab449c5443-109994608119513226"
}</msg>
<status status="PASS" starttime="20230309 17:55:22.453" endtime="20230309 17:55:23.404"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:23.406" level="INFO">{
    "Bucket": "link",
    "Key": "ozone-test-9706203270/multipartKey",
    "UploadId": "941ecb60-1f3f-41a5-8455-5cab449c5443-109994608119513226"
}</msg>
<status status="PASS" starttime="20230309 17:55:23.405" endtime="20230309 17:55:23.406"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:23.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:23.407" endtime="20230309 17:55:23.407"/>
</kw>
<status status="PASS" starttime="20230309 17:55:22.452" endtime="20230309 17:55:23.408"/>
</kw>
<msg timestamp="20230309 17:55:23.408" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:55:22.452" endtime="20230309 17:55:23.409"/>
</kw>
<msg timestamp="20230309 17:55:23.409" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-9706203270/multipartKey",
    "UploadId": "941ecb60-1f3f-41a5-8455-5cab449c5443-109994608119513226"
}</msg>
<status status="PASS" starttime="20230309 17:55:22.451" endtime="20230309 17:55:23.409"/>
</kw>
<msg timestamp="20230309 17:55:23.410" level="INFO">${result} = {
    "Bucket": "link",
    "Key": "ozone-test-9706203270/multipartKey",
    "UploadId": "941ecb60-1f3f-41a5-8455-5cab449c5443-109994608119513226"
}</msg>
<status status="PASS" starttime="20230309 17:55:22.449" endtime="20230309 17:55:23.410"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:23.415" level="INFO">Running command 'echo '{
    "Bucket": "link",
    "Key": "ozone-test-9706203270/multipartKey",
    "UploadId": "941ecb60-1f3f-41a5-8455-5cab449c5443-109994608119513226"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:23.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:23.473" level="INFO">${output} = 941ecb60-1f3f-41a5-8455-5cab449c5443-109994608119513226</msg>
<status status="PASS" starttime="20230309 17:55:23.412" endtime="20230309 17:55:23.473"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:23.475" level="INFO">941ecb60-1f3f-41a5-8455-5cab449c5443-109994608119513226</msg>
<status status="PASS" starttime="20230309 17:55:23.474" endtime="20230309 17:55:23.475"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:23.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:23.475" endtime="20230309 17:55:23.476"/>
</kw>
<msg timestamp="20230309 17:55:23.477" level="INFO">${uploadID} = 941ecb60-1f3f-41a5-8455-5cab449c5443-109994608119513226</msg>
<status status="PASS" starttime="20230309 17:55:23.410" endtime="20230309 17:55:23.477"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:55:23.477" endtime="20230309 17:55:23.478"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:55:23.478" endtime="20230309 17:55:23.479"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:55:23.479" endtime="20230309 17:55:23.480"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:23.488" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key ozone-test-9706203270/multipartKey 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:24.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:24.453" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-9706203270/multipartKey",
    "UploadId": "722cfcb7-db3e-47a5-8ccd-0e9ee23dfce7-109994608187474059"
}</msg>
<status status="PASS" starttime="20230309 17:55:23.484" endtime="20230309 17:55:24.453"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:24.455" level="INFO">{
    "Bucket": "link",
    "Key": "ozone-test-9706203270/multipartKey",
    "UploadId": "722cfcb7-db3e-47a5-8ccd-0e9ee23dfce7-109994608187474059"
}</msg>
<status status="PASS" starttime="20230309 17:55:24.454" endtime="20230309 17:55:24.455"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:24.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:24.455" endtime="20230309 17:55:24.457"/>
</kw>
<status status="PASS" starttime="20230309 17:55:23.483" endtime="20230309 17:55:24.458"/>
</kw>
<msg timestamp="20230309 17:55:24.458" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:55:23.483" endtime="20230309 17:55:24.459"/>
</kw>
<msg timestamp="20230309 17:55:24.459" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-9706203270/multipartKey",
    "UploadId": "722cfcb7-db3e-47a5-8ccd-0e9ee23dfce7-109994608187474059"
}</msg>
<status status="PASS" starttime="20230309 17:55:23.481" endtime="20230309 17:55:24.459"/>
</kw>
<msg timestamp="20230309 17:55:24.460" level="INFO">${result} = {
    "Bucket": "link",
    "Key": "ozone-test-9706203270/multipartKey",
    "UploadId": "722cfcb7-db3e-47a5-8ccd-0e9ee23dfce7-109994608187474059"
}</msg>
<status status="PASS" starttime="20230309 17:55:23.480" endtime="20230309 17:55:24.460"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${nextUploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:24.466" level="INFO">Running command 'echo '{
    "Bucket": "link",
    "Key": "ozone-test-9706203270/multipartKey",
    "UploadId": "722cfcb7-db3e-47a5-8ccd-0e9ee23dfce7-109994608187474059"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:24.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:24.528" level="INFO">${output} = 722cfcb7-db3e-47a5-8ccd-0e9ee23dfce7-109994608187474059</msg>
<status status="PASS" starttime="20230309 17:55:24.462" endtime="20230309 17:55:24.528"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:24.530" level="INFO">722cfcb7-db3e-47a5-8ccd-0e9ee23dfce7-109994608187474059</msg>
<status status="PASS" starttime="20230309 17:55:24.529" endtime="20230309 17:55:24.530"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:24.532" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:24.531" endtime="20230309 17:55:24.532"/>
</kw>
<msg timestamp="20230309 17:55:24.532" level="INFO">${nextUploadID} = 722cfcb7-db3e-47a5-8ccd-0e9ee23dfce7-109994608187474059</msg>
<status status="PASS" starttime="20230309 17:55:24.460" endtime="20230309 17:55:24.533"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:55:24.533" endtime="20230309 17:55:24.534"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:55:24.535" endtime="20230309 17:55:24.536"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:55:24.536" endtime="20230309 17:55:24.536"/>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${uploadID}</arg>
<arg>${nextUploadID}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="PASS" starttime="20230309 17:55:24.537" endtime="20230309 17:55:24.537"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:24.545" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:24.593" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:24.593" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:55:24.541" endtime="20230309 17:55:24.594"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:24.596" level="INFO"/>
<status status="PASS" starttime="20230309 17:55:24.595" endtime="20230309 17:55:24.596"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:24.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:24.597" endtime="20230309 17:55:24.598"/>
</kw>
<status status="PASS" starttime="20230309 17:55:24.540" endtime="20230309 17:55:24.598"/>
</kw>
<msg timestamp="20230309 17:55:24.598" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:55:24.540" endtime="20230309 17:55:24.599"/>
</kw>
<status status="PASS" starttime="20230309 17:55:24.539" endtime="20230309 17:55:24.599"/>
</kw>
<status status="PASS" starttime="20230309 17:55:24.539" endtime="20230309 17:55:24.600"/>
</kw>
<status status="PASS" starttime="20230309 17:55:24.538" endtime="20230309 17:55:24.600"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey --part-number 1 --body /tmp/part1 --upload-id ${nextUploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:24.608" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key ozone-test-9706203270/multipartKey --part-number 1 --body /tmp/part1 --upload-id 722cfcb7-db3e-47a5-8ccd-0e9ee23dfce7-109994608187474059 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:25.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:25.863" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-9706203270/multipartKey-722cfcb7-db3e-47a5-8ccd-0e9ee23dfce7-109994608187474059-1"
}</msg>
<status status="PASS" starttime="20230309 17:55:24.604" endtime="20230309 17:55:25.864"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:25.866" level="INFO">{
    "ETag": "/legacy/source-bucket/ozone-test-9706203270/multipartKey-722cfcb7-db3e-47a5-8ccd-0e9ee23dfce7-109994608187474059-1"
}</msg>
<status status="PASS" starttime="20230309 17:55:25.864" endtime="20230309 17:55:25.866"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:25.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:25.867" endtime="20230309 17:55:25.868"/>
</kw>
<status status="PASS" starttime="20230309 17:55:24.603" endtime="20230309 17:55:25.868"/>
</kw>
<msg timestamp="20230309 17:55:25.868" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:55:24.603" endtime="20230309 17:55:25.869"/>
</kw>
<msg timestamp="20230309 17:55:25.870" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-9706203270/multipartKey-722cfcb7-db3e-47a5-8ccd-0e9ee23dfce7-109994608187474059-1"
}</msg>
<status status="PASS" starttime="20230309 17:55:24.602" endtime="20230309 17:55:25.870"/>
</kw>
<msg timestamp="20230309 17:55:25.871" level="INFO">${result} = {
    "ETag": "/legacy/source-bucket/ozone-test-9706203270/multipartKey-722cfcb7-db3e-47a5-8ccd-0e9ee23dfce7-109994608187474059-1"
}</msg>
<status status="PASS" starttime="20230309 17:55:24.600" endtime="20230309 17:55:25.871"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:55:25.871" endtime="20230309 17:55:25.873"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:25.883" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:25.923" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:25.923" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:55:25.879" endtime="20230309 17:55:25.923"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:25.926" level="INFO"/>
<status status="PASS" starttime="20230309 17:55:25.924" endtime="20230309 17:55:25.926"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:25.927" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:25.927" endtime="20230309 17:55:25.928"/>
</kw>
<status status="PASS" starttime="20230309 17:55:25.878" endtime="20230309 17:55:25.930"/>
</kw>
<msg timestamp="20230309 17:55:25.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:55:25.876" endtime="20230309 17:55:25.931"/>
</kw>
<status status="PASS" starttime="20230309 17:55:25.875" endtime="20230309 17:55:25.931"/>
</kw>
<status status="PASS" starttime="20230309 17:55:25.874" endtime="20230309 17:55:25.932"/>
</kw>
<status status="PASS" starttime="20230309 17:55:25.874" endtime="20230309 17:55:25.932"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey --part-number 1 --body /tmp/part1 --upload-id ${nextUploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:25.938" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key ozone-test-9706203270/multipartKey --part-number 1 --body /tmp/part1 --upload-id 722cfcb7-db3e-47a5-8ccd-0e9ee23dfce7-109994608187474059 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:27.323" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:27.323" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-9706203270/multipartKey-722cfcb7-db3e-47a5-8ccd-0e9ee23dfce7-109994608187474059-1"
}</msg>
<status status="PASS" starttime="20230309 17:55:25.935" endtime="20230309 17:55:27.323"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:27.324" level="INFO">{
    "ETag": "/legacy/source-bucket/ozone-test-9706203270/multipartKey-722cfcb7-db3e-47a5-8ccd-0e9ee23dfce7-109994608187474059-1"
}</msg>
<status status="PASS" starttime="20230309 17:55:27.323" endtime="20230309 17:55:27.324"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:27.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:27.325" endtime="20230309 17:55:27.325"/>
</kw>
<status status="PASS" starttime="20230309 17:55:25.934" endtime="20230309 17:55:27.329"/>
</kw>
<msg timestamp="20230309 17:55:27.329" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:55:25.933" endtime="20230309 17:55:27.330"/>
</kw>
<msg timestamp="20230309 17:55:27.331" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-9706203270/multipartKey-722cfcb7-db3e-47a5-8ccd-0e9ee23dfce7-109994608187474059-1"
}</msg>
<status status="PASS" starttime="20230309 17:55:25.933" endtime="20230309 17:55:27.331"/>
</kw>
<msg timestamp="20230309 17:55:27.332" level="INFO">${result} = {
    "ETag": "/legacy/source-bucket/ozone-test-9706203270/multipartKey-722cfcb7-db3e-47a5-8ccd-0e9ee23dfce7-109994608187474059-1"
}</msg>
<status status="PASS" starttime="20230309 17:55:25.932" endtime="20230309 17:55:27.332"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:55:27.332" endtime="20230309 17:55:27.333"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:55:22.438" endtime="20230309 17:55:27.334"/>
</test>
<test id="s1-s6-s7-t3" name="Test Multipart Upload Complete" line="89">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:55:27.343" level="INFO">${randStr} = 3450831095</msg>
<status status="PASS" starttime="20230309 17:55:27.342" endtime="20230309 17:55:27.343"/>
</kw>
<msg timestamp="20230309 17:55:27.344" level="INFO">${random} = ozone-test-3450831095</msg>
<status status="PASS" starttime="20230309 17:55:27.340" endtime="20230309 17:55:27.345"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:55:27.346" level="INFO">${PREFIX} = ozone-test-3450831095</msg>
<status status="PASS" starttime="20230309 17:55:27.345" endtime="20230309 17:55:27.346"/>
</kw>
<status status="PASS" starttime="20230309 17:55:27.339" endtime="20230309 17:55:27.346"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:27.359" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key ozone-test-3450831095/multipartKey1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:28.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:28.555" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-3450831095/multipartKey1",
    "UploadId": "c26cb804-aec1-4c69-98c5-6f0542184e54-109994608451321998"
}</msg>
<status status="PASS" starttime="20230309 17:55:27.353" endtime="20230309 17:55:28.555"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:28.558" level="INFO">{
    "Bucket": "link",
    "Key": "ozone-test-3450831095/multipartKey1",
    "UploadId": "c26cb804-aec1-4c69-98c5-6f0542184e54-109994608451321998"
}</msg>
<status status="PASS" starttime="20230309 17:55:28.557" endtime="20230309 17:55:28.558"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:28.559" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:28.558" endtime="20230309 17:55:28.559"/>
</kw>
<status status="PASS" starttime="20230309 17:55:27.351" endtime="20230309 17:55:28.559"/>
</kw>
<msg timestamp="20230309 17:55:28.559" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:55:27.350" endtime="20230309 17:55:28.561"/>
</kw>
<msg timestamp="20230309 17:55:28.562" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-3450831095/multipartKey1",
    "UploadId": "c26cb804-aec1-4c69-98c5-6f0542184e54-109994608451321998"
}</msg>
<status status="PASS" starttime="20230309 17:55:27.348" endtime="20230309 17:55:28.562"/>
</kw>
<msg timestamp="20230309 17:55:28.563" level="INFO">${result} = {
    "Bucket": "link",
    "Key": "ozone-test-3450831095/multipartKey1",
    "UploadId": "c26cb804-aec1-4c69-98c5-6f0542184e54-109994608451321998"
}</msg>
<status status="PASS" starttime="20230309 17:55:27.347" endtime="20230309 17:55:28.564"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:28.569" level="INFO">Running command 'echo '{
    "Bucket": "link",
    "Key": "ozone-test-3450831095/multipartKey1",
    "UploadId": "c26cb804-aec1-4c69-98c5-6f0542184e54-109994608451321998"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:28.653" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:28.653" level="INFO">${output} = c26cb804-aec1-4c69-98c5-6f0542184e54-109994608451321998</msg>
<status status="PASS" starttime="20230309 17:55:28.565" endtime="20230309 17:55:28.654"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:28.657" level="INFO">c26cb804-aec1-4c69-98c5-6f0542184e54-109994608451321998</msg>
<status status="PASS" starttime="20230309 17:55:28.655" endtime="20230309 17:55:28.657"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:28.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:28.657" endtime="20230309 17:55:28.658"/>
</kw>
<msg timestamp="20230309 17:55:28.659" level="INFO">${uploadID} = c26cb804-aec1-4c69-98c5-6f0542184e54-109994608451321998</msg>
<status status="PASS" starttime="20230309 17:55:28.564" endtime="20230309 17:55:28.659"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:55:28.659" endtime="20230309 17:55:28.660"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:55:28.660" endtime="20230309 17:55:28.661"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:55:28.662" endtime="20230309 17:55:28.662"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:28.671" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:28.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:28.711" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:55:28.667" endtime="20230309 17:55:28.711"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:28.714" level="INFO"/>
<status status="PASS" starttime="20230309 17:55:28.712" endtime="20230309 17:55:28.714"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:28.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:28.715" endtime="20230309 17:55:28.716"/>
</kw>
<status status="PASS" starttime="20230309 17:55:28.666" endtime="20230309 17:55:28.717"/>
</kw>
<msg timestamp="20230309 17:55:28.717" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:55:28.666" endtime="20230309 17:55:28.718"/>
</kw>
<status status="PASS" starttime="20230309 17:55:28.665" endtime="20230309 17:55:28.719"/>
</kw>
<status status="PASS" starttime="20230309 17:55:28.663" endtime="20230309 17:55:28.719"/>
</kw>
<status status="PASS" starttime="20230309 17:55:28.663" endtime="20230309 17:55:28.719"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:28.729" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key ozone-test-3450831095/multipartKey1 --part-number 1 --body /tmp/part1 --upload-id c26cb804-aec1-4c69-98c5-6f0542184e54-109994608451321998 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:30.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:30.221" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-3450831095/multipartKey1-c26cb804-aec1-4c69-98c5-6f0542184e54-109994608451321998-1"
}</msg>
<status status="PASS" starttime="20230309 17:55:28.724" endtime="20230309 17:55:30.221"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:30.222" level="INFO">{
    "ETag": "/legacy/source-bucket/ozone-test-3450831095/multipartKey1-c26cb804-aec1-4c69-98c5-6f0542184e54-109994608451321998-1"
}</msg>
<status status="PASS" starttime="20230309 17:55:30.221" endtime="20230309 17:55:30.223"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:30.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:30.223" endtime="20230309 17:55:30.224"/>
</kw>
<status status="PASS" starttime="20230309 17:55:28.723" endtime="20230309 17:55:30.224"/>
</kw>
<msg timestamp="20230309 17:55:30.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:55:28.722" endtime="20230309 17:55:30.225"/>
</kw>
<msg timestamp="20230309 17:55:30.225" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-3450831095/multipartKey1-c26cb804-aec1-4c69-98c5-6f0542184e54-109994608451321998-1"
}</msg>
<status status="PASS" starttime="20230309 17:55:28.721" endtime="20230309 17:55:30.225"/>
</kw>
<msg timestamp="20230309 17:55:30.226" level="INFO">${result} = {
    "ETag": "/legacy/source-bucket/ozone-test-3450831095/multipartKey1-c26cb804-aec1-4c69-98c5-6f0542184e54-109994608451321998-1"
}</msg>
<status status="PASS" starttime="20230309 17:55:28.720" endtime="20230309 17:55:30.226"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:30.231" level="INFO">Running command 'echo '{
    "ETag": "/legacy/source-bucket/ozone-test-3450831095/multipartKey1-c26cb804-aec1-4c69-98c5-6f0542184e54-109994608451321998-1"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:30.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:30.303" level="INFO">${output} = /legacy/source-bucket/ozone-test-3450831095/multipartKey1-c26cb804-aec1-4c69-98c5-6f0542184e54-109994608451321998-1</msg>
<status status="PASS" starttime="20230309 17:55:30.227" endtime="20230309 17:55:30.303"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:30.305" level="INFO">/legacy/source-bucket/ozone-test-3450831095/multipartKey1-c26cb804-aec1-4c69-98c5-6f0542184e54-109994608451321998-1</msg>
<status status="PASS" starttime="20230309 17:55:30.304" endtime="20230309 17:55:30.305"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:30.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:30.306" endtime="20230309 17:55:30.306"/>
</kw>
<msg timestamp="20230309 17:55:30.307" level="INFO">${eTag1} = /legacy/source-bucket/ozone-test-3450831095/multipartKey1-c26cb804-aec1-4c69-98c5-6f0542184e54-109994608451321998-1</msg>
<status status="PASS" starttime="20230309 17:55:30.226" endtime="20230309 17:55:30.307"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:55:30.307" endtime="20230309 17:55:30.308"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part2" &gt; /tmp/part2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:30.314" level="INFO">Running command 'echo "Part2" &gt; /tmp/part2'.</msg>
<msg timestamp="20230309 17:55:30.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:30.318" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:55:30.311" endtime="20230309 17:55:30.318"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:30.319" level="INFO"/>
<status status="PASS" starttime="20230309 17:55:30.318" endtime="20230309 17:55:30.320"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:30.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:30.320" endtime="20230309 17:55:30.321"/>
</kw>
<status status="PASS" starttime="20230309 17:55:30.309" endtime="20230309 17:55:30.321"/>
</kw>
<msg timestamp="20230309 17:55:30.321" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:55:30.309" endtime="20230309 17:55:30.322"/>
</kw>
<status status="PASS" starttime="20230309 17:55:30.308" endtime="20230309 17:55:30.322"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 2 --body /tmp/part2 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:30.330" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key ozone-test-3450831095/multipartKey1 --part-number 2 --body /tmp/part2 --upload-id c26cb804-aec1-4c69-98c5-6f0542184e54-109994608451321998 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:31.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:31.492" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-3450831095/multipartKey1-c26cb804-aec1-4c69-98c5-6f0542184e54-109994608451321998-2"
}</msg>
<status status="PASS" starttime="20230309 17:55:30.327" endtime="20230309 17:55:31.492"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:31.494" level="INFO">{
    "ETag": "/legacy/source-bucket/ozone-test-3450831095/multipartKey1-c26cb804-aec1-4c69-98c5-6f0542184e54-109994608451321998-2"
}</msg>
<status status="PASS" starttime="20230309 17:55:31.493" endtime="20230309 17:55:31.495"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:31.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:31.495" endtime="20230309 17:55:31.496"/>
</kw>
<status status="PASS" starttime="20230309 17:55:30.325" endtime="20230309 17:55:31.496"/>
</kw>
<msg timestamp="20230309 17:55:31.496" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:55:30.324" endtime="20230309 17:55:31.497"/>
</kw>
<msg timestamp="20230309 17:55:31.497" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-3450831095/multipartKey1-c26cb804-aec1-4c69-98c5-6f0542184e54-109994608451321998-2"
}</msg>
<status status="PASS" starttime="20230309 17:55:30.324" endtime="20230309 17:55:31.498"/>
</kw>
<msg timestamp="20230309 17:55:31.498" level="INFO">${result} = {
    "ETag": "/legacy/source-bucket/ozone-test-3450831095/multipartKey1-c26cb804-aec1-4c69-98c5-6f0542184e54-109994608451321998-2"
}</msg>
<status status="PASS" starttime="20230309 17:55:30.323" endtime="20230309 17:55:31.498"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:31.503" level="INFO">Running command 'echo '{
    "ETag": "/legacy/source-bucket/ozone-test-3450831095/multipartKey1-c26cb804-aec1-4c69-98c5-6f0542184e54-109994608451321998-2"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:31.562" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:31.563" level="INFO">${output} = /legacy/source-bucket/ozone-test-3450831095/multipartKey1-c26cb804-aec1-4c69-98c5-6f0542184e54-109994608451321998-2</msg>
<status status="PASS" starttime="20230309 17:55:31.499" endtime="20230309 17:55:31.563"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:31.565" level="INFO">/legacy/source-bucket/ozone-test-3450831095/multipartKey1-c26cb804-aec1-4c69-98c5-6f0542184e54-109994608451321998-2</msg>
<status status="PASS" starttime="20230309 17:55:31.564" endtime="20230309 17:55:31.565"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:31.566" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:31.565" endtime="20230309 17:55:31.566"/>
</kw>
<msg timestamp="20230309 17:55:31.567" level="INFO">${eTag2} = /legacy/source-bucket/ozone-test-3450831095/multipartKey1-c26cb804-aec1-4c69-98c5-6f0542184e54-109994608451321998-2</msg>
<status status="PASS" starttime="20230309 17:55:31.498" endtime="20230309 17:55:31.567"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:55:31.568" endtime="20230309 17:55:31.568"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:31.577" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id c26cb804-aec1-4c69-98c5-6f0542184e54-109994608451321998 --bucket link --key ozone-test-3450831095/multipartKey1 --multipart-upload 'Parts=[{ETag=/legacy/source-bucket/ozone-test-3450831095/multipartKey1-c26cb804-aec1-4c69-98c5-6f0542184e54-109994608451321998-1,PartNumber=1},{ETag=/legacy/source-bucket/ozone-test-3450831095/multipartKey1-c26cb804-aec1-4c69-98c5-6f0542184e54-109994608451321998-2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:32.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:32.675" level="INFO">${output} = {
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-3450831095/multipartKey1",
    "ETag": "96e639c06583249ec32289757df4894118d7d5a362051e13b747e22ba4c23382"
}</msg>
<status status="PASS" starttime="20230309 17:55:31.573" endtime="20230309 17:55:32.676"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:32.678" level="INFO">{
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-3450831095/multipartKey1",
    "ETag": "96e639c06583249ec32289757df4894118d7d5a362051e13b747e22ba4c23382"
}</msg>
<status status="PASS" starttime="20230309 17:55:32.676" endtime="20230309 17:55:32.678"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:32.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:32.678" endtime="20230309 17:55:32.679"/>
</kw>
<status status="PASS" starttime="20230309 17:55:31.572" endtime="20230309 17:55:32.679"/>
</kw>
<msg timestamp="20230309 17:55:32.680" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:55:31.572" endtime="20230309 17:55:32.681"/>
</kw>
<msg timestamp="20230309 17:55:32.681" level="INFO">${output} = {
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-3450831095/multipartKey1",
    "ETag": "96e639c06583249ec32289757df4894118d7d5a362051e13b747e22ba4c23382"
}</msg>
<status status="PASS" starttime="20230309 17:55:31.571" endtime="20230309 17:55:32.681"/>
</kw>
<msg timestamp="20230309 17:55:32.682" level="INFO">${result} = {
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-3450831095/multipartKey1",
    "ETag": "96e639c06583249ec32289757df4894118d7d5a362051e13b747e22ba4c23382"
}</msg>
<status status="PASS" starttime="20230309 17:55:31.569" endtime="20230309 17:55:32.682"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:55:32.682" endtime="20230309 17:55:32.683"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:55:32.683" endtime="20230309 17:55:32.684"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:55:32.684" endtime="20230309 17:55:32.685"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 /tmp/${PREFIX}-multipartKey1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:32.693" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-3450831095/multipartKey1 /tmp/ozone-test-3450831095-multipartKey1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:34.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:34.222" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:55:32 GMT",
    "ContentLength": 5242886,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Ex...</msg>
<status status="PASS" starttime="20230309 17:55:32.689" endtime="20230309 17:55:34.223"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:34.224" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:55:32 GMT",
    "ContentLength": 5242886,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 09 Mar 2023 17:55:33 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230309 17:55:34.223" endtime="20230309 17:55:34.225"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:34.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:34.225" endtime="20230309 17:55:34.226"/>
</kw>
<status status="PASS" starttime="20230309 17:55:32.688" endtime="20230309 17:55:34.227"/>
</kw>
<msg timestamp="20230309 17:55:34.227" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:55:32.687" endtime="20230309 17:55:34.228"/>
</kw>
<msg timestamp="20230309 17:55:34.228" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:55:32 GMT",
    "ContentLength": 5242886,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Ex...</msg>
<status status="PASS" starttime="20230309 17:55:32.686" endtime="20230309 17:55:34.228"/>
</kw>
<msg timestamp="20230309 17:55:34.229" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:55:32 GMT",
    "ContentLength": 5242886,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Ex...</msg>
<status status="PASS" starttime="20230309 17:55:32.685" endtime="20230309 17:55:34.229"/>
</kw>
<kw name="Execute" library="os">
<arg>cat /tmp/part1 /tmp/part2 &gt; /tmp/${PREFIX}-multipartKey1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:34.235" level="INFO">Running command 'cat /tmp/part1 /tmp/part2 &gt; /tmp/ozone-test-3450831095-multipartKey1'.</msg>
<msg timestamp="20230309 17:55:34.247" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:34.247" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:55:34.231" endtime="20230309 17:55:34.247"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:34.249" level="INFO"/>
<status status="PASS" starttime="20230309 17:55:34.248" endtime="20230309 17:55:34.249"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:34.250" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:34.249" endtime="20230309 17:55:34.250"/>
</kw>
<status status="PASS" starttime="20230309 17:55:34.231" endtime="20230309 17:55:34.251"/>
</kw>
<msg timestamp="20230309 17:55:34.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:55:34.230" endtime="20230309 17:55:34.251"/>
</kw>
<status status="PASS" starttime="20230309 17:55:34.229" endtime="20230309 17:55:34.252"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/${PREFIX}-multipartKey1</arg>
<arg>/tmp/${PREFIX}-multipartKey1.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:34.259" level="INFO">Running command 'md5sum /tmp/ozone-test-3450831095-multipartKey1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:34.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:34.280" level="INFO">${output} = 542b768bb58baf8d35e44929493e8354</msg>
<status status="PASS" starttime="20230309 17:55:34.255" endtime="20230309 17:55:34.280"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:34.282" level="INFO">542b768bb58baf8d35e44929493e8354</msg>
<status status="PASS" starttime="20230309 17:55:34.281" endtime="20230309 17:55:34.282"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:34.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:34.282" endtime="20230309 17:55:34.283"/>
</kw>
<status status="PASS" starttime="20230309 17:55:34.254" endtime="20230309 17:55:34.284"/>
</kw>
<msg timestamp="20230309 17:55:34.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:55:34.254" endtime="20230309 17:55:34.284"/>
</kw>
<msg timestamp="20230309 17:55:34.285" level="INFO">${checksumbefore} = 542b768bb58baf8d35e44929493e8354</msg>
<status status="PASS" starttime="20230309 17:55:34.253" endtime="20230309 17:55:34.285"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:34.291" level="INFO">Running command 'md5sum /tmp/ozone-test-3450831095-multipartKey1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:34.313" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:34.313" level="INFO">${output} = 542b768bb58baf8d35e44929493e8354</msg>
<status status="PASS" starttime="20230309 17:55:34.288" endtime="20230309 17:55:34.313"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:34.315" level="INFO">542b768bb58baf8d35e44929493e8354</msg>
<status status="PASS" starttime="20230309 17:55:34.314" endtime="20230309 17:55:34.315"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:34.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:34.316" endtime="20230309 17:55:34.316"/>
</kw>
<status status="PASS" starttime="20230309 17:55:34.287" endtime="20230309 17:55:34.317"/>
</kw>
<msg timestamp="20230309 17:55:34.317" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:55:34.286" endtime="20230309 17:55:34.318"/>
</kw>
<msg timestamp="20230309 17:55:34.318" level="INFO">${checksumafter} = 542b768bb58baf8d35e44929493e8354</msg>
<status status="PASS" starttime="20230309 17:55:34.285" endtime="20230309 17:55:34.318"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 17:55:34.319" endtime="20230309 17:55:34.320"/>
</kw>
<status status="PASS" starttime="20230309 17:55:34.252" endtime="20230309 17:55:34.320"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:55:27.337" endtime="20230309 17:55:34.321"/>
</test>
<test id="s1-s6-s7-t4" name="Test Multipart Upload Complete Entity too small" line="118">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:55:34.333" level="INFO">${randStr} = 4301203660</msg>
<status status="PASS" starttime="20230309 17:55:34.332" endtime="20230309 17:55:34.333"/>
</kw>
<msg timestamp="20230309 17:55:34.333" level="INFO">${random} = ozone-test-4301203660</msg>
<status status="PASS" starttime="20230309 17:55:34.331" endtime="20230309 17:55:34.334"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:55:34.335" level="INFO">${PREFIX} = ozone-test-4301203660</msg>
<status status="PASS" starttime="20230309 17:55:34.334" endtime="20230309 17:55:34.335"/>
</kw>
<status status="PASS" starttime="20230309 17:55:34.330" endtime="20230309 17:55:34.335"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:34.348" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key ozone-test-4301203660/multipartKey2 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:35.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:35.495" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-4301203660/multipartKey2",
    "UploadId": "3d96d434-a5a4-4de7-8091-1ba28e5bf300-109994608909090961"
}</msg>
<status status="PASS" starttime="20230309 17:55:34.342" endtime="20230309 17:55:35.495"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:35.498" level="INFO">{
    "Bucket": "link",
    "Key": "ozone-test-4301203660/multipartKey2",
    "UploadId": "3d96d434-a5a4-4de7-8091-1ba28e5bf300-109994608909090961"
}</msg>
<status status="PASS" starttime="20230309 17:55:35.496" endtime="20230309 17:55:35.498"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:35.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:35.499" endtime="20230309 17:55:35.501"/>
</kw>
<status status="PASS" starttime="20230309 17:55:34.340" endtime="20230309 17:55:35.503"/>
</kw>
<msg timestamp="20230309 17:55:35.503" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:55:34.339" endtime="20230309 17:55:35.504"/>
</kw>
<msg timestamp="20230309 17:55:35.506" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-4301203660/multipartKey2",
    "UploadId": "3d96d434-a5a4-4de7-8091-1ba28e5bf300-109994608909090961"
}</msg>
<status status="PASS" starttime="20230309 17:55:34.337" endtime="20230309 17:55:35.506"/>
</kw>
<msg timestamp="20230309 17:55:35.509" level="INFO">${result} = {
    "Bucket": "link",
    "Key": "ozone-test-4301203660/multipartKey2",
    "UploadId": "3d96d434-a5a4-4de7-8091-1ba28e5bf300-109994608909090961"
}</msg>
<status status="PASS" starttime="20230309 17:55:34.335" endtime="20230309 17:55:35.509"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:35.520" level="INFO">Running command 'echo '{
    "Bucket": "link",
    "Key": "ozone-test-4301203660/multipartKey2",
    "UploadId": "3d96d434-a5a4-4de7-8091-1ba28e5bf300-109994608909090961"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:35.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:35.617" level="INFO">${output} = 3d96d434-a5a4-4de7-8091-1ba28e5bf300-109994608909090961</msg>
<status status="PASS" starttime="20230309 17:55:35.513" endtime="20230309 17:55:35.617"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:35.620" level="INFO">3d96d434-a5a4-4de7-8091-1ba28e5bf300-109994608909090961</msg>
<status status="PASS" starttime="20230309 17:55:35.618" endtime="20230309 17:55:35.621"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:35.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:35.621" endtime="20230309 17:55:35.622"/>
</kw>
<msg timestamp="20230309 17:55:35.623" level="INFO">${uploadID} = 3d96d434-a5a4-4de7-8091-1ba28e5bf300-109994608909090961</msg>
<status status="PASS" starttime="20230309 17:55:35.509" endtime="20230309 17:55:35.623"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:55:35.624" endtime="20230309 17:55:35.624"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:55:35.624" endtime="20230309 17:55:35.625"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:55:35.625" endtime="20230309 17:55:35.626"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part1" &gt; /tmp/part1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:35.632" level="INFO">Running command 'echo "Part1" &gt; /tmp/part1'.</msg>
<msg timestamp="20230309 17:55:35.637" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:35.637" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:55:35.629" endtime="20230309 17:55:35.637"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:35.639" level="INFO"/>
<status status="PASS" starttime="20230309 17:55:35.638" endtime="20230309 17:55:35.639"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:35.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:35.639" endtime="20230309 17:55:35.641"/>
</kw>
<status status="PASS" starttime="20230309 17:55:35.628" endtime="20230309 17:55:35.641"/>
</kw>
<msg timestamp="20230309 17:55:35.641" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:55:35.627" endtime="20230309 17:55:35.642"/>
</kw>
<status status="PASS" starttime="20230309 17:55:35.626" endtime="20230309 17:55:35.642"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey2 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:35.651" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key ozone-test-4301203660/multipartKey2 --part-number 1 --body /tmp/part1 --upload-id 3d96d434-a5a4-4de7-8091-1ba28e5bf300-109994608909090961 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:36.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:36.697" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-4301203660/multipartKey2-3d96d434-a5a4-4de7-8091-1ba28e5bf300-109994608909090961-1"
}</msg>
<status status="PASS" starttime="20230309 17:55:35.647" endtime="20230309 17:55:36.697"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:36.698" level="INFO">{
    "ETag": "/legacy/source-bucket/ozone-test-4301203660/multipartKey2-3d96d434-a5a4-4de7-8091-1ba28e5bf300-109994608909090961-1"
}</msg>
<status status="PASS" starttime="20230309 17:55:36.697" endtime="20230309 17:55:36.699"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:36.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:36.699" endtime="20230309 17:55:36.700"/>
</kw>
<status status="PASS" starttime="20230309 17:55:35.646" endtime="20230309 17:55:36.700"/>
</kw>
<msg timestamp="20230309 17:55:36.700" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:55:35.645" endtime="20230309 17:55:36.700"/>
</kw>
<msg timestamp="20230309 17:55:36.701" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-4301203660/multipartKey2-3d96d434-a5a4-4de7-8091-1ba28e5bf300-109994608909090961-1"
}</msg>
<status status="PASS" starttime="20230309 17:55:35.644" endtime="20230309 17:55:36.701"/>
</kw>
<msg timestamp="20230309 17:55:36.701" level="INFO">${result} = {
    "ETag": "/legacy/source-bucket/ozone-test-4301203660/multipartKey2-3d96d434-a5a4-4de7-8091-1ba28e5bf300-109994608909090961-1"
}</msg>
<status status="PASS" starttime="20230309 17:55:35.642" endtime="20230309 17:55:36.702"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:36.707" level="INFO">Running command 'echo '{
    "ETag": "/legacy/source-bucket/ozone-test-4301203660/multipartKey2-3d96d434-a5a4-4de7-8091-1ba28e5bf300-109994608909090961-1"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:36.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:36.782" level="INFO">${output} = /legacy/source-bucket/ozone-test-4301203660/multipartKey2-3d96d434-a5a4-4de7-8091-1ba28e5bf300-109994608909090961-1</msg>
<status status="PASS" starttime="20230309 17:55:36.703" endtime="20230309 17:55:36.782"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:36.795" level="INFO">/legacy/source-bucket/ozone-test-4301203660/multipartKey2-3d96d434-a5a4-4de7-8091-1ba28e5bf300-109994608909090961-1</msg>
<status status="PASS" starttime="20230309 17:55:36.793" endtime="20230309 17:55:36.795"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:36.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:36.795" endtime="20230309 17:55:36.796"/>
</kw>
<msg timestamp="20230309 17:55:36.796" level="INFO">${eTag1} = /legacy/source-bucket/ozone-test-4301203660/multipartKey2-3d96d434-a5a4-4de7-8091-1ba28e5bf300-109994608909090961-1</msg>
<status status="PASS" starttime="20230309 17:55:36.702" endtime="20230309 17:55:36.797"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:55:36.798" endtime="20230309 17:55:36.798"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part2" &gt; /tmp/part2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:36.808" level="INFO">Running command 'echo "Part2" &gt; /tmp/part2'.</msg>
<msg timestamp="20230309 17:55:36.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:36.811" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:55:36.803" endtime="20230309 17:55:36.811"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:36.814" level="INFO"/>
<status status="PASS" starttime="20230309 17:55:36.811" endtime="20230309 17:55:36.814"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:36.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:36.815" endtime="20230309 17:55:36.815"/>
</kw>
<status status="PASS" starttime="20230309 17:55:36.801" endtime="20230309 17:55:36.816"/>
</kw>
<msg timestamp="20230309 17:55:36.816" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:55:36.800" endtime="20230309 17:55:36.817"/>
</kw>
<status status="PASS" starttime="20230309 17:55:36.799" endtime="20230309 17:55:36.817"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey2 --part-number 2 --body /tmp/part2 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:36.827" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key ozone-test-4301203660/multipartKey2 --part-number 2 --body /tmp/part2 --upload-id 3d96d434-a5a4-4de7-8091-1ba28e5bf300-109994608909090961 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:37.935" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:37.935" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-4301203660/multipartKey2-3d96d434-a5a4-4de7-8091-1ba28e5bf300-109994608909090961-2"
}</msg>
<status status="PASS" starttime="20230309 17:55:36.823" endtime="20230309 17:55:37.935"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:37.937" level="INFO">{
    "ETag": "/legacy/source-bucket/ozone-test-4301203660/multipartKey2-3d96d434-a5a4-4de7-8091-1ba28e5bf300-109994608909090961-2"
}</msg>
<status status="PASS" starttime="20230309 17:55:37.936" endtime="20230309 17:55:37.937"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:37.937" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:37.937" endtime="20230309 17:55:37.938"/>
</kw>
<status status="PASS" starttime="20230309 17:55:36.822" endtime="20230309 17:55:37.938"/>
</kw>
<msg timestamp="20230309 17:55:37.938" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:55:36.822" endtime="20230309 17:55:37.939"/>
</kw>
<msg timestamp="20230309 17:55:37.939" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-4301203660/multipartKey2-3d96d434-a5a4-4de7-8091-1ba28e5bf300-109994608909090961-2"
}</msg>
<status status="PASS" starttime="20230309 17:55:36.820" endtime="20230309 17:55:37.939"/>
</kw>
<msg timestamp="20230309 17:55:37.940" level="INFO">${result} = {
    "ETag": "/legacy/source-bucket/ozone-test-4301203660/multipartKey2-3d96d434-a5a4-4de7-8091-1ba28e5bf300-109994608909090961-2"
}</msg>
<status status="PASS" starttime="20230309 17:55:36.817" endtime="20230309 17:55:37.940"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:37.946" level="INFO">Running command 'echo '{
    "ETag": "/legacy/source-bucket/ozone-test-4301203660/multipartKey2-3d96d434-a5a4-4de7-8091-1ba28e5bf300-109994608909090961-2"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:38.025" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:38.025" level="INFO">${output} = /legacy/source-bucket/ozone-test-4301203660/multipartKey2-3d96d434-a5a4-4de7-8091-1ba28e5bf300-109994608909090961-2</msg>
<status status="PASS" starttime="20230309 17:55:37.942" endtime="20230309 17:55:38.025"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:38.026" level="INFO">/legacy/source-bucket/ozone-test-4301203660/multipartKey2-3d96d434-a5a4-4de7-8091-1ba28e5bf300-109994608909090961-2</msg>
<status status="PASS" starttime="20230309 17:55:38.025" endtime="20230309 17:55:38.026"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:38.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:38.027" endtime="20230309 17:55:38.027"/>
</kw>
<msg timestamp="20230309 17:55:38.028" level="INFO">${eTag2} = /legacy/source-bucket/ozone-test-4301203660/multipartKey2-3d96d434-a5a4-4de7-8091-1ba28e5bf300-109994608909090961-2</msg>
<status status="PASS" starttime="20230309 17:55:37.941" endtime="20230309 17:55:38.028"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:55:38.028" endtime="20230309 17:55:38.029"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey2 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:38.038" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 3d96d434-a5a4-4de7-8091-1ba28e5bf300-109994608909090961 --bucket link --key ozone-test-4301203660/multipartKey2 --multipart-upload 'Parts=[{ETag=/legacy/source-bucket/ozone-test-4301203660/multipartKey2-3d96d434-a5a4-4de7-8091-1ba28e5bf300-109994608909090961-1,PartNumber=1},{ETag=/legacy/source-bucket/ozone-test-4301203660/multipartKey2-3d96d434-a5a4-4de7-8091-1ba28e5bf300-109994608909090961-2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:39.144" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:55:39.144" level="INFO">${output} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20230309 17:55:38.033" endtime="20230309 17:55:39.144"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:39.146" level="INFO">
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, except the last part.</msg>
<status status="PASS" starttime="20230309 17:55:39.145" endtime="20230309 17:55:39.146"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:39.147" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:39.146" endtime="20230309 17:55:39.147"/>
</kw>
<msg timestamp="20230309 17:55:39.148" level="INFO">${output} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20230309 17:55:38.030" endtime="20230309 17:55:39.148"/>
</kw>
<msg timestamp="20230309 17:55:39.149" level="INFO">${result} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20230309 17:55:38.029" endtime="20230309 17:55:39.149"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>EntityTooSmall</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:55:39.149" endtime="20230309 17:55:39.149"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:55:34.323" endtime="20230309 17:55:39.150"/>
</test>
<test id="s1-s6-s7-t5" name="Test Multipart Upload Complete Invalid part errors and complete mpu with few parts" line="141">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:55:39.155" level="INFO">${randStr} = 1844042255</msg>
<status status="PASS" starttime="20230309 17:55:39.154" endtime="20230309 17:55:39.155"/>
</kw>
<msg timestamp="20230309 17:55:39.156" level="INFO">${random} = ozone-test-1844042255</msg>
<status status="PASS" starttime="20230309 17:55:39.154" endtime="20230309 17:55:39.156"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:55:39.157" level="INFO">${PREFIX} = ozone-test-1844042255</msg>
<status status="PASS" starttime="20230309 17:55:39.156" endtime="20230309 17:55:39.157"/>
</kw>
<status status="PASS" starttime="20230309 17:55:39.152" endtime="20230309 17:55:39.157"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey3</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:39.167" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key ozone-test-1844042255/multipartKey3 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:40.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:40.307" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-1844042255/multipartKey3",
    "UploadId": "59955713-44d4-4f7c-878c-0a2d71b34caa-109994609226023060"
}</msg>
<status status="PASS" starttime="20230309 17:55:39.160" endtime="20230309 17:55:40.307"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:40.309" level="INFO">{
    "Bucket": "link",
    "Key": "ozone-test-1844042255/multipartKey3",
    "UploadId": "59955713-44d4-4f7c-878c-0a2d71b34caa-109994609226023060"
}</msg>
<status status="PASS" starttime="20230309 17:55:40.308" endtime="20230309 17:55:40.310"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:40.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:40.310" endtime="20230309 17:55:40.311"/>
</kw>
<status status="PASS" starttime="20230309 17:55:39.160" endtime="20230309 17:55:40.312"/>
</kw>
<msg timestamp="20230309 17:55:40.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:55:39.159" endtime="20230309 17:55:40.312"/>
</kw>
<msg timestamp="20230309 17:55:40.313" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-1844042255/multipartKey3",
    "UploadId": "59955713-44d4-4f7c-878c-0a2d71b34caa-109994609226023060"
}</msg>
<status status="PASS" starttime="20230309 17:55:39.158" endtime="20230309 17:55:40.313"/>
</kw>
<msg timestamp="20230309 17:55:40.314" level="INFO">${result} = {
    "Bucket": "link",
    "Key": "ozone-test-1844042255/multipartKey3",
    "UploadId": "59955713-44d4-4f7c-878c-0a2d71b34caa-109994609226023060"
}</msg>
<status status="PASS" starttime="20230309 17:55:39.157" endtime="20230309 17:55:40.314"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:40.319" level="INFO">Running command 'echo '{
    "Bucket": "link",
    "Key": "ozone-test-1844042255/multipartKey3",
    "UploadId": "59955713-44d4-4f7c-878c-0a2d71b34caa-109994609226023060"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:40.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:40.384" level="INFO">${output} = 59955713-44d4-4f7c-878c-0a2d71b34caa-109994609226023060</msg>
<status status="PASS" starttime="20230309 17:55:40.315" endtime="20230309 17:55:40.384"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:40.386" level="INFO">59955713-44d4-4f7c-878c-0a2d71b34caa-109994609226023060</msg>
<status status="PASS" starttime="20230309 17:55:40.385" endtime="20230309 17:55:40.387"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:40.388" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:40.387" endtime="20230309 17:55:40.388"/>
</kw>
<msg timestamp="20230309 17:55:40.389" level="INFO">${uploadID} = 59955713-44d4-4f7c-878c-0a2d71b34caa-109994609226023060</msg>
<status status="PASS" starttime="20230309 17:55:40.314" endtime="20230309 17:55:40.389"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:55:40.389" endtime="20230309 17:55:40.390"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:55:40.390" endtime="20230309 17:55:40.391"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:55:40.392" endtime="20230309 17:55:40.393"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:40.399" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 59955713-44d4-4f7c-878c-0a2d71b34caa-109994609226023060 --bucket link --key ozone-test-1844042255/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:41.480" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:55:41.480" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20230309 17:55:40.395" endtime="20230309 17:55:41.480"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:41.482" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20230309 17:55:41.481" endtime="20230309 17:55:41.482"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:41.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:41.484" endtime="20230309 17:55:41.487"/>
</kw>
<msg timestamp="20230309 17:55:41.487" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20230309 17:55:40.394" endtime="20230309 17:55:41.487"/>
</kw>
<msg timestamp="20230309 17:55:41.488" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20230309 17:55:40.393" endtime="20230309 17:55:41.488"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:55:41.488" endtime="20230309 17:55:41.489"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=2},{ETag=etag2,PartNumber=1}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:41.497" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 59955713-44d4-4f7c-878c-0a2d71b34caa-109994609226023060 --bucket link --key ozone-test-1844042255/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=2},{ETag=etag2,PartNumber=1}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:42.527" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:55:42.527" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20230309 17:55:41.492" endtime="20230309 17:55:42.527"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:42.529" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20230309 17:55:42.527" endtime="20230309 17:55:42.529"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:42.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:42.529" endtime="20230309 17:55:42.531"/>
</kw>
<msg timestamp="20230309 17:55:42.533" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20230309 17:55:41.491" endtime="20230309 17:55:42.533"/>
</kw>
<msg timestamp="20230309 17:55:42.536" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20230309 17:55:41.489" endtime="20230309 17:55:42.536"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:55:42.536" endtime="20230309 17:55:42.537"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:42.545" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:42.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:42.581" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:55:42.542" endtime="20230309 17:55:42.581"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:42.584" level="INFO"/>
<status status="PASS" starttime="20230309 17:55:42.583" endtime="20230309 17:55:42.584"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:42.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:42.585" endtime="20230309 17:55:42.586"/>
</kw>
<status status="PASS" starttime="20230309 17:55:42.541" endtime="20230309 17:55:42.588"/>
</kw>
<msg timestamp="20230309 17:55:42.588" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:55:42.540" endtime="20230309 17:55:42.589"/>
</kw>
<status status="PASS" starttime="20230309 17:55:42.539" endtime="20230309 17:55:42.589"/>
</kw>
<status status="PASS" starttime="20230309 17:55:42.538" endtime="20230309 17:55:42.590"/>
</kw>
<status status="PASS" starttime="20230309 17:55:42.538" endtime="20230309 17:55:42.590"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:42.597" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key ozone-test-1844042255/multipartKey3 --part-number 1 --body /tmp/part1 --upload-id 59955713-44d4-4f7c-878c-0a2d71b34caa-109994609226023060 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:44.026" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:44.026" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-1844042255/multipartKey3-59955713-44d4-4f7c-878c-0a2d71b34caa-109994609226023060-1"
}</msg>
<status status="PASS" starttime="20230309 17:55:42.593" endtime="20230309 17:55:44.026"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:44.028" level="INFO">{
    "ETag": "/legacy/source-bucket/ozone-test-1844042255/multipartKey3-59955713-44d4-4f7c-878c-0a2d71b34caa-109994609226023060-1"
}</msg>
<status status="PASS" starttime="20230309 17:55:44.027" endtime="20230309 17:55:44.028"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:44.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:44.028" endtime="20230309 17:55:44.029"/>
</kw>
<status status="PASS" starttime="20230309 17:55:42.592" endtime="20230309 17:55:44.030"/>
</kw>
<msg timestamp="20230309 17:55:44.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:55:42.592" endtime="20230309 17:55:44.031"/>
</kw>
<msg timestamp="20230309 17:55:44.031" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-1844042255/multipartKey3-59955713-44d4-4f7c-878c-0a2d71b34caa-109994609226023060-1"
}</msg>
<status status="PASS" starttime="20230309 17:55:42.591" endtime="20230309 17:55:44.031"/>
</kw>
<msg timestamp="20230309 17:55:44.033" level="INFO">${result} = {
    "ETag": "/legacy/source-bucket/ozone-test-1844042255/multipartKey3-59955713-44d4-4f7c-878c-0a2d71b34caa-109994609226023060-1"
}</msg>
<status status="PASS" starttime="20230309 17:55:42.590" endtime="20230309 17:55:44.033"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:44.038" level="INFO">Running command 'echo '{
    "ETag": "/legacy/source-bucket/ozone-test-1844042255/multipartKey3-59955713-44d4-4f7c-878c-0a2d71b34caa-109994609226023060-1"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:44.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:44.109" level="INFO">${output} = /legacy/source-bucket/ozone-test-1844042255/multipartKey3-59955713-44d4-4f7c-878c-0a2d71b34caa-109994609226023060-1</msg>
<status status="PASS" starttime="20230309 17:55:44.034" endtime="20230309 17:55:44.110"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:44.112" level="INFO">/legacy/source-bucket/ozone-test-1844042255/multipartKey3-59955713-44d4-4f7c-878c-0a2d71b34caa-109994609226023060-1</msg>
<status status="PASS" starttime="20230309 17:55:44.110" endtime="20230309 17:55:44.112"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:44.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:44.113" endtime="20230309 17:55:44.113"/>
</kw>
<msg timestamp="20230309 17:55:44.114" level="INFO">${eTag1} = /legacy/source-bucket/ozone-test-1844042255/multipartKey3-59955713-44d4-4f7c-878c-0a2d71b34caa-109994609226023060-1</msg>
<status status="PASS" starttime="20230309 17:55:44.033" endtime="20230309 17:55:44.114"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:55:44.115" endtime="20230309 17:55:44.115"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 2 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:44.123" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key ozone-test-1844042255/multipartKey3 --part-number 2 --body /tmp/part1 --upload-id 59955713-44d4-4f7c-878c-0a2d71b34caa-109994609226023060 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:45.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:45.537" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-1844042255/multipartKey3-59955713-44d4-4f7c-878c-0a2d71b34caa-109994609226023060-2"
}</msg>
<status status="PASS" starttime="20230309 17:55:44.120" endtime="20230309 17:55:45.537"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:45.539" level="INFO">{
    "ETag": "/legacy/source-bucket/ozone-test-1844042255/multipartKey3-59955713-44d4-4f7c-878c-0a2d71b34caa-109994609226023060-2"
}</msg>
<status status="PASS" starttime="20230309 17:55:45.538" endtime="20230309 17:55:45.539"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:45.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:45.539" endtime="20230309 17:55:45.540"/>
</kw>
<status status="PASS" starttime="20230309 17:55:44.119" endtime="20230309 17:55:45.540"/>
</kw>
<msg timestamp="20230309 17:55:45.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:55:44.118" endtime="20230309 17:55:45.541"/>
</kw>
<msg timestamp="20230309 17:55:45.541" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-1844042255/multipartKey3-59955713-44d4-4f7c-878c-0a2d71b34caa-109994609226023060-2"
}</msg>
<status status="PASS" starttime="20230309 17:55:44.117" endtime="20230309 17:55:45.541"/>
</kw>
<msg timestamp="20230309 17:55:45.542" level="INFO">${result} = {
    "ETag": "/legacy/source-bucket/ozone-test-1844042255/multipartKey3-59955713-44d4-4f7c-878c-0a2d71b34caa-109994609226023060-2"
}</msg>
<status status="PASS" starttime="20230309 17:55:44.116" endtime="20230309 17:55:45.542"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:45.547" level="INFO">Running command 'echo '{
    "ETag": "/legacy/source-bucket/ozone-test-1844042255/multipartKey3-59955713-44d4-4f7c-878c-0a2d71b34caa-109994609226023060-2"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:45.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:45.610" level="INFO">${output} = /legacy/source-bucket/ozone-test-1844042255/multipartKey3-59955713-44d4-4f7c-878c-0a2d71b34caa-109994609226023060-2</msg>
<status status="PASS" starttime="20230309 17:55:45.544" endtime="20230309 17:55:45.610"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:45.612" level="INFO">/legacy/source-bucket/ozone-test-1844042255/multipartKey3-59955713-44d4-4f7c-878c-0a2d71b34caa-109994609226023060-2</msg>
<status status="PASS" starttime="20230309 17:55:45.611" endtime="20230309 17:55:45.612"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:45.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:45.612" endtime="20230309 17:55:45.613"/>
</kw>
<msg timestamp="20230309 17:55:45.614" level="INFO">${eTag2} = /legacy/source-bucket/ozone-test-1844042255/multipartKey3-59955713-44d4-4f7c-878c-0a2d71b34caa-109994609226023060-2</msg>
<status status="PASS" starttime="20230309 17:55:45.542" endtime="20230309 17:55:45.614"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:55:45.614" endtime="20230309 17:55:45.615"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part3" &gt; /tmp/part3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:45.621" level="INFO">Running command 'echo "Part3" &gt; /tmp/part3'.</msg>
<msg timestamp="20230309 17:55:45.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:45.625" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:55:45.618" endtime="20230309 17:55:45.625"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:45.627" level="INFO"/>
<status status="PASS" starttime="20230309 17:55:45.626" endtime="20230309 17:55:45.627"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:45.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:45.627" endtime="20230309 17:55:45.629"/>
</kw>
<status status="PASS" starttime="20230309 17:55:45.617" endtime="20230309 17:55:45.629"/>
</kw>
<msg timestamp="20230309 17:55:45.629" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:55:45.617" endtime="20230309 17:55:45.630"/>
</kw>
<status status="PASS" starttime="20230309 17:55:45.616" endtime="20230309 17:55:45.631"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 3 --body /tmp/part3 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:45.642" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key ozone-test-1844042255/multipartKey3 --part-number 3 --body /tmp/part3 --upload-id 59955713-44d4-4f7c-878c-0a2d71b34caa-109994609226023060 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:46.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:46.708" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-1844042255/multipartKey3-59955713-44d4-4f7c-878c-0a2d71b34caa-109994609226023060-3"
}</msg>
<status status="PASS" starttime="20230309 17:55:45.636" endtime="20230309 17:55:46.708"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:46.711" level="INFO">{
    "ETag": "/legacy/source-bucket/ozone-test-1844042255/multipartKey3-59955713-44d4-4f7c-878c-0a2d71b34caa-109994609226023060-3"
}</msg>
<status status="PASS" starttime="20230309 17:55:46.709" endtime="20230309 17:55:46.712"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:46.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:46.712" endtime="20230309 17:55:46.713"/>
</kw>
<status status="PASS" starttime="20230309 17:55:45.635" endtime="20230309 17:55:46.714"/>
</kw>
<msg timestamp="20230309 17:55:46.714" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:55:45.634" endtime="20230309 17:55:46.715"/>
</kw>
<msg timestamp="20230309 17:55:46.715" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-1844042255/multipartKey3-59955713-44d4-4f7c-878c-0a2d71b34caa-109994609226023060-3"
}</msg>
<status status="PASS" starttime="20230309 17:55:45.633" endtime="20230309 17:55:46.715"/>
</kw>
<msg timestamp="20230309 17:55:46.716" level="INFO">${result} = {
    "ETag": "/legacy/source-bucket/ozone-test-1844042255/multipartKey3-59955713-44d4-4f7c-878c-0a2d71b34caa-109994609226023060-3"
}</msg>
<status status="PASS" starttime="20230309 17:55:45.631" endtime="20230309 17:55:46.716"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag3}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:46.723" level="INFO">Running command 'echo '{
    "ETag": "/legacy/source-bucket/ozone-test-1844042255/multipartKey3-59955713-44d4-4f7c-878c-0a2d71b34caa-109994609226023060-3"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:46.793" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:46.793" level="INFO">${output} = /legacy/source-bucket/ozone-test-1844042255/multipartKey3-59955713-44d4-4f7c-878c-0a2d71b34caa-109994609226023060-3</msg>
<status status="PASS" starttime="20230309 17:55:46.717" endtime="20230309 17:55:46.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:46.796" level="INFO">/legacy/source-bucket/ozone-test-1844042255/multipartKey3-59955713-44d4-4f7c-878c-0a2d71b34caa-109994609226023060-3</msg>
<status status="PASS" starttime="20230309 17:55:46.794" endtime="20230309 17:55:46.796"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:46.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:46.796" endtime="20230309 17:55:46.797"/>
</kw>
<msg timestamp="20230309 17:55:46.798" level="INFO">${eTag3} = /legacy/source-bucket/ozone-test-1844042255/multipartKey3-59955713-44d4-4f7c-878c-0a2d71b34caa-109994609226023060-3</msg>
<status status="PASS" starttime="20230309 17:55:46.716" endtime="20230309 17:55:46.798"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:55:46.798" endtime="20230309 17:55:46.799"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:46.807" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 59955713-44d4-4f7c-878c-0a2d71b34caa-109994609226023060 --bucket link --key ozone-test-1844042255/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:47.845" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:55:47.845" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20230309 17:55:46.802" endtime="20230309 17:55:47.845"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:47.847" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20230309 17:55:47.846" endtime="20230309 17:55:47.849"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:47.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:47.849" endtime="20230309 17:55:47.850"/>
</kw>
<msg timestamp="20230309 17:55:47.850" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20230309 17:55:46.801" endtime="20230309 17:55:47.851"/>
</kw>
<msg timestamp="20230309 17:55:47.852" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20230309 17:55:46.799" endtime="20230309 17:55:47.852"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:55:47.853" endtime="20230309 17:55:47.853"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:47.866" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 59955713-44d4-4f7c-878c-0a2d71b34caa-109994609226023060 --bucket link --key ozone-test-1844042255/multipartKey3 --multipart-upload 'Parts=[{ETag=/legacy/source-bucket/ozone-test-1844042255/multipartKey3-59955713-44d4-4f7c-878c-0a2d71b34caa-109994609226023060-1,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:48.810" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:55:48.810" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20230309 17:55:47.860" endtime="20230309 17:55:48.810"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:48.812" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20230309 17:55:48.811" endtime="20230309 17:55:48.812"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:48.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:48.812" endtime="20230309 17:55:48.814"/>
</kw>
<msg timestamp="20230309 17:55:48.815" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20230309 17:55:47.856" endtime="20230309 17:55:48.815"/>
</kw>
<msg timestamp="20230309 17:55:48.816" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20230309 17:55:47.853" endtime="20230309 17:55:48.816"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:55:48.816" endtime="20230309 17:55:48.816"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=4},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:48.822" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 59955713-44d4-4f7c-878c-0a2d71b34caa-109994609226023060 --bucket link --key ozone-test-1844042255/multipartKey3 --multipart-upload 'Parts=[{ETag=/legacy/source-bucket/ozone-test-1844042255/multipartKey3-59955713-44d4-4f7c-878c-0a2d71b34caa-109994609226023060-1,PartNumber=4},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:49.834" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:55:49.834" level="INFO">${output} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20230309 17:55:48.819" endtime="20230309 17:55:49.834"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:49.836" level="INFO">
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20230309 17:55:49.835" endtime="20230309 17:55:49.837"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:49.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:49.837" endtime="20230309 17:55:49.838"/>
</kw>
<msg timestamp="20230309 17:55:49.839" level="INFO">${output} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20230309 17:55:48.818" endtime="20230309 17:55:49.839"/>
</kw>
<msg timestamp="20230309 17:55:49.840" level="INFO">${result} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20230309 17:55:48.817" endtime="20230309 17:55:49.840"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPartOrder</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:55:49.840" endtime="20230309 17:55:49.841"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag3},PartNumber=3}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:49.854" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 59955713-44d4-4f7c-878c-0a2d71b34caa-109994609226023060 --bucket link --key ozone-test-1844042255/multipartKey3 --multipart-upload 'Parts=[{ETag=/legacy/source-bucket/ozone-test-1844042255/multipartKey3-59955713-44d4-4f7c-878c-0a2d71b34caa-109994609226023060-1,PartNumber=1},{ETag=/legacy/source-bucket/ozone-test-1844042255/multipartKey3-59955713-44d4-4f7c-878c-0a2d71b34caa-109994609226023060-3,PartNumber=3}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:50.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:50.806" level="INFO">${output} = {
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-1844042255/multipartKey3",
    "ETag": "e3c5b44c8040097718b757703eb64e7550e5d294a503618a10b3fcec4c2e943d"
}</msg>
<status status="PASS" starttime="20230309 17:55:49.847" endtime="20230309 17:55:50.806"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:50.809" level="INFO">{
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-1844042255/multipartKey3",
    "ETag": "e3c5b44c8040097718b757703eb64e7550e5d294a503618a10b3fcec4c2e943d"
}</msg>
<status status="PASS" starttime="20230309 17:55:50.808" endtime="20230309 17:55:50.810"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:50.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:50.810" endtime="20230309 17:55:50.811"/>
</kw>
<status status="PASS" starttime="20230309 17:55:49.845" endtime="20230309 17:55:50.811"/>
</kw>
<msg timestamp="20230309 17:55:50.811" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:55:49.845" endtime="20230309 17:55:50.812"/>
</kw>
<msg timestamp="20230309 17:55:50.812" level="INFO">${output} = {
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-1844042255/multipartKey3",
    "ETag": "e3c5b44c8040097718b757703eb64e7550e5d294a503618a10b3fcec4c2e943d"
}</msg>
<status status="PASS" starttime="20230309 17:55:49.844" endtime="20230309 17:55:50.812"/>
</kw>
<msg timestamp="20230309 17:55:50.813" level="INFO">${result} = {
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-1844042255/multipartKey3",
    "ETag": "e3c5b44c8040097718b757703eb64e7550e5d294a503618a10b3fcec4c2e943d"
}</msg>
<status status="PASS" starttime="20230309 17:55:49.841" endtime="20230309 17:55:50.813"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:55:50.813" endtime="20230309 17:55:50.814"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:55:50.814" endtime="20230309 17:55:50.815"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:55:50.815" endtime="20230309 17:55:50.816"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 /tmp/${PREFIX}-multipartKey3.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:50.823" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-1844042255/multipartKey3 /tmp/ozone-test-1844042255-multipartKey3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:52.283" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:52.283" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:55:50 GMT",
    "ContentLength": 5242886,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Ex...</msg>
<status status="PASS" starttime="20230309 17:55:50.819" endtime="20230309 17:55:52.283"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:52.284" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:55:50 GMT",
    "ContentLength": 5242886,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 09 Mar 2023 17:55:51 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230309 17:55:52.283" endtime="20230309 17:55:52.285"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:52.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:52.285" endtime="20230309 17:55:52.286"/>
</kw>
<status status="PASS" starttime="20230309 17:55:50.818" endtime="20230309 17:55:52.286"/>
</kw>
<msg timestamp="20230309 17:55:52.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:55:50.817" endtime="20230309 17:55:52.287"/>
</kw>
<msg timestamp="20230309 17:55:52.288" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:55:50 GMT",
    "ContentLength": 5242886,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Ex...</msg>
<status status="PASS" starttime="20230309 17:55:50.817" endtime="20230309 17:55:52.288"/>
</kw>
<msg timestamp="20230309 17:55:52.289" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:55:50 GMT",
    "ContentLength": 5242886,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Ex...</msg>
<status status="PASS" starttime="20230309 17:55:50.816" endtime="20230309 17:55:52.289"/>
</kw>
<kw name="Execute" library="os">
<arg>cat /tmp/part1 /tmp/part3 &gt; /tmp/${PREFIX}-multipartKey3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:52.296" level="INFO">Running command 'cat /tmp/part1 /tmp/part3 &gt; /tmp/ozone-test-1844042255-multipartKey3'.</msg>
<msg timestamp="20230309 17:55:52.308" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:52.309" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:55:52.292" endtime="20230309 17:55:52.310"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:52.311" level="INFO"/>
<status status="PASS" starttime="20230309 17:55:52.310" endtime="20230309 17:55:52.311"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:52.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:52.312" endtime="20230309 17:55:52.313"/>
</kw>
<status status="PASS" starttime="20230309 17:55:52.291" endtime="20230309 17:55:52.314"/>
</kw>
<msg timestamp="20230309 17:55:52.314" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:55:52.290" endtime="20230309 17:55:52.315"/>
</kw>
<status status="PASS" starttime="20230309 17:55:52.289" endtime="20230309 17:55:52.316"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/${PREFIX}-multipartKey3</arg>
<arg>/tmp/${PREFIX}-multipartKey3.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:52.324" level="INFO">Running command 'md5sum /tmp/ozone-test-1844042255-multipartKey3 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:52.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:52.346" level="INFO">${output} = 1ce8b5f967e55c31dd7c370870c6d793</msg>
<status status="PASS" starttime="20230309 17:55:52.320" endtime="20230309 17:55:52.346"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:52.348" level="INFO">1ce8b5f967e55c31dd7c370870c6d793</msg>
<status status="PASS" starttime="20230309 17:55:52.347" endtime="20230309 17:55:52.348"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:52.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:52.348" endtime="20230309 17:55:52.350"/>
</kw>
<status status="PASS" starttime="20230309 17:55:52.319" endtime="20230309 17:55:52.351"/>
</kw>
<msg timestamp="20230309 17:55:52.351" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:55:52.319" endtime="20230309 17:55:52.351"/>
</kw>
<msg timestamp="20230309 17:55:52.352" level="INFO">${checksumbefore} = 1ce8b5f967e55c31dd7c370870c6d793</msg>
<status status="PASS" starttime="20230309 17:55:52.317" endtime="20230309 17:55:52.352"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:52.364" level="INFO">Running command 'md5sum /tmp/ozone-test-1844042255-multipartKey3.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:52.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:52.391" level="INFO">${output} = 1ce8b5f967e55c31dd7c370870c6d793</msg>
<status status="PASS" starttime="20230309 17:55:52.360" endtime="20230309 17:55:52.391"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:52.393" level="INFO">1ce8b5f967e55c31dd7c370870c6d793</msg>
<status status="PASS" starttime="20230309 17:55:52.392" endtime="20230309 17:55:52.394"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:52.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:52.394" endtime="20230309 17:55:52.395"/>
</kw>
<status status="PASS" starttime="20230309 17:55:52.358" endtime="20230309 17:55:52.395"/>
</kw>
<msg timestamp="20230309 17:55:52.395" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:55:52.358" endtime="20230309 17:55:52.396"/>
</kw>
<msg timestamp="20230309 17:55:52.397" level="INFO">${checksumafter} = 1ce8b5f967e55c31dd7c370870c6d793</msg>
<status status="PASS" starttime="20230309 17:55:52.352" endtime="20230309 17:55:52.397"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 17:55:52.397" endtime="20230309 17:55:52.398"/>
</kw>
<status status="PASS" starttime="20230309 17:55:52.316" endtime="20230309 17:55:52.398"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:55:39.151" endtime="20230309 17:55:52.398"/>
</test>
<test id="s1-s6-s7-t6" name="Test abort Multipart upload" line="186">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:55:52.404" level="INFO">${randStr} = 1358160544</msg>
<status status="PASS" starttime="20230309 17:55:52.402" endtime="20230309 17:55:52.404"/>
</kw>
<msg timestamp="20230309 17:55:52.404" level="INFO">${random} = ozone-test-1358160544</msg>
<status status="PASS" starttime="20230309 17:55:52.401" endtime="20230309 17:55:52.404"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:55:52.406" level="INFO">${PREFIX} = ozone-test-1358160544</msg>
<status status="PASS" starttime="20230309 17:55:52.405" endtime="20230309 17:55:52.406"/>
</kw>
<status status="PASS" starttime="20230309 17:55:52.400" endtime="20230309 17:55:52.406"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey4 --storage-class REDUCED_REDUNDANCY</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:52.418" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key ozone-test-1358160544/multipartKey4 --storage-class REDUCED_REDUNDANCY 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:53.361" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:53.361" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-1358160544/multipartKey4",
    "UploadId": "33eb0caa-ed24-46e5-869d-b10d2fde620c-109994610082906264"
}</msg>
<status status="PASS" starttime="20230309 17:55:52.413" endtime="20230309 17:55:53.362"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:53.363" level="INFO">{
    "Bucket": "link",
    "Key": "ozone-test-1358160544/multipartKey4",
    "UploadId": "33eb0caa-ed24-46e5-869d-b10d2fde620c-109994610082906264"
}</msg>
<status status="PASS" starttime="20230309 17:55:53.362" endtime="20230309 17:55:53.364"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:53.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:53.364" endtime="20230309 17:55:53.365"/>
</kw>
<status status="PASS" starttime="20230309 17:55:52.411" endtime="20230309 17:55:53.366"/>
</kw>
<msg timestamp="20230309 17:55:53.366" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:55:52.409" endtime="20230309 17:55:53.367"/>
</kw>
<msg timestamp="20230309 17:55:53.367" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-1358160544/multipartKey4",
    "UploadId": "33eb0caa-ed24-46e5-869d-b10d2fde620c-109994610082906264"
}</msg>
<status status="PASS" starttime="20230309 17:55:52.408" endtime="20230309 17:55:53.367"/>
</kw>
<msg timestamp="20230309 17:55:53.368" level="INFO">${result} = {
    "Bucket": "link",
    "Key": "ozone-test-1358160544/multipartKey4",
    "UploadId": "33eb0caa-ed24-46e5-869d-b10d2fde620c-109994610082906264"
}</msg>
<status status="PASS" starttime="20230309 17:55:52.406" endtime="20230309 17:55:53.368"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:53.372" level="INFO">Running command 'echo '{
    "Bucket": "link",
    "Key": "ozone-test-1358160544/multipartKey4",
    "UploadId": "33eb0caa-ed24-46e5-869d-b10d2fde620c-109994610082906264"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:53.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:53.431" level="INFO">${output} = 33eb0caa-ed24-46e5-869d-b10d2fde620c-109994610082906264</msg>
<status status="PASS" starttime="20230309 17:55:53.369" endtime="20230309 17:55:53.431"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:53.433" level="INFO">33eb0caa-ed24-46e5-869d-b10d2fde620c-109994610082906264</msg>
<status status="PASS" starttime="20230309 17:55:53.432" endtime="20230309 17:55:53.433"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:53.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:53.433" endtime="20230309 17:55:53.434"/>
</kw>
<msg timestamp="20230309 17:55:53.434" level="INFO">${uploadID} = 33eb0caa-ed24-46e5-869d-b10d2fde620c-109994610082906264</msg>
<status status="PASS" starttime="20230309 17:55:53.368" endtime="20230309 17:55:53.435"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:55:53.436" endtime="20230309 17:55:53.436"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:55:53.437" endtime="20230309 17:55:53.438"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:55:53.438" endtime="20230309 17:55:53.439"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey4 --upload-id ${uploadID}</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:53.444" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket link --key ozone-test-1358160544/multipartKey4 --upload-id 33eb0caa-ed24-46e5-869d-b10d2fde620c-109994610082906264 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:54.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:54.377" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:55:53.441" endtime="20230309 17:55:54.377"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:54.379" level="INFO"/>
<status status="PASS" starttime="20230309 17:55:54.377" endtime="20230309 17:55:54.379"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:54.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:54.379" endtime="20230309 17:55:54.380"/>
</kw>
<msg timestamp="20230309 17:55:54.381" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:55:53.440" endtime="20230309 17:55:54.381"/>
</kw>
<msg timestamp="20230309 17:55:54.381" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 17:55:53.439" endtime="20230309 17:55:54.381"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:55:52.399" endtime="20230309 17:55:54.382"/>
</test>
<test id="s1-s6-s7-t7" name="Test abort Multipart upload with invalid uploadId" line="195">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:55:54.388" level="INFO">${randStr} = 0302220845</msg>
<status status="PASS" starttime="20230309 17:55:54.387" endtime="20230309 17:55:54.388"/>
</kw>
<msg timestamp="20230309 17:55:54.388" level="INFO">${random} = ozone-test-0302220845</msg>
<status status="PASS" starttime="20230309 17:55:54.386" endtime="20230309 17:55:54.388"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:55:54.390" level="INFO">${PREFIX} = ozone-test-0302220845</msg>
<status status="PASS" starttime="20230309 17:55:54.389" endtime="20230309 17:55:54.390"/>
</kw>
<status status="PASS" starttime="20230309 17:55:54.386" endtime="20230309 17:55:54.390"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id "random"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:54.396" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket link --key ozone-test-0302220845/multipartKey5 --upload-id "random" 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:55.360" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:55:55.360" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20230309 17:55:54.392" endtime="20230309 17:55:55.360"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:55.362" level="INFO">
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted or completed.</msg>
<status status="PASS" starttime="20230309 17:55:55.361" endtime="20230309 17:55:55.362"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:55.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:55.362" endtime="20230309 17:55:55.363"/>
</kw>
<msg timestamp="20230309 17:55:55.364" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20230309 17:55:54.391" endtime="20230309 17:55:55.364"/>
</kw>
<msg timestamp="20230309 17:55:55.365" level="INFO">${result} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20230309 17:55:54.390" endtime="20230309 17:55:55.365"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:55:54.384" endtime="20230309 17:55:55.367"/>
</test>
<test id="s1-s6-s7-t8" name="Upload part with Incorrect uploadID" line="198">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:55:55.375" level="INFO">${randStr} = 5823374295</msg>
<status status="PASS" starttime="20230309 17:55:55.374" endtime="20230309 17:55:55.375"/>
</kw>
<msg timestamp="20230309 17:55:55.375" level="INFO">${random} = ozone-test-5823374295</msg>
<status status="PASS" starttime="20230309 17:55:55.371" endtime="20230309 17:55:55.376"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:55:55.378" level="INFO">${PREFIX} = ozone-test-5823374295</msg>
<status status="PASS" starttime="20230309 17:55:55.376" endtime="20230309 17:55:55.378"/>
</kw>
<status status="PASS" starttime="20230309 17:55:55.370" endtime="20230309 17:55:55.378"/>
</kw>
<kw name="Skip" library="BuiltIn">
<arg>TODO: HDDS-7811</arg>
<doc>Skips the rest of the current test.</doc>
<msg timestamp="20230309 17:55:55.379" level="SKIP">TODO: HDDS-7811</msg>
<status status="SKIP" starttime="20230309 17:55:55.378" endtime="20230309 17:55:55.379"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Multipart upload" &gt; /tmp/testfile</arg>
<status status="NOT RUN" starttime="20230309 17:55:55.379" endtime="20230309 17:55:55.379"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey --part-number 1 --body /tmp/testfile --upload-id "random"</arg>
<arg>255</arg>
<status status="NOT RUN" starttime="20230309 17:55:55.379" endtime="20230309 17:55:55.380"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchUpload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230309 17:55:55.380" endtime="20230309 17:55:55.380"/>
</kw>
<timeout value="5 minutes"/>
<status status="SKIP" starttime="20230309 17:55:55.368" endtime="20230309 17:55:55.380">TODO: HDDS-7811</status>
</test>
<test id="s1-s6-s7-t9" name="Test list parts" line="204">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:55:55.388" level="INFO">${randStr} = 6327734020</msg>
<status status="PASS" starttime="20230309 17:55:55.386" endtime="20230309 17:55:55.388"/>
</kw>
<msg timestamp="20230309 17:55:55.388" level="INFO">${random} = ozone-test-6327734020</msg>
<status status="PASS" starttime="20230309 17:55:55.385" endtime="20230309 17:55:55.388"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:55:55.389" level="INFO">${PREFIX} = ozone-test-6327734020</msg>
<status status="PASS" starttime="20230309 17:55:55.389" endtime="20230309 17:55:55.389"/>
</kw>
<status status="PASS" starttime="20230309 17:55:55.385" endtime="20230309 17:55:55.394"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey5</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:55.401" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key ozone-test-6327734020/multipartKey5 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:56.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:56.420" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-6327734020/multipartKey5",
    "UploadId": "cd143ae5-9e1d-4cba-87a9-0c1630bb4a46-109994610282725529"
}</msg>
<status status="PASS" starttime="20230309 17:55:55.396" endtime="20230309 17:55:56.420"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:56.422" level="INFO">{
    "Bucket": "link",
    "Key": "ozone-test-6327734020/multipartKey5",
    "UploadId": "cd143ae5-9e1d-4cba-87a9-0c1630bb4a46-109994610282725529"
}</msg>
<status status="PASS" starttime="20230309 17:55:56.421" endtime="20230309 17:55:56.422"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:56.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:56.422" endtime="20230309 17:55:56.423"/>
</kw>
<status status="PASS" starttime="20230309 17:55:55.396" endtime="20230309 17:55:56.424"/>
</kw>
<msg timestamp="20230309 17:55:56.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:55:55.395" endtime="20230309 17:55:56.425"/>
</kw>
<msg timestamp="20230309 17:55:56.426" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-6327734020/multipartKey5",
    "UploadId": "cd143ae5-9e1d-4cba-87a9-0c1630bb4a46-109994610282725529"
}</msg>
<status status="PASS" starttime="20230309 17:55:55.395" endtime="20230309 17:55:56.426"/>
</kw>
<msg timestamp="20230309 17:55:56.426" level="INFO">${result} = {
    "Bucket": "link",
    "Key": "ozone-test-6327734020/multipartKey5",
    "UploadId": "cd143ae5-9e1d-4cba-87a9-0c1630bb4a46-109994610282725529"
}</msg>
<status status="PASS" starttime="20230309 17:55:55.394" endtime="20230309 17:55:56.426"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:56.432" level="INFO">Running command 'echo '{
    "Bucket": "link",
    "Key": "ozone-test-6327734020/multipartKey5",
    "UploadId": "cd143ae5-9e1d-4cba-87a9-0c1630bb4a46-109994610282725529"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:56.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:56.525" level="INFO">${output} = cd143ae5-9e1d-4cba-87a9-0c1630bb4a46-109994610282725529</msg>
<status status="PASS" starttime="20230309 17:55:56.428" endtime="20230309 17:55:56.525"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:56.527" level="INFO">cd143ae5-9e1d-4cba-87a9-0c1630bb4a46-109994610282725529</msg>
<status status="PASS" starttime="20230309 17:55:56.525" endtime="20230309 17:55:56.527"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:56.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:56.527" endtime="20230309 17:55:56.528"/>
</kw>
<msg timestamp="20230309 17:55:56.528" level="INFO">${uploadID} = cd143ae5-9e1d-4cba-87a9-0c1630bb4a46-109994610282725529</msg>
<status status="PASS" starttime="20230309 17:55:56.427" endtime="20230309 17:55:56.528"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:55:56.528" endtime="20230309 17:55:56.529"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:55:56.529" endtime="20230309 17:55:56.529"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:55:56.529" endtime="20230309 17:55:56.530"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:56.539" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:56.571" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:56.572" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:55:56.534" endtime="20230309 17:55:56.572"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:56.574" level="INFO"/>
<status status="PASS" starttime="20230309 17:55:56.572" endtime="20230309 17:55:56.574"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:56.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:56.574" endtime="20230309 17:55:56.575"/>
</kw>
<status status="PASS" starttime="20230309 17:55:56.534" endtime="20230309 17:55:56.576"/>
</kw>
<msg timestamp="20230309 17:55:56.576" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:55:56.533" endtime="20230309 17:55:56.577"/>
</kw>
<status status="PASS" starttime="20230309 17:55:56.532" endtime="20230309 17:55:56.577"/>
</kw>
<status status="PASS" starttime="20230309 17:55:56.531" endtime="20230309 17:55:56.577"/>
</kw>
<status status="PASS" starttime="20230309 17:55:56.531" endtime="20230309 17:55:56.578"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:56.585" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key ozone-test-6327734020/multipartKey5 --part-number 1 --body /tmp/part1 --upload-id cd143ae5-9e1d-4cba-87a9-0c1630bb4a46-109994610282725529 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:57.889" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:57.889" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-6327734020/multipartKey5-cd143ae5-9e1d-4cba-87a9-0c1630bb4a46-109994610282725529-1"
}</msg>
<status status="PASS" starttime="20230309 17:55:56.582" endtime="20230309 17:55:57.889"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:57.891" level="INFO">{
    "ETag": "/legacy/source-bucket/ozone-test-6327734020/multipartKey5-cd143ae5-9e1d-4cba-87a9-0c1630bb4a46-109994610282725529-1"
}</msg>
<status status="PASS" starttime="20230309 17:55:57.890" endtime="20230309 17:55:57.891"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:57.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:57.891" endtime="20230309 17:55:57.892"/>
</kw>
<status status="PASS" starttime="20230309 17:55:56.581" endtime="20230309 17:55:57.893"/>
</kw>
<msg timestamp="20230309 17:55:57.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:55:56.581" endtime="20230309 17:55:57.894"/>
</kw>
<msg timestamp="20230309 17:55:57.894" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-6327734020/multipartKey5-cd143ae5-9e1d-4cba-87a9-0c1630bb4a46-109994610282725529-1"
}</msg>
<status status="PASS" starttime="20230309 17:55:56.580" endtime="20230309 17:55:57.894"/>
</kw>
<msg timestamp="20230309 17:55:57.895" level="INFO">${result} = {
    "ETag": "/legacy/source-bucket/ozone-test-6327734020/multipartKey5-cd143ae5-9e1d-4cba-87a9-0c1630bb4a46-109994610282725529-1"
}</msg>
<status status="PASS" starttime="20230309 17:55:56.579" endtime="20230309 17:55:57.895"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:57.899" level="INFO">Running command 'echo '{
    "ETag": "/legacy/source-bucket/ozone-test-6327734020/multipartKey5-cd143ae5-9e1d-4cba-87a9-0c1630bb4a46-109994610282725529-1"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:57.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:57.975" level="INFO">${output} = /legacy/source-bucket/ozone-test-6327734020/multipartKey5-cd143ae5-9e1d-4cba-87a9-0c1630bb4a46-109994610282725529-1</msg>
<status status="PASS" starttime="20230309 17:55:57.896" endtime="20230309 17:55:57.975"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:57.977" level="INFO">/legacy/source-bucket/ozone-test-6327734020/multipartKey5-cd143ae5-9e1d-4cba-87a9-0c1630bb4a46-109994610282725529-1</msg>
<status status="PASS" starttime="20230309 17:55:57.976" endtime="20230309 17:55:57.977"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:57.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:57.977" endtime="20230309 17:55:57.978"/>
</kw>
<msg timestamp="20230309 17:55:57.978" level="INFO">${eTag1} = /legacy/source-bucket/ozone-test-6327734020/multipartKey5-cd143ae5-9e1d-4cba-87a9-0c1630bb4a46-109994610282725529-1</msg>
<status status="PASS" starttime="20230309 17:55:57.896" endtime="20230309 17:55:57.978"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:55:57.978" endtime="20230309 17:55:57.979"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part2" &gt; /tmp/part2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:57.989" level="INFO">Running command 'echo "Part2" &gt; /tmp/part2'.</msg>
<msg timestamp="20230309 17:55:57.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:57.993" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:55:57.982" endtime="20230309 17:55:57.993"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:57.995" level="INFO"/>
<status status="PASS" starttime="20230309 17:55:57.994" endtime="20230309 17:55:57.995"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:57.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:57.995" endtime="20230309 17:55:57.997"/>
</kw>
<status status="PASS" starttime="20230309 17:55:57.982" endtime="20230309 17:55:57.998"/>
</kw>
<msg timestamp="20230309 17:55:57.998" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:55:57.980" endtime="20230309 17:55:57.999"/>
</kw>
<status status="PASS" starttime="20230309 17:55:57.979" endtime="20230309 17:55:57.999"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --part-number 2 --body /tmp/part2 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:58.009" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key ozone-test-6327734020/multipartKey5 --part-number 2 --body /tmp/part2 --upload-id cd143ae5-9e1d-4cba-87a9-0c1630bb4a46-109994610282725529 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:59.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:59.056" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-6327734020/multipartKey5-cd143ae5-9e1d-4cba-87a9-0c1630bb4a46-109994610282725529-2"
}</msg>
<status status="PASS" starttime="20230309 17:55:58.004" endtime="20230309 17:55:59.056"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:59.059" level="INFO">{
    "ETag": "/legacy/source-bucket/ozone-test-6327734020/multipartKey5-cd143ae5-9e1d-4cba-87a9-0c1630bb4a46-109994610282725529-2"
}</msg>
<status status="PASS" starttime="20230309 17:55:59.057" endtime="20230309 17:55:59.059"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:59.061" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:59.060" endtime="20230309 17:55:59.061"/>
</kw>
<status status="PASS" starttime="20230309 17:55:58.003" endtime="20230309 17:55:59.062"/>
</kw>
<msg timestamp="20230309 17:55:59.062" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:55:58.003" endtime="20230309 17:55:59.063"/>
</kw>
<msg timestamp="20230309 17:55:59.063" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-6327734020/multipartKey5-cd143ae5-9e1d-4cba-87a9-0c1630bb4a46-109994610282725529-2"
}</msg>
<status status="PASS" starttime="20230309 17:55:58.001" endtime="20230309 17:55:59.063"/>
</kw>
<msg timestamp="20230309 17:55:59.064" level="INFO">${result} = {
    "ETag": "/legacy/source-bucket/ozone-test-6327734020/multipartKey5-cd143ae5-9e1d-4cba-87a9-0c1630bb4a46-109994610282725529-2"
}</msg>
<status status="PASS" starttime="20230309 17:55:58.000" endtime="20230309 17:55:59.064"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:59.070" level="INFO">Running command 'echo '{
    "ETag": "/legacy/source-bucket/ozone-test-6327734020/multipartKey5-cd143ae5-9e1d-4cba-87a9-0c1630bb4a46-109994610282725529-2"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:55:59.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:55:59.131" level="INFO">${output} = /legacy/source-bucket/ozone-test-6327734020/multipartKey5-cd143ae5-9e1d-4cba-87a9-0c1630bb4a46-109994610282725529-2</msg>
<status status="PASS" starttime="20230309 17:55:59.066" endtime="20230309 17:55:59.131"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:55:59.134" level="INFO">/legacy/source-bucket/ozone-test-6327734020/multipartKey5-cd143ae5-9e1d-4cba-87a9-0c1630bb4a46-109994610282725529-2</msg>
<status status="PASS" starttime="20230309 17:55:59.132" endtime="20230309 17:55:59.134"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:55:59.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:55:59.134" endtime="20230309 17:55:59.135"/>
</kw>
<msg timestamp="20230309 17:55:59.136" level="INFO">${eTag2} = /legacy/source-bucket/ozone-test-6327734020/multipartKey5-cd143ae5-9e1d-4cba-87a9-0c1630bb4a46-109994610282725529-2</msg>
<status status="PASS" starttime="20230309 17:55:59.065" endtime="20230309 17:55:59.136"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:55:59.136" endtime="20230309 17:55:59.137"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:55:59.144" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket link --key ozone-test-6327734020/multipartKey5 --upload-id cd143ae5-9e1d-4cba-87a9-0c1630bb4a46-109994610282725529 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:00.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:00.215" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-03-09T17:55:57.796Z",
            "ETag": "/legacy/source-bucket/ozone-test-6327734020/multipartKey5-cd143ae5-...</msg>
<status status="PASS" starttime="20230309 17:55:59.140" endtime="20230309 17:56:00.216"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:00.218" level="INFO">{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-03-09T17:55:57.796Z",
            "ETag": "/legacy/source-bucket/ozone-test-6327734020/multipartKey5-cd143ae5-9e1d-4cba-87a9-0c1630bb4a46-109994610282725529-1",
            "Size": 5242880
        },
        {
            "PartNumber": 2,
            "LastModified": "2023-03-09T17:55:58.953Z",
            "ETag": "/legacy/source-bucket/ozone-test-6327734020/multipartKey5-cd143ae5-9e1d-4cba-87a9-0c1630bb4a46-109994610282725529-2",
            "Size": 6
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}</msg>
<status status="PASS" starttime="20230309 17:56:00.217" endtime="20230309 17:56:00.219"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:00.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:00.219" endtime="20230309 17:56:00.221"/>
</kw>
<status status="PASS" starttime="20230309 17:55:59.139" endtime="20230309 17:56:00.221"/>
</kw>
<msg timestamp="20230309 17:56:00.221" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:55:59.139" endtime="20230309 17:56:00.222"/>
</kw>
<msg timestamp="20230309 17:56:00.223" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-03-09T17:55:57.796Z",
            "ETag": "/legacy/source-bucket/ozone-test-6327734020/multipartKey5-cd143ae5-...</msg>
<status status="PASS" starttime="20230309 17:55:59.138" endtime="20230309 17:56:00.223"/>
</kw>
<msg timestamp="20230309 17:56:00.224" level="INFO">${result} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-03-09T17:55:57.796Z",
            "ETag": "/legacy/source-bucket/ozone-test-6327734020/multipartKey5-cd143ae5-...</msg>
<status status="PASS" starttime="20230309 17:55:59.137" endtime="20230309 17:56:00.224"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part1}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:00.231" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-03-09T17:55:57.796Z",
            "ETag": "/legacy/source-bucket/ozone-test-6327734020/multipartKey5-cd143ae5-9e1d-4cba-87a9-0c1630bb4a46-109994610282725529-1",
            "Size": 5242880
        },
        {
            "PartNumber": 2,
            "LastModified": "2023-03-09T17:55:58.953Z",
            "ETag": "/legacy/source-bucket/ozone-test-6327734020/multipartKey5-cd143ae5-9e1d-4cba-87a9-0c1630bb4a46-109994610282725529-2",
            "Size": 6
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:00.299" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:00.299" level="INFO">${output} = /legacy/source-bucket/ozone-test-6327734020/multipartKey5-cd143ae5-9e1d-4cba-87a9-0c1630bb4a46-109994610282725529-1</msg>
<status status="PASS" starttime="20230309 17:56:00.226" endtime="20230309 17:56:00.299"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:00.301" level="INFO">/legacy/source-bucket/ozone-test-6327734020/multipartKey5-cd143ae5-9e1d-4cba-87a9-0c1630bb4a46-109994610282725529-1</msg>
<status status="PASS" starttime="20230309 17:56:00.300" endtime="20230309 17:56:00.302"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:00.303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:00.302" endtime="20230309 17:56:00.303"/>
</kw>
<msg timestamp="20230309 17:56:00.304" level="INFO">${part1} = /legacy/source-bucket/ozone-test-6327734020/multipartKey5-cd143ae5-9e1d-4cba-87a9-0c1630bb4a46-109994610282725529-1</msg>
<status status="PASS" starttime="20230309 17:56:00.225" endtime="20230309 17:56:00.304"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part2}</var>
<arg>echo '${result}' | jq -r '.Parts[1].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:00.310" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-03-09T17:55:57.796Z",
            "ETag": "/legacy/source-bucket/ozone-test-6327734020/multipartKey5-cd143ae5-9e1d-4cba-87a9-0c1630bb4a46-109994610282725529-1",
            "Size": 5242880
        },
        {
            "PartNumber": 2,
            "LastModified": "2023-03-09T17:55:58.953Z",
            "ETag": "/legacy/source-bucket/ozone-test-6327734020/multipartKey5-cd143ae5-9e1d-4cba-87a9-0c1630bb4a46-109994610282725529-2",
            "Size": 6
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[1].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:00.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:00.383" level="INFO">${output} = /legacy/source-bucket/ozone-test-6327734020/multipartKey5-cd143ae5-9e1d-4cba-87a9-0c1630bb4a46-109994610282725529-2</msg>
<status status="PASS" starttime="20230309 17:56:00.305" endtime="20230309 17:56:00.383"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:00.388" level="INFO">/legacy/source-bucket/ozone-test-6327734020/multipartKey5-cd143ae5-9e1d-4cba-87a9-0c1630bb4a46-109994610282725529-2</msg>
<status status="PASS" starttime="20230309 17:56:00.386" endtime="20230309 17:56:00.389"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:00.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:00.389" endtime="20230309 17:56:00.390"/>
</kw>
<msg timestamp="20230309 17:56:00.390" level="INFO">${part2} = /legacy/source-bucket/ozone-test-6327734020/multipartKey5-cd143ae5-9e1d-4cba-87a9-0c1630bb4a46-109994610282725529-2</msg>
<status status="PASS" starttime="20230309 17:56:00.304" endtime="20230309 17:56:00.390"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part1}</arg>
<arg>${eTag1}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 17:56:00.392" endtime="20230309 17:56:00.393"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${part2}</arg>
<arg>${eTag2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:56:00.393" endtime="20230309 17:56:00.394"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:56:00.394" endtime="20230309 17:56:00.395"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID} --max-items 1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:00.408" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket link --key ozone-test-6327734020/multipartKey5 --upload-id cd143ae5-9e1d-4cba-87a9-0c1630bb4a46-109994610282725529 --max-items 1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:01.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:01.365" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-03-09T17:55:57.796Z",
            "ETag": "/legacy/source-bucket/ozone-test-6327734020/multipartKey5-cd143ae5-...</msg>
<status status="PASS" starttime="20230309 17:56:00.403" endtime="20230309 17:56:01.365"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:01.367" level="INFO">{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-03-09T17:55:57.796Z",
            "ETag": "/legacy/source-bucket/ozone-test-6327734020/multipartKey5-cd143ae5-9e1d-4cba-87a9-0c1630bb4a46-109994610282725529-1",
            "Size": 5242880
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD",
    "NextToken": "eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0="
}</msg>
<status status="PASS" starttime="20230309 17:56:01.365" endtime="20230309 17:56:01.367"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:01.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:01.367" endtime="20230309 17:56:01.368"/>
</kw>
<status status="PASS" starttime="20230309 17:56:00.402" endtime="20230309 17:56:01.369"/>
</kw>
<msg timestamp="20230309 17:56:01.369" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:56:00.402" endtime="20230309 17:56:01.370"/>
</kw>
<msg timestamp="20230309 17:56:01.371" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-03-09T17:55:57.796Z",
            "ETag": "/legacy/source-bucket/ozone-test-6327734020/multipartKey5-cd143ae5-...</msg>
<status status="PASS" starttime="20230309 17:56:00.397" endtime="20230309 17:56:01.371"/>
</kw>
<msg timestamp="20230309 17:56:01.372" level="INFO">${result} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-03-09T17:55:57.796Z",
            "ETag": "/legacy/source-bucket/ozone-test-6327734020/multipartKey5-cd143ae5-...</msg>
<status status="PASS" starttime="20230309 17:56:00.395" endtime="20230309 17:56:01.372"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part1}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:01.378" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-03-09T17:55:57.796Z",
            "ETag": "/legacy/source-bucket/ozone-test-6327734020/multipartKey5-cd143ae5-9e1d-4cba-87a9-0c1630bb4a46-109994610282725529-1",
            "Size": 5242880
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD",
    "NextToken": "eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0="
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:01.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:01.443" level="INFO">${output} = /legacy/source-bucket/ozone-test-6327734020/multipartKey5-cd143ae5-9e1d-4cba-87a9-0c1630bb4a46-109994610282725529-1</msg>
<status status="PASS" starttime="20230309 17:56:01.373" endtime="20230309 17:56:01.443"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:01.445" level="INFO">/legacy/source-bucket/ozone-test-6327734020/multipartKey5-cd143ae5-9e1d-4cba-87a9-0c1630bb4a46-109994610282725529-1</msg>
<status status="PASS" starttime="20230309 17:56:01.444" endtime="20230309 17:56:01.446"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:01.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:01.446" endtime="20230309 17:56:01.447"/>
</kw>
<msg timestamp="20230309 17:56:01.447" level="INFO">${part1} = /legacy/source-bucket/ozone-test-6327734020/multipartKey5-cd143ae5-9e1d-4cba-87a9-0c1630bb4a46-109994610282725529-1</msg>
<status status="PASS" starttime="20230309 17:56:01.372" endtime="20230309 17:56:01.447"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${token}</var>
<arg>echo '${result}' | jq -r '.NextToken'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:01.454" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-03-09T17:55:57.796Z",
            "ETag": "/legacy/source-bucket/ozone-test-6327734020/multipartKey5-cd143ae5-9e1d-4cba-87a9-0c1630bb4a46-109994610282725529-1",
            "Size": 5242880
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD",
    "NextToken": "eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0="
}' | jq -r '.NextToken' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:01.532" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:01.532" level="INFO">${output} = eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0=</msg>
<status status="PASS" starttime="20230309 17:56:01.449" endtime="20230309 17:56:01.532"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:01.535" level="INFO">eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0=</msg>
<status status="PASS" starttime="20230309 17:56:01.534" endtime="20230309 17:56:01.535"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:01.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:01.536" endtime="20230309 17:56:01.536"/>
</kw>
<msg timestamp="20230309 17:56:01.537" level="INFO">${token} = eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0=</msg>
<status status="PASS" starttime="20230309 17:56:01.448" endtime="20230309 17:56:01.537"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part1}</arg>
<arg>${eTag1}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 17:56:01.537" endtime="20230309 17:56:01.538"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:56:01.538" endtime="20230309 17:56:01.539"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID} --max-items 1 --starting-token ${token}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:01.553" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket link --key ozone-test-6327734020/multipartKey5 --upload-id cd143ae5-9e1d-4cba-87a9-0c1630bb4a46-109994610282725529 --max-items 1 --starting-token eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0= 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:02.591" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:02.591" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2023-03-09T17:55:58.953Z",
            "ETag": "/legacy/source-bucket/ozone-test-6327734020/multipartKey5-cd143ae5-...</msg>
<status status="PASS" starttime="20230309 17:56:01.547" endtime="20230309 17:56:02.591"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:02.594" level="INFO">{
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2023-03-09T17:55:58.953Z",
            "ETag": "/legacy/source-bucket/ozone-test-6327734020/multipartKey5-cd143ae5-9e1d-4cba-87a9-0c1630bb4a46-109994610282725529-2",
            "Size": 6
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}</msg>
<status status="PASS" starttime="20230309 17:56:02.593" endtime="20230309 17:56:02.594"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:02.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:02.594" endtime="20230309 17:56:02.595"/>
</kw>
<status status="PASS" starttime="20230309 17:56:01.545" endtime="20230309 17:56:02.596"/>
</kw>
<msg timestamp="20230309 17:56:02.596" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:56:01.544" endtime="20230309 17:56:02.597"/>
</kw>
<msg timestamp="20230309 17:56:02.597" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2023-03-09T17:55:58.953Z",
            "ETag": "/legacy/source-bucket/ozone-test-6327734020/multipartKey5-cd143ae5-...</msg>
<status status="PASS" starttime="20230309 17:56:01.541" endtime="20230309 17:56:02.597"/>
</kw>
<msg timestamp="20230309 17:56:02.601" level="INFO">${result} = {
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2023-03-09T17:55:58.953Z",
            "ETag": "/legacy/source-bucket/ozone-test-6327734020/multipartKey5-cd143ae5-...</msg>
<status status="PASS" starttime="20230309 17:56:01.539" endtime="20230309 17:56:02.601"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part2}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:02.608" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2023-03-09T17:55:58.953Z",
            "ETag": "/legacy/source-bucket/ozone-test-6327734020/multipartKey5-cd143ae5-9e1d-4cba-87a9-0c1630bb4a46-109994610282725529-2",
            "Size": 6
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:02.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:02.673" level="INFO">${output} = /legacy/source-bucket/ozone-test-6327734020/multipartKey5-cd143ae5-9e1d-4cba-87a9-0c1630bb4a46-109994610282725529-2</msg>
<status status="PASS" starttime="20230309 17:56:02.602" endtime="20230309 17:56:02.673"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:02.675" level="INFO">/legacy/source-bucket/ozone-test-6327734020/multipartKey5-cd143ae5-9e1d-4cba-87a9-0c1630bb4a46-109994610282725529-2</msg>
<status status="PASS" starttime="20230309 17:56:02.673" endtime="20230309 17:56:02.675"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:02.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:02.675" endtime="20230309 17:56:02.676"/>
</kw>
<msg timestamp="20230309 17:56:02.677" level="INFO">${part2} = /legacy/source-bucket/ozone-test-6327734020/multipartKey5-cd143ae5-9e1d-4cba-87a9-0c1630bb4a46-109994610282725529-2</msg>
<status status="PASS" starttime="20230309 17:56:02.601" endtime="20230309 17:56:02.677"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part2}</arg>
<arg>${eTag2}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 17:56:02.677" endtime="20230309 17:56:02.678"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:56:02.678" endtime="20230309 17:56:02.679"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID}</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:02.687" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket link --key ozone-test-6327734020/multipartKey5 --upload-id cd143ae5-9e1d-4cba-87a9-0c1630bb4a46-109994610282725529 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:03.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:03.826" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:56:02.681" endtime="20230309 17:56:03.826"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:03.828" level="INFO"/>
<status status="PASS" starttime="20230309 17:56:03.827" endtime="20230309 17:56:03.828"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:03.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:03.828" endtime="20230309 17:56:03.829"/>
</kw>
<msg timestamp="20230309 17:56:03.830" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:56:02.680" endtime="20230309 17:56:03.830"/>
</kw>
<msg timestamp="20230309 17:56:03.830" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 17:56:02.679" endtime="20230309 17:56:03.830"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:55:55.383" endtime="20230309 17:56:03.831"/>
</test>
<test id="s1-s6-s7-t10" name="Test Multipart Upload with the simplified aws s3 cp API" line="246">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:56:03.845" level="INFO">${randStr} = 0456396951</msg>
<status status="PASS" starttime="20230309 17:56:03.843" endtime="20230309 17:56:03.845"/>
</kw>
<msg timestamp="20230309 17:56:03.847" level="INFO">${random} = ozone-test-0456396951</msg>
<status status="PASS" starttime="20230309 17:56:03.841" endtime="20230309 17:56:03.847"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:56:03.850" level="INFO">${PREFIX} = ozone-test-0456396951</msg>
<status status="PASS" starttime="20230309 17:56:03.848" endtime="20230309 17:56:03.850"/>
</kw>
<status status="PASS" starttime="20230309 17:56:03.840" endtime="20230309 17:56:03.850"/>
</kw>
<kw name="Create Random file">
<arg>22</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:03.865" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=22 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:04.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:04.109" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:56:03.857" endtime="20230309 17:56:04.109"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:04.111" level="INFO"/>
<status status="PASS" starttime="20230309 17:56:04.110" endtime="20230309 17:56:04.112"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:04.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:04.112" endtime="20230309 17:56:04.113"/>
</kw>
<status status="PASS" starttime="20230309 17:56:03.855" endtime="20230309 17:56:04.114"/>
</kw>
<msg timestamp="20230309 17:56:04.114" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:56:03.854" endtime="20230309 17:56:04.115"/>
</kw>
<status status="PASS" starttime="20230309 17:56:03.852" endtime="20230309 17:56:04.115"/>
</kw>
<status status="PASS" starttime="20230309 17:56:03.852" endtime="20230309 17:56:04.115"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>cp /tmp/part1 s3://${BUCKET}/mpyawscli</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:04.122" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/part1 s3://link/mpyawscli 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:06.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:06.425" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (1.2 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (2.2 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (3.1 MiB/s) with 1 file(s) remaining
Co...</msg>
<status status="PASS" starttime="20230309 17:56:04.119" endtime="20230309 17:56:06.425"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:06.426" level="INFO">Completed 256.0 KiB/22.0 MiB (1.2 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (2.2 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (3.1 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/22.0 MiB (3.7 MiB/s) with 1 file(s) remaining  
Completed 1.2 MiB/22.0 MiB (4.4 MiB/s) with 1 file(s) remaining  
Completed 1.5 MiB/22.0 MiB (5.1 MiB/s) with 1 file(s) remaining  
Completed 1.8 MiB/22.0 MiB (5.5 MiB/s) with 1 file(s) remaining  
Completed 2.0 MiB/22.0 MiB (6.2 MiB/s) with 1 file(s) remaining  
Completed 2.2 MiB/22.0 MiB (6.9 MiB/s) with 1 file(s) remaining  
Completed 2.5 MiB/22.0 MiB (7.6 MiB/s) with 1 file(s) remaining  
Completed 2.8 MiB/22.0 MiB (8.3 MiB/s) with 1 file(s) remaining  
Completed 3.0 MiB/22.0 MiB (8.7 MiB/s) with 1 file(s) remaining  
Completed 3.2 MiB/22.0 MiB (9.4 MiB/s) with 1 file(s) remaining  
Completed 3.5 MiB/22.0 MiB (10.1 MiB/s) with 1 file(s) remaining 
Completed 3.8 MiB/22.0 MiB (10.6 MiB/s) with 1 file(s) remaining 
Completed 4.0 MiB/22.0 MiB (11.2 MiB/s) with 1 file(s) remaining 
Completed 4.2 MiB/22.0 MiB (11.8 MiB/s) with 1 file(s) remaining 
Completed 4.5 MiB/22.0 MiB (12.2 MiB/s) with 1 file(s) remaining 
Completed 4.8 MiB/22.0 MiB (12.8 MiB/s) with 1 file(s) remaining 
Completed 5.0 MiB/22.0 MiB (13.5 MiB/s) with 1 file(s) remaining 
Completed 5.2 MiB/22.0 MiB (13.9 MiB/s) with 1 file(s) remaining 
Completed 5.5 MiB/22.0 MiB (14.6 MiB/s) with 1 file(s) remaining 
Completed 5.8 MiB/22.0 MiB (15.1 MiB/s) with 1 file(s) remaining 
Completed 6.0 MiB/22.0 MiB (15.7 MiB/s) with 1 file(s) remaining 
Completed 6.2 MiB/22.0 MiB (16.3 MiB/s) with 1 file(s) remaining 
Completed 6.5 MiB/22.0 MiB (16.9 MiB/s) with 1 file(s) remaining 
Completed 6.8 MiB/22.0 MiB (17.4 MiB/s) with 1 file(s) remaining 
Completed 7.0 MiB/22.0 MiB (17.9 MiB/s) with 1 file(s) remaining 
Completed 7.2 MiB/22.0 MiB (18.5 MiB/s) with 1 file(s) remaining 
Completed 7.5 MiB/22.0 MiB (19.0 MiB/s) with 1 file(s) remaining 
Completed 7.8 MiB/22.0 MiB (19.6 MiB/s) with 1 file(s) remaining 
Completed 8.0 MiB/22.0 MiB (20.0 MiB/s) with 1 file(s) remaining 
Completed 8.2 MiB/22.0 MiB (20.6 MiB/s) with 1 file(s) remaining 
Completed 8.5 MiB/22.0 MiB (21.1 MiB/s) with 1 file(s) remaining 
Completed 8.8 MiB/22.0 MiB (21.7 MiB/s) with 1 file(s) remaining 
Completed 9.0 MiB/22.0 MiB (22.2 MiB/s) with 1 file(s) remaining 
Completed 9.2 MiB/22.0 MiB (22.6 MiB/s) with 1 file(s) remaining 
Completed 9.5 MiB/22.0 MiB (23.1 MiB/s) with 1 file(s) remaining 
Completed 9.8 MiB/22.0 MiB (23.6 MiB/s) with 1 file(s) remaining 
Completed 10.0 MiB/22.0 MiB (23.4 MiB/s) with 1 file(s) remaining
Completed 10.2 MiB/22.0 MiB (23.9 MiB/s) with 1 file(s) remaining
Completed 10.5 MiB/22.0 MiB (24.4 MiB/s) with 1 file(s) remaining
Completed 10.8 MiB/22.0 MiB (24.7 MiB/s) with 1 file(s) remaining
Completed 11.0 MiB/22.0 MiB (25.1 MiB/s) with 1 file(s) remaining
Completed 11.2 MiB/22.0 MiB (25.6 MiB/s) with 1 file(s) remaining
Completed 11.5 MiB/22.0 MiB (26.1 MiB/s) with 1 file(s) remaining
Completed 11.8 MiB/22.0 MiB (26.3 MiB/s) with 1 file(s) remaining
Completed 12.0 MiB/22.0 MiB (26.7 MiB/s) with 1 file(s) remaining
Completed 12.2 MiB/22.0 MiB (27.2 MiB/s) with 1 file(s) remaining
Completed 12.5 MiB/22.0 MiB (27.5 MiB/s) with 1 file(s) remaining
Completed 12.8 MiB/22.0 MiB (25.3 MiB/s) with 1 file(s) remaining
Completed 13.0 MiB/22.0 MiB (25.7 MiB/s) with 1 file(s) remaining
Completed 13.2 MiB/22.0 MiB (25.7 MiB/s) with 1 file(s) remaining
Completed 13.5 MiB/22.0 MiB (26.2 MiB/s) with 1 file(s) remaining
Completed 13.8 MiB/22.0 MiB (25.2 MiB/s) with 1 file(s) remaining
Completed 14.0 MiB/22.0 MiB (25.5 MiB/s) with 1 file(s) remaining
Completed 14.2 MiB/22.0 MiB (25.4 MiB/s) with 1 file(s) remaining
Completed 14.5 MiB/22.0 MiB (25.8 MiB/s) with 1 file(s) remaining
Completed 14.8 MiB/22.0 MiB (25.9 MiB/s) with 1 file(s) remaining
Completed 15.0 MiB/22.0 MiB (26.2 MiB/s) with 1 file(s) remaining
Completed 15.2 MiB/22.0 MiB (26.6 MiB/s) with 1 file(s) remaining
Completed 15.5 MiB/22.0 MiB (26.6 MiB/s) with 1 file(s) remaining
Completed 15.8 MiB/22.0 MiB (26.8 MiB/s) with 1 file(s) remaining
Completed 16.0 MiB/22.0 MiB (27.1 MiB/s) with 1 file(s) remaining
Completed 16.2 MiB/22.0 MiB (27.1 MiB/s) with 1 file(s) remaining
Completed 16.5 MiB/22.0 MiB (26.6 MiB/s) with 1 file(s) remaining
Completed 16.8 MiB/22.0 MiB (27.0 MiB/s) with 1 file(s) remaining
Completed 17.0 MiB/22.0 MiB (26.9 MiB/s) with 1 file(s) remaining
Completed 17.2 MiB/22.0 MiB (27.1 MiB/s) with 1 file(s) remaining
Completed 17.5 MiB/22.0 MiB (27.1 MiB/s) with 1 file(s) remaining
Completed 17.8 MiB/22.0 MiB (26.7 MiB/s) with 1 file(s) remaining
Completed 18.0 MiB/22.0 MiB (27.1 MiB/s) with 1 file(s) remaining
Completed 18.2 MiB/22.0 MiB (27.0 MiB/s) with 1 file(s) remaining
Completed 18.5 MiB/22.0 MiB (27.1 MiB/s) with 1 file(s) remaining
Completed 18.8 MiB/22.0 MiB (27.2 MiB/s) with 1 file(s) remaining
Completed 19.0 MiB/22.0 MiB (27.4 MiB/s) with 1 file(s) remaining
Completed 19.2 MiB/22.0 MiB (27.2 MiB/s) with 1 file(s) remaining
Completed 19.5 MiB/22.0 MiB (27.4 MiB/s) with 1 file(s) remaining
Completed 19.8 MiB/22.0 MiB (27.3 MiB/s) with 1 file(s) remaining
Completed 20.0 MiB/22.0 MiB (27.4 MiB/s) with 1 file(s) remaining
Completed 20.2 MiB/22.0 MiB (27.3 MiB/s) with 1 file(s) remaining
Completed 20.5 MiB/22.0 MiB (27.2 MiB/s) with 1 file(s) remaining
Completed 20.8 MiB/22.0 MiB (26.7 MiB/s) with 1 file(s) remaining
Completed 21.0 MiB/22.0 MiB (26.9 MiB/s) with 1 file(s) remaining
Completed 21.2 MiB/22.0 MiB (27.0 MiB/s) with 1 file(s) remaining
Completed 21.5 MiB/22.0 MiB (27.0 MiB/s) with 1 file(s) remaining
Completed 21.8 MiB/22.0 MiB (26.9 MiB/s) with 1 file(s) remaining
Completed 22.0 MiB/22.0 MiB (27.2 MiB/s) with 1 file(s) remaining
upload: ../../tmp/part1 to s3://link/mpyawscli                   </msg>
<status status="PASS" starttime="20230309 17:56:06.425" endtime="20230309 17:56:06.426"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:06.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:06.428" endtime="20230309 17:56:06.429"/>
</kw>
<status status="PASS" starttime="20230309 17:56:04.118" endtime="20230309 17:56:06.429"/>
</kw>
<msg timestamp="20230309 17:56:06.430" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:56:04.117" endtime="20230309 17:56:06.434"/>
</kw>
<msg timestamp="20230309 17:56:06.434" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (1.2 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (2.2 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (3.1 MiB/s) with 1 file(s) remaining
Co...</msg>
<status status="PASS" starttime="20230309 17:56:04.116" endtime="20230309 17:56:06.436"/>
</kw>
<status status="PASS" starttime="20230309 17:56:04.116" endtime="20230309 17:56:06.436"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>cp s3://${BUCKET}/mpyawscli /tmp/part1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:06.444" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp s3://link/mpyawscli /tmp/part1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:08.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:08.918" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (1.2 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (2.2 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (3.1 MiB/s) with 1 file(s) remaining
Co...</msg>
<status status="PASS" starttime="20230309 17:56:06.441" endtime="20230309 17:56:08.918"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:08.921" level="INFO">Completed 256.0 KiB/22.0 MiB (1.2 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (2.2 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (3.1 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/22.0 MiB (4.0 MiB/s) with 1 file(s) remaining  
Completed 1.2 MiB/22.0 MiB (4.6 MiB/s) with 1 file(s) remaining  
Completed 1.5 MiB/22.0 MiB (5.5 MiB/s) with 1 file(s) remaining  
Completed 1.8 MiB/22.0 MiB (5.7 MiB/s) with 1 file(s) remaining  
Completed 2.0 MiB/22.0 MiB (6.1 MiB/s) with 1 file(s) remaining  
Completed 2.2 MiB/22.0 MiB (6.8 MiB/s) with 1 file(s) remaining  
Completed 2.5 MiB/22.0 MiB (7.2 MiB/s) with 1 file(s) remaining  
Completed 2.8 MiB/22.0 MiB (7.8 MiB/s) with 1 file(s) remaining  
Completed 3.0 MiB/22.0 MiB (8.2 MiB/s) with 1 file(s) remaining  
Completed 3.2 MiB/22.0 MiB (8.2 MiB/s) with 1 file(s) remaining  
Completed 3.5 MiB/22.0 MiB (8.7 MiB/s) with 1 file(s) remaining  
Completed 3.8 MiB/22.0 MiB (9.1 MiB/s) with 1 file(s) remaining  
Completed 4.0 MiB/22.0 MiB (9.6 MiB/s) with 1 file(s) remaining  
Completed 4.2 MiB/22.0 MiB (10.0 MiB/s) with 1 file(s) remaining 
Completed 4.5 MiB/22.0 MiB (10.1 MiB/s) with 1 file(s) remaining 
Completed 4.8 MiB/22.0 MiB (8.7 MiB/s) with 1 file(s) remaining  
Completed 5.0 MiB/22.0 MiB (9.1 MiB/s) with 1 file(s) remaining  
Completed 5.2 MiB/22.0 MiB (9.4 MiB/s) with 1 file(s) remaining  
Completed 5.5 MiB/22.0 MiB (9.6 MiB/s) with 1 file(s) remaining  
Completed 5.8 MiB/22.0 MiB (10.0 MiB/s) with 1 file(s) remaining 
Completed 6.0 MiB/22.0 MiB (10.4 MiB/s) with 1 file(s) remaining 
Completed 6.2 MiB/22.0 MiB (10.5 MiB/s) with 1 file(s) remaining 
Completed 6.5 MiB/22.0 MiB (10.9 MiB/s) with 1 file(s) remaining 
Completed 6.8 MiB/22.0 MiB (11.0 MiB/s) with 1 file(s) remaining 
Completed 7.0 MiB/22.0 MiB (11.3 MiB/s) with 1 file(s) remaining 
Completed 7.2 MiB/22.0 MiB (11.6 MiB/s) with 1 file(s) remaining 
Completed 7.5 MiB/22.0 MiB (11.4 MiB/s) with 1 file(s) remaining 
Completed 7.8 MiB/22.0 MiB (11.2 MiB/s) with 1 file(s) remaining 
Completed 8.0 MiB/22.0 MiB (11.4 MiB/s) with 1 file(s) remaining 
Completed 8.2 MiB/22.0 MiB (11.7 MiB/s) with 1 file(s) remaining 
Completed 8.5 MiB/22.0 MiB (11.9 MiB/s) with 1 file(s) remaining 
Completed 8.8 MiB/22.0 MiB (11.9 MiB/s) with 1 file(s) remaining 
Completed 9.0 MiB/22.0 MiB (12.1 MiB/s) with 1 file(s) remaining 
Completed 9.2 MiB/22.0 MiB (12.0 MiB/s) with 1 file(s) remaining 
Completed 9.5 MiB/22.0 MiB (12.3 MiB/s) with 1 file(s) remaining 
Completed 9.8 MiB/22.0 MiB (12.5 MiB/s) with 1 file(s) remaining 
Completed 10.0 MiB/22.0 MiB (12.6 MiB/s) with 1 file(s) remaining
Completed 10.2 MiB/22.0 MiB (12.8 MiB/s) with 1 file(s) remaining
Completed 10.5 MiB/22.0 MiB (13.1 MiB/s) with 1 file(s) remaining
Completed 10.8 MiB/22.0 MiB (12.9 MiB/s) with 1 file(s) remaining
Completed 11.0 MiB/22.0 MiB (12.8 MiB/s) with 1 file(s) remaining
Completed 11.2 MiB/22.0 MiB (13.0 MiB/s) with 1 file(s) remaining
Completed 11.5 MiB/22.0 MiB (13.2 MiB/s) with 1 file(s) remaining
Completed 11.8 MiB/22.0 MiB (13.0 MiB/s) with 1 file(s) remaining
Completed 12.0 MiB/22.0 MiB (13.3 MiB/s) with 1 file(s) remaining
Completed 12.2 MiB/22.0 MiB (13.3 MiB/s) with 1 file(s) remaining
Completed 12.5 MiB/22.0 MiB (13.4 MiB/s) with 1 file(s) remaining
Completed 12.8 MiB/22.0 MiB (13.7 MiB/s) with 1 file(s) remaining
Completed 13.0 MiB/22.0 MiB (13.6 MiB/s) with 1 file(s) remaining
Completed 13.2 MiB/22.0 MiB (13.8 MiB/s) with 1 file(s) remaining
Completed 13.5 MiB/22.0 MiB (14.0 MiB/s) with 1 file(s) remaining
Completed 13.8 MiB/22.0 MiB (13.8 MiB/s) with 1 file(s) remaining
Completed 14.0 MiB/22.0 MiB (13.7 MiB/s) with 1 file(s) remaining
Completed 14.2 MiB/22.0 MiB (13.9 MiB/s) with 1 file(s) remaining
Completed 14.5 MiB/22.0 MiB (14.1 MiB/s) with 1 file(s) remaining
Completed 14.8 MiB/22.0 MiB (14.0 MiB/s) with 1 file(s) remaining
Completed 15.0 MiB/22.0 MiB (14.2 MiB/s) with 1 file(s) remaining
Completed 15.2 MiB/22.0 MiB (14.1 MiB/s) with 1 file(s) remaining
Completed 15.5 MiB/22.0 MiB (14.3 MiB/s) with 1 file(s) remaining
Completed 15.8 MiB/22.0 MiB (14.5 MiB/s) with 1 file(s) remaining
Completed 16.0 MiB/22.0 MiB (14.4 MiB/s) with 1 file(s) remaining
Completed 16.2 MiB/22.0 MiB (14.6 MiB/s) with 1 file(s) remaining
Completed 16.5 MiB/22.0 MiB (14.7 MiB/s) with 1 file(s) remaining
Completed 16.8 MiB/22.0 MiB (14.7 MiB/s) with 1 file(s) remaining
Completed 17.0 MiB/22.0 MiB (14.6 MiB/s) with 1 file(s) remaining
Completed 17.2 MiB/22.0 MiB (14.6 MiB/s) with 1 file(s) remaining
Completed 17.5 MiB/22.0 MiB (14.7 MiB/s) with 1 file(s) remaining
Completed 17.8 MiB/22.0 MiB (14.6 MiB/s) with 1 file(s) remaining
Completed 18.0 MiB/22.0 MiB (14.6 MiB/s) with 1 file(s) remaining
Completed 18.2 MiB/22.0 MiB (14.6 MiB/s) with 1 file(s) remaining
Completed 18.5 MiB/22.0 MiB (14.7 MiB/s) with 1 file(s) remaining
Completed 18.8 MiB/22.0 MiB (14.7 MiB/s) with 1 file(s) remaining
Completed 19.0 MiB/22.0 MiB (14.8 MiB/s) with 1 file(s) remaining
Completed 19.2 MiB/22.0 MiB (14.9 MiB/s) with 1 file(s) remaining
Completed 19.5 MiB/22.0 MiB (14.9 MiB/s) with 1 file(s) remaining
Completed 19.8 MiB/22.0 MiB (15.0 MiB/s) with 1 file(s) remaining
Completed 20.0 MiB/22.0 MiB (14.9 MiB/s) with 1 file(s) remaining
Completed 20.2 MiB/22.0 MiB (14.8 MiB/s) with 1 file(s) remaining
Completed 20.5 MiB/22.0 MiB (14.8 MiB/s) with 1 file(s) remaining
Completed 20.8 MiB/22.0 MiB (14.8 MiB/s) with 1 file(s) remaining
Completed 21.0 MiB/22.0 MiB (14.9 MiB/s) with 1 file(s) remaining
Completed 21.2 MiB/22.0 MiB (14.5 MiB/s) with 1 file(s) remaining
Completed 21.5 MiB/22.0 MiB (14.5 MiB/s) with 1 file(s) remaining
Completed 21.8 MiB/22.0 MiB (14.6 MiB/s) with 1 file(s) remaining
Completed 22.0 MiB/22.0 MiB (14.7 MiB/s) with 1 file(s) remaining
download: s3://link/mpyawscli to ../../tmp/part1.result          </msg>
<status status="PASS" starttime="20230309 17:56:08.919" endtime="20230309 17:56:08.921"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:08.925" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:08.921" endtime="20230309 17:56:08.925"/>
</kw>
<status status="PASS" starttime="20230309 17:56:06.440" endtime="20230309 17:56:08.925"/>
</kw>
<msg timestamp="20230309 17:56:08.925" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:56:06.439" endtime="20230309 17:56:08.926"/>
</kw>
<msg timestamp="20230309 17:56:08.928" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (1.2 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (2.2 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (3.1 MiB/s) with 1 file(s) remaining
Co...</msg>
<status status="PASS" starttime="20230309 17:56:06.437" endtime="20230309 17:56:08.928"/>
</kw>
<status status="PASS" starttime="20230309 17:56:06.436" endtime="20230309 17:56:08.928"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/mpyawscli</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:08.941" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://link/mpyawscli 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:09.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:09.931" level="INFO">${output} = delete: s3://link/mpyawscli</msg>
<status status="PASS" starttime="20230309 17:56:08.934" endtime="20230309 17:56:09.931"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:09.933" level="INFO">delete: s3://link/mpyawscli</msg>
<status status="PASS" starttime="20230309 17:56:09.932" endtime="20230309 17:56:09.934"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:09.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:09.935" endtime="20230309 17:56:09.939"/>
</kw>
<status status="PASS" starttime="20230309 17:56:08.933" endtime="20230309 17:56:09.939"/>
</kw>
<msg timestamp="20230309 17:56:09.939" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:56:08.932" endtime="20230309 17:56:09.941"/>
</kw>
<msg timestamp="20230309 17:56:09.942" level="INFO">${output} = delete: s3://link/mpyawscli</msg>
<status status="PASS" starttime="20230309 17:56:08.931" endtime="20230309 17:56:09.942"/>
</kw>
<status status="PASS" starttime="20230309 17:56:08.928" endtime="20230309 17:56:09.942"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part1.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:09.950" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:10.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:10.018" level="INFO">${output} = d61b07ab06f317dc6881c982c762054c</msg>
<status status="PASS" starttime="20230309 17:56:09.947" endtime="20230309 17:56:10.018"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:10.020" level="INFO">d61b07ab06f317dc6881c982c762054c</msg>
<status status="PASS" starttime="20230309 17:56:10.019" endtime="20230309 17:56:10.020"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:10.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:10.020" endtime="20230309 17:56:10.021"/>
</kw>
<status status="PASS" starttime="20230309 17:56:09.945" endtime="20230309 17:56:10.021"/>
</kw>
<msg timestamp="20230309 17:56:10.021" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:56:09.945" endtime="20230309 17:56:10.022"/>
</kw>
<msg timestamp="20230309 17:56:10.023" level="INFO">${checksumbefore} = d61b07ab06f317dc6881c982c762054c</msg>
<status status="PASS" starttime="20230309 17:56:09.943" endtime="20230309 17:56:10.023"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:10.028" level="INFO">Running command 'md5sum /tmp/part1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:10.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:10.107" level="INFO">${output} = d61b07ab06f317dc6881c982c762054c</msg>
<status status="PASS" starttime="20230309 17:56:10.025" endtime="20230309 17:56:10.107"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:10.109" level="INFO">d61b07ab06f317dc6881c982c762054c</msg>
<status status="PASS" starttime="20230309 17:56:10.108" endtime="20230309 17:56:10.109"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:10.110" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:10.109" endtime="20230309 17:56:10.110"/>
</kw>
<status status="PASS" starttime="20230309 17:56:10.024" endtime="20230309 17:56:10.111"/>
</kw>
<msg timestamp="20230309 17:56:10.111" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:56:10.024" endtime="20230309 17:56:10.112"/>
</kw>
<msg timestamp="20230309 17:56:10.113" level="INFO">${checksumafter} = d61b07ab06f317dc6881c982c762054c</msg>
<status status="PASS" starttime="20230309 17:56:10.023" endtime="20230309 17:56:10.113"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 17:56:10.113" endtime="20230309 17:56:10.114"/>
</kw>
<status status="PASS" starttime="20230309 17:56:09.942" endtime="20230309 17:56:10.114"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:56:03.834" endtime="20230309 17:56:10.114"/>
</test>
<test id="s1-s6-s7-t11" name="Test Multipart Upload Put With Copy" line="253">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:56:10.120" level="INFO">${randStr} = 6820276366</msg>
<status status="PASS" starttime="20230309 17:56:10.119" endtime="20230309 17:56:10.120"/>
</kw>
<msg timestamp="20230309 17:56:10.121" level="INFO">${random} = ozone-test-6820276366</msg>
<status status="PASS" starttime="20230309 17:56:10.118" endtime="20230309 17:56:10.121"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:56:10.121" level="INFO">${PREFIX} = ozone-test-6820276366</msg>
<status status="PASS" starttime="20230309 17:56:10.121" endtime="20230309 17:56:10.121"/>
</kw>
<status status="PASS" starttime="20230309 17:56:10.117" endtime="20230309 17:56:10.122"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:10.129" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:10.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:10.168" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:56:10.125" endtime="20230309 17:56:10.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:10.170" level="INFO"/>
<status status="PASS" starttime="20230309 17:56:10.168" endtime="20230309 17:56:10.170"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:10.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:10.170" endtime="20230309 17:56:10.171"/>
</kw>
<status status="PASS" starttime="20230309 17:56:10.125" endtime="20230309 17:56:10.172"/>
</kw>
<msg timestamp="20230309 17:56:10.172" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:56:10.124" endtime="20230309 17:56:10.173"/>
</kw>
<status status="PASS" starttime="20230309 17:56:10.123" endtime="20230309 17:56:10.174"/>
</kw>
<status status="PASS" starttime="20230309 17:56:10.123" endtime="20230309 17:56:10.174"/>
</kw>
<status status="PASS" starttime="20230309 17:56:10.122" endtime="20230309 17:56:10.174"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copytest/source --body /tmp/part1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:10.182" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key ozone-test-6820276366/copytest/source --body /tmp/part1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:11.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:11.668" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:56:10.178" endtime="20230309 17:56:11.668"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:11.673" level="INFO"/>
<status status="PASS" starttime="20230309 17:56:11.669" endtime="20230309 17:56:11.674"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:11.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:11.674" endtime="20230309 17:56:11.676"/>
</kw>
<status status="PASS" starttime="20230309 17:56:10.177" endtime="20230309 17:56:11.677"/>
</kw>
<msg timestamp="20230309 17:56:11.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:56:10.176" endtime="20230309 17:56:11.677"/>
</kw>
<msg timestamp="20230309 17:56:11.679" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:56:10.175" endtime="20230309 17:56:11.679"/>
</kw>
<msg timestamp="20230309 17:56:11.680" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 17:56:10.174" endtime="20230309 17:56:11.680"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/copytest/destination</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:11.693" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key ozone-test-6820276366/copytest/destination 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:12.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:12.839" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-6820276366/copytest/destination",
    "UploadId": "0ef3b6ec-65f1-4a8e-a0a6-f5f03636dab5-109994611356074145"
}</msg>
<status status="PASS" starttime="20230309 17:56:11.688" endtime="20230309 17:56:12.839"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:12.841" level="INFO">{
    "Bucket": "link",
    "Key": "ozone-test-6820276366/copytest/destination",
    "UploadId": "0ef3b6ec-65f1-4a8e-a0a6-f5f03636dab5-109994611356074145"
}</msg>
<status status="PASS" starttime="20230309 17:56:12.840" endtime="20230309 17:56:12.842"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:12.843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:12.842" endtime="20230309 17:56:12.843"/>
</kw>
<status status="PASS" starttime="20230309 17:56:11.686" endtime="20230309 17:56:12.843"/>
</kw>
<msg timestamp="20230309 17:56:12.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:56:11.686" endtime="20230309 17:56:12.844"/>
</kw>
<msg timestamp="20230309 17:56:12.845" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-6820276366/copytest/destination",
    "UploadId": "0ef3b6ec-65f1-4a8e-a0a6-f5f03636dab5-109994611356074145"
}</msg>
<status status="PASS" starttime="20230309 17:56:11.684" endtime="20230309 17:56:12.845"/>
</kw>
<msg timestamp="20230309 17:56:12.845" level="INFO">${result} = {
    "Bucket": "link",
    "Key": "ozone-test-6820276366/copytest/destination",
    "UploadId": "0ef3b6ec-65f1-4a8e-a0a6-f5f03636dab5-109994611356074145"
}</msg>
<status status="PASS" starttime="20230309 17:56:11.681" endtime="20230309 17:56:12.846"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:12.850" level="INFO">Running command 'echo '{
    "Bucket": "link",
    "Key": "ozone-test-6820276366/copytest/destination",
    "UploadId": "0ef3b6ec-65f1-4a8e-a0a6-f5f03636dab5-109994611356074145"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:12.908" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:12.908" level="INFO">${output} = 0ef3b6ec-65f1-4a8e-a0a6-f5f03636dab5-109994611356074145</msg>
<status status="PASS" starttime="20230309 17:56:12.847" endtime="20230309 17:56:12.908"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:12.910" level="INFO">0ef3b6ec-65f1-4a8e-a0a6-f5f03636dab5-109994611356074145</msg>
<status status="PASS" starttime="20230309 17:56:12.909" endtime="20230309 17:56:12.910"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:12.911" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:12.910" endtime="20230309 17:56:12.912"/>
</kw>
<msg timestamp="20230309 17:56:12.912" level="INFO">${uploadID} = 0ef3b6ec-65f1-4a8e-a0a6-f5f03636dab5-109994611356074145</msg>
<status status="PASS" starttime="20230309 17:56:12.846" endtime="20230309 17:56:12.912"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:56:12.912" endtime="20230309 17:56:12.913"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:56:12.913" endtime="20230309 17:56:12.914"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copytest/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copytest/source</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:12.922" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket link --key ozone-test-6820276366/copytest/destination --upload-id 0ef3b6ec-65f1-4a8e-a0a6-f5f03636dab5-109994611356074145 --part-number 1 --copy-source link/ozone-test-6820276366/copytest/source 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:14.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:14.477" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-6820276366/copytest/destination-0ef3b6ec-65f1-4a8e-a0a6-f5f03636dab5-109994611356074145-1",
        "LastModified": "2023-03...</msg>
<status status="PASS" starttime="20230309 17:56:12.918" endtime="20230309 17:56:14.477"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:14.484" level="INFO">{
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-6820276366/copytest/destination-0ef3b6ec-65f1-4a8e-a0a6-f5f03636dab5-109994611356074145-1",
        "LastModified": "2023-03-09T17:56:14.265Z"
    }
}</msg>
<status status="PASS" starttime="20230309 17:56:14.478" endtime="20230309 17:56:14.486"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:14.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:14.486" endtime="20230309 17:56:14.489"/>
</kw>
<status status="PASS" starttime="20230309 17:56:12.917" endtime="20230309 17:56:14.492"/>
</kw>
<msg timestamp="20230309 17:56:14.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:56:12.916" endtime="20230309 17:56:14.493"/>
</kw>
<msg timestamp="20230309 17:56:14.494" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-6820276366/copytest/destination-0ef3b6ec-65f1-4a8e-a0a6-f5f03636dab5-109994611356074145-1",
        "LastModified": "2023-03...</msg>
<status status="PASS" starttime="20230309 17:56:12.915" endtime="20230309 17:56:14.497"/>
</kw>
<msg timestamp="20230309 17:56:14.498" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-6820276366/copytest/destination-0ef3b6ec-65f1-4a8e-a0a6-f5f03636dab5-109994611356074145-1",
        "LastModified": "2023-03...</msg>
<status status="PASS" starttime="20230309 17:56:12.914" endtime="20230309 17:56:14.498"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:56:14.498" endtime="20230309 17:56:14.502"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:56:14.502" endtime="20230309 17:56:14.503"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:14.509" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-6820276366/copytest/destination-0ef3b6ec-65f1-4a8e-a0a6-f5f03636dab5-109994611356074145-1",
        "LastModified": "2023-03-09T17:56:14.265Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:14.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:14.579" level="INFO">${output} = /legacy/source-bucket/ozone-test-6820276366/copytest/destination-0ef3b6ec-65f1-4a8e-a0a6-f5f03636dab5-109994611356074145-1</msg>
<status status="PASS" starttime="20230309 17:56:14.504" endtime="20230309 17:56:14.580"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:14.582" level="INFO">/legacy/source-bucket/ozone-test-6820276366/copytest/destination-0ef3b6ec-65f1-4a8e-a0a6-f5f03636dab5-109994611356074145-1</msg>
<status status="PASS" starttime="20230309 17:56:14.581" endtime="20230309 17:56:14.582"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:14.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:14.583" endtime="20230309 17:56:14.584"/>
</kw>
<msg timestamp="20230309 17:56:14.585" level="INFO">${eTag1} = /legacy/source-bucket/ozone-test-6820276366/copytest/destination-0ef3b6ec-65f1-4a8e-a0a6-f5f03636dab5-109994611356074145-1</msg>
<status status="PASS" starttime="20230309 17:56:14.503" endtime="20230309 17:56:14.585"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/copytest/destination --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:14.595" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 0ef3b6ec-65f1-4a8e-a0a6-f5f03636dab5-109994611356074145 --bucket link --key ozone-test-6820276366/copytest/destination --multipart-upload 'Parts=[{ETag=/legacy/source-bucket/ozone-test-6820276366/copytest/destination-0ef3b6ec-65f1-4a8e-a0a6-f5f03636dab5-109994611356074145-1,PartNumber=1}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:15.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:15.750" level="INFO">${output} = {
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-6820276366/copytest/destination",
    "ETag": "a8b01bc390d41adf0f5211153055450293b71268486813ea0158d234cfce09cb"
}</msg>
<status status="PASS" starttime="20230309 17:56:14.590" endtime="20230309 17:56:15.750"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:15.753" level="INFO">{
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-6820276366/copytest/destination",
    "ETag": "a8b01bc390d41adf0f5211153055450293b71268486813ea0158d234cfce09cb"
}</msg>
<status status="PASS" starttime="20230309 17:56:15.751" endtime="20230309 17:56:15.753"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:15.754" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:15.753" endtime="20230309 17:56:15.754"/>
</kw>
<status status="PASS" starttime="20230309 17:56:14.588" endtime="20230309 17:56:15.755"/>
</kw>
<msg timestamp="20230309 17:56:15.755" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:56:14.588" endtime="20230309 17:56:15.756"/>
</kw>
<msg timestamp="20230309 17:56:15.756" level="INFO">${output} = {
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-6820276366/copytest/destination",
    "ETag": "a8b01bc390d41adf0f5211153055450293b71268486813ea0158d234cfce09cb"
}</msg>
<status status="PASS" starttime="20230309 17:56:14.587" endtime="20230309 17:56:15.756"/>
</kw>
<status status="PASS" starttime="20230309 17:56:14.585" endtime="20230309 17:56:15.757"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copytest/destination /tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:15.765" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-6820276366/copytest/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:17.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:17.142" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:56:15 GMT",
    "ContentLength": 5242880,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Ex...</msg>
<status status="PASS" starttime="20230309 17:56:15.761" endtime="20230309 17:56:17.142"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:17.144" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:56:15 GMT",
    "ContentLength": 5242880,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 09 Mar 2023 17:56:16 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230309 17:56:17.143" endtime="20230309 17:56:17.144"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:17.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:17.145" endtime="20230309 17:56:17.146"/>
</kw>
<status status="PASS" starttime="20230309 17:56:15.760" endtime="20230309 17:56:17.146"/>
</kw>
<msg timestamp="20230309 17:56:17.147" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:56:15.759" endtime="20230309 17:56:17.148"/>
</kw>
<msg timestamp="20230309 17:56:17.148" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:56:15 GMT",
    "ContentLength": 5242880,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Ex...</msg>
<status status="PASS" starttime="20230309 17:56:15.758" endtime="20230309 17:56:17.148"/>
</kw>
<status status="PASS" starttime="20230309 17:56:15.757" endtime="20230309 17:56:17.149"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:17.156" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:17.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:17.178" level="INFO">${output} = ca29d14241381834b9d419aa9a74b485</msg>
<status status="PASS" starttime="20230309 17:56:17.152" endtime="20230309 17:56:17.179"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:17.180" level="INFO">ca29d14241381834b9d419aa9a74b485</msg>
<status status="PASS" starttime="20230309 17:56:17.179" endtime="20230309 17:56:17.181"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:17.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:17.181" endtime="20230309 17:56:17.182"/>
</kw>
<status status="PASS" starttime="20230309 17:56:17.151" endtime="20230309 17:56:17.182"/>
</kw>
<msg timestamp="20230309 17:56:17.183" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:56:17.151" endtime="20230309 17:56:17.184"/>
</kw>
<msg timestamp="20230309 17:56:17.184" level="INFO">${checksumbefore} = ca29d14241381834b9d419aa9a74b485</msg>
<status status="PASS" starttime="20230309 17:56:17.150" endtime="20230309 17:56:17.184"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:17.191" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:17.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:17.215" level="INFO">${output} = ca29d14241381834b9d419aa9a74b485</msg>
<status status="PASS" starttime="20230309 17:56:17.187" endtime="20230309 17:56:17.215"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:17.217" level="INFO">ca29d14241381834b9d419aa9a74b485</msg>
<status status="PASS" starttime="20230309 17:56:17.216" endtime="20230309 17:56:17.217"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:17.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:17.218" endtime="20230309 17:56:17.218"/>
</kw>
<status status="PASS" starttime="20230309 17:56:17.186" endtime="20230309 17:56:17.219"/>
</kw>
<msg timestamp="20230309 17:56:17.219" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:56:17.185" endtime="20230309 17:56:17.220"/>
</kw>
<msg timestamp="20230309 17:56:17.221" level="INFO">${checksumafter} = ca29d14241381834b9d419aa9a74b485</msg>
<status status="PASS" starttime="20230309 17:56:17.184" endtime="20230309 17:56:17.221"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 17:56:17.221" endtime="20230309 17:56:17.222"/>
</kw>
<status status="PASS" starttime="20230309 17:56:17.149" endtime="20230309 17:56:17.222"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:56:10.116" endtime="20230309 17:56:17.223"/>
</test>
<test id="s1-s6-s7-t12" name="Test Multipart Upload Put With Copy and range" line="275">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:56:17.229" level="INFO">${randStr} = 1288652920</msg>
<status status="PASS" starttime="20230309 17:56:17.228" endtime="20230309 17:56:17.229"/>
</kw>
<msg timestamp="20230309 17:56:17.229" level="INFO">${random} = ozone-test-1288652920</msg>
<status status="PASS" starttime="20230309 17:56:17.227" endtime="20230309 17:56:17.229"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:56:17.230" level="INFO">${PREFIX} = ozone-test-1288652920</msg>
<status status="PASS" starttime="20230309 17:56:17.229" endtime="20230309 17:56:17.231"/>
</kw>
<status status="PASS" starttime="20230309 17:56:17.226" endtime="20230309 17:56:17.231"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>10</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>10</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:17.238" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=10 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:17.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:17.312" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:56:17.234" endtime="20230309 17:56:17.312"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:17.314" level="INFO"/>
<status status="PASS" starttime="20230309 17:56:17.312" endtime="20230309 17:56:17.314"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:17.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:17.314" endtime="20230309 17:56:17.316"/>
</kw>
<status status="PASS" starttime="20230309 17:56:17.233" endtime="20230309 17:56:17.316"/>
</kw>
<msg timestamp="20230309 17:56:17.316" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:56:17.233" endtime="20230309 17:56:17.317"/>
</kw>
<status status="PASS" starttime="20230309 17:56:17.232" endtime="20230309 17:56:17.318"/>
</kw>
<status status="PASS" starttime="20230309 17:56:17.231" endtime="20230309 17:56:17.318"/>
</kw>
<status status="PASS" starttime="20230309 17:56:17.231" endtime="20230309 17:56:17.318"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source --body /tmp/part1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:17.327" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key ozone-test-1288652920/copyrange/source --body /tmp/part1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:18.823" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:18.824" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:56:17.322" endtime="20230309 17:56:18.824"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:18.825" level="INFO"/>
<status status="PASS" starttime="20230309 17:56:18.824" endtime="20230309 17:56:18.825"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:18.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:18.826" endtime="20230309 17:56:18.827"/>
</kw>
<status status="PASS" starttime="20230309 17:56:17.321" endtime="20230309 17:56:18.827"/>
</kw>
<msg timestamp="20230309 17:56:18.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:56:17.321" endtime="20230309 17:56:18.828"/>
</kw>
<msg timestamp="20230309 17:56:18.828" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:56:17.320" endtime="20230309 17:56:18.828"/>
</kw>
<msg timestamp="20230309 17:56:18.829" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 17:56:17.319" endtime="20230309 17:56:18.829"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:18.835" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key ozone-test-1288652920/copyrange/destination 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:19.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:19.858" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-1288652920/copyrange/destination",
    "UploadId": "6b18f441-51cb-4e75-acc8-a30ce70a87a3-109994611817316516"
}</msg>
<status status="PASS" starttime="20230309 17:56:18.832" endtime="20230309 17:56:19.858"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:19.860" level="INFO">{
    "Bucket": "link",
    "Key": "ozone-test-1288652920/copyrange/destination",
    "UploadId": "6b18f441-51cb-4e75-acc8-a30ce70a87a3-109994611817316516"
}</msg>
<status status="PASS" starttime="20230309 17:56:19.859" endtime="20230309 17:56:19.860"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:19.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:19.860" endtime="20230309 17:56:19.861"/>
</kw>
<status status="PASS" starttime="20230309 17:56:18.831" endtime="20230309 17:56:19.862"/>
</kw>
<msg timestamp="20230309 17:56:19.862" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:56:18.831" endtime="20230309 17:56:19.862"/>
</kw>
<msg timestamp="20230309 17:56:19.863" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-1288652920/copyrange/destination",
    "UploadId": "6b18f441-51cb-4e75-acc8-a30ce70a87a3-109994611817316516"
}</msg>
<status status="PASS" starttime="20230309 17:56:18.830" endtime="20230309 17:56:19.863"/>
</kw>
<msg timestamp="20230309 17:56:19.864" level="INFO">${result} = {
    "Bucket": "link",
    "Key": "ozone-test-1288652920/copyrange/destination",
    "UploadId": "6b18f441-51cb-4e75-acc8-a30ce70a87a3-109994611817316516"
}</msg>
<status status="PASS" starttime="20230309 17:56:18.829" endtime="20230309 17:56:19.864"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:19.868" level="INFO">Running command 'echo '{
    "Bucket": "link",
    "Key": "ozone-test-1288652920/copyrange/destination",
    "UploadId": "6b18f441-51cb-4e75-acc8-a30ce70a87a3-109994611817316516"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:19.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:19.931" level="INFO">${output} = 6b18f441-51cb-4e75-acc8-a30ce70a87a3-109994611817316516</msg>
<status status="PASS" starttime="20230309 17:56:19.865" endtime="20230309 17:56:19.931"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:19.935" level="INFO">6b18f441-51cb-4e75-acc8-a30ce70a87a3-109994611817316516</msg>
<status status="PASS" starttime="20230309 17:56:19.933" endtime="20230309 17:56:19.935"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:19.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:19.935" endtime="20230309 17:56:19.936"/>
</kw>
<msg timestamp="20230309 17:56:19.936" level="INFO">${uploadID} = 6b18f441-51cb-4e75-acc8-a30ce70a87a3-109994611817316516</msg>
<status status="PASS" starttime="20230309 17:56:19.864" endtime="20230309 17:56:19.936"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:56:19.937" endtime="20230309 17:56:19.938"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:56:19.943" endtime="20230309 17:56:19.944"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:19.958" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket link --key ozone-test-1288652920/copyrange/destination --upload-id 6b18f441-51cb-4e75-acc8-a30ce70a87a3-109994611817316516 --part-number 1 --copy-source link/ozone-test-1288652920/copyrange/source --copy-source-range bytes=0-10485757 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:21.680" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:21.681" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-1288652920/copyrange/destination-6b18f441-51cb-4e75-acc8-a30ce70a87a3-109994611817316516-1",
        "LastModified": "2023-0...</msg>
<status status="PASS" starttime="20230309 17:56:19.953" endtime="20230309 17:56:21.681"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:21.689" level="INFO">{
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-1288652920/copyrange/destination-6b18f441-51cb-4e75-acc8-a30ce70a87a3-109994611817316516-1",
        "LastModified": "2023-03-09T17:56:21.530Z"
    }
}</msg>
<status status="PASS" starttime="20230309 17:56:21.686" endtime="20230309 17:56:21.689"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:21.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:21.689" endtime="20230309 17:56:21.691"/>
</kw>
<status status="PASS" starttime="20230309 17:56:19.952" endtime="20230309 17:56:21.693"/>
</kw>
<msg timestamp="20230309 17:56:21.693" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:56:19.950" endtime="20230309 17:56:21.697"/>
</kw>
<msg timestamp="20230309 17:56:21.697" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-1288652920/copyrange/destination-6b18f441-51cb-4e75-acc8-a30ce70a87a3-109994611817316516-1",
        "LastModified": "2023-0...</msg>
<status status="PASS" starttime="20230309 17:56:19.947" endtime="20230309 17:56:21.697"/>
</kw>
<msg timestamp="20230309 17:56:21.700" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-1288652920/copyrange/destination-6b18f441-51cb-4e75-acc8-a30ce70a87a3-109994611817316516-1",
        "LastModified": "2023-0...</msg>
<status status="PASS" starttime="20230309 17:56:19.944" endtime="20230309 17:56:21.700"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:56:21.700" endtime="20230309 17:56:21.701"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:56:21.701" endtime="20230309 17:56:21.702"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:21.709" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-1288652920/copyrange/destination-6b18f441-51cb-4e75-acc8-a30ce70a87a3-109994611817316516-1",
        "LastModified": "2023-03-09T17:56:21.530Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:21.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:21.791" level="INFO">${output} = /legacy/source-bucket/ozone-test-1288652920/copyrange/destination-6b18f441-51cb-4e75-acc8-a30ce70a87a3-109994611817316516-1</msg>
<status status="PASS" starttime="20230309 17:56:21.704" endtime="20230309 17:56:21.791"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:21.794" level="INFO">/legacy/source-bucket/ozone-test-1288652920/copyrange/destination-6b18f441-51cb-4e75-acc8-a30ce70a87a3-109994611817316516-1</msg>
<status status="PASS" starttime="20230309 17:56:21.792" endtime="20230309 17:56:21.794"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:21.795" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:21.794" endtime="20230309 17:56:21.796"/>
</kw>
<msg timestamp="20230309 17:56:21.796" level="INFO">${eTag1} = /legacy/source-bucket/ozone-test-1288652920/copyrange/destination-6b18f441-51cb-4e75-acc8-a30ce70a87a3-109994611817316516-1</msg>
<status status="PASS" starttime="20230309 17:56:21.702" endtime="20230309 17:56:21.797"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:21.808" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket link --key ozone-test-1288652920/copyrange/destination --upload-id 6b18f441-51cb-4e75-acc8-a30ce70a87a3-109994611817316516 --part-number 2 --copy-source link/ozone-test-1288652920/copyrange/source --copy-source-range bytes=10485758-10485759 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:23.035" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:23.035" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-1288652920/copyrange/destination-6b18f441-51cb-4e75-acc8-a30ce70a87a3-109994611817316516-2",
        "LastModified": "2023-0...</msg>
<status status="PASS" starttime="20230309 17:56:21.804" endtime="20230309 17:56:23.036"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:23.039" level="INFO">{
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-1288652920/copyrange/destination-6b18f441-51cb-4e75-acc8-a30ce70a87a3-109994611817316516-2",
        "LastModified": "2023-03-09T17:56:22.839Z"
    }
}</msg>
<status status="PASS" starttime="20230309 17:56:23.037" endtime="20230309 17:56:23.039"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:23.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:23.039" endtime="20230309 17:56:23.041"/>
</kw>
<status status="PASS" starttime="20230309 17:56:21.801" endtime="20230309 17:56:23.041"/>
</kw>
<msg timestamp="20230309 17:56:23.041" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:56:21.800" endtime="20230309 17:56:23.043"/>
</kw>
<msg timestamp="20230309 17:56:23.044" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-1288652920/copyrange/destination-6b18f441-51cb-4e75-acc8-a30ce70a87a3-109994611817316516-2",
        "LastModified": "2023-0...</msg>
<status status="PASS" starttime="20230309 17:56:21.799" endtime="20230309 17:56:23.044"/>
</kw>
<msg timestamp="20230309 17:56:23.044" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-1288652920/copyrange/destination-6b18f441-51cb-4e75-acc8-a30ce70a87a3-109994611817316516-2",
        "LastModified": "2023-0...</msg>
<status status="PASS" starttime="20230309 17:56:21.797" endtime="20230309 17:56:23.044"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:56:23.045" endtime="20230309 17:56:23.047"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:56:23.049" endtime="20230309 17:56:23.049"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:23.060" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-1288652920/copyrange/destination-6b18f441-51cb-4e75-acc8-a30ce70a87a3-109994611817316516-2",
        "LastModified": "2023-03-09T17:56:22.839Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:23.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:23.122" level="INFO">${output} = /legacy/source-bucket/ozone-test-1288652920/copyrange/destination-6b18f441-51cb-4e75-acc8-a30ce70a87a3-109994611817316516-2</msg>
<status status="PASS" starttime="20230309 17:56:23.053" endtime="20230309 17:56:23.122"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:23.123" level="INFO">/legacy/source-bucket/ozone-test-1288652920/copyrange/destination-6b18f441-51cb-4e75-acc8-a30ce70a87a3-109994611817316516-2</msg>
<status status="PASS" starttime="20230309 17:56:23.122" endtime="20230309 17:56:23.124"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:23.124" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:23.124" endtime="20230309 17:56:23.124"/>
</kw>
<msg timestamp="20230309 17:56:23.125" level="INFO">${eTag2} = /legacy/source-bucket/ozone-test-1288652920/copyrange/destination-6b18f441-51cb-4e75-acc8-a30ce70a87a3-109994611817316516-2</msg>
<status status="PASS" starttime="20230309 17:56:23.050" endtime="20230309 17:56:23.125"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:23.133" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 6b18f441-51cb-4e75-acc8-a30ce70a87a3-109994611817316516 --bucket link --key ozone-test-1288652920/copyrange/destination --multipart-upload 'Parts=[{ETag=/legacy/source-bucket/ozone-test-1288652920/copyrange/destination-6b18f441-51cb-4e75-acc8-a30ce70a87a3-109994611817316516-1,PartNumber=1},{ETag=/legacy/source-bucket/ozone-test-1288652920/copyrange/destination-6b18f441-51cb-4e75-acc8-a30ce70a87a3-109994611817316516-2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:24.101" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:24.101" level="INFO">${output} = {
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-1288652920/copyrange/destination",
    "ETag": "a2405c8470318faf6b8af1f373f53fba898b322c26550af61d17c30afe7cfbc0"
}</msg>
<status status="PASS" starttime="20230309 17:56:23.130" endtime="20230309 17:56:24.101"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:24.103" level="INFO">{
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-1288652920/copyrange/destination",
    "ETag": "a2405c8470318faf6b8af1f373f53fba898b322c26550af61d17c30afe7cfbc0"
}</msg>
<status status="PASS" starttime="20230309 17:56:24.102" endtime="20230309 17:56:24.103"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:24.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:24.103" endtime="20230309 17:56:24.104"/>
</kw>
<status status="PASS" starttime="20230309 17:56:23.129" endtime="20230309 17:56:24.104"/>
</kw>
<msg timestamp="20230309 17:56:24.105" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:56:23.129" endtime="20230309 17:56:24.105"/>
</kw>
<msg timestamp="20230309 17:56:24.105" level="INFO">${output} = {
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-1288652920/copyrange/destination",
    "ETag": "a2405c8470318faf6b8af1f373f53fba898b322c26550af61d17c30afe7cfbc0"
}</msg>
<status status="PASS" starttime="20230309 17:56:23.127" endtime="20230309 17:56:24.105"/>
</kw>
<status status="PASS" starttime="20230309 17:56:23.125" endtime="20230309 17:56:24.106"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination /tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:24.117" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-1288652920/copyrange/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:25.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:25.843" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:56:23 GMT",
    "ContentLength": 10485760,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "E...</msg>
<status status="PASS" starttime="20230309 17:56:24.113" endtime="20230309 17:56:25.844"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:25.846" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:56:23 GMT",
    "ContentLength": 10485760,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 09 Mar 2023 17:56:24 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230309 17:56:25.844" endtime="20230309 17:56:25.846"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:25.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:25.847" endtime="20230309 17:56:25.848"/>
</kw>
<status status="PASS" starttime="20230309 17:56:24.112" endtime="20230309 17:56:25.851"/>
</kw>
<msg timestamp="20230309 17:56:25.852" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:56:24.112" endtime="20230309 17:56:25.853"/>
</kw>
<msg timestamp="20230309 17:56:25.853" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:56:23 GMT",
    "ContentLength": 10485760,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "E...</msg>
<status status="PASS" starttime="20230309 17:56:24.111" endtime="20230309 17:56:25.853"/>
</kw>
<status status="PASS" starttime="20230309 17:56:24.107" endtime="20230309 17:56:25.855"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:25.867" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:25.907" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:25.907" level="INFO">${output} = 4ce0f879cbae99de4c84f2ac3380e25b</msg>
<status status="PASS" starttime="20230309 17:56:25.862" endtime="20230309 17:56:25.907"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:25.909" level="INFO">4ce0f879cbae99de4c84f2ac3380e25b</msg>
<status status="PASS" starttime="20230309 17:56:25.907" endtime="20230309 17:56:25.909"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:25.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:25.909" endtime="20230309 17:56:25.910"/>
</kw>
<status status="PASS" starttime="20230309 17:56:25.859" endtime="20230309 17:56:25.911"/>
</kw>
<msg timestamp="20230309 17:56:25.911" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:56:25.857" endtime="20230309 17:56:25.912"/>
</kw>
<msg timestamp="20230309 17:56:25.912" level="INFO">${checksumbefore} = 4ce0f879cbae99de4c84f2ac3380e25b</msg>
<status status="PASS" starttime="20230309 17:56:25.857" endtime="20230309 17:56:25.912"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:25.921" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:25.966" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:25.966" level="INFO">${output} = 4ce0f879cbae99de4c84f2ac3380e25b</msg>
<status status="PASS" starttime="20230309 17:56:25.915" endtime="20230309 17:56:25.966"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:25.969" level="INFO">4ce0f879cbae99de4c84f2ac3380e25b</msg>
<status status="PASS" starttime="20230309 17:56:25.968" endtime="20230309 17:56:25.969"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:25.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:25.969" endtime="20230309 17:56:25.970"/>
</kw>
<status status="PASS" starttime="20230309 17:56:25.914" endtime="20230309 17:56:25.971"/>
</kw>
<msg timestamp="20230309 17:56:25.971" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:56:25.914" endtime="20230309 17:56:25.972"/>
</kw>
<msg timestamp="20230309 17:56:25.972" level="INFO">${checksumafter} = 4ce0f879cbae99de4c84f2ac3380e25b</msg>
<status status="PASS" starttime="20230309 17:56:25.913" endtime="20230309 17:56:25.973"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 17:56:25.973" endtime="20230309 17:56:25.974"/>
</kw>
<status status="PASS" starttime="20230309 17:56:25.855" endtime="20230309 17:56:25.974"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:56:17.224" endtime="20230309 17:56:25.974"/>
</test>
<test id="s1-s6-s7-t13" name="Test Multipart Upload Put With Copy and range with IfModifiedSince" line="302">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:56:25.982" level="INFO">${randStr} = 4412776365</msg>
<status status="PASS" starttime="20230309 17:56:25.981" endtime="20230309 17:56:25.982"/>
</kw>
<msg timestamp="20230309 17:56:25.983" level="INFO">${random} = ozone-test-4412776365</msg>
<status status="PASS" starttime="20230309 17:56:25.979" endtime="20230309 17:56:25.983"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:56:25.984" level="INFO">${PREFIX} = ozone-test-4412776365</msg>
<status status="PASS" starttime="20230309 17:56:25.983" endtime="20230309 17:56:25.984"/>
</kw>
<status status="PASS" starttime="20230309 17:56:25.978" endtime="20230309 17:56:25.985"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>10</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>10</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:25.993" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=10 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:26.076" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:26.076" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:56:25.989" endtime="20230309 17:56:26.076"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:26.083" level="INFO"/>
<status status="PASS" starttime="20230309 17:56:26.082" endtime="20230309 17:56:26.083"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:26.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:26.083" endtime="20230309 17:56:26.084"/>
</kw>
<status status="PASS" starttime="20230309 17:56:25.988" endtime="20230309 17:56:26.084"/>
</kw>
<msg timestamp="20230309 17:56:26.084" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:56:25.987" endtime="20230309 17:56:26.085"/>
</kw>
<status status="PASS" starttime="20230309 17:56:25.986" endtime="20230309 17:56:26.086"/>
</kw>
<status status="PASS" starttime="20230309 17:56:25.985" endtime="20230309 17:56:26.086"/>
</kw>
<status status="PASS" starttime="20230309 17:56:25.985" endtime="20230309 17:56:26.086"/>
</kw>
<kw name="Get Current Date" library="DateTime">
<var>${curDate}</var>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20230309 17:56:26.087" level="INFO">${curDate} = 2023-03-09 17:56:26.087</msg>
<status status="PASS" starttime="20230309 17:56:26.086" endtime="20230309 17:56:26.087"/>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<var>${beforeCreate}</var>
<arg>${curDate}</arg>
<arg>1 day</arg>
<doc>Subtracts time from date and returns the resulting date.</doc>
<msg timestamp="20230309 17:56:26.095" level="INFO">${beforeCreate} = 2023-03-08 17:56:26.087</msg>
<status status="PASS" starttime="20230309 17:56:26.088" endtime="20230309 17:56:26.095"/>
</kw>
<kw name="Add Time To Date" library="DateTime">
<var>${tomorrow}</var>
<arg>${curDate}</arg>
<arg>1 day</arg>
<doc>Adds time to date and returns the resulting date.</doc>
<msg timestamp="20230309 17:56:26.097" level="INFO">${tomorrow} = 2023-03-10 17:56:26.087</msg>
<status status="PASS" starttime="20230309 17:56:26.096" endtime="20230309 17:56:26.097"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source --body /tmp/part1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:26.108" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key ozone-test-4412776365/copyrange/source --body /tmp/part1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:27.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:27.649" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:56:26.104" endtime="20230309 17:56:27.649"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:27.651" level="INFO"/>
<status status="PASS" starttime="20230309 17:56:27.650" endtime="20230309 17:56:27.651"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:27.653" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:27.652" endtime="20230309 17:56:27.653"/>
</kw>
<status status="PASS" starttime="20230309 17:56:26.101" endtime="20230309 17:56:27.654"/>
</kw>
<msg timestamp="20230309 17:56:27.656" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:56:26.101" endtime="20230309 17:56:27.657"/>
</kw>
<msg timestamp="20230309 17:56:27.657" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:56:26.100" endtime="20230309 17:56:27.657"/>
</kw>
<msg timestamp="20230309 17:56:27.660" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 17:56:26.098" endtime="20230309 17:56:27.660"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:27.675" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key ozone-test-4412776365/copyrange/destination 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:28.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:28.798" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-4412776365/copyrange/destination",
    "UploadId": "df2c243c-0e7f-45c6-a7ab-4529289ac197-109994612401766568"
}</msg>
<status status="PASS" starttime="20230309 17:56:27.668" endtime="20230309 17:56:28.798"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:28.801" level="INFO">{
    "Bucket": "link",
    "Key": "ozone-test-4412776365/copyrange/destination",
    "UploadId": "df2c243c-0e7f-45c6-a7ab-4529289ac197-109994612401766568"
}</msg>
<status status="PASS" starttime="20230309 17:56:28.799" endtime="20230309 17:56:28.801"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:28.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:28.801" endtime="20230309 17:56:28.803"/>
</kw>
<status status="PASS" starttime="20230309 17:56:27.667" endtime="20230309 17:56:28.804"/>
</kw>
<msg timestamp="20230309 17:56:28.804" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:56:27.666" endtime="20230309 17:56:28.805"/>
</kw>
<msg timestamp="20230309 17:56:28.805" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-4412776365/copyrange/destination",
    "UploadId": "df2c243c-0e7f-45c6-a7ab-4529289ac197-109994612401766568"
}</msg>
<status status="PASS" starttime="20230309 17:56:27.663" endtime="20230309 17:56:28.806"/>
</kw>
<msg timestamp="20230309 17:56:28.807" level="INFO">${result} = {
    "Bucket": "link",
    "Key": "ozone-test-4412776365/copyrange/destination",
    "UploadId": "df2c243c-0e7f-45c6-a7ab-4529289ac197-109994612401766568"
}</msg>
<status status="PASS" starttime="20230309 17:56:27.660" endtime="20230309 17:56:28.807"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:28.814" level="INFO">Running command 'echo '{
    "Bucket": "link",
    "Key": "ozone-test-4412776365/copyrange/destination",
    "UploadId": "df2c243c-0e7f-45c6-a7ab-4529289ac197-109994612401766568"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:28.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:28.876" level="INFO">${output} = df2c243c-0e7f-45c6-a7ab-4529289ac197-109994612401766568</msg>
<status status="PASS" starttime="20230309 17:56:28.808" endtime="20230309 17:56:28.877"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:28.879" level="INFO">df2c243c-0e7f-45c6-a7ab-4529289ac197-109994612401766568</msg>
<status status="PASS" starttime="20230309 17:56:28.877" endtime="20230309 17:56:28.879"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:28.881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:28.879" endtime="20230309 17:56:28.881"/>
</kw>
<msg timestamp="20230309 17:56:28.881" level="INFO">${uploadID} = df2c243c-0e7f-45c6-a7ab-4529289ac197-109994612401766568</msg>
<status status="PASS" starttime="20230309 17:56:28.807" endtime="20230309 17:56:28.881"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:56:28.882" endtime="20230309 17:56:28.882"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:56:28.882" endtime="20230309 17:56:28.883"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:28.891" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket link --key ozone-test-4412776365/copyrange/source 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:29.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:29.958" level="INFO">${output} = {
    "LastModified": "Thu, 09 Mar 2023 17:56:27 GMT",
    "ContentLength": 10485760,
    "ETag": "2023-03-09T17:56:27.520Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
...</msg>
<status status="PASS" starttime="20230309 17:56:28.887" endtime="20230309 17:56:29.958"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:29.960" level="INFO">{
    "LastModified": "Thu, 09 Mar 2023 17:56:27 GMT",
    "ContentLength": 10485760,
    "ETag": "2023-03-09T17:56:27.520Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Thu, 09 Mar 2023 17:56:29 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230309 17:56:29.958" endtime="20230309 17:56:29.960"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:29.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:29.960" endtime="20230309 17:56:29.961"/>
</kw>
<status status="PASS" starttime="20230309 17:56:28.886" endtime="20230309 17:56:29.962"/>
</kw>
<msg timestamp="20230309 17:56:29.962" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:56:28.886" endtime="20230309 17:56:29.963"/>
</kw>
<msg timestamp="20230309 17:56:29.963" level="INFO">${output} = {
    "LastModified": "Thu, 09 Mar 2023 17:56:27 GMT",
    "ContentLength": 10485760,
    "ETag": "2023-03-09T17:56:27.520Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
...</msg>
<status status="PASS" starttime="20230309 17:56:28.884" endtime="20230309 17:56:29.963"/>
</kw>
<msg timestamp="20230309 17:56:29.964" level="INFO">${result} = {
    "LastModified": "Thu, 09 Mar 2023 17:56:27 GMT",
    "ContentLength": 10485760,
    "ETag": "2023-03-09T17:56:27.520Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
...</msg>
<status status="PASS" starttime="20230309 17:56:28.883" endtime="20230309 17:56:29.964"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${lastModified}</var>
<arg>echo '${result}' | jq -r '.LastModified'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:29.971" level="INFO">Running command 'echo '{
    "LastModified": "Thu, 09 Mar 2023 17:56:27 GMT",
    "ContentLength": 10485760,
    "ETag": "2023-03-09T17:56:27.520Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Thu, 09 Mar 2023 17:56:29 GMT",
    "Metadata": {}
}' | jq -r '.LastModified' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:30.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:30.034" level="INFO">${output} = Thu, 09 Mar 2023 17:56:27 GMT</msg>
<status status="PASS" starttime="20230309 17:56:29.966" endtime="20230309 17:56:30.034"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:30.037" level="INFO">Thu, 09 Mar 2023 17:56:27 GMT</msg>
<status status="PASS" starttime="20230309 17:56:30.036" endtime="20230309 17:56:30.038"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:30.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:30.038" endtime="20230309 17:56:30.039"/>
</kw>
<msg timestamp="20230309 17:56:30.040" level="INFO">${lastModified} = Thu, 09 Mar 2023 17:56:27 GMT</msg>
<status status="PASS" starttime="20230309 17:56:29.965" endtime="20230309 17:56:30.040"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${LastModified}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:56:30.041" endtime="20230309 17:56:30.042"/>
</kw>
<kw name="Convert Date" library="DateTime">
<var>${lmDate}</var>
<arg>${lastModified}</arg>
<arg>date_format=%a, %d %b %Y %H:%M:%S %Z</arg>
<doc>Converts between supported `date formats`.</doc>
<msg timestamp="20230309 17:56:30.048" level="INFO">${lmDate} = 2023-03-09 17:56:27.000</msg>
<status status="PASS" starttime="20230309 17:56:30.042" endtime="20230309 17:56:30.048"/>
</kw>
<kw name="Add Time To Date" library="DateTime">
<var>${afterCreate}</var>
<arg>${lmDate}</arg>
<arg>3 seconds</arg>
<doc>Adds time to date and returns the resulting date.</doc>
<msg timestamp="20230309 17:56:30.050" level="INFO">${afterCreate} = 2023-03-09 17:56:30.000</msg>
<status status="PASS" starttime="20230309 17:56:30.049" endtime="20230309 17:56:30.050"/>
</kw>
<kw name="Wait Til Date Past">
<arg>${afterCreate}</arg>
<kw name="Get Current Date" library="DateTime">
<var>${latestDate}</var>
<arg>UTC</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20230309 17:56:30.053" level="INFO">${latestDate} = 2023-03-09 17:56:30.052</msg>
<status status="PASS" starttime="20230309 17:56:30.052" endtime="20230309 17:56:30.053"/>
</kw>
<kw name="Subtract Date From Date" library="DateTime">
<var>${sleepSeconds}</var>
<arg>${date}</arg>
<arg>${latestDate}</arg>
<doc>Subtracts date from another date and returns time between.</doc>
<msg timestamp="20230309 17:56:30.054" level="INFO">${sleepSeconds} = -0.052</msg>
<status status="PASS" starttime="20230309 17:56:30.053" endtime="20230309 17:56:30.054"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${sleepSeconds} &gt; 0</arg>
<arg>Sleep</arg>
<arg>${sleepSeconds}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:56:30.055" endtime="20230309 17:56:30.055"/>
</kw>
<status status="PASS" starttime="20230309 17:56:30.051" endtime="20230309 17:56:30.056"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '${afterCreate}'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:30.067" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket link --key ozone-test-4412776365/copyrange/destination --upload-id df2c243c-0e7f-45c6-a7ab-4529289ac197-109994612401766568 --part-number 1 --copy-source link/ozone-test-4412776365/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '2023-03-09 17:56:30.000' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:31.169" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:56:31.169" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20230309 17:56:30.061" endtime="20230309 17:56:31.169"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:31.172" level="INFO">
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20230309 17:56:31.171" endtime="20230309 17:56:31.172"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:31.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:31.173" endtime="20230309 17:56:31.174"/>
</kw>
<msg timestamp="20230309 17:56:31.175" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20230309 17:56:30.059" endtime="20230309 17:56:31.175"/>
</kw>
<msg timestamp="20230309 17:56:31.177" level="INFO">${result} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20230309 17:56:30.056" endtime="20230309 17:56:31.177"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PreconditionFailed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:56:31.177" endtime="20230309 17:56:31.178"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '${beforeCreate}'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:31.187" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket link --key ozone-test-4412776365/copyrange/destination --upload-id df2c243c-0e7f-45c6-a7ab-4529289ac197-109994612401766568 --part-number 2 --copy-source link/ozone-test-4412776365/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '2023-03-08 17:56:26.087' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:32.170" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:56:32.171" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20230309 17:56:31.181" endtime="20230309 17:56:32.171"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:32.172" level="INFO">
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20230309 17:56:32.171" endtime="20230309 17:56:32.173"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:32.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:32.173" endtime="20230309 17:56:32.174"/>
</kw>
<msg timestamp="20230309 17:56:32.174" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20230309 17:56:31.180" endtime="20230309 17:56:32.174"/>
</kw>
<msg timestamp="20230309 17:56:32.175" level="INFO">${result} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20230309 17:56:31.178" endtime="20230309 17:56:32.175"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PreconditionFailed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:56:32.175" endtime="20230309 17:56:32.176"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '${beforeCreate}'</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:32.183" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket link --key ozone-test-4412776365/copyrange/destination --upload-id df2c243c-0e7f-45c6-a7ab-4529289ac197-109994612401766568 --part-number 1 --copy-source link/ozone-test-4412776365/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '2023-03-08 17:56:26.087' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:33.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:33.684" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-4412776365/copyrange/destination-df2c243c-0e7f-45c6-a7ab-4529289ac197-109994612401766568-1",
        "LastModified": "2023-0...</msg>
<status status="PASS" starttime="20230309 17:56:32.179" endtime="20230309 17:56:33.684"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:33.686" level="INFO">{
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-4412776365/copyrange/destination-df2c243c-0e7f-45c6-a7ab-4529289ac197-109994612401766568-1",
        "LastModified": "2023-03-09T17:56:33.583Z"
    }
}</msg>
<status status="PASS" starttime="20230309 17:56:33.684" endtime="20230309 17:56:33.686"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:33.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:33.687" endtime="20230309 17:56:33.687"/>
</kw>
<msg timestamp="20230309 17:56:33.688" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-4412776365/copyrange/destination-df2c243c-0e7f-45c6-a7ab-4529289ac197-109994612401766568-1",
        "LastModified": "2023-0...</msg>
<status status="PASS" starttime="20230309 17:56:32.178" endtime="20230309 17:56:33.688"/>
</kw>
<msg timestamp="20230309 17:56:33.689" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-4412776365/copyrange/destination-df2c243c-0e7f-45c6-a7ab-4529289ac197-109994612401766568-1",
        "LastModified": "2023-0...</msg>
<status status="PASS" starttime="20230309 17:56:32.176" endtime="20230309 17:56:33.689"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:56:33.689" endtime="20230309 17:56:33.689"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:56:33.690" endtime="20230309 17:56:33.690"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:33.698" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-4412776365/copyrange/destination-df2c243c-0e7f-45c6-a7ab-4529289ac197-109994612401766568-1",
        "LastModified": "2023-03-09T17:56:33.583Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:33.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:33.748" level="INFO">${output} = /legacy/source-bucket/ozone-test-4412776365/copyrange/destination-df2c243c-0e7f-45c6-a7ab-4529289ac197-109994612401766568-1</msg>
<status status="PASS" starttime="20230309 17:56:33.691" endtime="20230309 17:56:33.748"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:33.750" level="INFO">/legacy/source-bucket/ozone-test-4412776365/copyrange/destination-df2c243c-0e7f-45c6-a7ab-4529289ac197-109994612401766568-1</msg>
<status status="PASS" starttime="20230309 17:56:33.749" endtime="20230309 17:56:33.750"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:33.751" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:33.751" endtime="20230309 17:56:33.752"/>
</kw>
<msg timestamp="20230309 17:56:33.753" level="INFO">${eTag1} = /legacy/source-bucket/ozone-test-4412776365/copyrange/destination-df2c243c-0e7f-45c6-a7ab-4529289ac197-109994612401766568-1</msg>
<status status="PASS" starttime="20230309 17:56:33.690" endtime="20230309 17:56:33.753"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '${afterCreate}'</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:33.763" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket link --key ozone-test-4412776365/copyrange/destination --upload-id df2c243c-0e7f-45c6-a7ab-4529289ac197-109994612401766568 --part-number 2 --copy-source link/ozone-test-4412776365/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '2023-03-09 17:56:30.000' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:34.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:34.933" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-4412776365/copyrange/destination-df2c243c-0e7f-45c6-a7ab-4529289ac197-109994612401766568-2",
        "LastModified": "2023-0...</msg>
<status status="PASS" starttime="20230309 17:56:33.759" endtime="20230309 17:56:34.933"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:34.936" level="INFO">{
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-4412776365/copyrange/destination-df2c243c-0e7f-45c6-a7ab-4529289ac197-109994612401766568-2",
        "LastModified": "2023-03-09T17:56:34.831Z"
    }
}</msg>
<status status="PASS" starttime="20230309 17:56:34.934" endtime="20230309 17:56:34.936"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:34.937" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:34.936" endtime="20230309 17:56:34.937"/>
</kw>
<msg timestamp="20230309 17:56:34.939" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-4412776365/copyrange/destination-df2c243c-0e7f-45c6-a7ab-4529289ac197-109994612401766568-2",
        "LastModified": "2023-0...</msg>
<status status="PASS" starttime="20230309 17:56:33.758" endtime="20230309 17:56:34.939"/>
</kw>
<msg timestamp="20230309 17:56:34.940" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-4412776365/copyrange/destination-df2c243c-0e7f-45c6-a7ab-4529289ac197-109994612401766568-2",
        "LastModified": "2023-0...</msg>
<status status="PASS" starttime="20230309 17:56:33.755" endtime="20230309 17:56:34.940"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:56:34.940" endtime="20230309 17:56:34.940"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:56:34.941" endtime="20230309 17:56:34.941"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:34.947" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-4412776365/copyrange/destination-df2c243c-0e7f-45c6-a7ab-4529289ac197-109994612401766568-2",
        "LastModified": "2023-03-09T17:56:34.831Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:35.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:35.013" level="INFO">${output} = /legacy/source-bucket/ozone-test-4412776365/copyrange/destination-df2c243c-0e7f-45c6-a7ab-4529289ac197-109994612401766568-2</msg>
<status status="PASS" starttime="20230309 17:56:34.943" endtime="20230309 17:56:35.013"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:35.015" level="INFO">/legacy/source-bucket/ozone-test-4412776365/copyrange/destination-df2c243c-0e7f-45c6-a7ab-4529289ac197-109994612401766568-2</msg>
<status status="PASS" starttime="20230309 17:56:35.014" endtime="20230309 17:56:35.015"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:35.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:35.015" endtime="20230309 17:56:35.017"/>
</kw>
<msg timestamp="20230309 17:56:35.017" level="INFO">${eTag2} = /legacy/source-bucket/ozone-test-4412776365/copyrange/destination-df2c243c-0e7f-45c6-a7ab-4529289ac197-109994612401766568-2</msg>
<status status="PASS" starttime="20230309 17:56:34.941" endtime="20230309 17:56:35.018"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '${tomorrow}'</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:35.031" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket link --key ozone-test-4412776365/copyrange/destination --upload-id df2c243c-0e7f-45c6-a7ab-4529289ac197-109994612401766568 --part-number 1 --copy-source link/ozone-test-4412776365/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '2023-03-10 17:56:26.087' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:36.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:36.537" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-4412776365/copyrange/destination-df2c243c-0e7f-45c6-a7ab-4529289ac197-109994612401766568-1",
        "LastModified": "2023-0...</msg>
<status status="PASS" starttime="20230309 17:56:35.021" endtime="20230309 17:56:36.537"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:36.541" level="INFO">{
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-4412776365/copyrange/destination-df2c243c-0e7f-45c6-a7ab-4529289ac197-109994612401766568-1",
        "LastModified": "2023-03-09T17:56:36.411Z"
    }
}</msg>
<status status="PASS" starttime="20230309 17:56:36.539" endtime="20230309 17:56:36.541"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:36.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:36.542" endtime="20230309 17:56:36.546"/>
</kw>
<msg timestamp="20230309 17:56:36.546" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-4412776365/copyrange/destination-df2c243c-0e7f-45c6-a7ab-4529289ac197-109994612401766568-1",
        "LastModified": "2023-0...</msg>
<status status="PASS" starttime="20230309 17:56:35.020" endtime="20230309 17:56:36.546"/>
</kw>
<msg timestamp="20230309 17:56:36.549" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-4412776365/copyrange/destination-df2c243c-0e7f-45c6-a7ab-4529289ac197-109994612401766568-1",
        "LastModified": "2023-0...</msg>
<status status="PASS" starttime="20230309 17:56:35.018" endtime="20230309 17:56:36.549"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:56:36.549" endtime="20230309 17:56:36.549"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:56:36.550" endtime="20230309 17:56:36.550"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:36.555" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-4412776365/copyrange/destination-df2c243c-0e7f-45c6-a7ab-4529289ac197-109994612401766568-1",
        "LastModified": "2023-03-09T17:56:36.411Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:36.612" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:36.612" level="INFO">${output} = /legacy/source-bucket/ozone-test-4412776365/copyrange/destination-df2c243c-0e7f-45c6-a7ab-4529289ac197-109994612401766568-1</msg>
<status status="PASS" starttime="20230309 17:56:36.551" endtime="20230309 17:56:36.612"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:36.614" level="INFO">/legacy/source-bucket/ozone-test-4412776365/copyrange/destination-df2c243c-0e7f-45c6-a7ab-4529289ac197-109994612401766568-1</msg>
<status status="PASS" starttime="20230309 17:56:36.613" endtime="20230309 17:56:36.614"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:36.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:36.615" endtime="20230309 17:56:36.615"/>
</kw>
<msg timestamp="20230309 17:56:36.616" level="INFO">${eTag1} = /legacy/source-bucket/ozone-test-4412776365/copyrange/destination-df2c243c-0e7f-45c6-a7ab-4529289ac197-109994612401766568-1</msg>
<status status="PASS" starttime="20230309 17:56:36.551" endtime="20230309 17:56:36.616"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:36.627" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id df2c243c-0e7f-45c6-a7ab-4529289ac197-109994612401766568 --bucket link --key ozone-test-4412776365/copyrange/destination --multipart-upload 'Parts=[{ETag=/legacy/source-bucket/ozone-test-4412776365/copyrange/destination-df2c243c-0e7f-45c6-a7ab-4529289ac197-109994612401766568-1,PartNumber=1},{ETag=/legacy/source-bucket/ozone-test-4412776365/copyrange/destination-df2c243c-0e7f-45c6-a7ab-4529289ac197-109994612401766568-2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:37.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:37.640" level="INFO">${output} = {
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-4412776365/copyrange/destination",
    "ETag": "242912bba0a6bfde89f9f638a8ac96becc8abb8f8eff54acb5f4d4e19a57565e"
}</msg>
<status status="PASS" starttime="20230309 17:56:36.621" endtime="20230309 17:56:37.640"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:37.642" level="INFO">{
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-4412776365/copyrange/destination",
    "ETag": "242912bba0a6bfde89f9f638a8ac96becc8abb8f8eff54acb5f4d4e19a57565e"
}</msg>
<status status="PASS" starttime="20230309 17:56:37.641" endtime="20230309 17:56:37.642"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:37.643" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:37.643" endtime="20230309 17:56:37.643"/>
</kw>
<status status="PASS" starttime="20230309 17:56:36.620" endtime="20230309 17:56:37.644"/>
</kw>
<msg timestamp="20230309 17:56:37.644" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:56:36.619" endtime="20230309 17:56:37.645"/>
</kw>
<msg timestamp="20230309 17:56:37.645" level="INFO">${output} = {
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-4412776365/copyrange/destination",
    "ETag": "242912bba0a6bfde89f9f638a8ac96becc8abb8f8eff54acb5f4d4e19a57565e"
}</msg>
<status status="PASS" starttime="20230309 17:56:36.618" endtime="20230309 17:56:37.645"/>
</kw>
<status status="PASS" starttime="20230309 17:56:36.617" endtime="20230309 17:56:37.646"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination /tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:37.657" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-4412776365/copyrange/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:39.582" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:39.582" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:56:37 GMT",
    "ContentLength": 10485760,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "E...</msg>
<status status="PASS" starttime="20230309 17:56:37.651" endtime="20230309 17:56:39.582"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:39.583" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:56:37 GMT",
    "ContentLength": 10485760,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 09 Mar 2023 17:56:38 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230309 17:56:39.583" endtime="20230309 17:56:39.584"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:39.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:39.584" endtime="20230309 17:56:39.591"/>
</kw>
<status status="PASS" starttime="20230309 17:56:37.650" endtime="20230309 17:56:39.591"/>
</kw>
<msg timestamp="20230309 17:56:39.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:56:37.650" endtime="20230309 17:56:39.592"/>
</kw>
<msg timestamp="20230309 17:56:39.592" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:56:37 GMT",
    "ContentLength": 10485760,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "E...</msg>
<status status="PASS" starttime="20230309 17:56:37.647" endtime="20230309 17:56:39.593"/>
</kw>
<status status="PASS" starttime="20230309 17:56:37.647" endtime="20230309 17:56:39.593"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:39.602" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:39.643" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:39.643" level="INFO">${output} = 3e726aff3be5062515725024170a198a</msg>
<status status="PASS" starttime="20230309 17:56:39.598" endtime="20230309 17:56:39.643"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:39.646" level="INFO">3e726aff3be5062515725024170a198a</msg>
<status status="PASS" starttime="20230309 17:56:39.645" endtime="20230309 17:56:39.646"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:39.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:39.646" endtime="20230309 17:56:39.650"/>
</kw>
<status status="PASS" starttime="20230309 17:56:39.597" endtime="20230309 17:56:39.651"/>
</kw>
<msg timestamp="20230309 17:56:39.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:56:39.596" endtime="20230309 17:56:39.652"/>
</kw>
<msg timestamp="20230309 17:56:39.652" level="INFO">${checksumbefore} = 3e726aff3be5062515725024170a198a</msg>
<status status="PASS" starttime="20230309 17:56:39.595" endtime="20230309 17:56:39.652"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:39.660" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:39.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:39.709" level="INFO">${output} = 3e726aff3be5062515725024170a198a</msg>
<status status="PASS" starttime="20230309 17:56:39.656" endtime="20230309 17:56:39.709"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:39.711" level="INFO">3e726aff3be5062515725024170a198a</msg>
<status status="PASS" starttime="20230309 17:56:39.709" endtime="20230309 17:56:39.711"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:39.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:39.711" endtime="20230309 17:56:39.713"/>
</kw>
<status status="PASS" starttime="20230309 17:56:39.655" endtime="20230309 17:56:39.713"/>
</kw>
<msg timestamp="20230309 17:56:39.713" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:56:39.654" endtime="20230309 17:56:39.714"/>
</kw>
<msg timestamp="20230309 17:56:39.715" level="INFO">${checksumafter} = 3e726aff3be5062515725024170a198a</msg>
<status status="PASS" starttime="20230309 17:56:39.653" endtime="20230309 17:56:39.715"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 17:56:39.715" endtime="20230309 17:56:39.716"/>
</kw>
<status status="PASS" starttime="20230309 17:56:39.593" endtime="20230309 17:56:39.717"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:56:25.976" endtime="20230309 17:56:39.717"/>
</test>
<test id="s1-s6-s7-t14" name="Test Multipart Upload list" line="355">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:56:39.723" level="INFO">${randStr} = 4129229280</msg>
<status status="PASS" starttime="20230309 17:56:39.722" endtime="20230309 17:56:39.723"/>
</kw>
<msg timestamp="20230309 17:56:39.724" level="INFO">${random} = ozone-test-4129229280</msg>
<status status="PASS" starttime="20230309 17:56:39.721" endtime="20230309 17:56:39.724"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:56:39.725" level="INFO">${PREFIX} = ozone-test-4129229280</msg>
<status status="PASS" starttime="20230309 17:56:39.724" endtime="20230309 17:56:39.725"/>
</kw>
<status status="PASS" starttime="20230309 17:56:39.721" endtime="20230309 17:56:39.725"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/listtest/key1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:39.733" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key ozone-test-4129229280/listtest/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:40.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:40.851" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-4129229280/listtest/key1",
    "UploadId": "da19c4e2-145b-4ff1-b069-48e8234f4bfe-109994613193506990"
}</msg>
<status status="PASS" starttime="20230309 17:56:39.729" endtime="20230309 17:56:40.851"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:40.853" level="INFO">{
    "Bucket": "link",
    "Key": "ozone-test-4129229280/listtest/key1",
    "UploadId": "da19c4e2-145b-4ff1-b069-48e8234f4bfe-109994613193506990"
}</msg>
<status status="PASS" starttime="20230309 17:56:40.852" endtime="20230309 17:56:40.854"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:40.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:40.854" endtime="20230309 17:56:40.855"/>
</kw>
<status status="PASS" starttime="20230309 17:56:39.728" endtime="20230309 17:56:40.855"/>
</kw>
<msg timestamp="20230309 17:56:40.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:56:39.727" endtime="20230309 17:56:40.856"/>
</kw>
<msg timestamp="20230309 17:56:40.857" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-4129229280/listtest/key1",
    "UploadId": "da19c4e2-145b-4ff1-b069-48e8234f4bfe-109994613193506990"
}</msg>
<status status="PASS" starttime="20230309 17:56:39.726" endtime="20230309 17:56:40.857"/>
</kw>
<msg timestamp="20230309 17:56:40.857" level="INFO">${result} = {
    "Bucket": "link",
    "Key": "ozone-test-4129229280/listtest/key1",
    "UploadId": "da19c4e2-145b-4ff1-b069-48e8234f4bfe-109994613193506990"
}</msg>
<status status="PASS" starttime="20230309 17:56:39.725" endtime="20230309 17:56:40.857"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID1}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:40.862" level="INFO">Running command 'echo '{
    "Bucket": "link",
    "Key": "ozone-test-4129229280/listtest/key1",
    "UploadId": "da19c4e2-145b-4ff1-b069-48e8234f4bfe-109994613193506990"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:40.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:40.928" level="INFO">${output} = da19c4e2-145b-4ff1-b069-48e8234f4bfe-109994613193506990</msg>
<status status="PASS" starttime="20230309 17:56:40.858" endtime="20230309 17:56:40.928"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:40.929" level="INFO">da19c4e2-145b-4ff1-b069-48e8234f4bfe-109994613193506990</msg>
<status status="PASS" starttime="20230309 17:56:40.928" endtime="20230309 17:56:40.930"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:40.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:40.930" endtime="20230309 17:56:40.930"/>
</kw>
<msg timestamp="20230309 17:56:40.931" level="INFO">${uploadID1} = da19c4e2-145b-4ff1-b069-48e8234f4bfe-109994613193506990</msg>
<status status="PASS" starttime="20230309 17:56:40.857" endtime="20230309 17:56:40.931"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:56:40.931" endtime="20230309 17:56:40.932"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/listtest/key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:56:40.932" endtime="20230309 17:56:40.932"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:56:40.933" endtime="20230309 17:56:40.933"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/listtest/key2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:40.944" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key ozone-test-4129229280/listtest/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:41.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:41.920" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-4129229280/listtest/key2",
    "UploadId": "0b62eacd-13ca-4b8b-9253-413d5aaab8d4-109994613264351407"
}</msg>
<status status="PASS" starttime="20230309 17:56:40.940" endtime="20230309 17:56:41.920"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:41.922" level="INFO">{
    "Bucket": "link",
    "Key": "ozone-test-4129229280/listtest/key2",
    "UploadId": "0b62eacd-13ca-4b8b-9253-413d5aaab8d4-109994613264351407"
}</msg>
<status status="PASS" starttime="20230309 17:56:41.921" endtime="20230309 17:56:41.922"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:41.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:41.923" endtime="20230309 17:56:41.924"/>
</kw>
<status status="PASS" starttime="20230309 17:56:40.936" endtime="20230309 17:56:41.925"/>
</kw>
<msg timestamp="20230309 17:56:41.925" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:56:40.936" endtime="20230309 17:56:41.926"/>
</kw>
<msg timestamp="20230309 17:56:41.926" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-4129229280/listtest/key2",
    "UploadId": "0b62eacd-13ca-4b8b-9253-413d5aaab8d4-109994613264351407"
}</msg>
<status status="PASS" starttime="20230309 17:56:40.935" endtime="20230309 17:56:41.926"/>
</kw>
<msg timestamp="20230309 17:56:41.927" level="INFO">${result} = {
    "Bucket": "link",
    "Key": "ozone-test-4129229280/listtest/key2",
    "UploadId": "0b62eacd-13ca-4b8b-9253-413d5aaab8d4-109994613264351407"
}</msg>
<status status="PASS" starttime="20230309 17:56:40.933" endtime="20230309 17:56:41.927"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID2}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:41.931" level="INFO">Running command 'echo '{
    "Bucket": "link",
    "Key": "ozone-test-4129229280/listtest/key2",
    "UploadId": "0b62eacd-13ca-4b8b-9253-413d5aaab8d4-109994613264351407"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:41.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:41.999" level="INFO">${output} = 0b62eacd-13ca-4b8b-9253-413d5aaab8d4-109994613264351407</msg>
<status status="PASS" starttime="20230309 17:56:41.928" endtime="20230309 17:56:41.999"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:42.002" level="INFO">0b62eacd-13ca-4b8b-9253-413d5aaab8d4-109994613264351407</msg>
<status status="PASS" starttime="20230309 17:56:42.000" endtime="20230309 17:56:42.002"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:42.003" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:42.002" endtime="20230309 17:56:42.003"/>
</kw>
<msg timestamp="20230309 17:56:42.003" level="INFO">${uploadID2} = 0b62eacd-13ca-4b8b-9253-413d5aaab8d4-109994613264351407</msg>
<status status="PASS" starttime="20230309 17:56:41.927" endtime="20230309 17:56:42.004"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:56:42.004" endtime="20230309 17:56:42.005"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/listtest/key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:56:42.005" endtime="20230309 17:56:42.006"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:56:42.006" endtime="20230309 17:56:42.007"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-multipart-uploads --bucket ${BUCKET} --prefix ${PREFIX}/listtest</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:42.014" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-multipart-uploads --bucket link --prefix ozone-test-4129229280/listtest 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:43.076" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:43.077" level="INFO">${output} = {
    "Uploads": [
        {
            "UploadId": "da19c4e2-145b-4ff1-b069-48e8234f4bfe-109994613193506990",
            "Key": "ozone-test-4129229280/listtest/key1",
            "Initiated": "2023...</msg>
<status status="PASS" starttime="20230309 17:56:42.010" endtime="20230309 17:56:43.078"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:43.079" level="INFO">{
    "Uploads": [
        {
            "UploadId": "da19c4e2-145b-4ff1-b069-48e8234f4bfe-109994613193506990",
            "Key": "ozone-test-4129229280/listtest/key1",
            "Initiated": "2023-03-09T17:56:40.731Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0b62eacd-13ca-4b8b-9253-413d5aaab8d4-109994613264351407",
            "Key": "ozone-test-4129229280/listtest/key2",
            "Initiated": "2023-03-09T17:56:41.812Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        }
    ]
}</msg>
<status status="PASS" starttime="20230309 17:56:43.078" endtime="20230309 17:56:43.079"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:43.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:43.080" endtime="20230309 17:56:43.082"/>
</kw>
<status status="PASS" starttime="20230309 17:56:42.009" endtime="20230309 17:56:43.082"/>
</kw>
<msg timestamp="20230309 17:56:43.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:56:42.009" endtime="20230309 17:56:43.083"/>
</kw>
<msg timestamp="20230309 17:56:43.084" level="INFO">${output} = {
    "Uploads": [
        {
            "UploadId": "da19c4e2-145b-4ff1-b069-48e8234f4bfe-109994613193506990",
            "Key": "ozone-test-4129229280/listtest/key1",
            "Initiated": "2023...</msg>
<status status="PASS" starttime="20230309 17:56:42.008" endtime="20230309 17:56:43.084"/>
</kw>
<msg timestamp="20230309 17:56:43.084" level="INFO">${result} = {
    "Uploads": [
        {
            "UploadId": "da19c4e2-145b-4ff1-b069-48e8234f4bfe-109994613193506990",
            "Key": "ozone-test-4129229280/listtest/key1",
            "Initiated": "2023...</msg>
<status status="PASS" starttime="20230309 17:56:42.007" endtime="20230309 17:56:43.084"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${uploadID1}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:56:43.085" endtime="20230309 17:56:43.085"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${uploadID2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:56:43.086" endtime="20230309 17:56:43.087"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${count}</var>
<arg>echo '${result}' | jq -r '.Uploads | length'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:43.092" level="INFO">Running command 'echo '{
    "Uploads": [
        {
            "UploadId": "da19c4e2-145b-4ff1-b069-48e8234f4bfe-109994613193506990",
            "Key": "ozone-test-4129229280/listtest/key1",
            "Initiated": "2023-03-09T17:56:40.731Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0b62eacd-13ca-4b8b-9253-413d5aaab8d4-109994613264351407",
            "Key": "ozone-test-4129229280/listtest/key2",
            "Initiated": "2023-03-09T17:56:41.812Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        }
    ]
}' | jq -r '.Uploads | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:43.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:43.162" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20230309 17:56:43.088" endtime="20230309 17:56:43.162"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:43.164" level="INFO">2</msg>
<status status="PASS" starttime="20230309 17:56:43.163" endtime="20230309 17:56:43.165"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:43.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:43.165" endtime="20230309 17:56:43.166"/>
</kw>
<msg timestamp="20230309 17:56:43.168" level="INFO">${count} = 2</msg>
<status status="PASS" starttime="20230309 17:56:43.088" endtime="20230309 17:56:43.169"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${count}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 17:56:43.169" endtime="20230309 17:56:43.172"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:56:39.719" endtime="20230309 17:56:43.172"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20230309 17:54:50.178" endtime="20230309 17:56:43.177"/>
</suite>
<suite id="s1-s6-s8" name="Objectcopy" source="/opt/hadoop/smoketest/s3/objectcopy.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:56:43.209" level="INFO">${randStr} = 9587943948</msg>
<status status="PASS" starttime="20230309 17:56:43.207" endtime="20230309 17:56:43.209"/>
</kw>
<msg timestamp="20230309 17:56:43.209" level="INFO">${random} = ozone-test-9587943948</msg>
<status status="PASS" starttime="20230309 17:56:43.206" endtime="20230309 17:56:43.209"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:56:43.212" level="INFO">${PREFIX} = ozone-test-9587943948</msg>
<status status="PASS" starttime="20230309 17:56:43.209" endtime="20230309 17:56:43.212"/>
</kw>
<status status="PASS" starttime="20230309 17:56:43.206" endtime="20230309 17:56:43.213"/>
</kw>
<status status="PASS" starttime="20230309 17:56:43.205" endtime="20230309 17:56:43.213"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which aws</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:43.218" level="INFO">Running command 'which aws 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:43.224" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:43.224" level="INFO">${output} = /usr/local/bin/aws</msg>
<status status="PASS" starttime="20230309 17:56:43.214" endtime="20230309 17:56:43.224"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230309 17:56:43.225" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:56:43.224" endtime="20230309 17:56:43.226"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20230309 17:56:43.226" endtime="20230309 17:56:43.226"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230309 17:56:43.226" endtime="20230309 17:56:43.226"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20230309 17:56:43.226" endtime="20230309 17:56:43.227"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230309 17:56:43.227" endtime="20230309 17:56:43.227"/>
</kw>
<status status="PASS" starttime="20230309 17:56:43.214" endtime="20230309 17:56:43.228"/>
</kw>
<status status="PASS" starttime="20230309 17:56:43.214" endtime="20230309 17:56:43.228"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:43.244" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:43.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:43.251" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230309 17:56:43.240" endtime="20230309 17:56:43.251"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:43.254" level="INFO">s3g</msg>
<status status="PASS" starttime="20230309 17:56:43.252" endtime="20230309 17:56:43.254"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:43.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:43.255" endtime="20230309 17:56:43.256"/>
</kw>
<status status="PASS" starttime="20230309 17:56:43.239" endtime="20230309 17:56:43.257"/>
</kw>
<msg timestamp="20230309 17:56:43.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:56:43.238" endtime="20230309 17:56:43.258"/>
</kw>
<msg timestamp="20230309 17:56:43.259" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230309 17:56:43.237" endtime="20230309 17:56:43.259"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:56:43.264" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:56:43.260" endtime="20230309 17:56:43.264"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:43.274" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:43.329" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:43.330" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:56:43.270" endtime="20230309 17:56:43.330"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:43.332" level="INFO"/>
<status status="PASS" starttime="20230309 17:56:43.331" endtime="20230309 17:56:43.332"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:43.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:43.333" endtime="20230309 17:56:43.333"/>
</kw>
<status status="PASS" starttime="20230309 17:56:43.268" endtime="20230309 17:56:43.334"/>
</kw>
<msg timestamp="20230309 17:56:43.334" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:56:43.267" endtime="20230309 17:56:43.336"/>
</kw>
<status status="PASS" starttime="20230309 17:56:43.266" endtime="20230309 17:56:43.336"/>
</kw>
<status status="PASS" starttime="20230309 17:56:43.265" endtime="20230309 17:56:43.336"/>
</kw>
<status status="PASS" starttime="20230309 17:56:43.236" endtime="20230309 17:56:43.337"/>
</kw>
<status status="PASS" starttime="20230309 17:56:43.235" endtime="20230309 17:56:43.337"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:43.351" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:51.991" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:51.991" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:56:43.343" endtime="20230309 17:56:51.991"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:51.993" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:56:51.992" endtime="20230309 17:56:51.993"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:51.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:51.994" endtime="20230309 17:56:51.994"/>
</kw>
<status status="PASS" starttime="20230309 17:56:43.343" endtime="20230309 17:56:51.995"/>
</kw>
<msg timestamp="20230309 17:56:51.995" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:56:43.342" endtime="20230309 17:56:51.996"/>
</kw>
<msg timestamp="20230309 17:56:51.996" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:56:43.340" endtime="20230309 17:56:51.996"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230309 17:56:51.997" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230309 17:56:51.997" endtime="20230309 17:56:51.997"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20230309 17:56:51.999" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230309 17:56:51.998" endtime="20230309 17:56:51.999"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230309 17:56:51.999" level="INFO">${secret} = ['15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670']</msg>
<status status="PASS" starttime="20230309 17:56:51.999" endtime="20230309 17:56:51.999"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:56:52.002" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:56:52.000" endtime="20230309 17:56:52.002"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:56:52.003" level="INFO">${secret} = 15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:56:52.002" endtime="20230309 17:56:52.003"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:52.009" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:52.868" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:52.868" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:56:52.005" endtime="20230309 17:56:52.868"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:52.870" level="INFO"/>
<status status="PASS" starttime="20230309 17:56:52.868" endtime="20230309 17:56:52.870"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:52.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:52.870" endtime="20230309 17:56:52.871"/>
</kw>
<status status="PASS" starttime="20230309 17:56:52.004" endtime="20230309 17:56:52.871"/>
</kw>
<msg timestamp="20230309 17:56:52.871" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:56:52.004" endtime="20230309 17:56:52.873"/>
</kw>
<status status="PASS" starttime="20230309 17:56:52.003" endtime="20230309 17:56:52.873"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:52.880" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:53.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:53.728" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:56:52.876" endtime="20230309 17:56:53.728"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:53.730" level="INFO"/>
<status status="PASS" starttime="20230309 17:56:53.729" endtime="20230309 17:56:53.730"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:53.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:53.730" endtime="20230309 17:56:53.731"/>
</kw>
<status status="PASS" starttime="20230309 17:56:52.875" endtime="20230309 17:56:53.732"/>
</kw>
<msg timestamp="20230309 17:56:53.732" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:56:52.875" endtime="20230309 17:56:53.733"/>
</kw>
<status status="PASS" starttime="20230309 17:56:52.874" endtime="20230309 17:56:53.733"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:53.739" level="INFO">Running command 'aws configure set aws_secret_access_key 15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:54.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:54.555" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:56:53.735" endtime="20230309 17:56:54.555"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:54.559" level="INFO"/>
<status status="PASS" starttime="20230309 17:56:54.557" endtime="20230309 17:56:54.559"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:54.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:54.559" endtime="20230309 17:56:54.561"/>
</kw>
<status status="PASS" starttime="20230309 17:56:53.734" endtime="20230309 17:56:54.561"/>
</kw>
<msg timestamp="20230309 17:56:54.561" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:56:53.734" endtime="20230309 17:56:54.563"/>
</kw>
<status status="PASS" starttime="20230309 17:56:53.733" endtime="20230309 17:56:54.563"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:54.571" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:56:55.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:56:55.441" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:56:54.567" endtime="20230309 17:56:55.441"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:56:55.443" level="INFO"/>
<status status="PASS" starttime="20230309 17:56:55.442" endtime="20230309 17:56:55.443"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:56:55.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:56:55.444" endtime="20230309 17:56:55.444"/>
</kw>
<status status="PASS" starttime="20230309 17:56:54.565" endtime="20230309 17:56:55.445"/>
</kw>
<msg timestamp="20230309 17:56:55.445" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:56:54.564" endtime="20230309 17:56:55.449"/>
</kw>
<status status="PASS" starttime="20230309 17:56:54.564" endtime="20230309 17:56:55.451"/>
</kw>
<status status="PASS" starttime="20230309 17:56:43.339" endtime="20230309 17:56:55.451"/>
</kw>
<status status="PASS" starttime="20230309 17:56:43.338" endtime="20230309 17:56:55.451"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:56:55.451" endtime="20230309 17:56:55.452"/>
</kw>
<status status="PASS" starttime="20230309 17:56:43.229" endtime="20230309 17:56:55.452"/>
</kw>
<status status="PASS" starttime="20230309 17:56:43.228" endtime="20230309 17:56:55.453"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230309 17:56:55.455" endtime="20230309 17:56:55.455"/>
</kw>
<msg timestamp="20230309 17:56:55.456" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20230309 17:56:55.454" endtime="20230309 17:56:55.456"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:56:55.457" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20230309 17:56:55.456" endtime="20230309 17:56:55.457"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup links for S3 tests" library="commonawslib">
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:56:55.463" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/link 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:57:07.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:57:07.252" level="INFO">${output} = {
  "volumeName" : "s3v",
  "bucketName" : "link",
  "sourceVolume" : "legacy",
  "sourceBucket" : "source-bucket",
  "creationTime" : "2023-03-09T17:51:22.562Z",
  "modificationTime" : "2023-03-09T17...</msg>
<status status="PASS" starttime="20230309 17:56:55.460" endtime="20230309 17:57:07.252"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:57:07.252" endtime="20230309 17:57:07.253"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:57:07.254" endtime="20230309 17:57:07.254"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:57:07.254" endtime="20230309 17:57:07.255"/>
</kw>
<msg timestamp="20230309 17:57:07.256" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20230309 17:56:55.459" endtime="20230309 17:57:07.256"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230309 17:57:07.256" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:57:07.256" endtime="20230309 17:57:07.257"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://${OM_SERVICE_ID}/legacy</arg>
<status status="NOT RUN" starttime="20230309 17:57:07.257" endtime="20230309 17:57:07.257"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create o3://${OM_SERVICE_ID}/legacy/source-bucket</arg>
<status status="NOT RUN" starttime="20230309 17:57:07.259" endtime="20230309 17:57:07.259"/>
</kw>
<kw name="Create link" library="commonawslib">
<arg>link</arg>
<status status="NOT RUN" starttime="20230309 17:57:07.260" endtime="20230309 17:57:07.260"/>
</kw>
<status status="PASS" starttime="20230309 17:56:55.458" endtime="20230309 17:57:07.260"/>
</kw>
<status status="PASS" starttime="20230309 17:56:55.457" endtime="20230309 17:57:07.260"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:57:07.260" endtime="20230309 17:57:07.261"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:57:07.261" endtime="20230309 17:57:07.262"/>
</kw>
<status status="PASS" starttime="20230309 17:56:43.204" endtime="20230309 17:57:07.263"/>
</kw>
<test id="s1-s6-s8-t1" name="Copy Object Happy Scenario" line="37">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${DESTBUCKET}' == 'generated1'</arg>
<arg>Create Dest Bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create Dest Bucket">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:57:07.268" level="INFO">${postfix} = 33238</msg>
<status status="PASS" starttime="20230309 17:57:07.268" endtime="20230309 17:57:07.268"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${DESTBUCKET}</arg>
<arg>destbucket-${postfix}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:57:07.269" level="INFO">${DESTBUCKET} = destbucket-33238</msg>
<status status="PASS" starttime="20230309 17:57:07.269" endtime="20230309 17:57:07.269"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>create-bucket --bucket ${DESTBUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:57:07.278" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket destbucket-33238 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:57:08.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:57:08.279" level="INFO">${output} = {
    "Location": "http://s3g:9878/destbucket-33238"
}</msg>
<status status="PASS" starttime="20230309 17:57:07.274" endtime="20230309 17:57:08.279"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:57:08.282" level="INFO">{
    "Location": "http://s3g:9878/destbucket-33238"
}</msg>
<status status="PASS" starttime="20230309 17:57:08.280" endtime="20230309 17:57:08.282"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:57:08.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:57:08.282" endtime="20230309 17:57:08.283"/>
</kw>
<status status="PASS" starttime="20230309 17:57:07.272" endtime="20230309 17:57:08.284"/>
</kw>
<msg timestamp="20230309 17:57:08.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:57:07.271" endtime="20230309 17:57:08.285"/>
</kw>
<msg timestamp="20230309 17:57:08.285" level="INFO">${output} = {
    "Location": "http://s3g:9878/destbucket-33238"
}</msg>
<status status="PASS" starttime="20230309 17:57:07.270" endtime="20230309 17:57:08.285"/>
</kw>
<status status="PASS" starttime="20230309 17:57:07.269" endtime="20230309 17:57:08.286"/>
</kw>
<status status="PASS" starttime="20230309 17:57:07.267" endtime="20230309 17:57:08.286"/>
</kw>
<status status="PASS" starttime="20230309 17:57:07.267" endtime="20230309 17:57:08.286"/>
</kw>
<kw name="Execute" library="os">
<arg>date &gt; /tmp/copyfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:57:08.292" level="INFO">Running command 'date &gt; /tmp/copyfile'.</msg>
<msg timestamp="20230309 17:57:08.299" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:57:08.299" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:57:08.288" endtime="20230309 17:57:08.299"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:57:08.301" level="INFO"/>
<status status="PASS" starttime="20230309 17:57:08.300" endtime="20230309 17:57:08.301"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:57:08.302" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:57:08.301" endtime="20230309 17:57:08.302"/>
</kw>
<status status="PASS" starttime="20230309 17:57:08.287" endtime="20230309 17:57:08.303"/>
</kw>
<msg timestamp="20230309 17:57:08.304" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:57:08.287" endtime="20230309 17:57:08.304"/>
</kw>
<status status="PASS" starttime="20230309 17:57:08.286" endtime="20230309 17:57:08.305"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyobject/key=value/f1 --body /tmp/copyfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:57:08.313" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key ozone-test-9587943948/copyobject/key=value/f1 --body /tmp/copyfile 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:57:09.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:57:09.405" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:57:08.310" endtime="20230309 17:57:09.405"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:57:09.408" level="INFO"/>
<status status="PASS" starttime="20230309 17:57:09.407" endtime="20230309 17:57:09.408"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:57:09.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:57:09.408" endtime="20230309 17:57:09.409"/>
</kw>
<status status="PASS" starttime="20230309 17:57:08.309" endtime="20230309 17:57:09.409"/>
</kw>
<msg timestamp="20230309 17:57:09.410" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:57:08.308" endtime="20230309 17:57:09.410"/>
</kw>
<msg timestamp="20230309 17:57:09.411" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:57:08.306" endtime="20230309 17:57:09.411"/>
</kw>
<msg timestamp="20230309 17:57:09.411" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 17:57:08.305" endtime="20230309 17:57:09.411"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/copyobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:57:09.419" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket link --prefix ozone-test-9587943948/copyobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:57:10.571" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:57:10.571" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-9587943948/copyobject/key=value/f1",
            "LastModified": "2023-03-09T17:57:09.307Z",
            "ETag": "2023-03-09T17:57:09.307Z"...</msg>
<status status="PASS" starttime="20230309 17:57:09.415" endtime="20230309 17:57:10.571"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:57:10.573" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-9587943948/copyobject/key=value/f1",
            "LastModified": "2023-03-09T17:57:09.307Z",
            "ETag": "2023-03-09T17:57:09.307Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20230309 17:57:10.572" endtime="20230309 17:57:10.574"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:57:10.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:57:10.574" endtime="20230309 17:57:10.575"/>
</kw>
<status status="PASS" starttime="20230309 17:57:09.414" endtime="20230309 17:57:10.575"/>
</kw>
<msg timestamp="20230309 17:57:10.575" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:57:09.414" endtime="20230309 17:57:10.576"/>
</kw>
<msg timestamp="20230309 17:57:10.577" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-9587943948/copyobject/key=value/f1",
            "LastModified": "2023-03-09T17:57:09.307Z",
            "ETag": "2023-03-09T17:57:09.307Z"...</msg>
<status status="PASS" starttime="20230309 17:57:09.413" endtime="20230309 17:57:10.577"/>
</kw>
<msg timestamp="20230309 17:57:10.578" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-9587943948/copyobject/key=value/f1",
            "LastModified": "2023-03-09T17:57:09.307Z",
            "ETag": "2023-03-09T17:57:09.307Z"...</msg>
<status status="PASS" starttime="20230309 17:57:09.411" endtime="20230309 17:57:10.578"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:57:10.579" endtime="20230309 17:57:10.579"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:57:10.588" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-33238 --key ozone-test-9587943948/copyobject/key=value/f1 --copy-source link/ozone-test-9587943948/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:57:11.817" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:57:11.817" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "beb548db-39e6-4c1d-8902-27b8872f99cf",
        "LastModified": "2023-03-09T17:57:11.642Z"
    }
}</msg>
<status status="PASS" starttime="20230309 17:57:10.585" endtime="20230309 17:57:11.817"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:57:11.819" level="INFO">{
    "CopyObjectResult": {
        "ETag": "beb548db-39e6-4c1d-8902-27b8872f99cf",
        "LastModified": "2023-03-09T17:57:11.642Z"
    }
}</msg>
<status status="PASS" starttime="20230309 17:57:11.818" endtime="20230309 17:57:11.819"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:57:11.821" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:57:11.820" endtime="20230309 17:57:11.821"/>
</kw>
<status status="PASS" starttime="20230309 17:57:10.583" endtime="20230309 17:57:11.821"/>
</kw>
<msg timestamp="20230309 17:57:11.821" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:57:10.582" endtime="20230309 17:57:11.822"/>
</kw>
<msg timestamp="20230309 17:57:11.823" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "beb548db-39e6-4c1d-8902-27b8872f99cf",
        "LastModified": "2023-03-09T17:57:11.642Z"
    }
}</msg>
<status status="PASS" starttime="20230309 17:57:10.581" endtime="20230309 17:57:11.823"/>
</kw>
<msg timestamp="20230309 17:57:11.823" level="INFO">${result} = {
    "CopyObjectResult": {
        "ETag": "beb548db-39e6-4c1d-8902-27b8872f99cf",
        "LastModified": "2023-03-09T17:57:11.642Z"
    }
}</msg>
<status status="PASS" starttime="20230309 17:57:10.580" endtime="20230309 17:57:11.823"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${DESTBUCKET} --prefix ${PREFIX}/copyobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:57:11.831" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket destbucket-33238 --prefix ozone-test-9587943948/copyobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:57:12.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:57:12.858" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-9587943948/copyobject/key=value/f1",
            "LastModified": "2023-03-09T17:57:11.642Z",
            "ETag": "2023-03-09T17:57:11.642Z"...</msg>
<status status="PASS" starttime="20230309 17:57:11.828" endtime="20230309 17:57:12.858"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:57:12.860" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-9587943948/copyobject/key=value/f1",
            "LastModified": "2023-03-09T17:57:11.642Z",
            "ETag": "2023-03-09T17:57:11.642Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20230309 17:57:12.859" endtime="20230309 17:57:12.861"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:57:12.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:57:12.861" endtime="20230309 17:57:12.862"/>
</kw>
<status status="PASS" starttime="20230309 17:57:11.827" endtime="20230309 17:57:12.862"/>
</kw>
<msg timestamp="20230309 17:57:12.862" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:57:11.826" endtime="20230309 17:57:12.863"/>
</kw>
<msg timestamp="20230309 17:57:12.863" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-9587943948/copyobject/key=value/f1",
            "LastModified": "2023-03-09T17:57:11.642Z",
            "ETag": "2023-03-09T17:57:11.642Z"...</msg>
<status status="PASS" starttime="20230309 17:57:11.825" endtime="20230309 17:57:12.863"/>
</kw>
<msg timestamp="20230309 17:57:12.864" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-9587943948/copyobject/key=value/f1",
            "LastModified": "2023-03-09T17:57:11.642Z",
            "ETag": "2023-03-09T17:57:11.642Z"...</msg>
<status status="PASS" starttime="20230309 17:57:11.824" endtime="20230309 17:57:12.864"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:57:12.864" endtime="20230309 17:57:12.865"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:57:12.872" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-33238 --key ozone-test-9587943948/copyobject/key=value/f1 --copy-source link/ozone-test-9587943948/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:57:14.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:57:14.064" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "c7497e80-502a-4e05-9ac7-cce4859cf212",
        "LastModified": "2023-03-09T17:57:13.867Z"
    }
}</msg>
<status status="PASS" starttime="20230309 17:57:12.868" endtime="20230309 17:57:14.064"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:57:14.067" level="INFO">{
    "CopyObjectResult": {
        "ETag": "c7497e80-502a-4e05-9ac7-cce4859cf212",
        "LastModified": "2023-03-09T17:57:13.867Z"
    }
}</msg>
<status status="PASS" starttime="20230309 17:57:14.065" endtime="20230309 17:57:14.067"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:57:14.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:57:14.067" endtime="20230309 17:57:14.070"/>
</kw>
<status status="PASS" starttime="20230309 17:57:12.867" endtime="20230309 17:57:14.071"/>
</kw>
<msg timestamp="20230309 17:57:14.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:57:12.867" endtime="20230309 17:57:14.072"/>
</kw>
<msg timestamp="20230309 17:57:14.072" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "c7497e80-502a-4e05-9ac7-cce4859cf212",
        "LastModified": "2023-03-09T17:57:13.867Z"
    }
}</msg>
<status status="PASS" starttime="20230309 17:57:12.866" endtime="20230309 17:57:14.072"/>
</kw>
<msg timestamp="20230309 17:57:14.075" level="INFO">${result} = {
    "CopyObjectResult": {
        "ETag": "c7497e80-502a-4e05-9ac7-cce4859cf212",
        "LastModified": "2023-03-09T17:57:13.867Z"
    }
}</msg>
<status status="PASS" starttime="20230309 17:57:12.865" endtime="20230309 17:57:14.075"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${DESTBUCKET} --prefix ${PREFIX}/copyobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:57:14.095" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket destbucket-33238 --prefix ozone-test-9587943948/copyobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:57:15.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:57:15.158" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-9587943948/copyobject/key=value/f1",
            "LastModified": "2023-03-09T17:57:13.867Z",
            "ETag": "2023-03-09T17:57:13.867Z"...</msg>
<status status="PASS" starttime="20230309 17:57:14.086" endtime="20230309 17:57:15.158"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:57:15.160" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-9587943948/copyobject/key=value/f1",
            "LastModified": "2023-03-09T17:57:13.867Z",
            "ETag": "2023-03-09T17:57:13.867Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20230309 17:57:15.159" endtime="20230309 17:57:15.160"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:57:15.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:57:15.160" endtime="20230309 17:57:15.161"/>
</kw>
<status status="PASS" starttime="20230309 17:57:14.082" endtime="20230309 17:57:15.162"/>
</kw>
<msg timestamp="20230309 17:57:15.162" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:57:14.082" endtime="20230309 17:57:15.163"/>
</kw>
<msg timestamp="20230309 17:57:15.163" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-9587943948/copyobject/key=value/f1",
            "LastModified": "2023-03-09T17:57:13.867Z",
            "ETag": "2023-03-09T17:57:13.867Z"...</msg>
<status status="PASS" starttime="20230309 17:57:14.080" endtime="20230309 17:57:15.163"/>
</kw>
<msg timestamp="20230309 17:57:15.164" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-9587943948/copyobject/key=value/f1",
            "LastModified": "2023-03-09T17:57:13.867Z",
            "ETag": "2023-03-09T17:57:13.867Z"...</msg>
<status status="PASS" starttime="20230309 17:57:14.076" endtime="20230309 17:57:15.164"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:57:15.164" endtime="20230309 17:57:15.165"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:57:07.263" endtime="20230309 17:57:15.165"/>
</test>
<test id="s1-s6-s8-t2" name="Copy Object Where Bucket is not available" line="52">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket dfdfdfdfdfnonexistent --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:57:15.177" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket dfdfdfdfdfnonexistent --key ozone-test-9587943948/copyobject/key=value/f1 --copy-source link/ozone-test-9587943948/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:57:16.381" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:57:16.381" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20230309 17:57:15.173" endtime="20230309 17:57:16.381"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:57:16.384" level="INFO">
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20230309 17:57:16.383" endtime="20230309 17:57:16.385"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:57:16.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:57:16.385" endtime="20230309 17:57:16.386"/>
</kw>
<msg timestamp="20230309 17:57:16.388" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20230309 17:57:15.172" endtime="20230309 17:57:16.388"/>
</kw>
<msg timestamp="20230309 17:57:16.388" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20230309 17:57:15.169" endtime="20230309 17:57:16.388"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:57:16.389" endtime="20230309 17:57:16.389"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source dfdfdfdfdfnonexistent/${PREFIX}/copyobject/key=value/f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:57:16.397" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-33238 --key ozone-test-9587943948/copyobject/key=value/f1 --copy-source dfdfdfdfdfnonexistent/ozone-test-9587943948/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:57:17.478" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:57:17.478" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20230309 17:57:16.394" endtime="20230309 17:57:17.478"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:57:17.480" level="INFO">
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20230309 17:57:17.479" endtime="20230309 17:57:17.480"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:57:17.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:57:17.480" endtime="20230309 17:57:17.481"/>
</kw>
<msg timestamp="20230309 17:57:17.481" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20230309 17:57:16.392" endtime="20230309 17:57:17.482"/>
</kw>
<msg timestamp="20230309 17:57:17.482" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20230309 17:57:16.391" endtime="20230309 17:57:17.482"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:57:17.483" endtime="20230309 17:57:17.485"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:57:15.167" endtime="20230309 17:57:17.486"/>
</test>
<test id="s1-s6-s8-t3" name="Copy Object Where both source and dest are same with change to storageclass" line="58">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --storage-class REDUCED_REDUNDANCY --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${DESTBUCKET}/${PREFIX}/copyobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:57:17.499" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --storage-class REDUCED_REDUNDANCY --bucket destbucket-33238 --key ozone-test-9587943948/copyobject/key=value/f1 --copy-source destbucket-33238/ozone-test-9587943948/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:57:18.583" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:57:18.584" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "a861c53f-5f4f-4f63-bf15-ab3e9350d3b7",
        "LastModified": "2023-03-09T17:57:18.395Z"
    }
}</msg>
<status status="PASS" starttime="20230309 17:57:17.495" endtime="20230309 17:57:18.584"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:57:18.591" level="INFO">{
    "CopyObjectResult": {
        "ETag": "a861c53f-5f4f-4f63-bf15-ab3e9350d3b7",
        "LastModified": "2023-03-09T17:57:18.395Z"
    }
}</msg>
<status status="PASS" starttime="20230309 17:57:18.585" endtime="20230309 17:57:18.591"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:57:18.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:57:18.591" endtime="20230309 17:57:18.595"/>
</kw>
<status status="PASS" starttime="20230309 17:57:17.494" endtime="20230309 17:57:18.596"/>
</kw>
<msg timestamp="20230309 17:57:18.596" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:57:17.493" endtime="20230309 17:57:18.600"/>
</kw>
<msg timestamp="20230309 17:57:18.600" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "a861c53f-5f4f-4f63-bf15-ab3e9350d3b7",
        "LastModified": "2023-03-09T17:57:18.395Z"
    }
}</msg>
<status status="PASS" starttime="20230309 17:57:17.492" endtime="20230309 17:57:18.600"/>
</kw>
<msg timestamp="20230309 17:57:18.601" level="INFO">${result} = {
    "CopyObjectResult": {
        "ETag": "a861c53f-5f4f-4f63-bf15-ab3e9350d3b7",
        "LastModified": "2023-03-09T17:57:18.395Z"
    }
}</msg>
<status status="PASS" starttime="20230309 17:57:17.491" endtime="20230309 17:57:18.601"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:57:18.605" endtime="20230309 17:57:18.609"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:57:17.488" endtime="20230309 17:57:18.609"/>
</test>
<test id="s1-s6-s8-t4" name="Copy Object Where Key not available" line="62">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/nonnonexistentkey</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:57:18.640" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-33238 --key ozone-test-9587943948/copyobject/key=value/f1 --copy-source link/nonnonexistentkey 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:57:20.229" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:57:20.229" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20230309 17:57:18.627" endtime="20230309 17:57:20.229"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:57:20.231" level="INFO">
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20230309 17:57:20.230" endtime="20230309 17:57:20.232"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:57:20.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:57:20.232" endtime="20230309 17:57:20.233"/>
</kw>
<msg timestamp="20230309 17:57:20.234" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20230309 17:57:18.625" endtime="20230309 17:57:20.234"/>
</kw>
<msg timestamp="20230309 17:57:20.236" level="INFO">${result} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20230309 17:57:18.619" endtime="20230309 17:57:20.236"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:57:20.236" endtime="20230309 17:57:20.236"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:57:18.614" endtime="20230309 17:57:20.239"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20230309 17:56:43.184" endtime="20230309 17:57:20.244"/>
</suite>
<suite id="s1-s6-s9" name="Objectdelete" source="/opt/hadoop/smoketest/s3/objectdelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:57:20.297" level="INFO">${randStr} = 6284834578</msg>
<status status="PASS" starttime="20230309 17:57:20.295" endtime="20230309 17:57:20.297"/>
</kw>
<msg timestamp="20230309 17:57:20.299" level="INFO">${random} = ozone-test-6284834578</msg>
<status status="PASS" starttime="20230309 17:57:20.293" endtime="20230309 17:57:20.299"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:57:20.303" level="INFO">${PREFIX} = ozone-test-6284834578</msg>
<status status="PASS" starttime="20230309 17:57:20.299" endtime="20230309 17:57:20.304"/>
</kw>
<status status="PASS" starttime="20230309 17:57:20.293" endtime="20230309 17:57:20.306"/>
</kw>
<status status="PASS" starttime="20230309 17:57:20.291" endtime="20230309 17:57:20.306"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which aws</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:57:20.318" level="INFO">Running command 'which aws 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:57:20.329" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:57:20.330" level="INFO">${output} = /usr/local/bin/aws</msg>
<status status="PASS" starttime="20230309 17:57:20.307" endtime="20230309 17:57:20.330"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230309 17:57:20.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:57:20.331" endtime="20230309 17:57:20.333"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20230309 17:57:20.333" endtime="20230309 17:57:20.333"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230309 17:57:20.334" endtime="20230309 17:57:20.334"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20230309 17:57:20.334" endtime="20230309 17:57:20.334"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230309 17:57:20.335" endtime="20230309 17:57:20.335"/>
</kw>
<status status="PASS" starttime="20230309 17:57:20.307" endtime="20230309 17:57:20.335"/>
</kw>
<status status="PASS" starttime="20230309 17:57:20.306" endtime="20230309 17:57:20.336"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:57:20.352" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:57:20.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:57:20.360" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230309 17:57:20.348" endtime="20230309 17:57:20.361"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:57:20.362" level="INFO">s3g</msg>
<status status="PASS" starttime="20230309 17:57:20.361" endtime="20230309 17:57:20.362"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:57:20.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:57:20.363" endtime="20230309 17:57:20.363"/>
</kw>
<status status="PASS" starttime="20230309 17:57:20.345" endtime="20230309 17:57:20.365"/>
</kw>
<msg timestamp="20230309 17:57:20.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:57:20.344" endtime="20230309 17:57:20.367"/>
</kw>
<msg timestamp="20230309 17:57:20.368" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230309 17:57:20.342" endtime="20230309 17:57:20.368"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:57:20.374" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:57:20.369" endtime="20230309 17:57:20.375"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:57:20.391" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:57:20.432" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:57:20.432" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:57:20.383" endtime="20230309 17:57:20.433"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:57:20.436" level="INFO"/>
<status status="PASS" starttime="20230309 17:57:20.433" endtime="20230309 17:57:20.436"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:57:20.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:57:20.436" endtime="20230309 17:57:20.437"/>
</kw>
<status status="PASS" starttime="20230309 17:57:20.380" endtime="20230309 17:57:20.438"/>
</kw>
<msg timestamp="20230309 17:57:20.438" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:57:20.380" endtime="20230309 17:57:20.440"/>
</kw>
<status status="PASS" starttime="20230309 17:57:20.378" endtime="20230309 17:57:20.441"/>
</kw>
<status status="PASS" starttime="20230309 17:57:20.376" endtime="20230309 17:57:20.441"/>
</kw>
<status status="PASS" starttime="20230309 17:57:20.339" endtime="20230309 17:57:20.442"/>
</kw>
<status status="PASS" starttime="20230309 17:57:20.339" endtime="20230309 17:57:20.442"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:57:20.466" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:57:31.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:57:31.690" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:57:20.452" endtime="20230309 17:57:31.690"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:57:31.691" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:57:31.690" endtime="20230309 17:57:31.691"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:57:31.692" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:57:31.691" endtime="20230309 17:57:31.692"/>
</kw>
<status status="PASS" starttime="20230309 17:57:20.449" endtime="20230309 17:57:31.692"/>
</kw>
<msg timestamp="20230309 17:57:31.693" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:57:20.449" endtime="20230309 17:57:31.693"/>
</kw>
<msg timestamp="20230309 17:57:31.694" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:57:20.447" endtime="20230309 17:57:31.694"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230309 17:57:31.696" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230309 17:57:31.694" endtime="20230309 17:57:31.696"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20230309 17:57:31.697" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230309 17:57:31.696" endtime="20230309 17:57:31.697"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230309 17:57:31.698" level="INFO">${secret} = ['15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670']</msg>
<status status="PASS" starttime="20230309 17:57:31.697" endtime="20230309 17:57:31.698"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:57:31.700" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:57:31.699" endtime="20230309 17:57:31.700"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:57:31.703" level="INFO">${secret} = 15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:57:31.701" endtime="20230309 17:57:31.703"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:57:31.711" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:57:32.614" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:57:32.614" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:57:31.707" endtime="20230309 17:57:32.614"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:57:32.615" level="INFO"/>
<status status="PASS" starttime="20230309 17:57:32.615" endtime="20230309 17:57:32.616"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:57:32.617" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:57:32.616" endtime="20230309 17:57:32.617"/>
</kw>
<status status="PASS" starttime="20230309 17:57:31.705" endtime="20230309 17:57:32.618"/>
</kw>
<msg timestamp="20230309 17:57:32.618" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:57:31.705" endtime="20230309 17:57:32.619"/>
</kw>
<status status="PASS" starttime="20230309 17:57:31.703" endtime="20230309 17:57:32.620"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:57:32.626" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:57:33.540" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:57:33.540" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:57:32.622" endtime="20230309 17:57:33.541"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:57:33.542" level="INFO"/>
<status status="PASS" starttime="20230309 17:57:33.541" endtime="20230309 17:57:33.542"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:57:33.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:57:33.543" endtime="20230309 17:57:33.544"/>
</kw>
<status status="PASS" starttime="20230309 17:57:32.621" endtime="20230309 17:57:33.544"/>
</kw>
<msg timestamp="20230309 17:57:33.545" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:57:32.621" endtime="20230309 17:57:33.545"/>
</kw>
<status status="PASS" starttime="20230309 17:57:32.620" endtime="20230309 17:57:33.546"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:57:33.553" level="INFO">Running command 'aws configure set aws_secret_access_key 15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:57:34.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:57:34.378" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:57:33.549" endtime="20230309 17:57:34.378"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:57:34.379" level="INFO"/>
<status status="PASS" starttime="20230309 17:57:34.379" endtime="20230309 17:57:34.379"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:57:34.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:57:34.380" endtime="20230309 17:57:34.380"/>
</kw>
<status status="PASS" starttime="20230309 17:57:33.548" endtime="20230309 17:57:34.381"/>
</kw>
<msg timestamp="20230309 17:57:34.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:57:33.547" endtime="20230309 17:57:34.382"/>
</kw>
<status status="PASS" starttime="20230309 17:57:33.546" endtime="20230309 17:57:34.382"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:57:34.388" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:57:35.243" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:57:35.243" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:57:34.385" endtime="20230309 17:57:35.243"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:57:35.245" level="INFO"/>
<status status="PASS" starttime="20230309 17:57:35.244" endtime="20230309 17:57:35.245"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:57:35.246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:57:35.245" endtime="20230309 17:57:35.246"/>
</kw>
<status status="PASS" starttime="20230309 17:57:34.384" endtime="20230309 17:57:35.246"/>
</kw>
<msg timestamp="20230309 17:57:35.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:57:34.383" endtime="20230309 17:57:35.248"/>
</kw>
<status status="PASS" starttime="20230309 17:57:34.383" endtime="20230309 17:57:35.248"/>
</kw>
<status status="PASS" starttime="20230309 17:57:20.445" endtime="20230309 17:57:35.248"/>
</kw>
<status status="PASS" starttime="20230309 17:57:20.443" endtime="20230309 17:57:35.248"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:57:35.249" endtime="20230309 17:57:35.250"/>
</kw>
<status status="PASS" starttime="20230309 17:57:20.337" endtime="20230309 17:57:35.250"/>
</kw>
<status status="PASS" starttime="20230309 17:57:20.336" endtime="20230309 17:57:35.250"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230309 17:57:35.252" endtime="20230309 17:57:35.252"/>
</kw>
<msg timestamp="20230309 17:57:35.252" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20230309 17:57:35.250" endtime="20230309 17:57:35.252"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:57:35.253" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20230309 17:57:35.253" endtime="20230309 17:57:35.253"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup links for S3 tests" library="commonawslib">
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:57:35.259" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/link 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:57:47.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:57:47.258" level="INFO">${output} = {
  "volumeName" : "s3v",
  "bucketName" : "link",
  "sourceVolume" : "legacy",
  "sourceBucket" : "source-bucket",
  "creationTime" : "2023-03-09T17:51:22.562Z",
  "modificationTime" : "2023-03-09T17...</msg>
<status status="PASS" starttime="20230309 17:57:35.256" endtime="20230309 17:57:47.258"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:57:47.259" endtime="20230309 17:57:47.261"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:57:47.262" endtime="20230309 17:57:47.262"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:57:47.262" endtime="20230309 17:57:47.265"/>
</kw>
<msg timestamp="20230309 17:57:47.266" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20230309 17:57:35.255" endtime="20230309 17:57:47.266"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230309 17:57:47.267" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:57:47.267" endtime="20230309 17:57:47.267"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://${OM_SERVICE_ID}/legacy</arg>
<status status="NOT RUN" starttime="20230309 17:57:47.268" endtime="20230309 17:57:47.268"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create o3://${OM_SERVICE_ID}/legacy/source-bucket</arg>
<status status="NOT RUN" starttime="20230309 17:57:47.268" endtime="20230309 17:57:47.268"/>
</kw>
<kw name="Create link" library="commonawslib">
<arg>link</arg>
<status status="NOT RUN" starttime="20230309 17:57:47.268" endtime="20230309 17:57:47.268"/>
</kw>
<status status="PASS" starttime="20230309 17:57:35.254" endtime="20230309 17:57:47.269"/>
</kw>
<status status="PASS" starttime="20230309 17:57:35.254" endtime="20230309 17:57:47.269"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:57:47.269" endtime="20230309 17:57:47.270"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:57:47.270" endtime="20230309 17:57:47.271"/>
</kw>
<status status="PASS" starttime="20230309 17:57:20.290" endtime="20230309 17:57:47.271"/>
</kw>
<test id="s1-s6-s9-t1" name="Delete file with s3api" line="30">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:57:47.281" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20230309 17:57:47.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:57:47.289" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:57:47.277" endtime="20230309 17:57:47.289"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:57:47.291" level="INFO"/>
<status status="PASS" starttime="20230309 17:57:47.290" endtime="20230309 17:57:47.291"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:57:47.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:57:47.292" endtime="20230309 17:57:47.293"/>
</kw>
<status status="PASS" starttime="20230309 17:57:47.276" endtime="20230309 17:57:47.294"/>
</kw>
<msg timestamp="20230309 17:57:47.295" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:57:47.275" endtime="20230309 17:57:47.295"/>
</kw>
<status status="PASS" starttime="20230309 17:57:47.275" endtime="20230309 17:57:47.295"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapi/key=value/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:57:47.306" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key ozone-test-6284834578/deletetestapi/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:57:48.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:57:48.541" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:57:47.301" endtime="20230309 17:57:48.542"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:57:48.543" level="INFO"/>
<status status="PASS" starttime="20230309 17:57:48.542" endtime="20230309 17:57:48.543"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:57:48.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:57:48.545" endtime="20230309 17:57:48.546"/>
</kw>
<status status="PASS" starttime="20230309 17:57:47.299" endtime="20230309 17:57:48.546"/>
</kw>
<msg timestamp="20230309 17:57:48.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:57:47.298" endtime="20230309 17:57:48.549"/>
</kw>
<msg timestamp="20230309 17:57:48.549" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:57:47.297" endtime="20230309 17:57:48.549"/>
</kw>
<msg timestamp="20230309 17:57:48.551" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 17:57:47.296" endtime="20230309 17:57:48.551"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/deletetestapi/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:57:48.559" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket link --prefix ozone-test-6284834578/deletetestapi/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:57:49.742" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:57:49.742" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-6284834578/deletetestapi/key=value/f1",
            "LastModified": "2023-03-09T17:57:48.403Z",
            "ETag": "2023-03-09T17:57:48.40...</msg>
<status status="PASS" starttime="20230309 17:57:48.556" endtime="20230309 17:57:49.742"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:57:49.745" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-6284834578/deletetestapi/key=value/f1",
            "LastModified": "2023-03-09T17:57:48.403Z",
            "ETag": "2023-03-09T17:57:48.403Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20230309 17:57:49.743" endtime="20230309 17:57:49.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:57:49.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:57:49.746" endtime="20230309 17:57:49.749"/>
</kw>
<status status="PASS" starttime="20230309 17:57:48.554" endtime="20230309 17:57:49.749"/>
</kw>
<msg timestamp="20230309 17:57:49.749" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:57:48.554" endtime="20230309 17:57:49.751"/>
</kw>
<msg timestamp="20230309 17:57:49.752" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-6284834578/deletetestapi/key=value/f1",
            "LastModified": "2023-03-09T17:57:48.403Z",
            "ETag": "2023-03-09T17:57:48.40...</msg>
<status status="PASS" starttime="20230309 17:57:48.553" endtime="20230309 17:57:49.752"/>
</kw>
<msg timestamp="20230309 17:57:49.752" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-6284834578/deletetestapi/key=value/f1",
            "LastModified": "2023-03-09T17:57:48.403Z",
            "ETag": "2023-03-09T17:57:48.40...</msg>
<status status="PASS" starttime="20230309 17:57:48.552" endtime="20230309 17:57:49.752"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>"${PREFIX}/deletetestapi/key=value/f1"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:57:49.753" endtime="20230309 17:57:49.754"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapi/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:57:49.762" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket link --key ozone-test-6284834578/deletetestapi/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:57:50.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:57:50.881" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:57:49.758" endtime="20230309 17:57:50.881"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:57:50.884" level="INFO"/>
<status status="PASS" starttime="20230309 17:57:50.882" endtime="20230309 17:57:50.884"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:57:50.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:57:50.884" endtime="20230309 17:57:50.885"/>
</kw>
<status status="PASS" starttime="20230309 17:57:49.757" endtime="20230309 17:57:50.885"/>
</kw>
<msg timestamp="20230309 17:57:50.886" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:57:49.756" endtime="20230309 17:57:50.887"/>
</kw>
<msg timestamp="20230309 17:57:50.888" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:57:49.755" endtime="20230309 17:57:50.888"/>
</kw>
<msg timestamp="20230309 17:57:50.888" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 17:57:49.754" endtime="20230309 17:57:50.888"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/deletetestapi/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:57:50.897" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket link --prefix ozone-test-6284834578/deletetestapi/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:57:51.949" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:57:51.949" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:57:50.893" endtime="20230309 17:57:51.949"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:57:51.953" level="INFO"/>
<status status="PASS" starttime="20230309 17:57:51.950" endtime="20230309 17:57:51.953"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:57:51.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:57:51.954" endtime="20230309 17:57:51.956"/>
</kw>
<status status="PASS" starttime="20230309 17:57:50.892" endtime="20230309 17:57:51.956"/>
</kw>
<msg timestamp="20230309 17:57:51.956" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:57:50.892" endtime="20230309 17:57:51.958"/>
</kw>
<msg timestamp="20230309 17:57:51.959" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:57:50.890" endtime="20230309 17:57:51.959"/>
</kw>
<msg timestamp="20230309 17:57:51.960" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 17:57:50.889" endtime="20230309 17:57:51.962"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>"${PREFIX}/deletetestapi/key=value/f1"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:57:51.962" endtime="20230309 17:57:51.963"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:57:47.272" endtime="20230309 17:57:51.963"/>
</test>
<test id="s1-s6-s9-t2" name="Delete file with s3api, file doesn't exist" line="39">
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:57:51.979" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://link/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:57:53.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:57:53.056" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-1288652920/
                           PRE ozone-test-1844042255/
             ...</msg>
<status status="PASS" starttime="20230309 17:57:51.972" endtime="20230309 17:57:53.056"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:57:53.059" level="INFO">                           PRE dir1/
                           PRE multipart/
                           PRE ozone-test-1288652920/
                           PRE ozone-test-1844042255/
                           PRE ozone-test-3450831095/
                           PRE ozone-test-4412776365/
                           PRE ozone-test-6820276366/
                           PRE ozone-test-9587943948/
                           PRE specialchars/
2023-03-09 17:52:32       3879 README1.md
2023-03-09 17:52:29       3879 README10.md
2023-03-09 17:52:34   20971522 cvtbyojzsg
2023-03-09 17:52:30   10485761 multiUpload.1.gz
2023-03-09 17:52:31   10485761 multiUpload.2.gz
2023-03-09 17:51:54         29 testfile</msg>
<status status="PASS" starttime="20230309 17:57:53.056" endtime="20230309 17:57:53.060"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:57:53.061" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:57:53.060" endtime="20230309 17:57:53.061"/>
</kw>
<status status="PASS" starttime="20230309 17:57:51.971" endtime="20230309 17:57:53.065"/>
</kw>
<msg timestamp="20230309 17:57:53.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:57:51.971" endtime="20230309 17:57:53.066"/>
</kw>
<msg timestamp="20230309 17:57:53.066" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-1288652920/
                           PRE ozone-test-1844042255/
             ...</msg>
<status status="PASS" starttime="20230309 17:57:51.969" endtime="20230309 17:57:53.066"/>
</kw>
<msg timestamp="20230309 17:57:53.067" level="INFO">${result} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-1288652920/
                           PRE ozone-test-1844042255/
             ...</msg>
<status status="PASS" starttime="20230309 17:57:51.968" endtime="20230309 17:57:53.067"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>thereisnosuchfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:57:53.067" endtime="20230309 17:57:53.070"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key thereisnosuchfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:57:53.083" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket link --key thereisnosuchfile 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:57:54.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:57:54.207" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:57:53.077" endtime="20230309 17:57:54.207"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:57:54.209" level="INFO"/>
<status status="PASS" starttime="20230309 17:57:54.208" endtime="20230309 17:57:54.209"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:57:54.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:57:54.210" endtime="20230309 17:57:54.211"/>
</kw>
<status status="PASS" starttime="20230309 17:57:53.073" endtime="20230309 17:57:54.211"/>
</kw>
<msg timestamp="20230309 17:57:54.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:57:53.072" endtime="20230309 17:57:54.213"/>
</kw>
<msg timestamp="20230309 17:57:54.213" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:57:53.071" endtime="20230309 17:57:54.214"/>
</kw>
<msg timestamp="20230309 17:57:54.215" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 17:57:53.070" endtime="20230309 17:57:54.215"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:57:54.225" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://link/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:57:55.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:57:55.221" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-1288652920/
                           PRE ozone-test-1844042255/
             ...</msg>
<status status="PASS" starttime="20230309 17:57:54.221" endtime="20230309 17:57:55.221"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:57:55.223" level="INFO">                           PRE dir1/
                           PRE multipart/
                           PRE ozone-test-1288652920/
                           PRE ozone-test-1844042255/
                           PRE ozone-test-3450831095/
                           PRE ozone-test-4412776365/
                           PRE ozone-test-6820276366/
                           PRE ozone-test-9587943948/
                           PRE specialchars/
2023-03-09 17:52:32       3879 README1.md
2023-03-09 17:52:29       3879 README10.md
2023-03-09 17:52:34   20971522 cvtbyojzsg
2023-03-09 17:52:30   10485761 multiUpload.1.gz
2023-03-09 17:52:31   10485761 multiUpload.2.gz
2023-03-09 17:51:54         29 testfile</msg>
<status status="PASS" starttime="20230309 17:57:55.222" endtime="20230309 17:57:55.223"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:57:55.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:57:55.223" endtime="20230309 17:57:55.225"/>
</kw>
<status status="PASS" starttime="20230309 17:57:54.221" endtime="20230309 17:57:55.226"/>
</kw>
<msg timestamp="20230309 17:57:55.226" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:57:54.220" endtime="20230309 17:57:55.227"/>
</kw>
<msg timestamp="20230309 17:57:55.228" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-1288652920/
                           PRE ozone-test-1844042255/
             ...</msg>
<status status="PASS" starttime="20230309 17:57:54.217" endtime="20230309 17:57:55.228"/>
</kw>
<msg timestamp="20230309 17:57:55.229" level="INFO">${result} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-1288652920/
                           PRE ozone-test-1844042255/
             ...</msg>
<status status="PASS" starttime="20230309 17:57:54.215" endtime="20230309 17:57:55.229"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>thereisnosuchfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:57:55.229" endtime="20230309 17:57:55.230"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:57:51.966" endtime="20230309 17:57:55.230"/>
</test>
<test id="s1-s6-s9-t3" name="Delete dir with s3api" line="46">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:57:55.244" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20230309 17:57:55.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:57:55.253" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:57:55.238" endtime="20230309 17:57:55.253"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:57:55.258" level="INFO"/>
<status status="PASS" starttime="20230309 17:57:55.253" endtime="20230309 17:57:55.259"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:57:55.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:57:55.259" endtime="20230309 17:57:55.260"/>
</kw>
<status status="PASS" starttime="20230309 17:57:55.236" endtime="20230309 17:57:55.260"/>
</kw>
<msg timestamp="20230309 17:57:55.260" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:57:55.235" endtime="20230309 17:57:55.261"/>
</kw>
<status status="PASS" starttime="20230309 17:57:55.235" endtime="20230309 17:57:55.261"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/${PREFIX}/deletetestapidir/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:57:55.272" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://link/ozone-test-6284834578/deletetestapidir/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:57:56.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:57:56.337" level="INFO">${output} = Completed 29 Bytes/29 Bytes (280 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/ozone-test-6284834578/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20230309 17:57:55.269" endtime="20230309 17:57:56.337"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:57:56.338" level="INFO">Completed 29 Bytes/29 Bytes (280 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/ozone-test-6284834578/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20230309 17:57:56.337" endtime="20230309 17:57:56.339"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:57:56.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:57:56.339" endtime="20230309 17:57:56.340"/>
</kw>
<status status="PASS" starttime="20230309 17:57:55.268" endtime="20230309 17:57:56.341"/>
</kw>
<msg timestamp="20230309 17:57:56.341" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:57:55.267" endtime="20230309 17:57:56.343"/>
</kw>
<msg timestamp="20230309 17:57:56.344" level="INFO">${output} = Completed 29 Bytes/29 Bytes (280 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/ozone-test-6284834578/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20230309 17:57:55.266" endtime="20230309 17:57:56.344"/>
</kw>
<msg timestamp="20230309 17:57:56.345" level="INFO">${result} = Completed 29 Bytes/29 Bytes (280 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/ozone-test-6284834578/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20230309 17:57:55.261" endtime="20230309 17:57:56.345"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapidir/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:57:56.358" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://link/ozone-test-6284834578/deletetestapidir/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:57:57.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:57:57.371" level="INFO">${output} = 2023-03-09 17:57:56         29 f1</msg>
<status status="PASS" starttime="20230309 17:57:56.354" endtime="20230309 17:57:57.371"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:57:57.373" level="INFO">2023-03-09 17:57:56         29 f1</msg>
<status status="PASS" starttime="20230309 17:57:57.372" endtime="20230309 17:57:57.373"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:57:57.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:57:57.373" endtime="20230309 17:57:57.374"/>
</kw>
<status status="PASS" starttime="20230309 17:57:56.352" endtime="20230309 17:57:57.375"/>
</kw>
<msg timestamp="20230309 17:57:57.375" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:57:56.352" endtime="20230309 17:57:57.376"/>
</kw>
<msg timestamp="20230309 17:57:57.376" level="INFO">${output} = 2023-03-09 17:57:56         29 f1</msg>
<status status="PASS" starttime="20230309 17:57:56.351" endtime="20230309 17:57:57.377"/>
</kw>
<msg timestamp="20230309 17:57:57.377" level="INFO">${result} = 2023-03-09 17:57:56         29 f1</msg>
<status status="PASS" starttime="20230309 17:57:56.345" endtime="20230309 17:57:57.377"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:57:57.377" endtime="20230309 17:57:57.378"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapidir/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:57:57.386" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket link --key ozone-test-6284834578/deletetestapidir/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:57:58.436" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:57:58.436" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:57:57.383" endtime="20230309 17:57:58.436"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:57:58.437" level="INFO"/>
<status status="PASS" starttime="20230309 17:57:58.436" endtime="20230309 17:57:58.437"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:57:58.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:57:58.438" endtime="20230309 17:57:58.439"/>
</kw>
<status status="PASS" starttime="20230309 17:57:57.382" endtime="20230309 17:57:58.439"/>
</kw>
<msg timestamp="20230309 17:57:58.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:57:57.380" endtime="20230309 17:57:58.440"/>
</kw>
<msg timestamp="20230309 17:57:58.440" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:57:57.379" endtime="20230309 17:57:58.440"/>
</kw>
<msg timestamp="20230309 17:57:58.441" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 17:57:57.378" endtime="20230309 17:57:58.441"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapidir/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:57:58.448" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://link/ozone-test-6284834578/deletetestapidir/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:57:59.631" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:57:59.631" level="INFO">${output} = 2023-03-09 17:57:56         29 f1</msg>
<status status="PASS" starttime="20230309 17:57:58.445" endtime="20230309 17:57:59.631"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:57:59.633" level="INFO">2023-03-09 17:57:56         29 f1</msg>
<status status="PASS" starttime="20230309 17:57:59.632" endtime="20230309 17:57:59.634"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:57:59.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:57:59.634" endtime="20230309 17:57:59.637"/>
</kw>
<status status="PASS" starttime="20230309 17:57:58.444" endtime="20230309 17:57:59.638"/>
</kw>
<msg timestamp="20230309 17:57:59.638" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:57:58.443" endtime="20230309 17:57:59.639"/>
</kw>
<msg timestamp="20230309 17:57:59.640" level="INFO">${output} = 2023-03-09 17:57:56         29 f1</msg>
<status status="PASS" starttime="20230309 17:57:58.442" endtime="20230309 17:57:59.640"/>
</kw>
<msg timestamp="20230309 17:57:59.641" level="INFO">${result} = 2023-03-09 17:57:56         29 f1</msg>
<status status="PASS" starttime="20230309 17:57:58.441" endtime="20230309 17:57:59.641"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:57:59.642" endtime="20230309 17:57:59.643"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapidir/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:57:59.653" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket link --key ozone-test-6284834578/deletetestapidir/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:58:00.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:58:00.858" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:57:59.648" endtime="20230309 17:58:00.858"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:58:00.861" level="INFO"/>
<status status="PASS" starttime="20230309 17:58:00.859" endtime="20230309 17:58:00.861"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:58:00.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:58:00.861" endtime="20230309 17:58:00.862"/>
</kw>
<status status="PASS" starttime="20230309 17:57:59.647" endtime="20230309 17:58:00.862"/>
</kw>
<msg timestamp="20230309 17:58:00.863" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:57:59.646" endtime="20230309 17:58:00.863"/>
</kw>
<msg timestamp="20230309 17:58:00.864" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:57:59.645" endtime="20230309 17:58:00.864"/>
</kw>
<msg timestamp="20230309 17:58:00.864" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 17:57:59.643" endtime="20230309 17:58:00.864"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:57:55.233" endtime="20230309 17:58:00.865"/>
</test>
<test id="s1-s6-s9-t4" name="Delete file with s3api, file doesn't exist, prefix of a real file" line="57">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:58:00.875" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20230309 17:58:00.879" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:58:00.879" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:58:00.871" endtime="20230309 17:58:00.879"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:58:00.882" level="INFO"/>
<status status="PASS" starttime="20230309 17:58:00.881" endtime="20230309 17:58:00.882"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:58:00.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:58:00.882" endtime="20230309 17:58:00.883"/>
</kw>
<status status="PASS" starttime="20230309 17:58:00.870" endtime="20230309 17:58:00.884"/>
</kw>
<msg timestamp="20230309 17:58:00.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:58:00.869" endtime="20230309 17:58:00.885"/>
</kw>
<status status="PASS" starttime="20230309 17:58:00.868" endtime="20230309 17:58:00.885"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/${PREFIX}/deletetestapiprefix/key=value/filefile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:58:00.895" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://link/ozone-test-6284834578/deletetestapiprefix/key=value/filefile 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:58:01.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:58:01.993" level="INFO">${output} = Completed 29 Bytes/29 Bytes (306 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/ozone-test-6284834578/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20230309 17:58:00.891" endtime="20230309 17:58:01.993"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:58:01.995" level="INFO">Completed 29 Bytes/29 Bytes (306 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/ozone-test-6284834578/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20230309 17:58:01.994" endtime="20230309 17:58:01.995"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:58:01.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:58:01.995" endtime="20230309 17:58:01.998"/>
</kw>
<status status="PASS" starttime="20230309 17:58:00.889" endtime="20230309 17:58:01.998"/>
</kw>
<msg timestamp="20230309 17:58:01.999" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:58:00.889" endtime="20230309 17:58:01.999"/>
</kw>
<msg timestamp="20230309 17:58:02.000" level="INFO">${output} = Completed 29 Bytes/29 Bytes (306 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/ozone-test-6284834578/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20230309 17:58:00.888" endtime="20230309 17:58:02.000"/>
</kw>
<msg timestamp="20230309 17:58:02.000" level="INFO">${result} = Completed 29 Bytes/29 Bytes (306 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/ozone-test-6284834578/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20230309 17:58:00.886" endtime="20230309 17:58:02.000"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapiprefix/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:58:02.006" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://link/ozone-test-6284834578/deletetestapiprefix/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:58:03.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:58:03.110" level="INFO">${output} = 2023-03-09 17:58:01         29 filefile</msg>
<status status="PASS" starttime="20230309 17:58:02.003" endtime="20230309 17:58:03.110"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:58:03.113" level="INFO">2023-03-09 17:58:01         29 filefile</msg>
<status status="PASS" starttime="20230309 17:58:03.111" endtime="20230309 17:58:03.113"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:58:03.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:58:03.113" endtime="20230309 17:58:03.117"/>
</kw>
<status status="PASS" starttime="20230309 17:58:02.003" endtime="20230309 17:58:03.117"/>
</kw>
<msg timestamp="20230309 17:58:03.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:58:02.002" endtime="20230309 17:58:03.119"/>
</kw>
<msg timestamp="20230309 17:58:03.119" level="INFO">${output} = 2023-03-09 17:58:01         29 filefile</msg>
<status status="PASS" starttime="20230309 17:58:02.001" endtime="20230309 17:58:03.119"/>
</kw>
<msg timestamp="20230309 17:58:03.120" level="INFO">${result} = 2023-03-09 17:58:01         29 filefile</msg>
<status status="PASS" starttime="20230309 17:58:02.001" endtime="20230309 17:58:03.120"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>filefile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:58:03.120" endtime="20230309 17:58:03.121"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapiprefix/key=value/file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:58:03.132" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket link --key ozone-test-6284834578/deletetestapiprefix/key=value/file 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:58:04.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:58:04.172" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:58:03.125" endtime="20230309 17:58:04.173"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:58:04.175" level="INFO"/>
<status status="PASS" starttime="20230309 17:58:04.173" endtime="20230309 17:58:04.175"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:58:04.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:58:04.175" endtime="20230309 17:58:04.176"/>
</kw>
<status status="PASS" starttime="20230309 17:58:03.124" endtime="20230309 17:58:04.177"/>
</kw>
<msg timestamp="20230309 17:58:04.177" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:58:03.124" endtime="20230309 17:58:04.178"/>
</kw>
<msg timestamp="20230309 17:58:04.178" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:58:03.123" endtime="20230309 17:58:04.178"/>
</kw>
<msg timestamp="20230309 17:58:04.179" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 17:58:03.121" endtime="20230309 17:58:04.179"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapiprefix/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:58:04.187" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://link/ozone-test-6284834578/deletetestapiprefix/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:58:05.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:58:05.257" level="INFO">${output} = 2023-03-09 17:58:01         29 filefile</msg>
<status status="PASS" starttime="20230309 17:58:04.184" endtime="20230309 17:58:05.257"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:58:05.259" level="INFO">2023-03-09 17:58:01         29 filefile</msg>
<status status="PASS" starttime="20230309 17:58:05.258" endtime="20230309 17:58:05.259"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:58:05.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:58:05.260" endtime="20230309 17:58:05.262"/>
</kw>
<status status="PASS" starttime="20230309 17:58:04.183" endtime="20230309 17:58:05.263"/>
</kw>
<msg timestamp="20230309 17:58:05.263" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:58:04.182" endtime="20230309 17:58:05.265"/>
</kw>
<msg timestamp="20230309 17:58:05.267" level="INFO">${output} = 2023-03-09 17:58:01         29 filefile</msg>
<status status="PASS" starttime="20230309 17:58:04.181" endtime="20230309 17:58:05.267"/>
</kw>
<msg timestamp="20230309 17:58:05.267" level="INFO">${result} = 2023-03-09 17:58:01         29 filefile</msg>
<status status="PASS" starttime="20230309 17:58:04.179" endtime="20230309 17:58:05.267"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>filefile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:58:05.268" endtime="20230309 17:58:05.269"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapiprefix/key=value/filefile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:58:05.279" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket link --key ozone-test-6284834578/deletetestapiprefix/key=value/filefile 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:58:06.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:58:06.394" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:58:05.273" endtime="20230309 17:58:06.394"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:58:06.397" level="INFO"/>
<status status="PASS" starttime="20230309 17:58:06.395" endtime="20230309 17:58:06.397"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:58:06.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:58:06.397" endtime="20230309 17:58:06.398"/>
</kw>
<status status="PASS" starttime="20230309 17:58:05.272" endtime="20230309 17:58:06.398"/>
</kw>
<msg timestamp="20230309 17:58:06.399" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:58:05.272" endtime="20230309 17:58:06.399"/>
</kw>
<msg timestamp="20230309 17:58:06.400" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:58:05.270" endtime="20230309 17:58:06.400"/>
</kw>
<msg timestamp="20230309 17:58:06.400" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 17:58:05.269" endtime="20230309 17:58:06.401"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:58:00.867" endtime="20230309 17:58:06.401"/>
</test>
<test id="s1-s6-s9-t5" name="Delete file with s3api, bucket doesn't exist" line="69">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET}-nosuchbucket --key f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:58:06.416" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket link-nosuchbucket --key f1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:58:07.543" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:58:07.543" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20230309 17:58:06.410" endtime="20230309 17:58:07.543"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:58:07.545" level="INFO">
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20230309 17:58:07.544" endtime="20230309 17:58:07.545"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:58:07.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:58:07.545" endtime="20230309 17:58:07.546"/>
</kw>
<msg timestamp="20230309 17:58:07.547" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20230309 17:58:06.409" endtime="20230309 17:58:07.547"/>
</kw>
<msg timestamp="20230309 17:58:07.547" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20230309 17:58:06.406" endtime="20230309 17:58:07.547"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:58:07.548" endtime="20230309 17:58:07.549"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:58:06.404" endtime="20230309 17:58:07.549"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20230309 17:57:20.251" endtime="20230309 17:58:07.551"/>
</suite>
<suite id="s1-s6-s10" name="Objecthead" source="/opt/hadoop/smoketest/s3/objecthead.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:58:07.574" level="INFO">${randStr} = 5176772344</msg>
<status status="PASS" starttime="20230309 17:58:07.573" endtime="20230309 17:58:07.574"/>
</kw>
<msg timestamp="20230309 17:58:07.574" level="INFO">${random} = ozone-test-5176772344</msg>
<status status="PASS" starttime="20230309 17:58:07.573" endtime="20230309 17:58:07.574"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:58:07.577" level="INFO">${PREFIX} = ozone-test-5176772344</msg>
<status status="PASS" starttime="20230309 17:58:07.575" endtime="20230309 17:58:07.577"/>
</kw>
<status status="PASS" starttime="20230309 17:58:07.572" endtime="20230309 17:58:07.577"/>
</kw>
<status status="PASS" starttime="20230309 17:58:07.572" endtime="20230309 17:58:07.578"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which aws</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:58:07.582" level="INFO">Running command 'which aws 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:58:07.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:58:07.587" level="INFO">${output} = /usr/local/bin/aws</msg>
<status status="PASS" starttime="20230309 17:58:07.579" endtime="20230309 17:58:07.587"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230309 17:58:07.589" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:58:07.588" endtime="20230309 17:58:07.589"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20230309 17:58:07.590" endtime="20230309 17:58:07.590"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230309 17:58:07.590" endtime="20230309 17:58:07.590"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20230309 17:58:07.591" endtime="20230309 17:58:07.591"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230309 17:58:07.591" endtime="20230309 17:58:07.591"/>
</kw>
<status status="PASS" starttime="20230309 17:58:07.578" endtime="20230309 17:58:07.591"/>
</kw>
<status status="PASS" starttime="20230309 17:58:07.578" endtime="20230309 17:58:07.591"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:58:07.602" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:58:07.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:58:07.608" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230309 17:58:07.599" endtime="20230309 17:58:07.608"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:58:07.610" level="INFO">s3g</msg>
<status status="PASS" starttime="20230309 17:58:07.609" endtime="20230309 17:58:07.610"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:58:07.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:58:07.610" endtime="20230309 17:58:07.611"/>
</kw>
<status status="PASS" starttime="20230309 17:58:07.598" endtime="20230309 17:58:07.612"/>
</kw>
<msg timestamp="20230309 17:58:07.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:58:07.597" endtime="20230309 17:58:07.613"/>
</kw>
<msg timestamp="20230309 17:58:07.613" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230309 17:58:07.597" endtime="20230309 17:58:07.613"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:58:07.615" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:58:07.613" endtime="20230309 17:58:07.616"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:58:07.621" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:58:07.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:58:07.682" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:58:07.618" endtime="20230309 17:58:07.682"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:58:07.683" level="INFO"/>
<status status="PASS" starttime="20230309 17:58:07.682" endtime="20230309 17:58:07.683"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:58:07.684" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:58:07.684" endtime="20230309 17:58:07.684"/>
</kw>
<status status="PASS" starttime="20230309 17:58:07.618" endtime="20230309 17:58:07.685"/>
</kw>
<msg timestamp="20230309 17:58:07.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:58:07.617" endtime="20230309 17:58:07.686"/>
</kw>
<status status="PASS" starttime="20230309 17:58:07.616" endtime="20230309 17:58:07.686"/>
</kw>
<status status="PASS" starttime="20230309 17:58:07.616" endtime="20230309 17:58:07.686"/>
</kw>
<status status="PASS" starttime="20230309 17:58:07.596" endtime="20230309 17:58:07.686"/>
</kw>
<status status="PASS" starttime="20230309 17:58:07.593" endtime="20230309 17:58:07.687"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:58:07.695" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:58:18.888" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:58:18.888" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:58:07.691" endtime="20230309 17:58:18.889"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:58:18.890" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:58:18.889" endtime="20230309 17:58:18.891"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:58:18.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:58:18.891" endtime="20230309 17:58:18.892"/>
</kw>
<status status="PASS" starttime="20230309 17:58:07.690" endtime="20230309 17:58:18.892"/>
</kw>
<msg timestamp="20230309 17:58:18.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:58:07.689" endtime="20230309 17:58:18.894"/>
</kw>
<msg timestamp="20230309 17:58:18.894" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:58:07.688" endtime="20230309 17:58:18.894"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230309 17:58:18.895" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230309 17:58:18.894" endtime="20230309 17:58:18.895"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20230309 17:58:18.896" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230309 17:58:18.895" endtime="20230309 17:58:18.896"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230309 17:58:18.897" level="INFO">${secret} = ['15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670']</msg>
<status status="PASS" starttime="20230309 17:58:18.896" endtime="20230309 17:58:18.897"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:58:18.899" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:58:18.897" endtime="20230309 17:58:18.899"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:58:18.901" level="INFO">${secret} = 15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:58:18.899" endtime="20230309 17:58:18.901"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:58:18.908" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:58:19.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:58:19.759" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:58:18.904" endtime="20230309 17:58:19.759"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:58:19.762" level="INFO"/>
<status status="PASS" starttime="20230309 17:58:19.761" endtime="20230309 17:58:19.762"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:58:19.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:58:19.762" endtime="20230309 17:58:19.763"/>
</kw>
<status status="PASS" starttime="20230309 17:58:18.904" endtime="20230309 17:58:19.764"/>
</kw>
<msg timestamp="20230309 17:58:19.764" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:58:18.903" endtime="20230309 17:58:19.765"/>
</kw>
<status status="PASS" starttime="20230309 17:58:18.901" endtime="20230309 17:58:19.765"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:58:19.772" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:58:20.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:58:20.638" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:58:19.767" endtime="20230309 17:58:20.638"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:58:20.640" level="INFO"/>
<status status="PASS" starttime="20230309 17:58:20.639" endtime="20230309 17:58:20.640"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:58:20.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:58:20.640" endtime="20230309 17:58:20.641"/>
</kw>
<status status="PASS" starttime="20230309 17:58:19.767" endtime="20230309 17:58:20.641"/>
</kw>
<msg timestamp="20230309 17:58:20.642" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:58:19.766" endtime="20230309 17:58:20.642"/>
</kw>
<status status="PASS" starttime="20230309 17:58:19.766" endtime="20230309 17:58:20.643"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:58:20.651" level="INFO">Running command 'aws configure set aws_secret_access_key 15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:58:21.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:58:21.579" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:58:20.648" endtime="20230309 17:58:21.579"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:58:21.582" level="INFO"/>
<status status="PASS" starttime="20230309 17:58:21.580" endtime="20230309 17:58:21.582"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:58:21.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:58:21.582" endtime="20230309 17:58:21.583"/>
</kw>
<status status="PASS" starttime="20230309 17:58:20.645" endtime="20230309 17:58:21.583"/>
</kw>
<msg timestamp="20230309 17:58:21.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:58:20.644" endtime="20230309 17:58:21.585"/>
</kw>
<status status="PASS" starttime="20230309 17:58:20.643" endtime="20230309 17:58:21.585"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:58:21.592" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:58:22.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:58:22.515" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:58:21.588" endtime="20230309 17:58:22.515"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:58:22.517" level="INFO"/>
<status status="PASS" starttime="20230309 17:58:22.516" endtime="20230309 17:58:22.517"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:58:22.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:58:22.517" endtime="20230309 17:58:22.520"/>
</kw>
<status status="PASS" starttime="20230309 17:58:21.587" endtime="20230309 17:58:22.521"/>
</kw>
<msg timestamp="20230309 17:58:22.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:58:21.587" endtime="20230309 17:58:22.522"/>
</kw>
<status status="PASS" starttime="20230309 17:58:21.585" endtime="20230309 17:58:22.522"/>
</kw>
<status status="PASS" starttime="20230309 17:58:07.688" endtime="20230309 17:58:22.523"/>
</kw>
<status status="PASS" starttime="20230309 17:58:07.687" endtime="20230309 17:58:22.523"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:58:22.523" endtime="20230309 17:58:22.524"/>
</kw>
<status status="PASS" starttime="20230309 17:58:07.592" endtime="20230309 17:58:22.525"/>
</kw>
<status status="PASS" starttime="20230309 17:58:07.592" endtime="20230309 17:58:22.527"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230309 17:58:22.529" endtime="20230309 17:58:22.530"/>
</kw>
<msg timestamp="20230309 17:58:22.530" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20230309 17:58:22.527" endtime="20230309 17:58:22.531"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:58:22.533" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20230309 17:58:22.531" endtime="20230309 17:58:22.533"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup links for S3 tests" library="commonawslib">
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:58:22.542" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/link 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:58:35.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:58:35.533" level="INFO">${output} = {
  "volumeName" : "s3v",
  "bucketName" : "link",
  "sourceVolume" : "legacy",
  "sourceBucket" : "source-bucket",
  "creationTime" : "2023-03-09T17:51:22.562Z",
  "modificationTime" : "2023-03-09T17...</msg>
<status status="PASS" starttime="20230309 17:58:22.538" endtime="20230309 17:58:35.533"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:58:35.534" endtime="20230309 17:58:35.535"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:58:35.535" endtime="20230309 17:58:35.535"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:58:35.536" endtime="20230309 17:58:35.536"/>
</kw>
<msg timestamp="20230309 17:58:35.538" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20230309 17:58:22.537" endtime="20230309 17:58:35.538"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230309 17:58:35.539" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:58:35.538" endtime="20230309 17:58:35.539"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://${OM_SERVICE_ID}/legacy</arg>
<status status="NOT RUN" starttime="20230309 17:58:35.540" endtime="20230309 17:58:35.540"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create o3://${OM_SERVICE_ID}/legacy/source-bucket</arg>
<status status="NOT RUN" starttime="20230309 17:58:35.540" endtime="20230309 17:58:35.541"/>
</kw>
<kw name="Create link" library="commonawslib">
<arg>link</arg>
<status status="NOT RUN" starttime="20230309 17:58:35.541" endtime="20230309 17:58:35.541"/>
</kw>
<status status="PASS" starttime="20230309 17:58:22.535" endtime="20230309 17:58:35.542"/>
</kw>
<status status="PASS" starttime="20230309 17:58:22.535" endtime="20230309 17:58:35.542"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:58:35.542" endtime="20230309 17:58:35.544"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:58:35.544" endtime="20230309 17:58:35.545"/>
</kw>
<status status="PASS" starttime="20230309 17:58:07.571" endtime="20230309 17:58:35.545"/>
</kw>
<test id="s1-s6-s10-t1" name="Head existing object" line="32">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:58:35.554" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20230309 17:58:35.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:58:35.558" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:58:35.550" endtime="20230309 17:58:35.558"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:58:35.561" level="INFO"/>
<status status="PASS" starttime="20230309 17:58:35.560" endtime="20230309 17:58:35.561"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:58:35.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:58:35.561" endtime="20230309 17:58:35.562"/>
</kw>
<status status="PASS" starttime="20230309 17:58:35.548" endtime="20230309 17:58:35.563"/>
</kw>
<msg timestamp="20230309 17:58:35.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:58:35.548" endtime="20230309 17:58:35.564"/>
</kw>
<status status="PASS" starttime="20230309 17:58:35.547" endtime="20230309 17:58:35.565"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/headobject/key=value/f1 --body /tmp/testfile</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:58:35.572" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key ozone-test-5176772344/headobject/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:58:36.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:58:36.876" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:58:35.568" endtime="20230309 17:58:36.876"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:58:36.878" level="INFO"/>
<status status="PASS" starttime="20230309 17:58:36.877" endtime="20230309 17:58:36.878"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:58:36.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:58:36.878" endtime="20230309 17:58:36.879"/>
</kw>
<msg timestamp="20230309 17:58:36.881" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:58:35.567" endtime="20230309 17:58:36.881"/>
</kw>
<msg timestamp="20230309 17:58:36.881" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 17:58:35.565" endtime="20230309 17:58:36.882"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/headobject/key=value/f1</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:58:36.893" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket link --key ozone-test-5176772344/headobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:58:38.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:58:38.071" level="INFO">${output} = {
    "LastModified": "Thu, 09 Mar 2023 17:58:36 GMT",
    "ContentLength": 11,
    "ETag": "2023-03-09T17:58:36.740Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "E...</msg>
<status status="PASS" starttime="20230309 17:58:36.887" endtime="20230309 17:58:38.071"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:58:38.073" level="INFO">{
    "LastModified": "Thu, 09 Mar 2023 17:58:36 GMT",
    "ContentLength": 11,
    "ETag": "2023-03-09T17:58:36.740Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Thu, 09 Mar 2023 17:58:37 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230309 17:58:38.072" endtime="20230309 17:58:38.074"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:58:38.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:58:38.074" endtime="20230309 17:58:38.075"/>
</kw>
<msg timestamp="20230309 17:58:38.076" level="INFO">${output} = {
    "LastModified": "Thu, 09 Mar 2023 17:58:36 GMT",
    "ContentLength": 11,
    "ETag": "2023-03-09T17:58:36.740Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "E...</msg>
<status status="PASS" starttime="20230309 17:58:36.886" endtime="20230309 17:58:38.076"/>
</kw>
<msg timestamp="20230309 17:58:38.076" level="INFO">${result} = {
    "LastModified": "Thu, 09 Mar 2023 17:58:36 GMT",
    "ContentLength": 11,
    "ETag": "2023-03-09T17:58:36.740Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "E...</msg>
<status status="PASS" starttime="20230309 17:58:36.882" endtime="20230309 17:58:38.076"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/headobject/key=value/f1</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:58:38.083" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket link --key ozone-test-5176772344/headobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:58:39.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:58:39.232" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:58:38.079" endtime="20230309 17:58:39.232"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:58:39.234" level="INFO"/>
<status status="PASS" starttime="20230309 17:58:39.233" endtime="20230309 17:58:39.234"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:58:39.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:58:39.235" endtime="20230309 17:58:39.236"/>
</kw>
<msg timestamp="20230309 17:58:39.239" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:58:38.078" endtime="20230309 17:58:39.239"/>
</kw>
<msg timestamp="20230309 17:58:39.240" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 17:58:38.077" endtime="20230309 17:58:39.240"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:58:35.546" endtime="20230309 17:58:39.242"/>
</test>
<test id="s1-s6-s10-t2" name="Head object in non existing bucket" line="39">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET}-non-existent --key ${PREFIX}/headobject/key=value/f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:58:39.257" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket link-non-existent --key ozone-test-5176772344/headobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:58:40.449" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:58:40.449" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20230309 17:58:39.251" endtime="20230309 17:58:40.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:58:40.451" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20230309 17:58:40.449" endtime="20230309 17:58:40.451"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:58:40.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:58:40.451" endtime="20230309 17:58:40.452"/>
</kw>
<msg timestamp="20230309 17:58:40.453" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20230309 17:58:39.249" endtime="20230309 17:58:40.453"/>
</kw>
<msg timestamp="20230309 17:58:40.453" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20230309 17:58:39.247" endtime="20230309 17:58:40.453"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:58:40.453" endtime="20230309 17:58:40.454"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:58:40.454" endtime="20230309 17:58:40.455"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:58:39.244" endtime="20230309 17:58:40.455"/>
</test>
<test id="s1-s6-s10-t3" name="Head non existing key" line="44">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/non-existent</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:58:40.470" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket link --key ozone-test-5176772344/non-existent 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:58:41.754" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:58:41.754" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20230309 17:58:40.464" endtime="20230309 17:58:41.754"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:58:41.756" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20230309 17:58:41.755" endtime="20230309 17:58:41.759"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:58:41.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:58:41.759" endtime="20230309 17:58:41.762"/>
</kw>
<msg timestamp="20230309 17:58:41.763" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20230309 17:58:40.463" endtime="20230309 17:58:41.763"/>
</kw>
<msg timestamp="20230309 17:58:41.764" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20230309 17:58:40.462" endtime="20230309 17:58:41.764"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:58:41.764" endtime="20230309 17:58:41.767"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:58:41.767" endtime="20230309 17:58:41.768"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:58:40.458" endtime="20230309 17:58:41.770"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20230309 17:58:07.553" endtime="20230309 17:58:41.772"/>
</suite>
<suite id="s1-s6-s11" name="Objectmultidelete" source="/opt/hadoop/smoketest/s3/objectmultidelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:58:41.820" level="INFO">${randStr} = 7690581649</msg>
<status status="PASS" starttime="20230309 17:58:41.820" endtime="20230309 17:58:41.820"/>
</kw>
<msg timestamp="20230309 17:58:41.821" level="INFO">${random} = ozone-test-7690581649</msg>
<status status="PASS" starttime="20230309 17:58:41.817" endtime="20230309 17:58:41.821"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:58:41.826" level="INFO">${PREFIX} = ozone-test-7690581649</msg>
<status status="PASS" starttime="20230309 17:58:41.821" endtime="20230309 17:58:41.826"/>
</kw>
<status status="PASS" starttime="20230309 17:58:41.816" endtime="20230309 17:58:41.827"/>
</kw>
<status status="PASS" starttime="20230309 17:58:41.816" endtime="20230309 17:58:41.827"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which aws</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:58:41.834" level="INFO">Running command 'which aws 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:58:41.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:58:41.837" level="INFO">${output} = /usr/local/bin/aws</msg>
<status status="PASS" starttime="20230309 17:58:41.830" endtime="20230309 17:58:41.837"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230309 17:58:41.839" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:58:41.839" endtime="20230309 17:58:41.840"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20230309 17:58:41.840" endtime="20230309 17:58:41.840"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230309 17:58:41.841" endtime="20230309 17:58:41.841"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20230309 17:58:41.841" endtime="20230309 17:58:41.841"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230309 17:58:41.841" endtime="20230309 17:58:41.841"/>
</kw>
<status status="PASS" starttime="20230309 17:58:41.828" endtime="20230309 17:58:41.842"/>
</kw>
<status status="PASS" starttime="20230309 17:58:41.827" endtime="20230309 17:58:41.842"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:58:41.850" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:58:41.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:58:41.856" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230309 17:58:41.847" endtime="20230309 17:58:41.856"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:58:41.858" level="INFO">s3g</msg>
<status status="PASS" starttime="20230309 17:58:41.857" endtime="20230309 17:58:41.858"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:58:41.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:58:41.858" endtime="20230309 17:58:41.859"/>
</kw>
<status status="PASS" starttime="20230309 17:58:41.846" endtime="20230309 17:58:41.859"/>
</kw>
<msg timestamp="20230309 17:58:41.859" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:58:41.846" endtime="20230309 17:58:41.860"/>
</kw>
<msg timestamp="20230309 17:58:41.861" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230309 17:58:41.845" endtime="20230309 17:58:41.861"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:58:41.864" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:58:41.861" endtime="20230309 17:58:41.865"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:58:41.871" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:58:41.917" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:58:41.917" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:58:41.867" endtime="20230309 17:58:41.917"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:58:41.920" level="INFO"/>
<status status="PASS" starttime="20230309 17:58:41.919" endtime="20230309 17:58:41.920"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:58:41.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:58:41.920" endtime="20230309 17:58:41.921"/>
</kw>
<status status="PASS" starttime="20230309 17:58:41.866" endtime="20230309 17:58:41.922"/>
</kw>
<msg timestamp="20230309 17:58:41.922" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:58:41.866" endtime="20230309 17:58:41.923"/>
</kw>
<status status="PASS" starttime="20230309 17:58:41.865" endtime="20230309 17:58:41.924"/>
</kw>
<status status="PASS" starttime="20230309 17:58:41.865" endtime="20230309 17:58:41.924"/>
</kw>
<status status="PASS" starttime="20230309 17:58:41.844" endtime="20230309 17:58:41.924"/>
</kw>
<status status="PASS" starttime="20230309 17:58:41.843" endtime="20230309 17:58:41.924"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:58:41.936" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:58:52.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:58:52.147" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:58:41.928" endtime="20230309 17:58:52.147"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:58:52.149" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:58:52.148" endtime="20230309 17:58:52.149"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:58:52.150" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:58:52.149" endtime="20230309 17:58:52.150"/>
</kw>
<status status="PASS" starttime="20230309 17:58:41.928" endtime="20230309 17:58:52.151"/>
</kw>
<msg timestamp="20230309 17:58:52.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:58:41.927" endtime="20230309 17:58:52.152"/>
</kw>
<msg timestamp="20230309 17:58:52.153" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:58:41.926" endtime="20230309 17:58:52.153"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230309 17:58:52.155" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230309 17:58:52.153" endtime="20230309 17:58:52.155"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20230309 17:58:52.156" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230309 17:58:52.155" endtime="20230309 17:58:52.156"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230309 17:58:52.157" level="INFO">${secret} = ['15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670']</msg>
<status status="PASS" starttime="20230309 17:58:52.156" endtime="20230309 17:58:52.157"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:58:52.159" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:58:52.158" endtime="20230309 17:58:52.159"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:58:52.161" level="INFO">${secret} = 15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:58:52.160" endtime="20230309 17:58:52.161"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:58:52.169" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:58:53.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:58:53.069" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:58:52.164" endtime="20230309 17:58:53.069"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:58:53.071" level="INFO"/>
<status status="PASS" starttime="20230309 17:58:53.070" endtime="20230309 17:58:53.071"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:58:53.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:58:53.071" endtime="20230309 17:58:53.072"/>
</kw>
<status status="PASS" starttime="20230309 17:58:52.163" endtime="20230309 17:58:53.073"/>
</kw>
<msg timestamp="20230309 17:58:53.073" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:58:52.162" endtime="20230309 17:58:53.074"/>
</kw>
<status status="PASS" starttime="20230309 17:58:52.161" endtime="20230309 17:58:53.075"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:58:53.082" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:58:54.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:58:54.042" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:58:53.078" endtime="20230309 17:58:54.042"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:58:54.044" level="INFO"/>
<status status="PASS" starttime="20230309 17:58:54.043" endtime="20230309 17:58:54.044"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:58:54.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:58:54.044" endtime="20230309 17:58:54.045"/>
</kw>
<status status="PASS" starttime="20230309 17:58:53.077" endtime="20230309 17:58:54.046"/>
</kw>
<msg timestamp="20230309 17:58:54.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:58:53.077" endtime="20230309 17:58:54.048"/>
</kw>
<status status="PASS" starttime="20230309 17:58:53.076" endtime="20230309 17:58:54.048"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:58:54.062" level="INFO">Running command 'aws configure set aws_secret_access_key 15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:58:54.963" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:58:54.963" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:58:54.050" endtime="20230309 17:58:54.963"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:58:54.965" level="INFO"/>
<status status="PASS" starttime="20230309 17:58:54.964" endtime="20230309 17:58:54.965"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:58:54.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:58:54.965" endtime="20230309 17:58:54.966"/>
</kw>
<status status="PASS" starttime="20230309 17:58:54.050" endtime="20230309 17:58:54.966"/>
</kw>
<msg timestamp="20230309 17:58:54.967" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:58:54.049" endtime="20230309 17:58:54.967"/>
</kw>
<status status="PASS" starttime="20230309 17:58:54.048" endtime="20230309 17:58:54.968"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:58:54.974" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:58:55.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:58:55.873" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:58:54.970" endtime="20230309 17:58:55.873"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:58:55.875" level="INFO"/>
<status status="PASS" starttime="20230309 17:58:55.874" endtime="20230309 17:58:55.875"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:58:55.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:58:55.875" endtime="20230309 17:58:55.876"/>
</kw>
<status status="PASS" starttime="20230309 17:58:54.969" endtime="20230309 17:58:55.877"/>
</kw>
<msg timestamp="20230309 17:58:55.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:58:54.969" endtime="20230309 17:58:55.878"/>
</kw>
<status status="PASS" starttime="20230309 17:58:54.968" endtime="20230309 17:58:55.878"/>
</kw>
<status status="PASS" starttime="20230309 17:58:41.926" endtime="20230309 17:58:55.879"/>
</kw>
<status status="PASS" starttime="20230309 17:58:41.925" endtime="20230309 17:58:55.879"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:58:55.879" endtime="20230309 17:58:55.880"/>
</kw>
<status status="PASS" starttime="20230309 17:58:41.843" endtime="20230309 17:58:55.880"/>
</kw>
<status status="PASS" starttime="20230309 17:58:41.842" endtime="20230309 17:58:55.880"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230309 17:58:55.881" endtime="20230309 17:58:55.882"/>
</kw>
<msg timestamp="20230309 17:58:55.882" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20230309 17:58:55.880" endtime="20230309 17:58:55.882"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:58:55.883" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20230309 17:58:55.883" endtime="20230309 17:58:55.883"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup links for S3 tests" library="commonawslib">
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:58:55.888" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/link 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:59:11.063" level="INFO">${rc} = 124</msg>
<msg timestamp="20230309 17:59:11.063" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:58:55.885" endtime="20230309 17:59:11.063"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230309 17:59:11.067" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:59:11.066" endtime="20230309 17:59:11.068"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230309 17:59:11.068" endtime="20230309 17:59:11.068"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230309 17:59:11.068" endtime="20230309 17:59:11.068"/>
</kw>
<msg timestamp="20230309 17:59:11.069" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20230309 17:58:55.885" endtime="20230309 17:59:11.069"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:59:11.071" endtime="20230309 17:59:11.072"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://${OM_SERVICE_ID}/legacy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:59:11.080" level="INFO">Running command 'ozone sh volume create o3://om/legacy 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:59:24.498" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 17:59:24.498" level="INFO">${output} = VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" starttime="20230309 17:59:11.077" endtime="20230309 17:59:24.498"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:59:24.500" level="INFO">VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" starttime="20230309 17:59:24.499" endtime="20230309 17:59:24.500"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:59:24.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20230309 17:59:24.509" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20230309 17:59:24.500" endtime="20230309 17:59:24.509"/>
</kw>
<status status="FAIL" starttime="20230309 17:59:11.076" endtime="20230309 17:59:24.511"/>
</kw>
<msg timestamp="20230309 17:59:24.511" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20230309 17:59:11.073" endtime="20230309 17:59:24.512"/>
</kw>
<status status="FAIL" starttime="20230309 17:59:11.072" endtime="20230309 17:59:24.513"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create o3://${OM_SERVICE_ID}/legacy/source-bucket</arg>
<status status="NOT RUN" starttime="20230309 17:59:24.515" endtime="20230309 17:59:24.515"/>
</kw>
<kw name="Create link" library="commonawslib">
<arg>link</arg>
<status status="NOT RUN" starttime="20230309 17:59:24.515" endtime="20230309 17:59:24.515"/>
</kw>
<status status="FAIL" starttime="20230309 17:58:55.884" endtime="20230309 17:59:24.516"/>
</kw>
<status status="FAIL" starttime="20230309 17:58:55.883" endtime="20230309 17:59:24.516"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230309 17:59:24.519" endtime="20230309 17:59:24.519"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230309 17:59:24.519" endtime="20230309 17:59:24.519"/>
</kw>
<status status="FAIL" starttime="20230309 17:58:41.815" endtime="20230309 17:59:24.520"/>
</kw>
<test id="s1-s6-s11-t1" name="Delete file with multi delete" line="31">
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20230309 17:59:24.521" endtime="20230309 17:59:24.524">Parent suite setup failed:
255 != 0</status>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="FAIL" starttime="20230309 17:58:41.780" endtime="20230309 17:59:24.528">Suite setup failed:
255 != 0</status>
</suite>
<suite id="s1-s6-s12" name="Objectputget" source="/opt/hadoop/smoketest/s3/objectputget.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 17:59:24.560" level="INFO">${randStr} = 8598553013</msg>
<status status="PASS" starttime="20230309 17:59:24.560" endtime="20230309 17:59:24.560"/>
</kw>
<msg timestamp="20230309 17:59:24.561" level="INFO">${random} = ozone-test-8598553013</msg>
<status status="PASS" starttime="20230309 17:59:24.559" endtime="20230309 17:59:24.561"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:59:24.563" level="INFO">${PREFIX} = ozone-test-8598553013</msg>
<status status="PASS" starttime="20230309 17:59:24.561" endtime="20230309 17:59:24.563"/>
</kw>
<status status="PASS" starttime="20230309 17:59:24.559" endtime="20230309 17:59:24.563"/>
</kw>
<status status="PASS" starttime="20230309 17:59:24.559" endtime="20230309 17:59:24.563"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which aws</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:59:24.568" level="INFO">Running command 'which aws 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:59:24.571" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:59:24.571" level="INFO">${output} = /usr/local/bin/aws</msg>
<status status="PASS" starttime="20230309 17:59:24.564" endtime="20230309 17:59:24.572"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230309 17:59:24.573" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:59:24.572" endtime="20230309 17:59:24.573"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20230309 17:59:24.574" endtime="20230309 17:59:24.574"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230309 17:59:24.574" endtime="20230309 17:59:24.574"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20230309 17:59:24.574" endtime="20230309 17:59:24.575"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230309 17:59:24.575" endtime="20230309 17:59:24.575"/>
</kw>
<status status="PASS" starttime="20230309 17:59:24.564" endtime="20230309 17:59:24.575"/>
</kw>
<status status="PASS" starttime="20230309 17:59:24.564" endtime="20230309 17:59:24.575"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:59:24.584" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:59:24.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:59:24.590" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230309 17:59:24.581" endtime="20230309 17:59:24.590"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:59:24.592" level="INFO">s3g</msg>
<status status="PASS" starttime="20230309 17:59:24.591" endtime="20230309 17:59:24.592"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:59:24.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:59:24.592" endtime="20230309 17:59:24.593"/>
</kw>
<status status="PASS" starttime="20230309 17:59:24.580" endtime="20230309 17:59:24.593"/>
</kw>
<msg timestamp="20230309 17:59:24.593" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:59:24.580" endtime="20230309 17:59:24.594"/>
</kw>
<msg timestamp="20230309 17:59:24.595" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230309 17:59:24.579" endtime="20230309 17:59:24.595"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:59:24.597" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:59:24.595" endtime="20230309 17:59:24.598"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:59:24.604" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:59:24.645" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:59:24.645" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:59:24.600" endtime="20230309 17:59:24.645"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:59:24.647" level="INFO"/>
<status status="PASS" starttime="20230309 17:59:24.646" endtime="20230309 17:59:24.647"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:59:24.648" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:59:24.648" endtime="20230309 17:59:24.648"/>
</kw>
<status status="PASS" starttime="20230309 17:59:24.600" endtime="20230309 17:59:24.649"/>
</kw>
<msg timestamp="20230309 17:59:24.649" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:59:24.599" endtime="20230309 17:59:24.650"/>
</kw>
<status status="PASS" starttime="20230309 17:59:24.599" endtime="20230309 17:59:24.650"/>
</kw>
<status status="PASS" starttime="20230309 17:59:24.598" endtime="20230309 17:59:24.650"/>
</kw>
<status status="PASS" starttime="20230309 17:59:24.578" endtime="20230309 17:59:24.651"/>
</kw>
<status status="PASS" starttime="20230309 17:59:24.578" endtime="20230309 17:59:24.651"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:59:24.662" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:59:35.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:59:35.082" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:59:24.657" endtime="20230309 17:59:35.082"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:59:35.089" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:59:35.088" endtime="20230309 17:59:35.089"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:59:35.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:59:35.090" endtime="20230309 17:59:35.091"/>
</kw>
<status status="PASS" starttime="20230309 17:59:24.655" endtime="20230309 17:59:35.091"/>
</kw>
<msg timestamp="20230309 17:59:35.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:59:24.655" endtime="20230309 17:59:35.093"/>
</kw>
<msg timestamp="20230309 17:59:35.093" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:59:24.653" endtime="20230309 17:59:35.093"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230309 17:59:35.094" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230309 17:59:35.093" endtime="20230309 17:59:35.094"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20230309 17:59:35.095" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230309 17:59:35.094" endtime="20230309 17:59:35.096"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230309 17:59:35.099" level="INFO">${secret} = ['15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670']</msg>
<status status="PASS" starttime="20230309 17:59:35.096" endtime="20230309 17:59:35.099"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:59:35.101" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 17:59:35.099" endtime="20230309 17:59:35.101"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230309 17:59:35.104" level="INFO">${secret} = 15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670</msg>
<status status="PASS" starttime="20230309 17:59:35.101" endtime="20230309 17:59:35.104"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:59:35.113" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:59:36.049" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:59:36.049" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:59:35.108" endtime="20230309 17:59:36.049"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:59:36.051" level="INFO"/>
<status status="PASS" starttime="20230309 17:59:36.050" endtime="20230309 17:59:36.051"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:59:36.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:59:36.051" endtime="20230309 17:59:36.053"/>
</kw>
<status status="PASS" starttime="20230309 17:59:35.106" endtime="20230309 17:59:36.053"/>
</kw>
<msg timestamp="20230309 17:59:36.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:59:35.106" endtime="20230309 17:59:36.054"/>
</kw>
<status status="PASS" starttime="20230309 17:59:35.104" endtime="20230309 17:59:36.055"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:59:36.062" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:59:37.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:59:37.095" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:59:36.057" endtime="20230309 17:59:37.096"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:59:37.098" level="INFO"/>
<status status="PASS" starttime="20230309 17:59:37.097" endtime="20230309 17:59:37.098"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:59:37.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:59:37.098" endtime="20230309 17:59:37.100"/>
</kw>
<status status="PASS" starttime="20230309 17:59:36.056" endtime="20230309 17:59:37.101"/>
</kw>
<msg timestamp="20230309 17:59:37.101" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:59:36.056" endtime="20230309 17:59:37.103"/>
</kw>
<status status="PASS" starttime="20230309 17:59:36.055" endtime="20230309 17:59:37.104"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:59:37.113" level="INFO">Running command 'aws configure set aws_secret_access_key 15931669d03269990fd2bf6d3bc3f808a7d9cf957a9edfd8e55e613377ef9670 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:59:38.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:59:38.001" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:59:37.107" endtime="20230309 17:59:38.002"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:59:38.003" level="INFO"/>
<status status="PASS" starttime="20230309 17:59:38.002" endtime="20230309 17:59:38.003"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:59:38.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:59:38.003" endtime="20230309 17:59:38.004"/>
</kw>
<status status="PASS" starttime="20230309 17:59:37.106" endtime="20230309 17:59:38.005"/>
</kw>
<msg timestamp="20230309 17:59:38.005" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:59:37.105" endtime="20230309 17:59:38.006"/>
</kw>
<status status="PASS" starttime="20230309 17:59:37.104" endtime="20230309 17:59:38.006"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:59:38.011" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:59:38.912" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:59:38.912" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:59:38.008" endtime="20230309 17:59:38.912"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:59:38.913" level="INFO"/>
<status status="PASS" starttime="20230309 17:59:38.913" endtime="20230309 17:59:38.915"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:59:38.916" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:59:38.915" endtime="20230309 17:59:38.916"/>
</kw>
<status status="PASS" starttime="20230309 17:59:38.008" endtime="20230309 17:59:38.918"/>
</kw>
<msg timestamp="20230309 17:59:38.918" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:59:38.007" endtime="20230309 17:59:38.919"/>
</kw>
<status status="PASS" starttime="20230309 17:59:38.007" endtime="20230309 17:59:38.919"/>
</kw>
<status status="PASS" starttime="20230309 17:59:24.653" endtime="20230309 17:59:38.919"/>
</kw>
<status status="PASS" starttime="20230309 17:59:24.652" endtime="20230309 17:59:38.920"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:59:38.920" endtime="20230309 17:59:38.920"/>
</kw>
<status status="PASS" starttime="20230309 17:59:24.577" endtime="20230309 17:59:38.921"/>
</kw>
<status status="PASS" starttime="20230309 17:59:24.576" endtime="20230309 17:59:38.921"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230309 17:59:38.922" endtime="20230309 17:59:38.922"/>
</kw>
<msg timestamp="20230309 17:59:38.922" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20230309 17:59:38.921" endtime="20230309 17:59:38.922"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 17:59:38.923" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20230309 17:59:38.922" endtime="20230309 17:59:38.923"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup links for S3 tests" library="commonawslib">
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:59:38.928" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/link 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:59:51.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:59:51.481" level="INFO">${output} = {
  "volumeName" : "s3v",
  "bucketName" : "link",
  "sourceVolume" : "legacy",
  "sourceBucket" : "source-bucket",
  "creationTime" : "2023-03-09T17:51:22.562Z",
  "modificationTime" : "2023-03-09T17...</msg>
<status status="PASS" starttime="20230309 17:59:38.925" endtime="20230309 17:59:51.481"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:59:51.482" endtime="20230309 17:59:51.484"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:59:51.484" endtime="20230309 17:59:51.485"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:59:51.485" endtime="20230309 17:59:51.486"/>
</kw>
<msg timestamp="20230309 17:59:51.487" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20230309 17:59:38.924" endtime="20230309 17:59:51.487"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230309 17:59:51.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:59:51.487" endtime="20230309 17:59:51.488"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://${OM_SERVICE_ID}/legacy</arg>
<status status="NOT RUN" starttime="20230309 17:59:51.489" endtime="20230309 17:59:51.489"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create o3://${OM_SERVICE_ID}/legacy/source-bucket</arg>
<status status="NOT RUN" starttime="20230309 17:59:51.489" endtime="20230309 17:59:51.489"/>
</kw>
<kw name="Create link" library="commonawslib">
<arg>link</arg>
<status status="NOT RUN" starttime="20230309 17:59:51.489" endtime="20230309 17:59:51.489"/>
</kw>
<status status="PASS" starttime="20230309 17:59:38.924" endtime="20230309 17:59:51.490"/>
</kw>
<status status="PASS" starttime="20230309 17:59:38.923" endtime="20230309 17:59:51.490"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:59:51.490" endtime="20230309 17:59:51.491"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 17:59:51.491" endtime="20230309 17:59:51.492"/>
</kw>
<status status="PASS" starttime="20230309 17:59:24.558" endtime="20230309 17:59:51.492"/>
</kw>
<test id="s1-s6-s12-t1" name="Put object to s3" line="32">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:59:51.501" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20230309 17:59:51.504" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:59:51.504" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:59:51.498" endtime="20230309 17:59:51.504"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:59:51.505" level="INFO"/>
<status status="PASS" starttime="20230309 17:59:51.504" endtime="20230309 17:59:51.505"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:59:51.507" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:59:51.506" endtime="20230309 17:59:51.507"/>
</kw>
<status status="PASS" starttime="20230309 17:59:51.496" endtime="20230309 17:59:51.507"/>
</kw>
<msg timestamp="20230309 17:59:51.507" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:59:51.496" endtime="20230309 17:59:51.508"/>
</kw>
<status status="PASS" starttime="20230309 17:59:51.495" endtime="20230309 17:59:51.509"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:59:51.515" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key ozone-test-8598553013/putobject/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:59:52.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:59:52.850" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:59:51.512" endtime="20230309 17:59:52.852"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:59:52.857" level="INFO"/>
<status status="PASS" starttime="20230309 17:59:52.856" endtime="20230309 17:59:52.858"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:59:52.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:59:52.859" endtime="20230309 17:59:52.860"/>
</kw>
<status status="PASS" starttime="20230309 17:59:51.511" endtime="20230309 17:59:52.860"/>
</kw>
<msg timestamp="20230309 17:59:52.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:59:51.511" endtime="20230309 17:59:52.863"/>
</kw>
<msg timestamp="20230309 17:59:52.863" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:59:51.510" endtime="20230309 17:59:52.863"/>
</kw>
<msg timestamp="20230309 17:59:52.864" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 17:59:51.509" endtime="20230309 17:59:52.864"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/putobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:59:52.880" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket link --prefix ozone-test-8598553013/putobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:59:53.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:59:53.958" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-8598553013/putobject/key=value/f1",
            "LastModified": "2023-03-09T17:59:52.736Z",
            "ETag": "2023-03-09T17:59:52.736Z",...</msg>
<status status="PASS" starttime="20230309 17:59:52.873" endtime="20230309 17:59:53.958"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:59:53.961" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-8598553013/putobject/key=value/f1",
            "LastModified": "2023-03-09T17:59:52.736Z",
            "ETag": "2023-03-09T17:59:52.736Z",
            "Size": 11,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20230309 17:59:53.958" endtime="20230309 17:59:53.962"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:59:53.963" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:59:53.962" endtime="20230309 17:59:53.963"/>
</kw>
<status status="PASS" starttime="20230309 17:59:52.871" endtime="20230309 17:59:53.965"/>
</kw>
<msg timestamp="20230309 17:59:53.965" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:59:52.867" endtime="20230309 17:59:53.969"/>
</kw>
<msg timestamp="20230309 17:59:53.969" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-8598553013/putobject/key=value/f1",
            "LastModified": "2023-03-09T17:59:52.736Z",
            "ETag": "2023-03-09T17:59:52.736Z",...</msg>
<status status="PASS" starttime="20230309 17:59:52.866" endtime="20230309 17:59:53.969"/>
</kw>
<msg timestamp="20230309 17:59:53.971" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-8598553013/putobject/key=value/f1",
            "LastModified": "2023-03-09T17:59:52.736Z",
            "ETag": "2023-03-09T17:59:52.736Z",...</msg>
<status status="PASS" starttime="20230309 17:59:52.864" endtime="20230309 17:59:53.971"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:59:53.971" endtime="20230309 17:59:53.972"/>
</kw>
<kw name="Execute" library="os">
<arg>touch -f /tmp/zerobyte</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:59:53.980" level="INFO">Running command 'touch -f /tmp/zerobyte 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:59:53.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:59:53.986" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:59:53.975" endtime="20230309 17:59:53.986"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:59:53.988" level="INFO"/>
<status status="PASS" starttime="20230309 17:59:53.987" endtime="20230309 17:59:53.988"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:59:53.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:59:53.988" endtime="20230309 17:59:53.990"/>
</kw>
<status status="PASS" starttime="20230309 17:59:53.974" endtime="20230309 17:59:53.990"/>
</kw>
<msg timestamp="20230309 17:59:53.990" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:59:53.974" endtime="20230309 17:59:53.991"/>
</kw>
<status status="PASS" starttime="20230309 17:59:53.972" endtime="20230309 17:59:53.992"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --body /tmp/zerobyte</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:59:54.000" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key ozone-test-8598553013/putobject/key=value/zerobyte --body /tmp/zerobyte 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:59:55.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:59:55.012" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:59:53.997" endtime="20230309 17:59:55.012"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:59:55.014" level="INFO"/>
<status status="PASS" starttime="20230309 17:59:55.013" endtime="20230309 17:59:55.015"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:59:55.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:59:55.015" endtime="20230309 17:59:55.016"/>
</kw>
<status status="PASS" starttime="20230309 17:59:53.996" endtime="20230309 17:59:55.017"/>
</kw>
<msg timestamp="20230309 17:59:55.017" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:59:53.995" endtime="20230309 17:59:55.018"/>
</kw>
<msg timestamp="20230309 17:59:55.018" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 17:59:53.994" endtime="20230309 17:59:55.018"/>
</kw>
<msg timestamp="20230309 17:59:55.019" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 17:59:53.992" endtime="20230309 17:59:55.019"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/putobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:59:55.026" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket link --prefix ozone-test-8598553013/putobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:59:56.157" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:59:56.157" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-8598553013/putobject/key=value/f1",
            "LastModified": "2023-03-09T17:59:52.736Z",
            "ETag": "2023-03-09T17:59:52.736Z",...</msg>
<status status="PASS" starttime="20230309 17:59:55.022" endtime="20230309 17:59:56.158"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:59:56.159" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-8598553013/putobject/key=value/f1",
            "LastModified": "2023-03-09T17:59:52.736Z",
            "ETag": "2023-03-09T17:59:52.736Z",
            "Size": 11,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-8598553013/putobject/key=value/zerobyte",
            "LastModified": "2023-03-09T17:59:54.915Z",
            "ETag": "2023-03-09T17:59:54.915Z",
            "Size": 0,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20230309 17:59:56.158" endtime="20230309 17:59:56.160"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:59:56.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:59:56.160" endtime="20230309 17:59:56.161"/>
</kw>
<status status="PASS" starttime="20230309 17:59:55.021" endtime="20230309 17:59:56.161"/>
</kw>
<msg timestamp="20230309 17:59:56.161" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:59:55.021" endtime="20230309 17:59:56.162"/>
</kw>
<msg timestamp="20230309 17:59:56.163" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-8598553013/putobject/key=value/f1",
            "LastModified": "2023-03-09T17:59:52.736Z",
            "ETag": "2023-03-09T17:59:52.736Z",...</msg>
<status status="PASS" starttime="20230309 17:59:55.020" endtime="20230309 17:59:56.163"/>
</kw>
<msg timestamp="20230309 17:59:56.163" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-8598553013/putobject/key=value/f1",
            "LastModified": "2023-03-09T17:59:52.736Z",
            "ETag": "2023-03-09T17:59:52.736Z",...</msg>
<status status="PASS" starttime="20230309 17:59:55.019" endtime="20230309 17:59:56.163"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>zerobyte</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:59:56.163" endtime="20230309 17:59:56.164"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:59:51.493" endtime="20230309 17:59:56.165"/>
</test>
<test id="s1-s6-s12-t2" name="Get object from s3" line="44">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 /tmp/testfile.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:59:56.176" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-8598553013/putobject/key=value/f1 /tmp/testfile.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:59:57.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:59:57.272" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:59:52 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230309 17:59:56.173" endtime="20230309 17:59:57.272"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:59:57.274" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:59:52 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 09 Mar 2023 17:59:57 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230309 17:59:57.273" endtime="20230309 17:59:57.274"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:59:57.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:59:57.274" endtime="20230309 17:59:57.275"/>
</kw>
<status status="PASS" starttime="20230309 17:59:56.171" endtime="20230309 17:59:57.276"/>
</kw>
<msg timestamp="20230309 17:59:57.276" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:59:56.171" endtime="20230309 17:59:57.277"/>
</kw>
<msg timestamp="20230309 17:59:57.277" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:59:52 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230309 17:59:56.169" endtime="20230309 17:59:57.277"/>
</kw>
<msg timestamp="20230309 17:59:57.278" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:59:52 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230309 17:59:56.167" endtime="20230309 17:59:57.278"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/testfile</arg>
<arg>/tmp/testfile.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:59:57.287" level="INFO">Running command 'md5sum /tmp/testfile | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:59:57.292" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:59:57.293" level="INFO">${output} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20230309 17:59:57.283" endtime="20230309 17:59:57.293"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:59:57.295" level="INFO">09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20230309 17:59:57.294" endtime="20230309 17:59:57.295"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:59:57.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:59:57.295" endtime="20230309 17:59:57.296"/>
</kw>
<status status="PASS" starttime="20230309 17:59:57.281" endtime="20230309 17:59:57.297"/>
</kw>
<msg timestamp="20230309 17:59:57.297" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:59:57.281" endtime="20230309 17:59:57.298"/>
</kw>
<msg timestamp="20230309 17:59:57.299" level="INFO">${checksumbefore} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20230309 17:59:57.280" endtime="20230309 17:59:57.299"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:59:57.305" level="INFO">Running command 'md5sum /tmp/testfile.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:59:57.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:59:57.312" level="INFO">${output} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20230309 17:59:57.302" endtime="20230309 17:59:57.312"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:59:57.313" level="INFO">09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20230309 17:59:57.312" endtime="20230309 17:59:57.314"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:59:57.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:59:57.314" endtime="20230309 17:59:57.315"/>
</kw>
<status status="PASS" starttime="20230309 17:59:57.301" endtime="20230309 17:59:57.316"/>
</kw>
<msg timestamp="20230309 17:59:57.316" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:59:57.300" endtime="20230309 17:59:57.316"/>
</kw>
<msg timestamp="20230309 17:59:57.317" level="INFO">${checksumafter} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20230309 17:59:57.299" endtime="20230309 17:59:57.317"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 17:59:57.317" endtime="20230309 17:59:57.318"/>
</kw>
<status status="PASS" starttime="20230309 17:59:57.279" endtime="20230309 17:59:57.318"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:59:56.166" endtime="20230309 17:59:57.319"/>
</test>
<test id="s1-s6-s12-t3" name="Get object with wrong signature" line="49">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230309 17:59:57.322" endtime="20230309 17:59:57.323"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>curl -i -H 'Authorization: AWS scm/scm@EXAMPLE.COM:asdfqwerty' ${ENDPOINT_URL}/${BUCKET}/${PREFIX}/putobject/key=value/f1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:59:57.329" level="INFO">Running command 'curl -i -H 'Authorization: AWS scm/scm@EXAMPLE.COM:asdfqwerty' http://s3g:9878/link/ozone-test-8598553013/putobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:59:57.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:59:57.368" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20230309 17:59:57.325" endtime="20230309 17:59:57.368"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:59:57.369" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
100   288  100   288    0     0  10588      0 --:--:-- --:--:-- --:--:-- 10666
HTTP/1.1 403 Forbidden
Date: Thu, 09 Mar 2023 17:59:57 GMT
Cache-Control: no-cache
Expires: Thu, 09 Mar 2023 17:59:57 GMT
Pragma: no-cache
Content-Type: text/plain
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Server: Ozone
x-amz-id-2: n0q5ZJjPqv0jG2S
x-amz-request-id: 7805a6a6-1be0-497d-be65-efe395bd16fe
Content-Length: 288

&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;Error&gt;
  &lt;Code&gt;AccessDenied&lt;/Code&gt;
  &lt;Message&gt;User doesn't have the right to access this resource.&lt;/Message&gt;
  &lt;Resource&gt;ozone-test-8598553013/putobject/key=value/f1&lt;/Resource&gt;
  &lt;RequestId&gt;7805a6a6-1be0-497d-be65-efe395bd16fe&lt;/RequestId&gt;
&lt;/Error&gt;</msg>
<status status="PASS" starttime="20230309 17:59:57.368" endtime="20230309 17:59:57.370"/>
</kw>
<msg timestamp="20230309 17:59:57.370" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20230309 17:59:57.324" endtime="20230309 17:59:57.370"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>403 Forbidden</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:59:57.370" endtime="20230309 17:59:57.371"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:59:57.321" endtime="20230309 17:59:57.372"/>
</test>
<test id="s1-s6-s12-t4" name="Get Partial object from s3 with both start and endoffset" line="54">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0-4 /tmp/testfile1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:59:57.384" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-8598553013/putobject/key=value/f1 --range bytes=0-4 /tmp/testfile1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:59:58.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:59:58.531" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:59:52 GMT",
    "ContentLength": 5,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-4/11",
    "ContentType": "appl...</msg>
<status status="PASS" starttime="20230309 17:59:57.380" endtime="20230309 17:59:58.531"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:59:58.533" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:59:52 GMT",
    "ContentLength": 5,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-4/11",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 09 Mar 2023 17:59:58 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230309 17:59:58.532" endtime="20230309 17:59:58.533"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:59:58.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:59:58.534" endtime="20230309 17:59:58.535"/>
</kw>
<status status="PASS" starttime="20230309 17:59:57.379" endtime="20230309 17:59:58.535"/>
</kw>
<msg timestamp="20230309 17:59:58.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:59:57.379" endtime="20230309 17:59:58.537"/>
</kw>
<msg timestamp="20230309 17:59:58.537" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:59:52 GMT",
    "ContentLength": 5,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-4/11",
    "ContentType": "appl...</msg>
<status status="PASS" starttime="20230309 17:59:57.377" endtime="20230309 17:59:58.537"/>
</kw>
<msg timestamp="20230309 17:59:58.538" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:59:52 GMT",
    "ContentLength": 5,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-4/11",
    "ContentType": "appl...</msg>
<status status="PASS" starttime="20230309 17:59:57.376" endtime="20230309 17:59:58.538"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:59:58.538" endtime="20230309 17:59:58.539"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:59:58.539" endtime="20230309 17:59:58.541"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:59:58.541" endtime="20230309 17:59:58.542"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=0 bs=1 count=5 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:59:58.550" level="INFO">Running command 'dd if=/tmp/testfile skip=0 bs=1 count=5 2&gt;/dev/null'.</msg>
<msg timestamp="20230309 17:59:58.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:59:58.554" level="INFO">${output} = Rando</msg>
<status status="PASS" starttime="20230309 17:59:58.546" endtime="20230309 17:59:58.555"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:59:58.556" level="INFO">Rando</msg>
<status status="PASS" starttime="20230309 17:59:58.555" endtime="20230309 17:59:58.556"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:59:58.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:59:58.557" endtime="20230309 17:59:58.558"/>
</kw>
<status status="PASS" starttime="20230309 17:59:58.543" endtime="20230309 17:59:58.558"/>
</kw>
<msg timestamp="20230309 17:59:58.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:59:58.543" endtime="20230309 17:59:58.559"/>
</kw>
<msg timestamp="20230309 17:59:58.559" level="INFO">${expectedData} = Rando</msg>
<status status="PASS" starttime="20230309 17:59:58.542" endtime="20230309 17:59:58.559"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:59:58.570" level="INFO">Running command 'cat /tmp/testfile1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:59:58.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:59:58.574" level="INFO">${output} = Rando</msg>
<status status="PASS" starttime="20230309 17:59:58.565" endtime="20230309 17:59:58.574"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:59:58.577" level="INFO">Rando</msg>
<status status="PASS" starttime="20230309 17:59:58.575" endtime="20230309 17:59:58.577"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:59:58.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:59:58.577" endtime="20230309 17:59:58.578"/>
</kw>
<status status="PASS" starttime="20230309 17:59:58.564" endtime="20230309 17:59:58.579"/>
</kw>
<msg timestamp="20230309 17:59:58.579" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:59:58.563" endtime="20230309 17:59:58.580"/>
</kw>
<msg timestamp="20230309 17:59:58.580" level="INFO">${actualData} = Rando</msg>
<status status="PASS" starttime="20230309 17:59:58.561" endtime="20230309 17:59:58.580"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 17:59:58.581" endtime="20230309 17:59:58.581"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=2-4 /tmp/testfile1.result1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:59:58.588" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-8598553013/putobject/key=value/f1 --range bytes=2-4 /tmp/testfile1.result1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:59:59.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:59:59.681" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:59:52 GMT",
    "ContentLength": 3,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-4/11",
    "ContentType": "appl...</msg>
<status status="PASS" starttime="20230309 17:59:58.585" endtime="20230309 17:59:59.681"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:59:59.683" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:59:52 GMT",
    "ContentLength": 3,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-4/11",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 09 Mar 2023 17:59:59 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230309 17:59:59.682" endtime="20230309 17:59:59.683"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:59:59.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:59:59.684" endtime="20230309 17:59:59.685"/>
</kw>
<status status="PASS" starttime="20230309 17:59:58.584" endtime="20230309 17:59:59.685"/>
</kw>
<msg timestamp="20230309 17:59:59.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:59:58.584" endtime="20230309 17:59:59.687"/>
</kw>
<msg timestamp="20230309 17:59:59.688" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:59:52 GMT",
    "ContentLength": 3,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-4/11",
    "ContentType": "appl...</msg>
<status status="PASS" starttime="20230309 17:59:58.583" endtime="20230309 17:59:59.688"/>
</kw>
<msg timestamp="20230309 17:59:59.689" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:59:52 GMT",
    "ContentLength": 3,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-4/11",
    "ContentType": "appl...</msg>
<status status="PASS" starttime="20230309 17:59:58.582" endtime="20230309 17:59:59.689"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:59:59.689" endtime="20230309 17:59:59.691"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 2-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:59:59.691" endtime="20230309 17:59:59.693"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 17:59:59.694" endtime="20230309 17:59:59.696"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=2 bs=1 count=3 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:59:59.704" level="INFO">Running command 'dd if=/tmp/testfile skip=2 bs=1 count=3 2&gt;/dev/null'.</msg>
<msg timestamp="20230309 17:59:59.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:59:59.708" level="INFO">${output} = ndo</msg>
<status status="PASS" starttime="20230309 17:59:59.700" endtime="20230309 17:59:59.708"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:59:59.711" level="INFO">ndo</msg>
<status status="PASS" starttime="20230309 17:59:59.710" endtime="20230309 17:59:59.711"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:59:59.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:59:59.711" endtime="20230309 17:59:59.712"/>
</kw>
<status status="PASS" starttime="20230309 17:59:59.698" endtime="20230309 17:59:59.713"/>
</kw>
<msg timestamp="20230309 17:59:59.714" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:59:59.698" endtime="20230309 17:59:59.714"/>
</kw>
<msg timestamp="20230309 17:59:59.715" level="INFO">${expectedData} = ndo</msg>
<status status="PASS" starttime="20230309 17:59:59.697" endtime="20230309 17:59:59.715"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:59:59.725" level="INFO">Running command 'cat /tmp/testfile1.result1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 17:59:59.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 17:59:59.728" level="INFO">${output} = ndo</msg>
<status status="PASS" starttime="20230309 17:59:59.718" endtime="20230309 17:59:59.728"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 17:59:59.729" level="INFO">ndo</msg>
<status status="PASS" starttime="20230309 17:59:59.728" endtime="20230309 17:59:59.730"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 17:59:59.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 17:59:59.730" endtime="20230309 17:59:59.731"/>
</kw>
<status status="PASS" starttime="20230309 17:59:59.717" endtime="20230309 17:59:59.731"/>
</kw>
<msg timestamp="20230309 17:59:59.731" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:59:59.716" endtime="20230309 17:59:59.732"/>
</kw>
<msg timestamp="20230309 17:59:59.732" level="INFO">${actualData} = ndo</msg>
<status status="PASS" starttime="20230309 17:59:59.715" endtime="20230309 17:59:59.732"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 17:59:59.732" endtime="20230309 17:59:59.733"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=2-1000 /tmp/testfile1.result2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 17:59:59.750" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-8598553013/putobject/key=value/f1 --range bytes=2-1000 /tmp/testfile1.result2 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 18:00:00.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 18:00:00.904" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:59:52 GMT",
    "ContentLength": 9,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-10/11",
    "ContentType": "app...</msg>
<status status="PASS" starttime="20230309 17:59:59.737" endtime="20230309 18:00:00.904"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 18:00:00.908" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:59:52 GMT",
    "ContentLength": 9,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 09 Mar 2023 18:00:00 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230309 18:00:00.905" endtime="20230309 18:00:00.908"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 18:00:00.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 18:00:00.909" endtime="20230309 18:00:00.910"/>
</kw>
<status status="PASS" starttime="20230309 17:59:59.736" endtime="20230309 18:00:00.911"/>
</kw>
<msg timestamp="20230309 18:00:00.911" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 17:59:59.735" endtime="20230309 18:00:00.911"/>
</kw>
<msg timestamp="20230309 18:00:00.912" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:59:52 GMT",
    "ContentLength": 9,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-10/11",
    "ContentType": "app...</msg>
<status status="PASS" starttime="20230309 17:59:59.735" endtime="20230309 18:00:00.912"/>
</kw>
<msg timestamp="20230309 18:00:00.913" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:59:52 GMT",
    "ContentLength": 9,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-10/11",
    "ContentType": "app...</msg>
<status status="PASS" starttime="20230309 17:59:59.733" endtime="20230309 18:00:00.913"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 18:00:00.913" endtime="20230309 18:00:00.915"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 2-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 18:00:00.915" endtime="20230309 18:00:00.916"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 18:00:00.916" endtime="20230309 18:00:00.917"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=2 bs=1 count=9 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 18:00:00.926" level="INFO">Running command 'dd if=/tmp/testfile skip=2 bs=1 count=9 2&gt;/dev/null'.</msg>
<msg timestamp="20230309 18:00:00.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 18:00:00.931" level="INFO">${output} = ndomtext</msg>
<status status="PASS" starttime="20230309 18:00:00.921" endtime="20230309 18:00:00.932"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 18:00:00.934" level="INFO">ndomtext</msg>
<status status="PASS" starttime="20230309 18:00:00.932" endtime="20230309 18:00:00.934"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 18:00:00.935" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 18:00:00.934" endtime="20230309 18:00:00.935"/>
</kw>
<status status="PASS" starttime="20230309 18:00:00.919" endtime="20230309 18:00:00.936"/>
</kw>
<msg timestamp="20230309 18:00:00.936" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 18:00:00.919" endtime="20230309 18:00:00.937"/>
</kw>
<msg timestamp="20230309 18:00:00.937" level="INFO">${expectedData} = ndomtext</msg>
<status status="PASS" starttime="20230309 18:00:00.918" endtime="20230309 18:00:00.937"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 18:00:00.946" level="INFO">Running command 'cat /tmp/testfile1.result2 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 18:00:00.952" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 18:00:00.952" level="INFO">${output} = ndomtext</msg>
<status status="PASS" starttime="20230309 18:00:00.941" endtime="20230309 18:00:00.952"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 18:00:00.954" level="INFO">ndomtext</msg>
<status status="PASS" starttime="20230309 18:00:00.953" endtime="20230309 18:00:00.955"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 18:00:00.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 18:00:00.955" endtime="20230309 18:00:00.956"/>
</kw>
<status status="PASS" starttime="20230309 18:00:00.940" endtime="20230309 18:00:00.957"/>
</kw>
<msg timestamp="20230309 18:00:00.957" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 18:00:00.939" endtime="20230309 18:00:00.958"/>
</kw>
<msg timestamp="20230309 18:00:00.958" level="INFO">${actualData} = ndomtext</msg>
<status status="PASS" starttime="20230309 18:00:00.938" endtime="20230309 18:00:00.958"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 18:00:00.959" endtime="20230309 18:00:00.960"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 17:59:57.374" endtime="20230309 18:00:00.960"/>
</test>
<test id="s1-s6-s12-t5" name="Get Partial object from s3 with both start and endoffset(start offset and endoffset is greater than file size)" line="80">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=10000-10000 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 18:00:00.972" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-8598553013/putobject/key=value/f1 --range bytes=10000-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 18:00:02.150" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 18:00:02.151" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20230309 18:00:00.968" endtime="20230309 18:00:02.151"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 18:00:02.154" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20230309 18:00:02.152" endtime="20230309 18:00:02.154"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 18:00:02.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 18:00:02.155" endtime="20230309 18:00:02.156"/>
</kw>
<msg timestamp="20230309 18:00:02.157" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20230309 18:00:00.966" endtime="20230309 18:00:02.157"/>
</kw>
<msg timestamp="20230309 18:00:02.157" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20230309 18:00:00.964" endtime="20230309 18:00:02.157"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 18:00:02.158" endtime="20230309 18:00:02.158"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 18:00:00.963" endtime="20230309 18:00:02.161"/>
</test>
<test id="s1-s6-s12-t6" name="Get Partial object from s3 with both start and endoffset(end offset is greater than file size)" line="85">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0-10000 /tmp/testfile2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 18:00:02.174" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-8598553013/putobject/key=value/f1 --range bytes=0-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 18:00:03.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 18:00:03.425" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:59:52 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "ap...</msg>
<status status="PASS" starttime="20230309 18:00:02.170" endtime="20230309 18:00:03.425"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 18:00:03.429" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:59:52 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 09 Mar 2023 18:00:03 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230309 18:00:03.426" endtime="20230309 18:00:03.429"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 18:00:03.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 18:00:03.429" endtime="20230309 18:00:03.431"/>
</kw>
<status status="PASS" starttime="20230309 18:00:02.169" endtime="20230309 18:00:03.431"/>
</kw>
<msg timestamp="20230309 18:00:03.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 18:00:02.169" endtime="20230309 18:00:03.432"/>
</kw>
<msg timestamp="20230309 18:00:03.434" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:59:52 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "ap...</msg>
<status status="PASS" starttime="20230309 18:00:02.168" endtime="20230309 18:00:03.434"/>
</kw>
<msg timestamp="20230309 18:00:03.434" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:59:52 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "ap...</msg>
<status status="PASS" starttime="20230309 18:00:02.167" endtime="20230309 18:00:03.434"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 18:00:03.435" endtime="20230309 18:00:03.435"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 18:00:03.436" endtime="20230309 18:00:03.436"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 18:00:03.436" endtime="20230309 18:00:03.437"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 18:00:03.447" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 18:00:03.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 18:00:03.452" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20230309 18:00:03.442" endtime="20230309 18:00:03.452"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 18:00:03.453" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20230309 18:00:03.452" endtime="20230309 18:00:03.453"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 18:00:03.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 18:00:03.454" endtime="20230309 18:00:03.454"/>
</kw>
<status status="PASS" starttime="20230309 18:00:03.440" endtime="20230309 18:00:03.455"/>
</kw>
<msg timestamp="20230309 18:00:03.455" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 18:00:03.438" endtime="20230309 18:00:03.457"/>
</kw>
<msg timestamp="20230309 18:00:03.459" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20230309 18:00:03.437" endtime="20230309 18:00:03.459"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile2.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 18:00:03.470" level="INFO">Running command 'cat /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 18:00:03.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 18:00:03.475" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20230309 18:00:03.464" endtime="20230309 18:00:03.475"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 18:00:03.478" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20230309 18:00:03.476" endtime="20230309 18:00:03.478"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 18:00:03.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 18:00:03.478" endtime="20230309 18:00:03.480"/>
</kw>
<status status="PASS" starttime="20230309 18:00:03.462" endtime="20230309 18:00:03.481"/>
</kw>
<msg timestamp="20230309 18:00:03.481" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 18:00:03.461" endtime="20230309 18:00:03.481"/>
</kw>
<msg timestamp="20230309 18:00:03.482" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20230309 18:00:03.459" endtime="20230309 18:00:03.482"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 18:00:03.483" endtime="20230309 18:00:03.485"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 18:00:02.163" endtime="20230309 18:00:03.485"/>
</test>
<test id="s1-s6-s12-t7" name="Get Partial object from s3 with only start offset" line="94">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0- /tmp/testfile3.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 18:00:03.497" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-8598553013/putobject/key=value/f1 --range bytes=0- /tmp/testfile3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 18:00:04.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 18:00:04.574" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:59:52 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "ap...</msg>
<status status="PASS" starttime="20230309 18:00:03.492" endtime="20230309 18:00:04.574"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 18:00:04.577" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:59:52 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 09 Mar 2023 18:00:04 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230309 18:00:04.575" endtime="20230309 18:00:04.577"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 18:00:04.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 18:00:04.577" endtime="20230309 18:00:04.579"/>
</kw>
<status status="PASS" starttime="20230309 18:00:03.492" endtime="20230309 18:00:04.581"/>
</kw>
<msg timestamp="20230309 18:00:04.581" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 18:00:03.491" endtime="20230309 18:00:04.582"/>
</kw>
<msg timestamp="20230309 18:00:04.582" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:59:52 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "ap...</msg>
<status status="PASS" starttime="20230309 18:00:03.490" endtime="20230309 18:00:04.582"/>
</kw>
<msg timestamp="20230309 18:00:04.583" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:59:52 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "ap...</msg>
<status status="PASS" starttime="20230309 18:00:03.488" endtime="20230309 18:00:04.583"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 18:00:04.583" endtime="20230309 18:00:04.584"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 18:00:04.584" endtime="20230309 18:00:04.585"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 18:00:04.586" endtime="20230309 18:00:04.586"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 18:00:04.592" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 18:00:04.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 18:00:04.597" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20230309 18:00:04.589" endtime="20230309 18:00:04.597"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 18:00:04.599" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20230309 18:00:04.597" endtime="20230309 18:00:04.599"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 18:00:04.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 18:00:04.599" endtime="20230309 18:00:04.600"/>
</kw>
<status status="PASS" starttime="20230309 18:00:04.588" endtime="20230309 18:00:04.601"/>
</kw>
<msg timestamp="20230309 18:00:04.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 18:00:04.587" endtime="20230309 18:00:04.602"/>
</kw>
<msg timestamp="20230309 18:00:04.603" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20230309 18:00:04.586" endtime="20230309 18:00:04.603"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile3.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 18:00:04.613" level="INFO">Running command 'cat /tmp/testfile3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 18:00:04.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 18:00:04.618" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20230309 18:00:04.608" endtime="20230309 18:00:04.619"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 18:00:04.620" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20230309 18:00:04.619" endtime="20230309 18:00:04.620"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 18:00:04.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 18:00:04.621" endtime="20230309 18:00:04.622"/>
</kw>
<status status="PASS" starttime="20230309 18:00:04.606" endtime="20230309 18:00:04.622"/>
</kw>
<msg timestamp="20230309 18:00:04.623" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 18:00:04.605" endtime="20230309 18:00:04.623"/>
</kw>
<msg timestamp="20230309 18:00:04.624" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20230309 18:00:04.604" endtime="20230309 18:00:04.624"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 18:00:04.625" endtime="20230309 18:00:04.626"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 18:00:03.486" endtime="20230309 18:00:04.626"/>
</test>
<test id="s1-s6-s12-t8" name="Get Partial object from s3 with both start and endoffset which are equal" line="103">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0-0 /tmp/testfile4.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 18:00:04.639" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-8598553013/putobject/key=value/f1 --range bytes=0-0 /tmp/testfile4.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 18:00:05.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 18:00:05.743" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:59:52 GMT",
    "ContentLength": 1,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-0/11",
    "ContentType": "appl...</msg>
<status status="PASS" starttime="20230309 18:00:04.635" endtime="20230309 18:00:05.743"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 18:00:05.746" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:59:52 GMT",
    "ContentLength": 1,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-0/11",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 09 Mar 2023 18:00:05 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230309 18:00:05.744" endtime="20230309 18:00:05.746"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 18:00:05.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 18:00:05.747" endtime="20230309 18:00:05.748"/>
</kw>
<status status="PASS" starttime="20230309 18:00:04.634" endtime="20230309 18:00:05.748"/>
</kw>
<msg timestamp="20230309 18:00:05.748" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 18:00:04.633" endtime="20230309 18:00:05.749"/>
</kw>
<msg timestamp="20230309 18:00:05.749" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:59:52 GMT",
    "ContentLength": 1,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-0/11",
    "ContentType": "appl...</msg>
<status status="PASS" starttime="20230309 18:00:04.633" endtime="20230309 18:00:05.749"/>
</kw>
<msg timestamp="20230309 18:00:05.750" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:59:52 GMT",
    "ContentLength": 1,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-0/11",
    "ContentType": "appl...</msg>
<status status="PASS" starttime="20230309 18:00:04.631" endtime="20230309 18:00:05.750"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 18:00:05.750" endtime="20230309 18:00:05.751"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-0/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 18:00:05.751" endtime="20230309 18:00:05.752"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 18:00:05.752" endtime="20230309 18:00:05.753"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=0 bs=1 count=1 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 18:00:05.760" level="INFO">Running command 'dd if=/tmp/testfile skip=0 bs=1 count=1 2&gt;/dev/null'.</msg>
<msg timestamp="20230309 18:00:05.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 18:00:05.765" level="INFO">${output} = R</msg>
<status status="PASS" starttime="20230309 18:00:05.755" endtime="20230309 18:00:05.765"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 18:00:05.767" level="INFO">R</msg>
<status status="PASS" starttime="20230309 18:00:05.766" endtime="20230309 18:00:05.767"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 18:00:05.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 18:00:05.767" endtime="20230309 18:00:05.768"/>
</kw>
<status status="PASS" starttime="20230309 18:00:05.754" endtime="20230309 18:00:05.769"/>
</kw>
<msg timestamp="20230309 18:00:05.769" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 18:00:05.754" endtime="20230309 18:00:05.770"/>
</kw>
<msg timestamp="20230309 18:00:05.770" level="INFO">${expectedData} = R</msg>
<status status="PASS" starttime="20230309 18:00:05.753" endtime="20230309 18:00:05.771"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile4.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 18:00:05.777" level="INFO">Running command 'cat /tmp/testfile4.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 18:00:05.781" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 18:00:05.781" level="INFO">${output} = R</msg>
<status status="PASS" starttime="20230309 18:00:05.773" endtime="20230309 18:00:05.781"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 18:00:05.783" level="INFO">R</msg>
<status status="PASS" starttime="20230309 18:00:05.781" endtime="20230309 18:00:05.783"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 18:00:05.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 18:00:05.784" endtime="20230309 18:00:05.784"/>
</kw>
<status status="PASS" starttime="20230309 18:00:05.772" endtime="20230309 18:00:05.785"/>
</kw>
<msg timestamp="20230309 18:00:05.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 18:00:05.772" endtime="20230309 18:00:05.786"/>
</kw>
<msg timestamp="20230309 18:00:05.786" level="INFO">${actualData} = R</msg>
<status status="PASS" starttime="20230309 18:00:05.771" endtime="20230309 18:00:05.786"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 18:00:05.787" endtime="20230309 18:00:05.787"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=4-4 /tmp/testfile5.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 18:00:05.797" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-8598553013/putobject/key=value/f1 --range bytes=4-4 /tmp/testfile5.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 18:00:06.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 18:00:06.899" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:59:52 GMT",
    "ContentLength": 1,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 4-4/11",
    "ContentType": "appl...</msg>
<status status="PASS" starttime="20230309 18:00:05.792" endtime="20230309 18:00:06.899"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 18:00:06.901" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:59:52 GMT",
    "ContentLength": 1,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 4-4/11",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 09 Mar 2023 18:00:06 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230309 18:00:06.900" endtime="20230309 18:00:06.901"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 18:00:06.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 18:00:06.903" endtime="20230309 18:00:06.904"/>
</kw>
<status status="PASS" starttime="20230309 18:00:05.792" endtime="20230309 18:00:06.904"/>
</kw>
<msg timestamp="20230309 18:00:06.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 18:00:05.791" endtime="20230309 18:00:06.905"/>
</kw>
<msg timestamp="20230309 18:00:06.906" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:59:52 GMT",
    "ContentLength": 1,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 4-4/11",
    "ContentType": "appl...</msg>
<status status="PASS" starttime="20230309 18:00:05.789" endtime="20230309 18:00:06.906"/>
</kw>
<msg timestamp="20230309 18:00:06.906" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:59:52 GMT",
    "ContentLength": 1,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 4-4/11",
    "ContentType": "appl...</msg>
<status status="PASS" starttime="20230309 18:00:05.788" endtime="20230309 18:00:06.907"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 18:00:06.907" endtime="20230309 18:00:06.908"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 4-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 18:00:06.909" endtime="20230309 18:00:06.909"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 18:00:06.910" endtime="20230309 18:00:06.911"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=4 bs=1 count=1 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 18:00:06.918" level="INFO">Running command 'dd if=/tmp/testfile skip=4 bs=1 count=1 2&gt;/dev/null'.</msg>
<msg timestamp="20230309 18:00:06.924" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 18:00:06.924" level="INFO">${output} = o</msg>
<status status="PASS" starttime="20230309 18:00:06.915" endtime="20230309 18:00:06.924"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 18:00:06.926" level="INFO">o</msg>
<status status="PASS" starttime="20230309 18:00:06.924" endtime="20230309 18:00:06.926"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 18:00:06.927" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 18:00:06.926" endtime="20230309 18:00:06.927"/>
</kw>
<status status="PASS" starttime="20230309 18:00:06.914" endtime="20230309 18:00:06.927"/>
</kw>
<msg timestamp="20230309 18:00:06.928" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 18:00:06.914" endtime="20230309 18:00:06.928"/>
</kw>
<msg timestamp="20230309 18:00:06.929" level="INFO">${expectedData} = o</msg>
<status status="PASS" starttime="20230309 18:00:06.912" endtime="20230309 18:00:06.929"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile5.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 18:00:06.937" level="INFO">Running command 'cat /tmp/testfile5.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 18:00:06.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 18:00:06.941" level="INFO">${output} = o</msg>
<status status="PASS" starttime="20230309 18:00:06.933" endtime="20230309 18:00:06.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 18:00:06.943" level="INFO">o</msg>
<status status="PASS" starttime="20230309 18:00:06.942" endtime="20230309 18:00:06.943"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 18:00:06.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 18:00:06.943" endtime="20230309 18:00:06.944"/>
</kw>
<status status="PASS" starttime="20230309 18:00:06.931" endtime="20230309 18:00:06.945"/>
</kw>
<msg timestamp="20230309 18:00:06.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 18:00:06.930" endtime="20230309 18:00:06.945"/>
</kw>
<msg timestamp="20230309 18:00:06.946" level="INFO">${actualData} = o</msg>
<status status="PASS" starttime="20230309 18:00:06.929" endtime="20230309 18:00:06.946"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 18:00:06.946" endtime="20230309 18:00:06.947"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 18:00:04.630" endtime="20230309 18:00:06.947"/>
</test>
<test id="s1-s6-s12-t9" name="Get Partial object from s3 to get last n bytes" line="120">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=-4 /tmp/testfile6.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 18:00:06.964" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-8598553013/putobject/key=value/f1 --range bytes=-4 /tmp/testfile6.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 18:00:07.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 18:00:07.960" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:59:52 GMT",
    "ContentLength": 4,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 7-10/11",
    "ContentType": "app...</msg>
<status status="PASS" starttime="20230309 18:00:06.955" endtime="20230309 18:00:07.961"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 18:00:07.963" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:59:52 GMT",
    "ContentLength": 4,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 7-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 09 Mar 2023 18:00:07 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230309 18:00:07.961" endtime="20230309 18:00:07.964"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 18:00:07.964" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 18:00:07.964" endtime="20230309 18:00:07.965"/>
</kw>
<status status="PASS" starttime="20230309 18:00:06.954" endtime="20230309 18:00:07.965"/>
</kw>
<msg timestamp="20230309 18:00:07.965" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 18:00:06.954" endtime="20230309 18:00:07.966"/>
</kw>
<msg timestamp="20230309 18:00:07.966" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:59:52 GMT",
    "ContentLength": 4,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 7-10/11",
    "ContentType": "app...</msg>
<status status="PASS" starttime="20230309 18:00:06.953" endtime="20230309 18:00:07.966"/>
</kw>
<msg timestamp="20230309 18:00:07.967" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:59:52 GMT",
    "ContentLength": 4,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 7-10/11",
    "ContentType": "app...</msg>
<status status="PASS" starttime="20230309 18:00:06.951" endtime="20230309 18:00:07.967"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 18:00:07.967" endtime="20230309 18:00:07.968"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 7-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 18:00:07.968" endtime="20230309 18:00:07.968"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 18:00:07.969" endtime="20230309 18:00:07.969"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=7 bs=1 count=4 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 18:00:07.974" level="INFO">Running command 'dd if=/tmp/testfile skip=7 bs=1 count=4 2&gt;/dev/null'.</msg>
<msg timestamp="20230309 18:00:07.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 18:00:07.980" level="INFO">${output} = ext</msg>
<status status="PASS" starttime="20230309 18:00:07.971" endtime="20230309 18:00:07.980"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 18:00:07.981" level="INFO">ext</msg>
<status status="PASS" starttime="20230309 18:00:07.980" endtime="20230309 18:00:07.981"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 18:00:07.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 18:00:07.982" endtime="20230309 18:00:07.982"/>
</kw>
<status status="PASS" starttime="20230309 18:00:07.970" endtime="20230309 18:00:07.983"/>
</kw>
<msg timestamp="20230309 18:00:07.983" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 18:00:07.970" endtime="20230309 18:00:07.984"/>
</kw>
<msg timestamp="20230309 18:00:07.984" level="INFO">${expectedData} = ext</msg>
<status status="PASS" starttime="20230309 18:00:07.969" endtime="20230309 18:00:07.984"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile6.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 18:00:07.992" level="INFO">Running command 'cat /tmp/testfile6.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 18:00:07.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 18:00:07.996" level="INFO">${output} = ext</msg>
<status status="PASS" starttime="20230309 18:00:07.988" endtime="20230309 18:00:07.996"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 18:00:07.998" level="INFO">ext</msg>
<status status="PASS" starttime="20230309 18:00:07.997" endtime="20230309 18:00:07.998"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 18:00:07.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 18:00:07.998" endtime="20230309 18:00:07.999"/>
</kw>
<status status="PASS" starttime="20230309 18:00:07.987" endtime="20230309 18:00:08.000"/>
</kw>
<msg timestamp="20230309 18:00:08.000" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 18:00:07.986" endtime="20230309 18:00:08.000"/>
</kw>
<msg timestamp="20230309 18:00:08.001" level="INFO">${actualData} = ext</msg>
<status status="PASS" starttime="20230309 18:00:07.985" endtime="20230309 18:00:08.001"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 18:00:08.001" endtime="20230309 18:00:08.003"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=-10000 /tmp/testfile7.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 18:00:08.011" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-8598553013/putobject/key=value/f1 --range bytes=-10000 /tmp/testfile7.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 18:00:09.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 18:00:09.080" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:59:52 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "ap...</msg>
<status status="PASS" starttime="20230309 18:00:08.007" endtime="20230309 18:00:09.080"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 18:00:09.082" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:59:52 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 09 Mar 2023 18:00:08 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230309 18:00:09.081" endtime="20230309 18:00:09.083"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 18:00:09.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 18:00:09.083" endtime="20230309 18:00:09.084"/>
</kw>
<status status="PASS" starttime="20230309 18:00:08.006" endtime="20230309 18:00:09.084"/>
</kw>
<msg timestamp="20230309 18:00:09.084" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 18:00:08.005" endtime="20230309 18:00:09.085"/>
</kw>
<msg timestamp="20230309 18:00:09.085" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:59:52 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "ap...</msg>
<status status="PASS" starttime="20230309 18:00:08.004" endtime="20230309 18:00:09.085"/>
</kw>
<msg timestamp="20230309 18:00:09.086" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:59:52 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "ap...</msg>
<status status="PASS" starttime="20230309 18:00:08.003" endtime="20230309 18:00:09.086"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 18:00:09.086" endtime="20230309 18:00:09.087"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 18:00:09.087" endtime="20230309 18:00:09.088"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 18:00:09.088" endtime="20230309 18:00:09.089"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 18:00:09.096" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 18:00:09.100" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 18:00:09.100" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20230309 18:00:09.092" endtime="20230309 18:00:09.100"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 18:00:09.102" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20230309 18:00:09.101" endtime="20230309 18:00:09.102"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 18:00:09.103" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 18:00:09.103" endtime="20230309 18:00:09.104"/>
</kw>
<status status="PASS" starttime="20230309 18:00:09.091" endtime="20230309 18:00:09.104"/>
</kw>
<msg timestamp="20230309 18:00:09.104" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 18:00:09.091" endtime="20230309 18:00:09.105"/>
</kw>
<msg timestamp="20230309 18:00:09.105" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20230309 18:00:09.090" endtime="20230309 18:00:09.105"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile7.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 18:00:09.112" level="INFO">Running command 'cat /tmp/testfile7.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 18:00:09.117" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 18:00:09.117" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20230309 18:00:09.108" endtime="20230309 18:00:09.117"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 18:00:09.120" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20230309 18:00:09.118" endtime="20230309 18:00:09.120"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 18:00:09.121" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 18:00:09.120" endtime="20230309 18:00:09.121"/>
</kw>
<status status="PASS" starttime="20230309 18:00:09.107" endtime="20230309 18:00:09.121"/>
</kw>
<msg timestamp="20230309 18:00:09.121" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 18:00:09.106" endtime="20230309 18:00:09.122"/>
</kw>
<msg timestamp="20230309 18:00:09.122" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20230309 18:00:09.106" endtime="20230309 18:00:09.123"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 18:00:09.127" endtime="20230309 18:00:09.129"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 18:00:06.950" endtime="20230309 18:00:09.129"/>
</test>
<test id="s1-s6-s12-t10" name="Incorrect values for end and start offset" line="138">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=-11-10000 /tmp/testfile8.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 18:00:09.142" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-8598553013/putobject/key=value/f1 --range bytes=-11-10000 /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 18:00:10.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 18:00:10.344" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:59:52 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230309 18:00:09.138" endtime="20230309 18:00:10.344"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 18:00:10.346" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:59:52 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 09 Mar 2023 18:00:10 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230309 18:00:10.345" endtime="20230309 18:00:10.346"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 18:00:10.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 18:00:10.346" endtime="20230309 18:00:10.348"/>
</kw>
<status status="PASS" starttime="20230309 18:00:09.137" endtime="20230309 18:00:10.348"/>
</kw>
<msg timestamp="20230309 18:00:10.348" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 18:00:09.137" endtime="20230309 18:00:10.349"/>
</kw>
<msg timestamp="20230309 18:00:10.351" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:59:52 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230309 18:00:09.136" endtime="20230309 18:00:10.351"/>
</kw>
<msg timestamp="20230309 18:00:10.351" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:59:52 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230309 18:00:09.134" endtime="20230309 18:00:10.351"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 18:00:10.352" endtime="20230309 18:00:10.352"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 18:00:10.353" endtime="20230309 18:00:10.353"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 18:00:10.360" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 18:00:10.364" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 18:00:10.365" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20230309 18:00:10.356" endtime="20230309 18:00:10.365"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 18:00:10.366" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20230309 18:00:10.365" endtime="20230309 18:00:10.367"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 18:00:10.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 18:00:10.367" endtime="20230309 18:00:10.368"/>
</kw>
<status status="PASS" starttime="20230309 18:00:10.354" endtime="20230309 18:00:10.368"/>
</kw>
<msg timestamp="20230309 18:00:10.369" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 18:00:10.354" endtime="20230309 18:00:10.369"/>
</kw>
<msg timestamp="20230309 18:00:10.370" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20230309 18:00:10.353" endtime="20230309 18:00:10.370"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile8.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 18:00:10.377" level="INFO">Running command 'cat /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 18:00:10.381" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 18:00:10.381" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20230309 18:00:10.373" endtime="20230309 18:00:10.381"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 18:00:10.382" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20230309 18:00:10.381" endtime="20230309 18:00:10.382"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 18:00:10.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 18:00:10.383" endtime="20230309 18:00:10.384"/>
</kw>
<status status="PASS" starttime="20230309 18:00:10.372" endtime="20230309 18:00:10.384"/>
</kw>
<msg timestamp="20230309 18:00:10.384" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 18:00:10.371" endtime="20230309 18:00:10.385"/>
</kw>
<msg timestamp="20230309 18:00:10.385" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20230309 18:00:10.370" endtime="20230309 18:00:10.385"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 18:00:10.386" endtime="20230309 18:00:10.386"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=11-8 /tmp/testfile9.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 18:00:10.393" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-8598553013/putobject/key=value/f1 --range bytes=11-8 /tmp/testfile9.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 18:00:11.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 18:00:11.483" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:59:52 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230309 18:00:10.390" endtime="20230309 18:00:11.483"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 18:00:11.487" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:59:52 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 09 Mar 2023 18:00:11 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230309 18:00:11.484" endtime="20230309 18:00:11.487"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 18:00:11.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 18:00:11.488" endtime="20230309 18:00:11.489"/>
</kw>
<status status="PASS" starttime="20230309 18:00:10.389" endtime="20230309 18:00:11.489"/>
</kw>
<msg timestamp="20230309 18:00:11.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 18:00:10.389" endtime="20230309 18:00:11.490"/>
</kw>
<msg timestamp="20230309 18:00:11.491" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:59:52 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230309 18:00:10.388" endtime="20230309 18:00:11.491"/>
</kw>
<msg timestamp="20230309 18:00:11.491" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 09 Mar 2023 17:59:52 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230309 18:00:10.387" endtime="20230309 18:00:11.492"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 18:00:11.492" endtime="20230309 18:00:11.492"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 18:00:11.493" endtime="20230309 18:00:11.493"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 18:00:11.502" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 18:00:11.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 18:00:11.508" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20230309 18:00:11.497" endtime="20230309 18:00:11.508"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 18:00:11.510" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20230309 18:00:11.509" endtime="20230309 18:00:11.511"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 18:00:11.513" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 18:00:11.512" endtime="20230309 18:00:11.514"/>
</kw>
<status status="PASS" starttime="20230309 18:00:11.496" endtime="20230309 18:00:11.516"/>
</kw>
<msg timestamp="20230309 18:00:11.516" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 18:00:11.496" endtime="20230309 18:00:11.517"/>
</kw>
<msg timestamp="20230309 18:00:11.519" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20230309 18:00:11.494" endtime="20230309 18:00:11.519"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile8.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 18:00:11.529" level="INFO">Running command 'cat /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 18:00:11.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 18:00:11.538" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20230309 18:00:11.523" endtime="20230309 18:00:11.538"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 18:00:11.542" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20230309 18:00:11.539" endtime="20230309 18:00:11.542"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 18:00:11.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 18:00:11.542" endtime="20230309 18:00:11.543"/>
</kw>
<status status="PASS" starttime="20230309 18:00:11.522" endtime="20230309 18:00:11.545"/>
</kw>
<msg timestamp="20230309 18:00:11.545" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 18:00:11.521" endtime="20230309 18:00:11.545"/>
</kw>
<msg timestamp="20230309 18:00:11.546" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20230309 18:00:11.519" endtime="20230309 18:00:11.546"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230309 18:00:11.546" endtime="20230309 18:00:11.548"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 18:00:09.132" endtime="20230309 18:00:11.548"/>
</test>
<test id="s1-s6-s12-t11" name="Zero byte file" line="153">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --range bytes=0-0 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 18:00:11.563" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-8598553013/putobject/key=value/zerobyte --range bytes=0-0 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 18:00:12.652" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 18:00:12.653" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20230309 18:00:11.557" endtime="20230309 18:00:12.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 18:00:12.655" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20230309 18:00:12.654" endtime="20230309 18:00:12.656"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 18:00:12.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 18:00:12.656" endtime="20230309 18:00:12.657"/>
</kw>
<msg timestamp="20230309 18:00:12.657" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20230309 18:00:11.555" endtime="20230309 18:00:12.657"/>
</kw>
<msg timestamp="20230309 18:00:12.658" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20230309 18:00:11.553" endtime="20230309 18:00:12.658"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 18:00:12.658" endtime="20230309 18:00:12.659"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --range bytes=0-1 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 18:00:12.666" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-8598553013/putobject/key=value/zerobyte --range bytes=0-1 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 18:00:13.754" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 18:00:13.754" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20230309 18:00:12.662" endtime="20230309 18:00:13.754"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 18:00:13.758" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20230309 18:00:13.757" endtime="20230309 18:00:13.758"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 18:00:13.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 18:00:13.759" endtime="20230309 18:00:13.760"/>
</kw>
<msg timestamp="20230309 18:00:13.761" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20230309 18:00:12.661" endtime="20230309 18:00:13.761"/>
</kw>
<msg timestamp="20230309 18:00:13.761" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20230309 18:00:12.660" endtime="20230309 18:00:13.762"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 18:00:13.762" endtime="20230309 18:00:13.763"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --range bytes=0-10000 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 18:00:13.771" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-8598553013/putobject/key=value/zerobyte --range bytes=0-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 18:00:14.925" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 18:00:14.925" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20230309 18:00:13.767" endtime="20230309 18:00:14.925"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 18:00:14.928" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20230309 18:00:14.926" endtime="20230309 18:00:14.928"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 18:00:14.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 18:00:14.928" endtime="20230309 18:00:14.929"/>
</kw>
<msg timestamp="20230309 18:00:14.930" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20230309 18:00:13.765" endtime="20230309 18:00:14.930"/>
</kw>
<msg timestamp="20230309 18:00:14.931" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20230309 18:00:13.763" endtime="20230309 18:00:14.931"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 18:00:14.932" endtime="20230309 18:00:14.932"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 18:00:11.550" endtime="20230309 18:00:14.933"/>
</test>
<test id="s1-s6-s12-t12" name="Create file with user defined metadata" line="163">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 18:00:14.948" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile2'.</msg>
<msg timestamp="20230309 18:00:14.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 18:00:14.955" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 18:00:14.942" endtime="20230309 18:00:14.956"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 18:00:14.957" level="INFO"/>
<status status="PASS" starttime="20230309 18:00:14.956" endtime="20230309 18:00:14.957"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 18:00:14.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 18:00:14.958" endtime="20230309 18:00:14.959"/>
</kw>
<status status="PASS" starttime="20230309 18:00:14.941" endtime="20230309 18:00:14.959"/>
</kw>
<msg timestamp="20230309 18:00:14.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 18:00:14.940" endtime="20230309 18:00:14.960"/>
</kw>
<status status="PASS" starttime="20230309 18:00:14.939" endtime="20230309 18:00:14.960"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key1 --body /tmp/testfile2 --metadata="custom-key1=custom-value1,custom-key2=custom-value2"</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 18:00:14.967" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key ozone-test-8598553013/putobject/custom-metadata/key1 --body /tmp/testfile2 --metadata="custom-key1=custom-value1,custom-key2=custom-value2" 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 18:00:16.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 18:00:16.219" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 18:00:14.964" endtime="20230309 18:00:16.219"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 18:00:16.221" level="INFO"/>
<status status="PASS" starttime="20230309 18:00:16.220" endtime="20230309 18:00:16.221"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 18:00:16.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 18:00:16.222" endtime="20230309 18:00:16.223"/>
</kw>
<status status="PASS" starttime="20230309 18:00:14.963" endtime="20230309 18:00:16.223"/>
</kw>
<msg timestamp="20230309 18:00:16.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 18:00:14.962" endtime="20230309 18:00:16.224"/>
</kw>
<msg timestamp="20230309 18:00:16.225" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 18:00:14.961" endtime="20230309 18:00:16.225"/>
</kw>
<status status="PASS" starttime="20230309 18:00:14.960" endtime="20230309 18:00:16.226"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 18:00:16.237" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket link --key ozone-test-8598553013/putobject/custom-metadata/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 18:00:17.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 18:00:17.304" level="INFO">${output} = {
    "LastModified": "Thu, 09 Mar 2023 18:00:16 GMT",
    "ContentLength": 11,
    "ETag": "2023-03-09T18:00:16.110Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "E...</msg>
<status status="PASS" starttime="20230309 18:00:16.233" endtime="20230309 18:00:17.304"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 18:00:17.306" level="INFO">{
    "LastModified": "Thu, 09 Mar 2023 18:00:16 GMT",
    "ContentLength": 11,
    "ETag": "2023-03-09T18:00:16.110Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Thu, 09 Mar 2023 18:00:17 GMT",
    "Metadata": {
        "custom-key1": "custom-value1",
        "custom-key2": "custom-value2"
    }
}</msg>
<status status="PASS" starttime="20230309 18:00:17.304" endtime="20230309 18:00:17.306"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 18:00:17.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 18:00:17.306" endtime="20230309 18:00:17.307"/>
</kw>
<status status="PASS" starttime="20230309 18:00:16.232" endtime="20230309 18:00:17.308"/>
</kw>
<msg timestamp="20230309 18:00:17.308" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 18:00:16.231" endtime="20230309 18:00:17.309"/>
</kw>
<msg timestamp="20230309 18:00:17.310" level="INFO">${output} = {
    "LastModified": "Thu, 09 Mar 2023 18:00:16 GMT",
    "ContentLength": 11,
    "ETag": "2023-03-09T18:00:16.110Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "E...</msg>
<status status="PASS" starttime="20230309 18:00:16.228" endtime="20230309 18:00:17.310"/>
</kw>
<msg timestamp="20230309 18:00:17.310" level="INFO">${result} = {
    "LastModified": "Thu, 09 Mar 2023 18:00:16 GMT",
    "ContentLength": 11,
    "ETag": "2023-03-09T18:00:16.110Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "E...</msg>
<status status="PASS" starttime="20230309 18:00:16.227" endtime="20230309 18:00:17.311"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key1\": \"custom-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 18:00:17.311" endtime="20230309 18:00:17.312"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\": \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 18:00:17.312" endtime="20230309 18:00:17.313"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /s3v/${BUCKET}/${PREFIX}/putobject/custom-metadata/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 18:00:17.321" level="INFO">Running command 'ozone sh key info /s3v/link/ozone-test-8598553013/putobject/custom-metadata/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 18:00:31.514" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 18:00:31.514" level="INFO">${output} = {
  "volumeName" : "legacy",
  "bucketName" : "source-bucket",
  "name" : "ozone-test-8598553013/putobject/custom-metadata/key1",
  "dataSize" : 11,
  "creationTime" : "2023-03-09T18:00:15.900Z",
  "m...</msg>
<status status="PASS" starttime="20230309 18:00:17.316" endtime="20230309 18:00:31.515"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 18:00:31.516" level="INFO">{
  "volumeName" : "legacy",
  "bucketName" : "source-bucket",
  "name" : "ozone-test-8598553013/putobject/custom-metadata/key1",
  "dataSize" : 11,
  "creationTime" : "2023-03-09T18:00:15.900Z",
  "modificationTime" : "2023-03-09T18:00:16.110Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : {
    "custom-key1" : "custom-value1",
    "custom-key2" : "custom-value2"
  },
  "ozoneKeyLocations" : [ {
    "containerID" : 1,
    "localID" : 111677748019200148,
    "length" : 11,
    "offset" : 0,
    "keyOffset" : 0
  } ]
}</msg>
<status status="PASS" starttime="20230309 18:00:31.515" endtime="20230309 18:00:31.517"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 18:00:31.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 18:00:31.517" endtime="20230309 18:00:31.518"/>
</kw>
<status status="PASS" starttime="20230309 18:00:17.315" endtime="20230309 18:00:31.518"/>
</kw>
<msg timestamp="20230309 18:00:31.519" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 18:00:17.315" endtime="20230309 18:00:31.519"/>
</kw>
<msg timestamp="20230309 18:00:31.520" level="INFO">${result} = {
  "volumeName" : "legacy",
  "bucketName" : "source-bucket",
  "name" : "ozone-test-8598553013/putobject/custom-metadata/key1",
  "dataSize" : 11,
  "creationTime" : "2023-03-09T18:00:15.900Z",
  "m...</msg>
<status status="PASS" starttime="20230309 18:00:17.313" endtime="20230309 18:00:31.520"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key1\" : \"custom-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 18:00:31.520" endtime="20230309 18:00:31.521"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\" : \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 18:00:31.521" endtime="20230309 18:00:31.522"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 18:00:14.937" endtime="20230309 18:00:31.522"/>
</test>
<test id="s1-s6-s12-t13" name="Create file with user defined metadata with gdpr enabled value in request" line="175">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 18:00:31.531" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile2'.</msg>
<msg timestamp="20230309 18:00:31.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 18:00:31.534" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 18:00:31.527" endtime="20230309 18:00:31.534"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 18:00:31.536" level="INFO"/>
<status status="PASS" starttime="20230309 18:00:31.535" endtime="20230309 18:00:31.536"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 18:00:31.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 18:00:31.536" endtime="20230309 18:00:31.537"/>
</kw>
<status status="PASS" starttime="20230309 18:00:31.525" endtime="20230309 18:00:31.538"/>
</kw>
<msg timestamp="20230309 18:00:31.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 18:00:31.525" endtime="20230309 18:00:31.539"/>
</kw>
<status status="PASS" starttime="20230309 18:00:31.524" endtime="20230309 18:00:31.539"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="gdprEnabled=true,custom-key2=custom-value2"</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 18:00:31.548" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key ozone-test-8598553013/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="gdprEnabled=true,custom-key2=custom-value2" 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 18:00:32.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 18:00:32.798" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 18:00:31.544" endtime="20230309 18:00:32.798"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 18:00:32.806" level="INFO"/>
<status status="PASS" starttime="20230309 18:00:32.804" endtime="20230309 18:00:32.807"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 18:00:32.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 18:00:32.807" endtime="20230309 18:00:32.808"/>
</kw>
<status status="PASS" starttime="20230309 18:00:31.543" endtime="20230309 18:00:32.809"/>
</kw>
<msg timestamp="20230309 18:00:32.809" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 18:00:31.542" endtime="20230309 18:00:32.811"/>
</kw>
<msg timestamp="20230309 18:00:32.811" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 18:00:31.541" endtime="20230309 18:00:32.811"/>
</kw>
<status status="PASS" starttime="20230309 18:00:31.540" endtime="20230309 18:00:32.812"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 18:00:32.824" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket link --key ozone-test-8598553013/putobject/custom-metadata/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 18:00:33.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 18:00:33.946" level="INFO">${output} = {
    "LastModified": "Thu, 09 Mar 2023 18:00:32 GMT",
    "ContentLength": 11,
    "ETag": "2023-03-09T18:00:32.666Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "E...</msg>
<status status="PASS" starttime="20230309 18:00:32.817" endtime="20230309 18:00:33.946"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 18:00:33.948" level="INFO">{
    "LastModified": "Thu, 09 Mar 2023 18:00:32 GMT",
    "ContentLength": 11,
    "ETag": "2023-03-09T18:00:32.666Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Thu, 09 Mar 2023 18:00:33 GMT",
    "Metadata": {
        "custom-key2": "custom-value2"
    }
}</msg>
<status status="PASS" starttime="20230309 18:00:33.947" endtime="20230309 18:00:33.948"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 18:00:33.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 18:00:33.949" endtime="20230309 18:00:33.950"/>
</kw>
<status status="PASS" starttime="20230309 18:00:32.816" endtime="20230309 18:00:33.950"/>
</kw>
<msg timestamp="20230309 18:00:33.950" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 18:00:32.815" endtime="20230309 18:00:33.951"/>
</kw>
<msg timestamp="20230309 18:00:33.952" level="INFO">${output} = {
    "LastModified": "Thu, 09 Mar 2023 18:00:32 GMT",
    "ContentLength": 11,
    "ETag": "2023-03-09T18:00:32.666Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "E...</msg>
<status status="PASS" starttime="20230309 18:00:32.814" endtime="20230309 18:00:33.952"/>
</kw>
<msg timestamp="20230309 18:00:33.952" level="INFO">${result} = {
    "LastModified": "Thu, 09 Mar 2023 18:00:32 GMT",
    "ContentLength": 11,
    "ETag": "2023-03-09T18:00:32.666Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "E...</msg>
<status status="PASS" starttime="20230309 18:00:32.812" endtime="20230309 18:00:33.953"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\": \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 18:00:33.953" endtime="20230309 18:00:33.953"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"gdprEnabled\": \"true\"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 18:00:33.954" endtime="20230309 18:00:33.955"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 18:00:31.523" endtime="20230309 18:00:33.955"/>
</test>
<test id="s1-s6-s12-t14" name="Create file with user defined metadata size larger than 2 KB" line="183">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 18:00:33.966" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile2'.</msg>
<msg timestamp="20230309 18:00:33.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 18:00:33.969" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 18:00:33.960" endtime="20230309 18:00:33.969"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 18:00:33.971" level="INFO"/>
<status status="PASS" starttime="20230309 18:00:33.970" endtime="20230309 18:00:33.971"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 18:00:33.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 18:00:33.971" endtime="20230309 18:00:33.972"/>
</kw>
<status status="PASS" starttime="20230309 18:00:33.959" endtime="20230309 18:00:33.973"/>
</kw>
<msg timestamp="20230309 18:00:33.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 18:00:33.958" endtime="20230309 18:00:33.974"/>
</kw>
<status status="PASS" starttime="20230309 18:00:33.957" endtime="20230309 18:00:33.974"/>
</kw>
<kw name="Execute" library="os">
<var>${custom_metadata_value}</var>
<arg>printf 'v%.0s' {1..3000}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 18:00:33.980" level="INFO">Running command 'printf 'v%.0s' {1..3000} 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 18:00:33.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 18:00:33.985" level="INFO">${output} = vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv...</msg>
<status status="PASS" starttime="20230309 18:00:33.976" endtime="20230309 18:00:33.985"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 18:00:33.988" level="INFO">vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv</msg>
<status status="PASS" starttime="20230309 18:00:33.987" endtime="20230309 18:00:33.988"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 18:00:33.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 18:00:33.989" endtime="20230309 18:00:33.991"/>
</kw>
<status status="PASS" starttime="20230309 18:00:33.976" endtime="20230309 18:00:33.991"/>
</kw>
<msg timestamp="20230309 18:00:33.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 18:00:33.975" endtime="20230309 18:00:33.992"/>
</kw>
<msg timestamp="20230309 18:00:33.993" level="INFO">${custom_metadata_value} = vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv...</msg>
<status status="PASS" starttime="20230309 18:00:33.974" endtime="20230309 18:00:33.993"/>
</kw>
<kw name="Execute AWSS3APICli and ignore error" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="custom-key1=${custom_metadata_value}"</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 18:00:34.005" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key ozone-test-8598553013/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="custom-key1=vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv" 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 18:00:37.523" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 18:00:37.523" level="INFO">${output} = 
An error occurred (500) when calling the PutObject operation (reached max retries: 4): Internal Server Error</msg>
<status status="PASS" starttime="20230309 18:00:33.999" endtime="20230309 18:00:37.523"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 18:00:37.526" level="INFO">
An error occurred (500) when calling the PutObject operation (reached max retries: 4): Internal Server Error</msg>
<status status="PASS" starttime="20230309 18:00:37.524" endtime="20230309 18:00:37.526"/>
</kw>
<msg timestamp="20230309 18:00:37.527" level="INFO">${output} = 
An error occurred (500) when calling the PutObject operation (reached max retries: 4): Internal Server Error</msg>
<status status="PASS" starttime="20230309 18:00:33.997" endtime="20230309 18:00:37.527"/>
</kw>
<msg timestamp="20230309 18:00:37.527" level="INFO">${result} = 
An error occurred (500) when calling the PutObject operation (reached max retries: 4): Internal Server Error</msg>
<status status="PASS" starttime="20230309 18:00:33.993" endtime="20230309 18:00:37.527"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>custom-key1: ${custom_metadata_value}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 18:00:37.528" endtime="20230309 18:00:37.529"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 18:00:33.956" endtime="20230309 18:00:37.529"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20230309 17:59:24.532" endtime="20230309 18:00:37.532"/>
</suite>
<status status="FAIL" starttime="20230309 17:50:16.173" endtime="20230309 18:00:37.541"/>
</suite>
<suite id="s1-s7" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s7-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:35:17.786" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:35:17.802" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:35:17.802" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230309 16:35:17.780" endtime="20230309 16:35:17.802"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:35:17.803" level="INFO">scm</msg>
<status status="PASS" starttime="20230309 16:35:17.802" endtime="20230309 16:35:17.804"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:35:17.805" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:35:17.804" endtime="20230309 16:35:17.805"/>
</kw>
<status status="PASS" starttime="20230309 16:35:17.779" endtime="20230309 16:35:17.805"/>
</kw>
<msg timestamp="20230309 16:35:17.806" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:35:17.779" endtime="20230309 16:35:17.812"/>
</kw>
<msg timestamp="20230309 16:35:17.812" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230309 16:35:17.778" endtime="20230309 16:35:17.812"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230309 16:35:17.813" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230309 16:35:17.812" endtime="20230309 16:35:17.813"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 16:35:17.819" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 16:35:17.871" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 16:35:17.871" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 16:35:17.816" endtime="20230309 16:35:17.871"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 16:35:17.872" level="INFO"/>
<status status="PASS" starttime="20230309 16:35:17.871" endtime="20230309 16:35:17.873"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 16:35:17.873" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 16:35:17.873" endtime="20230309 16:35:17.874"/>
</kw>
<status status="PASS" starttime="20230309 16:35:17.816" endtime="20230309 16:35:17.874"/>
</kw>
<msg timestamp="20230309 16:35:17.874" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 16:35:17.815" endtime="20230309 16:35:17.875"/>
</kw>
<status status="PASS" starttime="20230309 16:35:17.814" endtime="20230309 16:35:17.875"/>
</kw>
<status status="PASS" starttime="20230309 16:35:17.813" endtime="20230309 16:35:17.875"/>
</kw>
<status status="PASS" starttime="20230309 16:35:17.777" endtime="20230309 16:35:17.875"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230309 16:35:17.776" endtime="20230309 16:35:17.876"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230309 16:35:17.687" endtime="20230309 16:35:17.877"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="5068167"/>
</suite>
<statistics>
<total>
<stat pass="227" fail="1" skip="2">All Tests</stat>
</total>
<tag>
<stat pass="7" fail="0" skip="0">no-bucket-type</stat>
</tag>
<suite>
<stat pass="227" fail="1" skip="2" id="s1" name="ozonesecure">ozonesecure</stat>
<stat pass="31" fail="0" skip="0" id="s1-s1" name="Basic">ozonesecure.Basic</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s1" name="Basic">ozonesecure.Basic.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Getconf">ozonesecure.Basic.Getconf</stat>
<stat pass="16" fail="0" skip="0" id="s1-s1-s3" name="Links">ozonesecure.Basic.Links</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s4" name="Ozone-Shell-Single">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat pass="7" fail="0" skip="0" id="s1-s1-s5" name="Ozone-Shell">ozonesecure.Basic.Ozone-Shell</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s6" name="Single Node">ozonesecure.Basic.Single Node</stat>
<stat pass="45" fail="0" skip="0" id="s1-s2" name="Security">ozonesecure.Security</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Admin-Cert">ozonesecure.Security.Admin-Cert</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s2" name="Bucket-Encryption">ozonesecure.Security.Bucket-Encryption</stat>
<stat pass="10" fail="0" skip="0" id="s1-s2-s3" name="Ozone-Secure-Fs">ozonesecure.Security.Ozone-Secure-Fs</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s4" name="Ozone-Secure-S3">ozonesecure.Security.Ozone-Secure-S3</stat>
<stat pass="26" fail="0" skip="0" id="s1-s2-s5" name="Ozone-Secure-Tenant">ozonesecure.Security.Ozone-Secure-Tenant</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s6" name="Ozone-Secure-Token">ozonesecure.Security.Ozone-Secure-Token</stat>
<stat pass="23" fail="0" skip="0" id="s1-s3" name="ozonefs-ofs-bucket">ozonesecure.ozonefs-ofs-bucket</stat>
<stat pass="23" fail="0" skip="0" id="s1-s4" name="ozonefs-o3fs-link">ozonesecure.ozonefs-o3fs-link</stat>
<stat pass="56" fail="0" skip="1" id="s1-s5" name="s3-encrypted">ozonesecure.s3-encrypted</stat>
<stat pass="2" fail="0" skip="0" id="s1-s5-s1" name="Awss3">ozonesecure.s3-encrypted.Awss3</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5-s2" name="Boto3">ozonesecure.s3-encrypted.Boto3</stat>
<stat pass="4" fail="0" skip="0" id="s1-s5-s3" name="Bucketcreate">ozonesecure.s3-encrypted.Bucketcreate</stat>
<stat pass="2" fail="0" skip="0" id="s1-s5-s4" name="Bucketdelete">ozonesecure.s3-encrypted.Bucketdelete</stat>
<stat pass="2" fail="0" skip="0" id="s1-s5-s5" name="Buckethead">ozonesecure.s3-encrypted.Buckethead</stat>
<stat pass="3" fail="0" skip="0" id="s1-s5-s6" name="Bucketlist">ozonesecure.s3-encrypted.Bucketlist</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5-s7" name="Freon">ozonesecure.s3-encrypted.Freon</stat>
<stat pass="13" fail="0" skip="1" id="s1-s5-s8" name="MultipartUpload">ozonesecure.s3-encrypted.MultipartUpload</stat>
<stat pass="4" fail="0" skip="0" id="s1-s5-s9" name="Objectcopy">ozonesecure.s3-encrypted.Objectcopy</stat>
<stat pass="5" fail="0" skip="0" id="s1-s5-s10" name="Objectdelete">ozonesecure.s3-encrypted.Objectdelete</stat>
<stat pass="3" fail="0" skip="0" id="s1-s5-s11" name="Objecthead">ozonesecure.s3-encrypted.Objecthead</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5-s12" name="Objectmultidelete">ozonesecure.s3-encrypted.Objectmultidelete</stat>
<stat pass="14" fail="0" skip="0" id="s1-s5-s13" name="Objectputget">ozonesecure.s3-encrypted.Objectputget</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5-s14" name="Webui">ozonesecure.s3-encrypted.Webui</stat>
<stat pass="48" fail="1" skip="1" id="s1-s6" name="s3-link">ozonesecure.s3-link</stat>
<stat pass="2" fail="0" skip="0" id="s1-s6-s1" name="Awss3">ozonesecure.s3-link.Awss3</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6-s2" name="Boto3">ozonesecure.s3-link.Boto3</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6-s3" name="Bucketdelete">ozonesecure.s3-link.Bucketdelete</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6-s4" name="Buckethead">ozonesecure.s3-link.Buckethead</stat>
<stat pass="3" fail="0" skip="0" id="s1-s6-s5" name="Bucketlist">ozonesecure.s3-link.Bucketlist</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6-s6" name="Freon">ozonesecure.s3-link.Freon</stat>
<stat pass="13" fail="0" skip="1" id="s1-s6-s7" name="MultipartUpload">ozonesecure.s3-link.MultipartUpload</stat>
<stat pass="4" fail="0" skip="0" id="s1-s6-s8" name="Objectcopy">ozonesecure.s3-link.Objectcopy</stat>
<stat pass="5" fail="0" skip="0" id="s1-s6-s9" name="Objectdelete">ozonesecure.s3-link.Objectdelete</stat>
<stat pass="3" fail="0" skip="0" id="s1-s6-s10" name="Objecthead">ozonesecure.s3-link.Objecthead</stat>
<stat pass="0" fail="1" skip="0" id="s1-s6-s11" name="Objectmultidelete">ozonesecure.s3-link.Objectmultidelete</stat>
<stat pass="14" fail="0" skip="0" id="s1-s6-s12" name="Objectputget">ozonesecure.s3-link.Objectputget</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7" name="Kinit">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
