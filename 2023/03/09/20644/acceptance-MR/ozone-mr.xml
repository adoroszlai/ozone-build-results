<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.0.2 (Python 3.8.10 on linux)" generated="20230309 20:11:32.286" rpa="false" schemaversion="3">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite id="s1-s1-s1" name="hadoopfs-o3fs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s1-s1-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 19:45:38.325" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230309 19:45:38.324" endtime="20230309 19:45:38.325"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 19:45:38.325" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20230309 19:45:38.325" endtime="20230309 19:45:38.325"/>
</kw>
<status status="PASS" starttime="20230309 19:45:38.323" endtime="20230309 19:45:38.326"/>
</kw>
<msg timestamp="20230309 19:45:38.326" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20230309 19:45:38.323" endtime="20230309 19:45:38.326"/>
</kw>
<status status="PASS" starttime="20230309 19:45:38.322" endtime="20230309 19:45:38.326"/>
</kw>
<msg timestamp="20230309 19:45:38.326" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20230309 19:45:38.321" endtime="20230309 19:45:38.326"/>
</kw>
<msg timestamp="20230309 19:45:38.327" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20230309 19:45:38.320" endtime="20230309 19:45:38.327"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 19:45:38.327" level="INFO">${random} = 28785</msg>
<status status="PASS" starttime="20230309 19:45:38.327" endtime="20230309 19:45:38.327"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:45:38.335" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-28785 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 19:45:43.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 19:45:43.218" level="INFO">${output} = 2023-03-09 19:45:41 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2023-03-09 19:45:41 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2023-03-09 ...</msg>
<status status="PASS" starttime="20230309 19:45:38.329" endtime="20230309 19:45:43.219"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 19:45:43.220" level="INFO">2023-03-09 19:45:41 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2023-03-09 19:45:41 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2023-03-09 19:45:41 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2023-03-09 19:45:41 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230309 19:45:43.219" endtime="20230309 19:45:43.220"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 19:45:43.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230309 19:45:43.220" endtime="20230309 19:45:43.221"/>
</kw>
<status status="PASS" starttime="20230309 19:45:38.328" endtime="20230309 19:45:43.221"/>
</kw>
<msg timestamp="20230309 19:45:43.221" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 19:45:38.328" endtime="20230309 19:45:43.222"/>
</kw>
<msg timestamp="20230309 19:45:43.222" level="INFO">${result} = 2023-03-09 19:45:41 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2023-03-09 19:45:41 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2023-03-09 ...</msg>
<status status="PASS" starttime="20230309 19:45:38.327" endtime="20230309 19:45:43.222"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>multiple SLF4J bindings</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 19:45:43.222" endtime="20230309 19:45:43.222"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:45:43.229" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 19:45:45.987" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 19:45:45.987" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2023-03-09 19:45 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2023-03-09 19:45 o3fs://bucket1.volume1.om/ozone-28785
dr...</msg>
<status status="PASS" starttime="20230309 19:45:43.225" endtime="20230309 19:45:45.987"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 19:45:45.989" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2023-03-09 19:45 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2023-03-09 19:45 o3fs://bucket1.volume1.om/ozone-28785
drwxrwxrwx   - hadoop hadoop          0 2023-03-09 19:45 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20230309 19:45:45.988" endtime="20230309 19:45:45.989"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 19:45:45.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230309 19:45:45.989" endtime="20230309 19:45:45.990"/>
</kw>
<status status="PASS" starttime="20230309 19:45:43.224" endtime="20230309 19:45:45.990"/>
</kw>
<msg timestamp="20230309 19:45:45.990" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 19:45:43.223" endtime="20230309 19:45:45.991"/>
</kw>
<msg timestamp="20230309 19:45:45.991" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2023-03-09 19:45 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2023-03-09 19:45 o3fs://bucket1.volume1.om/ozone-28785
dr...</msg>
<status status="PASS" starttime="20230309 19:45:43.223" endtime="20230309 19:45:45.991"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 19:45:45.991" endtime="20230309 19:45:45.992"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:45:46.003" level="INFO">Running command 'hdfs dfs -cat o3fs://bucket1.volume1.om//ozone-28785 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 19:45:50.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 19:45:50.560" level="INFO">${output} = 2023-03-09 19:45:48 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2023-03-09 19:45:48 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2023-03-09 ...</msg>
<status status="PASS" starttime="20230309 19:45:45.995" endtime="20230309 19:45:50.560"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 19:45:50.562" level="INFO">2023-03-09 19:45:48 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2023-03-09 19:45:48 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2023-03-09 19:45:48 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
This product includes software developed by The Apache Software
Foundation (http://www.apache.org/).

The binary distribution of this product bundles binaries of
org.iq80.leveldb:leveldb-api (https://github.com/dain/leveldb), which has the
following notices:
* Copyright 2011 Dain Sundstrom &lt;dain@iq80.com&gt;
* Copyright 2011 FuseSource Corp. http://fusesource.com

The binary distribution of this product bundles binaries of
org.fusesource.hawtjni:hawtjni-runtime (https://github.com/fusesource/hawtjni),
which has the following notices:
* This product includes software developed by FuseSource Corp.
  http://fusesource.com
* This product includes software developed at
  Progress Software Corporation and/or its  subsidiaries or affiliates.
* This product includes software developed by IBM Corporation and others.

The binary distribution of this product bundles binaries of
Gson 2.2.4,
which has the following notices:

                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * http://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'ArrayDeque', written by Josh
Bloch of Google, Inc:

  * LICENSE:
    * license/LICENSE.deque.txt (Public Domain)

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified version of Roland Kuhn's ASL2
AbstractNodeQueue, which is based on Dmitriy Vyukov's non-intrusive MPSC queue.
It can be obtained at:

  * LICENSE:
    * license/LICENSE.abstractnodequeue.txt (Public Domain)
  * HOMEPAGE:
    * https://github.com/akka/akka/blob/wip-2.2.3-for-scala-2.11/akka-actor/src/main/java/akka/dispatch/AbstractNodeQueue.java

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/libdivsufsort/

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/protobuf/

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/snappy/

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (GNU LGPL 2.1)
  * HOMEPAGE:
    * http://www.jboss.org/jbossmarshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://code.google.com/p/caliper/

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/

The binary distribution of this product bundles binaries of
Commons Codec 1.4,
which has the following notices:
 * src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.javacontains test data from http://aspell.net/test/orig/batch0.tab.Copyright (C) 2002 Kevin Atkinson (kevina@gnu.org)
  ===============================================================================
  The content of package org.apache.commons.codec.language.bm has been translated
  from the original php source code available at http://stevemorse.org/phoneticinfo.htm
  with permission from the original authors.
  Original source copyright:Copyright (c) 2008 Alexander Beider &amp; Stephen P. Morse.

The binary distribution of this product bundles binaries of
Commons Lang 2.6,
which has the following notices:
 * This product includes software from the Spring Framework,under the Apache License 2.0 (see: StringUtils.containsWhitespace())

The binary distribution of this product bundles binaries of
Apache Log4j 1.2.17,
which has the following notices:
 * ResolverUtil.java
    Copyright 2005-2006 Tim Fennell
  Dumbster SMTP test server
    Copyright 2004 Jason Paul Kitchen
  TypeUtil.java
    Copyright 2002-2012 Ramnivas Laddad, Juergen Hoeller, Chris Beams

The binary distribution of this product bundles binaries of
Jetty 6.1.26,
which has the following notices:
 * ==============================================================
    Jetty Web Container
    Copyright 1995-2016 Mort Bay Consulting Pty Ltd.
   ==============================================================

   The Jetty Web Container is Copyright Mort Bay Consulting Pty Ltd
   unless otherwise noted.

   Jetty is dual licensed under both

     * The Apache 2.0 License
       http://www.apache.org/licenses/LICENSE-2.0.html

         and

     * The Eclipse Public 1.0 License
       http://www.eclipse.org/legal/epl-v10.html

   Jetty may be distributed under either license.

   ------
   Eclipse

   The following artifacts are EPL.
    * org.eclipse.jetty.orbit:org.eclipse.jdt.core

   The following artifacts are EPL and ASL2.
    * org.eclipse.jetty.orbit:javax.security.auth.message


   The following artifacts are EPL and CDDL 1.0.
    * org.eclipse.jetty.orbit:javax.mail.glassfish


   ------
   Oracle

   The following artifacts are CDDL + GPLv2 with classpath exception.
   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

    * javax.servlet:javax.servlet-api
    * javax.annotation:javax.annotation-api
    * javax.transaction:javax.transaction-api
    * javax.websocket:javax.websocket-api

   ------
   Oracle OpenJDK

   If ALPN is used to negotiate HTTP/2 connections, then the following
   artifacts may be included in the distribution or downloaded when ALPN
   module is selected.

    * java.sun.security.ssl

   These artifacts replace/modify OpenJDK classes.  The modififications
   are hosted at github and both modified and original are under GPL v2 with
   classpath exceptions.
   http://openjdk.java.net/legal/gplv2+ce.html


   ------
   OW2

   The following artifacts are licensed by the OW2 Foundation according to the
   terms of http://asm.ow2.org/license.html

   org.ow2.asm:asm-commons
   org.ow2.asm:asm


   ------
   Apache

   The following artifacts are ASL2 licensed.

   org.apache.taglibs:taglibs-standard-spec
   org.apache.taglibs:taglibs-standard-impl


   ------
   MortBay

   The following artifacts are ASL2 licensed.  Based on selected classes from
   following Apache Tomcat jars, all ASL2 licensed.

   org.mortbay.jasper:apache-jsp
     org.apache.tomcat:tomcat-jasper
     org.apache.tomcat:tomcat-juli
     org.apache.tomcat:tomcat-jsp-api
     org.apache.tomcat:tomcat-el-api
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-api
     org.apache.tomcat:tomcat-util-scan
     org.apache.tomcat:tomcat-util

   org.mortbay.jasper:apache-el
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-el-api


   ------
   Mortbay

   The following artifacts are CDDL + GPLv2 with classpath exception.

   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

   org.eclipse.jetty.toolchain:jetty-schemas

   ------
   Assorted

   The UnixCrypt.java code implements the one way cryptography used by
   Unix systems for simple password protection.  Copyright 1996 Aki Yoshida,
   modified April 2001  by Iris Van den Broeke, Daniel Deville.
   Permission to use, copy, modify and distribute UnixCrypt
   for non-commercial or commercial purposes and without fee is
   granted provided that the copyright notice appears in all copies./

The binary distribution of this product bundles binaries of
Snappy for Java 1.0.4.1,
which has the following notices:
 * This product includes software developed by Google
    Snappy: http://code.google.com/p/snappy/ (New BSD License)

   This product includes software developed by Apache
    PureJavaCrc32C from apache-hadoop-common http://hadoop.apache.org/
    (Apache 2.0 license)

   This library containd statically linked libstdc++. This inclusion is allowed by
   "GCC RUntime Library Exception"
   http://gcc.gnu.org/onlinedocs/libstdc++/manual/license.html

   == Contributors ==
     * Tatu Saloranta
       * Providing benchmark suite
     * Alec Wysoker
       * Performance and memory usage improvement

The binary distribution of this product bundles binaries of
Xerces2 Java Parser 2.9.1,
which has the following notices:
 * =========================================================================
   ==  NOTICE file corresponding to section 4(d) of the Apache License,   ==
   ==  Version 2.0, in this case for the Apache Xerces Java distribution. ==
   =========================================================================

   Apache Xerces Java
   Copyright 1999-2007 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   Portions of this software were originally based on the following:
     - software copyright (c) 1999, IBM Corporation., http://www.ibm.com.
     - software copyright (c) 1999, Sun Microsystems., http://www.sun.com.
     - voluntary contributions made by Paul Eng on behalf of the
       Apache Software Foundation that were originally developed at iClick, Inc.,
       software copyright (c) 1999.</msg>
<status status="PASS" starttime="20230309 19:45:50.561" endtime="20230309 19:45:50.562"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 19:45:50.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230309 19:45:50.563" endtime="20230309 19:45:50.563"/>
</kw>
<status status="PASS" starttime="20230309 19:45:45.993" endtime="20230309 19:45:50.564"/>
</kw>
<msg timestamp="20230309 19:45:50.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 19:45:45.993" endtime="20230309 19:45:50.564"/>
</kw>
<msg timestamp="20230309 19:45:50.565" level="INFO">${result} = 2023-03-09 19:45:48 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2023-03-09 19:45:48 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2023-03-09 ...</msg>
<status status="PASS" starttime="20230309 19:45:45.992" endtime="20230309 19:45:50.565"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 19:45:50.565" endtime="20230309 19:45:50.566"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 19:45:38.319" endtime="20230309 19:45:50.566"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20230309 19:45:38.251" endtime="20230309 19:45:50.567"/>
</suite>
<suite id="s1-s1-s2" name="mapreduce-o3fs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s1-s2-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:45:56.614" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 19:45:56.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 19:45:56.623" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20230309 19:45:56.610" endtime="20230309 19:45:56.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 19:45:56.624" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20230309 19:45:56.623" endtime="20230309 19:45:56.624"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 19:45:56.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230309 19:45:56.624" endtime="20230309 19:45:56.625"/>
</kw>
<status status="PASS" starttime="20230309 19:45:56.609" endtime="20230309 19:45:56.625"/>
</kw>
<msg timestamp="20230309 19:45:56.625" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 19:45:56.608" endtime="20230309 19:45:56.625"/>
</kw>
<msg timestamp="20230309 19:45:56.626" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20230309 19:45:56.608" endtime="20230309 19:45:56.626"/>
</kw>
<msg timestamp="20230309 19:45:56.626" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20230309 19:45:56.607" endtime="20230309 19:45:56.626"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 19:45:56.631" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230309 19:45:56.631" endtime="20230309 19:45:56.631"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 19:45:56.632" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20230309 19:45:56.632" endtime="20230309 19:45:56.632"/>
</kw>
<status status="PASS" starttime="20230309 19:45:56.630" endtime="20230309 19:45:56.633"/>
</kw>
<msg timestamp="20230309 19:45:56.633" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20230309 19:45:56.630" endtime="20230309 19:45:56.633"/>
</kw>
<status status="PASS" starttime="20230309 19:45:56.629" endtime="20230309 19:45:56.633"/>
</kw>
<msg timestamp="20230309 19:45:56.633" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20230309 19:45:56.628" endtime="20230309 19:45:56.633"/>
</kw>
<msg timestamp="20230309 19:45:56.633" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20230309 19:45:56.626" endtime="20230309 19:45:56.633"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:45:56.637" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 19:46:47.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 19:46:47.243" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2023-03-09 19:45:59 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2023-03-09 19:45:59 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" starttime="20230309 19:45:56.635" endtime="20230309 19:46:47.243"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 19:46:47.244" level="INFO">Number of Maps  = 3
Samples per Map = 3
2023-03-09 19:45:59 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2023-03-09 19:45:59 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2023-03-09 19:45:59 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2023-03-09 19:46:00 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2023-03-09 19:46:01 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.18.0.2:8032
2023-03-09 19:46:02 INFO  FileInputFormat:283 - Total input paths to process : 3
2023-03-09 19:46:02 INFO  JobSubmitter:198 - number of splits:3
2023-03-09 19:46:02 INFO  JobSubmitter:287 - Submitting tokens for job: job_1678391024060_0001
2023-03-09 19:46:03 INFO  YarnClientImpl:273 - Submitted application application_1678391024060_0001
2023-03-09 19:46:03 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1678391024060_0001/
2023-03-09 19:46:03 INFO  Job:1339 - Running job: job_1678391024060_0001
2023-03-09 19:46:15 INFO  Job:1360 - Job job_1678391024060_0001 running in uber mode : false
2023-03-09 19:46:15 INFO  Job:1367 -  map 0% reduce 0%
2023-03-09 19:46:25 INFO  Job:1367 -  map 33% reduce 0%
2023-03-09 19:46:31 INFO  Job:1367 -  map 67% reduce 0%
2023-03-09 19:46:38 INFO  Job:1367 -  map 100% reduce 0%
2023-03-09 19:46:45 INFO  Job:1367 -  map 100% reduce 100%
2023-03-09 19:46:46 INFO  Job:1378 - Job job_1678391024060_0001 completed successfully
2023-03-09 19:46:46 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=479865
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=15
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=61560
		Total time spent by all reduces in occupied slots (ms)=22488
		Total time spent by all map tasks (ms)=15390
		Total time spent by all reduce tasks (ms)=5622
		Total vcore-milliseconds taken by all map tasks=15390
		Total vcore-milliseconds taken by all reduce tasks=5622
		Total megabyte-milliseconds taken by all map tasks=63037440
		Total megabyte-milliseconds taken by all reduce tasks=23027712
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=774
		CPU time spent (ms)=9670
		Physical memory (bytes) snapshot=1569955840
		Virtual memory (bytes) snapshot=15843196928
		Total committed heap usage (bytes)=1329594368
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 45.25 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20230309 19:46:47.243" endtime="20230309 19:46:47.244"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 19:46:47.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230309 19:46:47.244" endtime="20230309 19:46:47.245"/>
</kw>
<status status="PASS" starttime="20230309 19:45:56.635" endtime="20230309 19:46:47.245"/>
</kw>
<msg timestamp="20230309 19:46:47.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 19:45:56.634" endtime="20230309 19:46:47.246"/>
</kw>
<msg timestamp="20230309 19:46:47.246" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2023-03-09 19:45:59 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2023-03-09 19:45:59 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" starttime="20230309 19:45:56.634" endtime="20230309 19:46:47.246"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 19:46:47.246" endtime="20230309 19:46:47.247"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>multiple SLF4J bindings</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 19:46:47.247" endtime="20230309 19:46:47.247"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230309 19:45:56.606" endtime="20230309 19:46:47.248"/>
</test>
<test id="s1-s1-s2-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:46:47.254" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 19:46:47.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 19:46:47.260" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20230309 19:46:47.252" endtime="20230309 19:46:47.260"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 19:46:47.262" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20230309 19:46:47.261" endtime="20230309 19:46:47.262"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 19:46:47.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230309 19:46:47.262" endtime="20230309 19:46:47.265"/>
</kw>
<status status="PASS" starttime="20230309 19:46:47.251" endtime="20230309 19:46:47.265"/>
</kw>
<msg timestamp="20230309 19:46:47.265" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 19:46:47.251" endtime="20230309 19:46:47.265"/>
</kw>
<msg timestamp="20230309 19:46:47.266" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20230309 19:46:47.250" endtime="20230309 19:46:47.266"/>
</kw>
<msg timestamp="20230309 19:46:47.266" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20230309 19:46:47.250" endtime="20230309 19:46:47.266"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 19:46:47.267" level="INFO">${random} = fZtFYVUL</msg>
<status status="PASS" starttime="20230309 19:46:47.266" endtime="20230309 19:46:47.267"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 19:46:47.272" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230309 19:46:47.271" endtime="20230309 19:46:47.272"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 19:46:47.272" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20230309 19:46:47.272" endtime="20230309 19:46:47.272"/>
</kw>
<status status="PASS" starttime="20230309 19:46:47.270" endtime="20230309 19:46:47.273"/>
</kw>
<msg timestamp="20230309 19:46:47.273" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20230309 19:46:47.269" endtime="20230309 19:46:47.273"/>
</kw>
<status status="PASS" starttime="20230309 19:46:47.269" endtime="20230309 19:46:47.273"/>
</kw>
<msg timestamp="20230309 19:46:47.273" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20230309 19:46:47.268" endtime="20230309 19:46:47.273"/>
</kw>
<msg timestamp="20230309 19:46:47.274" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20230309 19:46:47.267" endtime="20230309 19:46:47.274"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 19:46:47.278" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230309 19:46:47.277" endtime="20230309 19:46:47.278"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 19:46:47.279" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20230309 19:46:47.278" endtime="20230309 19:46:47.279"/>
</kw>
<status status="PASS" starttime="20230309 19:46:47.277" endtime="20230309 19:46:47.279"/>
</kw>
<msg timestamp="20230309 19:46:47.279" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20230309 19:46:47.276" endtime="20230309 19:46:47.279"/>
</kw>
<status status="PASS" starttime="20230309 19:46:47.275" endtime="20230309 19:46:47.279"/>
</kw>
<msg timestamp="20230309 19:46:47.279" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20230309 19:46:47.275" endtime="20230309 19:46:47.280"/>
</kw>
<msg timestamp="20230309 19:46:47.280" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20230309 19:46:47.274" endtime="20230309 19:46:47.280"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 19:46:47.284" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230309 19:46:47.283" endtime="20230309 19:46:47.284"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 19:46:47.285" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20230309 19:46:47.284" endtime="20230309 19:46:47.285"/>
</kw>
<status status="PASS" starttime="20230309 19:46:47.283" endtime="20230309 19:46:47.285"/>
</kw>
<msg timestamp="20230309 19:46:47.285" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20230309 19:46:47.282" endtime="20230309 19:46:47.285"/>
</kw>
<status status="PASS" starttime="20230309 19:46:47.281" endtime="20230309 19:46:47.285"/>
</kw>
<msg timestamp="20230309 19:46:47.286" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-fZtFYVUL.txt</msg>
<status status="PASS" starttime="20230309 19:46:47.281" endtime="20230309 19:46:47.286"/>
</kw>
<msg timestamp="20230309 19:46:47.286" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-fZtFYVUL.txt</msg>
<status status="PASS" starttime="20230309 19:46:47.280" endtime="20230309 19:46:47.286"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:46:47.290" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-fZtFYVUL.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 19:47:32.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 19:47:32.824" level="INFO">${output} = 2023-03-09 19:46:50 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.18.0.2:8032
2023-03-09 19:46:50 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" starttime="20230309 19:46:47.288" endtime="20230309 19:47:32.824"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 19:47:32.825" level="INFO">2023-03-09 19:46:50 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.18.0.2:8032
2023-03-09 19:46:50 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2023-03-09 19:46:50 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2023-03-09 19:46:51 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2023-03-09 19:46:51 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2023-03-09 19:46:51 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-03-09 19:46:52 INFO  FileInputFormat:283 - Total input paths to process : 3
2023-03-09 19:46:53 INFO  JobSubmitter:198 - number of splits:3
2023-03-09 19:46:53 INFO  JobSubmitter:287 - Submitting tokens for job: job_1678391024060_0002
2023-03-09 19:46:53 INFO  YarnClientImpl:273 - Submitted application application_1678391024060_0002
2023-03-09 19:46:53 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1678391024060_0002/
2023-03-09 19:46:53 INFO  Job:1339 - Running job: job_1678391024060_0002
2023-03-09 19:47:03 INFO  Job:1360 - Job job_1678391024060_0002 running in uber mode : false
2023-03-09 19:47:03 INFO  Job:1367 -  map 0% reduce 0%
2023-03-09 19:47:11 INFO  Job:1367 -  map 33% reduce 0%
2023-03-09 19:47:17 INFO  Job:1367 -  map 67% reduce 0%
2023-03-09 19:47:24 INFO  Job:1367 -  map 100% reduce 0%
2023-03-09 19:47:31 INFO  Job:1367 -  map 100% reduce 100%
2023-03-09 19:47:32 INFO  Job:1378 - Job job_1678391024060_0002 completed successfully
2023-03-09 19:47:32 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=36183
		FILE: Number of bytes written=550819
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=43868
		O3FS: Number of bytes written=25925
		O3FS: Number of read operations=12
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=60248
		Total time spent by all reduces in occupied slots (ms)=21432
		Total time spent by all map tasks (ms)=15062
		Total time spent by all reduce tasks (ms)=5358
		Total vcore-milliseconds taken by all map tasks=15062
		Total vcore-milliseconds taken by all reduce tasks=5358
		Total megabyte-milliseconds taken by all map tasks=61693952
		Total megabyte-milliseconds taken by all reduce tasks=21946368
	Map-Reduce Framework
		Map input records=1170
		Map output records=4644
		Map output bytes=59407
		Map output materialized bytes=36195
		Input split bytes=303
		Combine input records=4644
		Combine output records=1915
		Reduce input groups=1652
		Reduce shuffle bytes=36195
		Reduce input records=1915
		Reduce output records=1652
		Spilled Records=3830
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=770
		CPU time spent (ms)=10060
		Physical memory (bytes) snapshot=1524576256
		Virtual memory (bytes) snapshot=15826075648
		Total committed heap usage (bytes)=1303379968
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=43565
	File Output Format Counters 
		Bytes Written=25925</msg>
<status status="PASS" starttime="20230309 19:47:32.825" endtime="20230309 19:47:32.826"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 19:47:32.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230309 19:47:32.826" endtime="20230309 19:47:32.826"/>
</kw>
<status status="PASS" starttime="20230309 19:46:47.287" endtime="20230309 19:47:32.827"/>
</kw>
<msg timestamp="20230309 19:47:32.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 19:46:47.287" endtime="20230309 19:47:32.827"/>
</kw>
<msg timestamp="20230309 19:47:32.828" level="INFO">${output} = 2023-03-09 19:46:50 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.18.0.2:8032
2023-03-09 19:46:50 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" starttime="20230309 19:46:47.286" endtime="20230309 19:47:32.828"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 19:47:32.828" endtime="20230309 19:47:32.829"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 19:47:32.829" endtime="20230309 19:47:32.829"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230309 19:46:47.249" endtime="20230309 19:47:32.830"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20230309 19:45:56.530" endtime="20230309 19:47:32.832"/>
</suite>
<suite id="s1-s1-s3" name="hadoopfs-ofs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 19:47:39.297" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20230309 19:47:39.297" endtime="20230309 19:47:39.297"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 19:47:39.298" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20230309 19:47:39.297" endtime="20230309 19:47:39.298"/>
</kw>
<status status="PASS" starttime="20230309 19:47:39.296" endtime="20230309 19:47:39.298"/>
</kw>
<msg timestamp="20230309 19:47:39.298" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20230309 19:47:39.295" endtime="20230309 19:47:39.299"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230309 19:47:39.299" endtime="20230309 19:47:39.300"/>
</kw>
<msg timestamp="20230309 19:47:39.300" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20230309 19:47:39.299" endtime="20230309 19:47:39.300"/>
</kw>
<status status="PASS" starttime="20230309 19:47:39.295" endtime="20230309 19:47:39.300"/>
</kw>
<msg timestamp="20230309 19:47:39.300" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20230309 19:47:39.294" endtime="20230309 19:47:39.300"/>
</kw>
<msg timestamp="20230309 19:47:39.301" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20230309 19:47:39.292" endtime="20230309 19:47:39.301"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 19:47:39.301" level="INFO">${random} = 20654</msg>
<status status="PASS" starttime="20230309 19:47:39.301" endtime="20230309 19:47:39.302"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:47:39.309" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-20654 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 19:47:44.448" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 19:47:44.448" level="INFO">${output} = 2023-03-09 19:47:42 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2023-03-09 19:47:42 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2023-03-09 ...</msg>
<status status="PASS" starttime="20230309 19:47:39.303" endtime="20230309 19:47:44.448"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 19:47:44.449" level="INFO">2023-03-09 19:47:42 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2023-03-09 19:47:42 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2023-03-09 19:47:42 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2023-03-09 19:47:42 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230309 19:47:44.448" endtime="20230309 19:47:44.449"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 19:47:44.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230309 19:47:44.449" endtime="20230309 19:47:44.450"/>
</kw>
<status status="PASS" starttime="20230309 19:47:39.303" endtime="20230309 19:47:44.450"/>
</kw>
<msg timestamp="20230309 19:47:44.451" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 19:47:39.302" endtime="20230309 19:47:44.451"/>
</kw>
<msg timestamp="20230309 19:47:44.451" level="INFO">${result} = 2023-03-09 19:47:42 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2023-03-09 19:47:42 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2023-03-09 ...</msg>
<status status="PASS" starttime="20230309 19:47:39.302" endtime="20230309 19:47:44.451"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>multiple SLF4J bindings</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 19:47:44.451" endtime="20230309 19:47:44.452"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:47:44.457" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 19:47:47.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 19:47:47.079" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2023-03-09 19:45 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2023-03-09 19:47 ofs://om/volume1/bucket1/ozone-20654
-rw-...</msg>
<status status="PASS" starttime="20230309 19:47:44.454" endtime="20230309 19:47:47.079"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 19:47:47.081" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2023-03-09 19:45 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2023-03-09 19:47 ofs://om/volume1/bucket1/ozone-20654
-rw-rw-rw-   3 hadoop hadoop      14978 2023-03-09 19:45 ofs://om/volume1/bucket1/ozone-28785
drwxrwxrwx   - hadoop hadoop          0 2023-03-09 19:45 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2023-03-09 19:47 ofs://om/volume1/bucket1/wordcount-fZtFYVUL.txt</msg>
<status status="PASS" starttime="20230309 19:47:47.080" endtime="20230309 19:47:47.081"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 19:47:47.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230309 19:47:47.081" endtime="20230309 19:47:47.082"/>
</kw>
<status status="PASS" starttime="20230309 19:47:44.453" endtime="20230309 19:47:47.082"/>
</kw>
<msg timestamp="20230309 19:47:47.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 19:47:44.453" endtime="20230309 19:47:47.082"/>
</kw>
<msg timestamp="20230309 19:47:47.083" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2023-03-09 19:45 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2023-03-09 19:47 ofs://om/volume1/bucket1/ozone-20654
-rw-...</msg>
<status status="PASS" starttime="20230309 19:47:44.452" endtime="20230309 19:47:47.083"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 19:47:47.083" endtime="20230309 19:47:47.084"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:47:47.093" level="INFO">Running command 'hdfs dfs -cat ofs://om/volume1/bucket1/ozone-20654 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 19:47:51.949" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 19:47:51.949" level="INFO">${output} = 2023-03-09 19:47:50 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2023-03-09 19:47:50 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2023-03-09 ...</msg>
<status status="PASS" starttime="20230309 19:47:47.086" endtime="20230309 19:47:51.949"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 19:47:51.950" level="INFO">2023-03-09 19:47:50 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2023-03-09 19:47:50 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2023-03-09 19:47:50 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
This product includes software developed by The Apache Software
Foundation (http://www.apache.org/).

The binary distribution of this product bundles binaries of
org.iq80.leveldb:leveldb-api (https://github.com/dain/leveldb), which has the
following notices:
* Copyright 2011 Dain Sundstrom &lt;dain@iq80.com&gt;
* Copyright 2011 FuseSource Corp. http://fusesource.com

The binary distribution of this product bundles binaries of
org.fusesource.hawtjni:hawtjni-runtime (https://github.com/fusesource/hawtjni),
which has the following notices:
* This product includes software developed by FuseSource Corp.
  http://fusesource.com
* This product includes software developed at
  Progress Software Corporation and/or its  subsidiaries or affiliates.
* This product includes software developed by IBM Corporation and others.

The binary distribution of this product bundles binaries of
Gson 2.2.4,
which has the following notices:

                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * http://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'ArrayDeque', written by Josh
Bloch of Google, Inc:

  * LICENSE:
    * license/LICENSE.deque.txt (Public Domain)

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified version of Roland Kuhn's ASL2
AbstractNodeQueue, which is based on Dmitriy Vyukov's non-intrusive MPSC queue.
It can be obtained at:

  * LICENSE:
    * license/LICENSE.abstractnodequeue.txt (Public Domain)
  * HOMEPAGE:
    * https://github.com/akka/akka/blob/wip-2.2.3-for-scala-2.11/akka-actor/src/main/java/akka/dispatch/AbstractNodeQueue.java

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/libdivsufsort/

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/protobuf/

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/snappy/

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (GNU LGPL 2.1)
  * HOMEPAGE:
    * http://www.jboss.org/jbossmarshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://code.google.com/p/caliper/

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/

The binary distribution of this product bundles binaries of
Commons Codec 1.4,
which has the following notices:
 * src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.javacontains test data from http://aspell.net/test/orig/batch0.tab.Copyright (C) 2002 Kevin Atkinson (kevina@gnu.org)
  ===============================================================================
  The content of package org.apache.commons.codec.language.bm has been translated
  from the original php source code available at http://stevemorse.org/phoneticinfo.htm
  with permission from the original authors.
  Original source copyright:Copyright (c) 2008 Alexander Beider &amp; Stephen P. Morse.

The binary distribution of this product bundles binaries of
Commons Lang 2.6,
which has the following notices:
 * This product includes software from the Spring Framework,under the Apache License 2.0 (see: StringUtils.containsWhitespace())

The binary distribution of this product bundles binaries of
Apache Log4j 1.2.17,
which has the following notices:
 * ResolverUtil.java
    Copyright 2005-2006 Tim Fennell
  Dumbster SMTP test server
    Copyright 2004 Jason Paul Kitchen
  TypeUtil.java
    Copyright 2002-2012 Ramnivas Laddad, Juergen Hoeller, Chris Beams

The binary distribution of this product bundles binaries of
Jetty 6.1.26,
which has the following notices:
 * ==============================================================
    Jetty Web Container
    Copyright 1995-2016 Mort Bay Consulting Pty Ltd.
   ==============================================================

   The Jetty Web Container is Copyright Mort Bay Consulting Pty Ltd
   unless otherwise noted.

   Jetty is dual licensed under both

     * The Apache 2.0 License
       http://www.apache.org/licenses/LICENSE-2.0.html

         and

     * The Eclipse Public 1.0 License
       http://www.eclipse.org/legal/epl-v10.html

   Jetty may be distributed under either license.

   ------
   Eclipse

   The following artifacts are EPL.
    * org.eclipse.jetty.orbit:org.eclipse.jdt.core

   The following artifacts are EPL and ASL2.
    * org.eclipse.jetty.orbit:javax.security.auth.message


   The following artifacts are EPL and CDDL 1.0.
    * org.eclipse.jetty.orbit:javax.mail.glassfish


   ------
   Oracle

   The following artifacts are CDDL + GPLv2 with classpath exception.
   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

    * javax.servlet:javax.servlet-api
    * javax.annotation:javax.annotation-api
    * javax.transaction:javax.transaction-api
    * javax.websocket:javax.websocket-api

   ------
   Oracle OpenJDK

   If ALPN is used to negotiate HTTP/2 connections, then the following
   artifacts may be included in the distribution or downloaded when ALPN
   module is selected.

    * java.sun.security.ssl

   These artifacts replace/modify OpenJDK classes.  The modififications
   are hosted at github and both modified and original are under GPL v2 with
   classpath exceptions.
   http://openjdk.java.net/legal/gplv2+ce.html


   ------
   OW2

   The following artifacts are licensed by the OW2 Foundation according to the
   terms of http://asm.ow2.org/license.html

   org.ow2.asm:asm-commons
   org.ow2.asm:asm


   ------
   Apache

   The following artifacts are ASL2 licensed.

   org.apache.taglibs:taglibs-standard-spec
   org.apache.taglibs:taglibs-standard-impl


   ------
   MortBay

   The following artifacts are ASL2 licensed.  Based on selected classes from
   following Apache Tomcat jars, all ASL2 licensed.

   org.mortbay.jasper:apache-jsp
     org.apache.tomcat:tomcat-jasper
     org.apache.tomcat:tomcat-juli
     org.apache.tomcat:tomcat-jsp-api
     org.apache.tomcat:tomcat-el-api
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-api
     org.apache.tomcat:tomcat-util-scan
     org.apache.tomcat:tomcat-util

   org.mortbay.jasper:apache-el
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-el-api


   ------
   Mortbay

   The following artifacts are CDDL + GPLv2 with classpath exception.

   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

   org.eclipse.jetty.toolchain:jetty-schemas

   ------
   Assorted

   The UnixCrypt.java code implements the one way cryptography used by
   Unix systems for simple password protection.  Copyright 1996 Aki Yoshida,
   modified April 2001  by Iris Van den Broeke, Daniel Deville.
   Permission to use, copy, modify and distribute UnixCrypt
   for non-commercial or commercial purposes and without fee is
   granted provided that the copyright notice appears in all copies./

The binary distribution of this product bundles binaries of
Snappy for Java 1.0.4.1,
which has the following notices:
 * This product includes software developed by Google
    Snappy: http://code.google.com/p/snappy/ (New BSD License)

   This product includes software developed by Apache
    PureJavaCrc32C from apache-hadoop-common http://hadoop.apache.org/
    (Apache 2.0 license)

   This library containd statically linked libstdc++. This inclusion is allowed by
   "GCC RUntime Library Exception"
   http://gcc.gnu.org/onlinedocs/libstdc++/manual/license.html

   == Contributors ==
     * Tatu Saloranta
       * Providing benchmark suite
     * Alec Wysoker
       * Performance and memory usage improvement

The binary distribution of this product bundles binaries of
Xerces2 Java Parser 2.9.1,
which has the following notices:
 * =========================================================================
   ==  NOTICE file corresponding to section 4(d) of the Apache License,   ==
   ==  Version 2.0, in this case for the Apache Xerces Java distribution. ==
   =========================================================================

   Apache Xerces Java
   Copyright 1999-2007 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   Portions of this software were originally based on the following:
     - software copyright (c) 1999, IBM Corporation., http://www.ibm.com.
     - software copyright (c) 1999, Sun Microsystems., http://www.sun.com.
     - voluntary contributions made by Paul Eng on behalf of the
       Apache Software Foundation that were originally developed at iClick, Inc.,
       software copyright (c) 1999.</msg>
<status status="PASS" starttime="20230309 19:47:51.949" endtime="20230309 19:47:51.951"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 19:47:51.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230309 19:47:51.951" endtime="20230309 19:47:51.952"/>
</kw>
<status status="PASS" starttime="20230309 19:47:47.085" endtime="20230309 19:47:51.952"/>
</kw>
<msg timestamp="20230309 19:47:51.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 19:47:47.085" endtime="20230309 19:47:51.953"/>
</kw>
<msg timestamp="20230309 19:47:51.954" level="INFO">${result} = 2023-03-09 19:47:50 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2023-03-09 19:47:50 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2023-03-09 ...</msg>
<status status="PASS" starttime="20230309 19:47:47.084" endtime="20230309 19:47:51.954"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 19:47:51.954" endtime="20230309 19:47:51.954"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 19:47:39.291" endtime="20230309 19:47:51.955"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20230309 19:47:39.219" endtime="20230309 19:47:51.956"/>
</suite>
<suite id="s1-s1-s4" name="mapreduce-ofs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:47:58.230" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 19:47:58.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 19:47:58.236" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20230309 19:47:58.226" endtime="20230309 19:47:58.236"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 19:47:58.238" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20230309 19:47:58.237" endtime="20230309 19:47:58.238"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 19:47:58.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230309 19:47:58.238" endtime="20230309 19:47:58.239"/>
</kw>
<status status="PASS" starttime="20230309 19:47:58.225" endtime="20230309 19:47:58.239"/>
</kw>
<msg timestamp="20230309 19:47:58.239" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 19:47:58.225" endtime="20230309 19:47:58.239"/>
</kw>
<msg timestamp="20230309 19:47:58.240" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20230309 19:47:58.224" endtime="20230309 19:47:58.240"/>
</kw>
<msg timestamp="20230309 19:47:58.240" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20230309 19:47:58.224" endtime="20230309 19:47:58.240"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 19:47:58.245" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20230309 19:47:58.245" endtime="20230309 19:47:58.245"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 19:47:58.246" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20230309 19:47:58.246" endtime="20230309 19:47:58.246"/>
</kw>
<status status="PASS" starttime="20230309 19:47:58.244" endtime="20230309 19:47:58.246"/>
</kw>
<msg timestamp="20230309 19:47:58.247" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20230309 19:47:58.244" endtime="20230309 19:47:58.247"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230309 19:47:58.249" endtime="20230309 19:47:58.249"/>
</kw>
<msg timestamp="20230309 19:47:58.249" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20230309 19:47:58.247" endtime="20230309 19:47:58.249"/>
</kw>
<status status="PASS" starttime="20230309 19:47:58.243" endtime="20230309 19:47:58.250"/>
</kw>
<msg timestamp="20230309 19:47:58.250" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20230309 19:47:58.242" endtime="20230309 19:47:58.250"/>
</kw>
<msg timestamp="20230309 19:47:58.250" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20230309 19:47:58.240" endtime="20230309 19:47:58.250"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:47:58.255" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 19:48:42.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 19:48:42.906" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2023-03-09 19:48:01 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2023-03-09 19:48:01 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" starttime="20230309 19:47:58.252" endtime="20230309 19:48:42.906"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 19:48:42.907" level="INFO">Number of Maps  = 3
Samples per Map = 3
2023-03-09 19:48:01 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2023-03-09 19:48:01 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2023-03-09 19:48:01 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2023-03-09 19:48:01 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2023-03-09 19:48:02 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.18.0.2:8032
2023-03-09 19:48:03 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2023-03-09 19:48:03 INFO  FileInputFormat:283 - Total input paths to process : 3
2023-03-09 19:48:03 INFO  JobSubmitter:198 - number of splits:3
2023-03-09 19:48:04 INFO  JobSubmitter:287 - Submitting tokens for job: job_1678391024060_0003
2023-03-09 19:48:04 INFO  YarnClientImpl:273 - Submitted application application_1678391024060_0003
2023-03-09 19:48:04 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1678391024060_0003/
2023-03-09 19:48:04 INFO  Job:1339 - Running job: job_1678391024060_0003
2023-03-09 19:48:14 INFO  Job:1360 - Job job_1678391024060_0003 running in uber mode : false
2023-03-09 19:48:14 INFO  Job:1367 -  map 0% reduce 0%
2023-03-09 19:48:22 INFO  Job:1367 -  map 33% reduce 0%
2023-03-09 19:48:28 INFO  Job:1367 -  map 67% reduce 0%
2023-03-09 19:48:34 INFO  Job:1367 -  map 100% reduce 0%
2023-03-09 19:48:41 INFO  Job:1367 -  map 100% reduce 100%
2023-03-09 19:48:42 INFO  Job:1378 - Job job_1678391024060_0003 completed successfully
2023-03-09 19:48:42 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=479653
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=15
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=56532
		Total time spent by all reduces in occupied slots (ms)=21824
		Total time spent by all map tasks (ms)=14133
		Total time spent by all reduce tasks (ms)=5456
		Total vcore-milliseconds taken by all map tasks=14133
		Total vcore-milliseconds taken by all reduce tasks=5456
		Total megabyte-milliseconds taken by all map tasks=57888768
		Total megabyte-milliseconds taken by all reduce tasks=22347776
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=718
		CPU time spent (ms)=10290
		Physical memory (bytes) snapshot=1541734400
		Virtual memory (bytes) snapshot=15844364288
		Total committed heap usage (bytes)=1341652992
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 39.275 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20230309 19:48:42.907" endtime="20230309 19:48:42.908"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 19:48:42.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230309 19:48:42.908" endtime="20230309 19:48:42.909"/>
</kw>
<status status="PASS" starttime="20230309 19:47:58.252" endtime="20230309 19:48:42.909"/>
</kw>
<msg timestamp="20230309 19:48:42.909" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 19:47:58.251" endtime="20230309 19:48:42.910"/>
</kw>
<msg timestamp="20230309 19:48:42.910" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2023-03-09 19:48:01 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2023-03-09 19:48:01 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" starttime="20230309 19:47:58.250" endtime="20230309 19:48:42.910"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 19:48:42.911" endtime="20230309 19:48:42.911"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>multiple SLF4J bindings</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 19:48:42.911" endtime="20230309 19:48:42.912"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230309 19:47:58.223" endtime="20230309 19:48:42.912"/>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:48:42.921" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 19:48:42.926" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 19:48:42.926" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20230309 19:48:42.918" endtime="20230309 19:48:42.927"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 19:48:42.928" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20230309 19:48:42.927" endtime="20230309 19:48:42.928"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 19:48:42.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230309 19:48:42.928" endtime="20230309 19:48:42.929"/>
</kw>
<status status="PASS" starttime="20230309 19:48:42.917" endtime="20230309 19:48:42.930"/>
</kw>
<msg timestamp="20230309 19:48:42.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 19:48:42.917" endtime="20230309 19:48:42.930"/>
</kw>
<msg timestamp="20230309 19:48:42.930" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20230309 19:48:42.916" endtime="20230309 19:48:42.930"/>
</kw>
<msg timestamp="20230309 19:48:42.931" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20230309 19:48:42.916" endtime="20230309 19:48:42.931"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 19:48:42.931" level="INFO">${random} = zlepFqq7</msg>
<status status="PASS" starttime="20230309 19:48:42.931" endtime="20230309 19:48:42.931"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 19:48:42.937" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20230309 19:48:42.936" endtime="20230309 19:48:42.937"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 19:48:42.937" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20230309 19:48:42.937" endtime="20230309 19:48:42.940"/>
</kw>
<status status="PASS" starttime="20230309 19:48:42.935" endtime="20230309 19:48:42.940"/>
</kw>
<msg timestamp="20230309 19:48:42.941" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20230309 19:48:42.935" endtime="20230309 19:48:42.941"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230309 19:48:42.943" endtime="20230309 19:48:42.943"/>
</kw>
<msg timestamp="20230309 19:48:42.944" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20230309 19:48:42.941" endtime="20230309 19:48:42.944"/>
</kw>
<status status="PASS" starttime="20230309 19:48:42.934" endtime="20230309 19:48:42.944"/>
</kw>
<msg timestamp="20230309 19:48:42.945" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20230309 19:48:42.933" endtime="20230309 19:48:42.945"/>
</kw>
<msg timestamp="20230309 19:48:42.945" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20230309 19:48:42.932" endtime="20230309 19:48:42.945"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 19:48:42.951" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20230309 19:48:42.950" endtime="20230309 19:48:42.951"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 19:48:42.951" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20230309 19:48:42.951" endtime="20230309 19:48:42.952"/>
</kw>
<status status="PASS" starttime="20230309 19:48:42.949" endtime="20230309 19:48:42.952"/>
</kw>
<msg timestamp="20230309 19:48:42.952" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20230309 19:48:42.948" endtime="20230309 19:48:42.952"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 19:48:42.954" level="INFO">${first} = i</msg>
<status status="PASS" starttime="20230309 19:48:42.953" endtime="20230309 19:48:42.954"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 19:48:42.955" level="INFO">${result} = /input/</msg>
<status status="PASS" starttime="20230309 19:48:42.954" endtime="20230309 19:48:42.955"/>
</kw>
<status status="PASS" starttime="20230309 19:48:42.953" endtime="20230309 19:48:42.955"/>
</kw>
<msg timestamp="20230309 19:48:42.956" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" starttime="20230309 19:48:42.952" endtime="20230309 19:48:42.956"/>
</kw>
<status status="PASS" starttime="20230309 19:48:42.947" endtime="20230309 19:48:42.956"/>
</kw>
<msg timestamp="20230309 19:48:42.956" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20230309 19:48:42.946" endtime="20230309 19:48:42.956"/>
</kw>
<msg timestamp="20230309 19:48:42.957" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20230309 19:48:42.945" endtime="20230309 19:48:42.957"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 19:48:42.962" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20230309 19:48:42.961" endtime="20230309 19:48:42.962"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 19:48:42.962" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20230309 19:48:42.962" endtime="20230309 19:48:42.963"/>
</kw>
<status status="PASS" starttime="20230309 19:48:42.960" endtime="20230309 19:48:42.963"/>
</kw>
<msg timestamp="20230309 19:48:42.963" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20230309 19:48:42.960" endtime="20230309 19:48:42.963"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 19:48:42.965" level="INFO">${first} = w</msg>
<status status="PASS" starttime="20230309 19:48:42.964" endtime="20230309 19:48:42.965"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 19:48:42.966" level="INFO">${result} = /wordcount-zlepFqq7.txt</msg>
<status status="PASS" starttime="20230309 19:48:42.965" endtime="20230309 19:48:42.966"/>
</kw>
<status status="PASS" starttime="20230309 19:48:42.964" endtime="20230309 19:48:42.966"/>
</kw>
<msg timestamp="20230309 19:48:42.966" level="INFO">${path_with_leading} = /wordcount-zlepFqq7.txt</msg>
<status status="PASS" starttime="20230309 19:48:42.963" endtime="20230309 19:48:42.966"/>
</kw>
<status status="PASS" starttime="20230309 19:48:42.959" endtime="20230309 19:48:42.967"/>
</kw>
<msg timestamp="20230309 19:48:42.967" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-zlepFqq7.txt</msg>
<status status="PASS" starttime="20230309 19:48:42.958" endtime="20230309 19:48:42.967"/>
</kw>
<msg timestamp="20230309 19:48:42.967" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-zlepFqq7.txt</msg>
<status status="PASS" starttime="20230309 19:48:42.957" endtime="20230309 19:48:42.967"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:48:42.973" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-zlepFqq7.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 19:49:26.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 19:49:26.330" level="INFO">${output} = 2023-03-09 19:48:45 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.18.0.2:8032
2023-03-09 19:48:46 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" starttime="20230309 19:48:42.970" endtime="20230309 19:49:26.330"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 19:49:26.332" level="INFO">2023-03-09 19:48:45 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.18.0.2:8032
2023-03-09 19:48:46 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2023-03-09 19:48:46 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2023-03-09 19:48:46 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2023-03-09 19:48:46 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2023-03-09 19:48:46 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-03-09 19:48:48 INFO  FileInputFormat:283 - Total input paths to process : 3
2023-03-09 19:48:48 INFO  JobSubmitter:198 - number of splits:3
2023-03-09 19:48:48 INFO  JobSubmitter:287 - Submitting tokens for job: job_1678391024060_0004
2023-03-09 19:48:49 INFO  YarnClientImpl:273 - Submitted application application_1678391024060_0004
2023-03-09 19:48:49 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1678391024060_0004/
2023-03-09 19:48:49 INFO  Job:1339 - Running job: job_1678391024060_0004
2023-03-09 19:48:58 INFO  Job:1360 - Job job_1678391024060_0004 running in uber mode : false
2023-03-09 19:48:58 INFO  Job:1367 -  map 0% reduce 0%
2023-03-09 19:49:06 INFO  Job:1367 -  map 33% reduce 0%
2023-03-09 19:49:13 INFO  Job:1367 -  map 67% reduce 0%
2023-03-09 19:49:19 INFO  Job:1367 -  map 100% reduce 0%
2023-03-09 19:49:24 INFO  Job:1367 -  map 100% reduce 100%
2023-03-09 19:49:25 INFO  Job:1378 - Job job_1678391024060_0004 completed successfully
2023-03-09 19:49:25 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=36183
		FILE: Number of bytes written=550735
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=43865
		OFS: Number of bytes written=25925
		OFS: Number of read operations=12
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=57196
		Total time spent by all reduces in occupied slots (ms)=20688
		Total time spent by all map tasks (ms)=14299
		Total time spent by all reduce tasks (ms)=5172
		Total vcore-milliseconds taken by all map tasks=14299
		Total vcore-milliseconds taken by all reduce tasks=5172
		Total megabyte-milliseconds taken by all map tasks=58568704
		Total megabyte-milliseconds taken by all reduce tasks=21184512
	Map-Reduce Framework
		Map input records=1170
		Map output records=4644
		Map output bytes=59407
		Map output materialized bytes=36195
		Input split bytes=300
		Combine input records=4644
		Combine output records=1915
		Reduce input groups=1652
		Reduce shuffle bytes=36195
		Reduce input records=1915
		Reduce output records=1652
		Spilled Records=3830
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=711
		CPU time spent (ms)=9880
		Physical memory (bytes) snapshot=1563574272
		Virtual memory (bytes) snapshot=15830822912
		Total committed heap usage (bytes)=1317011456
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=43565
	File Output Format Counters 
		Bytes Written=25925</msg>
<status status="PASS" starttime="20230309 19:49:26.331" endtime="20230309 19:49:26.332"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 19:49:26.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230309 19:49:26.332" endtime="20230309 19:49:26.333"/>
</kw>
<status status="PASS" starttime="20230309 19:48:42.969" endtime="20230309 19:49:26.333"/>
</kw>
<msg timestamp="20230309 19:49:26.333" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 19:48:42.969" endtime="20230309 19:49:26.334"/>
</kw>
<msg timestamp="20230309 19:49:26.334" level="INFO">${output} = 2023-03-09 19:48:45 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.18.0.2:8032
2023-03-09 19:48:46 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" starttime="20230309 19:48:42.968" endtime="20230309 19:49:26.334"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 19:49:26.334" endtime="20230309 19:49:26.335"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 19:49:26.335" endtime="20230309 19:49:26.335"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230309 19:48:42.915" endtime="20230309 19:49:26.336"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20230309 19:47:58.157" endtime="20230309 19:49:26.337"/>
</suite>
<suite id="s1-s1-s5" name="Createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-s1-s5-t1" name="Create test volume, bucket and key" line="38">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:44:44.324" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 19:44:51.200" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 19:44:51.200" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20230309 19:44:44.317" endtime="20230309 19:44:51.200"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 19:44:51.202" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20230309 19:44:51.201" endtime="20230309 19:44:51.202"/>
</kw>
<msg timestamp="20230309 19:44:51.203" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20230309 19:44:44.316" endtime="20230309 19:44:51.203"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create volume">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:44:51.212" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 19:44:54.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 19:44:54.999" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 19:44:51.207" endtime="20230309 19:44:54.999"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 19:44:55.001" level="INFO"/>
<status status="PASS" starttime="20230309 19:44:55.000" endtime="20230309 19:44:55.001"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 19:44:55.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 19:44:55.001" endtime="20230309 19:44:55.002"/>
</kw>
<status status="PASS" starttime="20230309 19:44:51.206" endtime="20230309 19:44:55.002"/>
</kw>
<msg timestamp="20230309 19:44:55.002" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 19:44:51.206" endtime="20230309 19:44:55.003"/>
</kw>
<msg timestamp="20230309 19:44:55.004" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 19:44:51.205" endtime="20230309 19:44:55.004"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 19:44:55.005" endtime="20230309 19:44:55.005"/>
</kw>
<status status="PASS" starttime="20230309 19:44:51.204" endtime="20230309 19:44:55.006"/>
</kw>
<status status="PASS" starttime="20230309 19:44:51.203" endtime="20230309 19:44:55.006"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/${bucket} --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:44:55.011" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 19:44:58.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 19:44:58.515" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 19:44:55.009" endtime="20230309 19:44:58.515"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 19:44:58.516" level="INFO"/>
<status status="PASS" starttime="20230309 19:44:58.515" endtime="20230309 19:44:58.516"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 19:44:58.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 19:44:58.516" endtime="20230309 19:44:58.517"/>
</kw>
<status status="PASS" starttime="20230309 19:44:55.008" endtime="20230309 19:44:58.517"/>
</kw>
<msg timestamp="20230309 19:44:58.517" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 19:44:55.007" endtime="20230309 19:44:58.518"/>
</kw>
<status status="PASS" starttime="20230309 19:44:55.007" endtime="20230309 19:44:58.518"/>
</kw>
<status status="PASS" starttime="20230309 19:44:55.006" endtime="20230309 19:44:58.519"/>
</kw>
<status status="PASS" starttime="20230309 19:44:55.006" endtime="20230309 19:44:58.519"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 19:44:58.519" endtime="20230309 19:44:58.519"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:44:58.523" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 19:45:02.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 19:45:02.234" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023-03-09T19:44...</msg>
<status status="PASS" starttime="20230309 19:44:58.521" endtime="20230309 19:45:02.234"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 19:45:02.236" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023-03-09T19:44:58.488Z",
  "modificationTime" : "2023-03-09T19:44:58.488Z",
  "quotaInBytes" : 1099511627776,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "hadoop",
  "link" : false
}</msg>
<status status="PASS" starttime="20230309 19:45:02.235" endtime="20230309 19:45:02.236"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 19:45:02.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 19:45:02.236" endtime="20230309 19:45:02.237"/>
</kw>
<status status="PASS" starttime="20230309 19:44:58.520" endtime="20230309 19:45:02.237"/>
</kw>
<msg timestamp="20230309 19:45:02.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 19:44:58.520" endtime="20230309 19:45:02.238"/>
</kw>
<msg timestamp="20230309 19:45:02.238" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023-03-09T19:44...</msg>
<status status="PASS" starttime="20230309 19:44:58.519" endtime="20230309 19:45:02.238"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 19:45:02.238" endtime="20230309 19:45:02.239"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 19:45:02.244" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230309 19:45:02.244" endtime="20230309 19:45:02.244"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 19:45:02.245" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20230309 19:45:02.245" endtime="20230309 19:45:02.245"/>
</kw>
<status status="PASS" starttime="20230309 19:45:02.243" endtime="20230309 19:45:02.246"/>
</kw>
<msg timestamp="20230309 19:45:02.246" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20230309 19:45:02.242" endtime="20230309 19:45:02.246"/>
</kw>
<status status="PASS" starttime="20230309 19:45:02.241" endtime="20230309 19:45:02.246"/>
</kw>
<msg timestamp="20230309 19:45:02.246" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20230309 19:45:02.240" endtime="20230309 19:45:02.246"/>
</kw>
<msg timestamp="20230309 19:45:02.247" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20230309 19:45:02.239" endtime="20230309 19:45:02.247"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:45:02.254" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 19:45:05.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 19:45:05.878" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 19:45:02.249" endtime="20230309 19:45:05.878"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 19:45:05.880" level="INFO"/>
<status status="PASS" starttime="20230309 19:45:05.879" endtime="20230309 19:45:05.880"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 19:45:05.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 19:45:05.880" endtime="20230309 19:45:05.881"/>
</kw>
<status status="PASS" starttime="20230309 19:45:02.248" endtime="20230309 19:45:05.881"/>
</kw>
<msg timestamp="20230309 19:45:05.881" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 19:45:02.247" endtime="20230309 19:45:05.882"/>
</kw>
<status status="PASS" starttime="20230309 19:45:02.247" endtime="20230309 19:45:05.882"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:45:05.887" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 19:45:13.635" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 19:45:13.635" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 19:45:05.884" endtime="20230309 19:45:13.635"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 19:45:13.637" level="INFO"/>
<status status="PASS" starttime="20230309 19:45:13.636" endtime="20230309 19:45:13.637"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 19:45:13.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 19:45:13.637" endtime="20230309 19:45:13.638"/>
</kw>
<status status="PASS" starttime="20230309 19:45:05.884" endtime="20230309 19:45:13.638"/>
</kw>
<msg timestamp="20230309 19:45:13.639" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 19:45:05.883" endtime="20230309 19:45:13.639"/>
</kw>
<status status="PASS" starttime="20230309 19:45:05.883" endtime="20230309 19:45:13.639"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:45:13.644" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 19:45:20.261" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 19:45:20.261" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 19:45:13.641" endtime="20230309 19:45:20.261"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 19:45:20.263" level="INFO"/>
<status status="PASS" starttime="20230309 19:45:20.262" endtime="20230309 19:45:20.263"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 19:45:20.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 19:45:20.263" endtime="20230309 19:45:20.264"/>
</kw>
<status status="PASS" starttime="20230309 19:45:13.641" endtime="20230309 19:45:20.264"/>
</kw>
<msg timestamp="20230309 19:45:20.264" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 19:45:13.640" endtime="20230309 19:45:20.265"/>
</kw>
<status status="PASS" starttime="20230309 19:45:13.640" endtime="20230309 19:45:20.265"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:45:20.270" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 19:45:26.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 19:45:26.376" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 19:45:20.267" endtime="20230309 19:45:26.376"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 19:45:26.378" level="INFO"/>
<status status="PASS" starttime="20230309 19:45:26.377" endtime="20230309 19:45:26.378"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 19:45:26.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 19:45:26.378" endtime="20230309 19:45:26.380"/>
</kw>
<status status="PASS" starttime="20230309 19:45:20.266" endtime="20230309 19:45:26.380"/>
</kw>
<msg timestamp="20230309 19:45:26.380" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 19:45:20.266" endtime="20230309 19:45:26.381"/>
</kw>
<status status="PASS" starttime="20230309 19:45:20.265" endtime="20230309 19:45:26.381"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230309 19:44:44.314" endtime="20230309 19:45:26.381"/>
</test>
<test id="s1-s1-s5-t2" name="Create user dir for hadoop" line="51">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 19:45:26.388" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230309 19:45:26.388" endtime="20230309 19:45:26.388"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 19:45:26.389" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20230309 19:45:26.389" endtime="20230309 19:45:26.389"/>
</kw>
<status status="PASS" starttime="20230309 19:45:26.387" endtime="20230309 19:45:26.389"/>
</kw>
<msg timestamp="20230309 19:45:26.390" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20230309 19:45:26.386" endtime="20230309 19:45:26.390"/>
</kw>
<status status="PASS" starttime="20230309 19:45:26.385" endtime="20230309 19:45:26.390"/>
</kw>
<msg timestamp="20230309 19:45:26.390" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20230309 19:45:26.384" endtime="20230309 19:45:26.390"/>
</kw>
<msg timestamp="20230309 19:45:26.391" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20230309 19:45:26.383" endtime="20230309 19:45:26.391"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:45:26.400" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 19:45:29.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 19:45:29.651" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 19:45:26.393" endtime="20230309 19:45:29.651"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 19:45:29.652" level="INFO"/>
<status status="PASS" starttime="20230309 19:45:29.651" endtime="20230309 19:45:29.653"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 19:45:29.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 19:45:29.653" endtime="20230309 19:45:29.654"/>
</kw>
<status status="PASS" starttime="20230309 19:45:26.392" endtime="20230309 19:45:29.654"/>
</kw>
<msg timestamp="20230309 19:45:29.654" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 19:45:26.392" endtime="20230309 19:45:29.655"/>
</kw>
<status status="PASS" starttime="20230309 19:45:26.391" endtime="20230309 19:45:29.655"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:45:29.660" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 19:45:32.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 19:45:32.456" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 19:45:29.657" endtime="20230309 19:45:32.456"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 19:45:32.457" level="INFO"/>
<status status="PASS" starttime="20230309 19:45:32.457" endtime="20230309 19:45:32.458"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 19:45:32.458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 19:45:32.458" endtime="20230309 19:45:32.458"/>
</kw>
<status status="PASS" starttime="20230309 19:45:29.657" endtime="20230309 19:45:32.459"/>
</kw>
<msg timestamp="20230309 19:45:32.459" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 19:45:29.656" endtime="20230309 19:45:32.459"/>
</kw>
<status status="PASS" starttime="20230309 19:45:29.655" endtime="20230309 19:45:32.459"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230309 19:45:26.382" endtime="20230309 19:45:32.460"/>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" starttime="20230309 19:44:44.176" endtime="20230309 19:45:32.461"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="257820"/>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite id="s1-s2-s1" name="hadoopfs-o3fs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s2-s1-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 19:52:12.057" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230309 19:52:12.057" endtime="20230309 19:52:12.057"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 19:52:12.058" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20230309 19:52:12.057" endtime="20230309 19:52:12.058"/>
</kw>
<status status="PASS" starttime="20230309 19:52:12.056" endtime="20230309 19:52:12.059"/>
</kw>
<msg timestamp="20230309 19:52:12.059" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20230309 19:52:12.055" endtime="20230309 19:52:12.059"/>
</kw>
<status status="PASS" starttime="20230309 19:52:12.055" endtime="20230309 19:52:12.059"/>
</kw>
<msg timestamp="20230309 19:52:12.059" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20230309 19:52:12.054" endtime="20230309 19:52:12.059"/>
</kw>
<msg timestamp="20230309 19:52:12.060" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20230309 19:52:12.052" endtime="20230309 19:52:12.060"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 19:52:12.061" level="INFO">${random} = 91423</msg>
<status status="PASS" starttime="20230309 19:52:12.060" endtime="20230309 19:52:12.061"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:52:12.068" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-91423 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 19:52:17.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 19:52:17.905" level="INFO">${output} = 2023-03-09 19:52:13 INFO  Configuration:3318 - Removed undeclared tags:
2023-03-09 19:52:15 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org....</msg>
<status status="PASS" starttime="20230309 19:52:12.062" endtime="20230309 19:52:17.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 19:52:17.907" level="INFO">2023-03-09 19:52:13 INFO  Configuration:3318 - Removed undeclared tags:
2023-03-09 19:52:15 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2023-03-09 19:52:15 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2023-03-09 19:52:15 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2023-03-09 19:52:15 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2023-03-09 19:52:15 INFO  Configuration:3318 - Removed undeclared tags:
2023-03-09 19:52:16 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230309 19:52:17.905" endtime="20230309 19:52:17.907"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 19:52:17.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230309 19:52:17.907" endtime="20230309 19:52:17.908"/>
</kw>
<status status="PASS" starttime="20230309 19:52:12.062" endtime="20230309 19:52:17.908"/>
</kw>
<msg timestamp="20230309 19:52:17.908" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 19:52:12.061" endtime="20230309 19:52:17.909"/>
</kw>
<msg timestamp="20230309 19:52:17.909" level="INFO">${result} = 2023-03-09 19:52:13 INFO  Configuration:3318 - Removed undeclared tags:
2023-03-09 19:52:15 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org....</msg>
<status status="PASS" starttime="20230309 19:52:12.061" endtime="20230309 19:52:17.909"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>multiple SLF4J bindings</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 19:52:17.909" endtime="20230309 19:52:17.910"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:52:17.914" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 19:52:20.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 19:52:20.814" level="INFO">${output} = 2023-03-09 19:52:19 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2023-03-09 19:51 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop had...</msg>
<status status="PASS" starttime="20230309 19:52:17.912" endtime="20230309 19:52:20.815"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 19:52:20.816" level="INFO">2023-03-09 19:52:19 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2023-03-09 19:51 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2023-03-09 19:52 o3fs://bucket1.volume1.om/ozone-91423
drwxrwxrwx   - hadoop hadoop          0 2023-03-09 19:52 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20230309 19:52:20.815" endtime="20230309 19:52:20.816"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 19:52:20.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230309 19:52:20.816" endtime="20230309 19:52:20.817"/>
</kw>
<status status="PASS" starttime="20230309 19:52:17.911" endtime="20230309 19:52:20.817"/>
</kw>
<msg timestamp="20230309 19:52:20.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 19:52:17.910" endtime="20230309 19:52:20.818"/>
</kw>
<msg timestamp="20230309 19:52:20.818" level="INFO">${result} = 2023-03-09 19:52:19 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2023-03-09 19:51 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop had...</msg>
<status status="PASS" starttime="20230309 19:52:17.910" endtime="20230309 19:52:20.818"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 19:52:20.818" endtime="20230309 19:52:20.819"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:52:20.824" level="INFO">Running command 'hdfs dfs -cat o3fs://bucket1.volume1.om//ozone-91423 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 19:52:25.727" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 19:52:25.727" level="INFO">${output} = 2023-03-09 19:52:22 INFO  Configuration:3318 - Removed undeclared tags:
2023-03-09 19:52:23 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org....</msg>
<status status="PASS" starttime="20230309 19:52:20.821" endtime="20230309 19:52:25.727"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 19:52:25.729" level="INFO">2023-03-09 19:52:22 INFO  Configuration:3318 - Removed undeclared tags:
2023-03-09 19:52:23 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2023-03-09 19:52:23 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2023-03-09 19:52:23 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2023-03-09 19:52:23 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
This product includes software developed by The Apache Software
Foundation (http://www.apache.org/).

The binary distribution of this product bundles binaries of
org.iq80.leveldb:leveldb-api (https://github.com/dain/leveldb), which has the
following notices:
* Copyright 2011 Dain Sundstrom &lt;dain@iq80.com&gt;
* Copyright 2011 FuseSource Corp. http://fusesource.com

The binary distribution of this product bundles binaries of
AWS SDK for Java - Bundle 1.11.271,
AWS Java SDK for AWS KMS 1.11.271,
AWS Java SDK for Amazon S3 1.11.271,
AWS Java SDK for AWS STS 1.11.271,
JMES Path Query library 1.0,
which has the following notices:
 * This software includes third party software subject to the following
 copyrights: - XML parsing and utility functions from JetS3t - Copyright
 2006-2009 James Murty. - JSON parsing and utility functions from JSON.org -
 Copyright 2002 JSON.org. - PKCS#1 PEM encoded private key parsing and utility
 functions from oauth.googlecode.com - Copyright 1998-2010 AOL Inc.

The binary distribution of this product bundles binaries of
Gson 2.2.4,
which has the following notices:

                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * http://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'ArrayDeque', written by Josh
Bloch of Google, Inc:

  * LICENSE:
    * license/LICENSE.deque.txt (Public Domain)

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified version of Roland Kuhn's ASL2
AbstractNodeQueue, which is based on Dmitriy Vyukov's non-intrusive MPSC queue.
It can be obtained at:

  * LICENSE:
    * license/LICENSE.abstractnodequeue.txt (Public Domain)
  * HOMEPAGE:
    * https://github.com/akka/akka/blob/wip-2.2.3-for-scala-2.11/akka-actor/src/main/java/akka/dispatch/AbstractNodeQueue.java

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/libdivsufsort/

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/protobuf/

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/snappy/

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (GNU LGPL 2.1)
  * HOMEPAGE:
    * http://www.jboss.org/jbossmarshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://code.google.com/p/caliper/

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/

This product contains a modified portion of 'JDOM 1.1', which can be obtained at:

  * LICENSE:
    * https://github.com/hunterhacker/jdom/blob/jdom-1.1/core/LICENSE.txt
  * HOMEPAGE:
    * http://www.jdom.org/

The binary distribution of this product bundles binaries of
Commons Codec 1.4,
which has the following notices:
 * src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.javacontains test data from http://aspell.net/test/orig/batch0.tab.Copyright (C) 2002 Kevin Atkinson (kevina@gnu.org)
  ===============================================================================
  The content of package org.apache.commons.codec.language.bm has been translated
  from the original php source code available at http://stevemorse.org/phoneticinfo.htm
  with permission from the original authors.
  Original source copyright:Copyright (c) 2008 Alexander Beider &amp; Stephen P. Morse.

The binary distribution of this product bundles binaries of
Commons Lang 2.6,
which has the following notices:
 * This product includes software from the Spring Framework,under the Apache License 2.0 (see: StringUtils.containsWhitespace())

The binary distribution of this product bundles binaries of
Apache Log4j 1.2.17,
which has the following notices:
 * ResolverUtil.java
    Copyright 2005-2006 Tim Fennell
  Dumbster SMTP test server
    Copyright 2004 Jason Paul Kitchen
  TypeUtil.java
    Copyright 2002-2012 Ramnivas Laddad, Juergen Hoeller, Chris Beams

The binary distribution of this product bundles binaries of
"Java Concurrency in Practice" book annotations 1.0,
which has the following notices:
 * Copyright (c) 2005 Brian Goetz and Tim Peierls Released under the Creative
  Commons Attribution License (http://creativecommons.org/licenses/by/2.5)
  Official home: http://www.jcip.net Any republication or derived work
  distributed in source code form must include this copyright and license
  notice.

The binary distribution of this product bundles binaries of
Jetty :: Http Utility 9.3.19.,
Jetty :: IO Utility 9.3.19.,
Jetty :: Security 9.3.19.,
Jetty :: Server Core 9.3.19.,
Jetty :: Servlet Handling 9.3.19.,
Jetty :: Utilities 9.3.19.,
Jetty :: Utilities :: Ajax,
Jetty :: Webapp Application Support 9.3.19.,
Jetty :: XML utilities 9.3.19.,
which has the following notices:
 * ==============================================================
    Jetty Web Container
    Copyright 1995-2016 Mort Bay Consulting Pty Ltd.
   ==============================================================

   The Jetty Web Container is Copyright Mort Bay Consulting Pty Ltd
   unless otherwise noted.

   Jetty is dual licensed under both

     * The Apache 2.0 License
       http://www.apache.org/licenses/LICENSE-2.0.html

         and

     * The Eclipse Public 1.0 License
       http://www.eclipse.org/legal/epl-v10.html

   Jetty may be distributed under either license.

   ------
   Eclipse

   The following artifacts are EPL.
    * org.eclipse.jetty.orbit:org.eclipse.jdt.core

   The following artifacts are EPL and ASL2.
    * org.eclipse.jetty.orbit:javax.security.auth.message


   The following artifacts are EPL and CDDL 1.0.
    * org.eclipse.jetty.orbit:javax.mail.glassfish


   ------
   Oracle

   The following artifacts are CDDL + GPLv2 with classpath exception.
   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

    * javax.servlet:javax.servlet-api
    * javax.annotation:javax.annotation-api
    * javax.transaction:javax.transaction-api
    * javax.websocket:javax.websocket-api

   ------
   Oracle OpenJDK

   If ALPN is used to negotiate HTTP/2 connections, then the following
   artifacts may be included in the distribution or downloaded when ALPN
   module is selected.

    * java.sun.security.ssl

   These artifacts replace/modify OpenJDK classes.  The modififications
   are hosted at github and both modified and original are under GPL v2 with
   classpath exceptions.
   http://openjdk.java.net/legal/gplv2+ce.html


   ------
   OW2

   The following artifacts are licensed by the OW2 Foundation according to the
   terms of http://asm.ow2.org/license.html

   org.ow2.asm:asm-commons
   org.ow2.asm:asm


   ------
   Apache

   The following artifacts are ASL2 licensed.

   org.apache.taglibs:taglibs-standard-spec
   org.apache.taglibs:taglibs-standard-impl


   ------
   MortBay

   The following artifacts are ASL2 licensed.  Based on selected classes from
   following Apache Tomcat jars, all ASL2 licensed.

   org.mortbay.jasper:apache-jsp
     org.apache.tomcat:tomcat-jasper
     org.apache.tomcat:tomcat-juli
     org.apache.tomcat:tomcat-jsp-api
     org.apache.tomcat:tomcat-el-api
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-api
     org.apache.tomcat:tomcat-util-scan
     org.apache.tomcat:tomcat-util

   org.mortbay.jasper:apache-el
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-el-api


   ------
   Mortbay

   The following artifacts are CDDL + GPLv2 with classpath exception.

   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

   org.eclipse.jetty.toolchain:jetty-schemas

   ------
   Assorted

   The UnixCrypt.java code implements the one way cryptography used by
   Unix systems for simple password protection.  Copyright 1996 Aki Yoshida,
   modified April 2001  by Iris Van den Broeke, Daniel Deville.
   Permission to use, copy, modify and distribute UnixCrypt
   for non-commercial or commercial purposes and without fee is
   granted provided that the copyright notice appears in all copies./

The binary distribution of this product bundles binaries of
Snappy for Java 1.0.4.1,
which has the following notices:
 * This product includes software developed by Google
    Snappy: http://code.google.com/p/snappy/ (New BSD License)

   This product includes software developed by Apache
    PureJavaCrc32C from apache-hadoop-common http://hadoop.apache.org/
    (Apache 2.0 license)

   This library containd statically linked libstdc++. This inclusion is allowed by
   "GCC RUntime Library Exception"
   http://gcc.gnu.org/onlinedocs/libstdc++/manual/license.html

   == Contributors ==
     * Tatu Saloranta
       * Providing benchmark suite
     * Alec Wysoker
       * Performance and memory usage improvement

The binary distribution of this product bundles binaries of
Xerces2 Java Parser 2.9.1,
which has the following notices:
 * =========================================================================
   ==  NOTICE file corresponding to section 4(d) of the Apache License,   ==
   ==  Version 2.0, in this case for the Apache Xerces Java distribution. ==
   =========================================================================

   Apache Xerces Java
   Copyright 1999-2007 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   Portions of this software were originally based on the following:
     - software copyright (c) 1999, IBM Corporation., http://www.ibm.com.
     - software copyright (c) 1999, Sun Microsystems., http://www.sun.com.
     - voluntary contributions made by Paul Eng on behalf of the
       Apache Software Foundation that were originally developed at iClick, Inc.,
       software copyright (c) 1999.

The binary distribution of this product bundles binaries of
Logback Classic Module 1.1.2,
Logback Core Module 1.1.2,
which has the following notices:
 * Logback: the reliable, generic, fast and flexible logging framework.
   Copyright (C) 1999-2012, QOS.ch. All rights reserved.

The binary distribution of this product bundles binaries of
Apache HBase - Annotations 1.2.6,
Apache HBase - Client 1.2.6,
Apache HBase - Common 1.2.6,
Apache HBase - Hadoop Compatibility 1.2.6,
Apache HBase - Hadoop Two Compatibility 1.2.6,
Apache HBase - Prefix Tree 1.2.6,
Apache HBase - Procedure 1.2.6,
Apache HBase - Protocol 1.2.6,
Apache HBase - Server 1.2.6,
which has the following notices:
 * Apache HBase
   Copyright 2007-2015 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   --
   This product incorporates portions of the 'Hadoop' project

   Copyright 2007-2009 The Apache Software Foundation

   Licensed under the Apache License v2.0
   --
   Our Orca logo we got here: http://www.vectorfree.com/jumping-orca
   It is licensed Creative Commons Attribution 3.0.
   See https://creativecommons.org/licenses/by/3.0/us/
   We changed the logo by stripping the colored background, inverting
   it and then rotating it some.

   Later we found that vectorfree.com image is not properly licensed.
   The original is owned by vectorportal.com. The original was
   relicensed so we could use it as Creative Commons Attribution 3.0.
   The license is bundled with the download available here:
   http://www.vectorportal.com/subcategory/205/KILLER-WHALE-FREE-VECTOR.eps/ifile/9136/detailtest.asp
   --
   This product includes portions of the Bootstrap project v3.0.0

   Copyright 2013 Twitter, Inc.

   Licensed under the Apache License v2.0

   This product uses the Glyphicons Halflings icon set.

   http://glyphicons.com/

   Copyright Jan Kovařík

   Licensed under the Apache License v2.0 as a part of the Bootstrap project.

   --
   This product includes portions of the Guava project v14, specifically
   'hbase-common/src/main/java/org/apache/hadoop/hbase/io/LimitInputStream.java'

   Copyright (C) 2007 The Guava Authors

   Licensed under the Apache License, Version 2.0

The binary distribution of this product bundles binaries of
Phoenix Core 4.7.0,
which has the following notices:
   Apache Phoenix
   Copyright 2013-2016 The Apache Software Foundation

   This product includes software developed by The Apache Software
   Foundation (http://www.apache.org/).

   This also includes:

   The phoenix-spark module has been adapted from the phoenix-spark library
   distributed under the terms of the Apache 2 license. Original source copyright:
   Copyright 2014 Simply Measured, Inc.
   Copyright 2015 Interset Software Inc.

   The file bin/daemon.py is based on the file of the same name in python-daemon 2.0.5
   (https://pypi.python.org/pypi/python-daemon/). Original source copyright:
   # Copyright © 2008–2015 Ben Finney &lt;ben+python@benfinney.id.au&gt;
   # Copyright © 2007–2008 Robert Niederreiter, Jens Klein
   # Copyright © 2004–2005 Chad J. Schroeder
   # Copyright © 2003 Clark Evans
   # Copyright © 2002 Noah Spurrier
   # Copyright © 2001 Jürgen Hermann

The binary distribution of this product bundles binaries of
Plexus Cipher: encryption/decryption Component 1.4,
which has the following notices:
 * The code in this component contains a class - Base64 taken from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/Base64.java
   which is Apache license: http://www.apache.org/licenses/LICENSE-2.0

   The PBE key processing routine PBECipher.createCipher() is adopted from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/OpenSSL.java
    which is also Apache APL-2.0 license: http://www.apache.org/licenses/LICENSE-2.0

The binary distribution of this product bundles binaries of
software.amazon.ion:ion-java 1.0.1,
which has the following notices:
 * Amazon Ion Java Copyright 2007-2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.

The binary distribution of this product bundles binaries of
joda-time:joda-time:2.9.9
which has the following notices:
 * =============================================================================
   = NOTICE file corresponding to section 4d of the Apache License Version 2.0 =
   =============================================================================
   This product includes software developed by
   Joda.org (http://www.joda.org/).

The binary distribution of this product bundles binaries of
Ehcache 3.3.1,
which has the following notices:
 * Ehcache V3 Copyright 2014-2016 Terracotta, Inc.

The binary distribution of this product bundles binaries of
snakeyaml (https://bitbucket.org/asomov/snakeyaml),
which has the following notices:
 * Copyright (c) 2008, http://www.snakeyaml.org

The binary distribution of this product bundles binaries of
swagger-annotations (https://github.com/swagger-api/swagger-core),
which has the following notices:
 * Copyright 2016 SmartBear Software

The binary distribution of this product bundles binaries of
metrics-core 3.2.4
which has the following notices:
 * Copyright 2010-2013 Coda Hale and Yammer, Inc.

   This product includes software developed by Coda Hale and Yammer, Inc.

   This product includes code derived from the JSR-166 project (ThreadLocalRandom, Striped64,
   LongAdder), which was released with the following comments:

   Written by Doug Lea with assistance from members of JCP JSR-166
   Expert Group and released to the public domain, as explained at
   http://creativecommons.org/publicdomain/zero/1.0/</msg>
<status status="PASS" starttime="20230309 19:52:25.727" endtime="20230309 19:52:25.729"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 19:52:25.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230309 19:52:25.729" endtime="20230309 19:52:25.730"/>
</kw>
<status status="PASS" starttime="20230309 19:52:20.820" endtime="20230309 19:52:25.731"/>
</kw>
<msg timestamp="20230309 19:52:25.731" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 19:52:20.820" endtime="20230309 19:52:25.731"/>
</kw>
<msg timestamp="20230309 19:52:25.733" level="INFO">${result} = 2023-03-09 19:52:22 INFO  Configuration:3318 - Removed undeclared tags:
2023-03-09 19:52:23 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org....</msg>
<status status="PASS" starttime="20230309 19:52:20.819" endtime="20230309 19:52:25.733"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 19:52:25.733" endtime="20230309 19:52:25.733"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 19:52:12.051" endtime="20230309 19:52:25.734"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20230309 19:52:11.975" endtime="20230309 19:52:25.735"/>
</suite>
<suite id="s1-s2-s2" name="mapreduce-o3fs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s2-s2-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:52:31.939" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 19:52:31.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 19:52:31.944" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20230309 19:52:31.932" endtime="20230309 19:52:31.944"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 19:52:31.945" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20230309 19:52:31.944" endtime="20230309 19:52:31.945"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 19:52:31.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230309 19:52:31.945" endtime="20230309 19:52:31.946"/>
</kw>
<status status="PASS" starttime="20230309 19:52:31.931" endtime="20230309 19:52:31.947"/>
</kw>
<msg timestamp="20230309 19:52:31.947" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 19:52:31.931" endtime="20230309 19:52:31.947"/>
</kw>
<msg timestamp="20230309 19:52:31.947" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20230309 19:52:31.930" endtime="20230309 19:52:31.947"/>
</kw>
<msg timestamp="20230309 19:52:31.947" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20230309 19:52:31.929" endtime="20230309 19:52:31.947"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 19:52:31.954" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230309 19:52:31.953" endtime="20230309 19:52:31.954"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 19:52:31.954" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20230309 19:52:31.954" endtime="20230309 19:52:31.954"/>
</kw>
<status status="PASS" starttime="20230309 19:52:31.952" endtime="20230309 19:52:31.955"/>
</kw>
<msg timestamp="20230309 19:52:31.955" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20230309 19:52:31.952" endtime="20230309 19:52:31.955"/>
</kw>
<status status="PASS" starttime="20230309 19:52:31.951" endtime="20230309 19:52:31.955"/>
</kw>
<msg timestamp="20230309 19:52:31.955" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20230309 19:52:31.950" endtime="20230309 19:52:31.955"/>
</kw>
<msg timestamp="20230309 19:52:31.955" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20230309 19:52:31.948" endtime="20230309 19:52:31.955"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:52:31.959" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 19:53:24.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 19:53:24.403" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2023-03-09 19:52:33 INFO  Configuration:3318 - Removed undeclared tags:
2023-03-09 19:52:34 INFO  FluentPropertyBeanIntrospector:147 - Error when creating Prope...</msg>
<status status="PASS" starttime="20230309 19:52:31.957" endtime="20230309 19:53:24.403"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 19:53:24.404" level="INFO">Number of Maps  = 3
Samples per Map = 3
2023-03-09 19:52:33 INFO  Configuration:3318 - Removed undeclared tags:
2023-03-09 19:52:34 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2023-03-09 19:52:34 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2023-03-09 19:52:34 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2023-03-09 19:52:34 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2023-03-09 19:52:34 INFO  Configuration:3318 - Removed undeclared tags:
2023-03-09 19:52:35 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2023-03-09 19:52:36 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.19.0.2:8032
2023-03-09 19:52:37 INFO  Configuration:3318 - Removed undeclared tags:
2023-03-09 19:52:37 INFO  Configuration:3318 - Removed undeclared tags:
2023-03-09 19:52:37 INFO  FileInputFormat:292 - Total input files to process : 3
2023-03-09 19:52:37 INFO  JobSubmitter:202 - number of splits:3
2023-03-09 19:52:38 INFO  JobSubmitter:298 - Submitting tokens for job: job_1678391422769_0001
2023-03-09 19:52:38 INFO  JobSubmitter:299 - Executing with tokens: []
2023-03-09 19:52:38 INFO  Configuration:3318 - Removed undeclared tags:
2023-03-09 19:52:38 INFO  Configuration:3318 - Removed undeclared tags:
2023-03-09 19:52:38 INFO  Configuration:2752 - resource-types.xml not found
2023-03-09 19:52:38 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2023-03-09 19:52:38 INFO  YarnClientImpl:324 - Submitted application application_1678391422769_0001
2023-03-09 19:52:39 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1678391422769_0001/
2023-03-09 19:52:39 INFO  Job:1619 - Running job: job_1678391422769_0001
2023-03-09 19:52:52 INFO  Job:1640 - Job job_1678391422769_0001 running in uber mode : false
2023-03-09 19:52:52 INFO  Job:1647 -  map 0% reduce 0%
2023-03-09 19:53:01 INFO  Job:1647 -  map 33% reduce 0%
2023-03-09 19:53:08 INFO  Job:1647 -  map 67% reduce 0%
2023-03-09 19:53:16 INFO  Job:1647 -  map 100% reduce 0%
2023-03-09 19:53:22 INFO  Job:1647 -  map 100% reduce 100%
2023-03-09 19:53:23 INFO  Job:1658 - Job job_1678391422769_0001 completed successfully
2023-03-09 19:53:23 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=867641
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=63128
		Total time spent by all reduces in occupied slots (ms)=22924
		Total time spent by all map tasks (ms)=15782
		Total time spent by all reduce tasks (ms)=5731
		Total vcore-milliseconds taken by all map tasks=15782
		Total vcore-milliseconds taken by all reduce tasks=5731
		Total megabyte-milliseconds taken by all map tasks=64643072
		Total megabyte-milliseconds taken by all reduce tasks=23474176
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=875
		CPU time spent (ms)=9560
		Physical memory (bytes) snapshot=1665769472
		Virtual memory (bytes) snapshot=15826100224
		Total committed heap usage (bytes)=1495269376
		Peak Map Physical memory (bytes)=444891136
		Peak Map Virtual memory (bytes)=3954421760
		Peak Reduce Physical memory (bytes)=358649856
		Peak Reduce Virtual memory (bytes)=3964301312
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 46.994 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20230309 19:53:24.403" endtime="20230309 19:53:24.405"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 19:53:24.406" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230309 19:53:24.405" endtime="20230309 19:53:24.406"/>
</kw>
<status status="PASS" starttime="20230309 19:52:31.957" endtime="20230309 19:53:24.406"/>
</kw>
<msg timestamp="20230309 19:53:24.406" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 19:52:31.956" endtime="20230309 19:53:24.406"/>
</kw>
<msg timestamp="20230309 19:53:24.407" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2023-03-09 19:52:33 INFO  Configuration:3318 - Removed undeclared tags:
2023-03-09 19:52:34 INFO  FluentPropertyBeanIntrospector:147 - Error when creating Prope...</msg>
<status status="PASS" starttime="20230309 19:52:31.956" endtime="20230309 19:53:24.407"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 19:53:24.407" endtime="20230309 19:53:24.408"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>multiple SLF4J bindings</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 19:53:24.408" endtime="20230309 19:53:24.408"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230309 19:52:31.928" endtime="20230309 19:53:24.409"/>
</test>
<test id="s1-s2-s2-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:53:24.415" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 19:53:24.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 19:53:24.422" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20230309 19:53:24.413" endtime="20230309 19:53:24.422"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 19:53:24.424" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20230309 19:53:24.423" endtime="20230309 19:53:24.425"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 19:53:24.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230309 19:53:24.425" endtime="20230309 19:53:24.426"/>
</kw>
<status status="PASS" starttime="20230309 19:53:24.412" endtime="20230309 19:53:24.426"/>
</kw>
<msg timestamp="20230309 19:53:24.426" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 19:53:24.412" endtime="20230309 19:53:24.426"/>
</kw>
<msg timestamp="20230309 19:53:24.426" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20230309 19:53:24.411" endtime="20230309 19:53:24.426"/>
</kw>
<msg timestamp="20230309 19:53:24.427" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20230309 19:53:24.410" endtime="20230309 19:53:24.427"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 19:53:24.428" level="INFO">${random} = ZmqkJcwL</msg>
<status status="PASS" starttime="20230309 19:53:24.427" endtime="20230309 19:53:24.428"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 19:53:24.433" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230309 19:53:24.432" endtime="20230309 19:53:24.433"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 19:53:24.433" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20230309 19:53:24.433" endtime="20230309 19:53:24.433"/>
</kw>
<status status="PASS" starttime="20230309 19:53:24.431" endtime="20230309 19:53:24.434"/>
</kw>
<msg timestamp="20230309 19:53:24.434" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20230309 19:53:24.431" endtime="20230309 19:53:24.434"/>
</kw>
<status status="PASS" starttime="20230309 19:53:24.430" endtime="20230309 19:53:24.434"/>
</kw>
<msg timestamp="20230309 19:53:24.435" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20230309 19:53:24.429" endtime="20230309 19:53:24.435"/>
</kw>
<msg timestamp="20230309 19:53:24.435" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20230309 19:53:24.428" endtime="20230309 19:53:24.435"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 19:53:24.439" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230309 19:53:24.439" endtime="20230309 19:53:24.439"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 19:53:24.440" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20230309 19:53:24.440" endtime="20230309 19:53:24.440"/>
</kw>
<status status="PASS" starttime="20230309 19:53:24.438" endtime="20230309 19:53:24.441"/>
</kw>
<msg timestamp="20230309 19:53:24.441" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20230309 19:53:24.438" endtime="20230309 19:53:24.441"/>
</kw>
<status status="PASS" starttime="20230309 19:53:24.437" endtime="20230309 19:53:24.441"/>
</kw>
<msg timestamp="20230309 19:53:24.441" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20230309 19:53:24.436" endtime="20230309 19:53:24.441"/>
</kw>
<msg timestamp="20230309 19:53:24.442" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20230309 19:53:24.435" endtime="20230309 19:53:24.442"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 19:53:24.452" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230309 19:53:24.451" endtime="20230309 19:53:24.452"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 19:53:24.453" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20230309 19:53:24.452" endtime="20230309 19:53:24.453"/>
</kw>
<status status="PASS" starttime="20230309 19:53:24.451" endtime="20230309 19:53:24.453"/>
</kw>
<msg timestamp="20230309 19:53:24.453" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20230309 19:53:24.450" endtime="20230309 19:53:24.453"/>
</kw>
<status status="PASS" starttime="20230309 19:53:24.443" endtime="20230309 19:53:24.454"/>
</kw>
<msg timestamp="20230309 19:53:24.454" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-ZmqkJcwL.txt</msg>
<status status="PASS" starttime="20230309 19:53:24.442" endtime="20230309 19:53:24.454"/>
</kw>
<msg timestamp="20230309 19:53:24.454" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-ZmqkJcwL.txt</msg>
<status status="PASS" starttime="20230309 19:53:24.442" endtime="20230309 19:53:24.454"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:53:24.459" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-ZmqkJcwL.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 19:54:12.182" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 19:54:12.182" level="INFO">${output} = 2023-03-09 19:53:25 INFO  Configuration:3318 - Removed undeclared tags:
2023-03-09 19:53:27 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.19.0.2:8032
2023-03-09 19:53:27 INFO  Configurat...</msg>
<status status="PASS" starttime="20230309 19:53:24.456" endtime="20230309 19:54:12.182"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 19:54:12.183" level="INFO">2023-03-09 19:53:25 INFO  Configuration:3318 - Removed undeclared tags:
2023-03-09 19:53:27 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.19.0.2:8032
2023-03-09 19:53:27 INFO  Configuration:3318 - Removed undeclared tags:
2023-03-09 19:53:27 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2023-03-09 19:53:27 INFO  Configuration:3318 - Removed undeclared tags:
2023-03-09 19:53:27 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2023-03-09 19:53:27 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2023-03-09 19:53:28 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2023-03-09 19:53:28 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2023-03-09 19:53:28 INFO  Configuration:3318 - Removed undeclared tags:
2023-03-09 19:53:28 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-03-09 19:53:30 INFO  FileInputFormat:292 - Total input files to process : 3
2023-03-09 19:53:30 INFO  JobSubmitter:202 - number of splits:3
2023-03-09 19:53:30 INFO  JobSubmitter:298 - Submitting tokens for job: job_1678391422769_0002
2023-03-09 19:53:30 INFO  JobSubmitter:299 - Executing with tokens: []
2023-03-09 19:53:30 INFO  Configuration:3318 - Removed undeclared tags:
2023-03-09 19:53:30 INFO  Configuration:3318 - Removed undeclared tags:
2023-03-09 19:53:31 INFO  Configuration:2752 - resource-types.xml not found
2023-03-09 19:53:31 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2023-03-09 19:53:31 INFO  YarnClientImpl:324 - Submitted application application_1678391422769_0002
2023-03-09 19:53:31 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1678391422769_0002/
2023-03-09 19:53:31 INFO  Job:1619 - Running job: job_1678391422769_0002
2023-03-09 19:53:41 INFO  Job:1640 - Job job_1678391422769_0002 running in uber mode : false
2023-03-09 19:53:41 INFO  Job:1647 -  map 0% reduce 0%
2023-03-09 19:53:49 INFO  Job:1647 -  map 33% reduce 0%
2023-03-09 19:53:56 INFO  Job:1647 -  map 67% reduce 0%
2023-03-09 19:54:03 INFO  Job:1647 -  map 100% reduce 0%
2023-03-09 19:54:10 INFO  Job:1647 -  map 100% reduce 100%
2023-03-09 19:54:11 INFO  Job:1658 - Job job_1678391422769_0002 completed successfully
2023-03-09 19:54:11 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=36183
		FILE: Number of bytes written=938507
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=43868
		O3FS: Number of bytes written=25925
		O3FS: Number of read operations=14
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=57900
		Total time spent by all reduces in occupied slots (ms)=25204
		Total time spent by all map tasks (ms)=14475
		Total time spent by all reduce tasks (ms)=6301
		Total vcore-milliseconds taken by all map tasks=14475
		Total vcore-milliseconds taken by all reduce tasks=6301
		Total megabyte-milliseconds taken by all map tasks=59289600
		Total megabyte-milliseconds taken by all reduce tasks=25808896
	Map-Reduce Framework
		Map input records=1170
		Map output records=4644
		Map output bytes=59407
		Map output materialized bytes=36195
		Input split bytes=303
		Combine input records=4644
		Combine output records=1915
		Reduce input groups=1652
		Reduce shuffle bytes=36195
		Reduce input records=1915
		Reduce output records=1652
		Spilled Records=3830
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=779
		CPU time spent (ms)=10230
		Physical memory (bytes) snapshot=1668997120
		Virtual memory (bytes) snapshot=15839322112
		Total committed heap usage (bytes)=1411383296
		Peak Map Physical memory (bytes)=445014016
		Peak Map Virtual memory (bytes)=3962126336
		Peak Reduce Physical memory (bytes)=352784384
		Peak Reduce Virtual memory (bytes)=3979665408
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=43565
	File Output Format Counters 
		Bytes Written=25925</msg>
<status status="PASS" starttime="20230309 19:54:12.183" endtime="20230309 19:54:12.184"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 19:54:12.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230309 19:54:12.184" endtime="20230309 19:54:12.185"/>
</kw>
<status status="PASS" starttime="20230309 19:53:24.456" endtime="20230309 19:54:12.185"/>
</kw>
<msg timestamp="20230309 19:54:12.185" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 19:53:24.455" endtime="20230309 19:54:12.185"/>
</kw>
<msg timestamp="20230309 19:54:12.186" level="INFO">${output} = 2023-03-09 19:53:25 INFO  Configuration:3318 - Removed undeclared tags:
2023-03-09 19:53:27 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.19.0.2:8032
2023-03-09 19:53:27 INFO  Configurat...</msg>
<status status="PASS" starttime="20230309 19:53:24.454" endtime="20230309 19:54:12.186"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 19:54:12.186" endtime="20230309 19:54:12.187"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 19:54:12.187" endtime="20230309 19:54:12.188"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230309 19:53:24.409" endtime="20230309 19:54:12.188"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20230309 19:52:31.858" endtime="20230309 19:54:12.190"/>
</suite>
<suite id="s1-s2-s3" name="hadoopfs-ofs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 19:54:18.547" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20230309 19:54:18.547" endtime="20230309 19:54:18.547"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 19:54:18.548" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20230309 19:54:18.548" endtime="20230309 19:54:18.548"/>
</kw>
<status status="PASS" starttime="20230309 19:54:18.546" endtime="20230309 19:54:18.548"/>
</kw>
<msg timestamp="20230309 19:54:18.549" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20230309 19:54:18.546" endtime="20230309 19:54:18.549"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230309 19:54:18.549" endtime="20230309 19:54:18.550"/>
</kw>
<msg timestamp="20230309 19:54:18.550" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20230309 19:54:18.549" endtime="20230309 19:54:18.550"/>
</kw>
<status status="PASS" starttime="20230309 19:54:18.545" endtime="20230309 19:54:18.550"/>
</kw>
<msg timestamp="20230309 19:54:18.550" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20230309 19:54:18.544" endtime="20230309 19:54:18.550"/>
</kw>
<msg timestamp="20230309 19:54:18.551" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20230309 19:54:18.543" endtime="20230309 19:54:18.551"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 19:54:18.551" level="INFO">${random} = 05143</msg>
<status status="PASS" starttime="20230309 19:54:18.551" endtime="20230309 19:54:18.551"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:54:18.559" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-05143 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 19:54:23.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 19:54:23.599" level="INFO">${output} = 2023-03-09 19:54:19 INFO  Configuration:3318 - Removed undeclared tags:
2023-03-09 19:54:21 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org....</msg>
<status status="PASS" starttime="20230309 19:54:18.553" endtime="20230309 19:54:23.599"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 19:54:23.601" level="INFO">2023-03-09 19:54:19 INFO  Configuration:3318 - Removed undeclared tags:
2023-03-09 19:54:21 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2023-03-09 19:54:21 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2023-03-09 19:54:21 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2023-03-09 19:54:21 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2023-03-09 19:54:21 INFO  Configuration:3318 - Removed undeclared tags:
2023-03-09 19:54:22 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230309 19:54:23.600" endtime="20230309 19:54:23.601"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 19:54:23.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230309 19:54:23.601" endtime="20230309 19:54:23.602"/>
</kw>
<status status="PASS" starttime="20230309 19:54:18.553" endtime="20230309 19:54:23.602"/>
</kw>
<msg timestamp="20230309 19:54:23.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 19:54:18.552" endtime="20230309 19:54:23.602"/>
</kw>
<msg timestamp="20230309 19:54:23.603" level="INFO">${result} = 2023-03-09 19:54:19 INFO  Configuration:3318 - Removed undeclared tags:
2023-03-09 19:54:21 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org....</msg>
<status status="PASS" starttime="20230309 19:54:18.552" endtime="20230309 19:54:23.603"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>multiple SLF4J bindings</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 19:54:23.603" endtime="20230309 19:54:23.603"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:54:23.608" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 19:54:26.255" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 19:54:26.255" level="INFO">${output} = 2023-03-09 19:54:24 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2023-03-09 19:51 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hado...</msg>
<status status="PASS" starttime="20230309 19:54:23.606" endtime="20230309 19:54:26.255"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 19:54:26.257" level="INFO">2023-03-09 19:54:24 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2023-03-09 19:51 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2023-03-09 19:54 ofs://om/volume1/bucket1/ozone-05143
-rw-rw-rw-   3 hadoop hadoop      21867 2023-03-09 19:52 ofs://om/volume1/bucket1/ozone-91423
drwxrwxrwx   - hadoop hadoop          0 2023-03-09 19:52 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2023-03-09 19:54 ofs://om/volume1/bucket1/wordcount-ZmqkJcwL.txt</msg>
<status status="PASS" starttime="20230309 19:54:26.256" endtime="20230309 19:54:26.257"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 19:54:26.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230309 19:54:26.257" endtime="20230309 19:54:26.258"/>
</kw>
<status status="PASS" starttime="20230309 19:54:23.605" endtime="20230309 19:54:26.258"/>
</kw>
<msg timestamp="20230309 19:54:26.258" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 19:54:23.605" endtime="20230309 19:54:26.258"/>
</kw>
<msg timestamp="20230309 19:54:26.259" level="INFO">${result} = 2023-03-09 19:54:24 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2023-03-09 19:51 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hado...</msg>
<status status="PASS" starttime="20230309 19:54:23.604" endtime="20230309 19:54:26.259"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 19:54:26.259" endtime="20230309 19:54:26.259"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:54:26.264" level="INFO">Running command 'hdfs dfs -cat ofs://om/volume1/bucket1/ozone-05143 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 19:54:31.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 19:54:31.198" level="INFO">${output} = 2023-03-09 19:54:27 INFO  Configuration:3318 - Removed undeclared tags:
2023-03-09 19:54:29 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org....</msg>
<status status="PASS" starttime="20230309 19:54:26.262" endtime="20230309 19:54:31.198"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 19:54:31.199" level="INFO">2023-03-09 19:54:27 INFO  Configuration:3318 - Removed undeclared tags:
2023-03-09 19:54:29 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2023-03-09 19:54:29 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2023-03-09 19:54:29 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2023-03-09 19:54:29 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
This product includes software developed by The Apache Software
Foundation (http://www.apache.org/).

The binary distribution of this product bundles binaries of
org.iq80.leveldb:leveldb-api (https://github.com/dain/leveldb), which has the
following notices:
* Copyright 2011 Dain Sundstrom &lt;dain@iq80.com&gt;
* Copyright 2011 FuseSource Corp. http://fusesource.com

The binary distribution of this product bundles binaries of
AWS SDK for Java - Bundle 1.11.271,
AWS Java SDK for AWS KMS 1.11.271,
AWS Java SDK for Amazon S3 1.11.271,
AWS Java SDK for AWS STS 1.11.271,
JMES Path Query library 1.0,
which has the following notices:
 * This software includes third party software subject to the following
 copyrights: - XML parsing and utility functions from JetS3t - Copyright
 2006-2009 James Murty. - JSON parsing and utility functions from JSON.org -
 Copyright 2002 JSON.org. - PKCS#1 PEM encoded private key parsing and utility
 functions from oauth.googlecode.com - Copyright 1998-2010 AOL Inc.

The binary distribution of this product bundles binaries of
Gson 2.2.4,
which has the following notices:

                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * http://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'ArrayDeque', written by Josh
Bloch of Google, Inc:

  * LICENSE:
    * license/LICENSE.deque.txt (Public Domain)

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified version of Roland Kuhn's ASL2
AbstractNodeQueue, which is based on Dmitriy Vyukov's non-intrusive MPSC queue.
It can be obtained at:

  * LICENSE:
    * license/LICENSE.abstractnodequeue.txt (Public Domain)
  * HOMEPAGE:
    * https://github.com/akka/akka/blob/wip-2.2.3-for-scala-2.11/akka-actor/src/main/java/akka/dispatch/AbstractNodeQueue.java

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/libdivsufsort/

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/protobuf/

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/snappy/

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (GNU LGPL 2.1)
  * HOMEPAGE:
    * http://www.jboss.org/jbossmarshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://code.google.com/p/caliper/

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/

This product contains a modified portion of 'JDOM 1.1', which can be obtained at:

  * LICENSE:
    * https://github.com/hunterhacker/jdom/blob/jdom-1.1/core/LICENSE.txt
  * HOMEPAGE:
    * http://www.jdom.org/

The binary distribution of this product bundles binaries of
Commons Codec 1.4,
which has the following notices:
 * src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.javacontains test data from http://aspell.net/test/orig/batch0.tab.Copyright (C) 2002 Kevin Atkinson (kevina@gnu.org)
  ===============================================================================
  The content of package org.apache.commons.codec.language.bm has been translated
  from the original php source code available at http://stevemorse.org/phoneticinfo.htm
  with permission from the original authors.
  Original source copyright:Copyright (c) 2008 Alexander Beider &amp; Stephen P. Morse.

The binary distribution of this product bundles binaries of
Commons Lang 2.6,
which has the following notices:
 * This product includes software from the Spring Framework,under the Apache License 2.0 (see: StringUtils.containsWhitespace())

The binary distribution of this product bundles binaries of
Apache Log4j 1.2.17,
which has the following notices:
 * ResolverUtil.java
    Copyright 2005-2006 Tim Fennell
  Dumbster SMTP test server
    Copyright 2004 Jason Paul Kitchen
  TypeUtil.java
    Copyright 2002-2012 Ramnivas Laddad, Juergen Hoeller, Chris Beams

The binary distribution of this product bundles binaries of
"Java Concurrency in Practice" book annotations 1.0,
which has the following notices:
 * Copyright (c) 2005 Brian Goetz and Tim Peierls Released under the Creative
  Commons Attribution License (http://creativecommons.org/licenses/by/2.5)
  Official home: http://www.jcip.net Any republication or derived work
  distributed in source code form must include this copyright and license
  notice.

The binary distribution of this product bundles binaries of
Jetty :: Http Utility 9.3.19.,
Jetty :: IO Utility 9.3.19.,
Jetty :: Security 9.3.19.,
Jetty :: Server Core 9.3.19.,
Jetty :: Servlet Handling 9.3.19.,
Jetty :: Utilities 9.3.19.,
Jetty :: Utilities :: Ajax,
Jetty :: Webapp Application Support 9.3.19.,
Jetty :: XML utilities 9.3.19.,
which has the following notices:
 * ==============================================================
    Jetty Web Container
    Copyright 1995-2016 Mort Bay Consulting Pty Ltd.
   ==============================================================

   The Jetty Web Container is Copyright Mort Bay Consulting Pty Ltd
   unless otherwise noted.

   Jetty is dual licensed under both

     * The Apache 2.0 License
       http://www.apache.org/licenses/LICENSE-2.0.html

         and

     * The Eclipse Public 1.0 License
       http://www.eclipse.org/legal/epl-v10.html

   Jetty may be distributed under either license.

   ------
   Eclipse

   The following artifacts are EPL.
    * org.eclipse.jetty.orbit:org.eclipse.jdt.core

   The following artifacts are EPL and ASL2.
    * org.eclipse.jetty.orbit:javax.security.auth.message


   The following artifacts are EPL and CDDL 1.0.
    * org.eclipse.jetty.orbit:javax.mail.glassfish


   ------
   Oracle

   The following artifacts are CDDL + GPLv2 with classpath exception.
   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

    * javax.servlet:javax.servlet-api
    * javax.annotation:javax.annotation-api
    * javax.transaction:javax.transaction-api
    * javax.websocket:javax.websocket-api

   ------
   Oracle OpenJDK

   If ALPN is used to negotiate HTTP/2 connections, then the following
   artifacts may be included in the distribution or downloaded when ALPN
   module is selected.

    * java.sun.security.ssl

   These artifacts replace/modify OpenJDK classes.  The modififications
   are hosted at github and both modified and original are under GPL v2 with
   classpath exceptions.
   http://openjdk.java.net/legal/gplv2+ce.html


   ------
   OW2

   The following artifacts are licensed by the OW2 Foundation according to the
   terms of http://asm.ow2.org/license.html

   org.ow2.asm:asm-commons
   org.ow2.asm:asm


   ------
   Apache

   The following artifacts are ASL2 licensed.

   org.apache.taglibs:taglibs-standard-spec
   org.apache.taglibs:taglibs-standard-impl


   ------
   MortBay

   The following artifacts are ASL2 licensed.  Based on selected classes from
   following Apache Tomcat jars, all ASL2 licensed.

   org.mortbay.jasper:apache-jsp
     org.apache.tomcat:tomcat-jasper
     org.apache.tomcat:tomcat-juli
     org.apache.tomcat:tomcat-jsp-api
     org.apache.tomcat:tomcat-el-api
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-api
     org.apache.tomcat:tomcat-util-scan
     org.apache.tomcat:tomcat-util

   org.mortbay.jasper:apache-el
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-el-api


   ------
   Mortbay

   The following artifacts are CDDL + GPLv2 with classpath exception.

   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

   org.eclipse.jetty.toolchain:jetty-schemas

   ------
   Assorted

   The UnixCrypt.java code implements the one way cryptography used by
   Unix systems for simple password protection.  Copyright 1996 Aki Yoshida,
   modified April 2001  by Iris Van den Broeke, Daniel Deville.
   Permission to use, copy, modify and distribute UnixCrypt
   for non-commercial or commercial purposes and without fee is
   granted provided that the copyright notice appears in all copies./

The binary distribution of this product bundles binaries of
Snappy for Java 1.0.4.1,
which has the following notices:
 * This product includes software developed by Google
    Snappy: http://code.google.com/p/snappy/ (New BSD License)

   This product includes software developed by Apache
    PureJavaCrc32C from apache-hadoop-common http://hadoop.apache.org/
    (Apache 2.0 license)

   This library containd statically linked libstdc++. This inclusion is allowed by
   "GCC RUntime Library Exception"
   http://gcc.gnu.org/onlinedocs/libstdc++/manual/license.html

   == Contributors ==
     * Tatu Saloranta
       * Providing benchmark suite
     * Alec Wysoker
       * Performance and memory usage improvement

The binary distribution of this product bundles binaries of
Xerces2 Java Parser 2.9.1,
which has the following notices:
 * =========================================================================
   ==  NOTICE file corresponding to section 4(d) of the Apache License,   ==
   ==  Version 2.0, in this case for the Apache Xerces Java distribution. ==
   =========================================================================

   Apache Xerces Java
   Copyright 1999-2007 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   Portions of this software were originally based on the following:
     - software copyright (c) 1999, IBM Corporation., http://www.ibm.com.
     - software copyright (c) 1999, Sun Microsystems., http://www.sun.com.
     - voluntary contributions made by Paul Eng on behalf of the
       Apache Software Foundation that were originally developed at iClick, Inc.,
       software copyright (c) 1999.

The binary distribution of this product bundles binaries of
Logback Classic Module 1.1.2,
Logback Core Module 1.1.2,
which has the following notices:
 * Logback: the reliable, generic, fast and flexible logging framework.
   Copyright (C) 1999-2012, QOS.ch. All rights reserved.

The binary distribution of this product bundles binaries of
Apache HBase - Annotations 1.2.6,
Apache HBase - Client 1.2.6,
Apache HBase - Common 1.2.6,
Apache HBase - Hadoop Compatibility 1.2.6,
Apache HBase - Hadoop Two Compatibility 1.2.6,
Apache HBase - Prefix Tree 1.2.6,
Apache HBase - Procedure 1.2.6,
Apache HBase - Protocol 1.2.6,
Apache HBase - Server 1.2.6,
which has the following notices:
 * Apache HBase
   Copyright 2007-2015 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   --
   This product incorporates portions of the 'Hadoop' project

   Copyright 2007-2009 The Apache Software Foundation

   Licensed under the Apache License v2.0
   --
   Our Orca logo we got here: http://www.vectorfree.com/jumping-orca
   It is licensed Creative Commons Attribution 3.0.
   See https://creativecommons.org/licenses/by/3.0/us/
   We changed the logo by stripping the colored background, inverting
   it and then rotating it some.

   Later we found that vectorfree.com image is not properly licensed.
   The original is owned by vectorportal.com. The original was
   relicensed so we could use it as Creative Commons Attribution 3.0.
   The license is bundled with the download available here:
   http://www.vectorportal.com/subcategory/205/KILLER-WHALE-FREE-VECTOR.eps/ifile/9136/detailtest.asp
   --
   This product includes portions of the Bootstrap project v3.0.0

   Copyright 2013 Twitter, Inc.

   Licensed under the Apache License v2.0

   This product uses the Glyphicons Halflings icon set.

   http://glyphicons.com/

   Copyright Jan Kovařík

   Licensed under the Apache License v2.0 as a part of the Bootstrap project.

   --
   This product includes portions of the Guava project v14, specifically
   'hbase-common/src/main/java/org/apache/hadoop/hbase/io/LimitInputStream.java'

   Copyright (C) 2007 The Guava Authors

   Licensed under the Apache License, Version 2.0

The binary distribution of this product bundles binaries of
Phoenix Core 4.7.0,
which has the following notices:
   Apache Phoenix
   Copyright 2013-2016 The Apache Software Foundation

   This product includes software developed by The Apache Software
   Foundation (http://www.apache.org/).

   This also includes:

   The phoenix-spark module has been adapted from the phoenix-spark library
   distributed under the terms of the Apache 2 license. Original source copyright:
   Copyright 2014 Simply Measured, Inc.
   Copyright 2015 Interset Software Inc.

   The file bin/daemon.py is based on the file of the same name in python-daemon 2.0.5
   (https://pypi.python.org/pypi/python-daemon/). Original source copyright:
   # Copyright © 2008–2015 Ben Finney &lt;ben+python@benfinney.id.au&gt;
   # Copyright © 2007–2008 Robert Niederreiter, Jens Klein
   # Copyright © 2004–2005 Chad J. Schroeder
   # Copyright © 2003 Clark Evans
   # Copyright © 2002 Noah Spurrier
   # Copyright © 2001 Jürgen Hermann

The binary distribution of this product bundles binaries of
Plexus Cipher: encryption/decryption Component 1.4,
which has the following notices:
 * The code in this component contains a class - Base64 taken from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/Base64.java
   which is Apache license: http://www.apache.org/licenses/LICENSE-2.0

   The PBE key processing routine PBECipher.createCipher() is adopted from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/OpenSSL.java
    which is also Apache APL-2.0 license: http://www.apache.org/licenses/LICENSE-2.0

The binary distribution of this product bundles binaries of
software.amazon.ion:ion-java 1.0.1,
which has the following notices:
 * Amazon Ion Java Copyright 2007-2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.

The binary distribution of this product bundles binaries of
joda-time:joda-time:2.9.9
which has the following notices:
 * =============================================================================
   = NOTICE file corresponding to section 4d of the Apache License Version 2.0 =
   =============================================================================
   This product includes software developed by
   Joda.org (http://www.joda.org/).

The binary distribution of this product bundles binaries of
Ehcache 3.3.1,
which has the following notices:
 * Ehcache V3 Copyright 2014-2016 Terracotta, Inc.

The binary distribution of this product bundles binaries of
snakeyaml (https://bitbucket.org/asomov/snakeyaml),
which has the following notices:
 * Copyright (c) 2008, http://www.snakeyaml.org

The binary distribution of this product bundles binaries of
swagger-annotations (https://github.com/swagger-api/swagger-core),
which has the following notices:
 * Copyright 2016 SmartBear Software

The binary distribution of this product bundles binaries of
metrics-core 3.2.4
which has the following notices:
 * Copyright 2010-2013 Coda Hale and Yammer, Inc.

   This product includes software developed by Coda Hale and Yammer, Inc.

   This product includes code derived from the JSR-166 project (ThreadLocalRandom, Striped64,
   LongAdder), which was released with the following comments:

   Written by Doug Lea with assistance from members of JCP JSR-166
   Expert Group and released to the public domain, as explained at
   http://creativecommons.org/publicdomain/zero/1.0/</msg>
<status status="PASS" starttime="20230309 19:54:31.198" endtime="20230309 19:54:31.200"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 19:54:31.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230309 19:54:31.200" endtime="20230309 19:54:31.201"/>
</kw>
<status status="PASS" starttime="20230309 19:54:26.261" endtime="20230309 19:54:31.201"/>
</kw>
<msg timestamp="20230309 19:54:31.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 19:54:26.260" endtime="20230309 19:54:31.202"/>
</kw>
<msg timestamp="20230309 19:54:31.203" level="INFO">${result} = 2023-03-09 19:54:27 INFO  Configuration:3318 - Removed undeclared tags:
2023-03-09 19:54:29 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org....</msg>
<status status="PASS" starttime="20230309 19:54:26.260" endtime="20230309 19:54:31.204"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 19:54:31.204" endtime="20230309 19:54:31.204"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 19:54:18.541" endtime="20230309 19:54:31.205"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20230309 19:54:18.467" endtime="20230309 19:54:31.206"/>
</suite>
<suite id="s1-s2-s4" name="mapreduce-ofs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:54:37.329" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 19:54:37.336" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 19:54:37.337" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20230309 19:54:37.325" endtime="20230309 19:54:37.337"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 19:54:37.338" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20230309 19:54:37.337" endtime="20230309 19:54:37.338"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 19:54:37.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230309 19:54:37.339" endtime="20230309 19:54:37.340"/>
</kw>
<status status="PASS" starttime="20230309 19:54:37.324" endtime="20230309 19:54:37.340"/>
</kw>
<msg timestamp="20230309 19:54:37.340" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 19:54:37.324" endtime="20230309 19:54:37.340"/>
</kw>
<msg timestamp="20230309 19:54:37.341" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20230309 19:54:37.323" endtime="20230309 19:54:37.341"/>
</kw>
<msg timestamp="20230309 19:54:37.341" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20230309 19:54:37.323" endtime="20230309 19:54:37.341"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 19:54:37.348" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20230309 19:54:37.347" endtime="20230309 19:54:37.348"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 19:54:37.349" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20230309 19:54:37.348" endtime="20230309 19:54:37.349"/>
</kw>
<status status="PASS" starttime="20230309 19:54:37.346" endtime="20230309 19:54:37.349"/>
</kw>
<msg timestamp="20230309 19:54:37.349" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20230309 19:54:37.346" endtime="20230309 19:54:37.349"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230309 19:54:37.350" endtime="20230309 19:54:37.350"/>
</kw>
<msg timestamp="20230309 19:54:37.351" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20230309 19:54:37.349" endtime="20230309 19:54:37.351"/>
</kw>
<status status="PASS" starttime="20230309 19:54:37.345" endtime="20230309 19:54:37.351"/>
</kw>
<msg timestamp="20230309 19:54:37.351" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20230309 19:54:37.344" endtime="20230309 19:54:37.351"/>
</kw>
<msg timestamp="20230309 19:54:37.351" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20230309 19:54:37.342" endtime="20230309 19:54:37.351"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:54:37.355" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 19:55:23.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 19:55:23.353" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2023-03-09 19:54:38 INFO  Configuration:3318 - Removed undeclared tags:
2023-03-09 19:54:40 INFO  FluentPropertyBeanIntrospector:147 - Error when creating Prope...</msg>
<status status="PASS" starttime="20230309 19:54:37.353" endtime="20230309 19:55:23.354"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 19:55:23.355" level="INFO">Number of Maps  = 3
Samples per Map = 3
2023-03-09 19:54:38 INFO  Configuration:3318 - Removed undeclared tags:
2023-03-09 19:54:40 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2023-03-09 19:54:40 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2023-03-09 19:54:40 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2023-03-09 19:54:40 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2023-03-09 19:54:40 INFO  Configuration:3318 - Removed undeclared tags:
2023-03-09 19:54:40 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2023-03-09 19:54:42 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.19.0.2:8032
2023-03-09 19:54:42 INFO  Configuration:3318 - Removed undeclared tags:
2023-03-09 19:54:42 INFO  Configuration:3318 - Removed undeclared tags:
2023-03-09 19:54:42 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2023-03-09 19:54:42 INFO  FileInputFormat:292 - Total input files to process : 3
2023-03-09 19:54:43 INFO  JobSubmitter:202 - number of splits:3
2023-03-09 19:54:43 INFO  JobSubmitter:298 - Submitting tokens for job: job_1678391422769_0003
2023-03-09 19:54:43 INFO  JobSubmitter:299 - Executing with tokens: []
2023-03-09 19:54:43 INFO  Configuration:3318 - Removed undeclared tags:
2023-03-09 19:54:43 INFO  Configuration:3318 - Removed undeclared tags:
2023-03-09 19:54:43 INFO  Configuration:2752 - resource-types.xml not found
2023-03-09 19:54:43 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2023-03-09 19:54:43 INFO  YarnClientImpl:324 - Submitted application application_1678391422769_0003
2023-03-09 19:54:43 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1678391422769_0003/
2023-03-09 19:54:43 INFO  Job:1619 - Running job: job_1678391422769_0003
2023-03-09 19:54:53 INFO  Job:1640 - Job job_1678391422769_0003 running in uber mode : false
2023-03-09 19:54:53 INFO  Job:1647 -  map 0% reduce 0%
2023-03-09 19:55:01 INFO  Job:1647 -  map 33% reduce 0%
2023-03-09 19:55:07 INFO  Job:1647 -  map 67% reduce 0%
2023-03-09 19:55:14 INFO  Job:1647 -  map 100% reduce 0%
2023-03-09 19:55:21 INFO  Job:1647 -  map 100% reduce 100%
2023-03-09 19:55:22 INFO  Job:1658 - Job job_1678391422769_0003 completed successfully
2023-03-09 19:55:22 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=867429
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=59320
		Total time spent by all reduces in occupied slots (ms)=21276
		Total time spent by all map tasks (ms)=14830
		Total time spent by all reduce tasks (ms)=5319
		Total vcore-milliseconds taken by all map tasks=14830
		Total vcore-milliseconds taken by all reduce tasks=5319
		Total megabyte-milliseconds taken by all map tasks=60743680
		Total megabyte-milliseconds taken by all reduce tasks=21786624
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=760
		CPU time spent (ms)=10060
		Physical memory (bytes) snapshot=1668349952
		Virtual memory (bytes) snapshot=15844093952
		Total committed heap usage (bytes)=1503657984
		Peak Map Physical memory (bytes)=432050176
		Peak Map Virtual memory (bytes)=3955253248
		Peak Reduce Physical memory (bytes)=376885248
		Peak Reduce Virtual memory (bytes)=3982192640
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 40.431 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20230309 19:55:23.354" endtime="20230309 19:55:23.356"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 19:55:23.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230309 19:55:23.356" endtime="20230309 19:55:23.357"/>
</kw>
<status status="PASS" starttime="20230309 19:54:37.353" endtime="20230309 19:55:23.357"/>
</kw>
<msg timestamp="20230309 19:55:23.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 19:54:37.352" endtime="20230309 19:55:23.357"/>
</kw>
<msg timestamp="20230309 19:55:23.358" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2023-03-09 19:54:38 INFO  Configuration:3318 - Removed undeclared tags:
2023-03-09 19:54:40 INFO  FluentPropertyBeanIntrospector:147 - Error when creating Prope...</msg>
<status status="PASS" starttime="20230309 19:54:37.352" endtime="20230309 19:55:23.358"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 19:55:23.358" endtime="20230309 19:55:23.359"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>multiple SLF4J bindings</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 19:55:23.359" endtime="20230309 19:55:23.359"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230309 19:54:37.322" endtime="20230309 19:55:23.360"/>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:55:23.367" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 19:55:23.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 19:55:23.374" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20230309 19:55:23.364" endtime="20230309 19:55:23.374"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 19:55:23.375" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20230309 19:55:23.375" endtime="20230309 19:55:23.376"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 19:55:23.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230309 19:55:23.376" endtime="20230309 19:55:23.377"/>
</kw>
<status status="PASS" starttime="20230309 19:55:23.364" endtime="20230309 19:55:23.377"/>
</kw>
<msg timestamp="20230309 19:55:23.377" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 19:55:23.363" endtime="20230309 19:55:23.377"/>
</kw>
<msg timestamp="20230309 19:55:23.378" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20230309 19:55:23.363" endtime="20230309 19:55:23.378"/>
</kw>
<msg timestamp="20230309 19:55:23.378" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20230309 19:55:23.362" endtime="20230309 19:55:23.378"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 19:55:23.379" level="INFO">${random} = I9GXTItJ</msg>
<status status="PASS" starttime="20230309 19:55:23.378" endtime="20230309 19:55:23.379"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 19:55:23.384" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20230309 19:55:23.383" endtime="20230309 19:55:23.384"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 19:55:23.384" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20230309 19:55:23.384" endtime="20230309 19:55:23.385"/>
</kw>
<status status="PASS" starttime="20230309 19:55:23.382" endtime="20230309 19:55:23.385"/>
</kw>
<msg timestamp="20230309 19:55:23.385" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20230309 19:55:23.382" endtime="20230309 19:55:23.385"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230309 19:55:23.386" endtime="20230309 19:55:23.386"/>
</kw>
<msg timestamp="20230309 19:55:23.386" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20230309 19:55:23.385" endtime="20230309 19:55:23.387"/>
</kw>
<status status="PASS" starttime="20230309 19:55:23.381" endtime="20230309 19:55:23.387"/>
</kw>
<msg timestamp="20230309 19:55:23.387" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20230309 19:55:23.380" endtime="20230309 19:55:23.387"/>
</kw>
<msg timestamp="20230309 19:55:23.388" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20230309 19:55:23.379" endtime="20230309 19:55:23.388"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 19:55:23.391" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20230309 19:55:23.391" endtime="20230309 19:55:23.391"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 19:55:23.392" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20230309 19:55:23.392" endtime="20230309 19:55:23.392"/>
</kw>
<status status="PASS" starttime="20230309 19:55:23.390" endtime="20230309 19:55:23.393"/>
</kw>
<msg timestamp="20230309 19:55:23.393" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20230309 19:55:23.390" endtime="20230309 19:55:23.393"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 19:55:23.395" level="INFO">${first} = i</msg>
<status status="PASS" starttime="20230309 19:55:23.394" endtime="20230309 19:55:23.395"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 19:55:23.396" level="INFO">${result} = /input/</msg>
<status status="PASS" starttime="20230309 19:55:23.395" endtime="20230309 19:55:23.396"/>
</kw>
<status status="PASS" starttime="20230309 19:55:23.394" endtime="20230309 19:55:23.396"/>
</kw>
<msg timestamp="20230309 19:55:23.396" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" starttime="20230309 19:55:23.393" endtime="20230309 19:55:23.396"/>
</kw>
<status status="PASS" starttime="20230309 19:55:23.389" endtime="20230309 19:55:23.396"/>
</kw>
<msg timestamp="20230309 19:55:23.397" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20230309 19:55:23.388" endtime="20230309 19:55:23.397"/>
</kw>
<msg timestamp="20230309 19:55:23.397" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20230309 19:55:23.388" endtime="20230309 19:55:23.397"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 19:55:23.401" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20230309 19:55:23.401" endtime="20230309 19:55:23.401"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 19:55:23.402" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20230309 19:55:23.401" endtime="20230309 19:55:23.402"/>
</kw>
<status status="PASS" starttime="20230309 19:55:23.400" endtime="20230309 19:55:23.402"/>
</kw>
<msg timestamp="20230309 19:55:23.402" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20230309 19:55:23.399" endtime="20230309 19:55:23.402"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 19:55:23.404" level="INFO">${first} = w</msg>
<status status="PASS" starttime="20230309 19:55:23.404" endtime="20230309 19:55:23.404"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 19:55:23.405" level="INFO">${result} = /wordcount-I9GXTItJ.txt</msg>
<status status="PASS" starttime="20230309 19:55:23.405" endtime="20230309 19:55:23.405"/>
</kw>
<status status="PASS" starttime="20230309 19:55:23.403" endtime="20230309 19:55:23.405"/>
</kw>
<msg timestamp="20230309 19:55:23.406" level="INFO">${path_with_leading} = /wordcount-I9GXTItJ.txt</msg>
<status status="PASS" starttime="20230309 19:55:23.402" endtime="20230309 19:55:23.406"/>
</kw>
<status status="PASS" starttime="20230309 19:55:23.398" endtime="20230309 19:55:23.406"/>
</kw>
<msg timestamp="20230309 19:55:23.406" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-I9GXTItJ.txt</msg>
<status status="PASS" starttime="20230309 19:55:23.398" endtime="20230309 19:55:23.406"/>
</kw>
<msg timestamp="20230309 19:55:23.406" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-I9GXTItJ.txt</msg>
<status status="PASS" starttime="20230309 19:55:23.397" endtime="20230309 19:55:23.406"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:55:23.410" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-I9GXTItJ.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 19:56:10.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 19:56:10.142" level="INFO">${output} = 2023-03-09 19:55:24 INFO  Configuration:3318 - Removed undeclared tags:
2023-03-09 19:55:26 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.19.0.2:8032
2023-03-09 19:55:26 INFO  Configurat...</msg>
<status status="PASS" starttime="20230309 19:55:23.408" endtime="20230309 19:56:10.143"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 19:56:10.144" level="INFO">2023-03-09 19:55:24 INFO  Configuration:3318 - Removed undeclared tags:
2023-03-09 19:55:26 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.19.0.2:8032
2023-03-09 19:55:26 INFO  Configuration:3318 - Removed undeclared tags:
2023-03-09 19:55:26 INFO  Configuration:3318 - Removed undeclared tags:
2023-03-09 19:55:26 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2023-03-09 19:55:26 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2023-03-09 19:55:26 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2023-03-09 19:55:27 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2023-03-09 19:55:27 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2023-03-09 19:55:27 INFO  Configuration:3318 - Removed undeclared tags:
2023-03-09 19:55:27 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-03-09 19:55:28 INFO  FileInputFormat:292 - Total input files to process : 3
2023-03-09 19:55:29 INFO  JobSubmitter:202 - number of splits:3
2023-03-09 19:55:29 INFO  JobSubmitter:298 - Submitting tokens for job: job_1678391422769_0004
2023-03-09 19:55:29 INFO  JobSubmitter:299 - Executing with tokens: []
2023-03-09 19:55:29 INFO  Configuration:3318 - Removed undeclared tags:
2023-03-09 19:55:29 INFO  Configuration:3318 - Removed undeclared tags:
2023-03-09 19:55:29 INFO  Configuration:2752 - resource-types.xml not found
2023-03-09 19:55:29 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2023-03-09 19:55:30 INFO  YarnClientImpl:324 - Submitted application application_1678391422769_0004
2023-03-09 19:55:30 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1678391422769_0004/
2023-03-09 19:55:30 INFO  Job:1619 - Running job: job_1678391422769_0004
2023-03-09 19:55:39 INFO  Job:1640 - Job job_1678391422769_0004 running in uber mode : false
2023-03-09 19:55:39 INFO  Job:1647 -  map 0% reduce 0%
2023-03-09 19:55:47 INFO  Job:1647 -  map 33% reduce 0%
2023-03-09 19:55:54 INFO  Job:1647 -  map 67% reduce 0%
2023-03-09 19:56:01 INFO  Job:1647 -  map 100% reduce 0%
2023-03-09 19:56:08 INFO  Job:1647 -  map 100% reduce 100%
2023-03-09 19:56:09 INFO  Job:1658 - Job job_1678391422769_0004 completed successfully
2023-03-09 19:56:09 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=36183
		FILE: Number of bytes written=938423
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=43865
		OFS: Number of bytes written=25925
		OFS: Number of read operations=14
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=57472
		Total time spent by all reduces in occupied slots (ms)=22408
		Total time spent by all map tasks (ms)=14368
		Total time spent by all reduce tasks (ms)=5602
		Total vcore-milliseconds taken by all map tasks=14368
		Total vcore-milliseconds taken by all reduce tasks=5602
		Total megabyte-milliseconds taken by all map tasks=58851328
		Total megabyte-milliseconds taken by all reduce tasks=22945792
	Map-Reduce Framework
		Map input records=1170
		Map output records=4644
		Map output bytes=59407
		Map output materialized bytes=36195
		Input split bytes=300
		Combine input records=4644
		Combine output records=1915
		Reduce input groups=1652
		Reduce shuffle bytes=36195
		Reduce input records=1915
		Reduce output records=1652
		Spilled Records=3830
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=735
		CPU time spent (ms)=10070
		Physical memory (bytes) snapshot=1649475584
		Virtual memory (bytes) snapshot=15804780544
		Total committed heap usage (bytes)=1478492160
		Peak Map Physical memory (bytes)=432885760
		Peak Map Virtual memory (bytes)=3948740608
		Peak Reduce Physical memory (bytes)=377577472
		Peak Reduce Virtual memory (bytes)=3982237696
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=43565
	File Output Format Counters 
		Bytes Written=25925</msg>
<status status="PASS" starttime="20230309 19:56:10.143" endtime="20230309 19:56:10.144"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 19:56:10.145" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230309 19:56:10.145" endtime="20230309 19:56:10.145"/>
</kw>
<status status="PASS" starttime="20230309 19:55:23.408" endtime="20230309 19:56:10.146"/>
</kw>
<msg timestamp="20230309 19:56:10.146" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 19:55:23.407" endtime="20230309 19:56:10.146"/>
</kw>
<msg timestamp="20230309 19:56:10.146" level="INFO">${output} = 2023-03-09 19:55:24 INFO  Configuration:3318 - Removed undeclared tags:
2023-03-09 19:55:26 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.19.0.2:8032
2023-03-09 19:55:26 INFO  Configurat...</msg>
<status status="PASS" starttime="20230309 19:55:23.407" endtime="20230309 19:56:10.146"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 19:56:10.147" endtime="20230309 19:56:10.147"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 19:56:10.147" endtime="20230309 19:56:10.148"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230309 19:55:23.361" endtime="20230309 19:56:10.148"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20230309 19:54:37.254" endtime="20230309 19:56:10.150"/>
</suite>
<suite id="s1-s2-s5" name="Createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-s2-s5-t1" name="Create test volume, bucket and key" line="38">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:51:13.759" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 19:51:18.960" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 19:51:18.960" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20230309 19:51:13.754" endtime="20230309 19:51:18.960"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 19:51:18.962" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20230309 19:51:18.960" endtime="20230309 19:51:18.962"/>
</kw>
<msg timestamp="20230309 19:51:18.962" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20230309 19:51:13.753" endtime="20230309 19:51:18.962"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create volume">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:51:18.972" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 19:51:23.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 19:51:23.187" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 19:51:18.968" endtime="20230309 19:51:23.187"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 19:51:23.188" level="INFO"/>
<status status="PASS" starttime="20230309 19:51:23.187" endtime="20230309 19:51:23.189"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 19:51:23.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 19:51:23.189" endtime="20230309 19:51:23.190"/>
</kw>
<status status="PASS" starttime="20230309 19:51:18.967" endtime="20230309 19:51:23.190"/>
</kw>
<msg timestamp="20230309 19:51:23.190" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 19:51:18.967" endtime="20230309 19:51:23.194"/>
</kw>
<msg timestamp="20230309 19:51:23.195" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 19:51:18.964" endtime="20230309 19:51:23.195"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 19:51:23.195" endtime="20230309 19:51:23.196"/>
</kw>
<status status="PASS" starttime="20230309 19:51:18.963" endtime="20230309 19:51:23.196"/>
</kw>
<status status="PASS" starttime="20230309 19:51:18.962" endtime="20230309 19:51:23.196"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/${bucket} --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:51:23.204" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 19:51:27.509" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 19:51:27.514" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 19:51:23.201" endtime="20230309 19:51:27.514"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 19:51:27.515" level="INFO"/>
<status status="PASS" starttime="20230309 19:51:27.514" endtime="20230309 19:51:27.515"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 19:51:27.516" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 19:51:27.516" endtime="20230309 19:51:27.517"/>
</kw>
<status status="PASS" starttime="20230309 19:51:23.199" endtime="20230309 19:51:27.517"/>
</kw>
<msg timestamp="20230309 19:51:27.517" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 19:51:23.199" endtime="20230309 19:51:27.518"/>
</kw>
<status status="PASS" starttime="20230309 19:51:23.198" endtime="20230309 19:51:27.518"/>
</kw>
<status status="PASS" starttime="20230309 19:51:23.197" endtime="20230309 19:51:27.519"/>
</kw>
<status status="PASS" starttime="20230309 19:51:23.197" endtime="20230309 19:51:27.519"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 19:51:27.519" endtime="20230309 19:51:27.519"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:51:27.525" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 19:51:32.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 19:51:32.145" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023-03-09T19:51...</msg>
<status status="PASS" starttime="20230309 19:51:27.522" endtime="20230309 19:51:32.145"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 19:51:32.147" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023-03-09T19:51:27.440Z",
  "modificationTime" : "2023-03-09T19:51:27.440Z",
  "quotaInBytes" : 1099511627776,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "hadoop",
  "link" : false
}</msg>
<status status="PASS" starttime="20230309 19:51:32.146" endtime="20230309 19:51:32.147"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 19:51:32.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 19:51:32.147" endtime="20230309 19:51:32.148"/>
</kw>
<status status="PASS" starttime="20230309 19:51:27.521" endtime="20230309 19:51:32.148"/>
</kw>
<msg timestamp="20230309 19:51:32.148" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 19:51:27.520" endtime="20230309 19:51:32.149"/>
</kw>
<msg timestamp="20230309 19:51:32.149" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023-03-09T19:51...</msg>
<status status="PASS" starttime="20230309 19:51:27.520" endtime="20230309 19:51:32.149"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 19:51:32.150" endtime="20230309 19:51:32.150"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 19:51:32.156" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230309 19:51:32.155" endtime="20230309 19:51:32.156"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 19:51:32.157" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20230309 19:51:32.156" endtime="20230309 19:51:32.157"/>
</kw>
<status status="PASS" starttime="20230309 19:51:32.155" endtime="20230309 19:51:32.157"/>
</kw>
<msg timestamp="20230309 19:51:32.158" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20230309 19:51:32.153" endtime="20230309 19:51:32.158"/>
</kw>
<status status="PASS" starttime="20230309 19:51:32.152" endtime="20230309 19:51:32.158"/>
</kw>
<msg timestamp="20230309 19:51:32.158" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20230309 19:51:32.151" endtime="20230309 19:51:32.158"/>
</kw>
<msg timestamp="20230309 19:51:32.159" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20230309 19:51:32.150" endtime="20230309 19:51:32.159"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:51:32.173" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 19:51:36.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 19:51:36.215" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 19:51:32.166" endtime="20230309 19:51:36.215"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 19:51:36.217" level="INFO"/>
<status status="PASS" starttime="20230309 19:51:36.216" endtime="20230309 19:51:36.217"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 19:51:36.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 19:51:36.217" endtime="20230309 19:51:36.218"/>
</kw>
<status status="PASS" starttime="20230309 19:51:32.165" endtime="20230309 19:51:36.218"/>
</kw>
<msg timestamp="20230309 19:51:36.218" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 19:51:32.165" endtime="20230309 19:51:36.219"/>
</kw>
<status status="PASS" starttime="20230309 19:51:32.159" endtime="20230309 19:51:36.219"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:51:36.224" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 19:51:44.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 19:51:44.819" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 19:51:36.221" endtime="20230309 19:51:44.819"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 19:51:44.822" level="INFO"/>
<status status="PASS" starttime="20230309 19:51:44.821" endtime="20230309 19:51:44.822"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 19:51:44.822" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 19:51:44.822" endtime="20230309 19:51:44.823"/>
</kw>
<status status="PASS" starttime="20230309 19:51:36.221" endtime="20230309 19:51:44.823"/>
</kw>
<msg timestamp="20230309 19:51:44.823" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 19:51:36.220" endtime="20230309 19:51:44.824"/>
</kw>
<status status="PASS" starttime="20230309 19:51:36.219" endtime="20230309 19:51:44.824"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:51:44.829" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 19:51:51.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 19:51:51.709" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 19:51:44.826" endtime="20230309 19:51:51.710"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 19:51:51.711" level="INFO"/>
<status status="PASS" starttime="20230309 19:51:51.710" endtime="20230309 19:51:51.711"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 19:51:51.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 19:51:51.711" endtime="20230309 19:51:51.712"/>
</kw>
<status status="PASS" starttime="20230309 19:51:44.826" endtime="20230309 19:51:51.712"/>
</kw>
<msg timestamp="20230309 19:51:51.713" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 19:51:44.825" endtime="20230309 19:51:51.713"/>
</kw>
<status status="PASS" starttime="20230309 19:51:44.825" endtime="20230309 19:51:51.713"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:51:51.718" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 19:51:58.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 19:51:58.313" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 19:51:51.715" endtime="20230309 19:51:58.313"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 19:51:58.314" level="INFO"/>
<status status="PASS" starttime="20230309 19:51:58.313" endtime="20230309 19:51:58.314"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 19:51:58.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 19:51:58.315" endtime="20230309 19:51:58.315"/>
</kw>
<status status="PASS" starttime="20230309 19:51:51.715" endtime="20230309 19:51:58.316"/>
</kw>
<msg timestamp="20230309 19:51:58.316" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 19:51:51.714" endtime="20230309 19:51:58.317"/>
</kw>
<status status="PASS" starttime="20230309 19:51:51.713" endtime="20230309 19:51:58.317"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230309 19:51:13.752" endtime="20230309 19:51:58.317"/>
</test>
<test id="s1-s2-s5-t2" name="Create user dir for hadoop" line="51">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 19:51:58.325" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230309 19:51:58.324" endtime="20230309 19:51:58.325"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 19:51:58.326" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20230309 19:51:58.325" endtime="20230309 19:51:58.326"/>
</kw>
<status status="PASS" starttime="20230309 19:51:58.324" endtime="20230309 19:51:58.326"/>
</kw>
<msg timestamp="20230309 19:51:58.326" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20230309 19:51:58.322" endtime="20230309 19:51:58.326"/>
</kw>
<status status="PASS" starttime="20230309 19:51:58.322" endtime="20230309 19:51:58.327"/>
</kw>
<msg timestamp="20230309 19:51:58.327" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20230309 19:51:58.321" endtime="20230309 19:51:58.327"/>
</kw>
<msg timestamp="20230309 19:51:58.327" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20230309 19:51:58.320" endtime="20230309 19:51:58.327"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:51:58.332" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 19:52:02.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 19:52:02.249" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 19:51:58.329" endtime="20230309 19:52:02.249"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 19:52:02.251" level="INFO"/>
<status status="PASS" starttime="20230309 19:52:02.250" endtime="20230309 19:52:02.251"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 19:52:02.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 19:52:02.251" endtime="20230309 19:52:02.252"/>
</kw>
<status status="PASS" starttime="20230309 19:51:58.329" endtime="20230309 19:52:02.253"/>
</kw>
<msg timestamp="20230309 19:52:02.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 19:51:58.328" endtime="20230309 19:52:02.253"/>
</kw>
<status status="PASS" starttime="20230309 19:51:58.328" endtime="20230309 19:52:02.254"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:52:02.259" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 19:52:05.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 19:52:05.624" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 19:52:02.257" endtime="20230309 19:52:05.624"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 19:52:05.625" level="INFO"/>
<status status="PASS" starttime="20230309 19:52:05.625" endtime="20230309 19:52:05.626"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 19:52:05.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 19:52:05.626" endtime="20230309 19:52:05.626"/>
</kw>
<status status="PASS" starttime="20230309 19:52:02.256" endtime="20230309 19:52:05.627"/>
</kw>
<msg timestamp="20230309 19:52:05.627" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 19:52:02.255" endtime="20230309 19:52:05.627"/>
</kw>
<status status="PASS" starttime="20230309 19:52:02.254" endtime="20230309 19:52:05.628"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230309 19:51:58.318" endtime="20230309 19:52:05.628"/>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" starttime="20230309 19:51:13.658" endtime="20230309 19:52:05.630"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="271699"/>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite id="s1-s3-s1" name="hadoopfs-o3fs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s3-s1-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 19:59:25.792" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230309 19:59:25.792" endtime="20230309 19:59:25.792"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 19:59:25.793" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20230309 19:59:25.793" endtime="20230309 19:59:25.793"/>
</kw>
<status status="PASS" starttime="20230309 19:59:25.791" endtime="20230309 19:59:25.794"/>
</kw>
<msg timestamp="20230309 19:59:25.794" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20230309 19:59:25.791" endtime="20230309 19:59:25.794"/>
</kw>
<status status="PASS" starttime="20230309 19:59:25.790" endtime="20230309 19:59:25.795"/>
</kw>
<msg timestamp="20230309 19:59:25.795" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20230309 19:59:25.789" endtime="20230309 19:59:25.795"/>
</kw>
<msg timestamp="20230309 19:59:25.795" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20230309 19:59:25.787" endtime="20230309 19:59:25.795"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 19:59:25.796" level="INFO">${random} = 25712</msg>
<status status="PASS" starttime="20230309 19:59:25.796" endtime="20230309 19:59:25.796"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:59:25.811" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-25712 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 19:59:30.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 19:59:30.745" level="INFO">${output} = 2023-03-09 19:59:28 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2023-03-09 19:59:28 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2023...</msg>
<status status="PASS" starttime="20230309 19:59:25.799" endtime="20230309 19:59:30.745"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 19:59:30.746" level="INFO">2023-03-09 19:59:28 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2023-03-09 19:59:28 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2023-03-09 19:59:28 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2023-03-09 19:59:29 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230309 19:59:30.745" endtime="20230309 19:59:30.746"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 19:59:30.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230309 19:59:30.746" endtime="20230309 19:59:30.747"/>
</kw>
<status status="PASS" starttime="20230309 19:59:25.798" endtime="20230309 19:59:30.747"/>
</kw>
<msg timestamp="20230309 19:59:30.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 19:59:25.797" endtime="20230309 19:59:30.747"/>
</kw>
<msg timestamp="20230309 19:59:30.748" level="INFO">${result} = 2023-03-09 19:59:28 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2023-03-09 19:59:28 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2023...</msg>
<status status="PASS" starttime="20230309 19:59:25.797" endtime="20230309 19:59:30.748"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>multiple SLF4J bindings</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 19:59:30.748" endtime="20230309 19:59:30.748"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:59:30.753" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 19:59:33.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 19:59:33.559" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2023-03-09 19:58 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2023-03-09 19:59 o3fs://bucket1.volume1.om/ozone-25712
dr...</msg>
<status status="PASS" starttime="20230309 19:59:30.750" endtime="20230309 19:59:33.559"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 19:59:33.561" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2023-03-09 19:58 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2023-03-09 19:59 o3fs://bucket1.volume1.om/ozone-25712
drwxrwxrwx   - hadoop hadoop          0 2023-03-09 19:59 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20230309 19:59:33.560" endtime="20230309 19:59:33.561"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 19:59:33.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230309 19:59:33.561" endtime="20230309 19:59:33.562"/>
</kw>
<status status="PASS" starttime="20230309 19:59:30.750" endtime="20230309 19:59:33.563"/>
</kw>
<msg timestamp="20230309 19:59:33.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 19:59:30.749" endtime="20230309 19:59:33.563"/>
</kw>
<msg timestamp="20230309 19:59:33.563" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2023-03-09 19:58 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2023-03-09 19:59 o3fs://bucket1.volume1.om/ozone-25712
dr...</msg>
<status status="PASS" starttime="20230309 19:59:30.749" endtime="20230309 19:59:33.563"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 19:59:33.564" endtime="20230309 19:59:33.564"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:59:33.568" level="INFO">Running command 'hdfs dfs -cat o3fs://bucket1.volume1.om//ozone-25712 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 19:59:38.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 19:59:38.105" level="INFO">${output} = 2023-03-09 19:59:36 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2023-03-09 19:59:36 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2023...</msg>
<status status="PASS" starttime="20230309 19:59:33.566" endtime="20230309 19:59:38.105"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 19:59:38.106" level="INFO">2023-03-09 19:59:36 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2023-03-09 19:59:36 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2023-03-09 19:59:36 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
This product includes software developed by The Apache Software
Foundation (http://www.apache.org/).

The binary distribution of this product bundles binaries of
org.iq80.leveldb:leveldb-api (https://github.com/dain/leveldb), which has the
following notices:
* Copyright 2011 Dain Sundstrom &lt;dain@iq80.com&gt;
* Copyright 2011 FuseSource Corp. http://fusesource.com

The binary distribution of this product bundles binaries of
AWS SDK for Java - Bundle 1.11.563 (https://github.com/aws/aws-sdk-java),
which has the following notices:

This software includes third party software subject to the following copyrights:
- XML parsing and utility functions from JetS3t - Copyright 2006-2009 James Murty.
- PKCS#1 PEM encoded private key parsing and utility functions from oauth.googlecode.com - Copyright 1998-2010 AOL Inc.

The binary distribution of this product bundles binaries of
Gson 2.2.4,
which has the following notices:

                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * http://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'ArrayDeque', written by Josh
Bloch of Google, Inc:

  * LICENSE:
    * license/LICENSE.deque.txt (Public Domain)

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified version of Roland Kuhn's ASL2
AbstractNodeQueue, which is based on Dmitriy Vyukov's non-intrusive MPSC queue.
It can be obtained at:

  * LICENSE:
    * license/LICENSE.abstractnodequeue.txt (Public Domain)
  * HOMEPAGE:
    * https://github.com/akka/akka/blob/wip-2.2.3-for-scala-2.11/akka-actor/src/main/java/akka/dispatch/AbstractNodeQueue.java

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/libdivsufsort/

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/protobuf/

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/snappy/

This product contains a modified portion of UnsignedBytes LexicographicalComparator
from Guava v21 project by Google Inc, which can be obtained at:

  * LICENSE:
    * license/COPYING (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/google/guava

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (GNU LGPL 2.1)
  * HOMEPAGE:
    * http://www.jboss.org/jbossmarshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://code.google.com/p/caliper/

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/

This product contains a modified portion of 'JDOM 1.1', which can be obtained at:

  * LICENSE:
    * https://github.com/hunterhacker/jdom/blob/jdom-1.1/core/LICENSE.txt
  * HOMEPAGE:
    * http://www.jdom.org/

The binary distribution of this product bundles binaries of
Commons Codec 1.4,
which has the following notices:
 * src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.javacontains test data from http://aspell.net/test/orig/batch0.tab.Copyright (C) 2002 Kevin Atkinson (kevina@gnu.org)
  ===============================================================================
  The content of package org.apache.commons.codec.language.bm has been translated
  from the original php source code available at http://stevemorse.org/phoneticinfo.htm
  with permission from the original authors.
  Original source copyright:Copyright (c) 2008 Alexander Beider &amp; Stephen P. Morse.

The binary distribution of this product bundles binaries of
Commons Lang 2.6,
which has the following notices:
 * This product includes software from the Spring Framework,under the Apache License 2.0 (see: StringUtils.containsWhitespace())

The binary distribution of this product bundles binaries of
Apache Log4j 1.2.17,
which has the following notices:
 * ResolverUtil.java
    Copyright 2005-2006 Tim Fennell
  Dumbster SMTP test server
    Copyright 2004 Jason Paul Kitchen
  TypeUtil.java
    Copyright 2002-2012 Ramnivas Laddad, Juergen Hoeller, Chris Beams

The binary distribution of this product bundles binaries of
"Java Concurrency in Practice" book annotations 1.0,
which has the following notices:
 * Copyright (c) 2005 Brian Goetz and Tim Peierls Released under the Creative
  Commons Attribution License (http://creativecommons.org/licenses/by/2.5)
  Official home: http://www.jcip.net Any republication or derived work
  distributed in source code form must include this copyright and license
  notice.

The binary distribution of this product bundles binaries of
Jetty :: Http Utility 9.3.19.,
Jetty :: IO Utility 9.3.19.,
Jetty :: Security 9.3.19.,
Jetty :: Server Core 9.3.19.,
Jetty :: Servlet Handling 9.3.19.,
Jetty :: Utilities 9.3.19.,
Jetty :: Utilities :: Ajax,
Jetty :: Webapp Application Support 9.3.19.,
Jetty :: XML utilities 9.3.19.,
which has the following notices:
 * ==============================================================
    Jetty Web Container
    Copyright 1995-2016 Mort Bay Consulting Pty Ltd.
   ==============================================================

   The Jetty Web Container is Copyright Mort Bay Consulting Pty Ltd
   unless otherwise noted.

   Jetty is dual licensed under both

     * The Apache 2.0 License
       http://www.apache.org/licenses/LICENSE-2.0.html

         and

     * The Eclipse Public 1.0 License
       http://www.eclipse.org/legal/epl-v10.html

   Jetty may be distributed under either license.

   ------
   Eclipse

   The following artifacts are EPL.
    * org.eclipse.jetty.orbit:org.eclipse.jdt.core

   The following artifacts are EPL and ASL2.
    * org.eclipse.jetty.orbit:javax.security.auth.message


   The following artifacts are EPL and CDDL 1.0.
    * org.eclipse.jetty.orbit:javax.mail.glassfish


   ------
   Oracle

   The following artifacts are CDDL + GPLv2 with classpath exception.
   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

    * javax.servlet:javax.servlet-api
    * javax.annotation:javax.annotation-api
    * javax.transaction:javax.transaction-api
    * javax.websocket:javax.websocket-api

   ------
   Oracle OpenJDK

   If ALPN is used to negotiate HTTP/2 connections, then the following
   artifacts may be included in the distribution or downloaded when ALPN
   module is selected.

    * java.sun.security.ssl

   These artifacts replace/modify OpenJDK classes.  The modififications
   are hosted at github and both modified and original are under GPL v2 with
   classpath exceptions.
   http://openjdk.java.net/legal/gplv2+ce.html


   ------
   OW2

   The following artifacts are licensed by the OW2 Foundation according to the
   terms of http://asm.ow2.org/license.html

   org.ow2.asm:asm-commons
   org.ow2.asm:asm


   ------
   Apache

   The following artifacts are ASL2 licensed.

   org.apache.taglibs:taglibs-standard-spec
   org.apache.taglibs:taglibs-standard-impl


   ------
   MortBay

   The following artifacts are ASL2 licensed.  Based on selected classes from
   following Apache Tomcat jars, all ASL2 licensed.

   org.mortbay.jasper:apache-jsp
     org.apache.tomcat:tomcat-jasper
     org.apache.tomcat:tomcat-juli
     org.apache.tomcat:tomcat-jsp-api
     org.apache.tomcat:tomcat-el-api
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-api
     org.apache.tomcat:tomcat-util-scan
     org.apache.tomcat:tomcat-util

   org.mortbay.jasper:apache-el
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-el-api


   ------
   Mortbay

   The following artifacts are CDDL + GPLv2 with classpath exception.

   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

   org.eclipse.jetty.toolchain:jetty-schemas

   ------
   Assorted

   The UnixCrypt.java code implements the one way cryptography used by
   Unix systems for simple password protection.  Copyright 1996 Aki Yoshida,
   modified April 2001  by Iris Van den Broeke, Daniel Deville.
   Permission to use, copy, modify and distribute UnixCrypt
   for non-commercial or commercial purposes and without fee is
   granted provided that the copyright notice appears in all copies./

The binary distribution of this product bundles binaries of
Snappy for Java 1.0.4.1,
which has the following notices:
 * This product includes software developed by Google
    Snappy: http://code.google.com/p/snappy/ (New BSD License)

   This product includes software developed by Apache
    PureJavaCrc32C from apache-hadoop-common http://hadoop.apache.org/
    (Apache 2.0 license)

   This library containd statically linked libstdc++. This inclusion is allowed by
   "GCC RUntime Library Exception"
   http://gcc.gnu.org/onlinedocs/libstdc++/manual/license.html

   == Contributors ==
     * Tatu Saloranta
       * Providing benchmark suite
     * Alec Wysoker
       * Performance and memory usage improvement

The binary distribution of this product bundles binaries of
Xerces2 Java Parser 2.9.1,
which has the following notices:
 * =========================================================================
   ==  NOTICE file corresponding to section 4(d) of the Apache License,   ==
   ==  Version 2.0, in this case for the Apache Xerces Java distribution. ==
   =========================================================================

   Apache Xerces Java
   Copyright 1999-2007 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   Portions of this software were originally based on the following:
     - software copyright (c) 1999, IBM Corporation., http://www.ibm.com.
     - software copyright (c) 1999, Sun Microsystems., http://www.sun.com.
     - voluntary contributions made by Paul Eng on behalf of the
       Apache Software Foundation that were originally developed at iClick, Inc.,
       software copyright (c) 1999.

The binary distribution of this product bundles binaries of
Logback Classic Module 1.1.2,
Logback Core Module 1.1.2,
which has the following notices:
 * Logback: the reliable, generic, fast and flexible logging framework.
   Copyright (C) 1999-2012, QOS.ch. All rights reserved.

The binary distribution of this product bundles binaries of
Apache HBase - Annotations 1.2.6,
Apache HBase - Client 1.2.6,
Apache HBase - Common 1.2.6,
Apache HBase - Hadoop Compatibility 1.2.6,
Apache HBase - Hadoop Two Compatibility 1.2.6,
Apache HBase - Prefix Tree 1.2.6,
Apache HBase - Procedure 1.2.6,
Apache HBase - Protocol 1.2.6,
Apache HBase - Server 1.2.6,
which has the following notices:
 * Apache HBase
   Copyright 2007-2015 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   --
   This product incorporates portions of the 'Hadoop' project

   Copyright 2007-2009 The Apache Software Foundation

   Licensed under the Apache License v2.0
   --
   Our Orca logo we got here: http://www.vectorfree.com/jumping-orca
   It is licensed Creative Commons Attribution 3.0.
   See https://creativecommons.org/licenses/by/3.0/us/
   We changed the logo by stripping the colored background, inverting
   it and then rotating it some.

   Later we found that vectorfree.com image is not properly licensed.
   The original is owned by vectorportal.com. The original was
   relicensed so we could use it as Creative Commons Attribution 3.0.
   The license is bundled with the download available here:
   http://www.vectorportal.com/subcategory/205/KILLER-WHALE-FREE-VECTOR.eps/ifile/9136/detailtest.asp
   --
   This product includes portions of the Bootstrap project v3.0.0

   Copyright 2013 Twitter, Inc.

   Licensed under the Apache License v2.0

   This product uses the Glyphicons Halflings icon set.

   http://glyphicons.com/

   Copyright Jan Kovařík

   Licensed under the Apache License v2.0 as a part of the Bootstrap project.

   --
   This product includes portions of the Guava project v14, specifically
   'hbase-common/src/main/java/org/apache/hadoop/hbase/io/LimitInputStream.java'

   Copyright (C) 2007 The Guava Authors

   Licensed under the Apache License, Version 2.0

The binary distribution of this product bundles binaries of
Phoenix Core 4.7.0,
which has the following notices:
   Apache Phoenix
   Copyright 2013-2016 The Apache Software Foundation

   This product includes software developed by The Apache Software
   Foundation (http://www.apache.org/).

   This also includes:

   The phoenix-spark module has been adapted from the phoenix-spark library
   distributed under the terms of the Apache 2 license. Original source copyright:
   Copyright 2014 Simply Measured, Inc.
   Copyright 2015 Interset Software Inc.

   The file bin/daemon.py is based on the file of the same name in python-daemon 2.0.5
   (https://pypi.python.org/pypi/python-daemon/). Original source copyright:
   # Copyright © 2008–2015 Ben Finney &lt;ben+python@benfinney.id.au&gt;
   # Copyright © 2007–2008 Robert Niederreiter, Jens Klein
   # Copyright © 2004–2005 Chad J. Schroeder
   # Copyright © 2003 Clark Evans
   # Copyright © 2002 Noah Spurrier
   # Copyright © 2001 Jürgen Hermann

The binary distribution of this product bundles binaries of
Plexus Cipher: encryption/decryption Component 1.4,
which has the following notices:
 * The code in this component contains a class - Base64 taken from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/Base64.java
   which is Apache license: http://www.apache.org/licenses/LICENSE-2.0

   The PBE key processing routine PBECipher.createCipher() is adopted from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/OpenSSL.java
    which is also Apache APL-2.0 license: http://www.apache.org/licenses/LICENSE-2.0

The binary distribution of this product bundles binaries of
software.amazon.ion:ion-java 1.0.1,
which has the following notices:
 * Amazon Ion Java Copyright 2007-2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.

The binary distribution of this product bundles binaries of
joda-time:joda-time:2.9.9
which has the following notices:
 * =============================================================================
   = NOTICE file corresponding to section 4d of the Apache License Version 2.0 =
   =============================================================================
   This product includes software developed by
   Joda.org (http://www.joda.org/).

The binary distribution of this product bundles binaries of
Ehcache 3.3.1,
which has the following notices:
 * Ehcache V3 Copyright 2014-2016 Terracotta, Inc.

The binary distribution of this product bundles binaries of
snakeyaml (https://bitbucket.org/asomov/snakeyaml),
which has the following notices:
 * Copyright (c) 2008, http://www.snakeyaml.org

The binary distribution of this product bundles binaries of
swagger-annotations (https://github.com/swagger-api/swagger-core),
which has the following notices:
 * Copyright 2016 SmartBear Software

The binary distribution of this product bundles binaries of
metrics-core 3.2.4
which has the following notices:
 * Copyright 2010-2013 Coda Hale and Yammer, Inc.

   This product includes software developed by Coda Hale and Yammer, Inc.

   This product includes code derived from the JSR-166 project (ThreadLocalRandom, Striped64,
   LongAdder), which was released with the following comments:

   Written by Doug Lea with assistance from members of JCP JSR-166
   Expert Group and released to the public domain, as explained at
   http://creativecommons.org/publicdomain/zero/1.0/</msg>
<status status="PASS" starttime="20230309 19:59:38.105" endtime="20230309 19:59:38.106"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 19:59:38.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230309 19:59:38.107" endtime="20230309 19:59:38.107"/>
</kw>
<status status="PASS" starttime="20230309 19:59:33.565" endtime="20230309 19:59:38.108"/>
</kw>
<msg timestamp="20230309 19:59:38.108" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 19:59:33.565" endtime="20230309 19:59:38.108"/>
</kw>
<msg timestamp="20230309 19:59:38.110" level="INFO">${result} = 2023-03-09 19:59:36 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2023-03-09 19:59:36 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2023...</msg>
<status status="PASS" starttime="20230309 19:59:33.564" endtime="20230309 19:59:38.110"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 19:59:38.110" endtime="20230309 19:59:38.111"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 19:59:25.786" endtime="20230309 19:59:38.111"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20230309 19:59:25.717" endtime="20230309 19:59:38.112"/>
</suite>
<suite id="s1-s3-s2" name="mapreduce-o3fs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s3-s2-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:59:44.347" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 19:59:44.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 19:59:44.357" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20230309 19:59:44.343" endtime="20230309 19:59:44.357"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 19:59:44.358" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20230309 19:59:44.358" endtime="20230309 19:59:44.358"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 19:59:44.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230309 19:59:44.359" endtime="20230309 19:59:44.359"/>
</kw>
<status status="PASS" starttime="20230309 19:59:44.342" endtime="20230309 19:59:44.360"/>
</kw>
<msg timestamp="20230309 19:59:44.360" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 19:59:44.341" endtime="20230309 19:59:44.364"/>
</kw>
<msg timestamp="20230309 19:59:44.364" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20230309 19:59:44.341" endtime="20230309 19:59:44.365"/>
</kw>
<msg timestamp="20230309 19:59:44.366" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20230309 19:59:44.340" endtime="20230309 19:59:44.366"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 19:59:44.371" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230309 19:59:44.370" endtime="20230309 19:59:44.371"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 19:59:44.372" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20230309 19:59:44.371" endtime="20230309 19:59:44.372"/>
</kw>
<status status="PASS" starttime="20230309 19:59:44.370" endtime="20230309 19:59:44.373"/>
</kw>
<msg timestamp="20230309 19:59:44.373" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20230309 19:59:44.369" endtime="20230309 19:59:44.373"/>
</kw>
<status status="PASS" starttime="20230309 19:59:44.368" endtime="20230309 19:59:44.373"/>
</kw>
<msg timestamp="20230309 19:59:44.373" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20230309 19:59:44.367" endtime="20230309 19:59:44.374"/>
</kw>
<msg timestamp="20230309 19:59:44.374" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20230309 19:59:44.366" endtime="20230309 19:59:44.374"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:59:44.379" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 20:00:39.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 20:00:39.264" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2023-03-09 19:59:47 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2023-03-09 19:59:47 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20230309 19:59:44.376" endtime="20230309 20:00:39.264"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 20:00:39.265" level="INFO">Number of Maps  = 3
Samples per Map = 3
2023-03-09 19:59:47 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2023-03-09 19:59:47 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2023-03-09 19:59:47 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2023-03-09 19:59:47 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2023-03-09 19:59:49 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.20.0.2:8032
2023-03-09 19:59:50 INFO  FileInputFormat:292 - Total input files to process : 3
2023-03-09 19:59:50 INFO  JobSubmitter:202 - number of splits:3
2023-03-09 19:59:50 INFO  JobSubmitter:298 - Submitting tokens for job: job_1678391828466_0001
2023-03-09 19:59:50 INFO  JobSubmitter:299 - Executing with tokens: []
2023-03-09 19:59:51 INFO  Configuration:2795 - resource-types.xml not found
2023-03-09 19:59:51 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2023-03-09 19:59:51 INFO  YarnClientImpl:329 - Submitted application application_1678391828466_0001
2023-03-09 19:59:51 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1678391828466_0001/
2023-03-09 19:59:51 INFO  Job:1614 - Running job: job_1678391828466_0001
2023-03-09 20:00:08 INFO  Job:1635 - Job job_1678391828466_0001 running in uber mode : false
2023-03-09 20:00:08 INFO  Job:1642 -  map 0% reduce 0%
2023-03-09 20:00:16 INFO  Job:1642 -  map 33% reduce 0%
2023-03-09 20:00:23 INFO  Job:1642 -  map 67% reduce 0%
2023-03-09 20:00:30 INFO  Job:1642 -  map 100% reduce 0%
2023-03-09 20:00:37 INFO  Job:1642 -  map 100% reduce 100%
2023-03-09 20:00:38 INFO  Job:1653 - Job job_1678391828466_0001 completed successfully
2023-03-09 20:00:38 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=943033
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=57160
		Total time spent by all reduces in occupied slots (ms)=25140
		Total time spent by all map tasks (ms)=14290
		Total time spent by all reduce tasks (ms)=6285
		Total vcore-milliseconds taken by all map tasks=14290
		Total vcore-milliseconds taken by all reduce tasks=6285
		Total megabyte-milliseconds taken by all map tasks=58531840
		Total megabyte-milliseconds taken by all reduce tasks=25743360
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=876
		CPU time spent (ms)=10100
		Physical memory (bytes) snapshot=1657909248
		Virtual memory (bytes) snapshot=15850549248
		Total committed heap usage (bytes)=1477967872
		Peak Map Physical memory (bytes)=433008640
		Peak Map Virtual memory (bytes)=3956023296
		Peak Reduce Physical memory (bytes)=369446912
		Peak Reduce Virtual memory (bytes)=3989790720
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 49.209 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20230309 20:00:39.264" endtime="20230309 20:00:39.266"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 20:00:39.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230309 20:00:39.266" endtime="20230309 20:00:39.267"/>
</kw>
<status status="PASS" starttime="20230309 19:59:44.375" endtime="20230309 20:00:39.267"/>
</kw>
<msg timestamp="20230309 20:00:39.267" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 19:59:44.375" endtime="20230309 20:00:39.267"/>
</kw>
<msg timestamp="20230309 20:00:39.268" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2023-03-09 19:59:47 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2023-03-09 19:59:47 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20230309 19:59:44.374" endtime="20230309 20:00:39.268"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 20:00:39.269" endtime="20230309 20:00:39.269"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>multiple SLF4J bindings</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 20:00:39.269" endtime="20230309 20:00:39.270"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230309 19:59:44.339" endtime="20230309 20:00:39.270"/>
</test>
<test id="s1-s3-s2-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 20:00:39.285" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 20:00:39.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 20:00:39.297" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20230309 20:00:39.280" endtime="20230309 20:00:39.297"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 20:00:39.298" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20230309 20:00:39.297" endtime="20230309 20:00:39.298"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 20:00:39.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230309 20:00:39.298" endtime="20230309 20:00:39.299"/>
</kw>
<status status="PASS" starttime="20230309 20:00:39.280" endtime="20230309 20:00:39.299"/>
</kw>
<msg timestamp="20230309 20:00:39.300" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 20:00:39.279" endtime="20230309 20:00:39.300"/>
</kw>
<msg timestamp="20230309 20:00:39.300" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20230309 20:00:39.279" endtime="20230309 20:00:39.300"/>
</kw>
<msg timestamp="20230309 20:00:39.301" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20230309 20:00:39.273" endtime="20230309 20:00:39.301"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 20:00:39.301" level="INFO">${random} = B9kJGbEs</msg>
<status status="PASS" starttime="20230309 20:00:39.301" endtime="20230309 20:00:39.302"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 20:00:39.307" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230309 20:00:39.306" endtime="20230309 20:00:39.307"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 20:00:39.308" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20230309 20:00:39.307" endtime="20230309 20:00:39.308"/>
</kw>
<status status="PASS" starttime="20230309 20:00:39.306" endtime="20230309 20:00:39.309"/>
</kw>
<msg timestamp="20230309 20:00:39.309" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20230309 20:00:39.305" endtime="20230309 20:00:39.309"/>
</kw>
<status status="PASS" starttime="20230309 20:00:39.304" endtime="20230309 20:00:39.310"/>
</kw>
<msg timestamp="20230309 20:00:39.310" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20230309 20:00:39.303" endtime="20230309 20:00:39.310"/>
</kw>
<msg timestamp="20230309 20:00:39.310" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20230309 20:00:39.302" endtime="20230309 20:00:39.310"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 20:00:39.316" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230309 20:00:39.315" endtime="20230309 20:00:39.316"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 20:00:39.317" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20230309 20:00:39.316" endtime="20230309 20:00:39.317"/>
</kw>
<status status="PASS" starttime="20230309 20:00:39.314" endtime="20230309 20:00:39.317"/>
</kw>
<msg timestamp="20230309 20:00:39.317" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20230309 20:00:39.313" endtime="20230309 20:00:39.318"/>
</kw>
<status status="PASS" starttime="20230309 20:00:39.313" endtime="20230309 20:00:39.318"/>
</kw>
<msg timestamp="20230309 20:00:39.318" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20230309 20:00:39.312" endtime="20230309 20:00:39.318"/>
</kw>
<msg timestamp="20230309 20:00:39.319" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20230309 20:00:39.311" endtime="20230309 20:00:39.319"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 20:00:39.323" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230309 20:00:39.323" endtime="20230309 20:00:39.324"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 20:00:39.325" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20230309 20:00:39.324" endtime="20230309 20:00:39.325"/>
</kw>
<status status="PASS" starttime="20230309 20:00:39.322" endtime="20230309 20:00:39.325"/>
</kw>
<msg timestamp="20230309 20:00:39.325" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20230309 20:00:39.322" endtime="20230309 20:00:39.326"/>
</kw>
<status status="PASS" starttime="20230309 20:00:39.321" endtime="20230309 20:00:39.327"/>
</kw>
<msg timestamp="20230309 20:00:39.327" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-B9kJGbEs.txt</msg>
<status status="PASS" starttime="20230309 20:00:39.320" endtime="20230309 20:00:39.327"/>
</kw>
<msg timestamp="20230309 20:00:39.328" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-B9kJGbEs.txt</msg>
<status status="PASS" starttime="20230309 20:00:39.319" endtime="20230309 20:00:39.328"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 20:00:39.333" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-B9kJGbEs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 20:01:28.800" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 20:01:28.800" level="INFO">${output} = 2023-03-09 20:00:41 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.20.0.2:8032
2023-03-09 20:00:42 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" starttime="20230309 20:00:39.330" endtime="20230309 20:01:28.801"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 20:01:28.802" level="INFO">2023-03-09 20:00:41 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.20.0.2:8032
2023-03-09 20:00:42 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2023-03-09 20:00:42 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2023-03-09 20:00:42 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2023-03-09 20:00:42 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2023-03-09 20:00:43 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-03-09 20:00:44 INFO  FileInputFormat:292 - Total input files to process : 3
2023-03-09 20:00:44 INFO  JobSubmitter:202 - number of splits:3
2023-03-09 20:00:45 INFO  JobSubmitter:298 - Submitting tokens for job: job_1678391828466_0002
2023-03-09 20:00:45 INFO  JobSubmitter:299 - Executing with tokens: []
2023-03-09 20:00:45 INFO  Configuration:2795 - resource-types.xml not found
2023-03-09 20:00:45 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2023-03-09 20:00:45 INFO  YarnClientImpl:329 - Submitted application application_1678391828466_0002
2023-03-09 20:00:45 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1678391828466_0002/
2023-03-09 20:00:45 INFO  Job:1614 - Running job: job_1678391828466_0002
2023-03-09 20:00:55 INFO  Job:1635 - Job job_1678391828466_0002 running in uber mode : false
2023-03-09 20:00:55 INFO  Job:1642 -  map 0% reduce 0%
2023-03-09 20:01:05 INFO  Job:1642 -  map 33% reduce 0%
2023-03-09 20:01:13 INFO  Job:1642 -  map 67% reduce 0%
2023-03-09 20:01:21 INFO  Job:1642 -  map 100% reduce 0%
2023-03-09 20:01:27 INFO  Job:1642 -  map 100% reduce 100%
2023-03-09 20:01:28 INFO  Job:1653 - Job job_1678391828466_0002 completed successfully
2023-03-09 20:01:28 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=36183
		FILE: Number of bytes written=1013907
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=43868
		O3FS: Number of bytes written=25925
		O3FS: Number of read operations=14
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=65476
		Total time spent by all reduces in occupied slots (ms)=23124
		Total time spent by all map tasks (ms)=16369
		Total time spent by all reduce tasks (ms)=5781
		Total vcore-milliseconds taken by all map tasks=16369
		Total vcore-milliseconds taken by all reduce tasks=5781
		Total megabyte-milliseconds taken by all map tasks=67047424
		Total megabyte-milliseconds taken by all reduce tasks=23678976
	Map-Reduce Framework
		Map input records=1170
		Map output records=4644
		Map output bytes=59407
		Map output materialized bytes=36195
		Input split bytes=303
		Combine input records=4644
		Combine output records=1915
		Reduce input groups=1652
		Reduce shuffle bytes=36195
		Reduce input records=1915
		Reduce output records=1652
		Spilled Records=3830
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=931
		CPU time spent (ms)=10990
		Physical memory (bytes) snapshot=1544011776
		Virtual memory (bytes) snapshot=15840673792
		Total committed heap usage (bytes)=1322254336
		Peak Map Physical memory (bytes)=435634176
		Peak Map Virtual memory (bytes)=3954057216
		Peak Reduce Physical memory (bytes)=368238592
		Peak Reduce Virtual memory (bytes)=3978788864
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=43565
	File Output Format Counters 
		Bytes Written=25925</msg>
<status status="PASS" starttime="20230309 20:01:28.801" endtime="20230309 20:01:28.802"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 20:01:28.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230309 20:01:28.803" endtime="20230309 20:01:28.804"/>
</kw>
<status status="PASS" starttime="20230309 20:00:39.329" endtime="20230309 20:01:28.804"/>
</kw>
<msg timestamp="20230309 20:01:28.804" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 20:00:39.329" endtime="20230309 20:01:28.804"/>
</kw>
<msg timestamp="20230309 20:01:28.805" level="INFO">${output} = 2023-03-09 20:00:41 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.20.0.2:8032
2023-03-09 20:00:42 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" starttime="20230309 20:00:39.328" endtime="20230309 20:01:28.805"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 20:01:28.805" endtime="20230309 20:01:28.806"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 20:01:28.806" endtime="20230309 20:01:28.806"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230309 20:00:39.272" endtime="20230309 20:01:28.807"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20230309 19:59:44.261" endtime="20230309 20:01:28.809"/>
</suite>
<suite id="s1-s3-s3" name="hadoopfs-ofs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 20:01:35.520" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20230309 20:01:35.520" endtime="20230309 20:01:35.521"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 20:01:35.521" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20230309 20:01:35.521" endtime="20230309 20:01:35.521"/>
</kw>
<status status="PASS" starttime="20230309 20:01:35.519" endtime="20230309 20:01:35.522"/>
</kw>
<msg timestamp="20230309 20:01:35.522" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20230309 20:01:35.519" endtime="20230309 20:01:35.522"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230309 20:01:35.523" endtime="20230309 20:01:35.523"/>
</kw>
<msg timestamp="20230309 20:01:35.523" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20230309 20:01:35.522" endtime="20230309 20:01:35.523"/>
</kw>
<status status="PASS" starttime="20230309 20:01:35.518" endtime="20230309 20:01:35.524"/>
</kw>
<msg timestamp="20230309 20:01:35.524" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20230309 20:01:35.517" endtime="20230309 20:01:35.524"/>
</kw>
<msg timestamp="20230309 20:01:35.524" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20230309 20:01:35.514" endtime="20230309 20:01:35.524"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 20:01:35.525" level="INFO">${random} = 84259</msg>
<status status="PASS" starttime="20230309 20:01:35.524" endtime="20230309 20:01:35.525"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 20:01:35.532" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-84259 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 20:01:40.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 20:01:40.858" level="INFO">${output} = 2023-03-09 20:01:38 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2023-03-09 20:01:38 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2023...</msg>
<status status="PASS" starttime="20230309 20:01:35.527" endtime="20230309 20:01:40.859"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 20:01:40.860" level="INFO">2023-03-09 20:01:38 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2023-03-09 20:01:38 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2023-03-09 20:01:38 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2023-03-09 20:01:39 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230309 20:01:40.859" endtime="20230309 20:01:40.860"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 20:01:40.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230309 20:01:40.860" endtime="20230309 20:01:40.861"/>
</kw>
<status status="PASS" starttime="20230309 20:01:35.526" endtime="20230309 20:01:40.861"/>
</kw>
<msg timestamp="20230309 20:01:40.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 20:01:35.526" endtime="20230309 20:01:40.861"/>
</kw>
<msg timestamp="20230309 20:01:40.862" level="INFO">${result} = 2023-03-09 20:01:38 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2023-03-09 20:01:38 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2023...</msg>
<status status="PASS" starttime="20230309 20:01:35.525" endtime="20230309 20:01:40.862"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>multiple SLF4J bindings</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 20:01:40.862" endtime="20230309 20:01:40.862"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 20:01:40.868" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 20:01:43.690" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 20:01:43.690" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2023-03-09 19:58 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2023-03-09 19:59 ofs://om/volume1/bucket1/ozone-25712
-rw-...</msg>
<status status="PASS" starttime="20230309 20:01:40.865" endtime="20230309 20:01:43.691"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 20:01:43.692" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2023-03-09 19:58 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2023-03-09 19:59 ofs://om/volume1/bucket1/ozone-25712
-rw-rw-rw-   3 hadoop hadoop      21943 2023-03-09 20:01 ofs://om/volume1/bucket1/ozone-84259
drwxrwxrwx   - hadoop hadoop          0 2023-03-09 19:59 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2023-03-09 20:01 ofs://om/volume1/bucket1/wordcount-B9kJGbEs.txt</msg>
<status status="PASS" starttime="20230309 20:01:43.691" endtime="20230309 20:01:43.692"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 20:01:43.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230309 20:01:43.692" endtime="20230309 20:01:43.693"/>
</kw>
<status status="PASS" starttime="20230309 20:01:40.865" endtime="20230309 20:01:43.693"/>
</kw>
<msg timestamp="20230309 20:01:43.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 20:01:40.863" endtime="20230309 20:01:43.695"/>
</kw>
<msg timestamp="20230309 20:01:43.695" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2023-03-09 19:58 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2023-03-09 19:59 ofs://om/volume1/bucket1/ozone-25712
-rw-...</msg>
<status status="PASS" starttime="20230309 20:01:40.863" endtime="20230309 20:01:43.695"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 20:01:43.696" endtime="20230309 20:01:43.696"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 20:01:43.701" level="INFO">Running command 'hdfs dfs -cat ofs://om/volume1/bucket1/ozone-84259 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 20:01:48.399" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 20:01:48.399" level="INFO">${output} = 2023-03-09 20:01:46 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2023-03-09 20:01:46 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2023...</msg>
<status status="PASS" starttime="20230309 20:01:43.699" endtime="20230309 20:01:48.399"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 20:01:48.401" level="INFO">2023-03-09 20:01:46 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2023-03-09 20:01:46 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2023-03-09 20:01:46 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
This product includes software developed by The Apache Software
Foundation (http://www.apache.org/).

The binary distribution of this product bundles binaries of
org.iq80.leveldb:leveldb-api (https://github.com/dain/leveldb), which has the
following notices:
* Copyright 2011 Dain Sundstrom &lt;dain@iq80.com&gt;
* Copyright 2011 FuseSource Corp. http://fusesource.com

The binary distribution of this product bundles binaries of
AWS SDK for Java - Bundle 1.11.563 (https://github.com/aws/aws-sdk-java),
which has the following notices:

This software includes third party software subject to the following copyrights:
- XML parsing and utility functions from JetS3t - Copyright 2006-2009 James Murty.
- PKCS#1 PEM encoded private key parsing and utility functions from oauth.googlecode.com - Copyright 1998-2010 AOL Inc.

The binary distribution of this product bundles binaries of
Gson 2.2.4,
which has the following notices:

                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * http://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'ArrayDeque', written by Josh
Bloch of Google, Inc:

  * LICENSE:
    * license/LICENSE.deque.txt (Public Domain)

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified version of Roland Kuhn's ASL2
AbstractNodeQueue, which is based on Dmitriy Vyukov's non-intrusive MPSC queue.
It can be obtained at:

  * LICENSE:
    * license/LICENSE.abstractnodequeue.txt (Public Domain)
  * HOMEPAGE:
    * https://github.com/akka/akka/blob/wip-2.2.3-for-scala-2.11/akka-actor/src/main/java/akka/dispatch/AbstractNodeQueue.java

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/libdivsufsort/

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/protobuf/

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/snappy/

This product contains a modified portion of UnsignedBytes LexicographicalComparator
from Guava v21 project by Google Inc, which can be obtained at:

  * LICENSE:
    * license/COPYING (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/google/guava

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (GNU LGPL 2.1)
  * HOMEPAGE:
    * http://www.jboss.org/jbossmarshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://code.google.com/p/caliper/

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/

This product contains a modified portion of 'JDOM 1.1', which can be obtained at:

  * LICENSE:
    * https://github.com/hunterhacker/jdom/blob/jdom-1.1/core/LICENSE.txt
  * HOMEPAGE:
    * http://www.jdom.org/

The binary distribution of this product bundles binaries of
Commons Codec 1.4,
which has the following notices:
 * src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.javacontains test data from http://aspell.net/test/orig/batch0.tab.Copyright (C) 2002 Kevin Atkinson (kevina@gnu.org)
  ===============================================================================
  The content of package org.apache.commons.codec.language.bm has been translated
  from the original php source code available at http://stevemorse.org/phoneticinfo.htm
  with permission from the original authors.
  Original source copyright:Copyright (c) 2008 Alexander Beider &amp; Stephen P. Morse.

The binary distribution of this product bundles binaries of
Commons Lang 2.6,
which has the following notices:
 * This product includes software from the Spring Framework,under the Apache License 2.0 (see: StringUtils.containsWhitespace())

The binary distribution of this product bundles binaries of
Apache Log4j 1.2.17,
which has the following notices:
 * ResolverUtil.java
    Copyright 2005-2006 Tim Fennell
  Dumbster SMTP test server
    Copyright 2004 Jason Paul Kitchen
  TypeUtil.java
    Copyright 2002-2012 Ramnivas Laddad, Juergen Hoeller, Chris Beams

The binary distribution of this product bundles binaries of
"Java Concurrency in Practice" book annotations 1.0,
which has the following notices:
 * Copyright (c) 2005 Brian Goetz and Tim Peierls Released under the Creative
  Commons Attribution License (http://creativecommons.org/licenses/by/2.5)
  Official home: http://www.jcip.net Any republication or derived work
  distributed in source code form must include this copyright and license
  notice.

The binary distribution of this product bundles binaries of
Jetty :: Http Utility 9.3.19.,
Jetty :: IO Utility 9.3.19.,
Jetty :: Security 9.3.19.,
Jetty :: Server Core 9.3.19.,
Jetty :: Servlet Handling 9.3.19.,
Jetty :: Utilities 9.3.19.,
Jetty :: Utilities :: Ajax,
Jetty :: Webapp Application Support 9.3.19.,
Jetty :: XML utilities 9.3.19.,
which has the following notices:
 * ==============================================================
    Jetty Web Container
    Copyright 1995-2016 Mort Bay Consulting Pty Ltd.
   ==============================================================

   The Jetty Web Container is Copyright Mort Bay Consulting Pty Ltd
   unless otherwise noted.

   Jetty is dual licensed under both

     * The Apache 2.0 License
       http://www.apache.org/licenses/LICENSE-2.0.html

         and

     * The Eclipse Public 1.0 License
       http://www.eclipse.org/legal/epl-v10.html

   Jetty may be distributed under either license.

   ------
   Eclipse

   The following artifacts are EPL.
    * org.eclipse.jetty.orbit:org.eclipse.jdt.core

   The following artifacts are EPL and ASL2.
    * org.eclipse.jetty.orbit:javax.security.auth.message


   The following artifacts are EPL and CDDL 1.0.
    * org.eclipse.jetty.orbit:javax.mail.glassfish


   ------
   Oracle

   The following artifacts are CDDL + GPLv2 with classpath exception.
   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

    * javax.servlet:javax.servlet-api
    * javax.annotation:javax.annotation-api
    * javax.transaction:javax.transaction-api
    * javax.websocket:javax.websocket-api

   ------
   Oracle OpenJDK

   If ALPN is used to negotiate HTTP/2 connections, then the following
   artifacts may be included in the distribution or downloaded when ALPN
   module is selected.

    * java.sun.security.ssl

   These artifacts replace/modify OpenJDK classes.  The modififications
   are hosted at github and both modified and original are under GPL v2 with
   classpath exceptions.
   http://openjdk.java.net/legal/gplv2+ce.html


   ------
   OW2

   The following artifacts are licensed by the OW2 Foundation according to the
   terms of http://asm.ow2.org/license.html

   org.ow2.asm:asm-commons
   org.ow2.asm:asm


   ------
   Apache

   The following artifacts are ASL2 licensed.

   org.apache.taglibs:taglibs-standard-spec
   org.apache.taglibs:taglibs-standard-impl


   ------
   MortBay

   The following artifacts are ASL2 licensed.  Based on selected classes from
   following Apache Tomcat jars, all ASL2 licensed.

   org.mortbay.jasper:apache-jsp
     org.apache.tomcat:tomcat-jasper
     org.apache.tomcat:tomcat-juli
     org.apache.tomcat:tomcat-jsp-api
     org.apache.tomcat:tomcat-el-api
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-api
     org.apache.tomcat:tomcat-util-scan
     org.apache.tomcat:tomcat-util

   org.mortbay.jasper:apache-el
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-el-api


   ------
   Mortbay

   The following artifacts are CDDL + GPLv2 with classpath exception.

   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

   org.eclipse.jetty.toolchain:jetty-schemas

   ------
   Assorted

   The UnixCrypt.java code implements the one way cryptography used by
   Unix systems for simple password protection.  Copyright 1996 Aki Yoshida,
   modified April 2001  by Iris Van den Broeke, Daniel Deville.
   Permission to use, copy, modify and distribute UnixCrypt
   for non-commercial or commercial purposes and without fee is
   granted provided that the copyright notice appears in all copies./

The binary distribution of this product bundles binaries of
Snappy for Java 1.0.4.1,
which has the following notices:
 * This product includes software developed by Google
    Snappy: http://code.google.com/p/snappy/ (New BSD License)

   This product includes software developed by Apache
    PureJavaCrc32C from apache-hadoop-common http://hadoop.apache.org/
    (Apache 2.0 license)

   This library containd statically linked libstdc++. This inclusion is allowed by
   "GCC RUntime Library Exception"
   http://gcc.gnu.org/onlinedocs/libstdc++/manual/license.html

   == Contributors ==
     * Tatu Saloranta
       * Providing benchmark suite
     * Alec Wysoker
       * Performance and memory usage improvement

The binary distribution of this product bundles binaries of
Xerces2 Java Parser 2.9.1,
which has the following notices:
 * =========================================================================
   ==  NOTICE file corresponding to section 4(d) of the Apache License,   ==
   ==  Version 2.0, in this case for the Apache Xerces Java distribution. ==
   =========================================================================

   Apache Xerces Java
   Copyright 1999-2007 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   Portions of this software were originally based on the following:
     - software copyright (c) 1999, IBM Corporation., http://www.ibm.com.
     - software copyright (c) 1999, Sun Microsystems., http://www.sun.com.
     - voluntary contributions made by Paul Eng on behalf of the
       Apache Software Foundation that were originally developed at iClick, Inc.,
       software copyright (c) 1999.

The binary distribution of this product bundles binaries of
Logback Classic Module 1.1.2,
Logback Core Module 1.1.2,
which has the following notices:
 * Logback: the reliable, generic, fast and flexible logging framework.
   Copyright (C) 1999-2012, QOS.ch. All rights reserved.

The binary distribution of this product bundles binaries of
Apache HBase - Annotations 1.2.6,
Apache HBase - Client 1.2.6,
Apache HBase - Common 1.2.6,
Apache HBase - Hadoop Compatibility 1.2.6,
Apache HBase - Hadoop Two Compatibility 1.2.6,
Apache HBase - Prefix Tree 1.2.6,
Apache HBase - Procedure 1.2.6,
Apache HBase - Protocol 1.2.6,
Apache HBase - Server 1.2.6,
which has the following notices:
 * Apache HBase
   Copyright 2007-2015 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   --
   This product incorporates portions of the 'Hadoop' project

   Copyright 2007-2009 The Apache Software Foundation

   Licensed under the Apache License v2.0
   --
   Our Orca logo we got here: http://www.vectorfree.com/jumping-orca
   It is licensed Creative Commons Attribution 3.0.
   See https://creativecommons.org/licenses/by/3.0/us/
   We changed the logo by stripping the colored background, inverting
   it and then rotating it some.

   Later we found that vectorfree.com image is not properly licensed.
   The original is owned by vectorportal.com. The original was
   relicensed so we could use it as Creative Commons Attribution 3.0.
   The license is bundled with the download available here:
   http://www.vectorportal.com/subcategory/205/KILLER-WHALE-FREE-VECTOR.eps/ifile/9136/detailtest.asp
   --
   This product includes portions of the Bootstrap project v3.0.0

   Copyright 2013 Twitter, Inc.

   Licensed under the Apache License v2.0

   This product uses the Glyphicons Halflings icon set.

   http://glyphicons.com/

   Copyright Jan Kovařík

   Licensed under the Apache License v2.0 as a part of the Bootstrap project.

   --
   This product includes portions of the Guava project v14, specifically
   'hbase-common/src/main/java/org/apache/hadoop/hbase/io/LimitInputStream.java'

   Copyright (C) 2007 The Guava Authors

   Licensed under the Apache License, Version 2.0

The binary distribution of this product bundles binaries of
Phoenix Core 4.7.0,
which has the following notices:
   Apache Phoenix
   Copyright 2013-2016 The Apache Software Foundation

   This product includes software developed by The Apache Software
   Foundation (http://www.apache.org/).

   This also includes:

   The phoenix-spark module has been adapted from the phoenix-spark library
   distributed under the terms of the Apache 2 license. Original source copyright:
   Copyright 2014 Simply Measured, Inc.
   Copyright 2015 Interset Software Inc.

   The file bin/daemon.py is based on the file of the same name in python-daemon 2.0.5
   (https://pypi.python.org/pypi/python-daemon/). Original source copyright:
   # Copyright © 2008–2015 Ben Finney &lt;ben+python@benfinney.id.au&gt;
   # Copyright © 2007–2008 Robert Niederreiter, Jens Klein
   # Copyright © 2004–2005 Chad J. Schroeder
   # Copyright © 2003 Clark Evans
   # Copyright © 2002 Noah Spurrier
   # Copyright © 2001 Jürgen Hermann

The binary distribution of this product bundles binaries of
Plexus Cipher: encryption/decryption Component 1.4,
which has the following notices:
 * The code in this component contains a class - Base64 taken from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/Base64.java
   which is Apache license: http://www.apache.org/licenses/LICENSE-2.0

   The PBE key processing routine PBECipher.createCipher() is adopted from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/OpenSSL.java
    which is also Apache APL-2.0 license: http://www.apache.org/licenses/LICENSE-2.0

The binary distribution of this product bundles binaries of
software.amazon.ion:ion-java 1.0.1,
which has the following notices:
 * Amazon Ion Java Copyright 2007-2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.

The binary distribution of this product bundles binaries of
joda-time:joda-time:2.9.9
which has the following notices:
 * =============================================================================
   = NOTICE file corresponding to section 4d of the Apache License Version 2.0 =
   =============================================================================
   This product includes software developed by
   Joda.org (http://www.joda.org/).

The binary distribution of this product bundles binaries of
Ehcache 3.3.1,
which has the following notices:
 * Ehcache V3 Copyright 2014-2016 Terracotta, Inc.

The binary distribution of this product bundles binaries of
snakeyaml (https://bitbucket.org/asomov/snakeyaml),
which has the following notices:
 * Copyright (c) 2008, http://www.snakeyaml.org

The binary distribution of this product bundles binaries of
swagger-annotations (https://github.com/swagger-api/swagger-core),
which has the following notices:
 * Copyright 2016 SmartBear Software

The binary distribution of this product bundles binaries of
metrics-core 3.2.4
which has the following notices:
 * Copyright 2010-2013 Coda Hale and Yammer, Inc.

   This product includes software developed by Coda Hale and Yammer, Inc.

   This product includes code derived from the JSR-166 project (ThreadLocalRandom, Striped64,
   LongAdder), which was released with the following comments:

   Written by Doug Lea with assistance from members of JCP JSR-166
   Expert Group and released to the public domain, as explained at
   http://creativecommons.org/publicdomain/zero/1.0/</msg>
<status status="PASS" starttime="20230309 20:01:48.400" endtime="20230309 20:01:48.401"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 20:01:48.402" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230309 20:01:48.401" endtime="20230309 20:01:48.402"/>
</kw>
<status status="PASS" starttime="20230309 20:01:43.698" endtime="20230309 20:01:48.403"/>
</kw>
<msg timestamp="20230309 20:01:48.403" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 20:01:43.697" endtime="20230309 20:01:48.403"/>
</kw>
<msg timestamp="20230309 20:01:48.405" level="INFO">${result} = 2023-03-09 20:01:46 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2023-03-09 20:01:46 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2023...</msg>
<status status="PASS" starttime="20230309 20:01:43.697" endtime="20230309 20:01:48.405"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 20:01:48.405" endtime="20230309 20:01:48.406"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 20:01:35.513" endtime="20230309 20:01:48.406"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20230309 20:01:35.440" endtime="20230309 20:01:48.408"/>
</suite>
<suite id="s1-s3-s4" name="mapreduce-ofs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 20:01:54.730" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 20:01:54.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 20:01:54.737" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20230309 20:01:54.726" endtime="20230309 20:01:54.737"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 20:01:54.738" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20230309 20:01:54.737" endtime="20230309 20:01:54.738"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 20:01:54.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230309 20:01:54.739" endtime="20230309 20:01:54.739"/>
</kw>
<status status="PASS" starttime="20230309 20:01:54.725" endtime="20230309 20:01:54.740"/>
</kw>
<msg timestamp="20230309 20:01:54.740" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 20:01:54.725" endtime="20230309 20:01:54.740"/>
</kw>
<msg timestamp="20230309 20:01:54.740" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20230309 20:01:54.724" endtime="20230309 20:01:54.741"/>
</kw>
<msg timestamp="20230309 20:01:54.742" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20230309 20:01:54.723" endtime="20230309 20:01:54.742"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 20:01:54.748" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20230309 20:01:54.747" endtime="20230309 20:01:54.748"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 20:01:54.748" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20230309 20:01:54.748" endtime="20230309 20:01:54.749"/>
</kw>
<status status="PASS" starttime="20230309 20:01:54.746" endtime="20230309 20:01:54.749"/>
</kw>
<msg timestamp="20230309 20:01:54.749" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20230309 20:01:54.745" endtime="20230309 20:01:54.749"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230309 20:01:54.750" endtime="20230309 20:01:54.750"/>
</kw>
<msg timestamp="20230309 20:01:54.750" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20230309 20:01:54.749" endtime="20230309 20:01:54.750"/>
</kw>
<status status="PASS" starttime="20230309 20:01:54.745" endtime="20230309 20:01:54.751"/>
</kw>
<msg timestamp="20230309 20:01:54.751" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20230309 20:01:54.744" endtime="20230309 20:01:54.751"/>
</kw>
<msg timestamp="20230309 20:01:54.751" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20230309 20:01:54.742" endtime="20230309 20:01:54.751"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 20:01:54.756" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 20:02:43.101" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 20:02:43.101" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2023-03-09 20:01:57 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2023-03-09 20:01:57 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20230309 20:01:54.753" endtime="20230309 20:02:43.101"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 20:02:43.103" level="INFO">Number of Maps  = 3
Samples per Map = 3
2023-03-09 20:01:57 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2023-03-09 20:01:57 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2023-03-09 20:01:57 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2023-03-09 20:01:58 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2023-03-09 20:01:59 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.20.0.2:8032
2023-03-09 20:02:00 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2023-03-09 20:02:00 INFO  FileInputFormat:292 - Total input files to process : 3
2023-03-09 20:02:00 INFO  JobSubmitter:202 - number of splits:3
2023-03-09 20:02:00 INFO  JobSubmitter:298 - Submitting tokens for job: job_1678391828466_0003
2023-03-09 20:02:00 INFO  JobSubmitter:299 - Executing with tokens: []
2023-03-09 20:02:01 INFO  Configuration:2795 - resource-types.xml not found
2023-03-09 20:02:01 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2023-03-09 20:02:01 INFO  YarnClientImpl:329 - Submitted application application_1678391828466_0003
2023-03-09 20:02:01 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1678391828466_0003/
2023-03-09 20:02:01 INFO  Job:1614 - Running job: job_1678391828466_0003
2023-03-09 20:02:11 INFO  Job:1635 - Job job_1678391828466_0003 running in uber mode : false
2023-03-09 20:02:11 INFO  Job:1642 -  map 0% reduce 0%
2023-03-09 20:02:19 INFO  Job:1642 -  map 33% reduce 0%
2023-03-09 20:02:26 INFO  Job:1642 -  map 67% reduce 0%
2023-03-09 20:02:33 INFO  Job:1642 -  map 100% reduce 0%
2023-03-09 20:02:41 INFO  Job:1642 -  map 100% reduce 100%
2023-03-09 20:02:42 INFO  Job:1653 - Job job_1678391828466_0003 completed successfully
2023-03-09 20:02:42 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=942813
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=62132
		Total time spent by all reduces in occupied slots (ms)=24632
		Total time spent by all map tasks (ms)=15533
		Total time spent by all reduce tasks (ms)=6158
		Total vcore-milliseconds taken by all map tasks=15533
		Total vcore-milliseconds taken by all reduce tasks=6158
		Total megabyte-milliseconds taken by all map tasks=63623168
		Total megabyte-milliseconds taken by all reduce tasks=25223168
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=887
		CPU time spent (ms)=10800
		Physical memory (bytes) snapshot=1645883392
		Virtual memory (bytes) snapshot=15845142528
		Total committed heap usage (bytes)=1423441920
		Peak Map Physical memory (bytes)=431734784
		Peak Map Virtual memory (bytes)=3955949568
		Peak Reduce Physical memory (bytes)=357855232
		Peak Reduce Virtual memory (bytes)=3985842176
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 42.565 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20230309 20:02:43.102" endtime="20230309 20:02:43.103"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 20:02:43.103" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230309 20:02:43.103" endtime="20230309 20:02:43.104"/>
</kw>
<status status="PASS" starttime="20230309 20:01:54.753" endtime="20230309 20:02:43.104"/>
</kw>
<msg timestamp="20230309 20:02:43.104" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 20:01:54.752" endtime="20230309 20:02:43.104"/>
</kw>
<msg timestamp="20230309 20:02:43.105" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2023-03-09 20:01:57 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2023-03-09 20:01:57 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20230309 20:01:54.751" endtime="20230309 20:02:43.105"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 20:02:43.105" endtime="20230309 20:02:43.105"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>multiple SLF4J bindings</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 20:02:43.106" endtime="20230309 20:02:43.106"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230309 20:01:54.721" endtime="20230309 20:02:43.106"/>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 20:02:43.114" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 20:02:43.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 20:02:43.121" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20230309 20:02:43.111" endtime="20230309 20:02:43.121"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 20:02:43.122" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20230309 20:02:43.122" endtime="20230309 20:02:43.122"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 20:02:43.123" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230309 20:02:43.123" endtime="20230309 20:02:43.123"/>
</kw>
<status status="PASS" starttime="20230309 20:02:43.110" endtime="20230309 20:02:43.124"/>
</kw>
<msg timestamp="20230309 20:02:43.124" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 20:02:43.110" endtime="20230309 20:02:43.124"/>
</kw>
<msg timestamp="20230309 20:02:43.124" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20230309 20:02:43.110" endtime="20230309 20:02:43.124"/>
</kw>
<msg timestamp="20230309 20:02:43.125" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20230309 20:02:43.109" endtime="20230309 20:02:43.125"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 20:02:43.125" level="INFO">${random} = 0BXAPY4b</msg>
<status status="PASS" starttime="20230309 20:02:43.125" endtime="20230309 20:02:43.125"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 20:02:43.131" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20230309 20:02:43.130" endtime="20230309 20:02:43.131"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 20:02:43.131" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20230309 20:02:43.131" endtime="20230309 20:02:43.131"/>
</kw>
<status status="PASS" starttime="20230309 20:02:43.130" endtime="20230309 20:02:43.132"/>
</kw>
<msg timestamp="20230309 20:02:43.132" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20230309 20:02:43.129" endtime="20230309 20:02:43.132"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230309 20:02:43.133" endtime="20230309 20:02:43.133"/>
</kw>
<msg timestamp="20230309 20:02:43.133" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20230309 20:02:43.132" endtime="20230309 20:02:43.133"/>
</kw>
<status status="PASS" starttime="20230309 20:02:43.128" endtime="20230309 20:02:43.133"/>
</kw>
<msg timestamp="20230309 20:02:43.134" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20230309 20:02:43.127" endtime="20230309 20:02:43.134"/>
</kw>
<msg timestamp="20230309 20:02:43.134" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20230309 20:02:43.126" endtime="20230309 20:02:43.134"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 20:02:43.138" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20230309 20:02:43.137" endtime="20230309 20:02:43.138"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 20:02:43.139" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20230309 20:02:43.138" endtime="20230309 20:02:43.139"/>
</kw>
<status status="PASS" starttime="20230309 20:02:43.137" endtime="20230309 20:02:43.139"/>
</kw>
<msg timestamp="20230309 20:02:43.139" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20230309 20:02:43.136" endtime="20230309 20:02:43.139"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 20:02:43.141" level="INFO">${first} = i</msg>
<status status="PASS" starttime="20230309 20:02:43.140" endtime="20230309 20:02:43.141"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 20:02:43.142" level="INFO">${result} = /input/</msg>
<status status="PASS" starttime="20230309 20:02:43.141" endtime="20230309 20:02:43.142"/>
</kw>
<status status="PASS" starttime="20230309 20:02:43.140" endtime="20230309 20:02:43.142"/>
</kw>
<msg timestamp="20230309 20:02:43.142" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" starttime="20230309 20:02:43.139" endtime="20230309 20:02:43.142"/>
</kw>
<status status="PASS" starttime="20230309 20:02:43.135" endtime="20230309 20:02:43.143"/>
</kw>
<msg timestamp="20230309 20:02:43.143" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20230309 20:02:43.135" endtime="20230309 20:02:43.143"/>
</kw>
<msg timestamp="20230309 20:02:43.143" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20230309 20:02:43.134" endtime="20230309 20:02:43.143"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 20:02:43.150" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20230309 20:02:43.150" endtime="20230309 20:02:43.150"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 20:02:43.151" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20230309 20:02:43.151" endtime="20230309 20:02:43.151"/>
</kw>
<status status="PASS" starttime="20230309 20:02:43.149" endtime="20230309 20:02:43.151"/>
</kw>
<msg timestamp="20230309 20:02:43.152" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20230309 20:02:43.149" endtime="20230309 20:02:43.152"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 20:02:43.155" level="INFO">${first} = w</msg>
<status status="PASS" starttime="20230309 20:02:43.153" endtime="20230309 20:02:43.156"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 20:02:43.156" level="INFO">${result} = /wordcount-0BXAPY4b.txt</msg>
<status status="PASS" starttime="20230309 20:02:43.156" endtime="20230309 20:02:43.156"/>
</kw>
<status status="PASS" starttime="20230309 20:02:43.152" endtime="20230309 20:02:43.157"/>
</kw>
<msg timestamp="20230309 20:02:43.157" level="INFO">${path_with_leading} = /wordcount-0BXAPY4b.txt</msg>
<status status="PASS" starttime="20230309 20:02:43.152" endtime="20230309 20:02:43.157"/>
</kw>
<status status="PASS" starttime="20230309 20:02:43.147" endtime="20230309 20:02:43.157"/>
</kw>
<msg timestamp="20230309 20:02:43.157" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-0BXAPY4b.txt</msg>
<status status="PASS" starttime="20230309 20:02:43.146" endtime="20230309 20:02:43.157"/>
</kw>
<msg timestamp="20230309 20:02:43.158" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-0BXAPY4b.txt</msg>
<status status="PASS" starttime="20230309 20:02:43.143" endtime="20230309 20:02:43.158"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 20:02:43.163" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-0BXAPY4b.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 20:03:34.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 20:03:34.005" level="INFO">${output} = 2023-03-09 20:02:45 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.20.0.2:8032
2023-03-09 20:02:46 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" starttime="20230309 20:02:43.159" endtime="20230309 20:03:34.005"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 20:03:34.006" level="INFO">2023-03-09 20:02:45 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.20.0.2:8032
2023-03-09 20:02:46 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2023-03-09 20:02:46 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2023-03-09 20:02:46 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2023-03-09 20:02:46 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2023-03-09 20:02:47 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-03-09 20:02:48 INFO  FileInputFormat:292 - Total input files to process : 3
2023-03-09 20:02:49 INFO  JobSubmitter:202 - number of splits:3
2023-03-09 20:02:49 INFO  JobSubmitter:298 - Submitting tokens for job: job_1678391828466_0004
2023-03-09 20:02:49 INFO  JobSubmitter:299 - Executing with tokens: []
2023-03-09 20:02:49 INFO  Configuration:2795 - resource-types.xml not found
2023-03-09 20:02:49 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2023-03-09 20:02:49 INFO  YarnClientImpl:329 - Submitted application application_1678391828466_0004
2023-03-09 20:02:49 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1678391828466_0004/
2023-03-09 20:02:49 INFO  Job:1614 - Running job: job_1678391828466_0004
2023-03-09 20:03:01 INFO  Job:1635 - Job job_1678391828466_0004 running in uber mode : false
2023-03-09 20:03:01 INFO  Job:1642 -  map 0% reduce 0%
2023-03-09 20:03:10 INFO  Job:1642 -  map 33% reduce 0%
2023-03-09 20:03:17 INFO  Job:1642 -  map 67% reduce 0%
2023-03-09 20:03:24 INFO  Job:1642 -  map 100% reduce 0%
2023-03-09 20:03:32 INFO  Job:1642 -  map 100% reduce 100%
2023-03-09 20:03:33 INFO  Job:1653 - Job job_1678391828466_0004 completed successfully
2023-03-09 20:03:33 INFO  Job:1660 - Counters: 54
	File System Counters
		FILE: Number of bytes read=36183
		FILE: Number of bytes written=1013823
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=43865
		OFS: Number of bytes written=25925
		OFS: Number of read operations=14
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Killed map tasks=1
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=64984
		Total time spent by all reduces in occupied slots (ms)=23152
		Total time spent by all map tasks (ms)=16246
		Total time spent by all reduce tasks (ms)=5788
		Total vcore-milliseconds taken by all map tasks=16246
		Total vcore-milliseconds taken by all reduce tasks=5788
		Total megabyte-milliseconds taken by all map tasks=66543616
		Total megabyte-milliseconds taken by all reduce tasks=23707648
	Map-Reduce Framework
		Map input records=1170
		Map output records=4644
		Map output bytes=59407
		Map output materialized bytes=36195
		Input split bytes=300
		Combine input records=4644
		Combine output records=1915
		Reduce input groups=1652
		Reduce shuffle bytes=36195
		Reduce input records=1915
		Reduce output records=1652
		Spilled Records=3830
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=876
		CPU time spent (ms)=11010
		Physical memory (bytes) snapshot=1642741760
		Virtual memory (bytes) snapshot=15846395904
		Total committed heap usage (bytes)=1407713280
		Peak Map Physical memory (bytes)=436191232
		Peak Map Virtual memory (bytes)=3954622464
		Peak Reduce Physical memory (bytes)=344068096
		Peak Reduce Virtual memory (bytes)=3985010688
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=43565
	File Output Format Counters 
		Bytes Written=25925</msg>
<status status="PASS" starttime="20230309 20:03:34.005" endtime="20230309 20:03:34.006"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 20:03:34.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230309 20:03:34.006" endtime="20230309 20:03:34.007"/>
</kw>
<status status="PASS" starttime="20230309 20:02:43.159" endtime="20230309 20:03:34.007"/>
</kw>
<msg timestamp="20230309 20:03:34.007" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 20:02:43.158" endtime="20230309 20:03:34.008"/>
</kw>
<msg timestamp="20230309 20:03:34.008" level="INFO">${output} = 2023-03-09 20:02:45 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.20.0.2:8032
2023-03-09 20:02:46 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" starttime="20230309 20:02:43.158" endtime="20230309 20:03:34.008"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 20:03:34.009" endtime="20230309 20:03:34.009"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 20:03:34.009" endtime="20230309 20:03:34.010"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230309 20:02:43.108" endtime="20230309 20:03:34.010"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20230309 20:01:54.648" endtime="20230309 20:03:34.012"/>
</suite>
<suite id="s1-s3-s5" name="Createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-s3-s5-t1" name="Create test volume, bucket and key" line="38">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:58:07.704" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 19:58:16.944" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 19:58:16.944" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20230309 19:58:07.695" endtime="20230309 19:58:16.944"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 19:58:16.946" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20230309 19:58:16.945" endtime="20230309 19:58:16.946"/>
</kw>
<msg timestamp="20230309 19:58:16.946" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20230309 19:58:07.694" endtime="20230309 19:58:16.946"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create volume">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:58:16.954" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 19:58:23.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 19:58:23.335" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 19:58:16.951" endtime="20230309 19:58:23.335"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 19:58:23.342" level="INFO"/>
<status status="PASS" starttime="20230309 19:58:23.340" endtime="20230309 19:58:23.342"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 19:58:23.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 19:58:23.342" endtime="20230309 19:58:23.343"/>
</kw>
<status status="PASS" starttime="20230309 19:58:16.950" endtime="20230309 19:58:23.343"/>
</kw>
<msg timestamp="20230309 19:58:23.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 19:58:16.950" endtime="20230309 19:58:23.345"/>
</kw>
<msg timestamp="20230309 19:58:23.345" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 19:58:16.948" endtime="20230309 19:58:23.346"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 19:58:23.346" endtime="20230309 19:58:23.346"/>
</kw>
<status status="PASS" starttime="20230309 19:58:16.947" endtime="20230309 19:58:23.347"/>
</kw>
<status status="PASS" starttime="20230309 19:58:16.947" endtime="20230309 19:58:23.347"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/${bucket} --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:58:23.355" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 19:58:29.713" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 19:58:29.713" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 19:58:23.352" endtime="20230309 19:58:29.713"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 19:58:29.714" level="INFO"/>
<status status="PASS" starttime="20230309 19:58:29.713" endtime="20230309 19:58:29.714"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 19:58:29.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 19:58:29.714" endtime="20230309 19:58:29.715"/>
</kw>
<status status="PASS" starttime="20230309 19:58:23.350" endtime="20230309 19:58:29.715"/>
</kw>
<msg timestamp="20230309 19:58:29.715" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 19:58:23.349" endtime="20230309 19:58:29.716"/>
</kw>
<status status="PASS" starttime="20230309 19:58:23.348" endtime="20230309 19:58:29.716"/>
</kw>
<status status="PASS" starttime="20230309 19:58:23.348" endtime="20230309 19:58:29.717"/>
</kw>
<status status="PASS" starttime="20230309 19:58:23.347" endtime="20230309 19:58:29.717"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 19:58:29.717" endtime="20230309 19:58:29.717"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:58:29.722" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 19:58:35.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 19:58:35.734" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023-03-09T19:58...</msg>
<status status="PASS" starttime="20230309 19:58:29.720" endtime="20230309 19:58:35.734"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 19:58:35.736" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023-03-09T19:58:29.446Z",
  "modificationTime" : "2023-03-09T19:58:29.446Z",
  "quotaInBytes" : 1099511627776,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "hadoop",
  "link" : false
}</msg>
<status status="PASS" starttime="20230309 19:58:35.735" endtime="20230309 19:58:35.736"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 19:58:35.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 19:58:35.737" endtime="20230309 19:58:35.737"/>
</kw>
<status status="PASS" starttime="20230309 19:58:29.719" endtime="20230309 19:58:35.738"/>
</kw>
<msg timestamp="20230309 19:58:35.738" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 19:58:29.718" endtime="20230309 19:58:35.738"/>
</kw>
<msg timestamp="20230309 19:58:35.739" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023-03-09T19:58...</msg>
<status status="PASS" starttime="20230309 19:58:29.717" endtime="20230309 19:58:35.739"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 19:58:35.739" endtime="20230309 19:58:35.740"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 19:58:35.747" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230309 19:58:35.746" endtime="20230309 19:58:35.747"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 19:58:35.748" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20230309 19:58:35.747" endtime="20230309 19:58:35.748"/>
</kw>
<status status="PASS" starttime="20230309 19:58:35.745" endtime="20230309 19:58:35.748"/>
</kw>
<msg timestamp="20230309 19:58:35.748" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20230309 19:58:35.744" endtime="20230309 19:58:35.748"/>
</kw>
<status status="PASS" starttime="20230309 19:58:35.743" endtime="20230309 19:58:35.749"/>
</kw>
<msg timestamp="20230309 19:58:35.749" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20230309 19:58:35.741" endtime="20230309 19:58:35.749"/>
</kw>
<msg timestamp="20230309 19:58:35.749" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20230309 19:58:35.740" endtime="20230309 19:58:35.749"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:58:35.754" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 19:58:41.271" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 19:58:41.271" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 19:58:35.751" endtime="20230309 19:58:41.271"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 19:58:41.273" level="INFO"/>
<status status="PASS" starttime="20230309 19:58:41.272" endtime="20230309 19:58:41.273"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 19:58:41.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 19:58:41.273" endtime="20230309 19:58:41.274"/>
</kw>
<status status="PASS" starttime="20230309 19:58:35.750" endtime="20230309 19:58:41.274"/>
</kw>
<msg timestamp="20230309 19:58:41.274" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 19:58:35.750" endtime="20230309 19:58:41.275"/>
</kw>
<status status="PASS" starttime="20230309 19:58:35.750" endtime="20230309 19:58:41.275"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:58:41.280" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 19:58:52.494" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 19:58:52.494" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 19:58:41.277" endtime="20230309 19:58:52.494"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 19:58:52.496" level="INFO"/>
<status status="PASS" starttime="20230309 19:58:52.495" endtime="20230309 19:58:52.496"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 19:58:52.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 19:58:52.496" endtime="20230309 19:58:52.497"/>
</kw>
<status status="PASS" starttime="20230309 19:58:41.277" endtime="20230309 19:58:52.497"/>
</kw>
<msg timestamp="20230309 19:58:52.497" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 19:58:41.276" endtime="20230309 19:58:52.498"/>
</kw>
<status status="PASS" starttime="20230309 19:58:41.275" endtime="20230309 19:58:52.498"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:58:52.508" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 19:59:01.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 19:59:01.226" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 19:58:52.500" endtime="20230309 19:59:01.226"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 19:59:01.227" level="INFO"/>
<status status="PASS" starttime="20230309 19:59:01.226" endtime="20230309 19:59:01.227"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 19:59:01.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 19:59:01.227" endtime="20230309 19:59:01.228"/>
</kw>
<status status="PASS" starttime="20230309 19:58:52.499" endtime="20230309 19:59:01.229"/>
</kw>
<msg timestamp="20230309 19:59:01.229" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 19:58:52.499" endtime="20230309 19:59:01.229"/>
</kw>
<status status="PASS" starttime="20230309 19:58:52.498" endtime="20230309 19:59:01.230"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:59:01.235" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 19:59:10.035" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 19:59:10.036" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 19:59:01.232" endtime="20230309 19:59:10.036"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 19:59:10.037" level="INFO"/>
<status status="PASS" starttime="20230309 19:59:10.036" endtime="20230309 19:59:10.037"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 19:59:10.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 19:59:10.038" endtime="20230309 19:59:10.038"/>
</kw>
<status status="PASS" starttime="20230309 19:59:01.231" endtime="20230309 19:59:10.039"/>
</kw>
<msg timestamp="20230309 19:59:10.039" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 19:59:01.231" endtime="20230309 19:59:10.039"/>
</kw>
<status status="PASS" starttime="20230309 19:59:01.230" endtime="20230309 19:59:10.039"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230309 19:58:07.693" endtime="20230309 19:59:10.040"/>
</test>
<test id="s1-s3-s5-t2" name="Create user dir for hadoop" line="51">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 19:59:10.050" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230309 19:59:10.049" endtime="20230309 19:59:10.050"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 19:59:10.051" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20230309 19:59:10.051" endtime="20230309 19:59:10.051"/>
</kw>
<status status="PASS" starttime="20230309 19:59:10.048" endtime="20230309 19:59:10.052"/>
</kw>
<msg timestamp="20230309 19:59:10.052" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20230309 19:59:10.047" endtime="20230309 19:59:10.052"/>
</kw>
<status status="PASS" starttime="20230309 19:59:10.046" endtime="20230309 19:59:10.052"/>
</kw>
<msg timestamp="20230309 19:59:10.052" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20230309 19:59:10.045" endtime="20230309 19:59:10.053"/>
</kw>
<msg timestamp="20230309 19:59:10.053" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20230309 19:59:10.042" endtime="20230309 19:59:10.053"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:59:10.058" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 19:59:14.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 19:59:14.796" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 19:59:10.055" endtime="20230309 19:59:14.796"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 19:59:14.798" level="INFO"/>
<status status="PASS" starttime="20230309 19:59:14.797" endtime="20230309 19:59:14.798"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 19:59:14.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 19:59:14.798" endtime="20230309 19:59:14.799"/>
</kw>
<status status="PASS" starttime="20230309 19:59:10.054" endtime="20230309 19:59:14.799"/>
</kw>
<msg timestamp="20230309 19:59:14.799" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 19:59:10.054" endtime="20230309 19:59:14.800"/>
</kw>
<status status="PASS" starttime="20230309 19:59:10.053" endtime="20230309 19:59:14.800"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 19:59:14.805" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 19:59:19.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 19:59:19.574" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 19:59:14.802" endtime="20230309 19:59:19.575"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 19:59:19.576" level="INFO"/>
<status status="PASS" starttime="20230309 19:59:19.575" endtime="20230309 19:59:19.576"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 19:59:19.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 19:59:19.576" endtime="20230309 19:59:19.577"/>
</kw>
<status status="PASS" starttime="20230309 19:59:14.801" endtime="20230309 19:59:19.577"/>
</kw>
<msg timestamp="20230309 19:59:19.578" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 19:59:14.801" endtime="20230309 19:59:19.578"/>
</kw>
<status status="PASS" starttime="20230309 19:59:14.800" endtime="20230309 19:59:19.579"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230309 19:59:10.041" endtime="20230309 19:59:19.579"/>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" starttime="20230309 19:58:07.540" endtime="20230309 19:59:19.581"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="301316"/>
</suite>
<suite id="s1-s4" name="hadoop33">
<suite id="s1-s4-s1" name="hadoopfs-o3fs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s4-s1-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 20:06:59.817" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230309 20:06:59.816" endtime="20230309 20:06:59.817"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 20:06:59.817" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20230309 20:06:59.817" endtime="20230309 20:06:59.818"/>
</kw>
<status status="PASS" starttime="20230309 20:06:59.815" endtime="20230309 20:06:59.818"/>
</kw>
<msg timestamp="20230309 20:06:59.818" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20230309 20:06:59.814" endtime="20230309 20:06:59.818"/>
</kw>
<status status="PASS" starttime="20230309 20:06:59.814" endtime="20230309 20:06:59.818"/>
</kw>
<msg timestamp="20230309 20:06:59.818" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20230309 20:06:59.813" endtime="20230309 20:06:59.818"/>
</kw>
<msg timestamp="20230309 20:06:59.819" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20230309 20:06:59.811" endtime="20230309 20:06:59.819"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 20:06:59.819" level="INFO">${random} = 92556</msg>
<status status="PASS" starttime="20230309 20:06:59.819" endtime="20230309 20:06:59.819"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 20:06:59.828" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-92556 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 20:07:05.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 20:07:05.095" level="INFO">${output} = 2023-03-09 20:07:02 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2023-03-09 20:07:02 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2023...</msg>
<status status="PASS" starttime="20230309 20:06:59.821" endtime="20230309 20:07:05.095"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 20:07:05.097" level="INFO">2023-03-09 20:07:02 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2023-03-09 20:07:02 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2023-03-09 20:07:02 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2023-03-09 20:07:03 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230309 20:07:05.096" endtime="20230309 20:07:05.097"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 20:07:05.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230309 20:07:05.097" endtime="20230309 20:07:05.098"/>
</kw>
<status status="PASS" starttime="20230309 20:06:59.821" endtime="20230309 20:07:05.098"/>
</kw>
<msg timestamp="20230309 20:07:05.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 20:06:59.820" endtime="20230309 20:07:05.098"/>
</kw>
<msg timestamp="20230309 20:07:05.099" level="INFO">${result} = 2023-03-09 20:07:02 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2023-03-09 20:07:02 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2023...</msg>
<status status="PASS" starttime="20230309 20:06:59.820" endtime="20230309 20:07:05.099"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>multiple SLF4J bindings</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 20:07:05.099" endtime="20230309 20:07:05.099"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 20:07:05.104" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 20:07:07.777" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 20:07:07.777" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2023-03-09 20:06 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop       1541 2023-03-09 20:07 o3fs://bucket1.volume1.om/ozone-92556
dr...</msg>
<status status="PASS" starttime="20230309 20:07:05.102" endtime="20230309 20:07:07.777"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 20:07:07.779" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2023-03-09 20:06 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop       1541 2023-03-09 20:07 o3fs://bucket1.volume1.om/ozone-92556
drwxrwxrwx   - hadoop hadoop          0 2023-03-09 20:06 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20230309 20:07:07.778" endtime="20230309 20:07:07.779"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 20:07:07.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230309 20:07:07.779" endtime="20230309 20:07:07.780"/>
</kw>
<status status="PASS" starttime="20230309 20:07:05.101" endtime="20230309 20:07:07.780"/>
</kw>
<msg timestamp="20230309 20:07:07.780" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 20:07:05.101" endtime="20230309 20:07:07.780"/>
</kw>
<msg timestamp="20230309 20:07:07.780" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2023-03-09 20:06 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop       1541 2023-03-09 20:07 o3fs://bucket1.volume1.om/ozone-92556
dr...</msg>
<status status="PASS" starttime="20230309 20:07:05.100" endtime="20230309 20:07:07.781"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 20:07:07.781" endtime="20230309 20:07:07.781"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 20:07:07.786" level="INFO">Running command 'hdfs dfs -cat o3fs://bucket1.volume1.om//ozone-92556 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 20:07:12.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 20:07:12.710" level="INFO">${output} = 2023-03-09 20:07:10 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2023-03-09 20:07:10 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2023...</msg>
<status status="PASS" starttime="20230309 20:07:07.783" endtime="20230309 20:07:12.710"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 20:07:12.711" level="INFO">2023-03-09 20:07:10 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2023-03-09 20:07:10 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2023-03-09 20:07:10 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
Apache Hadoop
Copyright 2006 and onwards The Apache Software Foundation.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

Export Control Notice
---------------------

This distribution includes cryptographic software.  The country in
which you currently reside may have restrictions on the import,
possession, use, and/or re-export to another country, of
encryption software.  BEFORE using any encryption software, please
check your country's laws, regulations and policies concerning the
import, possession, or use, and re-export of encryption software, to
see if this is permitted.  See &lt;http://www.wassenaar.org/&gt; for more
information.

The U.S. Government Department of Commerce, Bureau of Industry and
Security (BIS), has classified this software as Export Commodity
Control Number (ECCN) 5D002.C.1, which includes information security
software using or performing cryptographic functions with asymmetric
algorithms.  The form and manner of this Apache Software Foundation
distribution makes it eligible for export under the License Exception
ENC Technology Software Unrestricted (TSU) exception (see the BIS
Export Administration Regulations, Section 740.13) for both object
code and source code.

The following provides more details on the included cryptographic software:

This software uses the SSL libraries from the Jetty project written
by mortbay.org.
Hadoop Yarn Server Web Proxy uses the BouncyCastle Java
cryptography APIs written by the Legion of the Bouncy Castle Inc.</msg>
<status status="PASS" starttime="20230309 20:07:12.711" endtime="20230309 20:07:12.712"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 20:07:12.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230309 20:07:12.712" endtime="20230309 20:07:12.713"/>
</kw>
<status status="PASS" starttime="20230309 20:07:07.783" endtime="20230309 20:07:12.713"/>
</kw>
<msg timestamp="20230309 20:07:12.713" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 20:07:07.782" endtime="20230309 20:07:12.713"/>
</kw>
<msg timestamp="20230309 20:07:12.714" level="INFO">${result} = 2023-03-09 20:07:10 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2023-03-09 20:07:10 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2023...</msg>
<status status="PASS" starttime="20230309 20:07:07.781" endtime="20230309 20:07:12.714"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 20:07:12.714" endtime="20230309 20:07:12.714"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 20:06:59.810" endtime="20230309 20:07:12.714"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20230309 20:06:59.738" endtime="20230309 20:07:12.716"/>
</suite>
<suite id="s1-s4-s2" name="mapreduce-o3fs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s4-s2-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 20:07:19.178" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 20:07:19.184" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 20:07:19.184" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20230309 20:07:19.174" endtime="20230309 20:07:19.184"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 20:07:19.185" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20230309 20:07:19.184" endtime="20230309 20:07:19.185"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 20:07:19.186" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230309 20:07:19.185" endtime="20230309 20:07:19.186"/>
</kw>
<status status="PASS" starttime="20230309 20:07:19.173" endtime="20230309 20:07:19.186"/>
</kw>
<msg timestamp="20230309 20:07:19.186" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 20:07:19.172" endtime="20230309 20:07:19.187"/>
</kw>
<msg timestamp="20230309 20:07:19.187" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20230309 20:07:19.172" endtime="20230309 20:07:19.188"/>
</kw>
<msg timestamp="20230309 20:07:19.188" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20230309 20:07:19.171" endtime="20230309 20:07:19.189"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 20:07:19.193" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230309 20:07:19.193" endtime="20230309 20:07:19.193"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 20:07:19.194" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20230309 20:07:19.193" endtime="20230309 20:07:19.194"/>
</kw>
<status status="PASS" starttime="20230309 20:07:19.192" endtime="20230309 20:07:19.194"/>
</kw>
<msg timestamp="20230309 20:07:19.194" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20230309 20:07:19.191" endtime="20230309 20:07:19.194"/>
</kw>
<status status="PASS" starttime="20230309 20:07:19.191" endtime="20230309 20:07:19.195"/>
</kw>
<msg timestamp="20230309 20:07:19.195" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20230309 20:07:19.190" endtime="20230309 20:07:19.195"/>
</kw>
<msg timestamp="20230309 20:07:19.195" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20230309 20:07:19.189" endtime="20230309 20:07:19.196"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 20:07:19.201" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 20:08:16.509" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 20:08:16.509" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2023-03-09 20:07:22 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2023-03-09 20:07:22 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20230309 20:07:19.197" endtime="20230309 20:08:16.509"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 20:08:16.511" level="INFO">Number of Maps  = 3
Samples per Map = 3
2023-03-09 20:07:22 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2023-03-09 20:07:22 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2023-03-09 20:07:22 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2023-03-09 20:07:23 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2023-03-09 20:07:24 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.21.0.3:8032
2023-03-09 20:07:25 INFO  FileInputFormat:300 - Total input files to process : 3
2023-03-09 20:07:25 INFO  JobSubmitter:202 - number of splits:3
2023-03-09 20:07:25 INFO  JobSubmitter:298 - Submitting tokens for job: job_1678392286571_0001
2023-03-09 20:07:25 INFO  JobSubmitter:299 - Executing with tokens: []
2023-03-09 20:07:26 INFO  Configuration:2824 - resource-types.xml not found
2023-03-09 20:07:26 INFO  ResourceUtils:476 - Unable to find 'resource-types.xml'.
2023-03-09 20:07:26 INFO  YarnClientImpl:338 - Submitted application application_1678392286571_0001
2023-03-09 20:07:26 INFO  Job:1575 - The url to track the job: http://rm:8088/proxy/application_1678392286571_0001/
2023-03-09 20:07:26 INFO  Job:1620 - Running job: job_1678392286571_0001
2023-03-09 20:07:42 INFO  Job:1641 - Job job_1678392286571_0001 running in uber mode : false
2023-03-09 20:07:42 INFO  Job:1648 -  map 0% reduce 0%
2023-03-09 20:07:51 INFO  Job:1648 -  map 33% reduce 0%
2023-03-09 20:07:58 INFO  Job:1648 -  map 67% reduce 0%
2023-03-09 20:08:06 INFO  Job:1648 -  map 100% reduce 0%
2023-03-09 20:08:13 INFO  Job:1648 -  map 100% reduce 100%
2023-03-09 20:08:15 INFO  Job:1659 - Job job_1678392286571_0001 completed successfully
2023-03-09 20:08:15 INFO  Job:1666 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1094985
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=67000
		Total time spent by all reduces in occupied slots (ms)=25740
		Total time spent by all map tasks (ms)=16750
		Total time spent by all reduce tasks (ms)=6435
		Total vcore-milliseconds taken by all map tasks=16750
		Total vcore-milliseconds taken by all reduce tasks=6435
		Total megabyte-milliseconds taken by all map tasks=68608000
		Total megabyte-milliseconds taken by all reduce tasks=26357760
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=909
		CPU time spent (ms)=10890
		Physical memory (bytes) snapshot=1531920384
		Virtual memory (bytes) snapshot=15849746432
		Total committed heap usage (bytes)=1401421824
		Peak Map Physical memory (bytes)=471822336
		Peak Map Virtual memory (bytes)=3956355072
		Peak Reduce Physical memory (bytes)=391475200
		Peak Reduce Virtual memory (bytes)=3988701184
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 51.275 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20230309 20:08:16.510" endtime="20230309 20:08:16.511"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 20:08:16.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230309 20:08:16.511" endtime="20230309 20:08:16.512"/>
</kw>
<status status="PASS" starttime="20230309 20:07:19.197" endtime="20230309 20:08:16.512"/>
</kw>
<msg timestamp="20230309 20:08:16.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 20:07:19.196" endtime="20230309 20:08:16.513"/>
</kw>
<msg timestamp="20230309 20:08:16.513" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2023-03-09 20:07:22 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2023-03-09 20:07:22 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20230309 20:07:19.196" endtime="20230309 20:08:16.513"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 20:08:16.514" endtime="20230309 20:08:16.514"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>multiple SLF4J bindings</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 20:08:16.514" endtime="20230309 20:08:16.515"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230309 20:07:19.170" endtime="20230309 20:08:16.515"/>
</test>
<test id="s1-s4-s2-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 20:08:16.522" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 20:08:16.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 20:08:16.529" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20230309 20:08:16.519" endtime="20230309 20:08:16.529"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 20:08:16.530" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20230309 20:08:16.530" endtime="20230309 20:08:16.531"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 20:08:16.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230309 20:08:16.531" endtime="20230309 20:08:16.532"/>
</kw>
<status status="PASS" starttime="20230309 20:08:16.518" endtime="20230309 20:08:16.532"/>
</kw>
<msg timestamp="20230309 20:08:16.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 20:08:16.518" endtime="20230309 20:08:16.532"/>
</kw>
<msg timestamp="20230309 20:08:16.533" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20230309 20:08:16.518" endtime="20230309 20:08:16.533"/>
</kw>
<msg timestamp="20230309 20:08:16.533" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20230309 20:08:16.517" endtime="20230309 20:08:16.533"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 20:08:16.534" level="INFO">${random} = IOBQaAwB</msg>
<status status="PASS" starttime="20230309 20:08:16.533" endtime="20230309 20:08:16.534"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 20:08:16.538" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230309 20:08:16.538" endtime="20230309 20:08:16.538"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 20:08:16.539" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20230309 20:08:16.539" endtime="20230309 20:08:16.539"/>
</kw>
<status status="PASS" starttime="20230309 20:08:16.537" endtime="20230309 20:08:16.540"/>
</kw>
<msg timestamp="20230309 20:08:16.540" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20230309 20:08:16.537" endtime="20230309 20:08:16.540"/>
</kw>
<status status="PASS" starttime="20230309 20:08:16.536" endtime="20230309 20:08:16.540"/>
</kw>
<msg timestamp="20230309 20:08:16.540" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20230309 20:08:16.535" endtime="20230309 20:08:16.540"/>
</kw>
<msg timestamp="20230309 20:08:16.541" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20230309 20:08:16.534" endtime="20230309 20:08:16.541"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 20:08:16.548" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230309 20:08:16.547" endtime="20230309 20:08:16.548"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 20:08:16.549" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20230309 20:08:16.548" endtime="20230309 20:08:16.549"/>
</kw>
<status status="PASS" starttime="20230309 20:08:16.546" endtime="20230309 20:08:16.550"/>
</kw>
<msg timestamp="20230309 20:08:16.550" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20230309 20:08:16.546" endtime="20230309 20:08:16.550"/>
</kw>
<status status="PASS" starttime="20230309 20:08:16.544" endtime="20230309 20:08:16.551"/>
</kw>
<msg timestamp="20230309 20:08:16.551" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20230309 20:08:16.542" endtime="20230309 20:08:16.551"/>
</kw>
<msg timestamp="20230309 20:08:16.553" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20230309 20:08:16.541" endtime="20230309 20:08:16.553"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 20:08:16.558" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230309 20:08:16.557" endtime="20230309 20:08:16.558"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 20:08:16.559" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20230309 20:08:16.558" endtime="20230309 20:08:16.559"/>
</kw>
<status status="PASS" starttime="20230309 20:08:16.556" endtime="20230309 20:08:16.559"/>
</kw>
<msg timestamp="20230309 20:08:16.559" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20230309 20:08:16.556" endtime="20230309 20:08:16.559"/>
</kw>
<status status="PASS" starttime="20230309 20:08:16.555" endtime="20230309 20:08:16.560"/>
</kw>
<msg timestamp="20230309 20:08:16.560" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-IOBQaAwB.txt</msg>
<status status="PASS" starttime="20230309 20:08:16.554" endtime="20230309 20:08:16.560"/>
</kw>
<msg timestamp="20230309 20:08:16.561" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-IOBQaAwB.txt</msg>
<status status="PASS" starttime="20230309 20:08:16.553" endtime="20230309 20:08:16.561"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 20:08:16.566" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-IOBQaAwB.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 20:09:06.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 20:09:06.660" level="INFO">${output} = 2023-03-09 20:08:19 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.21.0.3:8032
2023-03-09 20:08:19 INFO  JobSubmissionFiles:156 - Permissions on staging director...</msg>
<status status="PASS" starttime="20230309 20:08:16.563" endtime="20230309 20:09:06.660"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 20:09:06.662" level="INFO">2023-03-09 20:08:19 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.21.0.3:8032
2023-03-09 20:08:19 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2023-03-09 20:08:20 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2023-03-09 20:08:20 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2023-03-09 20:08:20 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2023-03-09 20:08:20 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-03-09 20:08:22 INFO  FileInputFormat:300 - Total input files to process : 3
2023-03-09 20:08:22 INFO  JobSubmitter:202 - number of splits:3
2023-03-09 20:08:22 INFO  JobSubmitter:298 - Submitting tokens for job: job_1678392286571_0002
2023-03-09 20:08:22 INFO  JobSubmitter:299 - Executing with tokens: []
2023-03-09 20:08:23 INFO  Configuration:2824 - resource-types.xml not found
2023-03-09 20:08:23 INFO  ResourceUtils:476 - Unable to find 'resource-types.xml'.
2023-03-09 20:08:23 INFO  YarnClientImpl:338 - Submitted application application_1678392286571_0002
2023-03-09 20:08:23 INFO  Job:1575 - The url to track the job: http://rm:8088/proxy/application_1678392286571_0002/
2023-03-09 20:08:23 INFO  Job:1620 - Running job: job_1678392286571_0002
2023-03-09 20:08:34 INFO  Job:1641 - Job job_1678392286571_0002 running in uber mode : false
2023-03-09 20:08:34 INFO  Job:1648 -  map 0% reduce 0%
2023-03-09 20:08:43 INFO  Job:1648 -  map 33% reduce 0%
2023-03-09 20:08:50 INFO  Job:1648 -  map 67% reduce 0%
2023-03-09 20:08:57 INFO  Job:1648 -  map 100% reduce 0%
2023-03-09 20:09:05 INFO  Job:1648 -  map 100% reduce 100%
2023-03-09 20:09:06 INFO  Job:1659 - Job job_1678392286571_0002 completed successfully
2023-03-09 20:09:06 INFO  Job:1666 - Counters: 53
	File System Counters
		FILE: Number of bytes read=36183
		FILE: Number of bytes written=1165851
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=43868
		O3FS: Number of bytes written=25925
		O3FS: Number of read operations=14
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=63764
		Total time spent by all reduces in occupied slots (ms)=22756
		Total time spent by all map tasks (ms)=15941
		Total time spent by all reduce tasks (ms)=5689
		Total vcore-milliseconds taken by all map tasks=15941
		Total vcore-milliseconds taken by all reduce tasks=5689
		Total megabyte-milliseconds taken by all map tasks=65294336
		Total megabyte-milliseconds taken by all reduce tasks=23302144
	Map-Reduce Framework
		Map input records=1170
		Map output records=4644
		Map output bytes=59407
		Map output materialized bytes=36195
		Input split bytes=303
		Combine input records=4644
		Combine output records=1915
		Reduce input groups=1652
		Reduce shuffle bytes=36195
		Reduce input records=1915
		Reduce output records=1652
		Spilled Records=3830
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=773
		CPU time spent (ms)=10750
		Physical memory (bytes) snapshot=1498783744
		Virtual memory (bytes) snapshot=15845117952
		Total committed heap usage (bytes)=1347420160
		Peak Map Physical memory (bytes)=467832832
		Peak Map Virtual memory (bytes)=3954405376
		Peak Reduce Physical memory (bytes)=374689792
		Peak Reduce Virtual memory (bytes)=3982176256
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=43565
	File Output Format Counters 
		Bytes Written=25925</msg>
<status status="PASS" starttime="20230309 20:09:06.661" endtime="20230309 20:09:06.663"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 20:09:06.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230309 20:09:06.663" endtime="20230309 20:09:06.664"/>
</kw>
<status status="PASS" starttime="20230309 20:08:16.562" endtime="20230309 20:09:06.666"/>
</kw>
<msg timestamp="20230309 20:09:06.667" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 20:08:16.562" endtime="20230309 20:09:06.667"/>
</kw>
<msg timestamp="20230309 20:09:06.668" level="INFO">${output} = 2023-03-09 20:08:19 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.21.0.3:8032
2023-03-09 20:08:19 INFO  JobSubmissionFiles:156 - Permissions on staging director...</msg>
<status status="PASS" starttime="20230309 20:08:16.561" endtime="20230309 20:09:06.668"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 20:09:06.668" endtime="20230309 20:09:06.669"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 20:09:06.670" endtime="20230309 20:09:06.671"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230309 20:08:16.516" endtime="20230309 20:09:06.671"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20230309 20:07:19.093" endtime="20230309 20:09:06.673"/>
</suite>
<suite id="s1-s4-s3" name="hadoopfs-ofs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s4-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 20:09:13.525" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20230309 20:09:13.524" endtime="20230309 20:09:13.525"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 20:09:13.526" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20230309 20:09:13.525" endtime="20230309 20:09:13.526"/>
</kw>
<status status="PASS" starttime="20230309 20:09:13.524" endtime="20230309 20:09:13.526"/>
</kw>
<msg timestamp="20230309 20:09:13.526" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20230309 20:09:13.523" endtime="20230309 20:09:13.526"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230309 20:09:13.527" endtime="20230309 20:09:13.527"/>
</kw>
<msg timestamp="20230309 20:09:13.528" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20230309 20:09:13.526" endtime="20230309 20:09:13.528"/>
</kw>
<status status="PASS" starttime="20230309 20:09:13.522" endtime="20230309 20:09:13.528"/>
</kw>
<msg timestamp="20230309 20:09:13.528" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20230309 20:09:13.521" endtime="20230309 20:09:13.528"/>
</kw>
<msg timestamp="20230309 20:09:13.529" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20230309 20:09:13.520" endtime="20230309 20:09:13.529"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 20:09:13.529" level="INFO">${random} = 91721</msg>
<status status="PASS" starttime="20230309 20:09:13.529" endtime="20230309 20:09:13.529"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 20:09:13.536" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-91721 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 20:09:18.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 20:09:18.761" level="INFO">${output} = 2023-03-09 20:09:16 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2023-03-09 20:09:16 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2023...</msg>
<status status="PASS" starttime="20230309 20:09:13.531" endtime="20230309 20:09:18.761"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 20:09:18.763" level="INFO">2023-03-09 20:09:16 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2023-03-09 20:09:16 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2023-03-09 20:09:16 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2023-03-09 20:09:17 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230309 20:09:18.762" endtime="20230309 20:09:18.763"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 20:09:18.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230309 20:09:18.763" endtime="20230309 20:09:18.764"/>
</kw>
<status status="PASS" starttime="20230309 20:09:13.531" endtime="20230309 20:09:18.764"/>
</kw>
<msg timestamp="20230309 20:09:18.765" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 20:09:13.530" endtime="20230309 20:09:18.765"/>
</kw>
<msg timestamp="20230309 20:09:18.765" level="INFO">${result} = 2023-03-09 20:09:16 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2023-03-09 20:09:16 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2023...</msg>
<status status="PASS" starttime="20230309 20:09:13.530" endtime="20230309 20:09:18.765"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>multiple SLF4J bindings</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 20:09:18.766" endtime="20230309 20:09:18.766"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 20:09:18.771" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 20:09:21.631" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 20:09:21.631" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2023-03-09 20:06 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop       1541 2023-03-09 20:09 ofs://om/volume1/bucket1/ozone-91721
-rw-...</msg>
<status status="PASS" starttime="20230309 20:09:18.768" endtime="20230309 20:09:21.631"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 20:09:21.632" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2023-03-09 20:06 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop       1541 2023-03-09 20:09 ofs://om/volume1/bucket1/ozone-91721
-rw-rw-rw-   3 hadoop hadoop       1541 2023-03-09 20:07 ofs://om/volume1/bucket1/ozone-92556
drwxrwxrwx   - hadoop hadoop          0 2023-03-09 20:06 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2023-03-09 20:09 ofs://om/volume1/bucket1/wordcount-IOBQaAwB.txt</msg>
<status status="PASS" starttime="20230309 20:09:21.631" endtime="20230309 20:09:21.633"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 20:09:21.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230309 20:09:21.633" endtime="20230309 20:09:21.633"/>
</kw>
<status status="PASS" starttime="20230309 20:09:18.768" endtime="20230309 20:09:21.636"/>
</kw>
<msg timestamp="20230309 20:09:21.636" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 20:09:18.767" endtime="20230309 20:09:21.637"/>
</kw>
<msg timestamp="20230309 20:09:21.637" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2023-03-09 20:06 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop       1541 2023-03-09 20:09 ofs://om/volume1/bucket1/ozone-91721
-rw-...</msg>
<status status="PASS" starttime="20230309 20:09:18.766" endtime="20230309 20:09:21.637"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 20:09:21.638" endtime="20230309 20:09:21.638"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 20:09:21.646" level="INFO">Running command 'hdfs dfs -cat ofs://om/volume1/bucket1/ozone-91721 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 20:09:26.322" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 20:09:26.323" level="INFO">${output} = 2023-03-09 20:09:24 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2023-03-09 20:09:24 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2023...</msg>
<status status="PASS" starttime="20230309 20:09:21.640" endtime="20230309 20:09:26.323"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 20:09:26.324" level="INFO">2023-03-09 20:09:24 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2023-03-09 20:09:24 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2023-03-09 20:09:24 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
Apache Hadoop
Copyright 2006 and onwards The Apache Software Foundation.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

Export Control Notice
---------------------

This distribution includes cryptographic software.  The country in
which you currently reside may have restrictions on the import,
possession, use, and/or re-export to another country, of
encryption software.  BEFORE using any encryption software, please
check your country's laws, regulations and policies concerning the
import, possession, or use, and re-export of encryption software, to
see if this is permitted.  See &lt;http://www.wassenaar.org/&gt; for more
information.

The U.S. Government Department of Commerce, Bureau of Industry and
Security (BIS), has classified this software as Export Commodity
Control Number (ECCN) 5D002.C.1, which includes information security
software using or performing cryptographic functions with asymmetric
algorithms.  The form and manner of this Apache Software Foundation
distribution makes it eligible for export under the License Exception
ENC Technology Software Unrestricted (TSU) exception (see the BIS
Export Administration Regulations, Section 740.13) for both object
code and source code.

The following provides more details on the included cryptographic software:

This software uses the SSL libraries from the Jetty project written
by mortbay.org.
Hadoop Yarn Server Web Proxy uses the BouncyCastle Java
cryptography APIs written by the Legion of the Bouncy Castle Inc.</msg>
<status status="PASS" starttime="20230309 20:09:26.323" endtime="20230309 20:09:26.324"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 20:09:26.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230309 20:09:26.324" endtime="20230309 20:09:26.325"/>
</kw>
<status status="PASS" starttime="20230309 20:09:21.640" endtime="20230309 20:09:26.325"/>
</kw>
<msg timestamp="20230309 20:09:26.326" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 20:09:21.639" endtime="20230309 20:09:26.326"/>
</kw>
<msg timestamp="20230309 20:09:26.326" level="INFO">${result} = 2023-03-09 20:09:24 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2023-03-09 20:09:24 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2023...</msg>
<status status="PASS" starttime="20230309 20:09:21.638" endtime="20230309 20:09:26.326"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 20:09:26.326" endtime="20230309 20:09:26.327"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230309 20:09:13.519" endtime="20230309 20:09:26.327"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20230309 20:09:13.448" endtime="20230309 20:09:26.329"/>
</suite>
<suite id="s1-s4-s4" name="mapreduce-ofs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s4-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 20:09:32.759" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 20:09:32.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 20:09:32.765" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20230309 20:09:32.754" endtime="20230309 20:09:32.766"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 20:09:32.767" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20230309 20:09:32.766" endtime="20230309 20:09:32.767"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 20:09:32.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230309 20:09:32.767" endtime="20230309 20:09:32.768"/>
</kw>
<status status="PASS" starttime="20230309 20:09:32.753" endtime="20230309 20:09:32.768"/>
</kw>
<msg timestamp="20230309 20:09:32.768" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 20:09:32.753" endtime="20230309 20:09:32.769"/>
</kw>
<msg timestamp="20230309 20:09:32.769" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20230309 20:09:32.752" endtime="20230309 20:09:32.770"/>
</kw>
<msg timestamp="20230309 20:09:32.771" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20230309 20:09:32.752" endtime="20230309 20:09:32.771"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 20:09:32.775" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20230309 20:09:32.775" endtime="20230309 20:09:32.775"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 20:09:32.776" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20230309 20:09:32.775" endtime="20230309 20:09:32.776"/>
</kw>
<status status="PASS" starttime="20230309 20:09:32.774" endtime="20230309 20:09:32.776"/>
</kw>
<msg timestamp="20230309 20:09:32.777" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20230309 20:09:32.774" endtime="20230309 20:09:32.777"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230309 20:09:32.778" endtime="20230309 20:09:32.779"/>
</kw>
<msg timestamp="20230309 20:09:32.779" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20230309 20:09:32.777" endtime="20230309 20:09:32.779"/>
</kw>
<status status="PASS" starttime="20230309 20:09:32.773" endtime="20230309 20:09:32.779"/>
</kw>
<msg timestamp="20230309 20:09:32.779" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20230309 20:09:32.772" endtime="20230309 20:09:32.779"/>
</kw>
<msg timestamp="20230309 20:09:32.780" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20230309 20:09:32.771" endtime="20230309 20:09:32.780"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 20:09:32.784" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 20:10:25.041" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 20:10:25.041" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2023-03-09 20:09:35 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2023-03-09 20:09:35 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20230309 20:09:32.782" endtime="20230309 20:10:25.041"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 20:10:25.043" level="INFO">Number of Maps  = 3
Samples per Map = 3
2023-03-09 20:09:35 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2023-03-09 20:09:35 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2023-03-09 20:09:35 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2023-03-09 20:09:36 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2023-03-09 20:09:37 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.21.0.3:8032
2023-03-09 20:09:38 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2023-03-09 20:09:38 INFO  FileInputFormat:300 - Total input files to process : 3
2023-03-09 20:09:38 INFO  JobSubmitter:202 - number of splits:3
2023-03-09 20:09:39 INFO  JobSubmitter:298 - Submitting tokens for job: job_1678392286571_0003
2023-03-09 20:09:39 INFO  JobSubmitter:299 - Executing with tokens: []
2023-03-09 20:09:39 INFO  Configuration:2824 - resource-types.xml not found
2023-03-09 20:09:39 INFO  ResourceUtils:476 - Unable to find 'resource-types.xml'.
2023-03-09 20:09:39 INFO  YarnClientImpl:338 - Submitted application application_1678392286571_0003
2023-03-09 20:09:39 INFO  Job:1575 - The url to track the job: http://rm:8088/proxy/application_1678392286571_0003/
2023-03-09 20:09:39 INFO  Job:1620 - Running job: job_1678392286571_0003
2023-03-09 20:09:50 INFO  Job:1641 - Job job_1678392286571_0003 running in uber mode : false
2023-03-09 20:09:50 INFO  Job:1648 -  map 0% reduce 0%
2023-03-09 20:09:58 INFO  Job:1648 -  map 33% reduce 0%
2023-03-09 20:10:07 INFO  Job:1648 -  map 67% reduce 0%
2023-03-09 20:10:14 INFO  Job:1648 -  map 100% reduce 0%
2023-03-09 20:10:20 INFO  Job:1648 -  map 100% reduce 100%
2023-03-09 20:10:24 INFO  Job:1659 - Job job_1678392286571_0003 completed successfully
2023-03-09 20:10:24 INFO  Job:1666 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1094773
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=62160
		Total time spent by all reduces in occupied slots (ms)=22928
		Total time spent by all map tasks (ms)=15540
		Total time spent by all reduce tasks (ms)=5732
		Total vcore-milliseconds taken by all map tasks=15540
		Total vcore-milliseconds taken by all reduce tasks=5732
		Total megabyte-milliseconds taken by all map tasks=63651840
		Total megabyte-milliseconds taken by all reduce tasks=23478272
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=760
		CPU time spent (ms)=10210
		Physical memory (bytes) snapshot=1754558464
		Virtual memory (bytes) snapshot=15850758144
		Total committed heap usage (bytes)=1486356480
		Peak Map Physical memory (bytes)=468135936
		Peak Map Virtual memory (bytes)=3957161984
		Peak Reduce Physical memory (bytes)=356298752
		Peak Reduce Virtual memory (bytes)=3984334848
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 46.534 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20230309 20:10:25.042" endtime="20230309 20:10:25.043"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 20:10:25.043" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230309 20:10:25.043" endtime="20230309 20:10:25.044"/>
</kw>
<status status="PASS" starttime="20230309 20:09:32.781" endtime="20230309 20:10:25.044"/>
</kw>
<msg timestamp="20230309 20:10:25.044" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 20:09:32.781" endtime="20230309 20:10:25.044"/>
</kw>
<msg timestamp="20230309 20:10:25.045" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2023-03-09 20:09:35 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2023-03-09 20:09:35 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20230309 20:09:32.780" endtime="20230309 20:10:25.045"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 20:10:25.045" endtime="20230309 20:10:25.045"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>multiple SLF4J bindings</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 20:10:25.046" endtime="20230309 20:10:25.046"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230309 20:09:32.750" endtime="20230309 20:10:25.046"/>
</test>
<test id="s1-s4-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 20:10:25.054" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 20:10:25.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 20:10:25.061" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20230309 20:10:25.051" endtime="20230309 20:10:25.061"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 20:10:25.062" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20230309 20:10:25.062" endtime="20230309 20:10:25.063"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 20:10:25.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230309 20:10:25.063" endtime="20230309 20:10:25.063"/>
</kw>
<status status="PASS" starttime="20230309 20:10:25.051" endtime="20230309 20:10:25.064"/>
</kw>
<msg timestamp="20230309 20:10:25.064" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 20:10:25.050" endtime="20230309 20:10:25.064"/>
</kw>
<msg timestamp="20230309 20:10:25.064" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20230309 20:10:25.049" endtime="20230309 20:10:25.065"/>
</kw>
<msg timestamp="20230309 20:10:25.065" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20230309 20:10:25.049" endtime="20230309 20:10:25.065"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230309 20:10:25.066" level="INFO">${random} = X2DF4Pj4</msg>
<status status="PASS" starttime="20230309 20:10:25.065" endtime="20230309 20:10:25.066"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 20:10:25.070" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20230309 20:10:25.070" endtime="20230309 20:10:25.070"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 20:10:25.071" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20230309 20:10:25.070" endtime="20230309 20:10:25.071"/>
</kw>
<status status="PASS" starttime="20230309 20:10:25.069" endtime="20230309 20:10:25.071"/>
</kw>
<msg timestamp="20230309 20:10:25.071" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20230309 20:10:25.068" endtime="20230309 20:10:25.071"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230309 20:10:25.072" endtime="20230309 20:10:25.073"/>
</kw>
<msg timestamp="20230309 20:10:25.073" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20230309 20:10:25.072" endtime="20230309 20:10:25.073"/>
</kw>
<status status="PASS" starttime="20230309 20:10:25.068" endtime="20230309 20:10:25.074"/>
</kw>
<msg timestamp="20230309 20:10:25.074" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20230309 20:10:25.067" endtime="20230309 20:10:25.074"/>
</kw>
<msg timestamp="20230309 20:10:25.074" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20230309 20:10:25.066" endtime="20230309 20:10:25.074"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 20:10:25.079" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20230309 20:10:25.078" endtime="20230309 20:10:25.079"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 20:10:25.080" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20230309 20:10:25.079" endtime="20230309 20:10:25.080"/>
</kw>
<status status="PASS" starttime="20230309 20:10:25.078" endtime="20230309 20:10:25.080"/>
</kw>
<msg timestamp="20230309 20:10:25.080" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20230309 20:10:25.077" endtime="20230309 20:10:25.080"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 20:10:25.082" level="INFO">${first} = i</msg>
<status status="PASS" starttime="20230309 20:10:25.081" endtime="20230309 20:10:25.082"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 20:10:25.083" level="INFO">${result} = /input/</msg>
<status status="PASS" starttime="20230309 20:10:25.082" endtime="20230309 20:10:25.083"/>
</kw>
<status status="PASS" starttime="20230309 20:10:25.081" endtime="20230309 20:10:25.083"/>
</kw>
<msg timestamp="20230309 20:10:25.083" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" starttime="20230309 20:10:25.080" endtime="20230309 20:10:25.083"/>
</kw>
<status status="PASS" starttime="20230309 20:10:25.076" endtime="20230309 20:10:25.084"/>
</kw>
<msg timestamp="20230309 20:10:25.084" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20230309 20:10:25.075" endtime="20230309 20:10:25.084"/>
</kw>
<msg timestamp="20230309 20:10:25.084" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20230309 20:10:25.074" endtime="20230309 20:10:25.084"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 20:10:25.089" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20230309 20:10:25.088" endtime="20230309 20:10:25.089"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 20:10:25.090" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20230309 20:10:25.089" endtime="20230309 20:10:25.090"/>
</kw>
<status status="PASS" starttime="20230309 20:10:25.088" endtime="20230309 20:10:25.090"/>
</kw>
<msg timestamp="20230309 20:10:25.090" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20230309 20:10:25.087" endtime="20230309 20:10:25.090"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 20:10:25.092" level="INFO">${first} = w</msg>
<status status="PASS" starttime="20230309 20:10:25.092" endtime="20230309 20:10:25.093"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 20:10:25.093" level="INFO">${result} = /wordcount-X2DF4Pj4.txt</msg>
<status status="PASS" starttime="20230309 20:10:25.093" endtime="20230309 20:10:25.093"/>
</kw>
<status status="PASS" starttime="20230309 20:10:25.091" endtime="20230309 20:10:25.094"/>
</kw>
<msg timestamp="20230309 20:10:25.094" level="INFO">${path_with_leading} = /wordcount-X2DF4Pj4.txt</msg>
<status status="PASS" starttime="20230309 20:10:25.091" endtime="20230309 20:10:25.094"/>
</kw>
<status status="PASS" starttime="20230309 20:10:25.086" endtime="20230309 20:10:25.094"/>
</kw>
<msg timestamp="20230309 20:10:25.094" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-X2DF4Pj4.txt</msg>
<status status="PASS" starttime="20230309 20:10:25.086" endtime="20230309 20:10:25.094"/>
</kw>
<msg timestamp="20230309 20:10:25.095" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-X2DF4Pj4.txt</msg>
<status status="PASS" starttime="20230309 20:10:25.085" endtime="20230309 20:10:25.095"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 20:10:25.099" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-X2DF4Pj4.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 20:11:13.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 20:11:13.974" level="INFO">${output} = 2023-03-09 20:10:27 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.21.0.3:8032
2023-03-09 20:10:28 INFO  JobSubmissionFiles:156 - Permissions on staging director...</msg>
<status status="PASS" starttime="20230309 20:10:25.097" endtime="20230309 20:11:13.974"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 20:11:13.976" level="INFO">2023-03-09 20:10:27 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.21.0.3:8032
2023-03-09 20:10:28 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2023-03-09 20:10:28 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2023-03-09 20:10:28 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2023-03-09 20:10:28 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2023-03-09 20:10:29 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-03-09 20:10:30 INFO  FileInputFormat:300 - Total input files to process : 3
2023-03-09 20:10:30 INFO  JobSubmitter:202 - number of splits:3
2023-03-09 20:10:31 INFO  JobSubmitter:298 - Submitting tokens for job: job_1678392286571_0004
2023-03-09 20:10:31 INFO  JobSubmitter:299 - Executing with tokens: []
2023-03-09 20:10:31 INFO  Configuration:2824 - resource-types.xml not found
2023-03-09 20:10:31 INFO  ResourceUtils:476 - Unable to find 'resource-types.xml'.
2023-03-09 20:10:31 INFO  YarnClientImpl:338 - Submitted application application_1678392286571_0004
2023-03-09 20:10:31 INFO  Job:1575 - The url to track the job: http://rm:8088/proxy/application_1678392286571_0004/
2023-03-09 20:10:31 INFO  Job:1620 - Running job: job_1678392286571_0004
2023-03-09 20:10:42 INFO  Job:1641 - Job job_1678392286571_0004 running in uber mode : false
2023-03-09 20:10:42 INFO  Job:1648 -  map 0% reduce 0%
2023-03-09 20:10:51 INFO  Job:1648 -  map 33% reduce 0%
2023-03-09 20:10:59 INFO  Job:1648 -  map 67% reduce 0%
2023-03-09 20:11:06 INFO  Job:1648 -  map 100% reduce 0%
2023-03-09 20:11:12 INFO  Job:1648 -  map 100% reduce 100%
2023-03-09 20:11:13 INFO  Job:1659 - Job job_1678392286571_0004 completed successfully
2023-03-09 20:11:13 INFO  Job:1666 - Counters: 53
	File System Counters
		FILE: Number of bytes read=36183
		FILE: Number of bytes written=1165767
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=43865
		OFS: Number of bytes written=25925
		OFS: Number of read operations=14
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=63232
		Total time spent by all reduces in occupied slots (ms)=23608
		Total time spent by all map tasks (ms)=15808
		Total time spent by all reduce tasks (ms)=5902
		Total vcore-milliseconds taken by all map tasks=15808
		Total vcore-milliseconds taken by all reduce tasks=5902
		Total megabyte-milliseconds taken by all map tasks=64749568
		Total megabyte-milliseconds taken by all reduce tasks=24174592
	Map-Reduce Framework
		Map input records=1170
		Map output records=4644
		Map output bytes=59407
		Map output materialized bytes=36195
		Input split bytes=300
		Combine input records=4644
		Combine output records=1915
		Reduce input groups=1652
		Reduce shuffle bytes=36195
		Reduce input records=1915
		Reduce output records=1652
		Spilled Records=3830
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=846
		CPU time spent (ms)=11330
		Physical memory (bytes) snapshot=1487466496
		Virtual memory (bytes) snapshot=15846510592
		Total committed heap usage (bytes)=1279262720
		Peak Map Physical memory (bytes)=479375360
		Peak Map Virtual memory (bytes)=3956424704
		Peak Reduce Physical memory (bytes)=339222528
		Peak Reduce Virtual memory (bytes)=3982299136
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=43565
	File Output Format Counters 
		Bytes Written=25925</msg>
<status status="PASS" starttime="20230309 20:11:13.975" endtime="20230309 20:11:13.976"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 20:11:13.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230309 20:11:13.976" endtime="20230309 20:11:13.977"/>
</kw>
<status status="PASS" starttime="20230309 20:10:25.096" endtime="20230309 20:11:13.978"/>
</kw>
<msg timestamp="20230309 20:11:13.978" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 20:10:25.096" endtime="20230309 20:11:13.978"/>
</kw>
<msg timestamp="20230309 20:11:13.979" level="INFO">${output} = 2023-03-09 20:10:27 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.21.0.3:8032
2023-03-09 20:10:28 INFO  JobSubmissionFiles:156 - Permissions on staging director...</msg>
<status status="PASS" starttime="20230309 20:10:25.095" endtime="20230309 20:11:13.979"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 20:11:13.979" endtime="20230309 20:11:13.979"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 20:11:13.980" endtime="20230309 20:11:13.980"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230309 20:10:25.048" endtime="20230309 20:11:13.980"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20230309 20:09:32.676" endtime="20230309 20:11:13.982"/>
</suite>
<suite id="s1-s4-s5" name="Createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-s4-s5-t1" name="Create test volume, bucket and key" line="38">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 20:05:40.442" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 20:05:50.258" level="INFO">${rc} = 255</msg>
<msg timestamp="20230309 20:05:50.258" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20230309 20:05:40.435" endtime="20230309 20:05:50.258"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 20:05:50.259" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20230309 20:05:50.258" endtime="20230309 20:05:50.259"/>
</kw>
<msg timestamp="20230309 20:05:50.261" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20230309 20:05:40.434" endtime="20230309 20:05:50.261"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create volume">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 20:05:50.267" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 20:05:56.243" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 20:05:56.244" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 20:05:50.265" endtime="20230309 20:05:56.244"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 20:05:56.245" level="INFO"/>
<status status="PASS" starttime="20230309 20:05:56.244" endtime="20230309 20:05:56.245"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 20:05:56.246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 20:05:56.245" endtime="20230309 20:05:56.246"/>
</kw>
<status status="PASS" starttime="20230309 20:05:50.264" endtime="20230309 20:05:56.246"/>
</kw>
<msg timestamp="20230309 20:05:56.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 20:05:50.264" endtime="20230309 20:05:56.248"/>
</kw>
<msg timestamp="20230309 20:05:56.248" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230309 20:05:50.263" endtime="20230309 20:05:56.248"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 20:05:56.249" endtime="20230309 20:05:56.249"/>
</kw>
<status status="PASS" starttime="20230309 20:05:50.262" endtime="20230309 20:05:56.250"/>
</kw>
<status status="PASS" starttime="20230309 20:05:50.262" endtime="20230309 20:05:56.250"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/${bucket} --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 20:05:56.257" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 20:06:02.766" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 20:06:02.766" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 20:05:56.254" endtime="20230309 20:06:02.766"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 20:06:02.767" level="INFO"/>
<status status="PASS" starttime="20230309 20:06:02.766" endtime="20230309 20:06:02.768"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 20:06:02.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 20:06:02.768" endtime="20230309 20:06:02.769"/>
</kw>
<status status="PASS" starttime="20230309 20:05:56.252" endtime="20230309 20:06:02.769"/>
</kw>
<msg timestamp="20230309 20:06:02.769" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 20:05:56.252" endtime="20230309 20:06:02.770"/>
</kw>
<status status="PASS" starttime="20230309 20:05:56.251" endtime="20230309 20:06:02.772"/>
</kw>
<status status="PASS" starttime="20230309 20:05:56.251" endtime="20230309 20:06:02.772"/>
</kw>
<status status="PASS" starttime="20230309 20:05:56.250" endtime="20230309 20:06:02.772"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230309 20:06:02.773" endtime="20230309 20:06:02.773"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 20:06:02.779" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 20:06:08.991" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 20:06:08.991" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023-03-09T20:06...</msg>
<status status="PASS" starttime="20230309 20:06:02.775" endtime="20230309 20:06:08.991"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 20:06:08.993" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023-03-09T20:06:02.368Z",
  "modificationTime" : "2023-03-09T20:06:02.368Z",
  "quotaInBytes" : 1099511627776,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "hadoop",
  "link" : false
}</msg>
<status status="PASS" starttime="20230309 20:06:08.992" endtime="20230309 20:06:08.993"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 20:06:08.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 20:06:08.993" endtime="20230309 20:06:08.994"/>
</kw>
<status status="PASS" starttime="20230309 20:06:02.775" endtime="20230309 20:06:08.995"/>
</kw>
<msg timestamp="20230309 20:06:08.995" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 20:06:02.774" endtime="20230309 20:06:08.996"/>
</kw>
<msg timestamp="20230309 20:06:08.996" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023-03-09T20:06...</msg>
<status status="PASS" starttime="20230309 20:06:02.773" endtime="20230309 20:06:08.996"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230309 20:06:08.997" endtime="20230309 20:06:08.997"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 20:06:09.005" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230309 20:06:09.004" endtime="20230309 20:06:09.005"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 20:06:09.006" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20230309 20:06:09.005" endtime="20230309 20:06:09.006"/>
</kw>
<status status="PASS" starttime="20230309 20:06:09.003" endtime="20230309 20:06:09.007"/>
</kw>
<msg timestamp="20230309 20:06:09.007" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20230309 20:06:09.001" endtime="20230309 20:06:09.007"/>
</kw>
<status status="PASS" starttime="20230309 20:06:09.000" endtime="20230309 20:06:09.007"/>
</kw>
<msg timestamp="20230309 20:06:09.008" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20230309 20:06:08.999" endtime="20230309 20:06:09.008"/>
</kw>
<msg timestamp="20230309 20:06:09.008" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20230309 20:06:08.997" endtime="20230309 20:06:09.009"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 20:06:09.014" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 20:06:15.159" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 20:06:15.160" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 20:06:09.011" endtime="20230309 20:06:15.160"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 20:06:15.161" level="INFO"/>
<status status="PASS" starttime="20230309 20:06:15.160" endtime="20230309 20:06:15.162"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 20:06:15.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 20:06:15.162" endtime="20230309 20:06:15.166"/>
</kw>
<status status="PASS" starttime="20230309 20:06:09.010" endtime="20230309 20:06:15.168"/>
</kw>
<msg timestamp="20230309 20:06:15.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 20:06:09.010" endtime="20230309 20:06:15.169"/>
</kw>
<status status="PASS" starttime="20230309 20:06:09.009" endtime="20230309 20:06:15.170"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 20:06:15.191" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 20:06:26.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 20:06:26.638" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 20:06:15.173" endtime="20230309 20:06:26.638"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 20:06:26.640" level="INFO"/>
<status status="PASS" starttime="20230309 20:06:26.639" endtime="20230309 20:06:26.640"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 20:06:26.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 20:06:26.640" endtime="20230309 20:06:26.641"/>
</kw>
<status status="PASS" starttime="20230309 20:06:15.172" endtime="20230309 20:06:26.642"/>
</kw>
<msg timestamp="20230309 20:06:26.642" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 20:06:15.171" endtime="20230309 20:06:26.643"/>
</kw>
<status status="PASS" starttime="20230309 20:06:15.170" endtime="20230309 20:06:26.643"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 20:06:26.649" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 20:06:35.338" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 20:06:35.338" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 20:06:26.645" endtime="20230309 20:06:35.338"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 20:06:35.339" level="INFO"/>
<status status="PASS" starttime="20230309 20:06:35.338" endtime="20230309 20:06:35.339"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 20:06:35.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 20:06:35.340" endtime="20230309 20:06:35.340"/>
</kw>
<status status="PASS" starttime="20230309 20:06:26.645" endtime="20230309 20:06:35.341"/>
</kw>
<msg timestamp="20230309 20:06:35.341" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 20:06:26.644" endtime="20230309 20:06:35.342"/>
</kw>
<status status="PASS" starttime="20230309 20:06:26.643" endtime="20230309 20:06:35.342"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 20:06:35.347" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 20:06:43.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 20:06:43.662" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 20:06:35.344" endtime="20230309 20:06:43.662"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 20:06:43.664" level="INFO"/>
<status status="PASS" starttime="20230309 20:06:43.663" endtime="20230309 20:06:43.664"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 20:06:43.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 20:06:43.665" endtime="20230309 20:06:43.665"/>
</kw>
<status status="PASS" starttime="20230309 20:06:35.344" endtime="20230309 20:06:43.666"/>
</kw>
<msg timestamp="20230309 20:06:43.666" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 20:06:35.343" endtime="20230309 20:06:43.666"/>
</kw>
<status status="PASS" starttime="20230309 20:06:35.342" endtime="20230309 20:06:43.667"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230309 20:05:40.432" endtime="20230309 20:06:43.667"/>
</test>
<test id="s1-s4-s5-t2" name="Create user dir for hadoop" line="51">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230309 20:06:43.678" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230309 20:06:43.677" endtime="20230309 20:06:43.678"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230309 20:06:43.679" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20230309 20:06:43.678" endtime="20230309 20:06:43.679"/>
</kw>
<status status="PASS" starttime="20230309 20:06:43.676" endtime="20230309 20:06:43.679"/>
</kw>
<msg timestamp="20230309 20:06:43.679" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20230309 20:06:43.675" endtime="20230309 20:06:43.679"/>
</kw>
<status status="PASS" starttime="20230309 20:06:43.674" endtime="20230309 20:06:43.680"/>
</kw>
<msg timestamp="20230309 20:06:43.680" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20230309 20:06:43.671" endtime="20230309 20:06:43.680"/>
</kw>
<msg timestamp="20230309 20:06:43.680" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20230309 20:06:43.670" endtime="20230309 20:06:43.680"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 20:06:43.685" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 20:06:48.752" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 20:06:48.752" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 20:06:43.682" endtime="20230309 20:06:48.752"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 20:06:48.754" level="INFO"/>
<status status="PASS" starttime="20230309 20:06:48.753" endtime="20230309 20:06:48.754"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 20:06:48.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 20:06:48.754" endtime="20230309 20:06:48.755"/>
</kw>
<status status="PASS" starttime="20230309 20:06:43.682" endtime="20230309 20:06:48.755"/>
</kw>
<msg timestamp="20230309 20:06:48.755" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 20:06:43.681" endtime="20230309 20:06:48.756"/>
</kw>
<status status="PASS" starttime="20230309 20:06:43.680" endtime="20230309 20:06:48.756"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230309 20:06:48.761" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20230309 20:06:53.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20230309 20:06:53.490" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230309 20:06:48.759" endtime="20230309 20:06:53.490"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230309 20:06:53.492" level="INFO"/>
<status status="PASS" starttime="20230309 20:06:53.491" endtime="20230309 20:06:53.492"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230309 20:06:53.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230309 20:06:53.492" endtime="20230309 20:06:53.493"/>
</kw>
<status status="PASS" starttime="20230309 20:06:48.758" endtime="20230309 20:06:53.493"/>
</kw>
<msg timestamp="20230309 20:06:53.493" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230309 20:06:48.758" endtime="20230309 20:06:53.494"/>
</kw>
<status status="PASS" starttime="20230309 20:06:48.756" endtime="20230309 20:06:53.494"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230309 20:06:43.669" endtime="20230309 20:06:53.494"/>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" starttime="20230309 20:05:40.338" endtime="20230309 20:06:53.496"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="307903"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="1138738"/>
</suite>
<statistics>
<total>
<stat pass="32" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="32" fail="0" skip="0" id="s1" name="ozone-mr">ozone-mr</stat>
<stat pass="8" fail="0" skip="0" id="s1-s1" name="hadoop27">ozone-mr.hadoop27</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1" name="hadoopfs-o3fs">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s2" name="mapreduce-o3fs">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s3" name="hadoopfs-ofs">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s4" name="mapreduce-ofs">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s5" name="Createmrenv">ozone-mr.hadoop27.Createmrenv</stat>
<stat pass="8" fail="0" skip="0" id="s1-s2" name="hadoop31">ozone-mr.hadoop31</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s1" name="hadoopfs-o3fs">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s2" name="mapreduce-o3fs">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s3" name="hadoopfs-ofs">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s4" name="mapreduce-ofs">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s5" name="Createmrenv">ozone-mr.hadoop31.Createmrenv</stat>
<stat pass="8" fail="0" skip="0" id="s1-s3" name="hadoop32">ozone-mr.hadoop32</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3-s1" name="hadoopfs-o3fs">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s3-s2" name="mapreduce-o3fs">ozone-mr.hadoop32.mapreduce-o3fs</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3-s3" name="hadoopfs-ofs">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s3-s4" name="mapreduce-ofs">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s3-s5" name="Createmrenv">ozone-mr.hadoop32.Createmrenv</stat>
<stat pass="8" fail="0" skip="0" id="s1-s4" name="hadoop33">ozone-mr.hadoop33</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4-s1" name="hadoopfs-o3fs">ozone-mr.hadoop33.hadoopfs-o3fs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4-s2" name="mapreduce-o3fs">ozone-mr.hadoop33.mapreduce-o3fs</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4-s3" name="hadoopfs-ofs">ozone-mr.hadoop33.hadoopfs-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4-s4" name="mapreduce-ofs">ozone-mr.hadoop33.mapreduce-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4-s5" name="Createmrenv">ozone-mr.hadoop33.Createmrenv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
