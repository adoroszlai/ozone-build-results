<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.0.2 (Python 3.8.10 on linux)" generated="20230331 10:14:51.654" rpa="false" schemaversion="3">
<suite id="s1" name="ozone-topology">
<suite id="s1-s1" name="Cli" source="/opt/hadoop/smoketest/topology/cli.robot">
<test id="s1-s1-t1" name="Run printTopology" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:10:00.614" level="INFO">Running command 'ozone admin printTopology 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:10:08.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:10:08.409" level="INFO">${output} = State = HEALTHY
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topolog...</msg>
<status status="PASS" starttime="20230331 10:10:00.608" endtime="20230331 10:10:08.409"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:10:08.411" level="INFO">State = HEALTHY
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2</msg>
<status status="PASS" starttime="20230331 10:10:08.410" endtime="20230331 10:10:08.411"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:10:08.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:10:08.411" endtime="20230331 10:10:08.412"/>
</kw>
<status status="PASS" starttime="20230331 10:10:00.607" endtime="20230331 10:10:08.414"/>
</kw>
<msg timestamp="20230331 10:10:08.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:10:00.607" endtime="20230331 10:10:08.416"/>
</kw>
<msg timestamp="20230331 10:10:08.417" level="INFO">${output} = State = HEALTHY
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topolog...</msg>
<status status="PASS" starttime="20230331 10:10:00.605" endtime="20230331 10:10:08.417"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:10:08.417" endtime="20230331 10:10:08.419"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230331 10:10:00.603" endtime="20230331 10:10:08.419"/>
</test>
<test id="s1-s1-t2" name="Run printTopology -o" line="30">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology -o</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:10:08.429" level="INFO">Running command 'ozone admin printTopology -o 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:10:15.690" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:10:15.690" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_data...</msg>
<status status="PASS" starttime="20230331 10:10:08.426" endtime="20230331 10:10:15.690"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:10:15.692" level="INFO">State = HEALTHY
Location: /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
Location: /rack2
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net) IN_SERVICE
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net) IN_SERVICE
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE</msg>
<status status="PASS" starttime="20230331 10:10:15.691" endtime="20230331 10:10:15.692"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:10:15.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:10:15.692" endtime="20230331 10:10:15.693"/>
</kw>
<status status="PASS" starttime="20230331 10:10:08.425" endtime="20230331 10:10:15.694"/>
</kw>
<msg timestamp="20230331 10:10:15.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:10:08.424" endtime="20230331 10:10:15.694"/>
</kw>
<msg timestamp="20230331 10:10:15.695" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_data...</msg>
<status status="PASS" starttime="20230331 10:10:08.423" endtime="20230331 10:10:15.695"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Location: /rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:10:15.695" endtime="20230331 10:10:15.696"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:10:15.696" endtime="20230331 10:10:15.696"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230331 10:10:08.421" endtime="20230331 10:10:15.697"/>
</test>
<test id="s1-s1-t3" name="Run printTopology --operational-state IN_SERVICE" line="34">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --operational-state IN_SERVICE</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:10:15.707" level="INFO">Running command 'ozone admin printTopology --operational-state IN_SERVICE 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:10:22.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:10:22.529" level="INFO">${output} = State = HEALTHY
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topolog...</msg>
<status status="PASS" starttime="20230331 10:10:15.703" endtime="20230331 10:10:22.529"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:10:22.530" level="INFO">State = HEALTHY
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2</msg>
<status status="PASS" starttime="20230331 10:10:22.529" endtime="20230331 10:10:22.531"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:10:22.532" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:10:22.531" endtime="20230331 10:10:22.532"/>
</kw>
<status status="PASS" starttime="20230331 10:10:15.702" endtime="20230331 10:10:22.532"/>
</kw>
<msg timestamp="20230331 10:10:22.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:10:15.701" endtime="20230331 10:10:22.533"/>
</kw>
<msg timestamp="20230331 10:10:22.533" level="INFO">${output} = State = HEALTHY
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topolog...</msg>
<status status="PASS" starttime="20230331 10:10:15.700" endtime="20230331 10:10:22.533"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:10:22.533" endtime="20230331 10:10:22.534"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230331 10:10:15.699" endtime="20230331 10:10:22.534"/>
</test>
<test id="s1-s1-t4" name="Run printTopology --node-state HEALTHY" line="37">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --node-state HEALTHY</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:10:22.542" level="INFO">Running command 'ozone admin printTopology --node-state HEALTHY 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:10:29.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:10:29.097" level="INFO">${output} = State = HEALTHY
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topolog...</msg>
<status status="PASS" starttime="20230331 10:10:22.539" endtime="20230331 10:10:29.097"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:10:29.099" level="INFO">State = HEALTHY
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2</msg>
<status status="PASS" starttime="20230331 10:10:29.098" endtime="20230331 10:10:29.099"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:10:29.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:10:29.099" endtime="20230331 10:10:29.101"/>
</kw>
<status status="PASS" starttime="20230331 10:10:22.538" endtime="20230331 10:10:29.101"/>
</kw>
<msg timestamp="20230331 10:10:29.101" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:10:22.538" endtime="20230331 10:10:29.102"/>
</kw>
<msg timestamp="20230331 10:10:29.102" level="INFO">${output} = State = HEALTHY
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topolog...</msg>
<status status="PASS" starttime="20230331 10:10:22.537" endtime="20230331 10:10:29.103"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:10:29.103" endtime="20230331 10:10:29.103"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230331 10:10:22.536" endtime="20230331 10:10:29.104"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230331 10:10:00.520" endtime="20230331 10:10:29.107"/>
</suite>
<suite id="s1-s2" name="Recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s2-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s2-s1-t1" name="Check if Recon picks up OM data" line="61">
<kw name="Execute" library="os">
<arg>ozone sh volume create recon</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:10:36.822" level="INFO">Running command 'ozone sh volume create recon 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:10:43.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:10:43.200" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230331 10:10:36.816" endtime="20230331 10:10:43.201"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:10:43.202" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230331 10:10:43.201" endtime="20230331 10:10:43.208"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:10:43.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:10:43.209" endtime="20230331 10:10:43.216"/>
</kw>
<status status="PASS" starttime="20230331 10:10:36.815" endtime="20230331 10:10:43.216"/>
</kw>
<msg timestamp="20230331 10:10:43.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:10:36.815" endtime="20230331 10:10:43.227"/>
</kw>
<status status="PASS" starttime="20230331 10:10:36.814" endtime="20230331 10:10:43.227"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create recon/api --layout=LEGACY</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:10:43.260" level="INFO">Running command 'ozone sh bucket create recon/api --layout=LEGACY 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:10:49.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:10:49.706" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230331 10:10:43.243" endtime="20230331 10:10:49.706"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:10:49.708" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230331 10:10:49.707" endtime="20230331 10:10:49.708"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:10:49.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:10:49.708" endtime="20230331 10:10:49.709"/>
</kw>
<status status="PASS" starttime="20230331 10:10:43.236" endtime="20230331 10:10:49.710"/>
</kw>
<msg timestamp="20230331 10:10:49.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:10:43.235" endtime="20230331 10:10:49.710"/>
</kw>
<status status="PASS" starttime="20230331 10:10:43.230" endtime="20230331 10:10:49.710"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>n=10</arg>
<arg>args=-s 1025 -v recon -b api</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:10:49.717" level="INFO">Running command 'ozone freon ockg  -t 1 -n10 -p ockg -s 1025 -v recon -b api 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:11:04.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:11:04.730" level="INFO">${output} = 2023-03-31 10:10:53,574 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-03-31 10:10:53,747 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230331 10:10:49.714" endtime="20230331 10:11:04.730"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:11:04.732" level="INFO">2023-03-31 10:10:53,574 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-03-31 10:10:53,747 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-03-31 10:10:53,748 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-03-31 10:10:53,871 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg and number-of-tests 10
2023-03-31 10:10:53,967 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-03-31 10:10:54,969 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-03-31 10:10:55,970 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-03-31 10:10:56,971 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-03-31 10:10:57,100 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-03-31 10:10:57,545 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-03-31 10:10:57,972 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-03-31 10:10:58,973 [Thread-5] INFO freon.ProgressBar: Progress: 10.00 % (1 out of 10)
2023-03-31 10:10:59,974 [Thread-5] INFO freon.ProgressBar: Progress: 10.00 % (1 out of 10)
2023-03-31 10:11:00,975 [Thread-5] INFO freon.ProgressBar: Progress: 10.00 % (1 out of 10)
2023-03-31 10:11:01,976 [Thread-5] INFO freon.ProgressBar: Progress: 40.00 % (4 out of 10)
2023-03-31 10:11:02,977 [Thread-5] INFO freon.ProgressBar: Progress: 80.00 % (8 out of 10)
2023-03-31 10:11:03,977 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2023-03-31 10:11:04,265 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=10, min=159.137247, max=2954.884404, mean=713.9552127386148, stddev=928.6191018495499, median=223.222149, p75=515.431939, p95=2954.884404, p98=2954.884404, p99=2954.884404, p999=2954.884404, mean_rate=1.2044075077397676, m1=0.2, m5=0.2, m15=0.2, rate_unit=events/second, duration_unit=milliseconds
2023-03-31 10:11:04,266 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 10
2023-03-31 10:11:04,266 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-03-31 10:11:04,266 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20230331 10:11:04.731" endtime="20230331 10:11:04.732"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:11:04.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:11:04.732" endtime="20230331 10:11:04.733"/>
</kw>
<status status="PASS" starttime="20230331 10:10:49.713" endtime="20230331 10:11:04.734"/>
</kw>
<msg timestamp="20230331 10:11:04.734" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:10:49.713" endtime="20230331 10:11:04.734"/>
</kw>
<msg timestamp="20230331 10:11:04.735" level="INFO">${result} = 2023-03-31 10:10:53,574 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-03-31 10:10:53,747 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230331 10:10:49.712" endtime="20230331 10:11:04.735"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:11:04.736" endtime="20230331 10:11:04.736"/>
</kw>
<status status="PASS" starttime="20230331 10:10:49.711" endtime="20230331 10:11:04.736"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230331 10:11:04.738" endtime="20230331 10:11:04.739"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:11:04.745" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:11:05.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:11:05.139" level="INFO">${output} = {"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":0},{"ContainerID":2,"NumberOfKeys":0},{"ContainerID":3,"NumberOfKeys":0},{"ContainerID":4,"NumberOfKeys":0}]}}</msg>
<status status="PASS" starttime="20230331 10:11:04.741" endtime="20230331 10:11:05.139"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:11:05.140" level="INFO">{"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":0},{"ContainerID":2,"NumberOfKeys":0},{"ContainerID":3,"NumberOfKeys":0},{"ContainerID":4,"NumberOfKeys":0}]}}</msg>
<status status="PASS" starttime="20230331 10:11:05.139" endtime="20230331 10:11:05.140"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:11:05.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:11:05.141" endtime="20230331 10:11:05.141"/>
</kw>
<status status="PASS" starttime="20230331 10:11:04.740" endtime="20230331 10:11:05.142"/>
</kw>
<msg timestamp="20230331 10:11:05.142" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:11:04.740" endtime="20230331 10:11:05.147"/>
</kw>
<msg timestamp="20230331 10:11:05.148" level="INFO">${result} = {"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":0},{"ContainerID":2,"NumberOfKeys":0},{"ContainerID":3,"NumberOfKeys":0},{"ContainerID":4,"NumberOfKeys":0}]}}</msg>
<status status="PASS" starttime="20230331 10:11:04.739" endtime="20230331 10:11:05.148"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:11:05.148" endtime="20230331 10:11:05.149"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:11:05.157" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:11:05.233" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:11:05.233" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230331 10:11:05.154" endtime="20230331 10:11:05.233"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:11:05.235" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230331 10:11:05.234" endtime="20230331 10:11:05.235"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:11:05.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:11:05.235" endtime="20230331 10:11:05.236"/>
</kw>
<status status="PASS" starttime="20230331 10:11:05.151" endtime="20230331 10:11:05.238"/>
</kw>
<msg timestamp="20230331 10:11:05.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:11:05.150" endtime="20230331 10:11:05.239"/>
</kw>
<msg timestamp="20230331 10:11:05.240" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230331 10:11:05.149" endtime="20230331 10:11:05.240"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230331 10:11:05.241" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20230331 10:11:05.240" endtime="20230331 10:11:05.241"/>
</kw>
<status status="FAIL" starttime="20230331 10:11:04.737" endtime="20230331 10:11:05.242"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230331 10:11:15.244" endtime="20230331 10:11:15.245"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:11:15.251" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:11:15.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:11:15.273" level="INFO">${output} = {"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":0},{"ContainerID":2,"NumberOfKeys":0},{"ContainerID":3,"NumberOfKeys":0},{"ContainerID":4,"NumberOfKeys":0}]}}</msg>
<status status="PASS" starttime="20230331 10:11:15.247" endtime="20230331 10:11:15.273"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:11:15.275" level="INFO">{"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":0},{"ContainerID":2,"NumberOfKeys":0},{"ContainerID":3,"NumberOfKeys":0},{"ContainerID":4,"NumberOfKeys":0}]}}</msg>
<status status="PASS" starttime="20230331 10:11:15.274" endtime="20230331 10:11:15.275"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:11:15.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:11:15.275" endtime="20230331 10:11:15.277"/>
</kw>
<status status="PASS" starttime="20230331 10:11:15.246" endtime="20230331 10:11:15.277"/>
</kw>
<msg timestamp="20230331 10:11:15.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:11:15.246" endtime="20230331 10:11:15.278"/>
</kw>
<msg timestamp="20230331 10:11:15.279" level="INFO">${result} = {"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":0},{"ContainerID":2,"NumberOfKeys":0},{"ContainerID":3,"NumberOfKeys":0},{"ContainerID":4,"NumberOfKeys":0}]}}</msg>
<status status="PASS" starttime="20230331 10:11:15.245" endtime="20230331 10:11:15.279"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:11:15.279" endtime="20230331 10:11:15.280"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:11:15.286" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:11:15.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:11:15.307" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230331 10:11:15.283" endtime="20230331 10:11:15.307"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:11:15.310" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230331 10:11:15.308" endtime="20230331 10:11:15.310"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:11:15.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:11:15.312" endtime="20230331 10:11:15.314"/>
</kw>
<status status="PASS" starttime="20230331 10:11:15.282" endtime="20230331 10:11:15.315"/>
</kw>
<msg timestamp="20230331 10:11:15.315" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:11:15.281" endtime="20230331 10:11:15.315"/>
</kw>
<msg timestamp="20230331 10:11:15.316" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230331 10:11:15.280" endtime="20230331 10:11:15.316"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230331 10:11:15.317" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20230331 10:11:15.316" endtime="20230331 10:11:15.318"/>
</kw>
<status status="FAIL" starttime="20230331 10:11:15.243" endtime="20230331 10:11:15.319"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230331 10:11:25.321" endtime="20230331 10:11:25.322"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:11:25.328" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:11:25.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:11:25.353" level="INFO">${output} = {"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":0},{"ContainerID":2,"NumberOfKeys":0},{"ContainerID":3,"NumberOfKeys":0},{"ContainerID":4,"NumberOfKeys":0}]}}</msg>
<status status="PASS" starttime="20230331 10:11:25.325" endtime="20230331 10:11:25.353"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:11:25.355" level="INFO">{"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":0},{"ContainerID":2,"NumberOfKeys":0},{"ContainerID":3,"NumberOfKeys":0},{"ContainerID":4,"NumberOfKeys":0}]}}</msg>
<status status="PASS" starttime="20230331 10:11:25.354" endtime="20230331 10:11:25.355"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:11:25.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:11:25.355" endtime="20230331 10:11:25.357"/>
</kw>
<status status="PASS" starttime="20230331 10:11:25.324" endtime="20230331 10:11:25.360"/>
</kw>
<msg timestamp="20230331 10:11:25.360" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:11:25.323" endtime="20230331 10:11:25.361"/>
</kw>
<msg timestamp="20230331 10:11:25.361" level="INFO">${result} = {"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":0},{"ContainerID":2,"NumberOfKeys":0},{"ContainerID":3,"NumberOfKeys":0},{"ContainerID":4,"NumberOfKeys":0}]}}</msg>
<status status="PASS" starttime="20230331 10:11:25.322" endtime="20230331 10:11:25.361"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:11:25.362" endtime="20230331 10:11:25.362"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:11:25.370" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:11:25.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:11:25.394" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20230331 10:11:25.366" endtime="20230331 10:11:25.396"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:11:25.397" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20230331 10:11:25.396" endtime="20230331 10:11:25.401"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:11:25.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:11:25.403" endtime="20230331 10:11:25.405"/>
</kw>
<status status="PASS" starttime="20230331 10:11:25.366" endtime="20230331 10:11:25.406"/>
</kw>
<msg timestamp="20230331 10:11:25.406" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:11:25.365" endtime="20230331 10:11:25.407"/>
</kw>
<msg timestamp="20230331 10:11:25.407" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20230331 10:11:25.363" endtime="20230331 10:11:25.407"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:11:25.408" endtime="20230331 10:11:25.409"/>
</kw>
<status status="PASS" starttime="20230331 10:11:25.320" endtime="20230331 10:11:25.409"/>
</kw>
<status status="PASS" starttime="20230331 10:11:04.737" endtime="20230331 10:11:25.409"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230331 10:10:36.813" endtime="20230331 10:11:25.410"/>
</test>
<test id="s1-s2-s1-t2" name="Check if Recon picks up DN heartbeats" line="71">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/datanodes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:11:25.423" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:11:25.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:11:25.535" level="INFO">${output} = {"totalCount":6,"datanodes":[{"uuid":"894de6c8-1588-4973-bf71-fa23dd135d2f","hostname":"ozone-topology_datanode_3_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"stor...</msg>
<status status="PASS" starttime="20230331 10:11:25.416" endtime="20230331 10:11:25.535"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:11:25.536" level="INFO">{"totalCount":6,"datanodes":[{"uuid":"894de6c8-1588-4973-bf71-fa23dd135d2f","hostname":"ozone-topology_datanode_3_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":4096,"remaining":23255900160},"pipelines":[{"pipelineID":"d95af05a-c1c8-47c8-b533-8f7b59cf47d3","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"93c1dbe2-c493-41ae-9dca-ef7d0b0c2811","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"},{"pipelineID":"58141f82-b85c-4909-8aa3-b8e9972b931e","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.4.0-SNAPSHOT","setupTime":1680257223014,"revision":"54a5a3c59ce450f81d71d8412fcebbd334d2a59e","buildDate":"2023-03-31T09:29Z","layoutVersion":5,"networkLocation":"/rack1"},{"uuid":"f21cb162-19ec-445c-81db-d31c540ad1a7","hostname":"ozone-topology_datanode_6_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":4096,"remaining":23255900160},"pipelines":[{"pipelineID":"d95af05a-c1c8-47c8-b533-8f7b59cf47d3","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"93c1dbe2-c493-41ae-9dca-ef7d0b0c2811","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"},{"pipelineID":"e06a1063-55a9-4ebb-a299-196b33234771","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":1,"version":"1.4.0-SNAPSHOT","setupTime":1680257223801,"revision":"54a5a3c59ce450f81d71d8412fcebbd334d2a59e","buildDate":"2023-03-31T09:29Z","layoutVersion":5,"networkLocation":"/rack2"},{"uuid":"1f009a92-f12a-461c-8298-46762f7ffe4d","hostname":"ozone-topology_datanode_2_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":4096,"remaining":23255900160},"pipelines":[{"pipelineID":"d95af05a-c1c8-47c8-b533-8f7b59cf47d3","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"93c1dbe2-c493-41ae-9dca-ef7d0b0c2811","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"},{"pipelineID":"178a8f7e-f3dc-4245-9c57-a7a3de6afb06","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.4.0-SNAPSHOT","setupTime":1680257224710,"revision":"54a5a3c59ce450f81d71d8412fcebbd334d2a59e","buildDate":"2023-03-31T09:29Z","layoutVersion":5,"networkLocation":"/rack1"},{"uuid":"9dc30683-b65d-4b47-a6f5-dd8409068c34","hostname":"ozone-topology_datanode_5_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":14336,"remaining":23255900160},"pipelines":[{"pipelineID":"ab9bfedb-b151-43a6-a850-84df74489399","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"fcd17ce1-0ed7-4550-8904-f35d4582d0e5","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"73bc783c-5277-4250-96f5-0d80c49b2ee2","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":1,"version":"1.4.0-SNAPSHOT","setupTime":1680257223792,"revision":"54a5a3c59ce450f81d71d8412fcebbd334d2a59e","buildDate":"2023-03-31T09:29Z","layoutVersion":5,"networkLocation":"/rack2"},{"uuid":"b4193919-8a80-4565-9059-2eeada68dd85","hostname":"ozone-topology_datanode_1_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":18432,"remaining":23255900160},"pipelines":[{"pipelineID":"fcd17ce1-0ed7-4550-8904-f35d4582d0e5","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"69ad77b5-627b-4a53-b53e-d8581ac7a8ab","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"},{"pipelineID":"73bc783c-5277-4250-96f5-0d80c49b2ee2","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.4.0-SNAPSHOT","setupTime":1680257223609,"revision":"54a5a3c59ce450f81d71d8412fcebbd334d2a59e","buildDate":"2023-03-31T09:29Z","layoutVersion":5,"networkLocation":"/rack1"},{"uuid":"63b1bf94-2188-40b5-9756-4c385745c4c8","hostname":"ozone-topology_datanode_4_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":14336,"remaining":23255900160},"pipelines":[{"pipelineID":"761e87bf-499f-447a-8ae0-c569838114e9","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"fcd17ce1-0ed7-4550-8904-f35d4582d0e5","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"73bc783c-5277-4250-96f5-0d80c49b2ee2","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.4.0-SNAPSHOT","setupTime":1680257224805,"revision":"54a5a3c59ce450f81d71d8412fcebbd334d2a59e","buildDate":"2023-03-31T09:29Z","layoutVersion":5,"networkLocation":"/rack2"}]}</msg>
<status status="PASS" starttime="20230331 10:11:25.535" endtime="20230331 10:11:25.537"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:11:25.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:11:25.538" endtime="20230331 10:11:25.538"/>
</kw>
<status status="PASS" starttime="20230331 10:11:25.415" endtime="20230331 10:11:25.539"/>
</kw>
<msg timestamp="20230331 10:11:25.539" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:11:25.414" endtime="20230331 10:11:25.540"/>
</kw>
<msg timestamp="20230331 10:11:25.540" level="INFO">${result} = {"totalCount":6,"datanodes":[{"uuid":"894de6c8-1588-4973-bf71-fa23dd135d2f","hostname":"ozone-topology_datanode_3_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"stor...</msg>
<status status="PASS" starttime="20230331 10:11:25.413" endtime="20230331 10:11:25.540"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanodes</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:11:25.540" endtime="20230331 10:11:25.542"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:11:25.542" endtime="20230331 10:11:25.542"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:11:25.543" endtime="20230331 10:11:25.543"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:11:25.543" endtime="20230331 10:11:25.544"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/pipelines</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:11:25.552" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:11:25.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:11:25.704" level="INFO">${output} = {"totalCount":10,"pipelines":[{"pipelineId":"d95af05a-c1c8-47c8-b533-8f7b59cf47d3","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"...</msg>
<status status="PASS" starttime="20230331 10:11:25.547" endtime="20230331 10:11:25.704"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:11:25.706" level="INFO">{"totalCount":10,"pipelines":[{"pipelineId":"d95af05a-c1c8-47c8-b533-8f7b59cf47d3","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"894de6c8-1588-4973-bf71-fa23dd135d2f","uuidString":"894de6c8-1588-4973-bf71-fa23dd135d2f","ipAddress":"10.5.0.6","hostName":"ozone-topology_datanode_3_1.ozone-topology_net","ports":[{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":74436202,"decomissioned":false,"networkName":"894de6c8-1588-4973-bf71-fa23dd135d2f","networkLocation":"/rack1","networkFullPath":"/rack1/894de6c8-1588-4973-bf71-fa23dd135d2f","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"f21cb162-19ec-445c-81db-d31c540ad1a7","uuidString":"f21cb162-19ec-445c-81db-d31c540ad1a7","ipAddress":"10.5.0.9","hostName":"ozone-topology_datanode_6_1.ozone-topology_net","ports":[{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":369145613,"decomissioned":false,"networkName":"f21cb162-19ec-445c-81db-d31c540ad1a7","networkLocation":"/rack2","networkFullPath":"/rack2/f21cb162-19ec-445c-81db-d31c540ad1a7","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"1f009a92-f12a-461c-8298-46762f7ffe4d","uuidString":"1f009a92-f12a-461c-8298-46762f7ffe4d","ipAddress":"10.5.0.5","hostName":"ozone-topology_datanode_2_1.ozone-topology_net","ports":[{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":553960577,"decomissioned":false,"networkName":"1f009a92-f12a-461c-8298-46762f7ffe4d","networkLocation":"/rack1","networkFullPath":"/rack1/1f009a92-f12a-461c-8298-46762f7ffe4d","numOfLeaves":1}],"lastLeaderElection":0,"duration":186634,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"93c1dbe2-c493-41ae-9dca-ef7d0b0c2811","status":"OPEN","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"894de6c8-1588-4973-bf71-fa23dd135d2f","uuidString":"894de6c8-1588-4973-bf71-fa23dd135d2f","ipAddress":"10.5.0.6","hostName":"ozone-topology_datanode_3_1.ozone-topology_net","ports":[{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":74436202,"decomissioned":false,"networkName":"894de6c8-1588-4973-bf71-fa23dd135d2f","networkLocation":"/rack1","networkFullPath":"/rack1/894de6c8-1588-4973-bf71-fa23dd135d2f","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"f21cb162-19ec-445c-81db-d31c540ad1a7","uuidString":"f21cb162-19ec-445c-81db-d31c540ad1a7","ipAddress":"10.5.0.9","hostName":"ozone-topology_datanode_6_1.ozone-topology_net","ports":[{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":369145613,"decomissioned":false,"networkName":"f21cb162-19ec-445c-81db-d31c540ad1a7","networkLocation":"/rack2","networkFullPath":"/rack2/f21cb162-19ec-445c-81db-d31c540ad1a7","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"1f009a92-f12a-461c-8298-46762f7ffe4d","uuidString":"1f009a92-f12a-461c-8298-46762f7ffe4d","ipAddress":"10.5.0.5","hostName":"ozone-topology_datanode_2_1.ozone-topology_net","ports":[{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":553960577,"decomissioned":false,"networkName":"1f009a92-f12a-461c-8298-46762f7ffe4d","networkLocation":"/rack1","networkFullPath":"/rack1/1f009a92-f12a-461c-8298-46762f7ffe4d","numOfLeaves":1}],"lastLeaderElection":0,"duration":186343,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"178a8f7e-f3dc-4245-9c57-a7a3de6afb06","status":"OPEN","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"1f009a92-f12a-461c-8298-46762f7ffe4d","uuidString":"1f009a92-f12a-461c-8298-46762f7ffe4d","ipAddress":"10.5.0.5","hostName":"ozone-topology_datanode_2_1.ozone-topology_net","ports":[{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":553960577,"decomissioned":false,"networkName":"1f009a92-f12a-461c-8298-46762f7ffe4d","networkLocation":"/rack1","networkFullPath":"/rack1/1f009a92-f12a-461c-8298-46762f7ffe4d","numOfLeaves":1}],"lastLeaderElection":0,"duration":186304,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"761e87bf-499f-447a-8ae0-c569838114e9","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"63b1bf94-2188-40b5-9756-4c385745c4c8","uuidString":"63b1bf94-2188-40b5-9756-4c385745c4c8","ipAddress":"10.5.0.7","hostName":"ozone-topology_datanode_4_1.ozone-topology_net","ports":[{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-498101040,"decomissioned":false,"networkName":"63b1bf94-2188-40b5-9756-4c385745c4c8","networkLocation":"/rack2","networkFullPath":"/rack2/63b1bf94-2188-40b5-9756-4c385745c4c8","numOfLeaves":1}],"lastLeaderElection":0,"duration":186131,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"ab9bfedb-b151-43a6-a850-84df74489399","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"9dc30683-b65d-4b47-a6f5-dd8409068c34","uuidString":"9dc30683-b65d-4b47-a6f5-dd8409068c34","ipAddress":"10.5.0.8","hostName":"ozone-topology_datanode_5_1.ozone-topology_net","ports":[{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":1701040943,"decomissioned":false,"networkName":"9dc30683-b65d-4b47-a6f5-dd8409068c34","networkLocation":"/rack2","networkFullPath":"/rack2/9dc30683-b65d-4b47-a6f5-dd8409068c34","numOfLeaves":1}],"lastLeaderElection":0,"duration":189885,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"fcd17ce1-0ed7-4550-8904-f35d4582d0e5","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"9dc30683-b65d-4b47-a6f5-dd8409068c34","uuidString":"9dc30683-b65d-4b47-a6f5-dd8409068c34","ipAddress":"10.5.0.8","hostName":"ozone-topology_datanode_5_1.ozone-topology_net","ports":[{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":1701040943,"decomissioned":false,"networkName":"9dc30683-b65d-4b47-a6f5-dd8409068c34","networkLocation":"/rack2","networkFullPath":"/rack2/9dc30683-b65d-4b47-a6f5-dd8409068c34","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"b4193919-8a80-4565-9059-2eeada68dd85","uuidString":"b4193919-8a80-4565-9059-2eeada68dd85","ipAddress":"10.5.0.4","hostName":"ozone-topology_datanode_1_1.ozone-topology_net","ports":[{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":389614578,"decomissioned":false,"networkName":"b4193919-8a80-4565-9059-2eeada68dd85","networkLocation":"/rack1","networkFullPath":"/rack1/b4193919-8a80-4565-9059-2eeada68dd85","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"63b1bf94-2188-40b5-9756-4c385745c4c8","uuidString":"63b1bf94-2188-40b5-9756-4c385745c4c8","ipAddress":"10.5.0.7","hostName":"ozone-topology_datanode_4_1.ozone-topology_net","ports":[{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-498101040,"decomissioned":false,"networkName":"63b1bf94-2188-40b5-9756-4c385745c4c8","networkLocation":"/rack2","networkFullPath":"/rack2/63b1bf94-2188-40b5-9756-4c385745c4c8","numOfLeaves":1}],"lastLeaderElection":0,"duration":186290,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"69ad77b5-627b-4a53-b53e-d8581ac7a8ab","status":"OPEN","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"b4193919-8a80-4565-9059-2eeada68dd85","uuidString":"b4193919-8a80-4565-9059-2eeada68dd85","ipAddress":"10.5.0.4","hostName":"ozone-topology_datanode_1_1.ozone-topology_net","ports":[{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":389614578,"decomissioned":false,"networkName":"b4193919-8a80-4565-9059-2eeada68dd85","networkLocation":"/rack1","networkFullPath":"/rack1/b4193919-8a80-4565-9059-2eeada68dd85","numOfLeaves":1}],"lastLeaderElection":0,"duration":186205,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"73bc783c-5277-4250-96f5-0d80c49b2ee2","status":"OPEN","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"9dc30683-b65d-4b47-a6f5-dd8409068c34","uuidString":"9dc30683-b65d-4b47-a6f5-dd8409068c34","ipAddress":"10.5.0.8","hostName":"ozone-topology_datanode_5_1.ozone-topology_net","ports":[{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":1701040943,"decomissioned":false,"networkName":"9dc30683-b65d-4b47-a6f5-dd8409068c34","networkLocation":"/rack2","networkFullPath":"/rack2/9dc30683-b65d-4b47-a6f5-dd8409068c34","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"b4193919-8a80-4565-9059-2eeada68dd85","uuidString":"b4193919-8a80-4565-9059-2eeada68dd85","ipAddress":"10.5.0.4","hostName":"ozone-topology_datanode_1_1.ozone-topology_net","ports":[{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":389614578,"decomissioned":false,"networkName":"b4193919-8a80-4565-9059-2eeada68dd85","networkLocation":"/rack1","networkFullPath":"/rack1/b4193919-8a80-4565-9059-2eeada68dd85","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"63b1bf94-2188-40b5-9756-4c385745c4c8","uuidString":"63b1bf94-2188-40b5-9756-4c385745c4c8","ipAddress":"10.5.0.7","hostName":"ozone-topology_datanode_4_1.ozone-topology_net","ports":[{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-498101040,"decomissioned":false,"networkName":"63b1bf94-2188-40b5-9756-4c385745c4c8","networkLocation":"/rack2","networkFullPath":"/rack2/63b1bf94-2188-40b5-9756-4c385745c4c8","numOfLeaves":1}],"lastLeaderElection":0,"duration":186446,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"e06a1063-55a9-4ebb-a299-196b33234771","status":"OPEN","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"f21cb162-19ec-445c-81db-d31c540ad1a7","uuidString":"f21cb162-19ec-445c-81db-d31c540ad1a7","ipAddress":"10.5.0.9","hostName":"ozone-topology_datanode_6_1.ozone-topology_net","ports":[{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":369145613,"decomissioned":false,"networkName":"f21cb162-19ec-445c-81db-d31c540ad1a7","networkLocation":"/rack2","networkFullPath":"/rack2/f21cb162-19ec-445c-81db-d31c540ad1a7","numOfLeaves":1}],"lastLeaderElection":0,"duration":186395,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"58141f82-b85c-4909-8aa3-b8e9972b931e","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"894de6c8-1588-4973-bf71-fa23dd135d2f","uuidString":"894de6c8-1588-4973-bf71-fa23dd135d2f","ipAddress":"10.5.0.6","hostName":"ozone-topology_datanode_3_1.ozone-topology_net","ports":[{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":74436202,"decomissioned":false,"networkName":"894de6c8-1588-4973-bf71-fa23dd135d2f","networkLocation":"/rack1","networkFullPath":"/rack1/894de6c8-1588-4973-bf71-fa23dd135d2f","numOfLeaves":1}],"lastLeaderElection":0,"duration":186521,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0}]}</msg>
<status status="PASS" starttime="20230331 10:11:25.705" endtime="20230331 10:11:25.707"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:11:25.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:11:25.707" endtime="20230331 10:11:25.708"/>
</kw>
<status status="PASS" starttime="20230331 10:11:25.546" endtime="20230331 10:11:25.710"/>
</kw>
<msg timestamp="20230331 10:11:25.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:11:25.545" endtime="20230331 10:11:25.712"/>
</kw>
<msg timestamp="20230331 10:11:25.714" level="INFO">${result} = {"totalCount":10,"pipelines":[{"pipelineId":"d95af05a-c1c8-47c8-b533-8f7b59cf47d3","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"...</msg>
<status status="PASS" starttime="20230331 10:11:25.544" endtime="20230331 10:11:25.714"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>pipelines</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:11:25.714" endtime="20230331 10:11:25.715"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:11:25.715" endtime="20230331 10:11:25.716"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:11:25.716" endtime="20230331 10:11:25.717"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:11:25.717" endtime="20230331 10:11:25.718"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:11:25.718" endtime="20230331 10:11:25.719"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:11:25.720" endtime="20230331 10:11:25.721"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/clusterState</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:11:25.727" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:11:25.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:11:25.847" level="INFO">${output} = {"deletedDirs":0,"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":59392,"remaining":139535400960},"containers":4,"missingContainers":0,"openContai...</msg>
<status status="PASS" starttime="20230331 10:11:25.723" endtime="20230331 10:11:25.847"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:11:25.848" level="INFO">{"deletedDirs":0,"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":59392,"remaining":139535400960},"containers":4,"missingContainers":0,"openContainers":4,"volumes":3,"buckets":2,"keys":11,"deletedKeys":0}</msg>
<status status="PASS" starttime="20230331 10:11:25.847" endtime="20230331 10:11:25.848"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:11:25.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:11:25.849" endtime="20230331 10:11:25.850"/>
</kw>
<status status="PASS" starttime="20230331 10:11:25.722" endtime="20230331 10:11:25.851"/>
</kw>
<msg timestamp="20230331 10:11:25.851" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:11:25.722" endtime="20230331 10:11:25.852"/>
</kw>
<msg timestamp="20230331 10:11:25.852" level="INFO">${result} = {"deletedDirs":0,"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":59392,"remaining":139535400960},"containers":4,"missingContainers":0,"openContai...</msg>
<status status="PASS" starttime="20230331 10:11:25.721" endtime="20230331 10:11:25.852"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"totalDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:11:25.853" endtime="20230331 10:11:25.854"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"healthyDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:11:25.854" endtime="20230331 10:11:25.855"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"pipelines\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:11:25.855" endtime="20230331 10:11:25.856"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:11:25.863" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:11:25.897" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:11:25.897" level="INFO">${output} = [{"containerId":1,"datanodeUuid":"9dc30683-b65d-4b47-a6f5-dd8409068c34","datanodeHost":"ozone-topology_datanode_5_1.ozone-topology_net","firstSeenTime":1680257376994,"lastSeenTime":1680257376994,"last...</msg>
<status status="PASS" starttime="20230331 10:11:25.859" endtime="20230331 10:11:25.897"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:11:25.898" level="INFO">[{"containerId":1,"datanodeUuid":"9dc30683-b65d-4b47-a6f5-dd8409068c34","datanodeHost":"ozone-topology_datanode_5_1.ozone-topology_net","firstSeenTime":1680257376994,"lastSeenTime":1680257376994,"lastBcsId":0},{"containerId":1,"datanodeUuid":"b4193919-8a80-4565-9059-2eeada68dd85","datanodeHost":"ozone-topology_datanode_1_1.ozone-topology_net","firstSeenTime":1680257375745,"lastSeenTime":1680257375745,"lastBcsId":0},{"containerId":1,"datanodeUuid":"63b1bf94-2188-40b5-9756-4c385745c4c8","datanodeHost":"ozone-topology_datanode_4_1.ozone-topology_net","firstSeenTime":1680257375991,"lastSeenTime":1680257375991,"lastBcsId":0}]</msg>
<status status="PASS" starttime="20230331 10:11:25.897" endtime="20230331 10:11:25.899"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:11:25.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:11:25.899" endtime="20230331 10:11:25.900"/>
</kw>
<status status="PASS" starttime="20230331 10:11:25.858" endtime="20230331 10:11:25.900"/>
</kw>
<msg timestamp="20230331 10:11:25.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:11:25.858" endtime="20230331 10:11:25.901"/>
</kw>
<msg timestamp="20230331 10:11:25.902" level="INFO">${result} = [{"containerId":1,"datanodeUuid":"9dc30683-b65d-4b47-a6f5-dd8409068c34","datanodeHost":"ozone-topology_datanode_5_1.ozone-topology_net","firstSeenTime":1680257376994,"lastSeenTime":1680257376994,"last...</msg>
<status status="PASS" starttime="20230331 10:11:25.857" endtime="20230331 10:11:25.902"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:11:25.902" endtime="20230331 10:11:25.903"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230331 10:11:25.412" endtime="20230331 10:11:25.903"/>
</test>
<test id="s1-s2-s1-t3" name="Check if Recon Web UI is up" line="94">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230331 10:11:25.910" endtime="20230331 10:11:25.910"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${ENDPOINT_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:11:25.917" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:11:25.945" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:11:25.945" level="INFO">${output} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20230331 10:11:25.913" endtime="20230331 10:11:25.945"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:11:25.947" level="INFO">&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.7465223f.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.63708a22.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.9a382341.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.cc783db0.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20230331 10:11:25.945" endtime="20230331 10:11:25.947"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:11:25.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:11:25.947" endtime="20230331 10:11:25.948"/>
</kw>
<status status="PASS" starttime="20230331 10:11:25.912" endtime="20230331 10:11:25.948"/>
</kw>
<msg timestamp="20230331 10:11:25.948" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:11:25.912" endtime="20230331 10:11:25.949"/>
</kw>
<msg timestamp="20230331 10:11:25.949" level="INFO">${result} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20230331 10:11:25.911" endtime="20230331 10:11:25.949"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Ozone Recon</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:11:25.950" endtime="20230331 10:11:25.950"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230331 10:11:25.907" endtime="20230331 10:11:25.951"/>
</test>
<test id="s1-s2-s1-t4" name="Check web UI access" line="99">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:11:25.961" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:11:25.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:11:25.971" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230331 10:11:25.957" endtime="20230331 10:11:25.971"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:11:25.973" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230331 10:11:25.972" endtime="20230331 10:11:25.973"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:11:25.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:11:25.973" endtime="20230331 10:11:25.975"/>
</kw>
<status status="PASS" starttime="20230331 10:11:25.956" endtime="20230331 10:11:25.975"/>
</kw>
<msg timestamp="20230331 10:11:25.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:11:25.956" endtime="20230331 10:11:25.976"/>
</kw>
<status status="PASS" starttime="20230331 10:11:25.955" endtime="20230331 10:11:25.976"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:11:25.983" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:11:26.002" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:11:26.002" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230331 10:11:25.980" endtime="20230331 10:11:26.002"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:11:26.004" level="INFO">200</msg>
<status status="PASS" starttime="20230331 10:11:26.003" endtime="20230331 10:11:26.004"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:11:26.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:11:26.005" endtime="20230331 10:11:26.006"/>
</kw>
<status status="PASS" starttime="20230331 10:11:25.979" endtime="20230331 10:11:26.006"/>
</kw>
<msg timestamp="20230331 10:11:26.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:11:25.979" endtime="20230331 10:11:26.007"/>
</kw>
<msg timestamp="20230331 10:11:26.007" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230331 10:11:25.978" endtime="20230331 10:11:26.007"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230331 10:11:26.008" endtime="20230331 10:11:26.008"/>
</kw>
<status status="NOT RUN" starttime="20230331 10:11:26.008" endtime="20230331 10:11:26.008"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:11:26.008" endtime="20230331 10:11:26.009"/>
</kw>
<status status="PASS" starttime="20230331 10:11:26.008" endtime="20230331 10:11:26.009"/>
</branch>
<status status="PASS" starttime="20230331 10:11:26.007" endtime="20230331 10:11:26.009"/>
</if>
<status status="PASS" starttime="20230331 10:11:25.977" endtime="20230331 10:11:26.009"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230331 10:11:26.010" endtime="20230331 10:11:26.011"/>
</kw>
<status status="PASS" starttime="20230331 10:11:26.010" endtime="20230331 10:11:26.011"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:11:26.018" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:11:26.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:11:26.038" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230331 10:11:26.013" endtime="20230331 10:11:26.038"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:11:26.040" level="INFO">200</msg>
<status status="PASS" starttime="20230331 10:11:26.039" endtime="20230331 10:11:26.040"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:11:26.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:11:26.040" endtime="20230331 10:11:26.041"/>
</kw>
<status status="PASS" starttime="20230331 10:11:26.012" endtime="20230331 10:11:26.041"/>
</kw>
<msg timestamp="20230331 10:11:26.042" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:11:26.012" endtime="20230331 10:11:26.042"/>
</kw>
<msg timestamp="20230331 10:11:26.043" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230331 10:11:26.011" endtime="20230331 10:11:26.043"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230331 10:11:26.043" endtime="20230331 10:11:26.044"/>
</kw>
<status status="NOT RUN" starttime="20230331 10:11:26.043" endtime="20230331 10:11:26.044"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:11:26.044" endtime="20230331 10:11:26.045"/>
</kw>
<status status="PASS" starttime="20230331 10:11:26.044" endtime="20230331 10:11:26.045"/>
</branch>
<status status="PASS" starttime="20230331 10:11:26.043" endtime="20230331 10:11:26.045"/>
</if>
<status status="PASS" starttime="20230331 10:11:26.011" endtime="20230331 10:11:26.046"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230331 10:11:25.953" endtime="20230331 10:11:26.046"/>
</test>
<test id="s1-s2-s1-t5" name="Check admin only api access" line="107">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:11:26.059" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:11:26.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:11:26.065" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230331 10:11:26.055" endtime="20230331 10:11:26.065"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:11:26.066" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230331 10:11:26.065" endtime="20230331 10:11:26.066"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:11:26.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:11:26.067" endtime="20230331 10:11:26.067"/>
</kw>
<status status="PASS" starttime="20230331 10:11:26.054" endtime="20230331 10:11:26.068"/>
</kw>
<msg timestamp="20230331 10:11:26.068" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:11:26.054" endtime="20230331 10:11:26.069"/>
</kw>
<status status="PASS" starttime="20230331 10:11:26.053" endtime="20230331 10:11:26.070"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:11:26.078" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:11:26.101" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:11:26.101" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230331 10:11:26.072" endtime="20230331 10:11:26.102"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:11:26.103" level="INFO">200</msg>
<status status="PASS" starttime="20230331 10:11:26.102" endtime="20230331 10:11:26.103"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:11:26.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:11:26.103" endtime="20230331 10:11:26.105"/>
</kw>
<status status="PASS" starttime="20230331 10:11:26.072" endtime="20230331 10:11:26.106"/>
</kw>
<msg timestamp="20230331 10:11:26.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:11:26.071" endtime="20230331 10:11:26.106"/>
</kw>
<msg timestamp="20230331 10:11:26.107" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230331 10:11:26.071" endtime="20230331 10:11:26.107"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230331 10:11:26.107" endtime="20230331 10:11:26.108"/>
</kw>
<status status="NOT RUN" starttime="20230331 10:11:26.107" endtime="20230331 10:11:26.108"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:11:26.108" endtime="20230331 10:11:26.108"/>
</kw>
<status status="PASS" starttime="20230331 10:11:26.108" endtime="20230331 10:11:26.109"/>
</branch>
<status status="PASS" starttime="20230331 10:11:26.107" endtime="20230331 10:11:26.109"/>
</if>
<status status="PASS" starttime="20230331 10:11:26.070" endtime="20230331 10:11:26.109"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230331 10:11:26.110" endtime="20230331 10:11:26.110"/>
</kw>
<status status="PASS" starttime="20230331 10:11:26.109" endtime="20230331 10:11:26.110"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:11:26.116" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:11:26.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:11:26.141" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230331 10:11:26.113" endtime="20230331 10:11:26.141"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:11:26.143" level="INFO">200</msg>
<status status="PASS" starttime="20230331 10:11:26.141" endtime="20230331 10:11:26.143"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:11:26.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:11:26.143" endtime="20230331 10:11:26.144"/>
</kw>
<status status="PASS" starttime="20230331 10:11:26.112" endtime="20230331 10:11:26.145"/>
</kw>
<msg timestamp="20230331 10:11:26.145" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:11:26.112" endtime="20230331 10:11:26.146"/>
</kw>
<msg timestamp="20230331 10:11:26.147" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230331 10:11:26.111" endtime="20230331 10:11:26.147"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230331 10:11:26.147" endtime="20230331 10:11:26.147"/>
</kw>
<status status="NOT RUN" starttime="20230331 10:11:26.147" endtime="20230331 10:11:26.147"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:11:26.148" endtime="20230331 10:11:26.148"/>
</kw>
<status status="PASS" starttime="20230331 10:11:26.148" endtime="20230331 10:11:26.148"/>
</branch>
<status status="PASS" starttime="20230331 10:11:26.147" endtime="20230331 10:11:26.148"/>
</if>
<status status="PASS" starttime="20230331 10:11:26.111" endtime="20230331 10:11:26.149"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230331 10:11:26.150" endtime="20230331 10:11:26.150"/>
</kw>
<status status="PASS" starttime="20230331 10:11:26.149" endtime="20230331 10:11:26.151"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:11:26.165" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:11:26.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:11:26.195" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230331 10:11:26.160" endtime="20230331 10:11:26.195"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:11:26.200" level="INFO">200</msg>
<status status="PASS" starttime="20230331 10:11:26.195" endtime="20230331 10:11:26.202"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:11:26.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:11:26.203" endtime="20230331 10:11:26.205"/>
</kw>
<status status="PASS" starttime="20230331 10:11:26.159" endtime="20230331 10:11:26.208"/>
</kw>
<msg timestamp="20230331 10:11:26.208" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:11:26.159" endtime="20230331 10:11:26.210"/>
</kw>
<msg timestamp="20230331 10:11:26.212" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230331 10:11:26.158" endtime="20230331 10:11:26.212"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230331 10:11:26.214" endtime="20230331 10:11:26.214"/>
</kw>
<status status="NOT RUN" starttime="20230331 10:11:26.213" endtime="20230331 10:11:26.214"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:11:26.214" endtime="20230331 10:11:26.215"/>
</kw>
<status status="PASS" starttime="20230331 10:11:26.214" endtime="20230331 10:11:26.215"/>
</branch>
<status status="PASS" starttime="20230331 10:11:26.212" endtime="20230331 10:11:26.215"/>
</if>
<status status="PASS" starttime="20230331 10:11:26.156" endtime="20230331 10:11:26.215"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230331 10:11:26.217" endtime="20230331 10:11:26.218"/>
</kw>
<status status="PASS" starttime="20230331 10:11:26.216" endtime="20230331 10:11:26.218"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:11:26.226" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:11:26.247" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:11:26.247" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230331 10:11:26.222" endtime="20230331 10:11:26.248"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:11:26.250" level="INFO">200</msg>
<status status="PASS" starttime="20230331 10:11:26.248" endtime="20230331 10:11:26.250"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:11:26.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:11:26.250" endtime="20230331 10:11:26.251"/>
</kw>
<status status="PASS" starttime="20230331 10:11:26.221" endtime="20230331 10:11:26.252"/>
</kw>
<msg timestamp="20230331 10:11:26.252" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:11:26.220" endtime="20230331 10:11:26.253"/>
</kw>
<msg timestamp="20230331 10:11:26.253" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230331 10:11:26.219" endtime="20230331 10:11:26.253"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230331 10:11:26.254" endtime="20230331 10:11:26.254"/>
</kw>
<status status="NOT RUN" starttime="20230331 10:11:26.254" endtime="20230331 10:11:26.254"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:11:26.254" endtime="20230331 10:11:26.255"/>
</kw>
<status status="PASS" starttime="20230331 10:11:26.254" endtime="20230331 10:11:26.256"/>
</branch>
<status status="PASS" starttime="20230331 10:11:26.253" endtime="20230331 10:11:26.256"/>
</if>
<status status="PASS" starttime="20230331 10:11:26.218" endtime="20230331 10:11:26.256"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230331 10:11:26.051" endtime="20230331 10:11:26.256"/>
</test>
<test id="s1-s2-s1-t6" name="Check unhealthy, (admin) api access" line="120">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:11:26.265" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:11:26.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:11:26.273" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230331 10:11:26.262" endtime="20230331 10:11:26.273"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:11:26.274" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230331 10:11:26.274" endtime="20230331 10:11:26.275"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:11:26.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:11:26.275" endtime="20230331 10:11:26.276"/>
</kw>
<status status="PASS" starttime="20230331 10:11:26.261" endtime="20230331 10:11:26.276"/>
</kw>
<msg timestamp="20230331 10:11:26.276" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:11:26.260" endtime="20230331 10:11:26.277"/>
</kw>
<status status="PASS" starttime="20230331 10:11:26.259" endtime="20230331 10:11:26.277"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:11:26.285" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:11:26.358" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:11:26.358" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230331 10:11:26.281" endtime="20230331 10:11:26.358"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:11:26.366" level="INFO">200</msg>
<status status="PASS" starttime="20230331 10:11:26.359" endtime="20230331 10:11:26.367"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:11:26.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:11:26.367" endtime="20230331 10:11:26.368"/>
</kw>
<status status="PASS" starttime="20230331 10:11:26.281" endtime="20230331 10:11:26.369"/>
</kw>
<msg timestamp="20230331 10:11:26.369" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:11:26.280" endtime="20230331 10:11:26.369"/>
</kw>
<msg timestamp="20230331 10:11:26.370" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230331 10:11:26.278" endtime="20230331 10:11:26.370"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230331 10:11:26.371" endtime="20230331 10:11:26.371"/>
</kw>
<status status="NOT RUN" starttime="20230331 10:11:26.371" endtime="20230331 10:11:26.371"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:11:26.371" endtime="20230331 10:11:26.372"/>
</kw>
<status status="PASS" starttime="20230331 10:11:26.371" endtime="20230331 10:11:26.372"/>
</branch>
<status status="PASS" starttime="20230331 10:11:26.370" endtime="20230331 10:11:26.372"/>
</if>
<status status="PASS" starttime="20230331 10:11:26.277" endtime="20230331 10:11:26.372"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230331 10:11:26.373" endtime="20230331 10:11:26.374"/>
</kw>
<status status="PASS" starttime="20230331 10:11:26.373" endtime="20230331 10:11:26.374"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:11:26.382" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:11:26.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:11:26.414" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230331 10:11:26.378" endtime="20230331 10:11:26.414"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:11:26.416" level="INFO">200</msg>
<status status="PASS" starttime="20230331 10:11:26.415" endtime="20230331 10:11:26.418"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:11:26.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:11:26.419" endtime="20230331 10:11:26.420"/>
</kw>
<status status="PASS" starttime="20230331 10:11:26.377" endtime="20230331 10:11:26.421"/>
</kw>
<msg timestamp="20230331 10:11:26.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:11:26.376" endtime="20230331 10:11:26.422"/>
</kw>
<msg timestamp="20230331 10:11:26.422" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230331 10:11:26.375" endtime="20230331 10:11:26.422"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230331 10:11:26.423" endtime="20230331 10:11:26.423"/>
</kw>
<status status="NOT RUN" starttime="20230331 10:11:26.423" endtime="20230331 10:11:26.423"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:11:26.424" endtime="20230331 10:11:26.424"/>
</kw>
<status status="PASS" starttime="20230331 10:11:26.423" endtime="20230331 10:11:26.424"/>
</branch>
<status status="PASS" starttime="20230331 10:11:26.423" endtime="20230331 10:11:26.425"/>
</if>
<status status="PASS" starttime="20230331 10:11:26.374" endtime="20230331 10:11:26.425"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230331 10:11:26.426" endtime="20230331 10:11:26.427"/>
</kw>
<status status="PASS" starttime="20230331 10:11:26.425" endtime="20230331 10:11:26.427"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:11:26.435" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:11:26.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:11:26.458" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230331 10:11:26.430" endtime="20230331 10:11:26.458"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:11:26.459" level="INFO">200</msg>
<status status="PASS" starttime="20230331 10:11:26.458" endtime="20230331 10:11:26.459"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:11:26.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:11:26.462" endtime="20230331 10:11:26.464"/>
</kw>
<status status="PASS" starttime="20230331 10:11:26.429" endtime="20230331 10:11:26.464"/>
</kw>
<msg timestamp="20230331 10:11:26.464" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:11:26.429" endtime="20230331 10:11:26.465"/>
</kw>
<msg timestamp="20230331 10:11:26.466" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230331 10:11:26.428" endtime="20230331 10:11:26.466"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230331 10:11:26.467" endtime="20230331 10:11:26.467"/>
</kw>
<status status="NOT RUN" starttime="20230331 10:11:26.466" endtime="20230331 10:11:26.467"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:11:26.467" endtime="20230331 10:11:26.468"/>
</kw>
<status status="PASS" starttime="20230331 10:11:26.467" endtime="20230331 10:11:26.468"/>
</branch>
<status status="PASS" starttime="20230331 10:11:26.466" endtime="20230331 10:11:26.468"/>
</if>
<status status="PASS" starttime="20230331 10:11:26.427" endtime="20230331 10:11:26.468"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230331 10:11:26.469" endtime="20230331 10:11:26.470"/>
</kw>
<status status="PASS" starttime="20230331 10:11:26.468" endtime="20230331 10:11:26.470"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:11:26.476" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:11:26.499" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:11:26.499" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230331 10:11:26.473" endtime="20230331 10:11:26.499"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:11:26.501" level="INFO">200</msg>
<status status="PASS" starttime="20230331 10:11:26.500" endtime="20230331 10:11:26.501"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:11:26.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:11:26.501" endtime="20230331 10:11:26.502"/>
</kw>
<status status="PASS" starttime="20230331 10:11:26.472" endtime="20230331 10:11:26.503"/>
</kw>
<msg timestamp="20230331 10:11:26.503" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:11:26.472" endtime="20230331 10:11:26.504"/>
</kw>
<msg timestamp="20230331 10:11:26.504" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230331 10:11:26.471" endtime="20230331 10:11:26.504"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230331 10:11:26.505" endtime="20230331 10:11:26.505"/>
</kw>
<status status="NOT RUN" starttime="20230331 10:11:26.505" endtime="20230331 10:11:26.505"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:11:26.506" endtime="20230331 10:11:26.507"/>
</kw>
<status status="PASS" starttime="20230331 10:11:26.506" endtime="20230331 10:11:26.507"/>
</branch>
<status status="PASS" starttime="20230331 10:11:26.504" endtime="20230331 10:11:26.507"/>
</if>
<status status="PASS" starttime="20230331 10:11:26.470" endtime="20230331 10:11:26.507"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230331 10:11:26.258" endtime="20230331 10:11:26.507"/>
</test>
<test id="s1-s2-s1-t7" name="Check normal api access" line="133">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:11:26.515" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:11:26.520" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:11:26.520" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230331 10:11:26.511" endtime="20230331 10:11:26.520"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:11:26.522" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230331 10:11:26.521" endtime="20230331 10:11:26.522"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:11:26.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:11:26.523" endtime="20230331 10:11:26.523"/>
</kw>
<status status="PASS" starttime="20230331 10:11:26.511" endtime="20230331 10:11:26.524"/>
</kw>
<msg timestamp="20230331 10:11:26.524" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:11:26.510" endtime="20230331 10:11:26.525"/>
</kw>
<status status="PASS" starttime="20230331 10:11:26.510" endtime="20230331 10:11:26.525"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:11:26.532" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:11:26.577" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:11:26.577" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230331 10:11:26.528" endtime="20230331 10:11:26.578"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:11:26.579" level="INFO">200</msg>
<status status="PASS" starttime="20230331 10:11:26.578" endtime="20230331 10:11:26.579"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:11:26.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:11:26.579" endtime="20230331 10:11:26.580"/>
</kw>
<status status="PASS" starttime="20230331 10:11:26.527" endtime="20230331 10:11:26.580"/>
</kw>
<msg timestamp="20230331 10:11:26.580" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:11:26.527" endtime="20230331 10:11:26.581"/>
</kw>
<msg timestamp="20230331 10:11:26.582" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230331 10:11:26.526" endtime="20230331 10:11:26.582"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230331 10:11:26.583" endtime="20230331 10:11:26.583"/>
</kw>
<status status="NOT RUN" starttime="20230331 10:11:26.582" endtime="20230331 10:11:26.583"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:11:26.583" endtime="20230331 10:11:26.584"/>
</kw>
<status status="PASS" starttime="20230331 10:11:26.583" endtime="20230331 10:11:26.584"/>
</branch>
<status status="PASS" starttime="20230331 10:11:26.582" endtime="20230331 10:11:26.584"/>
</if>
<status status="PASS" starttime="20230331 10:11:26.525" endtime="20230331 10:11:26.584"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230331 10:11:26.585" endtime="20230331 10:11:26.586"/>
</kw>
<status status="PASS" starttime="20230331 10:11:26.584" endtime="20230331 10:11:26.586"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:11:26.594" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:11:26.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:11:26.625" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230331 10:11:26.589" endtime="20230331 10:11:26.625"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:11:26.627" level="INFO">200</msg>
<status status="PASS" starttime="20230331 10:11:26.626" endtime="20230331 10:11:26.630"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:11:26.631" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:11:26.630" endtime="20230331 10:11:26.631"/>
</kw>
<status status="PASS" starttime="20230331 10:11:26.588" endtime="20230331 10:11:26.631"/>
</kw>
<msg timestamp="20230331 10:11:26.631" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:11:26.588" endtime="20230331 10:11:26.634"/>
</kw>
<msg timestamp="20230331 10:11:26.634" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230331 10:11:26.587" endtime="20230331 10:11:26.634"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230331 10:11:26.635" endtime="20230331 10:11:26.635"/>
</kw>
<status status="NOT RUN" starttime="20230331 10:11:26.635" endtime="20230331 10:11:26.635"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:11:26.635" endtime="20230331 10:11:26.641"/>
</kw>
<status status="PASS" starttime="20230331 10:11:26.635" endtime="20230331 10:11:26.641"/>
</branch>
<status status="PASS" starttime="20230331 10:11:26.634" endtime="20230331 10:11:26.641"/>
</if>
<status status="PASS" starttime="20230331 10:11:26.586" endtime="20230331 10:11:26.642"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230331 10:11:26.508" endtime="20230331 10:11:26.642"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20230331 10:10:36.760" endtime="20230331 10:11:26.646"/>
</suite>
<suite id="s1-s2-s2" name="Recon-Nssummary" source="/opt/hadoop/smoketest/recon/recon-nssummary.robot">
<test id="s1-s2-s2-t1" name="Check volume creation" line="99">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:11:26.677" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:11:26.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:11:26.682" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230331 10:11:26.674" endtime="20230331 10:11:26.682"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:11:26.685" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230331 10:11:26.684" endtime="20230331 10:11:26.685"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:11:26.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:11:26.685" endtime="20230331 10:11:26.686"/>
</kw>
<status status="PASS" starttime="20230331 10:11:26.673" endtime="20230331 10:11:26.687"/>
</kw>
<msg timestamp="20230331 10:11:26.687" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:11:26.673" endtime="20230331 10:11:26.687"/>
</kw>
<status status="PASS" starttime="20230331 10:11:26.672" endtime="20230331 10:11:26.688"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230331 10:11:26.690" endtime="20230331 10:11:26.690"/>
</kw>
<status status="PASS" starttime="20230331 10:11:26.688" endtime="20230331 10:11:26.691"/>
</kw>
<kw name="Create volume">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230331 10:11:26.693" level="INFO">${random} = qamqu</msg>
<status status="PASS" starttime="20230331 10:11:26.691" endtime="20230331 10:11:26.693"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${VOLUME}</arg>
<arg>vol-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230331 10:11:26.693" level="INFO">${VOLUME} = vol-qamqu</msg>
<status status="PASS" starttime="20230331 10:11:26.693" endtime="20230331 10:11:26.694"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:11:26.700" level="INFO">Running command 'ozone sh volume create /vol-qamqu 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:11:33.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:11:33.294" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230331 10:11:26.696" endtime="20230331 10:11:33.294"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:11:33.296" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230331 10:11:33.295" endtime="20230331 10:11:33.296"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:11:33.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:11:33.296" endtime="20230331 10:11:33.297"/>
</kw>
<status status="PASS" starttime="20230331 10:11:26.695" endtime="20230331 10:11:33.297"/>
</kw>
<msg timestamp="20230331 10:11:33.297" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:11:26.694" endtime="20230331 10:11:33.298"/>
</kw>
<msg timestamp="20230331 10:11:33.298" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230331 10:11:26.694" endtime="20230331 10:11:33.298"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:11:33.299" endtime="20230331 10:11:33.299"/>
</kw>
<status status="PASS" starttime="20230331 10:11:26.691" endtime="20230331 10:11:33.299"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230331 10:11:26.671" endtime="20230331 10:11:33.300"/>
</test>
<test id="s1-s2-s2-t2" name="Check bucket creation" line="104">
<kw name="Create bucket">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230331 10:11:33.303" level="INFO">${random} = ptyxe</msg>
<status status="PASS" starttime="20230331 10:11:33.303" endtime="20230331 10:11:33.303"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>buc-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230331 10:11:33.304" level="INFO">${BUCKET} = buc-ptyxe</msg>
<status status="PASS" starttime="20230331 10:11:33.303" endtime="20230331 10:11:33.305"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create -l ${BUCKET_LAYOUT} /${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:11:33.310" level="INFO">Running command 'ozone sh bucket create -l FILE_SYSTEM_OPTIMIZED /vol-qamqu/buc-ptyxe 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:11:40.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:11:40.010" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230331 10:11:33.307" endtime="20230331 10:11:40.010"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:11:40.012" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230331 10:11:40.011" endtime="20230331 10:11:40.012"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:11:40.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:11:40.012" endtime="20230331 10:11:40.013"/>
</kw>
<status status="PASS" starttime="20230331 10:11:33.306" endtime="20230331 10:11:40.013"/>
</kw>
<msg timestamp="20230331 10:11:40.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:11:33.306" endtime="20230331 10:11:40.014"/>
</kw>
<msg timestamp="20230331 10:11:40.015" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230331 10:11:33.305" endtime="20230331 10:11:40.015"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:11:40.015" endtime="20230331 10:11:40.015"/>
</kw>
<status status="PASS" starttime="20230331 10:11:33.302" endtime="20230331 10:11:40.016"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230331 10:11:33.301" endtime="20230331 10:11:40.016"/>
</test>
<test id="s1-s2-s2-t3" name="Check keys creation" line="107">
<kw name="Create keys">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/file1 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:11:40.026" level="INFO">Running command 'ozone sh key put /vol-qamqu/buc-ptyxe/file1 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:11:50.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:11:50.580" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230331 10:11:40.022" endtime="20230331 10:11:50.580"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:11:50.582" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230331 10:11:50.581" endtime="20230331 10:11:50.582"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:11:50.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:11:50.582" endtime="20230331 10:11:50.583"/>
</kw>
<status status="PASS" starttime="20230331 10:11:40.021" endtime="20230331 10:11:50.584"/>
</kw>
<msg timestamp="20230331 10:11:50.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:11:40.021" endtime="20230331 10:11:50.585"/>
</kw>
<msg timestamp="20230331 10:11:50.586" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230331 10:11:40.020" endtime="20230331 10:11:50.586"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:11:50.586" endtime="20230331 10:11:50.587"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/dir1/dir2/file2 HISTORY.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:11:50.594" level="INFO">Running command 'ozone sh key put /vol-qamqu/buc-ptyxe/dir1/dir2/file2 HISTORY.md 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:12:01.247" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:12:01.247" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230331 10:11:50.589" endtime="20230331 10:12:01.247"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:12:01.249" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230331 10:12:01.248" endtime="20230331 10:12:01.249"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:12:01.250" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:12:01.249" endtime="20230331 10:12:01.250"/>
</kw>
<status status="PASS" starttime="20230331 10:11:50.588" endtime="20230331 10:12:01.250"/>
</kw>
<msg timestamp="20230331 10:12:01.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:11:50.588" endtime="20230331 10:12:01.251"/>
</kw>
<msg timestamp="20230331 10:12:01.252" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230331 10:11:50.587" endtime="20230331 10:12:01.252"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:12:01.252" endtime="20230331 10:12:01.253"/>
</kw>
<status status="PASS" starttime="20230331 10:11:40.019" endtime="20230331 10:12:01.253"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230331 10:11:40.018" endtime="20230331 10:12:01.254"/>
</test>
<test id="s1-s2-s2-t4" name="Check Summary api access" line="110">
<kw name="Check Access">
<arg>${SUMMARY_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:12:01.262" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:12:01.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:12:01.268" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230331 10:12:01.259" endtime="20230331 10:12:01.268"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:12:01.270" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230331 10:12:01.268" endtime="20230331 10:12:01.270"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:12:01.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:12:01.270" endtime="20230331 10:12:01.271"/>
</kw>
<status status="PASS" starttime="20230331 10:12:01.258" endtime="20230331 10:12:01.271"/>
</kw>
<msg timestamp="20230331 10:12:01.272" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:12:01.258" endtime="20230331 10:12:01.272"/>
</kw>
<status status="PASS" starttime="20230331 10:12:01.257" endtime="20230331 10:12:01.273"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:12:01.280" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:12:01.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:12:01.334" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230331 10:12:01.276" endtime="20230331 10:12:01.334"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:12:01.335" level="INFO">200</msg>
<status status="PASS" starttime="20230331 10:12:01.334" endtime="20230331 10:12:01.335"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:12:01.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:12:01.338" endtime="20230331 10:12:01.338"/>
</kw>
<status status="PASS" starttime="20230331 10:12:01.276" endtime="20230331 10:12:01.339"/>
</kw>
<msg timestamp="20230331 10:12:01.339" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:12:01.275" endtime="20230331 10:12:01.340"/>
</kw>
<msg timestamp="20230331 10:12:01.340" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230331 10:12:01.274" endtime="20230331 10:12:01.341"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230331 10:12:01.341" endtime="20230331 10:12:01.342"/>
</kw>
<status status="NOT RUN" starttime="20230331 10:12:01.341" endtime="20230331 10:12:01.342"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:12:01.342" endtime="20230331 10:12:01.343"/>
</kw>
<status status="PASS" starttime="20230331 10:12:01.342" endtime="20230331 10:12:01.343"/>
</branch>
<status status="PASS" starttime="20230331 10:12:01.341" endtime="20230331 10:12:01.343"/>
</if>
<status status="PASS" starttime="20230331 10:12:01.273" endtime="20230331 10:12:01.343"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230331 10:12:01.344" endtime="20230331 10:12:01.345"/>
</kw>
<status status="PASS" starttime="20230331 10:12:01.343" endtime="20230331 10:12:01.345"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:12:01.354" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:12:01.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:12:01.380" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230331 10:12:01.349" endtime="20230331 10:12:01.380"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:12:01.382" level="INFO">200</msg>
<status status="PASS" starttime="20230331 10:12:01.381" endtime="20230331 10:12:01.382"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:12:01.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:12:01.382" endtime="20230331 10:12:01.382"/>
</kw>
<status status="PASS" starttime="20230331 10:12:01.348" endtime="20230331 10:12:01.383"/>
</kw>
<msg timestamp="20230331 10:12:01.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:12:01.348" endtime="20230331 10:12:01.384"/>
</kw>
<msg timestamp="20230331 10:12:01.384" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230331 10:12:01.347" endtime="20230331 10:12:01.384"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230331 10:12:01.386" endtime="20230331 10:12:01.386"/>
</kw>
<status status="NOT RUN" starttime="20230331 10:12:01.385" endtime="20230331 10:12:01.386"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:12:01.386" endtime="20230331 10:12:01.387"/>
</kw>
<status status="PASS" starttime="20230331 10:12:01.386" endtime="20230331 10:12:01.387"/>
</branch>
<status status="PASS" starttime="20230331 10:12:01.385" endtime="20230331 10:12:01.387"/>
</if>
<status status="PASS" starttime="20230331 10:12:01.345" endtime="20230331 10:12:01.387"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230331 10:12:01.389" endtime="20230331 10:12:01.390"/>
</kw>
<status status="PASS" starttime="20230331 10:12:01.388" endtime="20230331 10:12:01.390"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:12:01.396" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:12:01.419" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:12:01.419" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230331 10:12:01.393" endtime="20230331 10:12:01.419"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:12:01.421" level="INFO">200</msg>
<status status="PASS" starttime="20230331 10:12:01.419" endtime="20230331 10:12:01.424"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:12:01.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:12:01.424" endtime="20230331 10:12:01.426"/>
</kw>
<status status="PASS" starttime="20230331 10:12:01.392" endtime="20230331 10:12:01.427"/>
</kw>
<msg timestamp="20230331 10:12:01.427" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:12:01.391" endtime="20230331 10:12:01.428"/>
</kw>
<msg timestamp="20230331 10:12:01.429" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230331 10:12:01.391" endtime="20230331 10:12:01.429"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230331 10:12:01.430" endtime="20230331 10:12:01.430"/>
</kw>
<status status="NOT RUN" starttime="20230331 10:12:01.429" endtime="20230331 10:12:01.430"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:12:01.430" endtime="20230331 10:12:01.431"/>
</kw>
<status status="PASS" starttime="20230331 10:12:01.430" endtime="20230331 10:12:01.431"/>
</branch>
<status status="PASS" starttime="20230331 10:12:01.429" endtime="20230331 10:12:01.431"/>
</if>
<status status="PASS" starttime="20230331 10:12:01.390" endtime="20230331 10:12:01.431"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230331 10:12:01.432" endtime="20230331 10:12:01.433"/>
</kw>
<status status="PASS" starttime="20230331 10:12:01.431" endtime="20230331 10:12:01.433"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:12:01.440" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:12:01.489" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:12:01.492" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230331 10:12:01.436" endtime="20230331 10:12:01.492"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:12:01.494" level="INFO">200</msg>
<status status="PASS" starttime="20230331 10:12:01.492" endtime="20230331 10:12:01.494"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:12:01.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:12:01.494" endtime="20230331 10:12:01.498"/>
</kw>
<status status="PASS" starttime="20230331 10:12:01.435" endtime="20230331 10:12:01.498"/>
</kw>
<msg timestamp="20230331 10:12:01.498" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:12:01.435" endtime="20230331 10:12:01.503"/>
</kw>
<msg timestamp="20230331 10:12:01.503" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230331 10:12:01.434" endtime="20230331 10:12:01.504"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230331 10:12:01.506" endtime="20230331 10:12:01.506"/>
</kw>
<status status="NOT RUN" starttime="20230331 10:12:01.504" endtime="20230331 10:12:01.506"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:12:01.506" endtime="20230331 10:12:01.509"/>
</kw>
<status status="PASS" starttime="20230331 10:12:01.506" endtime="20230331 10:12:01.509"/>
</branch>
<status status="PASS" starttime="20230331 10:12:01.504" endtime="20230331 10:12:01.509"/>
</if>
<status status="PASS" starttime="20230331 10:12:01.433" endtime="20230331 10:12:01.510"/>
</kw>
<status status="PASS" starttime="20230331 10:12:01.257" endtime="20230331 10:12:01.510"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230331 10:12:01.255" endtime="20230331 10:12:01.512"/>
</test>
<test id="s1-s2-s2-t5" name="Check Disk Usage api access" line="113">
<kw name="Check Access">
<arg>${DISK_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:12:01.535" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:12:01.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:12:01.543" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230331 10:12:01.527" endtime="20230331 10:12:01.543"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:12:01.546" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230331 10:12:01.544" endtime="20230331 10:12:01.546"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:12:01.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:12:01.546" endtime="20230331 10:12:01.548"/>
</kw>
<status status="PASS" starttime="20230331 10:12:01.522" endtime="20230331 10:12:01.549"/>
</kw>
<msg timestamp="20230331 10:12:01.549" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:12:01.521" endtime="20230331 10:12:01.551"/>
</kw>
<status status="PASS" starttime="20230331 10:12:01.520" endtime="20230331 10:12:01.552"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:12:01.563" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:12:01.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:12:01.597" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230331 10:12:01.559" endtime="20230331 10:12:01.598"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:12:01.599" level="INFO">200</msg>
<status status="PASS" starttime="20230331 10:12:01.598" endtime="20230331 10:12:01.599"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:12:01.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:12:01.600" endtime="20230331 10:12:01.600"/>
</kw>
<status status="PASS" starttime="20230331 10:12:01.557" endtime="20230331 10:12:01.601"/>
</kw>
<msg timestamp="20230331 10:12:01.601" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:12:01.555" endtime="20230331 10:12:01.602"/>
</kw>
<msg timestamp="20230331 10:12:01.602" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230331 10:12:01.554" endtime="20230331 10:12:01.602"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230331 10:12:01.603" endtime="20230331 10:12:01.604"/>
</kw>
<status status="NOT RUN" starttime="20230331 10:12:01.603" endtime="20230331 10:12:01.604"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:12:01.604" endtime="20230331 10:12:01.605"/>
</kw>
<status status="PASS" starttime="20230331 10:12:01.604" endtime="20230331 10:12:01.605"/>
</branch>
<status status="PASS" starttime="20230331 10:12:01.603" endtime="20230331 10:12:01.605"/>
</if>
<status status="PASS" starttime="20230331 10:12:01.553" endtime="20230331 10:12:01.606"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230331 10:12:01.607" endtime="20230331 10:12:01.608"/>
</kw>
<status status="PASS" starttime="20230331 10:12:01.606" endtime="20230331 10:12:01.609"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:12:01.616" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:12:01.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:12:01.648" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230331 10:12:01.612" endtime="20230331 10:12:01.648"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:12:01.654" level="INFO">200</msg>
<status status="PASS" starttime="20230331 10:12:01.649" endtime="20230331 10:12:01.654"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:12:01.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:12:01.655" endtime="20230331 10:12:01.656"/>
</kw>
<status status="PASS" starttime="20230331 10:12:01.611" endtime="20230331 10:12:01.656"/>
</kw>
<msg timestamp="20230331 10:12:01.656" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:12:01.611" endtime="20230331 10:12:01.657"/>
</kw>
<msg timestamp="20230331 10:12:01.657" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230331 10:12:01.610" endtime="20230331 10:12:01.657"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230331 10:12:01.658" endtime="20230331 10:12:01.658"/>
</kw>
<status status="NOT RUN" starttime="20230331 10:12:01.658" endtime="20230331 10:12:01.658"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:12:01.658" endtime="20230331 10:12:01.659"/>
</kw>
<status status="PASS" starttime="20230331 10:12:01.658" endtime="20230331 10:12:01.659"/>
</branch>
<status status="PASS" starttime="20230331 10:12:01.657" endtime="20230331 10:12:01.659"/>
</if>
<status status="PASS" starttime="20230331 10:12:01.609" endtime="20230331 10:12:01.664"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230331 10:12:01.665" endtime="20230331 10:12:01.666"/>
</kw>
<status status="PASS" starttime="20230331 10:12:01.664" endtime="20230331 10:12:01.666"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:12:01.676" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:12:01.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:12:01.702" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230331 10:12:01.670" endtime="20230331 10:12:01.702"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:12:01.707" level="INFO">200</msg>
<status status="PASS" starttime="20230331 10:12:01.705" endtime="20230331 10:12:01.707"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:12:01.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:12:01.707" endtime="20230331 10:12:01.709"/>
</kw>
<status status="PASS" starttime="20230331 10:12:01.669" endtime="20230331 10:12:01.712"/>
</kw>
<msg timestamp="20230331 10:12:01.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:12:01.668" endtime="20230331 10:12:01.713"/>
</kw>
<msg timestamp="20230331 10:12:01.713" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230331 10:12:01.667" endtime="20230331 10:12:01.713"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230331 10:12:01.714" endtime="20230331 10:12:01.714"/>
</kw>
<status status="NOT RUN" starttime="20230331 10:12:01.714" endtime="20230331 10:12:01.714"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:12:01.715" endtime="20230331 10:12:01.715"/>
</kw>
<status status="PASS" starttime="20230331 10:12:01.714" endtime="20230331 10:12:01.715"/>
</branch>
<status status="PASS" starttime="20230331 10:12:01.713" endtime="20230331 10:12:01.715"/>
</if>
<status status="PASS" starttime="20230331 10:12:01.666" endtime="20230331 10:12:01.716"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230331 10:12:01.716" endtime="20230331 10:12:01.717"/>
</kw>
<status status="PASS" starttime="20230331 10:12:01.716" endtime="20230331 10:12:01.717"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:12:01.732" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:12:01.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:12:01.758" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230331 10:12:01.729" endtime="20230331 10:12:01.758"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:12:01.760" level="INFO">200</msg>
<status status="PASS" starttime="20230331 10:12:01.758" endtime="20230331 10:12:01.760"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:12:01.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:12:01.761" endtime="20230331 10:12:01.761"/>
</kw>
<status status="PASS" starttime="20230331 10:12:01.728" endtime="20230331 10:12:01.764"/>
</kw>
<msg timestamp="20230331 10:12:01.764" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:12:01.727" endtime="20230331 10:12:01.765"/>
</kw>
<msg timestamp="20230331 10:12:01.765" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230331 10:12:01.726" endtime="20230331 10:12:01.765"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230331 10:12:01.766" endtime="20230331 10:12:01.766"/>
</kw>
<status status="NOT RUN" starttime="20230331 10:12:01.766" endtime="20230331 10:12:01.766"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:12:01.767" endtime="20230331 10:12:01.767"/>
</kw>
<status status="PASS" starttime="20230331 10:12:01.766" endtime="20230331 10:12:01.767"/>
</branch>
<status status="PASS" starttime="20230331 10:12:01.765" endtime="20230331 10:12:01.767"/>
</if>
<status status="PASS" starttime="20230331 10:12:01.717" endtime="20230331 10:12:01.768"/>
</kw>
<status status="PASS" starttime="20230331 10:12:01.517" endtime="20230331 10:12:01.768"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230331 10:12:01.514" endtime="20230331 10:12:01.769"/>
</test>
<test id="s1-s2-s2-t6" name="Check Quota Usage api access" line="116">
<kw name="Check Access">
<arg>${QUOTA_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:12:01.781" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:12:01.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:12:01.789" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230331 10:12:01.776" endtime="20230331 10:12:01.789"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:12:01.791" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230331 10:12:01.790" endtime="20230331 10:12:01.791"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:12:01.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:12:01.792" endtime="20230331 10:12:01.793"/>
</kw>
<status status="PASS" starttime="20230331 10:12:01.775" endtime="20230331 10:12:01.793"/>
</kw>
<msg timestamp="20230331 10:12:01.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:12:01.775" endtime="20230331 10:12:01.794"/>
</kw>
<status status="PASS" starttime="20230331 10:12:01.774" endtime="20230331 10:12:01.795"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:12:01.805" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:12:01.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:12:01.850" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230331 10:12:01.799" endtime="20230331 10:12:01.850"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:12:01.852" level="INFO">200</msg>
<status status="PASS" starttime="20230331 10:12:01.850" endtime="20230331 10:12:01.852"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:12:01.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:12:01.854" endtime="20230331 10:12:01.855"/>
</kw>
<status status="PASS" starttime="20230331 10:12:01.798" endtime="20230331 10:12:01.855"/>
</kw>
<msg timestamp="20230331 10:12:01.856" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:12:01.798" endtime="20230331 10:12:01.856"/>
</kw>
<msg timestamp="20230331 10:12:01.857" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230331 10:12:01.796" endtime="20230331 10:12:01.857"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230331 10:12:01.857" endtime="20230331 10:12:01.858"/>
</kw>
<status status="NOT RUN" starttime="20230331 10:12:01.857" endtime="20230331 10:12:01.858"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:12:01.858" endtime="20230331 10:12:01.859"/>
</kw>
<status status="PASS" starttime="20230331 10:12:01.858" endtime="20230331 10:12:01.860"/>
</branch>
<status status="PASS" starttime="20230331 10:12:01.857" endtime="20230331 10:12:01.860"/>
</if>
<status status="PASS" starttime="20230331 10:12:01.795" endtime="20230331 10:12:01.860"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230331 10:12:01.861" endtime="20230331 10:12:01.862"/>
</kw>
<status status="PASS" starttime="20230331 10:12:01.860" endtime="20230331 10:12:01.862"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:12:01.870" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:12:01.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:12:01.910" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230331 10:12:01.865" endtime="20230331 10:12:01.910"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:12:01.911" level="INFO">200</msg>
<status status="PASS" starttime="20230331 10:12:01.910" endtime="20230331 10:12:01.911"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:12:01.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:12:01.911" endtime="20230331 10:12:01.917"/>
</kw>
<status status="PASS" starttime="20230331 10:12:01.864" endtime="20230331 10:12:01.919"/>
</kw>
<msg timestamp="20230331 10:12:01.919" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:12:01.864" endtime="20230331 10:12:01.920"/>
</kw>
<msg timestamp="20230331 10:12:01.921" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230331 10:12:01.863" endtime="20230331 10:12:01.921"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230331 10:12:01.922" endtime="20230331 10:12:01.922"/>
</kw>
<status status="NOT RUN" starttime="20230331 10:12:01.921" endtime="20230331 10:12:01.922"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:12:01.922" endtime="20230331 10:12:01.923"/>
</kw>
<status status="PASS" starttime="20230331 10:12:01.922" endtime="20230331 10:12:01.923"/>
</branch>
<status status="PASS" starttime="20230331 10:12:01.921" endtime="20230331 10:12:01.923"/>
</if>
<status status="PASS" starttime="20230331 10:12:01.862" endtime="20230331 10:12:01.924"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230331 10:12:01.925" endtime="20230331 10:12:01.929"/>
</kw>
<status status="PASS" starttime="20230331 10:12:01.924" endtime="20230331 10:12:01.929"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:12:01.937" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:12:01.966" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:12:01.966" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230331 10:12:01.933" endtime="20230331 10:12:01.966"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:12:01.968" level="INFO">200</msg>
<status status="PASS" starttime="20230331 10:12:01.967" endtime="20230331 10:12:01.968"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:12:01.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:12:01.968" endtime="20230331 10:12:01.972"/>
</kw>
<status status="PASS" starttime="20230331 10:12:01.933" endtime="20230331 10:12:01.972"/>
</kw>
<msg timestamp="20230331 10:12:01.974" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:12:01.932" endtime="20230331 10:12:01.975"/>
</kw>
<msg timestamp="20230331 10:12:01.976" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230331 10:12:01.931" endtime="20230331 10:12:01.976"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230331 10:12:01.977" endtime="20230331 10:12:01.977"/>
</kw>
<status status="NOT RUN" starttime="20230331 10:12:01.976" endtime="20230331 10:12:01.977"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:12:01.978" endtime="20230331 10:12:01.978"/>
</kw>
<status status="PASS" starttime="20230331 10:12:01.977" endtime="20230331 10:12:01.979"/>
</branch>
<status status="PASS" starttime="20230331 10:12:01.976" endtime="20230331 10:12:01.979"/>
</if>
<status status="PASS" starttime="20230331 10:12:01.930" endtime="20230331 10:12:01.979"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230331 10:12:01.983" endtime="20230331 10:12:01.985"/>
</kw>
<status status="PASS" starttime="20230331 10:12:01.982" endtime="20230331 10:12:01.985"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:12:01.994" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:12:02.021" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:12:02.021" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230331 10:12:01.990" endtime="20230331 10:12:02.021"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:12:02.025" level="INFO">200</msg>
<status status="PASS" starttime="20230331 10:12:02.023" endtime="20230331 10:12:02.025"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:12:02.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:12:02.026" endtime="20230331 10:12:02.026"/>
</kw>
<status status="PASS" starttime="20230331 10:12:01.988" endtime="20230331 10:12:02.027"/>
</kw>
<msg timestamp="20230331 10:12:02.027" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:12:01.987" endtime="20230331 10:12:02.028"/>
</kw>
<msg timestamp="20230331 10:12:02.029" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230331 10:12:01.986" endtime="20230331 10:12:02.029"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230331 10:12:02.031" endtime="20230331 10:12:02.031"/>
</kw>
<status status="NOT RUN" starttime="20230331 10:12:02.030" endtime="20230331 10:12:02.031"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:12:02.031" endtime="20230331 10:12:02.032"/>
</kw>
<status status="PASS" starttime="20230331 10:12:02.031" endtime="20230331 10:12:02.032"/>
</branch>
<status status="PASS" starttime="20230331 10:12:02.029" endtime="20230331 10:12:02.032"/>
</if>
<status status="PASS" starttime="20230331 10:12:01.985" endtime="20230331 10:12:02.032"/>
</kw>
<status status="PASS" starttime="20230331 10:12:01.773" endtime="20230331 10:12:02.032"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230331 10:12:01.771" endtime="20230331 10:12:02.033"/>
</test>
<test id="s1-s2-s2-t7" name="Check File Size Distribution api access" line="119">
<kw name="Check Access">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:12:02.043" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:12:02.049" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:12:02.049" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230331 10:12:02.038" endtime="20230331 10:12:02.049"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:12:02.052" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230331 10:12:02.050" endtime="20230331 10:12:02.052"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:12:02.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:12:02.052" endtime="20230331 10:12:02.053"/>
</kw>
<status status="PASS" starttime="20230331 10:12:02.037" endtime="20230331 10:12:02.053"/>
</kw>
<msg timestamp="20230331 10:12:02.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:12:02.037" endtime="20230331 10:12:02.054"/>
</kw>
<status status="PASS" starttime="20230331 10:12:02.036" endtime="20230331 10:12:02.055"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:12:02.062" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:12:02.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:12:02.103" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230331 10:12:02.058" endtime="20230331 10:12:02.104"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:12:02.106" level="INFO">200</msg>
<status status="PASS" starttime="20230331 10:12:02.105" endtime="20230331 10:12:02.106"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:12:02.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:12:02.106" endtime="20230331 10:12:02.107"/>
</kw>
<status status="PASS" starttime="20230331 10:12:02.057" endtime="20230331 10:12:02.108"/>
</kw>
<msg timestamp="20230331 10:12:02.108" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:12:02.057" endtime="20230331 10:12:02.109"/>
</kw>
<msg timestamp="20230331 10:12:02.110" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230331 10:12:02.056" endtime="20230331 10:12:02.110"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230331 10:12:02.111" endtime="20230331 10:12:02.111"/>
</kw>
<status status="NOT RUN" starttime="20230331 10:12:02.110" endtime="20230331 10:12:02.111"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:12:02.112" endtime="20230331 10:12:02.112"/>
</kw>
<status status="PASS" starttime="20230331 10:12:02.111" endtime="20230331 10:12:02.112"/>
</branch>
<status status="PASS" starttime="20230331 10:12:02.110" endtime="20230331 10:12:02.112"/>
</if>
<status status="PASS" starttime="20230331 10:12:02.055" endtime="20230331 10:12:02.113"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230331 10:12:02.114" endtime="20230331 10:12:02.114"/>
</kw>
<status status="PASS" starttime="20230331 10:12:02.113" endtime="20230331 10:12:02.115"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:12:02.122" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:12:02.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:12:02.144" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230331 10:12:02.118" endtime="20230331 10:12:02.144"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:12:02.146" level="INFO">200</msg>
<status status="PASS" starttime="20230331 10:12:02.145" endtime="20230331 10:12:02.146"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:12:02.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:12:02.147" endtime="20230331 10:12:02.148"/>
</kw>
<status status="PASS" starttime="20230331 10:12:02.117" endtime="20230331 10:12:02.148"/>
</kw>
<msg timestamp="20230331 10:12:02.148" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:12:02.117" endtime="20230331 10:12:02.149"/>
</kw>
<msg timestamp="20230331 10:12:02.150" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230331 10:12:02.116" endtime="20230331 10:12:02.150"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230331 10:12:02.151" endtime="20230331 10:12:02.151"/>
</kw>
<status status="NOT RUN" starttime="20230331 10:12:02.150" endtime="20230331 10:12:02.151"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:12:02.151" endtime="20230331 10:12:02.152"/>
</kw>
<status status="PASS" starttime="20230331 10:12:02.151" endtime="20230331 10:12:02.152"/>
</branch>
<status status="PASS" starttime="20230331 10:12:02.150" endtime="20230331 10:12:02.152"/>
</if>
<status status="PASS" starttime="20230331 10:12:02.115" endtime="20230331 10:12:02.153"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230331 10:12:02.153" endtime="20230331 10:12:02.154"/>
</kw>
<status status="PASS" starttime="20230331 10:12:02.153" endtime="20230331 10:12:02.154"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:12:02.160" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:12:02.183" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:12:02.183" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230331 10:12:02.156" endtime="20230331 10:12:02.183"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:12:02.186" level="INFO">200</msg>
<status status="PASS" starttime="20230331 10:12:02.184" endtime="20230331 10:12:02.186"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:12:02.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:12:02.187" endtime="20230331 10:12:02.187"/>
</kw>
<status status="PASS" starttime="20230331 10:12:02.156" endtime="20230331 10:12:02.188"/>
</kw>
<msg timestamp="20230331 10:12:02.188" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:12:02.155" endtime="20230331 10:12:02.189"/>
</kw>
<msg timestamp="20230331 10:12:02.189" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230331 10:12:02.155" endtime="20230331 10:12:02.190"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230331 10:12:02.191" endtime="20230331 10:12:02.191"/>
</kw>
<status status="NOT RUN" starttime="20230331 10:12:02.190" endtime="20230331 10:12:02.191"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:12:02.191" endtime="20230331 10:12:02.192"/>
</kw>
<status status="PASS" starttime="20230331 10:12:02.191" endtime="20230331 10:12:02.193"/>
</branch>
<status status="PASS" starttime="20230331 10:12:02.190" endtime="20230331 10:12:02.193"/>
</if>
<status status="PASS" starttime="20230331 10:12:02.154" endtime="20230331 10:12:02.193"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230331 10:12:02.194" endtime="20230331 10:12:02.195"/>
</kw>
<status status="PASS" starttime="20230331 10:12:02.193" endtime="20230331 10:12:02.195"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:12:02.201" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:12:02.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:12:02.222" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230331 10:12:02.198" endtime="20230331 10:12:02.222"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:12:02.223" level="INFO">200</msg>
<status status="PASS" starttime="20230331 10:12:02.223" endtime="20230331 10:12:02.223"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:12:02.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:12:02.224" endtime="20230331 10:12:02.224"/>
</kw>
<status status="PASS" starttime="20230331 10:12:02.197" endtime="20230331 10:12:02.225"/>
</kw>
<msg timestamp="20230331 10:12:02.225" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:12:02.197" endtime="20230331 10:12:02.226"/>
</kw>
<msg timestamp="20230331 10:12:02.226" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230331 10:12:02.196" endtime="20230331 10:12:02.226"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230331 10:12:02.227" endtime="20230331 10:12:02.227"/>
</kw>
<status status="NOT RUN" starttime="20230331 10:12:02.227" endtime="20230331 10:12:02.227"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:12:02.227" endtime="20230331 10:12:02.228"/>
</kw>
<status status="PASS" starttime="20230331 10:12:02.227" endtime="20230331 10:12:02.228"/>
</branch>
<status status="PASS" starttime="20230331 10:12:02.226" endtime="20230331 10:12:02.228"/>
</if>
<status status="PASS" starttime="20230331 10:12:02.196" endtime="20230331 10:12:02.228"/>
</kw>
<status status="PASS" starttime="20230331 10:12:02.035" endtime="20230331 10:12:02.229"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230331 10:12:02.034" endtime="20230331 10:12:02.229"/>
</test>
<test id="s1-s2-s2-t8" name="Check Recon Namespace Summary Root" line="122">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/</arg>
<arg>ROOT</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:12:02.241" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:12:02.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:12:02.274" level="INFO">${output} = {"path":"","type":"ROOT","countStats":{"numVolume":3,"numBucket":2,"numDir":1,"numKey":1},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTim...</msg>
<status status="PASS" starttime="20230331 10:12:02.238" endtime="20230331 10:12:02.274"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:12:02.277" level="INFO">{"path":"","type":"ROOT","countStats":{"numVolume":3,"numBucket":2,"numDir":1,"numKey":1},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":0,"modificationTime":0,"acls":null},"status":"OK"}</msg>
<status status="PASS" starttime="20230331 10:12:02.275" endtime="20230331 10:12:02.277"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:12:02.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:12:02.277" endtime="20230331 10:12:02.278"/>
</kw>
<status status="PASS" starttime="20230331 10:12:02.237" endtime="20230331 10:12:02.278"/>
</kw>
<msg timestamp="20230331 10:12:02.278" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:12:02.237" endtime="20230331 10:12:02.279"/>
</kw>
<msg timestamp="20230331 10:12:02.280" level="INFO">${result} = {"path":"","type":"ROOT","countStats":{"numVolume":3,"numBucket":2,"numDir":1,"numKey":1},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTim...</msg>
<status status="PASS" starttime="20230331 10:12:02.235" endtime="20230331 10:12:02.280"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:12:02.280" endtime="20230331 10:12:02.280"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:12:02.281" endtime="20230331 10:12:02.281"/>
</kw>
<status status="PASS" starttime="20230331 10:12:02.235" endtime="20230331 10:12:02.282"/>
</kw>
<status status="PASS" starttime="20230331 10:12:02.234" endtime="20230331 10:12:02.282"/>
</kw>
<status status="PASS" starttime="20230331 10:12:02.233" endtime="20230331 10:12:02.282"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230331 10:12:02.231" endtime="20230331 10:12:02.283"/>
</test>
<test id="s1-s2-s2-t9" name="Check Recon Namespace Summary Volume" line="125">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}</arg>
<arg>VOLUME</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:12:02.294" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-qamqu 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:12:02.321" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:12:02.321" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230331 10:12:02.291" endtime="20230331 10:12:02.321"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:12:02.329" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230331 10:12:02.327" endtime="20230331 10:12:02.329"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:12:02.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:12:02.329" endtime="20230331 10:12:02.330"/>
</kw>
<status status="PASS" starttime="20230331 10:12:02.290" endtime="20230331 10:12:02.331"/>
</kw>
<msg timestamp="20230331 10:12:02.331" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:12:02.289" endtime="20230331 10:12:02.331"/>
</kw>
<msg timestamp="20230331 10:12:02.339" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230331 10:12:02.289" endtime="20230331 10:12:02.339"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230331 10:12:02.341" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230331 10:12:02.339" endtime="20230331 10:12:02.341"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230331 10:12:02.342" endtime="20230331 10:12:02.342"/>
</kw>
<status status="FAIL" starttime="20230331 10:12:02.288" endtime="20230331 10:12:02.345"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:12:12.355" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-qamqu 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:12:12.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:12:12.374" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230331 10:12:12.351" endtime="20230331 10:12:12.374"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:12:12.377" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230331 10:12:12.376" endtime="20230331 10:12:12.378"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:12:12.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:12:12.378" endtime="20230331 10:12:12.379"/>
</kw>
<status status="PASS" starttime="20230331 10:12:12.349" endtime="20230331 10:12:12.379"/>
</kw>
<msg timestamp="20230331 10:12:12.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:12:12.349" endtime="20230331 10:12:12.380"/>
</kw>
<msg timestamp="20230331 10:12:12.381" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230331 10:12:12.347" endtime="20230331 10:12:12.381"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230331 10:12:12.383" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230331 10:12:12.381" endtime="20230331 10:12:12.383"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230331 10:12:12.384" endtime="20230331 10:12:12.384"/>
</kw>
<status status="FAIL" starttime="20230331 10:12:12.346" endtime="20230331 10:12:12.385"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:12:22.392" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-qamqu 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:12:22.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:12:22.444" level="INFO">${output} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-qamqu","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<status status="PASS" starttime="20230331 10:12:22.389" endtime="20230331 10:12:22.445"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:12:22.447" level="INFO">{"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-qamqu","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"creationTime":1680257493162,"modificationTime":1680257493162,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}],"admin":"hadoop","owner":"hadoop","volume":"vol-qamqu"},"status":"OK"}</msg>
<status status="PASS" starttime="20230331 10:12:22.446" endtime="20230331 10:12:22.447"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:12:22.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:12:22.447" endtime="20230331 10:12:22.448"/>
</kw>
<status status="PASS" starttime="20230331 10:12:22.388" endtime="20230331 10:12:22.449"/>
</kw>
<msg timestamp="20230331 10:12:22.449" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:12:22.388" endtime="20230331 10:12:22.450"/>
</kw>
<msg timestamp="20230331 10:12:22.450" level="INFO">${result} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-qamqu","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<status status="PASS" starttime="20230331 10:12:22.387" endtime="20230331 10:12:22.450"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:12:22.450" endtime="20230331 10:12:22.451"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:12:22.451" endtime="20230331 10:12:22.452"/>
</kw>
<status status="PASS" starttime="20230331 10:12:22.386" endtime="20230331 10:12:22.452"/>
</kw>
<status status="PASS" starttime="20230331 10:12:02.288" endtime="20230331 10:12:22.453"/>
</kw>
<status status="PASS" starttime="20230331 10:12:02.286" endtime="20230331 10:12:22.453"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230331 10:12:02.284" endtime="20230331 10:12:22.453"/>
</test>
<test id="s1-s2-s2-t10" name="Check Recon Namespace Summary Bucket" line="128">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>BUCKET</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:12:22.468" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-qamqu/buc-ptyxe 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:12:22.497" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:12:22.497" level="INFO">${output} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-ptyxe","quotaInBytes":-1,"quotaInNamespa...</msg>
<status status="PASS" starttime="20230331 10:12:22.464" endtime="20230331 10:12:22.497"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:12:22.500" level="INFO">{"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-ptyxe","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":4,"creationTime":1680257499744,"modificationTime":1680257499744,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}],"volumeName":"vol-qamqu","storageType":"DISK","versioning":false,"usedBytes":null,"encryptionInfo":null,"replicationConfigInfo":null,"sourceVolume":null,"sourceBucket":null,"bucketLayout":"FILE_SYSTEM_OPTIMIZED","owner":"hadoop"},"status":"OK"}</msg>
<status status="PASS" starttime="20230331 10:12:22.498" endtime="20230331 10:12:22.500"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:12:22.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:12:22.500" endtime="20230331 10:12:22.501"/>
</kw>
<status status="PASS" starttime="20230331 10:12:22.463" endtime="20230331 10:12:22.501"/>
</kw>
<msg timestamp="20230331 10:12:22.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:12:22.462" endtime="20230331 10:12:22.502"/>
</kw>
<msg timestamp="20230331 10:12:22.503" level="INFO">${result} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-ptyxe","quotaInBytes":-1,"quotaInNamespa...</msg>
<status status="PASS" starttime="20230331 10:12:22.462" endtime="20230331 10:12:22.503"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:12:22.503" endtime="20230331 10:12:22.504"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:12:22.504" endtime="20230331 10:12:22.505"/>
</kw>
<status status="PASS" starttime="20230331 10:12:22.461" endtime="20230331 10:12:22.505"/>
</kw>
<status status="PASS" starttime="20230331 10:12:22.460" endtime="20230331 10:12:22.505"/>
</kw>
<status status="PASS" starttime="20230331 10:12:22.458" endtime="20230331 10:12:22.505"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230331 10:12:22.456" endtime="20230331 10:12:22.505"/>
</test>
<test id="s1-s2-s2-t11" name="Check Recon Namespace Summary Key" line="131">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/file1</arg>
<arg>KEY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:12:22.516" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-qamqu/buc-ptyxe/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:12:22.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:12:22.655" level="INFO">${output} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":false,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespac...</msg>
<status status="PASS" starttime="20230331 10:12:22.513" endtime="20230331 10:12:22.655"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:12:22.657" level="INFO">{"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":false,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":1680257506425,"modificationTime":1680257509780,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}],"volumeName":"vol-qamqu","bucketName":"buc-ptyxe","keyName":"file1","dataSize":3879,"keyLocationVersions":[{"version":0,"locationList":[{"blockID":{"containerBlockID":{"containerID":4,"localID":111677748019200012},"blockCommitSequenceId":11,"containerID":4,"localID":111677748019200012},"length":3879,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":4,"localID":111677748019200012,"blockCommitSequenceId":11}],"blocksLatestVersionOnly":[{"blockID":{"containerBlockID":{"containerID":4,"localID":111677748019200012},"blockCommitSequenceId":11,"containerID":4,"localID":111677748019200012},"length":3879,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":4,"localID":111677748019200012,"blockCommitSequenceId":11}],"locationLists":[[{"blockID":{"containerBlockID":{"containerID":4,"localID":111677748019200012},"blockCommitSequenceId":11,"containerID":4,"localID":111677748019200012},"length":3879,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":4,"localID":111677748019200012,"blockCommitSequenceId":11}]],"locationListCount":1,"multipartKey":false}],"replicationConfig":{"replicationFactor":"THREE","requiredNodes":3,"replicationType":"RATIS"},"encInfo":null},"status":"OK"}</msg>
<status status="PASS" starttime="20230331 10:12:22.656" endtime="20230331 10:12:22.657"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:12:22.659" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:12:22.657" endtime="20230331 10:12:22.659"/>
</kw>
<status status="PASS" starttime="20230331 10:12:22.513" endtime="20230331 10:12:22.660"/>
</kw>
<msg timestamp="20230331 10:12:22.660" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:12:22.512" endtime="20230331 10:12:22.660"/>
</kw>
<msg timestamp="20230331 10:12:22.661" level="INFO">${result} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":false,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespac...</msg>
<status status="PASS" starttime="20230331 10:12:22.511" endtime="20230331 10:12:22.661"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:12:22.662" endtime="20230331 10:12:22.663"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:12:22.663" endtime="20230331 10:12:22.664"/>
</kw>
<status status="PASS" starttime="20230331 10:12:22.511" endtime="20230331 10:12:22.664"/>
</kw>
<status status="PASS" starttime="20230331 10:12:22.510" endtime="20230331 10:12:22.664"/>
</kw>
<status status="PASS" starttime="20230331 10:12:22.509" endtime="20230331 10:12:22.664"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230331 10:12:22.508" endtime="20230331 10:12:22.665"/>
</test>
<test id="s1-s2-s2-t12" name="Check Recon Namespace Summary Directory" line="134">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'LEGACY'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2/</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230331 10:12:22.669" endtime="20230331 10:12:22.670"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'FILE_SYSTEM_OPTIMIZED'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:12:22.679" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-qamqu/buc-ptyxe/dir1/dir2 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:12:22.712" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:12:22.712" level="INFO">${output} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<status status="PASS" starttime="20230331 10:12:22.675" endtime="20230331 10:12:22.712"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:12:22.714" level="INFO">{"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":1680257517512,"modificationTime":1680257517512,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}]},"status":"OK"}</msg>
<status status="PASS" starttime="20230331 10:12:22.713" endtime="20230331 10:12:22.714"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:12:22.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:12:22.714" endtime="20230331 10:12:22.715"/>
</kw>
<status status="PASS" starttime="20230331 10:12:22.674" endtime="20230331 10:12:22.715"/>
</kw>
<msg timestamp="20230331 10:12:22.715" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:12:22.674" endtime="20230331 10:12:22.719"/>
</kw>
<msg timestamp="20230331 10:12:22.720" level="INFO">${result} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<status status="PASS" starttime="20230331 10:12:22.673" endtime="20230331 10:12:22.720"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:12:22.720" endtime="20230331 10:12:22.721"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:12:22.721" endtime="20230331 10:12:22.722"/>
</kw>
<status status="PASS" starttime="20230331 10:12:22.672" endtime="20230331 10:12:22.722"/>
</kw>
<status status="PASS" starttime="20230331 10:12:22.672" endtime="20230331 10:12:22.722"/>
</kw>
<status status="PASS" starttime="20230331 10:12:22.671" endtime="20230331 10:12:22.722"/>
</kw>
<status status="PASS" starttime="20230331 10:12:22.670" endtime="20230331 10:12:22.722"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230331 10:12:22.668" endtime="20230331 10:12:22.723"/>
</test>
<test id="s1-s2-s2-t13" name="Check Recon Namespace Disk Usage" line="138">
<kw name="Wait For Summary">
<arg>${DISK_USAGE_URL}?path=/${VOLUME}/${BUCKET}&amp;files=true&amp;replica=true</arg>
<arg>\"sizeWithReplica\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:12:22.738" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/du?path=/vol-qamqu/buc-ptyxe&amp;files=true&amp;replica=true 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:12:22.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:12:22.771" level="INFO">${output} = {"status":"OK","path":"/vol-qamqu/buc-ptyxe","size":9917,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-qamqu/buc-ptyxe/dir1","size":6038,"sizeWithReplica":-1,"isKey":fals...</msg>
<status status="PASS" starttime="20230331 10:12:22.734" endtime="20230331 10:12:22.771"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:12:22.773" level="INFO">{"status":"OK","path":"/vol-qamqu/buc-ptyxe","size":9917,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-qamqu/buc-ptyxe/dir1","size":6038,"sizeWithReplica":-1,"isKey":false}],"sizeDirectKey":3879}</msg>
<status status="PASS" starttime="20230331 10:12:22.771" endtime="20230331 10:12:22.773"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:12:22.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:12:22.773" endtime="20230331 10:12:22.778"/>
</kw>
<status status="PASS" starttime="20230331 10:12:22.733" endtime="20230331 10:12:22.779"/>
</kw>
<msg timestamp="20230331 10:12:22.779" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:12:22.732" endtime="20230331 10:12:22.782"/>
</kw>
<msg timestamp="20230331 10:12:22.782" level="INFO">${result} = {"status":"OK","path":"/vol-qamqu/buc-ptyxe","size":9917,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-qamqu/buc-ptyxe/dir1","size":6038,"sizeWithReplica":-1,"isKey":fals...</msg>
<status status="PASS" starttime="20230331 10:12:22.731" endtime="20230331 10:12:22.782"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:12:22.782" endtime="20230331 10:12:22.783"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:12:22.784" endtime="20230331 10:12:22.784"/>
</kw>
<status status="PASS" starttime="20230331 10:12:22.731" endtime="20230331 10:12:22.785"/>
</kw>
<status status="PASS" starttime="20230331 10:12:22.730" endtime="20230331 10:12:22.785"/>
</kw>
<status status="PASS" starttime="20230331 10:12:22.729" endtime="20230331 10:12:22.785"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230331 10:12:22.727" endtime="20230331 10:12:22.785"/>
</test>
<test id="s1-s2-s2-t14" name="Check Recon Namespace Volume Quota Usage" line="141">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:12:22.801" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-qamqu 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:12:22.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:12:22.830" level="INFO">${output} = {"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20230331 10:12:22.797" endtime="20230331 10:12:22.830"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:12:22.836" level="INFO">{"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20230331 10:12:22.830" endtime="20230331 10:12:22.837"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:12:22.839" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:12:22.837" endtime="20230331 10:12:22.839"/>
</kw>
<status status="PASS" starttime="20230331 10:12:22.796" endtime="20230331 10:12:22.840"/>
</kw>
<msg timestamp="20230331 10:12:22.840" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:12:22.795" endtime="20230331 10:12:22.841"/>
</kw>
<msg timestamp="20230331 10:12:22.841" level="INFO">${result} = {"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20230331 10:12:22.795" endtime="20230331 10:12:22.842"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:12:22.842" endtime="20230331 10:12:22.843"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:12:22.843" endtime="20230331 10:12:22.843"/>
</kw>
<status status="PASS" starttime="20230331 10:12:22.794" endtime="20230331 10:12:22.844"/>
</kw>
<status status="PASS" starttime="20230331 10:12:22.793" endtime="20230331 10:12:22.844"/>
</kw>
<status status="PASS" starttime="20230331 10:12:22.792" endtime="20230331 10:12:22.844"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230331 10:12:22.790" endtime="20230331 10:12:22.844"/>
</test>
<test id="s1-s2-s2-t15" name="Check Recon Namespace Bucket Quota Usage" line="144">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:12:22.861" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-qamqu/buc-ptyxe 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:12:22.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:12:22.882" level="INFO">${output} = {"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20230331 10:12:22.854" endtime="20230331 10:12:22.882"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:12:22.884" level="INFO">{"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20230331 10:12:22.883" endtime="20230331 10:12:22.886"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:12:22.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:12:22.887" endtime="20230331 10:12:22.888"/>
</kw>
<status status="PASS" starttime="20230331 10:12:22.854" endtime="20230331 10:12:22.888"/>
</kw>
<msg timestamp="20230331 10:12:22.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:12:22.853" endtime="20230331 10:12:22.889"/>
</kw>
<msg timestamp="20230331 10:12:22.890" level="INFO">${result} = {"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20230331 10:12:22.852" endtime="20230331 10:12:22.890"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:12:22.891" endtime="20230331 10:12:22.892"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:12:22.892" endtime="20230331 10:12:22.893"/>
</kw>
<status status="PASS" starttime="20230331 10:12:22.851" endtime="20230331 10:12:22.893"/>
</kw>
<status status="PASS" starttime="20230331 10:12:22.851" endtime="20230331 10:12:22.893"/>
</kw>
<status status="PASS" starttime="20230331 10:12:22.849" endtime="20230331 10:12:22.893"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230331 10:12:22.847" endtime="20230331 10:12:22.894"/>
</test>
<test id="s1-s2-s2-t16" name="Check Recon Namespace File Size Distribution Root" line="147">
<kw name="Wait For Summary">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<arg>\"dist\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:12:22.908" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:12:22.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:12:22.932" level="INFO">${output} = {"dist":[0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20230331 10:12:22.904" endtime="20230331 10:12:22.932"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:12:22.935" level="INFO">{"dist":[0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20230331 10:12:22.933" endtime="20230331 10:12:22.936"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:12:22.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:12:22.936" endtime="20230331 10:12:22.937"/>
</kw>
<status status="PASS" starttime="20230331 10:12:22.903" endtime="20230331 10:12:22.937"/>
</kw>
<msg timestamp="20230331 10:12:22.937" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:12:22.903" endtime="20230331 10:12:22.938"/>
</kw>
<msg timestamp="20230331 10:12:22.938" level="INFO">${result} = {"dist":[0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20230331 10:12:22.902" endtime="20230331 10:12:22.938"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:12:22.939" endtime="20230331 10:12:22.939"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:12:22.940" endtime="20230331 10:12:22.940"/>
</kw>
<status status="PASS" starttime="20230331 10:12:22.901" endtime="20230331 10:12:22.941"/>
</kw>
<status status="PASS" starttime="20230331 10:12:22.901" endtime="20230331 10:12:22.941"/>
</kw>
<status status="PASS" starttime="20230331 10:12:22.898" endtime="20230331 10:12:22.941"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230331 10:12:22.897" endtime="20230331 10:12:22.942"/>
</test>
<doc>Smoke test for Recon Namespace Summary Endpoint for FILE_SYSTEM_OPTIMIZED buckets.</doc>
<status status="PASS" starttime="20230331 10:11:26.651" endtime="20230331 10:12:22.945"/>
</suite>
<status status="PASS" starttime="20230331 10:10:36.724" endtime="20230331 10:12:22.950"/>
</suite>
<suite id="s1-s3" name="Loaddata" source="/opt/hadoop/smoketest/topology/loaddata.robot">
<test id="s1-s3-t1" name="Create a volume, bucket and key" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create topvol1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:12:30.706" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:12:37.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:12:37.996" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230331 10:12:30.701" endtime="20230331 10:12:37.996"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:12:37.998" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230331 10:12:37.997" endtime="20230331 10:12:37.998"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:12:37.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:12:37.998" endtime="20230331 10:12:37.999"/>
</kw>
<status status="PASS" starttime="20230331 10:12:30.700" endtime="20230331 10:12:37.999"/>
</kw>
<msg timestamp="20230331 10:12:37.999" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:12:30.699" endtime="20230331 10:12:38.001"/>
</kw>
<msg timestamp="20230331 10:12:38.001" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230331 10:12:30.698" endtime="20230331 10:12:38.001"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:12:38.002" endtime="20230331 10:12:38.002"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:12:38.007" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:12:44.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:12:44.665" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230331 10:12:38.004" endtime="20230331 10:12:44.665"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:12:44.667" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230331 10:12:44.666" endtime="20230331 10:12:44.667"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:12:44.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:12:44.667" endtime="20230331 10:12:44.668"/>
</kw>
<status status="PASS" starttime="20230331 10:12:38.003" endtime="20230331 10:12:44.668"/>
</kw>
<msg timestamp="20230331 10:12:44.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:12:38.003" endtime="20230331 10:12:44.669"/>
</kw>
<msg timestamp="20230331 10:12:44.669" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230331 10:12:38.002" endtime="20230331 10:12:44.669"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:12:44.669" endtime="20230331 10:12:44.670"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:12:44.676" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:12:55.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:12:55.584" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230331 10:12:44.672" endtime="20230331 10:12:55.584"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:12:55.585" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230331 10:12:55.585" endtime="20230331 10:12:55.586"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:12:55.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:12:55.586" endtime="20230331 10:12:55.587"/>
</kw>
<status status="PASS" starttime="20230331 10:12:44.671" endtime="20230331 10:12:55.587"/>
</kw>
<msg timestamp="20230331 10:12:55.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:12:44.671" endtime="20230331 10:12:55.588"/>
</kw>
<msg timestamp="20230331 10:12:55.588" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230331 10:12:44.670" endtime="20230331 10:12:55.588"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:12:55.588" endtime="20230331 10:12:55.589"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230331 10:12:30.696" endtime="20230331 10:12:55.589"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230331 10:12:30.627" endtime="20230331 10:12:55.591"/>
</suite>
<suite id="s1-s4" name="readdata-first-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s4-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230331 10:13:10.849" level="INFO">${random} = 13277</msg>
<status status="PASS" starttime="20230331 10:13:10.848" endtime="20230331 10:13:10.849"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:13:10.856" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-13277 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:13:42.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:13:42.534" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230331 10:13:10.851" endtime="20230331 10:13:42.534"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:13:42.536" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230331 10:13:42.535" endtime="20230331 10:13:42.536"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:13:42.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:13:42.536" endtime="20230331 10:13:42.538"/>
</kw>
<status status="PASS" starttime="20230331 10:13:10.851" endtime="20230331 10:13:42.538"/>
</kw>
<msg timestamp="20230331 10:13:42.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:13:10.850" endtime="20230331 10:13:42.540"/>
</kw>
<msg timestamp="20230331 10:13:42.540" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230331 10:13:10.849" endtime="20230331 10:13:42.540"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:13:42.541" endtime="20230331 10:13:42.541"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230331 10:13:10.847" endtime="20230331 10:13:42.541"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230331 10:13:10.774" endtime="20230331 10:13:42.544"/>
</suite>
<suite id="s1-s5" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s5-t1" name="Check webui static resources" line="29">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230331 10:09:20.714" endtime="20230331 10:09:20.720"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:09:20.737" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:09:21.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:09:21.032" level="INFO">${output} = HTTP/1.1 200 OK
Date: Fri, 31 Mar 2023 10:09:20 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Fri, 31 Mar 2023 09:29:34 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20230331 10:09:20.723" endtime="20230331 10:09:21.032"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:09:21.034" level="INFO">HTTP/1.1 200 OK
Date: Fri, 31 Mar 2023 10:09:20 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Fri, 31 Mar 2023 09:29:34 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20230331 10:09:21.032" endtime="20230331 10:09:21.034"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:09:21.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:09:21.034" endtime="20230331 10:09:21.035"/>
</kw>
<status status="PASS" starttime="20230331 10:09:20.722" endtime="20230331 10:09:21.035"/>
</kw>
<msg timestamp="20230331 10:09:21.036" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:09:20.722" endtime="20230331 10:09:21.038"/>
</kw>
<msg timestamp="20230331 10:09:21.040" level="INFO">${result} = HTTP/1.1 200 OK
Date: Fri, 31 Mar 2023 10:09:20 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Fri, 31 Mar 2023 09:29:34 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20230331 10:09:20.721" endtime="20230331 10:09:21.040"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:09:21.041" endtime="20230331 10:09:21.043"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230331 10:09:20.712" endtime="20230331 10:09:21.043"/>
</test>
<test id="s1-s5-t2" name="Basic Freon smoketest" line="34">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230331 10:09:21.051" endtime="20230331 10:09:21.053"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230331 10:09:21.056" level="INFO">${random} = e7VlhOAswF</msg>
<status status="PASS" starttime="20230331 10:09:21.053" endtime="20230331 10:09:21.057"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:09:21.068" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p e7VlhOAswF  2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:09:40.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:09:40.032" level="INFO">${output} = 2023-03-31 10:09:26,693 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-03-31 10:09:26,868 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230331 10:09:21.064" endtime="20230331 10:09:40.032"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:09:40.034" level="INFO">2023-03-31 10:09:26,693 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-03-31 10:09:26,868 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-03-31 10:09:26,868 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-03-31 10:09:27,107 [main] INFO freon.BaseFreonGenerator: Executing test with prefix e7VlhOAswF and number-of-tests 1
2023-03-31 10:09:27,183 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-31 10:09:28,194 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-31 10:09:29,196 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-31 10:09:29,523 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2023-03-31 10:09:29,835 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2023-03-31 10:09:30,196 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-31 10:09:31,197 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-31 10:09:32,197 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-31 10:09:32,536 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-03-31 10:09:33,046 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-03-31 10:09:33,207 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-31 10:09:34,208 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-31 10:09:35,208 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-31 10:09:36,209 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-31 10:09:37,210 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-31 10:09:38,212 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-31 10:09:39,214 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-03-31 10:09:39,317 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=8314.924414, max=8314.924414, mean=8314.924414, stddev=0.0, median=8314.924414, p75=8314.924414, p95=8314.924414, p98=8314.924414, p99=8314.924414, p999=8314.924414, mean_rate=0.10688663387518489, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-03-31 10:09:39,321 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 12
2023-03-31 10:09:39,324 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-03-31 10:09:39,324 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230331 10:09:40.033" endtime="20230331 10:09:40.034"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:09:40.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:09:40.034" endtime="20230331 10:09:40.035"/>
</kw>
<status status="PASS" starttime="20230331 10:09:21.063" endtime="20230331 10:09:40.035"/>
</kw>
<msg timestamp="20230331 10:09:40.035" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:09:21.063" endtime="20230331 10:09:40.036"/>
</kw>
<msg timestamp="20230331 10:09:40.036" level="INFO">${result} = 2023-03-31 10:09:26,693 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-03-31 10:09:26,868 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230331 10:09:21.062" endtime="20230331 10:09:40.036"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:09:40.037" endtime="20230331 10:09:40.037"/>
</kw>
<status status="PASS" starttime="20230331 10:09:21.059" endtime="20230331 10:09:40.037"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230331 10:09:40.049" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p e7VlhOAswF  2&gt;&amp;1'.</msg>
<msg timestamp="20230331 10:09:52.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20230331 10:09:52.913" level="INFO">${output} = 2023-03-31 10:09:44,799 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-03-31 10:09:45,063 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230331 10:09:40.041" endtime="20230331 10:09:52.913"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230331 10:09:52.915" level="INFO">2023-03-31 10:09:44,799 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-03-31 10:09:45,063 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-03-31 10:09:45,063 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-03-31 10:09:45,217 [main] INFO freon.BaseFreonGenerator: Executing test with prefix e7VlhOAswF and number-of-tests 1
2023-03-31 10:09:45,313 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-31 10:09:46,321 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-31 10:09:47,321 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-31 10:09:48,322 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-31 10:09:49,323 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-31 10:09:49,560 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-03-31 10:09:50,324 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-31 10:09:51,325 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-03-31 10:09:52,326 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-03-31 10:09:52,466 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=108.990377, max=108.990377, mean=108.990377, stddev=0.0, median=108.990377, p75=108.990377, p95=108.990377, p98=108.990377, p99=108.990377, p999=108.990377, mean_rate=0.8553675844896281, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-03-31 10:09:52,469 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 7
2023-03-31 10:09:52,471 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-03-31 10:09:52,471 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230331 10:09:52.913" endtime="20230331 10:09:52.915"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230331 10:09:52.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 10:09:52.915" endtime="20230331 10:09:52.916"/>
</kw>
<status status="PASS" starttime="20230331 10:09:40.041" endtime="20230331 10:09:52.916"/>
</kw>
<msg timestamp="20230331 10:09:52.916" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230331 10:09:40.040" endtime="20230331 10:09:52.917"/>
</kw>
<msg timestamp="20230331 10:09:52.917" level="INFO">${result} = 2023-03-31 10:09:44,799 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-03-31 10:09:45,063 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230331 10:09:40.039" endtime="20230331 10:09:52.917"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230331 10:09:52.918" endtime="20230331 10:09:52.918"/>
</kw>
<status status="PASS" starttime="20230331 10:09:40.038" endtime="20230331 10:09:52.918"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230331 10:09:21.046" endtime="20230331 10:09:52.919"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230331 10:09:20.596" endtime="20230331 10:09:52.921"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="223872"/>
</suite>
<statistics>
<total>
<stat pass="31" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="31" fail="0" skip="0" id="s1" name="ozone-topology">ozone-topology</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1" name="Cli">ozone-topology.Cli</stat>
<stat pass="23" fail="0" skip="0" id="s1-s2" name="Recon">ozone-topology.Recon</stat>
<stat pass="7" fail="0" skip="0" id="s1-s2-s1" name="Recon-Api">ozone-topology.Recon.Recon-Api</stat>
<stat pass="16" fail="0" skip="0" id="s1-s2-s2" name="Recon-Nssummary">ozone-topology.Recon.Recon-Nssummary</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Loaddata">ozone-topology.Loaddata</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="readdata-first-half">ozone-topology.readdata-first-half</stat>
<stat pass="2" fail="0" skip="0" id="s1-s5" name="Basic">ozone-topology.Basic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
