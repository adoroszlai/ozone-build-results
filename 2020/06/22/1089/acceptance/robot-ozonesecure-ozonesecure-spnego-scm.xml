<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200622 15:15:24.763" rpa="false">
<suite id="s1" name="ozonesecure-spnego" source="/opt/hadoop/smoketest/spnego">
<suite id="s1-s1" name="Web" source="/opt/hadoop/smoketest/spnego/web.robot">
<test id="s1-s1-t1" name="Generate Freon data">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:15:24.815" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:15:24.817" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:15:24.817" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200622 15:15:24.811" endtime="20200622 15:15:24.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:15:24.818" level="INFO">scm</msg>
<status status="PASS" starttime="20200622 15:15:24.817" endtime="20200622 15:15:24.818"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:15:24.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:15:24.818" endtime="20200622 15:15:24.818"></status>
</kw>
<msg timestamp="20200622 15:15:24.819" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200622 15:15:24.811" endtime="20200622 15:15:24.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200622 15:15:24.820" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200622 15:15:24.819" endtime="20200622 15:15:24.820"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:15:24.824" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:15:24.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:15:24.833" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 15:15:24.821" endtime="20200622 15:15:24.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:15:24.833" level="INFO"></msg>
<status status="PASS" starttime="20200622 15:15:24.833" endtime="20200622 15:15:24.834"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:15:24.834" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:15:24.834" endtime="20200622 15:15:24.834"></status>
</kw>
<status status="PASS" starttime="20200622 15:15:24.820" endtime="20200622 15:15:24.834"></status>
</kw>
<status status="PASS" starttime="20200622 15:15:24.820" endtime="20200622 15:15:24.834"></status>
</kw>
<status status="PASS" starttime="20200622 15:15:24.810" endtime="20200622 15:15:24.834"></status>
</kw>
<status status="PASS" starttime="20200622 15:15:24.810" endtime="20200622 15:15:24.834"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 2 --keySize 1025</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:15:24.838" level="INFO">Running command 'ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 2 --keySize 1025 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:15:32.508" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:15:32.508" level="INFO">${output} = 2020-06-22 15:15:25,738 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-22 15:15:25,901 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200622 15:15:24.835" endtime="20200622 15:15:32.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:15:32.509" level="INFO">2020-06-22 15:15:25,738 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-22 15:15:25,901 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-22 15:15:25,901 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-06-22 15:15:27,010 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2020-06-22 15:15:27,011 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-06-22 15:15:27,011 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-06-22 15:15:27,011 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 2.
2020-06-22 15:15:27,011 [main] INFO freon.RandomKeyGenerator: Key size: 1025 bytes
2020-06-22 15:15:27,011 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-22 15:15:27,011 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-06-22 15:15:27,023 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-22 15:15:27,035 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 2)
2020-06-22 15:15:27,066 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-03069, with testuser/scm@EXAMPLE.COM as owner.
2020-06-22 15:15:27,088 [pool-2-thread-2] INFO rpc.RpcClient: Creating Bucket: vol-0-03069/bucket-0-20649, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-22 15:15:27,516 [pool-2-thread-3] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-22 15:15:28,039 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (2 out of 2)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 2
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,004
Average Time spent in bucket creation: 00:00:00,001
Average Time spent in key creation: 00:00:00,010
Average Time spent in key write: 00:00:00,084
Total bytes written: 2050
Total Execution time: 00:00:06,076
***************************************************</msg>
<status status="PASS" starttime="20200622 15:15:32.509" endtime="20200622 15:15:32.510"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:15:32.510" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:15:32.510" endtime="20200622 15:15:32.510"></status>
</kw>
<status status="PASS" starttime="20200622 15:15:24.835" endtime="20200622 15:15:32.510"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200622 15:15:24.809" endtime="20200622 15:15:32.511" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Test OM portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:15:32.515" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:15:32.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:15:32.518" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 15:15:32.513" endtime="20200622 15:15:32.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:15:32.519" level="INFO"></msg>
<status status="PASS" starttime="20200622 15:15:32.518" endtime="20200622 15:15:32.519"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:15:32.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:15:32.519" endtime="20200622 15:15:32.519"></status>
</kw>
<status status="PASS" starttime="20200622 15:15:32.512" endtime="20200622 15:15:32.520"></status>
</kw>
<status status="PASS" starttime="20200622 15:15:32.512" endtime="20200622 15:15:32.520"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:15:32.522" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:15:32.540" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:15:32.540" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.7...
* Connected to om (172.26.0.7) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200622 15:15:32.520" endtime="20200622 15:15:32.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:15:32.541" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.7...
* Connected to om (172.26.0.7) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200622 15:15:32.540" endtime="20200622 15:15:32.541"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:15:32.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:15:32.541" endtime="20200622 15:15:32.542"></status>
</kw>
<msg timestamp="20200622 15:15:32.542" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.7...
* Connected to om (172.26.0.7) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200622 15:15:32.520" endtime="20200622 15:15:32.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200622 15:15:32.542" endtime="20200622 15:15:32.543"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:15:32.547" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:15:32.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:15:32.548" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200622 15:15:32.544" endtime="20200622 15:15:32.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:15:32.549" level="INFO">scm</msg>
<status status="PASS" starttime="20200622 15:15:32.548" endtime="20200622 15:15:32.549"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:15:32.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:15:32.549" endtime="20200622 15:15:32.550"></status>
</kw>
<msg timestamp="20200622 15:15:32.550" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200622 15:15:32.544" endtime="20200622 15:15:32.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200622 15:15:32.551" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200622 15:15:32.550" endtime="20200622 15:15:32.551"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:15:32.554" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:15:32.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:15:32.563" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 15:15:32.552" endtime="20200622 15:15:32.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:15:32.564" level="INFO"></msg>
<status status="PASS" starttime="20200622 15:15:32.564" endtime="20200622 15:15:32.564"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:15:32.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:15:32.564" endtime="20200622 15:15:32.565"></status>
</kw>
<status status="PASS" starttime="20200622 15:15:32.551" endtime="20200622 15:15:32.565"></status>
</kw>
<status status="PASS" starttime="20200622 15:15:32.551" endtime="20200622 15:15:32.565"></status>
</kw>
<status status="PASS" starttime="20200622 15:15:32.543" endtime="20200622 15:15:32.566"></status>
</kw>
<status status="PASS" starttime="20200622 15:15:32.543" endtime="20200622 15:15:32.566"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:15:32.569" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:15:32.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:15:32.597" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.7...
* Connected to om (172.26.0.7) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200622 15:15:32.566" endtime="20200622 15:15:32.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:15:32.598" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.7...
* Connected to om (172.26.0.7) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/'
* Found bundle for host om: 0x236ef20
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.7) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQb/Nt49sg+kdevvyJin6z6PA2FSifw7FoFMZ1CAh3lwYUdblTi7rtwufEEClG8EFT+94M3e9ZYESacpCml+HYjz+LRgMY0qr2EISo0NNEeuuBEUpiyleiQ+K7guUc9hXCzBrZnZAT0KoqME9v7jQwM3lue0hKd5yzCT628cak1LYKnTF9JvpbKSAQ7B/JoD+zzsSsqPA1lH4e4fwyT5DcBTIHMrm+0JWPxCQXBsavwJHLksIgau0CMsgHznFJeIHIoqkGpeRlH/eIcXsTg6n4s/OUEHjL4FQnOdatOw7Tsv9wa8pNn2Rse57Wy7JrZg7zMuwe5XtYR7pZILatLPKFQvQsN/h9SUpIHWMIHToAMCARKigcsEgcjvFFvg4pQjTD2sOIky5M04+11C3gBRUL2VjnIOcdBOEf+7J2Kw3GosfTjT9JOzkmitLYs2FqDGdQmCkPVq6FK0Fr/irXdDvAbpOAOFc1WhGCCi+lQHPxK1qRQiRwnt16HbhqLX6rRjAAH2pO8jzr0y3SdAC66jDj0oXrVVeuv3xjOxfMueldnrIHnbldX2f1k+PYst5ktkhwdFxt5I9JlchsH5Nwc98I0df0MvlBn82oSBX0V+mdw6LhpLF7fo0gx/nLPixZ0v+g==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Mon, 22 Jun 2020 15:15:32 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Mon, 22 Jun 2020 15:15:32 GMT
&lt; Date: Mon, 22 Jun 2020 15:15:32 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Mon, 22 Jun 2020 15:15:32 GMT
&lt; Date: Mon, 22 Jun 2020 15:15:32 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC55BU3TqybbN/oVesGXgXs+NTuiOyiGjUzWOqfMHnn+BjaFopdlVuMRkX3ZxA4Xj40PM1abmgMEaJ15wfbpVzcwLi
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1592874932587&amp;s=NX4wHHsMIvo37Vv+x0/dxxhtLbi4Coe3mlXrlk4/h8I="; Path=/; HttpOnly
&lt; Last-Modified: Mon, 22 Jun 2020 14:07:38 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2927
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Mon, 22 Jun 2020 15:15:32 GMT
Cache-Control: no-cache
Expires: Mon, 22 Jun 2020 15:15:32 GMT
Date: Mon, 22 Jun 2020 15:15:32 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Mon, 22 Jun 2020 15:15:32 GMT
Date: Mon, 22 Jun 2020 15:15:32 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC55BU3TqybbN/oVesGXgXs+NTuiOyiGjUzWOqfMHnn+BjaFopdlVuMRkX3ZxA4Xj40PM1abmgMEaJ15wfbpVzcwLi
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1592874932587&amp;s=NX4wHHsMIvo37Vv+x0/dxxhtLbi4Coe3mlXrlk4/h8I="; Path=/; HttpOnly
Last-Modified: Mon, 22 Jun 2020 14:07:38 GMT
Accept-Ranges: bytes
Content-Length: 2927
</msg>
<status status="PASS" starttime="20200622 15:15:32.598" endtime="20200622 15:15:32.599"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:15:32.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:15:32.599" endtime="20200622 15:15:32.599"></status>
</kw>
<msg timestamp="20200622 15:15:32.599" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.7...
* Connected to om (172.26.0.7) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200622 15:15:32.566" endtime="20200622 15:15:32.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200622 15:15:32.599" endtime="20200622 15:15:32.600"></status>
</kw>
<status status="PASS" starttime="20200622 15:15:32.511" endtime="20200622 15:15:32.600"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200622 15:15:32.511" endtime="20200622 15:15:32.600" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Test OM DB Checkpoint">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_DB_CHECKPOINT_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:15:32.604" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:15:32.607" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:15:32.607" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 15:15:32.602" endtime="20200622 15:15:32.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:15:32.608" level="INFO"></msg>
<status status="PASS" starttime="20200622 15:15:32.608" endtime="20200622 15:15:32.608"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:15:32.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:15:32.608" endtime="20200622 15:15:32.609"></status>
</kw>
<status status="PASS" starttime="20200622 15:15:32.602" endtime="20200622 15:15:32.609"></status>
</kw>
<status status="PASS" starttime="20200622 15:15:32.602" endtime="20200622 15:15:32.609"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:15:32.612" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/dbCheckpoint 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:15:32.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:15:32.624" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.7...
* Connected to om (172.26.0.7) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200622 15:15:32.609" endtime="20200622 15:15:32.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:15:32.624" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.7...
* Connected to om (172.26.0.7) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 417
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 417
</msg>
<status status="PASS" starttime="20200622 15:15:32.624" endtime="20200622 15:15:32.625"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:15:32.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:15:32.625" endtime="20200622 15:15:32.625"></status>
</kw>
<msg timestamp="20200622 15:15:32.625" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.7...
* Connected to om (172.26.0.7) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200622 15:15:32.609" endtime="20200622 15:15:32.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200622 15:15:32.625" endtime="20200622 15:15:32.626"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:15:32.630" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:15:32.631" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:15:32.631" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200622 15:15:32.627" endtime="20200622 15:15:32.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:15:32.632" level="INFO">scm</msg>
<status status="PASS" starttime="20200622 15:15:32.631" endtime="20200622 15:15:32.632"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:15:32.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:15:32.632" endtime="20200622 15:15:32.633"></status>
</kw>
<msg timestamp="20200622 15:15:32.633" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200622 15:15:32.627" endtime="20200622 15:15:32.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200622 15:15:32.633" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200622 15:15:32.633" endtime="20200622 15:15:32.633"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:15:32.637" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:15:32.645" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:15:32.645" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 15:15:32.634" endtime="20200622 15:15:32.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:15:32.646" level="INFO"></msg>
<status status="PASS" starttime="20200622 15:15:32.645" endtime="20200622 15:15:32.646"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:15:32.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:15:32.646" endtime="20200622 15:15:32.646"></status>
</kw>
<status status="PASS" starttime="20200622 15:15:32.634" endtime="20200622 15:15:32.646"></status>
</kw>
<status status="PASS" starttime="20200622 15:15:32.634" endtime="20200622 15:15:32.647"></status>
</kw>
<status status="PASS" starttime="20200622 15:15:32.626" endtime="20200622 15:15:32.647"></status>
</kw>
<status status="PASS" starttime="20200622 15:15:32.626" endtime="20200622 15:15:32.647"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:15:32.649" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/dbCheckpoint 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:15:32.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:15:32.706" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.7...
* Connected to om (172.26.0.7) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200622 15:15:32.647" endtime="20200622 15:15:32.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:15:32.707" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.7...
* Connected to om (172.26.0.7) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 417
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/dbCheckpoint'
* Found bundle for host om: 0x80ff50
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.7) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQZRMFZROUr1ycc2TMk0kw/T0mXiXMHd+ypzm5bYp1cwOvWqOGd0uh/w32RY7+c14aw/g4kD7IRPdjyh2uq9meHIZgYciqws87MO3JhAHipj77d8GG1TfkeIeiUTZW/dSAU4jgm3IH7bb1A/bhOIruAiIlcD7KqSdF9p/vB8NPCMkxbdJn3GZIsdC2DdPyH6mwIiwdPBNxMHj4mWRL6OcAT79bs7r2cKlgp4EGbWQe8LO3v5O7Xzlz9HAGAoN0BUuYGa4KaEJr/2yAP5eVIJzLYdOHhHihfHPJA6Fr6pBgoWHYw3PmWsePEFfLpVV59Hwepbzp2eBh/opMuFMomujIQZDegDPp1npIHWMIHToAMCARKigcsEgcgabRn9SRnACTCwOTXYU1CgvDlGcVFByWEUd4kEv53wVITb7XxR2dAjWCgsUiAZs0Qrf2o7ANEAbjlokap2uXbesdO1ZaFXwMDf7DvmIiTSPHjCBWFEyv+AQGRqH68k97niBwk5DwE7Dv3MP49lgGx5kJXqoF7MKyJEOgiDhvkPg/RXj+jLntx7V+Z0fZs3VERtAcLFFCfnicTeu7IcoDmmf3mj3m83H4f5/WFO2JmN2X4qk9rqPx/rAAyRyRbP8nGfaRCtjq4sDA==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Mon, 22 Jun 2020 15:15:32 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Mon, 22 Jun 2020 15:15:32 GMT
&lt; Date: Mon, 22 Jun 2020 15:15:32 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/x-tgz
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCTO7nq6ed7oSMDFXB1696lrxF8Ro5Yvk7ctdhzn/cu22L7/85nbY8JQsMV/TybJ6tLMfgTXE+Cl/cx58hikUjI6EO
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1592874932667&amp;s=X37q7oDacPu1jftVCj6g2KQAN0pPdjOgdsyFf+lCBiU="; Path=/; HttpOnly
&lt; Content-Disposition: attachment; filename="rdb_rdb_checkpoint_1592838932667.tgz"
&lt; Content-Length: 73330
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 417

HTTP/1.1 200 OK
Date: Mon, 22 Jun 2020 15:15:32 GMT
Cache-Control: no-cache
Expires: Mon, 22 Jun 2020 15:15:32 GMT
Date: Mon, 22 Jun 2020 15:15:32 GMT
Pragma: no-cache
Content-Type: application/x-tgz
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCTO7nq6ed7oSMDFXB1696lrxF8Ro5Yvk7ctdhzn/cu22L7/85nbY8JQsMV/TybJ6tLMfgTXE+Cl/cx58hikUjI6EO
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1592874932667&amp;s=X37q7oDacPu1jftVCj6g2KQAN0pPdjOgdsyFf+lCBiU="; Path=/; HttpOnly
Content-Disposition: attachment; filename="rdb_rdb_checkpoint_1592838932667.tgz"
Content-Length: 73330
</msg>
<status status="PASS" starttime="20200622 15:15:32.706" endtime="20200622 15:15:32.707"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:15:32.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:15:32.707" endtime="20200622 15:15:32.708"></status>
</kw>
<msg timestamp="20200622 15:15:32.708" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.7...
* Connected to om (172.26.0.7) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200622 15:15:32.647" endtime="20200622 15:15:32.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200622 15:15:32.708" endtime="20200622 15:15:32.708"></status>
</kw>
<status status="PASS" starttime="20200622 15:15:32.601" endtime="20200622 15:15:32.709"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200622 15:15:32.600" endtime="20200622 15:15:32.709" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Test OM Service List">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_SERVICE_LIST_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:15:32.714" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:15:32.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:15:32.716" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 15:15:32.711" endtime="20200622 15:15:32.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:15:32.717" level="INFO"></msg>
<status status="PASS" starttime="20200622 15:15:32.717" endtime="20200622 15:15:32.717"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:15:32.717" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:15:32.717" endtime="20200622 15:15:32.718"></status>
</kw>
<status status="PASS" starttime="20200622 15:15:32.711" endtime="20200622 15:15:32.718"></status>
</kw>
<status status="PASS" starttime="20200622 15:15:32.710" endtime="20200622 15:15:32.718"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:15:32.722" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/serviceList 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:15:32.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:15:32.732" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.7...
* Connected to om (172.26.0.7) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200622 15:15:32.718" endtime="20200622 15:15:32.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:15:32.733" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.7...
* Connected to om (172.26.0.7) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 415
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 415
</msg>
<status status="PASS" starttime="20200622 15:15:32.733" endtime="20200622 15:15:32.733"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:15:32.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:15:32.733" endtime="20200622 15:15:32.734"></status>
</kw>
<msg timestamp="20200622 15:15:32.734" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.7...
* Connected to om (172.26.0.7) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200622 15:15:32.718" endtime="20200622 15:15:32.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200622 15:15:32.734" endtime="20200622 15:15:32.734"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:15:32.737" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:15:32.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:15:32.740" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200622 15:15:32.736" endtime="20200622 15:15:32.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:15:32.740" level="INFO">scm</msg>
<status status="PASS" starttime="20200622 15:15:32.740" endtime="20200622 15:15:32.741"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:15:32.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:15:32.741" endtime="20200622 15:15:32.741"></status>
</kw>
<msg timestamp="20200622 15:15:32.741" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200622 15:15:32.735" endtime="20200622 15:15:32.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200622 15:15:32.742" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200622 15:15:32.742" endtime="20200622 15:15:32.742"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:15:32.746" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:15:32.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:15:32.754" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 15:15:32.743" endtime="20200622 15:15:32.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:15:32.755" level="INFO"></msg>
<status status="PASS" starttime="20200622 15:15:32.754" endtime="20200622 15:15:32.755"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:15:32.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:15:32.755" endtime="20200622 15:15:32.755"></status>
</kw>
<status status="PASS" starttime="20200622 15:15:32.743" endtime="20200622 15:15:32.756"></status>
</kw>
<status status="PASS" starttime="20200622 15:15:32.742" endtime="20200622 15:15:32.756"></status>
</kw>
<status status="PASS" starttime="20200622 15:15:32.735" endtime="20200622 15:15:32.756"></status>
</kw>
<status status="PASS" starttime="20200622 15:15:32.735" endtime="20200622 15:15:32.756"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:15:32.758" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/serviceList 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:15:32.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:15:32.785" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.7...
* Connected to om (172.26.0.7) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200622 15:15:32.756" endtime="20200622 15:15:32.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:15:32.786" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.7...
* Connected to om (172.26.0.7) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 415
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/serviceList'
* Found bundle for host om: 0x18e0f50
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.7) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD /serviceList HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQbFe8ccDr5Gy+O3oTXJSDyMyTAPGM+M/3nCwQSqW5DITZTYrqeAfOcZco1s1lQT/gfoH4CDpy1hJ0g8i3vPpXJT5RMM/2dUUTIp445CWy1bkbeIdLsMXproQKXBEblFvoyLcG+NdBB43Djsi07wuM30rhuRp8HR7Vk+p6RXHUOqZYSyFpiRCpzl96ZhABG7bpbZ8eQmrwUS+qWpKGj51AbsK+T6bXqLa/X5YU2NVowC5qYCCo2MbbkRF4gGSffGV8UXfKyUo5tXZEZTapY5AZ6fQ8nRbp3rgpsZ5laYJAY5ObKNS863IBNh3Zs0xSz9T1e30TiTZyFbL62/iY5wPVURDHj7LeAKpIHWMIHToAMCARKigcsEgcgTtDz9CzjgJ8OkONNdLw7q2pV2jAFDkRoE5G2dlPWFaRPL0NYfPW075gQ+yNYeLDGrmu8jDtvRnrlp0QRE3PfQFoFq1m3TCc8gJitFljx1d9+0S09CfA8NoEIxX+JlJDlE/fHp+dddF31SBTLiwBrWv7uKcv36u43FZcyEx9iOZ2AqA4Jk/0/53ZUAUjZqyVaQdrSOUCagBqNG7A6Ea+OYbuLCc6JsDa+S2mtLpHI8D4JCRTtmxtLA71/Uso0JMJCadmXwRi1grg==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Mon, 22 Jun 2020 15:15:32 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Mon, 22 Jun 2020 15:15:32 GMT
&lt; Date: Mon, 22 Jun 2020 15:15:32 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json; charset=utf8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCp93jsTX1pKg5X6MsDv/UFbfigDDtbrs1uN9ZWqgMidPguHw6j0LELzCBMyS7rbC3asZBzncdTo/MmozGPC4rfpt1
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1592874932775&amp;s=/j51GViona0B8PXp+rQOaUvmM+rnlkUEUbP1bkRSvCc="; Path=/; HttpOnly
&lt; Content-Length: 534
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 415

HTTP/1.1 200 OK
Date: Mon, 22 Jun 2020 15:15:32 GMT
Cache-Control: no-cache
Expires: Mon, 22 Jun 2020 15:15:32 GMT
Date: Mon, 22 Jun 2020 15:15:32 GMT
Pragma: no-cache
Content-Type: application/json; charset=utf8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCp93jsTX1pKg5X6MsDv/UFbfigDDtbrs1uN9ZWqgMidPguHw6j0LELzCBMyS7rbC3asZBzncdTo/MmozGPC4rfpt1
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1592874932775&amp;s=/j51GViona0B8PXp+rQOaUvmM+rnlkUEUbP1bkRSvCc="; Path=/; HttpOnly
Content-Length: 534
</msg>
<status status="PASS" starttime="20200622 15:15:32.786" endtime="20200622 15:15:32.787"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:15:32.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:15:32.787" endtime="20200622 15:15:32.787"></status>
</kw>
<msg timestamp="20200622 15:15:32.787" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.7...
* Connected to om (172.26.0.7) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200622 15:15:32.756" endtime="20200622 15:15:32.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200622 15:15:32.788" endtime="20200622 15:15:32.788"></status>
</kw>
<status status="PASS" starttime="20200622 15:15:32.710" endtime="20200622 15:15:32.788"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200622 15:15:32.709" endtime="20200622 15:15:32.789" critical="yes"></status>
</test>
<test id="s1-s1-t5" name="Test SCM portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${SCM_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:15:32.793" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:15:32.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:15:32.796" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 15:15:32.791" endtime="20200622 15:15:32.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:15:32.797" level="INFO"></msg>
<status status="PASS" starttime="20200622 15:15:32.797" endtime="20200622 15:15:32.797"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:15:32.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:15:32.797" endtime="20200622 15:15:32.798"></status>
</kw>
<status status="PASS" starttime="20200622 15:15:32.791" endtime="20200622 15:15:32.798"></status>
</kw>
<status status="PASS" starttime="20200622 15:15:32.790" endtime="20200622 15:15:32.798"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:15:32.802" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://scm:9876 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:15:32.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:15:32.816" level="INFO">${output} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.5...
* Connected to scm (172.26.0.5) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200622 15:15:32.799" endtime="20200622 15:15:32.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:15:32.817" level="INFO">* About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.5...
* Connected to scm (172.26.0.5) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host scm left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200622 15:15:32.816" endtime="20200622 15:15:32.817"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:15:32.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:15:32.817" endtime="20200622 15:15:32.818"></status>
</kw>
<msg timestamp="20200622 15:15:32.818" level="INFO">${result} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.5...
* Connected to scm (172.26.0.5) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200622 15:15:32.798" endtime="20200622 15:15:32.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200622 15:15:32.818" endtime="20200622 15:15:32.818"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:15:32.821" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:15:32.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:15:32.824" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200622 15:15:32.819" endtime="20200622 15:15:32.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:15:32.825" level="INFO">scm</msg>
<status status="PASS" starttime="20200622 15:15:32.824" endtime="20200622 15:15:32.825"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:15:32.825" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:15:32.825" endtime="20200622 15:15:32.825"></status>
</kw>
<msg timestamp="20200622 15:15:32.826" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200622 15:15:32.819" endtime="20200622 15:15:32.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200622 15:15:32.826" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200622 15:15:32.826" endtime="20200622 15:15:32.826"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:15:32.830" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:15:32.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:15:32.838" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 15:15:32.827" endtime="20200622 15:15:32.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:15:32.839" level="INFO"></msg>
<status status="PASS" starttime="20200622 15:15:32.838" endtime="20200622 15:15:32.839"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:15:32.839" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:15:32.839" endtime="20200622 15:15:32.840"></status>
</kw>
<status status="PASS" starttime="20200622 15:15:32.827" endtime="20200622 15:15:32.840"></status>
</kw>
<status status="PASS" starttime="20200622 15:15:32.826" endtime="20200622 15:15:32.840"></status>
</kw>
<status status="PASS" starttime="20200622 15:15:32.819" endtime="20200622 15:15:32.840"></status>
</kw>
<status status="PASS" starttime="20200622 15:15:32.818" endtime="20200622 15:15:32.840"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:15:32.843" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://scm:9876 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:15:32.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:15:32.869" level="INFO">${output} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.5...
* Connected to scm (172.26.0.5) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200622 15:15:32.840" endtime="20200622 15:15:32.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:15:32.870" level="INFO">* About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.5...
* Connected to scm (172.26.0.5) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host scm left intact
* Issue another request to this URL: 'http://scm:9876/'
* Found bundle for host scm: 0xc29f20
* Re-using existing connection! (#0) with host scm
* Connected to scm (172.26.0.5) port 9876 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWQYJKoZIhvcSAQICAQBuggJIMIICRKADAgEFoQMCAQ6iBwMFACAAAACjggFUYYIBUDCCAUygAwIBBaENGwtFWEFNUExFLkNPTaIWMBSgAwIBA6ENMAsbBEhUVFAbA3NjbaOCARwwggEYoAMCARKhAwIBAqKCAQoEggEG/Ibpdsd8f9tphS1WmUQ7lrYesh4fYmVEgFM22PFdOIEbOt6D2ERHmxF+4mNaiK5/J0Nsd5kxNrBLazmTidsUhaL9p0oNZ7OjjlsjFyEgx4z2ZpavYI/QJ2hbJcLxUF+NpJQWuFDsv1uowAEZhWLwsYcZSV7428i9UIQlIIWtjGB5PMdk/q3kry9wCcAbhQopJPh5dbCjRtvYMP62pTp8MrF0PA3VWsfrMTkRW4/puw+tlTBN3S/haDI7cuH3s3qblTxBVNeH9UXaqdYg4wFQScdWbuv1QHvatL9tNTfpXr/lNzM9XdXiapW7E4KT1ZJpxm2LgzDwv04YcxDrP3+FI8uZsZOahKSB1jCB06ADAgESooHLBIHI36rGuhodRVdgMc+JIZ9cJ7NGAZaB/sEHV4tQqgg45qh8uEpgLjXIpNMRB0yneytMWMr74EZELICanui/XU+Er+QgNuepbcqOH4lpsD+Jnme3nfXze9FS34hKavrSS4dqSu2gs+YmrcwEPL5uST3LqU/SveMBx2F5rsA+IitNnv8Dcpxz4kc7mkGL/IipRgaAJi0YdxjTEPaqO09nApFzmH+oxRF3BeRGyJNxINTbA/IOmRDVZfxvzixq8w/WKrNuE9U0QOkzWgI=
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Mon, 22 Jun 2020 15:15:32 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Mon, 22 Jun 2020 15:15:32 GMT
&lt; Date: Mon, 22 Jun 2020 15:15:32 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Mon, 22 Jun 2020 15:15:32 GMT
&lt; Date: Mon, 22 Jun 2020 15:15:32 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCLVhc+e1JJKWtRhRWEOo7VWUGgLjm3e+9rJ2y1r0vVoMUUmh0sLO8TO2qkJvgqiqtW86hWN+EuTZc+HtMVu9lSBPR
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1592874932863&amp;s=N3YIiE+tbKe6jtCtAvhMOzapciH3kK7eCBNeRnPcgno="; Path=/; HttpOnly
&lt; Last-Modified: Mon, 22 Jun 2020 14:07:14 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2923
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Mon, 22 Jun 2020 15:15:32 GMT
Cache-Control: no-cache
Expires: Mon, 22 Jun 2020 15:15:32 GMT
Date: Mon, 22 Jun 2020 15:15:32 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Mon, 22 Jun 2020 15:15:32 GMT
Date: Mon, 22 Jun 2020 15:15:32 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCLVhc+e1JJKWtRhRWEOo7VWUGgLjm3e+9rJ2y1r0vVoMUUmh0sLO8TO2qkJvgqiqtW86hWN+EuTZc+HtMVu9lSBPR
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1592874932863&amp;s=N3YIiE+tbKe6jtCtAvhMOzapciH3kK7eCBNeRnPcgno="; Path=/; HttpOnly
Last-Modified: Mon, 22 Jun 2020 14:07:14 GMT
Accept-Ranges: bytes
Content-Length: 2923
</msg>
<status status="PASS" starttime="20200622 15:15:32.869" endtime="20200622 15:15:32.870"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:15:32.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:15:32.870" endtime="20200622 15:15:32.871"></status>
</kw>
<msg timestamp="20200622 15:15:32.871" level="INFO">${result} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.5...
* Connected to scm (172.26.0.5) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200622 15:15:32.840" endtime="20200622 15:15:32.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200622 15:15:32.871" endtime="20200622 15:15:32.872"></status>
</kw>
<status status="PASS" starttime="20200622 15:15:32.790" endtime="20200622 15:15:32.872"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200622 15:15:32.789" endtime="20200622 15:15:32.872" critical="yes"></status>
</test>
<test id="s1-s1-t6" name="Test Recon portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${RECON_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:15:32.876" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:15:32.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:15:32.880" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 15:15:32.874" endtime="20200622 15:15:32.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:15:32.881" level="INFO"></msg>
<status status="PASS" starttime="20200622 15:15:32.880" endtime="20200622 15:15:32.881"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:15:32.881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:15:32.881" endtime="20200622 15:15:32.881"></status>
</kw>
<status status="PASS" starttime="20200622 15:15:32.874" endtime="20200622 15:15:32.881"></status>
</kw>
<status status="PASS" starttime="20200622 15:15:32.874" endtime="20200622 15:15:32.881"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:15:32.885" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:15:32.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:15:32.899" level="INFO">${output} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200622 15:15:32.882" endtime="20200622 15:15:32.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:15:32.900" level="INFO">* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host recon left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200622 15:15:32.899" endtime="20200622 15:15:32.900"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:15:32.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:15:32.900" endtime="20200622 15:15:32.901"></status>
</kw>
<msg timestamp="20200622 15:15:32.901" level="INFO">${result} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200622 15:15:32.882" endtime="20200622 15:15:32.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200622 15:15:32.901" endtime="20200622 15:15:32.901"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:15:32.905" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:15:32.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:15:32.906" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200622 15:15:32.902" endtime="20200622 15:15:32.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:15:32.907" level="INFO">scm</msg>
<status status="PASS" starttime="20200622 15:15:32.907" endtime="20200622 15:15:32.907"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:15:32.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:15:32.907" endtime="20200622 15:15:32.908"></status>
</kw>
<msg timestamp="20200622 15:15:32.908" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200622 15:15:32.902" endtime="20200622 15:15:32.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200622 15:15:32.909" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200622 15:15:32.908" endtime="20200622 15:15:32.909"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:15:32.911" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:15:32.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:15:32.920" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 15:15:32.910" endtime="20200622 15:15:32.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:15:32.921" level="INFO"></msg>
<status status="PASS" starttime="20200622 15:15:32.921" endtime="20200622 15:15:32.921"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:15:32.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:15:32.921" endtime="20200622 15:15:32.922"></status>
</kw>
<status status="PASS" starttime="20200622 15:15:32.909" endtime="20200622 15:15:32.922"></status>
</kw>
<status status="PASS" starttime="20200622 15:15:32.909" endtime="20200622 15:15:32.922"></status>
</kw>
<status status="PASS" starttime="20200622 15:15:32.902" endtime="20200622 15:15:32.922"></status>
</kw>
<status status="PASS" starttime="20200622 15:15:32.901" endtime="20200622 15:15:32.922"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:15:32.924" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:15:32.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:15:32.950" level="INFO">${output} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200622 15:15:32.923" endtime="20200622 15:15:32.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:15:32.951" level="INFO">* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host recon left intact
* Issue another request to this URL: 'http://recon:9888/'
* Found bundle for host recon: 0x205bf20
* Re-using existing connection! (#0) with host recon
* Connected to recon (172.26.0.9) port 9888 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWwYJKoZIhvcSAQICAQBuggJKMIICRqADAgEFoQMCAQ6iBwMFACAAAACjggFWYYIBUjCCAU6gAwIBBaENGwtFWEFNUExFLkNPTaIYMBagAwIBA6EPMA0bBEhUVFAbBXJlY29uo4IBHDCCARigAwIBEqEDAgECooIBCgSCAQaDVbRmiryJtpI1x0yAEA6FdZD4XN9dOEx3D0peAyVsaTZRic4pZ2Fm2lAbVLoIC7p95S2gT2R4B7fznwdoi7soS7pV/FpKq/47nvHjAcFGQNncT/7f5GZZo+5e3Ci3Po42/aMo9qulgU7QqGgyKSiOT/j7oh9shY+/fie7d/OcY+kzUJATkxYe1dPqvdF12elDPyW6ixqQpl3q/bXXcUrJu6ywzx/HvbYlhl2dZzllBeJg/fC1/z4U89QclMVhEcLoBTHB82mgnVHe5YUebgQ8voOBFq1FTPINlTsGLYp3OQG1ocC8s5L3D+NUHmLSLKNBGQlad5XSAYzxruaHUVHAQ2sMOVYPpIHWMIHToAMCARKigcsEgcg6QjJb2YWPRtLmNkOoDVfE/F8IXJQZ0zJOPeVTXmRRHv1VDj25+Ske/7FLIMbkKqnGW8FZpyNtUAGW4yWvl74VCbiMLy8dLZ6rW6gCnOkVQqWHvwj/vgqbjeY2dcm+/2uFMhSQGFyA9zukQSk6rGAyj8xNMo9rPbbMwloOkeODfmIKgZPVPn0zCm/oVVZ5DMvRQ3fDqJV2hGsYvig9mjnMspdcXAlkK8P15//gQXF74v72brZbi/7Il59dHtSikYDD/NkqPquMGw==
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Mon, 22 Jun 2020 15:15:32 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Mon, 22 Jun 2020 15:15:32 GMT
&lt; Date: Mon, 22 Jun 2020 15:15:32 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Mon, 22 Jun 2020 15:15:32 GMT
&lt; Date: Mon, 22 Jun 2020 15:15:32 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCaEJrYypE70hXqQNaAYlLLEma0hB1SP/yw3sF/l/KCE6hjy94gW/2UPNqIKvi1gIRzYPRGnHx8cbfCHvIqSK7gBCl
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1592874932944&amp;s=b2RzEiXrAHO9NzB/GVj1v7+iRKuJMyE9+RGsOpSMEAo="; Path=/; HttpOnly
&lt; Last-Modified: Mon, 22 Jun 2020 14:12:20 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2267
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Mon, 22 Jun 2020 15:15:32 GMT
Cache-Control: no-cache
Expires: Mon, 22 Jun 2020 15:15:32 GMT
Date: Mon, 22 Jun 2020 15:15:32 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Mon, 22 Jun 2020 15:15:32 GMT
Date: Mon, 22 Jun 2020 15:15:32 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCaEJrYypE70hXqQNaAYlLLEma0hB1SP/yw3sF/l/KCE6hjy94gW/2UPNqIKvi1gIRzYPRGnHx8cbfCHvIqSK7gBCl
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1592874932944&amp;s=b2RzEiXrAHO9NzB/GVj1v7+iRKuJMyE9+RGsOpSMEAo="; Path=/; HttpOnly
Last-Modified: Mon, 22 Jun 2020 14:12:20 GMT
Accept-Ranges: bytes
Content-Length: 2267
</msg>
<status status="PASS" starttime="20200622 15:15:32.951" endtime="20200622 15:15:32.951"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:15:32.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:15:32.951" endtime="20200622 15:15:32.952"></status>
</kw>
<msg timestamp="20200622 15:15:32.952" level="INFO">${result} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200622 15:15:32.922" endtime="20200622 15:15:32.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200622 15:15:32.952" endtime="20200622 15:15:32.953"></status>
</kw>
<status status="PASS" starttime="20200622 15:15:32.873" endtime="20200622 15:15:32.953"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200622 15:15:32.872" endtime="20200622 15:15:32.953" critical="yes"></status>
</test>
<doc>Smoke test for spnego with docker-compose environments.</doc>
<status status="PASS" starttime="20200622 15:15:24.788" endtime="20200622 15:15:32.954"></status>
</suite>
<status status="PASS" starttime="20200622 15:15:24.763" endtime="20200622 15:15:32.956"></status>
</suite>
<statistics>
<total>
<stat pass="6" fail="0">Critical Tests</stat>
<stat pass="6" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="6" fail="0" id="s1" name="ozonesecure-spnego">ozonesecure-spnego</stat>
<stat pass="6" fail="0" id="s1-s1" name="Web">ozonesecure-spnego.Web</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
