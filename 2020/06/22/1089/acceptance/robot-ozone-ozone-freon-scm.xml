<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200622 14:47:43.643" rpa="false">
<suite id="s1" name="ozone-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:47:43.694" level="INFO">Running command 'ozone freon rk  --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:47:50.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:47:50.857" level="INFO">${output} = 2020-06-22 14:47:44,566 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-22 14:47:44,721 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200622 14:47:43.689" endtime="20200622 14:47:50.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:47:50.858" level="INFO">2020-06-22 14:47:44,566 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-22 14:47:44,721 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-22 14:47:44,722 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-22 14:47:45,381 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-06-22 14:47:45,382 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-06-22 14:47:45,382 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-06-22 14:47:45,382 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-06-22 14:47:45,382 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-06-22 14:47:45,382 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-22 14:47:45,382 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-06-22 14:47:45,396 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-22 14:47:45,401 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-22 14:47:45,427 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-02922, with hadoop as owner.
2020-06-22 14:47:45,448 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-02922/bucket-0-29887, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-22 14:47:45,907 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-22 14:47:46,402 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,044
Average Time spent in bucket creation: 00:00:00,009
Average Time spent in key creation: 00:00:00,042
Average Time spent in key write: 00:00:00,560
Total bytes written: 10240
Total Execution time: 00:00:05,616
***************************************************</msg>
<status status="PASS" starttime="20200622 14:47:50.858" endtime="20200622 14:47:50.858"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:47:50.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:47:50.859" endtime="20200622 14:47:50.859"></status>
</kw>
<msg timestamp="20200622 14:47:50.859" level="INFO">${result} = 2020-06-22 14:47:44,566 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-22 14:47:44,721 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200622 14:47:43.688" endtime="20200622 14:47:50.859"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200622 14:47:50.860" endtime="20200622 14:47:50.860"></status>
</kw>
<status status="PASS" starttime="20200622 14:47:50.859" endtime="20200622 14:47:50.860"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200622 14:47:43.687" endtime="20200622 14:47:50.860" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:47:50.865" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:47:55.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:47:55.127" level="INFO">${output} = 2020-06-22 14:47:51,752 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-22 14:47:51,876 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200622 14:47:50.862" endtime="20200622 14:47:55.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:47:55.128" level="INFO">2020-06-22 14:47:51,752 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-22 14:47:51,876 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-22 14:47:51,876 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-22 14:47:52,053 [main] INFO freon.BaseFreonGenerator: Executing test with prefix i0i8f0e7ul
2020-06-22 14:47:52,072 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-22 14:47:52,639 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-06-22 14:47:52,654 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-22 14:47:53,085 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-22 14:47:53,113 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-22 14:47:54,085 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-22 14:47:54,803 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=1153.777242, max=1153.777242, mean=1153.777242, stddev=0.0, median=1153.777242, p75=1153.777242, p95=1153.777242, p98=1153.777242, p99=1153.777242, p999=1153.777242, mean_rate=0.4687709079881963, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-22 14:47:54,804 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-06-22 14:47:54,804 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-22 14:47:54,804 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200622 14:47:55.128" endtime="20200622 14:47:55.129"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:47:55.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:47:55.129" endtime="20200622 14:47:55.129"></status>
</kw>
<msg timestamp="20200622 14:47:55.129" level="INFO">${result} = 2020-06-22 14:47:51,752 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-22 14:47:51,876 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200622 14:47:50.861" endtime="20200622 14:47:55.129"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200622 14:47:55.130" endtime="20200622 14:47:55.130"></status>
</kw>
<status status="PASS" starttime="20200622 14:47:55.129" endtime="20200622 14:47:55.130"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200622 14:47:50.861" endtime="20200622 14:47:55.130" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:47:55.135" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:47:58.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:47:58.007" level="INFO">${output} = 2020-06-22 14:47:56,011 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-22 14:47:56,173 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200622 14:47:55.132" endtime="20200622 14:47:58.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:47:58.008" level="INFO">2020-06-22 14:47:56,011 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-22 14:47:56,173 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-22 14:47:56,173 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-22 14:47:56,326 [main] INFO freon.BaseFreonGenerator: Executing test with prefix lxruhj3khz
2020-06-22 14:47:56,351 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-22 14:47:57,355 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-22 14:47:57,997 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=28.118473, max=28.118473, mean=28.118473, stddev=0.0, median=28.118473, p75=28.118473, p95=28.118473, p98=28.118473, p99=28.118473, p999=28.118473, mean_rate=0.9008063251636682, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-22 14:47:57,999 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-06-22 14:47:57,999 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-22 14:47:57,999 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200622 14:47:58.007" endtime="20200622 14:47:58.008"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:47:58.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:47:58.008" endtime="20200622 14:47:58.009"></status>
</kw>
<msg timestamp="20200622 14:47:58.009" level="INFO">${result} = 2020-06-22 14:47:56,011 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-22 14:47:56,173 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200622 14:47:55.132" endtime="20200622 14:47:58.009"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200622 14:47:58.010" endtime="20200622 14:47:58.010"></status>
</kw>
<status status="PASS" starttime="20200622 14:47:58.010" endtime="20200622 14:47:58.010"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200622 14:47:55.131" endtime="20200622 14:47:58.011" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:47:58.015" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:48:00.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:48:00.890" level="INFO">${output} = 2020-06-22 14:47:58,882 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-22 14:47:59,005 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200622 14:47:58.012" endtime="20200622 14:48:00.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:48:00.891" level="INFO">2020-06-22 14:47:58,882 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-22 14:47:59,005 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-22 14:47:59,005 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-22 14:47:59,199 [main] INFO freon.BaseFreonGenerator: Executing test with prefix irz2p4kxv8
2020-06-22 14:47:59,223 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-22 14:48:00,234 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-22 14:48:00,881 [Thread-2] INFO metrics: type=TIMER, name=bucket-create, count=1, min=5.607854, max=5.607854, mean=5.607854, stddev=0.0, median=5.607854, p75=5.607854, p95=5.607854, p98=5.607854, p99=5.607854, p999=5.607854, mean_rate=0.901832174239553, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-22 14:48:00,881 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-06-22 14:48:00,882 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-22 14:48:00,882 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200622 14:48:00.890" endtime="20200622 14:48:00.891"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:48:00.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:48:00.891" endtime="20200622 14:48:00.892"></status>
</kw>
<msg timestamp="20200622 14:48:00.892" level="INFO">${result} = 2020-06-22 14:47:58,882 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-22 14:47:59,005 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200622 14:47:58.012" endtime="20200622 14:48:00.892"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200622 14:48:00.893" endtime="20200622 14:48:00.893"></status>
</kw>
<status status="PASS" starttime="20200622 14:48:00.892" endtime="20200622 14:48:00.893"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200622 14:47:58.011" endtime="20200622 14:48:00.893" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200622 14:47:43.667" endtime="20200622 14:48:00.895"></status>
</suite>
<status status="PASS" starttime="20200622 14:47:43.644" endtime="20200622 14:48:00.897"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-freon">ozone-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
