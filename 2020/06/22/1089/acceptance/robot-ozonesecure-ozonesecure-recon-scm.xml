<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200622 15:14:10.215" rpa="false">
<suite id="s1" name="ozonesecure-recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s1-t1" name="Generate Freon data">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:14:10.266" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:14:10.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:14:10.268" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200622 15:14:10.262" endtime="20200622 15:14:10.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:14:10.269" level="INFO">scm</msg>
<status status="PASS" starttime="20200622 15:14:10.269" endtime="20200622 15:14:10.269"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:14:10.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:14:10.269" endtime="20200622 15:14:10.270"></status>
</kw>
<msg timestamp="20200622 15:14:10.270" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200622 15:14:10.262" endtime="20200622 15:14:10.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200622 15:14:10.271" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200622 15:14:10.270" endtime="20200622 15:14:10.272"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:14:10.274" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:14:10.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:14:10.285" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 15:14:10.272" endtime="20200622 15:14:10.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:14:10.286" level="INFO"></msg>
<status status="PASS" starttime="20200622 15:14:10.285" endtime="20200622 15:14:10.286"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:14:10.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:14:10.286" endtime="20200622 15:14:10.287"></status>
</kw>
<status status="PASS" starttime="20200622 15:14:10.272" endtime="20200622 15:14:10.287"></status>
</kw>
<status status="PASS" starttime="20200622 15:14:10.272" endtime="20200622 15:14:10.287"></status>
</kw>
<status status="PASS" starttime="20200622 15:14:10.261" endtime="20200622 15:14:10.287"></status>
</kw>
<status status="PASS" starttime="20200622 15:14:10.261" endtime="20200622 15:14:10.287"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:14:10.289" level="INFO">Running command 'ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:14:17.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:14:17.897" level="INFO">${output} = 2020-06-22 15:14:11,150 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-22 15:14:11,282 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200622 15:14:10.287" endtime="20200622 15:14:17.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:14:17.898" level="INFO">2020-06-22 15:14:11,150 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-22 15:14:11,282 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-22 15:14:11,282 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-06-22 15:14:12,425 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2020-06-22 15:14:12,427 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-06-22 15:14:12,427 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-06-22 15:14:12,427 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 10.
2020-06-22 15:14:12,427 [main] INFO freon.RandomKeyGenerator: Key size: 1025 bytes
2020-06-22 15:14:12,427 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-22 15:14:12,427 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-06-22 15:14:12,439 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-22 15:14:12,458 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2020-06-22 15:14:12,476 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-52120, with testuser/scm@EXAMPLE.COM as owner.
2020-06-22 15:14:12,500 [pool-2-thread-2] INFO rpc.RpcClient: Creating Bucket: vol-0-52120/bucket-0-22488, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-22 15:14:12,934 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-22 15:14:13,459 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 10
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,003
Average Time spent in bucket creation: 00:00:00,001
Average Time spent in key creation: 00:00:00,075
Average Time spent in key write: 00:00:00,468
Total bytes written: 10250
Total Execution time: 00:00:06,135
***************************************************</msg>
<status status="PASS" starttime="20200622 15:14:17.897" endtime="20200622 15:14:17.898"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:14:17.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:14:17.898" endtime="20200622 15:14:17.898"></status>
</kw>
<status status="PASS" starttime="20200622 15:14:10.287" endtime="20200622 15:14:17.899"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200622 15:14:10.260" endtime="20200622 15:14:17.899" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Check if Recon picks up OM data">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
</arguments>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:14:17.904" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:14:17.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:14:17.906" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200622 15:14:17.902" endtime="20200622 15:14:17.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:14:17.907" level="INFO">scm</msg>
<status status="PASS" starttime="20200622 15:14:17.907" endtime="20200622 15:14:17.907"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:14:17.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:14:17.907" endtime="20200622 15:14:17.908"></status>
</kw>
<msg timestamp="20200622 15:14:17.908" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200622 15:14:17.901" endtime="20200622 15:14:17.908"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:14:17.911" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:14:17.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:14:17.920" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 15:14:17.909" endtime="20200622 15:14:17.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:14:17.921" level="INFO"></msg>
<status status="PASS" starttime="20200622 15:14:17.921" endtime="20200622 15:14:17.921"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:14:17.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:14:17.922" endtime="20200622 15:14:17.922"></status>
</kw>
<status status="PASS" starttime="20200622 15:14:17.908" endtime="20200622 15:14:17.922"></status>
</kw>
<status status="PASS" starttime="20200622 15:14:17.908" endtime="20200622 15:14:17.922"></status>
</kw>
<status status="PASS" starttime="20200622 15:14:17.901" endtime="20200622 15:14:17.922"></status>
</kw>
<status status="PASS" starttime="20200622 15:14:17.901" endtime="20200622 15:14:17.922"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:14:17.926" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:14:18.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:14:18.109" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200622 15:14:17.923" endtime="20200622 15:14:18.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:14:18.110" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Mon, 22 Jun 2020 15:14:17 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Mon, 22 Jun 2020 15:14:17 GMT
&lt; Date: Mon, 22 Jun 2020 15:14:17 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0    431      0 --:--:-- --:--:-- --:--:--   432
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":146}]}}</msg>
<status status="PASS" starttime="20200622 15:14:18.109" endtime="20200622 15:14:18.110"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:14:18.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:14:18.110" endtime="20200622 15:14:18.111"></status>
</kw>
<msg timestamp="20200622 15:14:18.111" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200622 15:14:17.923" endtime="20200622 15:14:18.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200622 15:14:18.111" endtime="20200622 15:14:18.112"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:14:18.114" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:14:18.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:14:18.140" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200622 15:14:18.112" endtime="20200622 15:14:18.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:14:18.141" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Mon, 22 Jun 2020 15:14:18 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Mon, 22 Jun 2020 15:14:18 GMT
&lt; Date: Mon, 22 Jun 2020 15:14:18 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3137
&lt; 
{ [data not shown]

100  3137  100  3137    0     0   152k      0 --:--:-- --:--:-- --:--:--  153k
* Connection #0 to host recon left intact
[{"volume":"vol-0-92276","bucket":"bucket-1-87208","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-1-56656","fileSize":16384,"count":5},{"volume":"vol-0-92276","bucket":"bucket-3-53762","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-2-84977","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-3-98819","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-4-17928","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-1-04722","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-4-62840","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-3-00222","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-1-63673","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-4-17565","fileSize":16384,"count":5},{"volume":"vol-0-92276","bucket":"bucket-2-00957","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-3-68814","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-4-86527","fileSize":16384,"count":5},{"volume":"vol-0-92276","bucket":"bucket-4-86718","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-2-31758","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-0-04883","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-0-69918","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-0-76520","fileSize":16384,"count":5},{"volume":"vol-0-92276","bucket":"bucket-0-62292","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-2-31624","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-2-53980","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-0-78726","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-3-14877","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-1-67836","fileSize":16384,"count":5},{"volume":"02560-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"02560-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"02560-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"02560-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest395","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket2-o3fs","fileSize":1024,"count":0},{"volume":"s3v","bucket":"bucket-24735","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-72557","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-84841","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-17308","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-72557","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-51131","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-07185","fileSize":1024,"count":2}]</msg>
<status status="PASS" starttime="20200622 15:14:18.140" endtime="20200622 15:14:18.141"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:14:18.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:14:18.141" endtime="20200622 15:14:18.141"></status>
</kw>
<msg timestamp="20200622 15:14:18.142" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200622 15:14:18.112" endtime="20200622 15:14:18.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200622 15:14:18.143" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Mon, 22 Jun 2020 15:14:18 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Mon, 22 Jun 2020 15:14:18 GMT
&lt; Date: Mon, 22 Jun 2020 15:14:18 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3137
&lt; 
{ [data not shown]

100  3137  100  3137    0     0   152k      0 --:--:-- --:--:-- --:--:--  153k
* Connection #0 to host recon left intact
[{"volume":"vol-0-92276","bucket":"bucket-1-87208","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-1-56656","fileSize":16384,"count":5},{"volume":"vol-0-92276","bucket":"bucket-3-53762","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-2-84977","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-3-98819","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-4-17928","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-1-04722","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-4-62840","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-3-00222","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-1-63673","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-4-17565","fileSize":16384,"count":5},{"volume":"vol-0-92276","bucket":"bucket-2-00957","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-3-68814","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-4-86527","fileSize":16384,"count":5},{"volume":"vol-0-92276","bucket":"bucket-4-86718","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-2-31758","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-0-04883","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-0-69918","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-0-76520","fileSize":16384,"count":5},{"volume":"vol-0-92276","bucket":"bucket-0-62292","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-2-31624","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-2-53980","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-0-78726","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-3-14877","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-1-67836","fileSize":16384,"count":5},{"volume":"02560-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"02560-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"02560-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"02560-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest395","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket2-o3fs","fileSize":1024,"count":0},{"volume":"s3v","bucket":"bucket-24735","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-72557","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-84841","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-17308","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-72557","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-51131","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-07185","fileSize":1024,"count":2}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200622 15:14:18.142" endtime="20200622 15:14:18.143"></status>
</kw>
<status status="FAIL" starttime="20200622 15:14:17.900" endtime="20200622 15:14:18.143"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:14:28.148" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:14:28.151" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:14:28.151" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200622 15:14:28.146" endtime="20200622 15:14:28.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:14:28.152" level="INFO">scm</msg>
<status status="PASS" starttime="20200622 15:14:28.151" endtime="20200622 15:14:28.152"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:14:28.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:14:28.152" endtime="20200622 15:14:28.152"></status>
</kw>
<msg timestamp="20200622 15:14:28.153" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200622 15:14:28.145" endtime="20200622 15:14:28.153"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:14:28.156" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:14:28.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:14:28.197" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 15:14:28.153" endtime="20200622 15:14:28.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:14:28.198" level="INFO"></msg>
<status status="PASS" starttime="20200622 15:14:28.198" endtime="20200622 15:14:28.198"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:14:28.199" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:14:28.199" endtime="20200622 15:14:28.199"></status>
</kw>
<status status="PASS" starttime="20200622 15:14:28.153" endtime="20200622 15:14:28.199"></status>
</kw>
<status status="PASS" starttime="20200622 15:14:28.153" endtime="20200622 15:14:28.199"></status>
</kw>
<status status="PASS" starttime="20200622 15:14:28.145" endtime="20200622 15:14:28.200"></status>
</kw>
<status status="PASS" starttime="20200622 15:14:28.144" endtime="20200622 15:14:28.200"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:14:28.203" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:14:28.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:14:28.220" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200622 15:14:28.200" endtime="20200622 15:14:28.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:14:28.221" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Mon, 22 Jun 2020 15:14:28 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Mon, 22 Jun 2020 15:14:28 GMT
&lt; Date: Mon, 22 Jun 2020 15:14:28 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0   7909      0 --:--:-- --:--:-- --:--:--  8555
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":146}]}}</msg>
<status status="PASS" starttime="20200622 15:14:28.221" endtime="20200622 15:14:28.221"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:14:28.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:14:28.222" endtime="20200622 15:14:28.222"></status>
</kw>
<msg timestamp="20200622 15:14:28.222" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200622 15:14:28.200" endtime="20200622 15:14:28.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200622 15:14:28.223" endtime="20200622 15:14:28.223"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:14:28.227" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:14:28.246" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:14:28.246" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200622 15:14:28.224" endtime="20200622 15:14:28.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:14:28.247" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Mon, 22 Jun 2020 15:14:28 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Mon, 22 Jun 2020 15:14:28 GMT
&lt; Date: Mon, 22 Jun 2020 15:14:28 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3137
&lt; 
{ [data not shown]

100  3137  100  3137    0     0   292k      0 --:--:-- --:--:-- --:--:--  306k
* Connection #0 to host recon left intact
[{"volume":"vol-0-92276","bucket":"bucket-1-87208","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-1-56656","fileSize":16384,"count":5},{"volume":"vol-0-92276","bucket":"bucket-3-53762","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-2-84977","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-3-98819","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-4-17928","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-1-04722","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-4-62840","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-3-00222","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-1-63673","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-4-17565","fileSize":16384,"count":5},{"volume":"vol-0-92276","bucket":"bucket-2-00957","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-3-68814","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-4-86527","fileSize":16384,"count":5},{"volume":"vol-0-92276","bucket":"bucket-4-86718","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-2-31758","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-0-04883","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-0-69918","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-0-76520","fileSize":16384,"count":5},{"volume":"vol-0-92276","bucket":"bucket-0-62292","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-2-31624","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-2-53980","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-0-78726","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-3-14877","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-1-67836","fileSize":16384,"count":5},{"volume":"02560-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"02560-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"02560-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"02560-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest395","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket2-o3fs","fileSize":1024,"count":0},{"volume":"s3v","bucket":"bucket-24735","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-72557","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-84841","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-17308","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-72557","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-51131","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-07185","fileSize":1024,"count":2}]</msg>
<status status="PASS" starttime="20200622 15:14:28.246" endtime="20200622 15:14:28.247"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:14:28.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:14:28.247" endtime="20200622 15:14:28.247"></status>
</kw>
<msg timestamp="20200622 15:14:28.248" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200622 15:14:28.223" endtime="20200622 15:14:28.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200622 15:14:28.248" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Mon, 22 Jun 2020 15:14:28 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Mon, 22 Jun 2020 15:14:28 GMT
&lt; Date: Mon, 22 Jun 2020 15:14:28 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3137
&lt; 
{ [data not shown]

100  3137  100  3137    0     0   292k      0 --:--:-- --:--:-- --:--:--  306k
* Connection #0 to host recon left intact
[{"volume":"vol-0-92276","bucket":"bucket-1-87208","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-1-56656","fileSize":16384,"count":5},{"volume":"vol-0-92276","bucket":"bucket-3-53762","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-2-84977","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-3-98819","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-4-17928","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-1-04722","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-4-62840","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-3-00222","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-1-63673","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-4-17565","fileSize":16384,"count":5},{"volume":"vol-0-92276","bucket":"bucket-2-00957","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-3-68814","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-4-86527","fileSize":16384,"count":5},{"volume":"vol-0-92276","bucket":"bucket-4-86718","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-2-31758","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-0-04883","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-0-69918","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-0-76520","fileSize":16384,"count":5},{"volume":"vol-0-92276","bucket":"bucket-0-62292","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-2-31624","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-2-53980","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-0-78726","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-3-14877","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-1-67836","fileSize":16384,"count":5},{"volume":"02560-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"02560-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"02560-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"02560-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest395","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket2-o3fs","fileSize":1024,"count":0},{"volume":"s3v","bucket":"bucket-24735","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-72557","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-84841","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-17308","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-72557","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-51131","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-07185","fileSize":1024,"count":2}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200622 15:14:28.248" endtime="20200622 15:14:28.249"></status>
</kw>
<status status="FAIL" starttime="20200622 15:14:28.143" endtime="20200622 15:14:28.249"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:14:38.254" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:14:38.256" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:14:38.256" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200622 15:14:38.251" endtime="20200622 15:14:38.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:14:38.257" level="INFO">scm</msg>
<status status="PASS" starttime="20200622 15:14:38.257" endtime="20200622 15:14:38.257"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:14:38.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:14:38.257" endtime="20200622 15:14:38.258"></status>
</kw>
<msg timestamp="20200622 15:14:38.258" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200622 15:14:38.251" endtime="20200622 15:14:38.258"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:14:38.261" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:14:38.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:14:38.272" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 15:14:38.259" endtime="20200622 15:14:38.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:14:38.272" level="INFO"></msg>
<status status="PASS" starttime="20200622 15:14:38.272" endtime="20200622 15:14:38.273"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:14:38.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:14:38.273" endtime="20200622 15:14:38.273"></status>
</kw>
<status status="PASS" starttime="20200622 15:14:38.259" endtime="20200622 15:14:38.273"></status>
</kw>
<status status="PASS" starttime="20200622 15:14:38.259" endtime="20200622 15:14:38.273"></status>
</kw>
<status status="PASS" starttime="20200622 15:14:38.251" endtime="20200622 15:14:38.273"></status>
</kw>
<status status="PASS" starttime="20200622 15:14:38.250" endtime="20200622 15:14:38.273"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:14:38.276" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:14:38.287" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:14:38.287" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200622 15:14:38.274" endtime="20200622 15:14:38.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:14:38.288" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Mon, 22 Jun 2020 15:14:38 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Mon, 22 Jun 2020 15:14:38 GMT
&lt; Date: Mon, 22 Jun 2020 15:14:38 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0  13551      0 --:--:-- --:--:-- --:--:-- 15400
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":146}]}}</msg>
<status status="PASS" starttime="20200622 15:14:38.288" endtime="20200622 15:14:38.288"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:14:38.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:14:38.289" endtime="20200622 15:14:38.289"></status>
</kw>
<msg timestamp="20200622 15:14:38.289" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200622 15:14:38.274" endtime="20200622 15:14:38.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200622 15:14:38.290" endtime="20200622 15:14:38.290"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:14:38.292" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:14:38.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:14:38.306" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200622 15:14:38.291" endtime="20200622 15:14:38.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:14:38.306" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Mon, 22 Jun 2020 15:14:38 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Mon, 22 Jun 2020 15:14:38 GMT
&lt; Date: Mon, 22 Jun 2020 15:14:38 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3137
&lt; 
{ [data not shown]

100  3137  100  3137    0     0   463k      0 --:--:-- --:--:-- --:--:--  510k
* Connection #0 to host recon left intact
[{"volume":"vol-0-92276","bucket":"bucket-1-87208","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-1-56656","fileSize":16384,"count":5},{"volume":"vol-0-92276","bucket":"bucket-3-53762","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-2-84977","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-3-98819","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-4-17928","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-1-04722","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-4-62840","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-3-00222","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-1-63673","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-4-17565","fileSize":16384,"count":5},{"volume":"vol-0-92276","bucket":"bucket-2-00957","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-3-68814","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-4-86527","fileSize":16384,"count":5},{"volume":"vol-0-92276","bucket":"bucket-4-86718","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-2-31758","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-0-04883","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-0-69918","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-0-76520","fileSize":16384,"count":5},{"volume":"vol-0-92276","bucket":"bucket-0-62292","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-2-31624","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-2-53980","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-0-78726","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-3-14877","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-1-67836","fileSize":16384,"count":5},{"volume":"02560-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"02560-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"02560-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"02560-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest395","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket2-o3fs","fileSize":1024,"count":0},{"volume":"s3v","bucket":"bucket-24735","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-72557","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-84841","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-17308","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-72557","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-51131","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-07185","fileSize":1024,"count":2}]</msg>
<status status="PASS" starttime="20200622 15:14:38.306" endtime="20200622 15:14:38.307"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:14:38.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:14:38.307" endtime="20200622 15:14:38.307"></status>
</kw>
<msg timestamp="20200622 15:14:38.307" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200622 15:14:38.290" endtime="20200622 15:14:38.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200622 15:14:38.308" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Mon, 22 Jun 2020 15:14:38 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Mon, 22 Jun 2020 15:14:38 GMT
&lt; Date: Mon, 22 Jun 2020 15:14:38 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3137
&lt; 
{ [data not shown]

100  3137  100  3137    0     0   463k      0 --:--:-- --:--:-- --:--:--  510k
* Connection #0 to host recon left intact
[{"volume":"vol-0-92276","bucket":"bucket-1-87208","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-1-56656","fileSize":16384,"count":5},{"volume":"vol-0-92276","bucket":"bucket-3-53762","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-2-84977","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-3-98819","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-4-17928","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-1-04722","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-4-62840","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-3-00222","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-1-63673","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-4-17565","fileSize":16384,"count":5},{"volume":"vol-0-92276","bucket":"bucket-2-00957","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-3-68814","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-4-86527","fileSize":16384,"count":5},{"volume":"vol-0-92276","bucket":"bucket-4-86718","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-2-31758","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-0-04883","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-0-69918","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-0-76520","fileSize":16384,"count":5},{"volume":"vol-0-92276","bucket":"bucket-0-62292","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-2-31624","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-2-53980","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-0-78726","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-3-14877","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-1-67836","fileSize":16384,"count":5},{"volume":"02560-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"02560-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"02560-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"02560-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest395","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket2-o3fs","fileSize":1024,"count":0},{"volume":"s3v","bucket":"bucket-24735","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-72557","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-84841","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-17308","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-72557","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-51131","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-07185","fileSize":1024,"count":2}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200622 15:14:38.307" endtime="20200622 15:14:38.308"></status>
</kw>
<status status="FAIL" starttime="20200622 15:14:38.249" endtime="20200622 15:14:38.308"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:14:48.314" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:14:48.316" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:14:48.316" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200622 15:14:48.311" endtime="20200622 15:14:48.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:14:48.317" level="INFO">scm</msg>
<status status="PASS" starttime="20200622 15:14:48.316" endtime="20200622 15:14:48.317"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:14:48.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:14:48.317" endtime="20200622 15:14:48.317"></status>
</kw>
<msg timestamp="20200622 15:14:48.318" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200622 15:14:48.311" endtime="20200622 15:14:48.318"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:14:48.321" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:14:48.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:14:48.330" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 15:14:48.319" endtime="20200622 15:14:48.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:14:48.331" level="INFO"></msg>
<status status="PASS" starttime="20200622 15:14:48.331" endtime="20200622 15:14:48.331"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:14:48.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:14:48.331" endtime="20200622 15:14:48.332"></status>
</kw>
<status status="PASS" starttime="20200622 15:14:48.318" endtime="20200622 15:14:48.332"></status>
</kw>
<status status="PASS" starttime="20200622 15:14:48.318" endtime="20200622 15:14:48.332"></status>
</kw>
<status status="PASS" starttime="20200622 15:14:48.310" endtime="20200622 15:14:48.332"></status>
</kw>
<status status="PASS" starttime="20200622 15:14:48.310" endtime="20200622 15:14:48.332"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:14:48.334" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:14:48.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:14:48.349" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200622 15:14:48.333" endtime="20200622 15:14:48.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:14:48.350" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Mon, 22 Jun 2020 15:14:48 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Mon, 22 Jun 2020 15:14:48 GMT
&lt; Date: Mon, 22 Jun 2020 15:14:48 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0   8911      0 --:--:-- --:--:-- --:--:--  9625
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":146}]}}</msg>
<status status="PASS" starttime="20200622 15:14:48.349" endtime="20200622 15:14:48.350"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:14:48.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:14:48.350" endtime="20200622 15:14:48.351"></status>
</kw>
<msg timestamp="20200622 15:14:48.351" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200622 15:14:48.332" endtime="20200622 15:14:48.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200622 15:14:48.351" endtime="20200622 15:14:48.352"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:14:48.354" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:14:48.366" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:14:48.366" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200622 15:14:48.352" endtime="20200622 15:14:48.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:14:48.367" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Mon, 22 Jun 2020 15:14:48 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Mon, 22 Jun 2020 15:14:48 GMT
&lt; Date: Mon, 22 Jun 2020 15:14:48 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3137
&lt; 
{ [data not shown]

100  3137  100  3137    0     0   464k      0 --:--:-- --:--:-- --:--:--  510k
* Connection #0 to host recon left intact
[{"volume":"vol-0-92276","bucket":"bucket-1-87208","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-1-56656","fileSize":16384,"count":5},{"volume":"vol-0-92276","bucket":"bucket-3-53762","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-2-84977","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-3-98819","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-4-17928","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-1-04722","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-4-62840","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-3-00222","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-1-63673","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-4-17565","fileSize":16384,"count":5},{"volume":"vol-0-92276","bucket":"bucket-2-00957","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-3-68814","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-4-86527","fileSize":16384,"count":5},{"volume":"vol-0-92276","bucket":"bucket-4-86718","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-2-31758","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-0-04883","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-0-69918","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-0-76520","fileSize":16384,"count":5},{"volume":"vol-0-92276","bucket":"bucket-0-62292","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-2-31624","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-2-53980","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-0-78726","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-3-14877","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-1-67836","fileSize":16384,"count":5},{"volume":"02560-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"02560-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"02560-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"02560-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest395","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket2-o3fs","fileSize":1024,"count":0},{"volume":"s3v","bucket":"bucket-24735","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-72557","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-84841","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-17308","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-72557","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-51131","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-07185","fileSize":1024,"count":2}]</msg>
<status status="PASS" starttime="20200622 15:14:48.367" endtime="20200622 15:14:48.367"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:14:48.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:14:48.367" endtime="20200622 15:14:48.368"></status>
</kw>
<msg timestamp="20200622 15:14:48.368" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200622 15:14:48.352" endtime="20200622 15:14:48.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200622 15:14:48.369" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Mon, 22 Jun 2020 15:14:48 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Mon, 22 Jun 2020 15:14:48 GMT
&lt; Date: Mon, 22 Jun 2020 15:14:48 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3137
&lt; 
{ [data not shown]

100  3137  100  3137    0     0   464k      0 --:--:-- --:--:-- --:--:--  510k
* Connection #0 to host recon left intact
[{"volume":"vol-0-92276","bucket":"bucket-1-87208","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-1-56656","fileSize":16384,"count":5},{"volume":"vol-0-92276","bucket":"bucket-3-53762","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-2-84977","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-3-98819","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-4-17928","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-1-04722","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-4-62840","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-3-00222","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-1-63673","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-4-17565","fileSize":16384,"count":5},{"volume":"vol-0-92276","bucket":"bucket-2-00957","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-3-68814","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-4-86527","fileSize":16384,"count":5},{"volume":"vol-0-92276","bucket":"bucket-4-86718","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-2-31758","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-0-04883","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-0-69918","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-0-76520","fileSize":16384,"count":5},{"volume":"vol-0-92276","bucket":"bucket-0-62292","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-2-31624","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-2-53980","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-0-78726","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-3-14877","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-1-67836","fileSize":16384,"count":5},{"volume":"02560-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"02560-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"02560-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"02560-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest395","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket2-o3fs","fileSize":1024,"count":0},{"volume":"s3v","bucket":"bucket-24735","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-72557","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-84841","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-17308","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-72557","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-51131","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-07185","fileSize":1024,"count":2}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200622 15:14:48.368" endtime="20200622 15:14:48.369"></status>
</kw>
<status status="FAIL" starttime="20200622 15:14:48.309" endtime="20200622 15:14:48.369"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:14:58.374" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:14:58.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:14:58.377" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200622 15:14:58.372" endtime="20200622 15:14:58.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:14:58.378" level="INFO">scm</msg>
<status status="PASS" starttime="20200622 15:14:58.377" endtime="20200622 15:14:58.378"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:14:58.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:14:58.378" endtime="20200622 15:14:58.378"></status>
</kw>
<msg timestamp="20200622 15:14:58.378" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200622 15:14:58.371" endtime="20200622 15:14:58.379"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:14:58.381" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:14:58.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:14:58.392" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 15:14:58.379" endtime="20200622 15:14:58.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:14:58.393" level="INFO"></msg>
<status status="PASS" starttime="20200622 15:14:58.392" endtime="20200622 15:14:58.393"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:14:58.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:14:58.393" endtime="20200622 15:14:58.394"></status>
</kw>
<status status="PASS" starttime="20200622 15:14:58.379" endtime="20200622 15:14:58.394"></status>
</kw>
<status status="PASS" starttime="20200622 15:14:58.379" endtime="20200622 15:14:58.394"></status>
</kw>
<status status="PASS" starttime="20200622 15:14:58.371" endtime="20200622 15:14:58.394"></status>
</kw>
<status status="PASS" starttime="20200622 15:14:58.370" endtime="20200622 15:14:58.394"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:14:58.397" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:14:58.411" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:14:58.411" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200622 15:14:58.395" endtime="20200622 15:14:58.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:14:58.412" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Mon, 22 Jun 2020 15:14:58 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Mon, 22 Jun 2020 15:14:58 GMT
&lt; Date: Mon, 22 Jun 2020 15:14:58 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0   8535      0 --:--:-- --:--:-- --:--:--  9625
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":146}]}}</msg>
<status status="PASS" starttime="20200622 15:14:58.411" endtime="20200622 15:14:58.412"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:14:58.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:14:58.412" endtime="20200622 15:14:58.412"></status>
</kw>
<msg timestamp="20200622 15:14:58.412" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200622 15:14:58.394" endtime="20200622 15:14:58.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200622 15:14:58.413" endtime="20200622 15:14:58.413"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:14:58.417" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:14:58.434" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:14:58.434" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200622 15:14:58.414" endtime="20200622 15:14:58.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:14:58.435" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Mon, 22 Jun 2020 15:14:58 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Mon, 22 Jun 2020 15:14:58 GMT
&lt; Date: Mon, 22 Jun 2020 15:14:58 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3137
&lt; 
{ [data not shown]

100  3137  100  3137    0     0   327k      0 --:--:-- --:--:-- --:--:--  340k
* Connection #0 to host recon left intact
[{"volume":"vol-0-92276","bucket":"bucket-1-87208","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-1-56656","fileSize":16384,"count":5},{"volume":"vol-0-92276","bucket":"bucket-3-53762","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-2-84977","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-3-98819","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-4-17928","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-1-04722","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-4-62840","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-3-00222","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-1-63673","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-4-17565","fileSize":16384,"count":5},{"volume":"vol-0-92276","bucket":"bucket-2-00957","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-3-68814","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-4-86527","fileSize":16384,"count":5},{"volume":"vol-0-92276","bucket":"bucket-4-86718","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-2-31758","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-0-04883","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-0-69918","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-0-76520","fileSize":16384,"count":5},{"volume":"vol-0-92276","bucket":"bucket-0-62292","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-2-31624","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-2-53980","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-0-78726","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-3-14877","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-1-67836","fileSize":16384,"count":5},{"volume":"02560-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"02560-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"02560-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"02560-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest395","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket2-o3fs","fileSize":1024,"count":0},{"volume":"s3v","bucket":"bucket-24735","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-72557","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-84841","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-17308","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-72557","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-51131","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-07185","fileSize":1024,"count":2}]</msg>
<status status="PASS" starttime="20200622 15:14:58.434" endtime="20200622 15:14:58.435"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:14:58.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:14:58.435" endtime="20200622 15:14:58.435"></status>
</kw>
<msg timestamp="20200622 15:14:58.436" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200622 15:14:58.413" endtime="20200622 15:14:58.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200622 15:14:58.437" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Mon, 22 Jun 2020 15:14:58 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Mon, 22 Jun 2020 15:14:58 GMT
&lt; Date: Mon, 22 Jun 2020 15:14:58 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3137
&lt; 
{ [data not shown]

100  3137  100  3137    0     0   327k      0 --:--:-- --:--:-- --:--:--  340k
* Connection #0 to host recon left intact
[{"volume":"vol-0-92276","bucket":"bucket-1-87208","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-1-56656","fileSize":16384,"count":5},{"volume":"vol-0-92276","bucket":"bucket-3-53762","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-2-84977","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-3-98819","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-4-17928","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-1-04722","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-4-62840","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-3-00222","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-1-63673","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-4-17565","fileSize":16384,"count":5},{"volume":"vol-0-92276","bucket":"bucket-2-00957","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-3-68814","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-4-86527","fileSize":16384,"count":5},{"volume":"vol-0-92276","bucket":"bucket-4-86718","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-2-31758","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-0-04883","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-0-69918","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-0-76520","fileSize":16384,"count":5},{"volume":"vol-0-92276","bucket":"bucket-0-62292","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-2-31624","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-2-53980","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-0-78726","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-3-14877","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-1-67836","fileSize":16384,"count":5},{"volume":"02560-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"02560-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"02560-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"02560-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest395","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket2-o3fs","fileSize":1024,"count":0},{"volume":"s3v","bucket":"bucket-24735","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-72557","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-84841","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-17308","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-72557","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-51131","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-07185","fileSize":1024,"count":2}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200622 15:14:58.436" endtime="20200622 15:14:58.437"></status>
</kw>
<status status="FAIL" starttime="20200622 15:14:58.370" endtime="20200622 15:14:58.437"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:15:08.442" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:15:08.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:15:08.444" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200622 15:15:08.439" endtime="20200622 15:15:08.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:15:08.445" level="INFO">scm</msg>
<status status="PASS" starttime="20200622 15:15:08.445" endtime="20200622 15:15:08.445"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:15:08.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:15:08.445" endtime="20200622 15:15:08.446"></status>
</kw>
<msg timestamp="20200622 15:15:08.446" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200622 15:15:08.439" endtime="20200622 15:15:08.446"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:15:08.449" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:15:08.459" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:15:08.459" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 15:15:08.447" endtime="20200622 15:15:08.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:15:08.460" level="INFO"></msg>
<status status="PASS" starttime="20200622 15:15:08.460" endtime="20200622 15:15:08.460"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:15:08.461" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:15:08.460" endtime="20200622 15:15:08.461"></status>
</kw>
<status status="PASS" starttime="20200622 15:15:08.447" endtime="20200622 15:15:08.462"></status>
</kw>
<status status="PASS" starttime="20200622 15:15:08.446" endtime="20200622 15:15:08.462"></status>
</kw>
<status status="PASS" starttime="20200622 15:15:08.439" endtime="20200622 15:15:08.462"></status>
</kw>
<status status="PASS" starttime="20200622 15:15:08.438" endtime="20200622 15:15:08.462"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:15:08.465" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:15:08.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:15:08.481" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200622 15:15:08.462" endtime="20200622 15:15:08.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:15:08.482" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Mon, 22 Jun 2020 15:15:08 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Mon, 22 Jun 2020 15:15:08 GMT
&lt; Date: Mon, 22 Jun 2020 15:15:08 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0   7631      0 --:--:-- --:--:-- --:--:--  8555
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":146}]}}</msg>
<status status="PASS" starttime="20200622 15:15:08.481" endtime="20200622 15:15:08.482"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:15:08.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:15:08.482" endtime="20200622 15:15:08.482"></status>
</kw>
<msg timestamp="20200622 15:15:08.483" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200622 15:15:08.462" endtime="20200622 15:15:08.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200622 15:15:08.483" endtime="20200622 15:15:08.483"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:15:08.486" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:15:08.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:15:08.500" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200622 15:15:08.484" endtime="20200622 15:15:08.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:15:08.506" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Mon, 22 Jun 2020 15:15:08 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Mon, 22 Jun 2020 15:15:08 GMT
&lt; Date: Mon, 22 Jun 2020 15:15:08 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3137
&lt; 
{ [data not shown]

100  3137  100  3137    0     0   382k      0 --:--:-- --:--:-- --:--:--  437k
* Connection #0 to host recon left intact
[{"volume":"vol-0-92276","bucket":"bucket-1-87208","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-1-56656","fileSize":16384,"count":5},{"volume":"vol-0-92276","bucket":"bucket-3-53762","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-2-84977","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-3-98819","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-4-17928","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-1-04722","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-4-62840","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-3-00222","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-1-63673","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-4-17565","fileSize":16384,"count":5},{"volume":"vol-0-92276","bucket":"bucket-2-00957","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-3-68814","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-4-86527","fileSize":16384,"count":5},{"volume":"vol-0-92276","bucket":"bucket-4-86718","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-2-31758","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-0-04883","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-0-69918","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-0-76520","fileSize":16384,"count":5},{"volume":"vol-0-92276","bucket":"bucket-0-62292","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-2-31624","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-2-53980","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-0-78726","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-3-14877","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-1-67836","fileSize":16384,"count":5},{"volume":"02560-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"02560-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"02560-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"02560-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest395","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket2-o3fs","fileSize":1024,"count":0},{"volume":"s3v","bucket":"bucket-24735","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-72557","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-84841","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-17308","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-72557","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-51131","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-07185","fileSize":1024,"count":2}]</msg>
<status status="PASS" starttime="20200622 15:15:08.501" endtime="20200622 15:15:08.506"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:15:08.507" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:15:08.506" endtime="20200622 15:15:08.507"></status>
</kw>
<msg timestamp="20200622 15:15:08.507" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200622 15:15:08.483" endtime="20200622 15:15:08.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200622 15:15:08.508" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Mon, 22 Jun 2020 15:15:08 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Mon, 22 Jun 2020 15:15:08 GMT
&lt; Date: Mon, 22 Jun 2020 15:15:08 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3137
&lt; 
{ [data not shown]

100  3137  100  3137    0     0   382k      0 --:--:-- --:--:-- --:--:--  437k
* Connection #0 to host recon left intact
[{"volume":"vol-0-92276","bucket":"bucket-1-87208","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-1-56656","fileSize":16384,"count":5},{"volume":"vol-0-92276","bucket":"bucket-3-53762","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-2-84977","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-3-98819","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-4-17928","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-1-04722","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-4-62840","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-3-00222","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-1-63673","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-4-17565","fileSize":16384,"count":5},{"volume":"vol-0-92276","bucket":"bucket-2-00957","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-3-68814","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-4-86527","fileSize":16384,"count":5},{"volume":"vol-0-92276","bucket":"bucket-4-86718","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-2-31758","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-0-04883","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-0-69918","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-0-76520","fileSize":16384,"count":5},{"volume":"vol-0-92276","bucket":"bucket-0-62292","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-2-31624","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-2-53980","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-0-78726","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-3-14877","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-1-67836","fileSize":16384,"count":5},{"volume":"02560-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"02560-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"02560-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"02560-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest395","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket2-o3fs","fileSize":1024,"count":0},{"volume":"s3v","bucket":"bucket-24735","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-72557","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-84841","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-17308","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-72557","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-51131","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-07185","fileSize":1024,"count":2}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200622 15:15:08.507" endtime="20200622 15:15:08.508"></status>
</kw>
<status status="FAIL" starttime="20200622 15:15:08.437" endtime="20200622 15:15:08.508"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:15:18.513" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:15:18.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:15:18.516" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200622 15:15:18.511" endtime="20200622 15:15:18.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:15:18.517" level="INFO">scm</msg>
<status status="PASS" starttime="20200622 15:15:18.516" endtime="20200622 15:15:18.517"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:15:18.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:15:18.517" endtime="20200622 15:15:18.518"></status>
</kw>
<msg timestamp="20200622 15:15:18.518" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200622 15:15:18.510" endtime="20200622 15:15:18.518"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:15:18.521" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:15:18.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:15:18.531" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 15:15:18.519" endtime="20200622 15:15:18.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:15:18.532" level="INFO"></msg>
<status status="PASS" starttime="20200622 15:15:18.531" endtime="20200622 15:15:18.532"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:15:18.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:15:18.532" endtime="20200622 15:15:18.533"></status>
</kw>
<status status="PASS" starttime="20200622 15:15:18.519" endtime="20200622 15:15:18.533"></status>
</kw>
<status status="PASS" starttime="20200622 15:15:18.518" endtime="20200622 15:15:18.533"></status>
</kw>
<status status="PASS" starttime="20200622 15:15:18.510" endtime="20200622 15:15:18.533"></status>
</kw>
<status status="PASS" starttime="20200622 15:15:18.510" endtime="20200622 15:15:18.533"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:15:18.537" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:15:18.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:15:18.551" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200622 15:15:18.534" endtime="20200622 15:15:18.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:15:18.552" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Mon, 22 Jun 2020 15:15:18 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Mon, 22 Jun 2020 15:15:18 GMT
&lt; Date: Mon, 22 Jun 2020 15:15:18 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 182
&lt; 
{ [data not shown]

100   182  100   182    0     0  18653      0 --:--:-- --:--:-- --:--:-- 20222
* Connection #0 to host recon left intact
{"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":146},{"ContainerID":2,"NumberOfKeys":3},{"ContainerID":3,"NumberOfKeys":5},{"ContainerID":4,"NumberOfKeys":2}]}}</msg>
<status status="PASS" starttime="20200622 15:15:18.552" endtime="20200622 15:15:18.552"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:15:18.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:15:18.552" endtime="20200622 15:15:18.553"></status>
</kw>
<msg timestamp="20200622 15:15:18.553" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200622 15:15:18.533" endtime="20200622 15:15:18.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200622 15:15:18.553" endtime="20200622 15:15:18.554"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:15:18.556" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:15:18.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:15:18.568" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200622 15:15:18.554" endtime="20200622 15:15:18.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:15:18.569" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Mon, 22 Jun 2020 15:15:18 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Mon, 22 Jun 2020 15:15:18 GMT
&lt; Date: Mon, 22 Jun 2020 15:15:18 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3215
&lt; 
{ [data not shown]

100  3215  100  3215    0     0   498k      0 --:--:-- --:--:-- --:--:--  523k
* Connection #0 to host recon left intact
[{"volume":"vol-0-92276","bucket":"bucket-1-87208","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-1-56656","fileSize":16384,"count":5},{"volume":"vol-0-92276","bucket":"bucket-3-53762","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-2-84977","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-3-98819","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-4-17928","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-1-04722","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-4-62840","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-3-00222","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-1-63673","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-4-17565","fileSize":16384,"count":5},{"volume":"vol-0-92276","bucket":"bucket-2-00957","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-3-68814","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-4-86527","fileSize":16384,"count":5},{"volume":"vol-0-92276","bucket":"bucket-4-86718","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-2-31758","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-0-04883","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-0-69918","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-0-76520","fileSize":16384,"count":5},{"volume":"vol-0-92276","bucket":"bucket-0-62292","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-2-31624","fileSize":16384,"count":5},{"volume":"vol-1-00719","bucket":"bucket-2-53980","fileSize":16384,"count":5},{"volume":"vol-2-46593","bucket":"bucket-0-78726","fileSize":16384,"count":5},{"volume":"vol-3-59768","bucket":"bucket-3-14877","fileSize":16384,"count":5},{"volume":"vol-4-84865","bucket":"bucket-1-67836","fileSize":16384,"count":5},{"volume":"02560-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"02560-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"02560-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"02560-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest395","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket2-o3fs","fileSize":1024,"count":0},{"volume":"s3v","bucket":"bucket-24735","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-72557","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-84841","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-17308","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-72557","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-51131","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-07185","fileSize":1024,"count":2},{"volume":"vol-0-52120","bucket":"bucket-0-22488","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20200622 15:15:18.569" endtime="20200622 15:15:18.570"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:15:18.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:15:18.570" endtime="20200622 15:15:18.570"></status>
</kw>
<msg timestamp="20200622 15:15:18.570" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200622 15:15:18.554" endtime="20200622 15:15:18.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<status status="PASS" starttime="20200622 15:15:18.571" endtime="20200622 15:15:18.571"></status>
</kw>
<status status="PASS" starttime="20200622 15:15:18.509" endtime="20200622 15:15:18.571"></status>
</kw>
<status status="PASS" starttime="20200622 15:14:17.900" endtime="20200622 15:15:18.571"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200622 15:14:17.899" endtime="20200622 15:15:18.571" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Check if Recon picks up DN heartbeats">
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/datanodes</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:15:18.577" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:15:18.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:15:18.613" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200622 15:15:18.574" endtime="20200622 15:15:18.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:15:18.614" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/datanodes HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Mon, 22 Jun 2020 15:15:18 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Mon, 22 Jun 2020 15:15:18 GMT
&lt; Date: Mon, 22 Jun 2020 15:15:18 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1812
&lt; 
{ [data not shown]

100  1812  100  1812    0     0  60876      0 --:--:-- --:--:-- --:--:-- 62482
* Connection #0 to host recon left intact
{"totalCount":3,"datanodes":[{"uuid":"82b72641-26b2-4694-b9cf-d6a88eed4f8a","hostname":"ozonesecure_datanode_3.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1592838913743,"storageReport":{"capacity":89311358976,"used":8192,"remaining":14532636672},"pipelines":[{"pipelineID":"5a59c07c-6a63-42e2-8a53-a64f22e935b1","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_2.ozonesecure_default"},{"pipelineID":"6a7894fc-0395-41ac-9e63-b06619f19cea","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_3.ozonesecure_default"}],"containers":2,"leaderCount":1},{"uuid":"44c8445c-154c-4c17-ae74-fbe2419ff15f","hostname":"ozonesecure_datanode_2.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1592838913748,"storageReport":{"capacity":89311358976,"used":8192,"remaining":14532636672},"pipelines":[{"pipelineID":"5a59c07c-6a63-42e2-8a53-a64f22e935b1","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_2.ozonesecure_default"},{"pipelineID":"299178e1-10df-4cb8-bc07-24400a014a5f","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_2.ozonesecure_default"}],"containers":2,"leaderCount":2},{"uuid":"7087cc7b-fcc0-4aab-879b-9f19c584c6ff","hostname":"ozonesecure_datanode_1.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1592838913873,"storageReport":{"capacity":89311358976,"used":8192,"remaining":14532636672},"pipelines":[{"pipelineID":"5a59c07c-6a63-42e2-8a53-a64f22e935b1","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_2.ozonesecure_default"},{"pipelineID":"00308408-bd7d-4383-98bd-3753a5dc1005","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_1.ozonesecure_default"}],"containers":2,"leaderCount":1}]}</msg>
<status status="PASS" starttime="20200622 15:15:18.613" endtime="20200622 15:15:18.614"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:15:18.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:15:18.614" endtime="20200622 15:15:18.615"></status>
</kw>
<msg timestamp="20200622 15:15:18.615" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200622 15:15:18.574" endtime="20200622 15:15:18.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanodes</arg>
</arguments>
<status status="PASS" starttime="20200622 15:15:18.615" endtime="20200622 15:15:18.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200622 15:15:18.616" endtime="20200622 15:15:18.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200622 15:15:18.616" endtime="20200622 15:15:18.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200622 15:15:18.616" endtime="20200622 15:15:18.617"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/pipelines</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:15:18.620" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:15:18.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:15:18.640" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200622 15:15:18.617" endtime="20200622 15:15:18.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:15:18.641" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/pipelines HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Mon, 22 Jun 2020 15:15:18 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Mon, 22 Jun 2020 15:15:18 GMT
&lt; Date: Mon, 22 Jun 2020 15:15:18 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1368
&lt; 
{ [data not shown]

100  1368  100  1368    0     0  90041      0 --:--:-- --:--:-- --:--:-- 91200
* Connection #0 to host recon left intact
{"totalCount":4,"pipelines":[{"pipelineId":"5a59c07c-6a63-42e2-8a53-a64f22e935b1","status":"OPEN","leaderNode":"ozonesecure_datanode_2.ozonesecure_default","datanodes":["ozonesecure_datanode_3.ozonesecure_default","ozonesecure_datanode_2.ozonesecure_default","ozonesecure_datanode_1.ozonesecure_default"],"lastLeaderElection":0,"duration":1038044,"leaderElections":0,"replicationType":"RATIS","replicationFactor":3,"containers":1},{"pipelineId":"00308408-bd7d-4383-98bd-3753a5dc1005","status":"OPEN","leaderNode":"ozonesecure_datanode_1.ozonesecure_default","datanodes":["ozonesecure_datanode_1.ozonesecure_default"],"lastLeaderElection":0,"duration":1038068,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"6a7894fc-0395-41ac-9e63-b06619f19cea","status":"OPEN","leaderNode":"ozonesecure_datanode_3.ozonesecure_default","datanodes":["ozonesecure_datanode_3.ozonesecure_default"],"lastLeaderElection":0,"duration":1038283,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"299178e1-10df-4cb8-bc07-24400a014a5f","status":"OPEN","leaderNode":"ozonesecure_datanode_2.ozonesecure_default","datanodes":["ozonesecure_datanode_2.ozonesecure_default"],"lastLeaderElection":0,"duration":1038307,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1}]}</msg>
<status status="PASS" starttime="20200622 15:15:18.640" endtime="20200622 15:15:18.641"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:15:18.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:15:18.641" endtime="20200622 15:15:18.641"></status>
</kw>
<msg timestamp="20200622 15:15:18.642" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200622 15:15:18.617" endtime="20200622 15:15:18.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>pipelines</arg>
</arguments>
<status status="PASS" starttime="20200622 15:15:18.642" endtime="20200622 15:15:18.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200622 15:15:18.642" endtime="20200622 15:15:18.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>OPEN</arg>
</arguments>
<status status="PASS" starttime="20200622 15:15:18.643" endtime="20200622 15:15:18.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200622 15:15:18.643" endtime="20200622 15:15:18.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200622 15:15:18.644" endtime="20200622 15:15:18.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200622 15:15:18.644" endtime="20200622 15:15:18.644"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/clusterState</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:15:18.647" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:15:18.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:15:18.665" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200622 15:15:18.645" endtime="20200622 15:15:18.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:15:18.666" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/clusterState HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Mon, 22 Jun 2020 15:15:18 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Mon, 22 Jun 2020 15:15:18 GMT
&lt; Date: Mon, 22 Jun 2020 15:15:18 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 186
&lt; 
{ [data not shown]

100   186  100   186    0     0  15878      0 --:--:-- --:--:-- --:--:-- 16909
* Connection #0 to host recon left intact
{"pipelines":4,"totalDatanodes":3,"healthyDatanodes":3,"storageReport":{"capacity":267934076928,"used":24576,"remaining":43597910016},"containers":4,"volumes":25,"buckets":55,"keys":171}</msg>
<status status="PASS" starttime="20200622 15:15:18.665" endtime="20200622 15:15:18.666"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:15:18.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:15:18.666" endtime="20200622 15:15:18.667"></status>
</kw>
<msg timestamp="20200622 15:15:18.667" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200622 15:15:18.645" endtime="20200622 15:15:18.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"totalDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200622 15:15:18.667" endtime="20200622 15:15:18.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"healthyDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200622 15:15:18.668" endtime="20200622 15:15:18.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"pipelines\":4</arg>
</arguments>
<status status="PASS" starttime="20200622 15:15:18.668" endtime="20200622 15:15:18.668"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:15:18.671" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:15:18.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:15:18.696" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200622 15:15:18.669" endtime="20200622 15:15:18.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:15:18.697" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/containers/1/replicaHistory HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Mon, 22 Jun 2020 15:15:18 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Mon, 22 Jun 2020 15:15:18 GMT
&lt; Date: Mon, 22 Jun 2020 15:15:18 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 454
&lt; 
{ [data not shown]

100   454  100   454    0     0  23364      0 --:--:-- --:--:-- --:--:-- 23894
* Connection #0 to host recon left intact
[{"containerId":1,"datanodeHost":"ozonesecure_datanode_1.ozonesecure_default","firstReportTimestamp":1592837907140,"lastReportTimestamp":1592838807093},{"containerId":1,"datanodeHost":"ozonesecure_datanode_2.ozonesecure_default","firstReportTimestamp":1592837906925,"lastReportTimestamp":1592838883749},{"containerId":1,"datanodeHost":"ozonesecure_datanode_3.ozonesecure_default","firstReportTimestamp":1592837907323,"lastReportTimestamp":1592838913745}]</msg>
<status status="PASS" starttime="20200622 15:15:18.696" endtime="20200622 15:15:18.697"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:15:18.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:15:18.697" endtime="20200622 15:15:18.698"></status>
</kw>
<msg timestamp="20200622 15:15:18.698" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200622 15:15:18.668" endtime="20200622 15:15:18.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
</arguments>
<status status="PASS" starttime="20200622 15:15:18.698" endtime="20200622 15:15:18.699"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200622 15:15:18.573" endtime="20200622 15:15:18.699" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Check if Recon Web UI is up">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:15:18.703" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:15:18.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:15:18.706" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200622 15:15:18.701" endtime="20200622 15:15:18.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:15:18.707" level="INFO">scm</msg>
<status status="PASS" starttime="20200622 15:15:18.706" endtime="20200622 15:15:18.707"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:15:18.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:15:18.707" endtime="20200622 15:15:18.708"></status>
</kw>
<msg timestamp="20200622 15:15:18.708" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200622 15:15:18.701" endtime="20200622 15:15:18.708"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:15:18.710" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:15:18.719" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:15:18.719" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 15:15:18.709" endtime="20200622 15:15:18.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:15:18.720" level="INFO"></msg>
<status status="PASS" starttime="20200622 15:15:18.720" endtime="20200622 15:15:18.720"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:15:18.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:15:18.720" endtime="20200622 15:15:18.721"></status>
</kw>
<status status="PASS" starttime="20200622 15:15:18.708" endtime="20200622 15:15:18.721"></status>
</kw>
<status status="PASS" starttime="20200622 15:15:18.708" endtime="20200622 15:15:18.721"></status>
</kw>
<status status="PASS" starttime="20200622 15:15:18.700" endtime="20200622 15:15:18.721"></status>
</kw>
<status status="PASS" starttime="20200622 15:15:18.700" endtime="20200622 15:15:18.721"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${ENDPOINT_URL}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 15:15:18.724" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 15:15:18.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 15:15:18.765" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200622 15:15:18.722" endtime="20200622 15:15:18.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 15:15:18.767" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Ignoring the response-body
{ [data not shown]

100   442  100   442    0     0  20078      0 --:--:-- --:--:-- --:--:-- 21047
* Connection #0 to host recon left intact
* Issue another request to this URL: 'http://recon:9888/'
* Found bundle for host recon: 0x1925f20
* Re-using existing connection! (#0) with host recon
* Connected to recon (172.26.0.9) port 9888 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; GET / HTTP/1.1
&gt; Authorization: Negotiate YIICUwYJKoZIhvcSAQICAQBuggJCMIICPqADAgEFoQMCAQ6iBwMFACAAAACjggFSYYIBTjCCAUqgAwIBBaENGwtFWEFNUExFLkNPTaIYMBagAwIBA6EPMA0bBEhUVFAbBXJlY29uo4IBGDCCARSgAwIBEqEDAgECooIBBgSCAQJ6IYZ1LsfgaIceHZODC0fiRvcdDq/4pwnrTLSpIWVke7f0AQUfSOFvMO+XtwZC+uKNw04ee2wCgulrLnr0fDbHz5xCe5CYspxbLU5db/H9BlpTiaHrBQR4EEyrpmgWx8/ybApuP/idQhvIROKMujJnUuJMC4wFPOT/SvF3OoOBnsjHLS2HRE40etg6lMa1n7AUAJAPVmf6L7WzJQ/wy0QZDNxCNJi1riRYvHzFZUxQ9Qn5EALKOKftSsoYFCoWCajws4mFc+AUSaBl6w6cHF/bhYxHeOBLQbJrP8JVQmJ67qallis7m63JTK9y/pgi4NEsLmkJDNu31I6Vw6Xyp7q8hamkgdIwgc+gAwIBEqKBxwSBxKehGgD3+V9F6hLqb1i6KnicZ1WkibzXDFjvOcPJfWvVFHrtWJz71yBMroVbNsOpxoYw5qiy6h/fV7SsC8y/DQPMQsy2QZt/IO7ZuQMwwWgc15DlvTAwpKuW3qdOglhBCvgGtk25UNdXDDTd47zSGo8oHWXdjWqjW/LzsRXaPEPwP1bEyFscO67VrFxb2JxJahfqPAz/zr8bzNIvnxV6GNNWj7QpvJ1Vq2tpeHoax8L2cwZa+begV6fGPjQj7AMP8WmCENw=
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Mon, 22 Jun 2020 15:15:18 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Mon, 22 Jun 2020 15:15:18 GMT
&lt; Date: Mon, 22 Jun 2020 15:15:18 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Mon, 22 Jun 2020 15:15:18 GMT
&lt; Date: Mon, 22 Jun 2020 15:15:18 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCdHCwaZPQEepuiXVgsGddvwG7wt99NDZd9hYSwwVz8mIHIkJ0UAsvzJ9oS5UsOqwFzY0AS1+nEPtojC6XA/n0+6vk
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1592874918760&amp;s=zHxKxr1cfac+SMGpdOiUwJT2sgNJMA1Wlt9vS/LU1+k="; Path=/; HttpOnly
&lt; Last-Modified: Mon, 22 Jun 2020 14:12:20 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2267
&lt; 
{ [data not shown]

100  2267  100  2267    0     0  64808      0 --:--:-- --:--:-- --:--:-- 64808
* Closing connection 0
&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.91e4d86d.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.2ec5409c.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.5f7ee777.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.06f69d64.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20200622 15:15:18.766" endtime="20200622 15:15:18.767"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 15:15:18.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 15:15:18.767" endtime="20200622 15:15:18.768"></status>
</kw>
<msg timestamp="20200622 15:15:18.768" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200622 15:15:18.722" endtime="20200622 15:15:18.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Ozone Recon</arg>
</arguments>
<status status="PASS" starttime="20200622 15:15:18.768" endtime="20200622 15:15:18.769"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200622 15:15:18.699" endtime="20200622 15:15:18.769" critical="yes"></status>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20200622 15:14:10.239" endtime="20200622 15:15:18.770"></status>
</suite>
<status status="PASS" starttime="20200622 15:14:10.216" endtime="20200622 15:15:18.772"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozonesecure-recon">ozonesecure-recon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Recon-Api">ozonesecure-recon.Recon-Api</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
