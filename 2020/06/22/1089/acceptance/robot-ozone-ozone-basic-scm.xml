<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200622 14:34:37.910" rpa="false">
<suite id="s1" name="ozone-basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200622 14:34:37.956" endtime="20200622 14:34:37.957"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:34:37.962" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:34:38.039" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:34:38.039" level="INFO">${output} = HTTP/1.1 200 OK
Date: Mon, 22 Jun 2020 14:34:38 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Mon, 22 Jun 2020 14:07:02 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200622 14:34:37.957" endtime="20200622 14:34:38.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:34:38.040" level="INFO">HTTP/1.1 200 OK
Date: Mon, 22 Jun 2020 14:34:38 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Mon, 22 Jun 2020 14:07:02 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20200622 14:34:38.040" endtime="20200622 14:34:38.041"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:34:38.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:34:38.041" endtime="20200622 14:34:38.041"></status>
</kw>
<msg timestamp="20200622 14:34:38.042" level="INFO">${result} = HTTP/1.1 200 OK
Date: Mon, 22 Jun 2020 14:34:38 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Mon, 22 Jun 2020 14:07:02 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200622 14:34:37.957" endtime="20200622 14:34:38.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200622 14:34:38.042" endtime="20200622 14:34:38.042"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200622 14:34:37.956" endtime="20200622 14:34:38.042" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200622 14:34:38.044" endtime="20200622 14:34:38.044"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:34:38.047" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:35:45.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:35:45.860" level="INFO">${output} = 2020-06-22 14:34:38,930 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-22 14:34:39,117 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200622 14:34:38.045" endtime="20200622 14:35:45.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:35:45.861" level="INFO">2020-06-22 14:34:38,930 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-22 14:34:39,117 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-22 14:34:39,117 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-22 14:34:40,145 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-06-22 14:34:40,146 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-06-22 14:34:40,146 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-06-22 14:34:40,146 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-06-22 14:34:40,146 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-06-22 14:34:40,146 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-22 14:34:40,147 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-06-22 14:34:40,153 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-06-22 14:34:40,158 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-22 14:34:40,163 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-06-22 14:34:40,201 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-56346, with hadoop as owner.
2020-06-22 14:34:40,347 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-92816, with hadoop as owner.
2020-06-22 14:34:40,357 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-63238, with hadoop as owner.
2020-06-22 14:34:40,367 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-45789, with hadoop as owner.
2020-06-22 14:34:40,375 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-74344, with hadoop as owner.
2020-06-22 14:34:40,390 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-56346/bucket-0-43987, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-22 14:34:40,427 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-92816/bucket-0-55257, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-22 14:34:40,434 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-63238/bucket-0-53752, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-22 14:34:40,445 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-45789/bucket-0-53977, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-22 14:34:40,451 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-74344/bucket-0-74740, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-22 14:34:40,455 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-56346/bucket-1-02872, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-22 14:34:40,461 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-92816/bucket-1-11466, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-22 14:34:40,471 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-63238/bucket-1-29033, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-22 14:34:40,482 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-45789/bucket-1-03262, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-22 14:34:40,491 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-74344/bucket-1-81063, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-22 14:34:40,495 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-56346/bucket-2-80424, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-22 14:34:40,502 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-92816/bucket-2-04593, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-22 14:34:40,510 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-63238/bucket-2-73005, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-22 14:34:40,513 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-45789/bucket-2-05396, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-22 14:34:40,519 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-74344/bucket-2-18416, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-22 14:34:40,525 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-56346/bucket-3-92971, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-22 14:34:40,531 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-92816/bucket-3-56924, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-22 14:34:40,535 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-63238/bucket-3-21248, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-22 14:34:40,539 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-45789/bucket-3-13943, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-22 14:34:40,543 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-74344/bucket-3-48086, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-22 14:34:40,546 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-56346/bucket-4-23583, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-22 14:34:40,551 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-92816/bucket-4-34067, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-22 14:34:40,555 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-63238/bucket-4-25492, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-22 14:34:40,559 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-45789/bucket-4-22286, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-22 14:34:40,566 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-74344/bucket-4-99394, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-22 14:34:41,175 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-06-22 14:34:41,186 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-22 14:34:42,175 [Thread-5] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-06-22 14:34:43,184 [Thread-5] INFO freon.ProgressBar: Progress: 5.60 % (7 out of 125)
2020-06-22 14:34:44,184 [Thread-5] INFO freon.ProgressBar: Progress: 12.00 % (15 out of 125)
2020-06-22 14:34:45,184 [Thread-5] INFO freon.ProgressBar: Progress: 14.40 % (18 out of 125)
2020-06-22 14:34:46,185 [Thread-5] INFO freon.ProgressBar: Progress: 14.40 % (18 out of 125)
2020-06-22 14:34:47,186 [Thread-5] INFO freon.ProgressBar: Progress: 17.60 % (22 out of 125)
2020-06-22 14:34:48,187 [Thread-5] INFO freon.ProgressBar: Progress: 28.80 % (36 out of 125)
2020-06-22 14:34:49,187 [Thread-5] INFO freon.ProgressBar: Progress: 40.00 % (50 out of 125)
2020-06-22 14:34:50,188 [Thread-5] INFO freon.ProgressBar: Progress: 40.00 % (50 out of 125)
2020-06-22 14:34:51,189 [Thread-5] INFO freon.ProgressBar: Progress: 40.00 % (50 out of 125)
2020-06-22 14:34:52,190 [Thread-5] INFO freon.ProgressBar: Progress: 46.40 % (58 out of 125)
2020-06-22 14:34:53,190 [Thread-5] INFO freon.ProgressBar: Progress: 46.40 % (58 out of 125)
2020-06-22 14:34:54,191 [Thread-5] INFO freon.ProgressBar: Progress: 46.40 % (58 out of 125)
2020-06-22 14:34:55,191 [Thread-5] INFO freon.ProgressBar: Progress: 49.60 % (62 out of 125)
2020-06-22 14:34:56,192 [Thread-5] INFO freon.ProgressBar: Progress: 49.60 % (62 out of 125)
2020-06-22 14:34:57,192 [Thread-5] INFO freon.ProgressBar: Progress: 49.60 % (62 out of 125)
2020-06-22 14:34:58,193 [Thread-5] INFO freon.ProgressBar: Progress: 52.80 % (66 out of 125)
2020-06-22 14:34:59,194 [Thread-5] INFO freon.ProgressBar: Progress: 52.80 % (66 out of 125)
2020-06-22 14:35:00,194 [Thread-5] INFO freon.ProgressBar: Progress: 53.60 % (67 out of 125)
2020-06-22 14:35:01,195 [Thread-5] INFO freon.ProgressBar: Progress: 53.60 % (67 out of 125)
2020-06-22 14:35:02,195 [Thread-5] INFO freon.ProgressBar: Progress: 53.60 % (67 out of 125)
2020-06-22 14:35:03,195 [Thread-5] INFO freon.ProgressBar: Progress: 54.40 % (68 out of 125)
2020-06-22 14:35:04,196 [Thread-5] INFO freon.ProgressBar: Progress: 54.40 % (68 out of 125)
2020-06-22 14:35:05,197 [Thread-5] INFO freon.ProgressBar: Progress: 56.00 % (70 out of 125)
2020-06-22 14:35:06,198 [Thread-5] INFO freon.ProgressBar: Progress: 56.00 % (70 out of 125)
2020-06-22 14:35:07,198 [Thread-5] INFO freon.ProgressBar: Progress: 56.00 % (70 out of 125)
2020-06-22 14:35:08,199 [Thread-5] INFO freon.ProgressBar: Progress: 57.60 % (72 out of 125)
2020-06-22 14:35:09,199 [Thread-5] INFO freon.ProgressBar: Progress: 57.60 % (72 out of 125)
2020-06-22 14:35:10,200 [Thread-5] INFO freon.ProgressBar: Progress: 57.60 % (72 out of 125)
2020-06-22 14:35:11,200 [Thread-5] INFO freon.ProgressBar: Progress: 63.20 % (79 out of 125)
2020-06-22 14:35:12,201 [Thread-5] INFO freon.ProgressBar: Progress: 63.20 % (79 out of 125)
2020-06-22 14:35:13,209 [Thread-5] INFO freon.ProgressBar: Progress: 64.00 % (80 out of 125)
2020-06-22 14:35:14,210 [Thread-5] INFO freon.ProgressBar: Progress: 64.80 % (81 out of 125)
2020-06-22 14:35:15,210 [Thread-5] INFO freon.ProgressBar: Progress: 64.80 % (81 out of 125)
2020-06-22 14:35:16,211 [Thread-5] INFO freon.ProgressBar: Progress: 65.60 % (82 out of 125)
2020-06-22 14:35:17,211 [Thread-5] INFO freon.ProgressBar: Progress: 65.60 % (82 out of 125)
2020-06-22 14:35:18,211 [Thread-5] INFO freon.ProgressBar: Progress: 65.60 % (82 out of 125)
2020-06-22 14:35:19,212 [Thread-5] INFO freon.ProgressBar: Progress: 68.80 % (86 out of 125)
2020-06-22 14:35:20,212 [Thread-5] INFO freon.ProgressBar: Progress: 68.80 % (86 out of 125)
2020-06-22 14:35:21,213 [Thread-5] INFO freon.ProgressBar: Progress: 71.20 % (89 out of 125)
2020-06-22 14:35:22,213 [Thread-5] INFO freon.ProgressBar: Progress: 71.20 % (89 out of 125)
2020-06-22 14:35:23,214 [Thread-5] INFO freon.ProgressBar: Progress: 71.20 % (89 out of 125)
2020-06-22 14:35:24,214 [Thread-5] INFO freon.ProgressBar: Progress: 74.40 % (93 out of 125)
2020-06-22 14:35:25,215 [Thread-5] INFO freon.ProgressBar: Progress: 74.40 % (93 out of 125)
2020-06-22 14:35:26,215 [Thread-5] INFO freon.ProgressBar: Progress: 74.40 % (93 out of 125)
2020-06-22 14:35:27,215 [Thread-5] INFO freon.ProgressBar: Progress: 77.60 % (97 out of 125)
2020-06-22 14:35:28,216 [Thread-5] INFO freon.ProgressBar: Progress: 77.60 % (97 out of 125)
2020-06-22 14:35:29,216 [Thread-5] INFO freon.ProgressBar: Progress: 79.20 % (99 out of 125)
2020-06-22 14:35:30,217 [Thread-5] INFO freon.ProgressBar: Progress: 79.20 % (99 out of 125)
2020-06-22 14:35:31,217 [Thread-5] INFO freon.ProgressBar: Progress: 79.20 % (99 out of 125)
2020-06-22 14:35:32,218 [Thread-5] INFO freon.ProgressBar: Progress: 88.00 % (110 out of 125)
2020-06-22 14:35:33,219 [Thread-5] INFO freon.ProgressBar: Progress: 90.40 % (113 out of 125)
2020-06-22 14:35:34,219 [Thread-5] INFO freon.ProgressBar: Progress: 90.40 % (113 out of 125)
2020-06-22 14:35:35,220 [Thread-5] INFO freon.ProgressBar: Progress: 96.00 % (120 out of 125)
2020-06-22 14:35:36,220 [Thread-5] INFO freon.ProgressBar: Progress: 96.00 % (120 out of 125)
2020-06-22 14:35:37,221 [Thread-5] INFO freon.ProgressBar: Progress: 96.00 % (120 out of 125)
2020-06-22 14:35:38,221 [Thread-5] INFO freon.ProgressBar: Progress: 99.20 % (124 out of 125)
2020-06-22 14:35:39,222 [Thread-5] INFO freon.ProgressBar: Progress: 99.20 % (124 out of 125)
2020-06-22 14:35:40,222 [Thread-5] INFO freon.ProgressBar: Progress: 99.20 % (124 out of 125)
2020-06-22 14:35:41,223 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,187
Average Time spent in bucket creation: 00:00:00,112
Average Time spent in key creation: 00:00:01,297
Average Time spent in key write: 00:00:00,776
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:01:06,240
***************************************************</msg>
<status status="PASS" starttime="20200622 14:35:45.861" endtime="20200622 14:35:45.861"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:35:45.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:35:45.862" endtime="20200622 14:35:45.862"></status>
</kw>
<msg timestamp="20200622 14:35:45.862" level="INFO">${result} = 2020-06-22 14:34:38,930 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-22 14:34:39,117 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200622 14:34:38.044" endtime="20200622 14:35:45.862"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" starttime="20200622 14:35:45.863" endtime="20200622 14:35:45.863"></status>
</kw>
<status status="PASS" starttime="20200622 14:35:45.862" endtime="20200622 14:35:45.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" starttime="20200622 14:35:45.863" endtime="20200622 14:35:45.864"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200622 14:34:38.043" endtime="20200622 14:35:45.864" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200622 14:34:37.934" endtime="20200622 14:35:45.865"></status>
</suite>
<suite id="s1-s2" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200622 14:35:45.872" level="INFO">${random} = 62835</msg>
<status status="PASS" starttime="20200622 14:35:45.871" endtime="20200622 14:35:45.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200622 14:35:45.872" level="INFO">${prefix} = 62835</msg>
<status status="PASS" starttime="20200622 14:35:45.872" endtime="20200622 14:35:45.872"></status>
</kw>
<status status="PASS" starttime="20200622 14:35:45.871" endtime="20200622 14:35:45.872"></status>
</kw>
<test id="s1-s2-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200622 14:35:45.873" endtime="20200622 14:35:45.873"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:35:45.876" level="INFO">Running command 'ozone sh volume info o3://om:9862/62835-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:35:47.550" level="INFO">${rc} = 255</msg>
<msg timestamp="20200622 14:35:47.550" level="INFO">${output} = VOLUME_NOT_FOUND Volume 62835-rpcwoport is not found</msg>
<status status="PASS" starttime="20200622 14:35:45.874" endtime="20200622 14:35:47.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:35:47.551" level="INFO">VOLUME_NOT_FOUND Volume 62835-rpcwoport is not found</msg>
<status status="PASS" starttime="20200622 14:35:47.550" endtime="20200622 14:35:47.551"></status>
</kw>
<msg timestamp="20200622 14:35:47.551" level="INFO">${result} = VOLUME_NOT_FOUND Volume 62835-rpcwoport is not found</msg>
<status status="PASS" starttime="20200622 14:35:45.874" endtime="20200622 14:35:47.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200622 14:35:47.551" endtime="20200622 14:35:47.552"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:35:47.555" level="INFO">Running command 'ozone sh volume create o3://om:9862/62835-rpcwoport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:35:49.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:35:49.214" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:35:47.552" endtime="20200622 14:35:49.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:35:49.215" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:35:49.215" endtime="20200622 14:35:49.215"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:35:49.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:35:49.216" endtime="20200622 14:35:49.216"></status>
</kw>
<msg timestamp="20200622 14:35:49.216" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200622 14:35:47.552" endtime="20200622 14:35:49.216"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200622 14:35:49.216" endtime="20200622 14:35:49.217"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:35:49.221" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="62835-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:35:51.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:35:51.064" level="INFO">${output} = {
  "metadata": {},
  "name": "62835-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-22T14:35:49.102Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200622 14:35:49.217" endtime="20200622 14:35:51.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:35:51.065" level="INFO">{
  "metadata": {},
  "name": "62835-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-22T14:35:49.102Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200622 14:35:51.064" endtime="20200622 14:35:51.065"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:35:51.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:35:51.065" endtime="20200622 14:35:51.065"></status>
</kw>
<msg timestamp="20200622 14:35:51.066" level="INFO">${result} = {
  "metadata": {},
  "name": "62835-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-22T14:35:49.102Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200622 14:35:49.217" endtime="20200622 14:35:51.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200622 14:35:51.066" endtime="20200622 14:35:51.066"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:35:51.069" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="62835-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:35:52.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:35:52.976" level="INFO">${output} = {
  "metadata": {},
  "name": "62835-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-22T14:35:49.102Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200622 14:35:51.067" endtime="20200622 14:35:52.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:35:52.977" level="INFO">{
  "metadata": {},
  "name": "62835-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-22T14:35:49.102Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200622 14:35:52.976" endtime="20200622 14:35:52.977"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:35:52.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:35:52.977" endtime="20200622 14:35:52.978"></status>
</kw>
<msg timestamp="20200622 14:35:52.978" level="INFO">${result} = {
  "metadata": {},
  "name": "62835-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-22T14:35:49.102Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200622 14:35:51.066" endtime="20200622 14:35:52.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200622 14:35:52.978" endtime="20200622 14:35:52.978"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:35:52.982" level="INFO">Running command 'ozone sh volume update o3://om:9862/62835-rpcwoport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:35:54.764" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:35:54.764" level="INFO">${output} = {
  "metadata" : { },
  "name" : "62835-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-22T14:35:49.102Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop"...</msg>
<status status="PASS" starttime="20200622 14:35:52.979" endtime="20200622 14:35:54.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:35:54.765" level="INFO">{
  "metadata" : { },
  "name" : "62835-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-22T14:35:49.102Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200622 14:35:54.764" endtime="20200622 14:35:54.765"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:35:54.765" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:35:54.765" endtime="20200622 14:35:54.765"></status>
</kw>
<status status="PASS" starttime="20200622 14:35:52.978" endtime="20200622 14:35:54.766"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:35:54.768" level="INFO">Running command 'ozone sh volume info o3://om:9862/62835-rpcwoport | jq -r '. | select(.name=="62835-rpcwoport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:35:56.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:35:56.651" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200622 14:35:54.766" endtime="20200622 14:35:56.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:35:56.652" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200622 14:35:56.652" endtime="20200622 14:35:56.652"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:35:56.653" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:35:56.652" endtime="20200622 14:35:56.653"></status>
</kw>
<msg timestamp="20200622 14:35:56.653" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200622 14:35:54.766" endtime="20200622 14:35:56.653"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200622 14:35:56.653" endtime="20200622 14:35:56.654"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:35:56.656" level="INFO">Running command 'ozone sh bucket create o3://om:9862/62835-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:35:58.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:35:58.215" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:35:56.654" endtime="20200622 14:35:58.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:35:58.217" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:35:58.216" endtime="20200622 14:35:58.217"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:35:58.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:35:58.217" endtime="20200622 14:35:58.217"></status>
</kw>
<status status="PASS" starttime="20200622 14:35:56.654" endtime="20200622 14:35:58.218"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:35:58.220" level="INFO">Running command 'ozone sh bucket info o3://om:9862/62835-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:35:59.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:35:59.957" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200622 14:35:58.218" endtime="20200622 14:35:59.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:35:59.958" level="INFO">DISK</msg>
<status status="PASS" starttime="20200622 14:35:59.957" endtime="20200622 14:35:59.958"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:35:59.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:35:59.958" endtime="20200622 14:35:59.958"></status>
</kw>
<msg timestamp="20200622 14:35:59.959" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200622 14:35:58.218" endtime="20200622 14:35:59.959"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200622 14:35:59.959" endtime="20200622 14:35:59.959"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:35:59.962" level="INFO">Running command 'ozone sh bucket list o3://om:9862/62835-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:36:01.643" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:36:01.643" level="INFO">${output} = 62835-rpcwoport</msg>
<status status="PASS" starttime="20200622 14:35:59.960" endtime="20200622 14:36:01.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:36:01.644" level="INFO">62835-rpcwoport</msg>
<status status="PASS" starttime="20200622 14:36:01.643" endtime="20200622 14:36:01.644"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:36:01.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:36:01.644" endtime="20200622 14:36:01.644"></status>
</kw>
<msg timestamp="20200622 14:36:01.645" level="INFO">${result} = 62835-rpcwoport</msg>
<status status="PASS" starttime="20200622 14:35:59.959" endtime="20200622 14:36:01.645"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200622 14:36:01.645" endtime="20200622 14:36:01.645"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:36:01.649" level="INFO">Running command 'ozone sh key put o3://om:9862/62835-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:36:04.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:36:04.974" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:36:01.646" endtime="20200622 14:36:04.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:36:04.976" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:36:04.975" endtime="20200622 14:36:04.976"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:36:04.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:36:04.976" endtime="20200622 14:36:04.976"></status>
</kw>
<status status="PASS" starttime="20200622 14:36:01.646" endtime="20200622 14:36:04.976"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:36:04.979" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:36:04.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:36:04.981" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:36:04.977" endtime="20200622 14:36:04.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:36:04.982" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:36:04.981" endtime="20200622 14:36:04.982"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:36:04.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:36:04.982" endtime="20200622 14:36:04.982"></status>
</kw>
<status status="PASS" starttime="20200622 14:36:04.977" endtime="20200622 14:36:04.983"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:36:04.985" level="INFO">Running command 'ozone sh key get o3://om:9862/62835-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:36:08.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:36:08.187" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:36:04.983" endtime="20200622 14:36:08.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:36:08.188" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:36:08.187" endtime="20200622 14:36:08.188"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:36:08.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:36:08.188" endtime="20200622 14:36:08.189"></status>
</kw>
<status status="PASS" starttime="20200622 14:36:04.983" endtime="20200622 14:36:08.189"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:36:08.192" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:36:08.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:36:08.196" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:36:08.190" endtime="20200622 14:36:08.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:36:08.197" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:36:08.196" endtime="20200622 14:36:08.197"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:36:08.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:36:08.197" endtime="20200622 14:36:08.198"></status>
</kw>
<status status="PASS" starttime="20200622 14:36:08.189" endtime="20200622 14:36:08.198"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:36:08.201" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/62835-rpcwoport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:36:11.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:36:11.464" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:36:08.198" endtime="20200622 14:36:11.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:36:11.465" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:36:11.465" endtime="20200622 14:36:11.465"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:36:11.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:36:11.465" endtime="20200622 14:36:11.466"></status>
</kw>
<status status="PASS" starttime="20200622 14:36:08.198" endtime="20200622 14:36:11.466"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:36:11.469" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:36:11.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:36:11.471" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:36:11.467" endtime="20200622 14:36:11.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:36:11.472" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:36:11.471" endtime="20200622 14:36:11.472"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:36:11.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:36:11.472" endtime="20200622 14:36:11.472"></status>
</kw>
<status status="PASS" starttime="20200622 14:36:11.466" endtime="20200622 14:36:11.472"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:36:11.475" level="INFO">Running command 'ozone sh key get o3://om:9862/62835-rpcwoport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:36:14.764" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:36:14.764" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:36:11.473" endtime="20200622 14:36:14.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:36:14.765" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:36:14.764" endtime="20200622 14:36:14.765"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:36:14.766" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:36:14.765" endtime="20200622 14:36:14.766"></status>
</kw>
<status status="PASS" starttime="20200622 14:36:11.473" endtime="20200622 14:36:14.766"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:36:14.768" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:36:14.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:36:14.771" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:36:14.766" endtime="20200622 14:36:14.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:36:14.772" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:36:14.771" endtime="20200622 14:36:14.772"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:36:14.773" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:36:14.773" endtime="20200622 14:36:14.773"></status>
</kw>
<status status="PASS" starttime="20200622 14:36:14.766" endtime="20200622 14:36:14.773"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:36:14.777" level="INFO">Running command 'ozone sh key info o3://om:9862/62835-rpcwoport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:36:16.713" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:36:16.713" level="INFO">${output} = {
  "volumeName": "62835-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-22T14:36:09.847Z",
  "modificationTime": "2020-06-22T14:36:11.115Z",...</msg>
<status status="PASS" starttime="20200622 14:36:14.774" endtime="20200622 14:36:16.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:36:16.714" level="INFO">{
  "volumeName": "62835-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-22T14:36:09.847Z",
  "modificationTime": "2020-06-22T14:36:11.115Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104388137441362050,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200622 14:36:16.713" endtime="20200622 14:36:16.714"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:36:16.714" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:36:16.714" endtime="20200622 14:36:16.715"></status>
</kw>
<msg timestamp="20200622 14:36:16.715" level="INFO">${result} = {
  "volumeName": "62835-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-22T14:36:09.847Z",
  "modificationTime": "2020-06-22T14:36:11.115Z",...</msg>
<status status="PASS" starttime="20200622 14:36:14.773" endtime="20200622 14:36:16.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200622 14:36:16.715" endtime="20200622 14:36:16.715"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:36:16.719" level="INFO">Running command 'ozone sh key delete o3://om:9862/62835-rpcwoport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:36:18.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:36:18.262" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:36:16.716" endtime="20200622 14:36:18.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:36:18.263" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:36:18.263" endtime="20200622 14:36:18.264"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:36:18.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:36:18.264" endtime="20200622 14:36:18.264"></status>
</kw>
<status status="PASS" starttime="20200622 14:36:16.715" endtime="20200622 14:36:18.264"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:36:18.267" level="INFO">Running command 'ozone sh key cp o3://om:9862/62835-rpcwoport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:36:22.329" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:36:22.329" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:36:18.265" endtime="20200622 14:36:22.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:36:22.330" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:36:22.329" endtime="20200622 14:36:22.330"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:36:22.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:36:22.330" endtime="20200622 14:36:22.330"></status>
</kw>
<status status="PASS" starttime="20200622 14:36:18.264" endtime="20200622 14:36:22.331"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:36:22.333" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:36:22.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:36:22.335" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:36:22.331" endtime="20200622 14:36:22.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:36:22.336" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:36:22.336" endtime="20200622 14:36:22.336"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:36:22.337" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:36:22.336" endtime="20200622 14:36:22.337"></status>
</kw>
<status status="PASS" starttime="20200622 14:36:22.331" endtime="20200622 14:36:22.337"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:36:22.339" level="INFO">Running command 'ozone sh key get o3://om:9862/62835-rpcwoport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:36:25.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:36:25.393" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:36:22.337" endtime="20200622 14:36:25.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:36:25.394" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:36:25.393" endtime="20200622 14:36:25.394"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:36:25.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:36:25.394" endtime="20200622 14:36:25.395"></status>
</kw>
<status status="PASS" starttime="20200622 14:36:22.337" endtime="20200622 14:36:25.395"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:36:25.397" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:36:25.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:36:25.400" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:36:25.395" endtime="20200622 14:36:25.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:36:25.401" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:36:25.400" endtime="20200622 14:36:25.401"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:36:25.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:36:25.401" endtime="20200622 14:36:25.401"></status>
</kw>
<status status="PASS" starttime="20200622 14:36:25.395" endtime="20200622 14:36:25.401"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:36:25.404" level="INFO">Running command 'ozone sh key delete o3://om:9862/62835-rpcwoport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:36:27.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:36:27.055" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:36:25.402" endtime="20200622 14:36:27.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:36:27.056" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:36:27.056" endtime="20200622 14:36:27.057"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:36:27.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:36:27.057" endtime="20200622 14:36:27.057"></status>
</kw>
<status status="PASS" starttime="20200622 14:36:25.401" endtime="20200622 14:36:27.058"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:36:27.062" level="INFO">Running command 'ozone sh key get o3://om:9862/62835-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:36:28.717" level="INFO">${rc} = 255</msg>
<msg timestamp="20200622 14:36:28.717" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200622 14:36:27.059" endtime="20200622 14:36:28.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:36:28.718" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200622 14:36:28.718" endtime="20200622 14:36:28.718"></status>
</kw>
<msg timestamp="20200622 14:36:28.719" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200622 14:36:27.058" endtime="20200622 14:36:28.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200622 14:36:28.719" endtime="20200622 14:36:28.719"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:36:28.723" level="INFO">Running command 'ozone sh key get --force o3://om:9862/62835-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:36:31.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:36:31.886" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:36:28.720" endtime="20200622 14:36:31.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:36:31.887" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:36:31.887" endtime="20200622 14:36:31.887"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:36:31.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:36:31.888" endtime="20200622 14:36:31.888"></status>
</kw>
<msg timestamp="20200622 14:36:31.888" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200622 14:36:28.719" endtime="20200622 14:36:31.888"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200622 14:36:31.888" endtime="20200622 14:36:31.889"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:36:31.891" level="INFO">Running command 'ozone sh key info o3://om:9862/62835-rpcwoport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:36:33.607" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:36:33.607" level="INFO">${output} = {
  "volumeName": "62835-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-22T14:36:03.240Z",
  "modificationTime": "2020-06-22T14:36:04.620Z",
  "re...</msg>
<status status="PASS" starttime="20200622 14:36:31.889" endtime="20200622 14:36:33.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:36:33.608" level="INFO">{
  "volumeName": "62835-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-22T14:36:03.240Z",
  "modificationTime": "2020-06-22T14:36:04.620Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104388137008431230,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200622 14:36:33.608" endtime="20200622 14:36:33.609"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:36:33.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:36:33.609" endtime="20200622 14:36:33.609"></status>
</kw>
<msg timestamp="20200622 14:36:33.609" level="INFO">${result} = {
  "volumeName": "62835-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-22T14:36:03.240Z",
  "modificationTime": "2020-06-22T14:36:04.620Z",
  "re...</msg>
<status status="PASS" starttime="20200622 14:36:31.889" endtime="20200622 14:36:33.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200622 14:36:33.610" endtime="20200622 14:36:33.610"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:36:33.614" level="INFO">Running command 'ozone sh key list o3://om:9862/62835-rpcwoport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:36:35.396" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:36:35.396" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200622 14:36:33.611" endtime="20200622 14:36:35.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:36:35.397" level="INFO">key1</msg>
<status status="PASS" starttime="20200622 14:36:35.397" endtime="20200622 14:36:35.397"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:36:35.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:36:35.398" endtime="20200622 14:36:35.398"></status>
</kw>
<msg timestamp="20200622 14:36:35.398" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200622 14:36:33.610" endtime="20200622 14:36:35.398"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200622 14:36:35.399" endtime="20200622 14:36:35.399"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:36:35.403" level="INFO">Running command 'ozone sh key rename o3://om:9862/62835-rpcwoport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:36:37.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:36:37.176" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:36:35.400" endtime="20200622 14:36:37.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:36:37.177" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:36:37.177" endtime="20200622 14:36:37.178"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:36:37.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:36:37.178" endtime="20200622 14:36:37.178"></status>
</kw>
<status status="PASS" starttime="20200622 14:36:35.399" endtime="20200622 14:36:37.178"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:36:37.181" level="INFO">Running command 'ozone sh key list o3://om:9862/62835-rpcwoport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:36:39.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:36:39.001" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200622 14:36:37.179" endtime="20200622 14:36:39.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:36:39.003" level="INFO">key2</msg>
<status status="PASS" starttime="20200622 14:36:39.002" endtime="20200622 14:36:39.003"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:36:39.003" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:36:39.003" endtime="20200622 14:36:39.003"></status>
</kw>
<msg timestamp="20200622 14:36:39.004" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200622 14:36:37.179" endtime="20200622 14:36:39.004"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200622 14:36:39.004" endtime="20200622 14:36:39.004"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:36:39.007" level="INFO">Running command 'ozone sh key delete o3://om:9862/62835-rpcwoport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:36:40.745" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:36:40.745" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:36:39.005" endtime="20200622 14:36:40.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:36:40.747" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:36:40.746" endtime="20200622 14:36:40.747"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:36:40.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:36:40.747" endtime="20200622 14:36:40.748"></status>
</kw>
<status status="PASS" starttime="20200622 14:36:39.004" endtime="20200622 14:36:40.748"></status>
</kw>
<status status="PASS" starttime="20200622 14:36:01.645" endtime="20200622 14:36:40.748"></status>
</kw>
<status status="PASS" starttime="20200622 14:36:01.645" endtime="20200622 14:36:40.748"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:36:40.751" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/62835-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:36:42.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:36:42.297" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:36:40.748" endtime="20200622 14:36:42.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:36:42.298" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:36:42.297" endtime="20200622 14:36:42.298"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:36:42.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:36:42.299" endtime="20200622 14:36:42.299"></status>
</kw>
<status status="PASS" starttime="20200622 14:36:40.748" endtime="20200622 14:36:42.299"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:36:42.303" level="INFO">Running command 'ozone sh volume delete o3://om:9862/62835-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:36:44.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:36:44.018" level="INFO">${output} = Volume 62835-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200622 14:36:42.300" endtime="20200622 14:36:44.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:36:44.019" level="INFO">Volume 62835-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200622 14:36:44.019" endtime="20200622 14:36:44.020"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:36:44.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:36:44.020" endtime="20200622 14:36:44.020"></status>
</kw>
<status status="PASS" starttime="20200622 14:36:42.299" endtime="20200622 14:36:44.020"></status>
</kw>
<status status="PASS" starttime="20200622 14:35:45.873" endtime="20200622 14:36:44.020"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200622 14:35:45.872" endtime="20200622 14:36:44.021" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200622 14:36:44.022" endtime="20200622 14:36:44.023"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:36:44.026" level="INFO">Running command 'ozone sh volume create o3://om:9862/62835-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:36:45.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:36:45.750" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:36:44.024" endtime="20200622 14:36:45.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:36:45.751" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:36:45.750" endtime="20200622 14:36:45.751"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:36:45.751" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:36:45.751" endtime="20200622 14:36:45.751"></status>
</kw>
<status status="PASS" starttime="20200622 14:36:44.023" endtime="20200622 14:36:45.752"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:36:45.754" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/62835-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:36:47.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:36:47.596" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200622 14:36:45.752" endtime="20200622 14:36:47.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:36:47.598" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200622 14:36:47.597" endtime="20200622 14:36:47.598"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:36:47.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:36:47.598" endtime="20200622 14:36:47.598"></status>
</kw>
<msg timestamp="20200622 14:36:47.599" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200622 14:36:45.752" endtime="20200622 14:36:47.599"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200622 14:36:47.599" endtime="20200622 14:36:47.600"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:36:47.604" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/62835-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:36:49.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:36:49.289" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200622 14:36:47.600" endtime="20200622 14:36:49.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:36:49.290" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200622 14:36:49.289" endtime="20200622 14:36:49.290"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:36:49.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:36:49.290" endtime="20200622 14:36:49.291"></status>
</kw>
<msg timestamp="20200622 14:36:49.291" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200622 14:36:47.600" endtime="20200622 14:36:49.291"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:36:49.294" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/62835-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:36:51.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:36:51.084" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200622 14:36:49.292" endtime="20200622 14:36:51.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:36:51.086" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200622 14:36:51.085" endtime="20200622 14:36:51.086"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:36:51.086" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:36:51.086" endtime="20200622 14:36:51.086"></status>
</kw>
<msg timestamp="20200622 14:36:51.087" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200622 14:36:49.291" endtime="20200622 14:36:51.087"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200622 14:36:51.087" endtime="20200622 14:36:51.088"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:36:51.090" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/62835-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:36:52.760" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:36:52.760" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200622 14:36:51.088" endtime="20200622 14:36:52.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:36:52.762" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200622 14:36:52.761" endtime="20200622 14:36:52.762"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:36:52.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:36:52.762" endtime="20200622 14:36:52.762"></status>
</kw>
<msg timestamp="20200622 14:36:52.763" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200622 14:36:51.088" endtime="20200622 14:36:52.763"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:36:52.766" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/62835-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:36:54.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:36:54.598" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200622 14:36:52.763" endtime="20200622 14:36:54.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:36:54.599" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200622 14:36:54.599" endtime="20200622 14:36:54.600"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:36:54.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:36:54.600" endtime="20200622 14:36:54.600"></status>
</kw>
<msg timestamp="20200622 14:36:54.600" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200622 14:36:52.763" endtime="20200622 14:36:54.601"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200622 14:36:54.601" endtime="20200622 14:36:54.602"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:36:54.606" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/62835-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:36:56.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:36:56.294" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200622 14:36:54.603" endtime="20200622 14:36:56.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:36:56.295" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200622 14:36:56.294" endtime="20200622 14:36:56.295"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:36:56.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:36:56.295" endtime="20200622 14:36:56.296"></status>
</kw>
<msg timestamp="20200622 14:36:56.296" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200622 14:36:54.602" endtime="20200622 14:36:56.296"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:36:56.302" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/62835-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:36:57.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:36:57.986" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200622 14:36:56.297" endtime="20200622 14:36:57.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:36:57.987" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200622 14:36:57.986" endtime="20200622 14:36:57.987"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:36:57.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:36:57.987" endtime="20200622 14:36:57.987"></status>
</kw>
<msg timestamp="20200622 14:36:57.988" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200622 14:36:56.296" endtime="20200622 14:36:57.988"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200622 14:36:57.988" endtime="20200622 14:36:57.988"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200622 14:36:57.988" endtime="20200622 14:36:57.989"></status>
</kw>
<status status="PASS" starttime="20200622 14:36:44.023" endtime="20200622 14:36:57.989"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200622 14:36:44.022" endtime="20200622 14:36:57.990" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200622 14:36:57.991" endtime="20200622 14:36:57.991"></status>
</kw>
<kw name="Test Bucket Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:36:57.995" level="INFO">Running command 'ozone sh bucket create o3://om:9862/62835-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:36:59.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:36:59.559" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:36:57.993" endtime="20200622 14:36:59.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:36:59.560" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:36:59.560" endtime="20200622 14:36:59.561"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:36:59.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:36:59.561" endtime="20200622 14:36:59.561"></status>
</kw>
<status status="PASS" starttime="20200622 14:36:57.993" endtime="20200622 14:36:59.561"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:36:59.566" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/62835-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:37:01.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:37:01.282" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200622 14:36:59.562" endtime="20200622 14:37:01.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:37:01.283" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200622 14:37:01.282" endtime="20200622 14:37:01.283"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:37:01.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:37:01.283" endtime="20200622 14:37:01.284"></status>
</kw>
<msg timestamp="20200622 14:37:01.284" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200622 14:36:59.562" endtime="20200622 14:37:01.284"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200622 14:37:01.284" endtime="20200622 14:37:01.285"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:37:01.287" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/62835-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:37:02.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:37:02.883" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200622 14:37:01.285" endtime="20200622 14:37:02.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:37:02.885" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200622 14:37:02.884" endtime="20200622 14:37:02.885"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:37:02.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:37:02.885" endtime="20200622 14:37:02.885"></status>
</kw>
<msg timestamp="20200622 14:37:02.885" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200622 14:37:01.285" endtime="20200622 14:37:02.886"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:37:02.888" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/62835-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:37:04.621" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:37:04.621" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200622 14:37:02.886" endtime="20200622 14:37:04.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:37:04.623" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200622 14:37:04.622" endtime="20200622 14:37:04.623"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:37:04.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:37:04.623" endtime="20200622 14:37:04.623"></status>
</kw>
<msg timestamp="20200622 14:37:04.623" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200622 14:37:02.886" endtime="20200622 14:37:04.623"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200622 14:37:04.624" endtime="20200622 14:37:04.624"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:37:04.628" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/62835-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:37:06.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:37:06.221" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200622 14:37:04.625" endtime="20200622 14:37:06.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:37:06.222" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200622 14:37:06.221" endtime="20200622 14:37:06.222"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:37:06.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:37:06.222" endtime="20200622 14:37:06.223"></status>
</kw>
<msg timestamp="20200622 14:37:06.223" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200622 14:37:04.625" endtime="20200622 14:37:06.223"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:37:06.226" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/62835-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:37:08.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:37:08.050" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200622 14:37:06.224" endtime="20200622 14:37:08.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:37:08.051" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200622 14:37:08.050" endtime="20200622 14:37:08.051"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:37:08.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:37:08.051" endtime="20200622 14:37:08.052"></status>
</kw>
<msg timestamp="20200622 14:37:08.052" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200622 14:37:06.223" endtime="20200622 14:37:08.052"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200622 14:37:08.052" endtime="20200622 14:37:08.053"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:37:08.055" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/62835-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:37:09.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:37:09.661" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200622 14:37:08.053" endtime="20200622 14:37:09.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:37:09.662" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200622 14:37:09.661" endtime="20200622 14:37:09.662"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:37:09.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:37:09.662" endtime="20200622 14:37:09.662"></status>
</kw>
<msg timestamp="20200622 14:37:09.663" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200622 14:37:08.053" endtime="20200622 14:37:09.663"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:37:09.666" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/62835-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:37:11.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:37:11.552" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200622 14:37:09.663" endtime="20200622 14:37:11.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:37:11.553" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200622 14:37:11.552" endtime="20200622 14:37:11.553"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:37:11.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:37:11.553" endtime="20200622 14:37:11.554"></status>
</kw>
<msg timestamp="20200622 14:37:11.554" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200622 14:37:09.663" endtime="20200622 14:37:11.554"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200622 14:37:11.554" endtime="20200622 14:37:11.554"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200622 14:37:11.555" endtime="20200622 14:37:11.555"></status>
</kw>
<status status="PASS" starttime="20200622 14:36:57.991" endtime="20200622 14:37:11.555"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200622 14:36:57.990" endtime="20200622 14:37:11.555" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200622 14:37:11.557" endtime="20200622 14:37:11.557"></status>
</kw>
<kw name="Test key Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:37:11.560" level="INFO">Running command 'ozone sh key put o3://om:9862/62835-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:37:17.589" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:37:17.589" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:37:11.558" endtime="20200622 14:37:17.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:37:17.590" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:37:17.590" endtime="20200622 14:37:17.591"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:37:17.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:37:17.591" endtime="20200622 14:37:17.591"></status>
</kw>
<status status="PASS" starttime="20200622 14:37:11.557" endtime="20200622 14:37:17.591"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:37:17.594" level="INFO">Running command 'ozone sh key getacl o3://om:9862/62835-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:37:19.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:37:19.265" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200622 14:37:17.592" endtime="20200622 14:37:19.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:37:19.266" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200622 14:37:19.265" endtime="20200622 14:37:19.266"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:37:19.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:37:19.266" endtime="20200622 14:37:19.267"></status>
</kw>
<msg timestamp="20200622 14:37:19.267" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200622 14:37:17.591" endtime="20200622 14:37:19.267"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200622 14:37:19.267" endtime="20200622 14:37:19.268"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:37:19.270" level="INFO">Running command 'ozone sh key addacl o3://om:9862/62835-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:37:21.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:37:21.055" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200622 14:37:19.268" endtime="20200622 14:37:21.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:37:21.056" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200622 14:37:21.055" endtime="20200622 14:37:21.056"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:37:21.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:37:21.056" endtime="20200622 14:37:21.056"></status>
</kw>
<msg timestamp="20200622 14:37:21.057" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200622 14:37:19.268" endtime="20200622 14:37:21.057"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:37:21.060" level="INFO">Running command 'ozone sh key getacl o3://om:9862/62835-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:37:22.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:37:22.902" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200622 14:37:21.057" endtime="20200622 14:37:22.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:37:22.903" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200622 14:37:22.902" endtime="20200622 14:37:22.903"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:37:22.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:37:22.903" endtime="20200622 14:37:22.904"></status>
</kw>
<msg timestamp="20200622 14:37:22.904" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200622 14:37:21.057" endtime="20200622 14:37:22.904"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200622 14:37:22.904" endtime="20200622 14:37:22.905"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:37:22.908" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/62835-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:37:24.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:37:24.606" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200622 14:37:22.905" endtime="20200622 14:37:24.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:37:24.607" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200622 14:37:24.606" endtime="20200622 14:37:24.607"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:37:24.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:37:24.607" endtime="20200622 14:37:24.608"></status>
</kw>
<msg timestamp="20200622 14:37:24.608" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200622 14:37:22.905" endtime="20200622 14:37:24.608"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:37:24.612" level="INFO">Running command 'ozone sh key getacl o3://om:9862/62835-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:37:26.261" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:37:26.261" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200622 14:37:24.609" endtime="20200622 14:37:26.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:37:26.262" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20200622 14:37:26.262" endtime="20200622 14:37:26.262"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:37:26.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:37:26.263" endtime="20200622 14:37:26.263"></status>
</kw>
<msg timestamp="20200622 14:37:26.263" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200622 14:37:24.608" endtime="20200622 14:37:26.263"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200622 14:37:26.263" endtime="20200622 14:37:26.264"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:37:26.266" level="INFO">Running command 'ozone sh key setacl o3://om:9862/62835-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:37:27.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:37:27.886" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200622 14:37:26.264" endtime="20200622 14:37:27.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:37:27.887" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200622 14:37:27.886" endtime="20200622 14:37:27.887"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:37:27.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:37:27.887" endtime="20200622 14:37:27.888"></status>
</kw>
<msg timestamp="20200622 14:37:27.888" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200622 14:37:26.264" endtime="20200622 14:37:27.888"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:37:27.891" level="INFO">Running command 'ozone sh key getacl o3://om:9862/62835-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:37:29.739" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:37:29.739" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200622 14:37:27.889" endtime="20200622 14:37:29.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:37:29.740" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200622 14:37:29.739" endtime="20200622 14:37:29.740"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:37:29.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:37:29.740" endtime="20200622 14:37:29.740"></status>
</kw>
<msg timestamp="20200622 14:37:29.741" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200622 14:37:27.888" endtime="20200622 14:37:29.741"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200622 14:37:29.741" endtime="20200622 14:37:29.741"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200622 14:37:29.742" endtime="20200622 14:37:29.742"></status>
</kw>
<status status="PASS" starttime="20200622 14:37:11.557" endtime="20200622 14:37:29.743"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200622 14:37:11.556" endtime="20200622 14:37:29.743" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200622 14:37:29.744" endtime="20200622 14:37:29.744"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:37:29.749" level="INFO">Running command 'ozone sh volume info o3:///62835-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:37:31.403" level="INFO">${rc} = 255</msg>
<msg timestamp="20200622 14:37:31.403" level="INFO">${output} = VOLUME_NOT_FOUND Volume 62835-rpcwport is not found</msg>
<status status="PASS" starttime="20200622 14:37:29.746" endtime="20200622 14:37:31.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:37:31.404" level="INFO">VOLUME_NOT_FOUND Volume 62835-rpcwport is not found</msg>
<status status="PASS" starttime="20200622 14:37:31.403" endtime="20200622 14:37:31.404"></status>
</kw>
<msg timestamp="20200622 14:37:31.404" level="INFO">${result} = VOLUME_NOT_FOUND Volume 62835-rpcwport is not found</msg>
<status status="PASS" starttime="20200622 14:37:29.745" endtime="20200622 14:37:31.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200622 14:37:31.404" endtime="20200622 14:37:31.405"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:37:31.408" level="INFO">Running command 'ozone sh volume create o3:///62835-rpcwport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:37:32.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:37:32.999" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:37:31.405" endtime="20200622 14:37:32.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:37:33.000" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:37:32.999" endtime="20200622 14:37:33.000"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:37:33.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:37:33.000" endtime="20200622 14:37:33.001"></status>
</kw>
<msg timestamp="20200622 14:37:33.001" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200622 14:37:31.405" endtime="20200622 14:37:33.001"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200622 14:37:33.001" endtime="20200622 14:37:33.001"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:37:33.005" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="62835-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:37:35.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:37:35.008" level="INFO">${output} = {
  "metadata": {},
  "name": "62835-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-22T14:37:32.884Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200622 14:37:33.002" endtime="20200622 14:37:35.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:37:35.010" level="INFO">{
  "metadata": {},
  "name": "62835-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-22T14:37:32.884Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200622 14:37:35.009" endtime="20200622 14:37:35.010"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:37:35.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:37:35.010" endtime="20200622 14:37:35.010"></status>
</kw>
<msg timestamp="20200622 14:37:35.011" level="INFO">${result} = {
  "metadata": {},
  "name": "62835-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-22T14:37:32.884Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200622 14:37:33.002" endtime="20200622 14:37:35.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200622 14:37:35.011" endtime="20200622 14:37:35.011"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:37:35.014" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="62835-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:37:36.823" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:37:36.823" level="INFO">${output} = {
  "metadata": {},
  "name": "62835-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-22T14:37:32.884Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200622 14:37:35.012" endtime="20200622 14:37:36.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:37:36.824" level="INFO">{
  "metadata": {},
  "name": "62835-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-22T14:37:32.884Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200622 14:37:36.823" endtime="20200622 14:37:36.824"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:37:36.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:37:36.824" endtime="20200622 14:37:36.825"></status>
</kw>
<msg timestamp="20200622 14:37:36.825" level="INFO">${result} = {
  "metadata": {},
  "name": "62835-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-22T14:37:32.884Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200622 14:37:35.011" endtime="20200622 14:37:36.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200622 14:37:36.825" endtime="20200622 14:37:36.825"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:37:36.828" level="INFO">Running command 'ozone sh volume update o3:///62835-rpcwport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:37:38.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:37:38.610" level="INFO">${output} = {
  "metadata" : { },
  "name" : "62835-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-22T14:37:32.884Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",...</msg>
<status status="PASS" starttime="20200622 14:37:36.826" endtime="20200622 14:37:38.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:37:38.612" level="INFO">{
  "metadata" : { },
  "name" : "62835-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-22T14:37:32.884Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200622 14:37:38.611" endtime="20200622 14:37:38.612"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:37:38.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:37:38.612" endtime="20200622 14:37:38.612"></status>
</kw>
<status status="PASS" starttime="20200622 14:37:36.825" endtime="20200622 14:37:38.612"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:37:38.617" level="INFO">Running command 'ozone sh volume info o3:///62835-rpcwport | jq -r '. | select(.name=="62835-rpcwport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:37:40.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:37:40.536" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200622 14:37:38.613" endtime="20200622 14:37:40.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:37:40.537" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200622 14:37:40.536" endtime="20200622 14:37:40.537"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:37:40.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:37:40.537" endtime="20200622 14:37:40.538"></status>
</kw>
<msg timestamp="20200622 14:37:40.538" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200622 14:37:38.613" endtime="20200622 14:37:40.538"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200622 14:37:40.538" endtime="20200622 14:37:40.539"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:37:40.542" level="INFO">Running command 'ozone sh bucket create o3:///62835-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:37:42.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:37:42.130" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:37:40.539" endtime="20200622 14:37:42.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:37:42.131" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:37:42.130" endtime="20200622 14:37:42.131"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:37:42.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:37:42.131" endtime="20200622 14:37:42.131"></status>
</kw>
<status status="PASS" starttime="20200622 14:37:40.539" endtime="20200622 14:37:42.132"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:37:42.135" level="INFO">Running command 'ozone sh bucket info o3:///62835-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:37:43.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:37:43.931" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200622 14:37:42.132" endtime="20200622 14:37:43.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:37:43.932" level="INFO">DISK</msg>
<status status="PASS" starttime="20200622 14:37:43.931" endtime="20200622 14:37:43.932"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:37:43.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:37:43.932" endtime="20200622 14:37:43.933"></status>
</kw>
<msg timestamp="20200622 14:37:43.933" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200622 14:37:42.132" endtime="20200622 14:37:43.933"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200622 14:37:43.933" endtime="20200622 14:37:43.934"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:37:43.937" level="INFO">Running command 'ozone sh bucket list o3:///62835-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:37:45.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:37:45.721" level="INFO">${output} = 62835-rpcwport</msg>
<status status="PASS" starttime="20200622 14:37:43.934" endtime="20200622 14:37:45.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:37:45.722" level="INFO">62835-rpcwport</msg>
<status status="PASS" starttime="20200622 14:37:45.722" endtime="20200622 14:37:45.722"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:37:45.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:37:45.723" endtime="20200622 14:37:45.723"></status>
</kw>
<msg timestamp="20200622 14:37:45.723" level="INFO">${result} = 62835-rpcwport</msg>
<status status="PASS" starttime="20200622 14:37:43.934" endtime="20200622 14:37:45.723"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200622 14:37:45.723" endtime="20200622 14:37:45.724"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:37:45.728" level="INFO">Running command 'ozone sh key put o3:///62835-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:37:49.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:37:49.146" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:37:45.725" endtime="20200622 14:37:49.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:37:49.147" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:37:49.147" endtime="20200622 14:37:49.147"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:37:49.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:37:49.147" endtime="20200622 14:37:49.148"></status>
</kw>
<status status="PASS" starttime="20200622 14:37:45.725" endtime="20200622 14:37:49.148"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:37:49.151" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:37:49.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:37:49.153" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:37:49.149" endtime="20200622 14:37:49.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:37:49.154" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:37:49.154" endtime="20200622 14:37:49.154"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:37:49.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:37:49.154" endtime="20200622 14:37:49.155"></status>
</kw>
<status status="PASS" starttime="20200622 14:37:49.148" endtime="20200622 14:37:49.155"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:37:49.157" level="INFO">Running command 'ozone sh key get o3:///62835-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:37:52.192" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:37:52.192" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:37:49.155" endtime="20200622 14:37:52.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:37:52.193" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:37:52.192" endtime="20200622 14:37:52.193"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:37:52.193" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:37:52.193" endtime="20200622 14:37:52.193"></status>
</kw>
<status status="PASS" starttime="20200622 14:37:49.155" endtime="20200622 14:37:52.194"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:37:52.197" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:37:52.199" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:37:52.199" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:37:52.194" endtime="20200622 14:37:52.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:37:52.200" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:37:52.200" endtime="20200622 14:37:52.200"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:37:52.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:37:52.200" endtime="20200622 14:37:52.201"></status>
</kw>
<status status="PASS" starttime="20200622 14:37:52.194" endtime="20200622 14:37:52.201"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:37:52.206" level="INFO">Running command 'ozone sh key put -t RATIS o3:///62835-rpcwport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:37:55.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:37:55.473" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:37:52.202" endtime="20200622 14:37:55.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:37:55.474" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:37:55.474" endtime="20200622 14:37:55.474"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:37:55.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:37:55.475" endtime="20200622 14:37:55.475"></status>
</kw>
<status status="PASS" starttime="20200622 14:37:52.201" endtime="20200622 14:37:55.475"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:37:55.478" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:37:55.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:37:55.480" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:37:55.476" endtime="20200622 14:37:55.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:37:55.481" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:37:55.480" endtime="20200622 14:37:55.481"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:37:55.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:37:55.481" endtime="20200622 14:37:55.482"></status>
</kw>
<status status="PASS" starttime="20200622 14:37:55.475" endtime="20200622 14:37:55.482"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:37:55.485" level="INFO">Running command 'ozone sh key get o3:///62835-rpcwport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:37:58.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:37:58.524" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:37:55.482" endtime="20200622 14:37:58.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:37:58.525" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:37:58.524" endtime="20200622 14:37:58.525"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:37:58.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:37:58.525" endtime="20200622 14:37:58.526"></status>
</kw>
<status status="PASS" starttime="20200622 14:37:55.482" endtime="20200622 14:37:58.526"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:37:58.529" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:37:58.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:37:58.531" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:37:58.527" endtime="20200622 14:37:58.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:37:58.532" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:37:58.532" endtime="20200622 14:37:58.532"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:37:58.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:37:58.533" endtime="20200622 14:37:58.533"></status>
</kw>
<status status="PASS" starttime="20200622 14:37:58.526" endtime="20200622 14:37:58.533"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:37:58.537" level="INFO">Running command 'ozone sh key info o3:///62835-rpcwport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:38:00.293" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:38:00.293" level="INFO">${output} = {
  "volumeName": "62835-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-22T14:37:53.824Z",
  "modificationTime": "2020-06-22T14:37:55.133Z",
...</msg>
<status status="PASS" starttime="20200622 14:37:58.534" endtime="20200622 14:38:00.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:38:00.294" level="INFO">{
  "volumeName": "62835-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-22T14:37:53.824Z",
  "modificationTime": "2020-06-22T14:37:55.133Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104388144255598720,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200622 14:38:00.294" endtime="20200622 14:38:00.295"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:38:00.295" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:38:00.295" endtime="20200622 14:38:00.295"></status>
</kw>
<msg timestamp="20200622 14:38:00.295" level="INFO">${result} = {
  "volumeName": "62835-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-22T14:37:53.824Z",
  "modificationTime": "2020-06-22T14:37:55.133Z",
...</msg>
<status status="PASS" starttime="20200622 14:37:58.533" endtime="20200622 14:38:00.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200622 14:38:00.296" endtime="20200622 14:38:00.296"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:38:00.299" level="INFO">Running command 'ozone sh key delete o3:///62835-rpcwport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:38:01.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:38:01.964" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:38:00.296" endtime="20200622 14:38:01.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:38:01.966" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:38:01.965" endtime="20200622 14:38:01.966"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:38:01.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:38:01.966" endtime="20200622 14:38:01.966"></status>
</kw>
<status status="PASS" starttime="20200622 14:38:00.296" endtime="20200622 14:38:01.967"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:38:01.970" level="INFO">Running command 'ozone sh key cp o3:///62835-rpcwport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:38:05.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:38:05.342" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:38:01.967" endtime="20200622 14:38:05.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:38:05.343" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:38:05.343" endtime="20200622 14:38:05.343"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:38:05.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:38:05.344" endtime="20200622 14:38:05.344"></status>
</kw>
<status status="PASS" starttime="20200622 14:38:01.967" endtime="20200622 14:38:05.344"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:38:05.347" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:38:05.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:38:05.350" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:38:05.345" endtime="20200622 14:38:05.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:38:05.351" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:38:05.350" endtime="20200622 14:38:05.351"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:38:05.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:38:05.351" endtime="20200622 14:38:05.351"></status>
</kw>
<status status="PASS" starttime="20200622 14:38:05.344" endtime="20200622 14:38:05.352"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:38:05.354" level="INFO">Running command 'ozone sh key get o3:///62835-rpcwport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:38:08.462" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:38:08.462" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:38:05.352" endtime="20200622 14:38:08.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:38:08.463" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:38:08.462" endtime="20200622 14:38:08.463"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:38:08.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:38:08.463" endtime="20200622 14:38:08.464"></status>
</kw>
<status status="PASS" starttime="20200622 14:38:05.352" endtime="20200622 14:38:08.464"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:38:08.468" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:38:08.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:38:08.469" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:38:08.465" endtime="20200622 14:38:08.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:38:08.470" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:38:08.470" endtime="20200622 14:38:08.471"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:38:08.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:38:08.471" endtime="20200622 14:38:08.471"></status>
</kw>
<status status="PASS" starttime="20200622 14:38:08.464" endtime="20200622 14:38:08.471"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:38:08.475" level="INFO">Running command 'ozone sh key delete o3:///62835-rpcwport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:38:10.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:38:10.123" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:38:08.472" endtime="20200622 14:38:10.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:38:10.124" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:38:10.123" endtime="20200622 14:38:10.124"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:38:10.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:38:10.124" endtime="20200622 14:38:10.125"></status>
</kw>
<status status="PASS" starttime="20200622 14:38:08.471" endtime="20200622 14:38:10.125"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:38:10.128" level="INFO">Running command 'ozone sh key get o3:///62835-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:38:11.655" level="INFO">${rc} = 255</msg>
<msg timestamp="20200622 14:38:11.655" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200622 14:38:10.126" endtime="20200622 14:38:11.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:38:11.656" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200622 14:38:11.656" endtime="20200622 14:38:11.657"></status>
</kw>
<msg timestamp="20200622 14:38:11.657" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200622 14:38:10.125" endtime="20200622 14:38:11.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200622 14:38:11.657" endtime="20200622 14:38:11.657"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:38:11.661" level="INFO">Running command 'ozone sh key get --force o3:///62835-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:38:14.713" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:38:14.713" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:38:11.658" endtime="20200622 14:38:14.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:38:14.714" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:38:14.713" endtime="20200622 14:38:14.714"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:38:14.714" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:38:14.714" endtime="20200622 14:38:14.715"></status>
</kw>
<msg timestamp="20200622 14:38:14.715" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200622 14:38:11.657" endtime="20200622 14:38:14.715"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200622 14:38:14.715" endtime="20200622 14:38:14.715"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:38:14.719" level="INFO">Running command 'ozone sh key info o3:///62835-rpcwport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:38:16.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:38:16.677" level="INFO">${output} = {
  "volumeName": "62835-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-22T14:37:47.298Z",
  "modificationTime": "2020-06-22T14:37:48.694Z",
  "rep...</msg>
<status status="PASS" starttime="20200622 14:38:14.716" endtime="20200622 14:38:16.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:38:16.678" level="INFO">{
  "volumeName": "62835-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-22T14:37:47.298Z",
  "modificationTime": "2020-06-22T14:37:48.694Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104388143828041860,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200622 14:38:16.677" endtime="20200622 14:38:16.678"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:38:16.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:38:16.678" endtime="20200622 14:38:16.679"></status>
</kw>
<msg timestamp="20200622 14:38:16.679" level="INFO">${result} = {
  "volumeName": "62835-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-22T14:37:47.298Z",
  "modificationTime": "2020-06-22T14:37:48.694Z",
  "rep...</msg>
<status status="PASS" starttime="20200622 14:38:14.715" endtime="20200622 14:38:16.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200622 14:38:16.679" endtime="20200622 14:38:16.679"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:38:16.683" level="INFO">Running command 'ozone sh key list o3:///62835-rpcwport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:38:18.571" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:38:18.571" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200622 14:38:16.680" endtime="20200622 14:38:18.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:38:18.572" level="INFO">key1</msg>
<status status="PASS" starttime="20200622 14:38:18.572" endtime="20200622 14:38:18.572"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:38:18.573" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:38:18.573" endtime="20200622 14:38:18.573"></status>
</kw>
<msg timestamp="20200622 14:38:18.573" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200622 14:38:16.679" endtime="20200622 14:38:18.573"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200622 14:38:18.573" endtime="20200622 14:38:18.574"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:38:18.577" level="INFO">Running command 'ozone sh key rename o3:///62835-rpcwport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:38:20.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:38:20.089" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:38:18.575" endtime="20200622 14:38:20.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:38:20.090" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:38:20.089" endtime="20200622 14:38:20.090"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:38:20.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:38:20.090" endtime="20200622 14:38:20.091"></status>
</kw>
<status status="PASS" starttime="20200622 14:38:18.574" endtime="20200622 14:38:20.091"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:38:20.094" level="INFO">Running command 'ozone sh key list o3:///62835-rpcwport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:38:21.891" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:38:21.891" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200622 14:38:20.091" endtime="20200622 14:38:21.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:38:21.892" level="INFO">key2</msg>
<status status="PASS" starttime="20200622 14:38:21.892" endtime="20200622 14:38:21.893"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:38:21.893" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:38:21.893" endtime="20200622 14:38:21.893"></status>
</kw>
<msg timestamp="20200622 14:38:21.893" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200622 14:38:20.091" endtime="20200622 14:38:21.893"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200622 14:38:21.893" endtime="20200622 14:38:21.894"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:38:21.898" level="INFO">Running command 'ozone sh key delete o3:///62835-rpcwport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:38:23.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:38:23.425" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:38:21.895" endtime="20200622 14:38:23.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:38:23.426" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:38:23.426" endtime="20200622 14:38:23.426"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:38:23.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:38:23.427" endtime="20200622 14:38:23.427"></status>
</kw>
<status status="PASS" starttime="20200622 14:38:21.894" endtime="20200622 14:38:23.427"></status>
</kw>
<status status="PASS" starttime="20200622 14:37:45.724" endtime="20200622 14:38:23.427"></status>
</kw>
<status status="PASS" starttime="20200622 14:37:45.724" endtime="20200622 14:38:23.427"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:38:23.431" level="INFO">Running command 'ozone sh bucket delete o3:///62835-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:38:24.952" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:38:24.953" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:38:23.428" endtime="20200622 14:38:24.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:38:24.954" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:38:24.953" endtime="20200622 14:38:24.954"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:38:24.954" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:38:24.954" endtime="20200622 14:38:24.954"></status>
</kw>
<status status="PASS" starttime="20200622 14:38:23.428" endtime="20200622 14:38:24.954"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:38:24.958" level="INFO">Running command 'ozone sh volume delete o3:///62835-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:38:26.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:38:26.648" level="INFO">${output} = Volume 62835-rpcwport is deleted</msg>
<status status="PASS" starttime="20200622 14:38:24.955" endtime="20200622 14:38:26.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:38:26.649" level="INFO">Volume 62835-rpcwport is deleted</msg>
<status status="PASS" starttime="20200622 14:38:26.648" endtime="20200622 14:38:26.649"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:38:26.649" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:38:26.649" endtime="20200622 14:38:26.649"></status>
</kw>
<status status="PASS" starttime="20200622 14:38:24.955" endtime="20200622 14:38:26.650"></status>
</kw>
<status status="PASS" starttime="20200622 14:37:29.745" endtime="20200622 14:38:26.650"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200622 14:37:29.743" endtime="20200622 14:38:26.650" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200622 14:38:26.652" endtime="20200622 14:38:26.652"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:38:26.655" level="INFO">Running command 'ozone sh volume info /62835-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:38:28.166" level="INFO">${rc} = 255</msg>
<msg timestamp="20200622 14:38:28.166" level="INFO">${output} = VOLUME_NOT_FOUND Volume 62835-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200622 14:38:26.653" endtime="20200622 14:38:28.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:38:28.167" level="INFO">VOLUME_NOT_FOUND Volume 62835-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200622 14:38:28.167" endtime="20200622 14:38:28.168"></status>
</kw>
<msg timestamp="20200622 14:38:28.168" level="INFO">${result} = VOLUME_NOT_FOUND Volume 62835-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200622 14:38:26.653" endtime="20200622 14:38:28.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200622 14:38:28.168" endtime="20200622 14:38:28.168"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:38:28.171" level="INFO">Running command 'ozone sh volume create /62835-rpcwoscheme --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:38:29.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:38:29.880" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:38:28.169" endtime="20200622 14:38:29.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:38:29.881" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:38:29.880" endtime="20200622 14:38:29.881"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:38:29.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:38:29.881" endtime="20200622 14:38:29.882"></status>
</kw>
<msg timestamp="20200622 14:38:29.882" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200622 14:38:28.168" endtime="20200622 14:38:29.882"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200622 14:38:29.882" endtime="20200622 14:38:29.882"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:38:29.885" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="62835-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:38:31.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:38:31.687" level="INFO">${output} = {
  "metadata": {},
  "name": "62835-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-22T14:38:29.764Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200622 14:38:29.883" endtime="20200622 14:38:31.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:38:31.689" level="INFO">{
  "metadata": {},
  "name": "62835-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-22T14:38:29.764Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200622 14:38:31.688" endtime="20200622 14:38:31.689"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:38:31.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:38:31.689" endtime="20200622 14:38:31.690"></status>
</kw>
<msg timestamp="20200622 14:38:31.690" level="INFO">${result} = {
  "metadata": {},
  "name": "62835-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-22T14:38:29.764Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200622 14:38:29.882" endtime="20200622 14:38:31.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200622 14:38:31.690" endtime="20200622 14:38:31.690"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:38:31.693" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="62835-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:38:33.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:38:33.465" level="INFO">${output} = {
  "metadata": {},
  "name": "62835-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-22T14:38:29.764Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200622 14:38:31.691" endtime="20200622 14:38:33.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:38:33.466" level="INFO">{
  "metadata": {},
  "name": "62835-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-22T14:38:29.764Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200622 14:38:33.465" endtime="20200622 14:38:33.466"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:38:33.467" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:38:33.467" endtime="20200622 14:38:33.467"></status>
</kw>
<msg timestamp="20200622 14:38:33.467" level="INFO">${result} = {
  "metadata": {},
  "name": "62835-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-22T14:38:29.764Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200622 14:38:31.691" endtime="20200622 14:38:33.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200622 14:38:33.467" endtime="20200622 14:38:33.468"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:38:33.472" level="INFO">Running command 'ozone sh volume update /62835-rpcwoscheme --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:38:35.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:38:35.289" level="INFO">${output} = {
  "metadata" : { },
  "name" : "62835-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-22T14:38:29.764Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoo...</msg>
<status status="PASS" starttime="20200622 14:38:33.468" endtime="20200622 14:38:35.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:38:35.290" level="INFO">{
  "metadata" : { },
  "name" : "62835-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-22T14:38:29.764Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200622 14:38:35.289" endtime="20200622 14:38:35.290"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:38:35.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:38:35.290" endtime="20200622 14:38:35.290"></status>
</kw>
<status status="PASS" starttime="20200622 14:38:33.468" endtime="20200622 14:38:35.291"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:38:35.294" level="INFO">Running command 'ozone sh volume info /62835-rpcwoscheme | jq -r '. | select(.name=="62835-rpcwoscheme") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:38:37.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:38:37.197" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200622 14:38:35.291" endtime="20200622 14:38:37.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:38:37.198" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200622 14:38:37.197" endtime="20200622 14:38:37.198"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:38:37.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:38:37.198" endtime="20200622 14:38:37.199"></status>
</kw>
<msg timestamp="20200622 14:38:37.199" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200622 14:38:35.291" endtime="20200622 14:38:37.199"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200622 14:38:37.199" endtime="20200622 14:38:37.199"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:38:37.203" level="INFO">Running command 'ozone sh bucket create /62835-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:38:38.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:38:38.898" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:38:37.200" endtime="20200622 14:38:38.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:38:38.899" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:38:38.898" endtime="20200622 14:38:38.899"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:38:38.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:38:38.899" endtime="20200622 14:38:38.900"></status>
</kw>
<status status="PASS" starttime="20200622 14:38:37.200" endtime="20200622 14:38:38.900"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:38:38.904" level="INFO">Running command 'ozone sh bucket info /62835-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:38:40.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:38:40.807" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200622 14:38:38.900" endtime="20200622 14:38:40.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:38:40.808" level="INFO">DISK</msg>
<status status="PASS" starttime="20200622 14:38:40.807" endtime="20200622 14:38:40.808"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:38:40.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:38:40.808" endtime="20200622 14:38:40.809"></status>
</kw>
<msg timestamp="20200622 14:38:40.809" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200622 14:38:38.900" endtime="20200622 14:38:40.809"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200622 14:38:40.809" endtime="20200622 14:38:40.809"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:38:40.813" level="INFO">Running command 'ozone sh bucket list /62835-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:38:42.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:38:42.661" level="INFO">${output} = 62835-rpcwoscheme</msg>
<status status="PASS" starttime="20200622 14:38:40.810" endtime="20200622 14:38:42.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:38:42.662" level="INFO">62835-rpcwoscheme</msg>
<status status="PASS" starttime="20200622 14:38:42.661" endtime="20200622 14:38:42.662"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:38:42.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:38:42.662" endtime="20200622 14:38:42.663"></status>
</kw>
<msg timestamp="20200622 14:38:42.663" level="INFO">${result} = 62835-rpcwoscheme</msg>
<status status="PASS" starttime="20200622 14:38:40.809" endtime="20200622 14:38:42.663"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200622 14:38:42.663" endtime="20200622 14:38:42.663"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:38:42.668" level="INFO">Running command 'ozone sh key put /62835-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:38:45.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:38:45.886" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:38:42.665" endtime="20200622 14:38:45.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:38:45.887" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:38:45.887" endtime="20200622 14:38:45.887"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:38:45.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:38:45.888" endtime="20200622 14:38:45.888"></status>
</kw>
<status status="PASS" starttime="20200622 14:38:42.664" endtime="20200622 14:38:45.888"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:38:45.891" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:38:45.893" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:38:45.893" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:38:45.889" endtime="20200622 14:38:45.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:38:45.894" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:38:45.893" endtime="20200622 14:38:45.894"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:38:45.895" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:38:45.894" endtime="20200622 14:38:45.895"></status>
</kw>
<status status="PASS" starttime="20200622 14:38:45.888" endtime="20200622 14:38:45.895"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:38:45.897" level="INFO">Running command 'ozone sh key get /62835-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:38:49.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:38:49.260" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:38:45.895" endtime="20200622 14:38:49.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:38:49.261" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:38:49.260" endtime="20200622 14:38:49.261"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:38:49.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:38:49.261" endtime="20200622 14:38:49.262"></status>
</kw>
<status status="PASS" starttime="20200622 14:38:45.895" endtime="20200622 14:38:49.262"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:38:49.266" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:38:49.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:38:49.267" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:38:49.262" endtime="20200622 14:38:49.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:38:49.268" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:38:49.267" endtime="20200622 14:38:49.268"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:38:49.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:38:49.268" endtime="20200622 14:38:49.268"></status>
</kw>
<status status="PASS" starttime="20200622 14:38:49.262" endtime="20200622 14:38:49.268"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:38:49.271" level="INFO">Running command 'ozone sh key put -t RATIS /62835-rpcwoscheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:38:52.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:38:52.692" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:38:49.269" endtime="20200622 14:38:52.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:38:52.694" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:38:52.693" endtime="20200622 14:38:52.694"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:38:52.694" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:38:52.694" endtime="20200622 14:38:52.694"></status>
</kw>
<status status="PASS" starttime="20200622 14:38:49.269" endtime="20200622 14:38:52.695"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:38:52.697" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:38:52.700" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:38:52.700" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:38:52.695" endtime="20200622 14:38:52.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:38:52.701" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:38:52.700" endtime="20200622 14:38:52.701"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:38:52.701" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:38:52.701" endtime="20200622 14:38:52.701"></status>
</kw>
<status status="PASS" starttime="20200622 14:38:52.695" endtime="20200622 14:38:52.701"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:38:52.704" level="INFO">Running command 'ozone sh key get /62835-rpcwoscheme/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:38:55.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:38:55.566" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:38:52.702" endtime="20200622 14:38:55.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:38:55.568" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:38:55.567" endtime="20200622 14:38:55.568"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:38:55.568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:38:55.568" endtime="20200622 14:38:55.568"></status>
</kw>
<status status="PASS" starttime="20200622 14:38:52.702" endtime="20200622 14:38:55.569"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:38:55.571" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:38:55.573" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:38:55.573" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:38:55.569" endtime="20200622 14:38:55.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:38:55.574" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:38:55.574" endtime="20200622 14:38:55.574"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:38:55.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:38:55.574" endtime="20200622 14:38:55.575"></status>
</kw>
<status status="PASS" starttime="20200622 14:38:55.569" endtime="20200622 14:38:55.575"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:38:55.578" level="INFO">Running command 'ozone sh key info /62835-rpcwoscheme/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:38:57.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:38:57.387" level="INFO">${output} = {
  "volumeName": "62835-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-22T14:38:50.967Z",
  "modificationTime": "2020-06-22T14:38:52.252Z...</msg>
<status status="PASS" starttime="20200622 14:38:55.576" endtime="20200622 14:38:57.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:38:57.388" level="INFO">{
  "volumeName": "62835-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-22T14:38:50.967Z",
  "modificationTime": "2020-06-22T14:38:52.252Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104388148000587900,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200622 14:38:57.387" endtime="20200622 14:38:57.388"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:38:57.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:38:57.388" endtime="20200622 14:38:57.389"></status>
</kw>
<msg timestamp="20200622 14:38:57.389" level="INFO">${result} = {
  "volumeName": "62835-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-22T14:38:50.967Z",
  "modificationTime": "2020-06-22T14:38:52.252Z...</msg>
<status status="PASS" starttime="20200622 14:38:55.575" endtime="20200622 14:38:57.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200622 14:38:57.389" endtime="20200622 14:38:57.390"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:38:57.393" level="INFO">Running command 'ozone sh key delete /62835-rpcwoscheme/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:38:58.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:38:58.992" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:38:57.390" endtime="20200622 14:38:58.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:38:58.993" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:38:58.992" endtime="20200622 14:38:58.993"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:38:58.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:38:58.993" endtime="20200622 14:38:58.993"></status>
</kw>
<status status="PASS" starttime="20200622 14:38:57.390" endtime="20200622 14:38:58.994"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:38:58.997" level="INFO">Running command 'ozone sh key cp /62835-rpcwoscheme/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:39:02.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:39:02.294" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:38:58.994" endtime="20200622 14:39:02.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:39:02.295" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:39:02.294" endtime="20200622 14:39:02.295"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:39:02.295" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:39:02.295" endtime="20200622 14:39:02.296"></status>
</kw>
<status status="PASS" starttime="20200622 14:38:58.994" endtime="20200622 14:39:02.296"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:39:02.298" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:39:02.301" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:39:02.301" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:39:02.296" endtime="20200622 14:39:02.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:39:02.302" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:39:02.301" endtime="20200622 14:39:02.302"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:39:02.303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:39:02.302" endtime="20200622 14:39:02.303"></status>
</kw>
<status status="PASS" starttime="20200622 14:39:02.296" endtime="20200622 14:39:02.303"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:39:02.307" level="INFO">Running command 'ozone sh key get /62835-rpcwoscheme/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:39:05.629" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:39:05.629" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:39:02.304" endtime="20200622 14:39:05.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:39:05.631" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:39:05.630" endtime="20200622 14:39:05.631"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:39:05.631" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:39:05.631" endtime="20200622 14:39:05.631"></status>
</kw>
<status status="PASS" starttime="20200622 14:39:02.303" endtime="20200622 14:39:05.632"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:39:05.635" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:39:05.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:39:05.638" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:39:05.632" endtime="20200622 14:39:05.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:39:05.639" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:39:05.639" endtime="20200622 14:39:05.640"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:39:05.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:39:05.640" endtime="20200622 14:39:05.640"></status>
</kw>
<status status="PASS" starttime="20200622 14:39:05.632" endtime="20200622 14:39:05.640"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:39:05.644" level="INFO">Running command 'ozone sh key delete /62835-rpcwoscheme/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:39:07.430" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:39:07.430" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:39:05.641" endtime="20200622 14:39:07.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:39:07.431" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:39:07.430" endtime="20200622 14:39:07.431"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:39:07.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:39:07.431" endtime="20200622 14:39:07.432"></status>
</kw>
<status status="PASS" starttime="20200622 14:39:05.641" endtime="20200622 14:39:07.432"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:39:07.436" level="INFO">Running command 'ozone sh key get /62835-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:39:08.953" level="INFO">${rc} = 255</msg>
<msg timestamp="20200622 14:39:08.953" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200622 14:39:07.433" endtime="20200622 14:39:08.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:39:08.954" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200622 14:39:08.953" endtime="20200622 14:39:08.954"></status>
</kw>
<msg timestamp="20200622 14:39:08.954" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200622 14:39:07.432" endtime="20200622 14:39:08.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200622 14:39:08.954" endtime="20200622 14:39:08.955"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:39:08.958" level="INFO">Running command 'ozone sh key get --force /62835-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:39:11.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:39:11.972" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:39:08.956" endtime="20200622 14:39:11.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:39:11.973" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:39:11.972" endtime="20200622 14:39:11.973"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:39:11.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:39:11.973" endtime="20200622 14:39:11.973"></status>
</kw>
<msg timestamp="20200622 14:39:11.974" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200622 14:39:08.955" endtime="20200622 14:39:11.974"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200622 14:39:11.974" endtime="20200622 14:39:11.974"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:39:11.977" level="INFO">Running command 'ozone sh key info /62835-rpcwoscheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:39:13.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:39:13.890" level="INFO">${output} = {
  "volumeName": "62835-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-22T14:38:44.227Z",
  "modificationTime": "2020-06-22T14:38:45.538Z",
  "...</msg>
<status status="PASS" starttime="20200622 14:39:11.975" endtime="20200622 14:39:13.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:39:13.891" level="INFO">{
  "volumeName": "62835-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-22T14:38:44.227Z",
  "modificationTime": "2020-06-22T14:38:45.538Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104388147558940800,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200622 14:39:13.890" endtime="20200622 14:39:13.891"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:39:13.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:39:13.891" endtime="20200622 14:39:13.892"></status>
</kw>
<msg timestamp="20200622 14:39:13.892" level="INFO">${result} = {
  "volumeName": "62835-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-22T14:38:44.227Z",
  "modificationTime": "2020-06-22T14:38:45.538Z",
  "...</msg>
<status status="PASS" starttime="20200622 14:39:11.974" endtime="20200622 14:39:13.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200622 14:39:13.892" endtime="20200622 14:39:13.892"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:39:13.896" level="INFO">Running command 'ozone sh key list /62835-rpcwoscheme/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:39:15.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:39:15.748" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200622 14:39:13.893" endtime="20200622 14:39:15.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:39:15.749" level="INFO">key1</msg>
<status status="PASS" starttime="20200622 14:39:15.748" endtime="20200622 14:39:15.749"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:39:15.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:39:15.749" endtime="20200622 14:39:15.750"></status>
</kw>
<msg timestamp="20200622 14:39:15.750" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200622 14:39:13.892" endtime="20200622 14:39:15.750"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200622 14:39:15.750" endtime="20200622 14:39:15.751"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:39:15.754" level="INFO">Running command 'ozone sh key rename /62835-rpcwoscheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:39:17.428" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:39:17.428" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:39:15.751" endtime="20200622 14:39:17.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:39:17.429" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:39:17.429" endtime="20200622 14:39:17.429"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:39:17.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:39:17.429" endtime="20200622 14:39:17.430"></status>
</kw>
<status status="PASS" starttime="20200622 14:39:15.751" endtime="20200622 14:39:17.430"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:39:17.434" level="INFO">Running command 'ozone sh key list /62835-rpcwoscheme/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:39:19.246" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:39:19.246" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200622 14:39:17.431" endtime="20200622 14:39:19.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:39:19.247" level="INFO">key2</msg>
<status status="PASS" starttime="20200622 14:39:19.246" endtime="20200622 14:39:19.247"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:39:19.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:39:19.247" endtime="20200622 14:39:19.248"></status>
</kw>
<msg timestamp="20200622 14:39:19.248" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200622 14:39:17.430" endtime="20200622 14:39:19.248"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200622 14:39:19.248" endtime="20200622 14:39:19.249"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:39:19.251" level="INFO">Running command 'ozone sh key delete /62835-rpcwoscheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:39:20.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:39:20.937" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:39:19.249" endtime="20200622 14:39:20.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:39:20.938" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:39:20.937" endtime="20200622 14:39:20.938"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:39:20.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:39:20.938" endtime="20200622 14:39:20.938"></status>
</kw>
<status status="PASS" starttime="20200622 14:39:19.249" endtime="20200622 14:39:20.939"></status>
</kw>
<status status="PASS" starttime="20200622 14:38:42.664" endtime="20200622 14:39:20.939"></status>
</kw>
<status status="PASS" starttime="20200622 14:38:42.663" endtime="20200622 14:39:20.939"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:39:20.943" level="INFO">Running command 'ozone sh bucket delete /62835-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:39:22.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:39:22.638" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200622 14:39:20.939" endtime="20200622 14:39:22.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:39:22.640" level="INFO"></msg>
<status status="PASS" starttime="20200622 14:39:22.639" endtime="20200622 14:39:22.640"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:39:22.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:39:22.640" endtime="20200622 14:39:22.640"></status>
</kw>
<status status="PASS" starttime="20200622 14:39:20.939" endtime="20200622 14:39:22.641"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:39:22.644" level="INFO">Running command 'ozone sh volume delete /62835-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:39:24.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:39:24.331" level="INFO">${output} = Volume 62835-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200622 14:39:22.641" endtime="20200622 14:39:24.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:39:24.332" level="INFO">Volume 62835-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200622 14:39:24.331" endtime="20200622 14:39:24.332"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:39:24.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:39:24.332" endtime="20200622 14:39:24.333"></status>
</kw>
<status status="PASS" starttime="20200622 14:39:22.641" endtime="20200622 14:39:24.333"></status>
</kw>
<status status="PASS" starttime="20200622 14:38:26.652" endtime="20200622 14:39:24.333"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200622 14:38:26.650" endtime="20200622 14:39:24.333" critical="yes"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20200622 14:35:45.866" endtime="20200622 14:39:24.335"></status>
</suite>
<status status="PASS" starttime="20200622 14:34:37.911" endtime="20200622 14:39:24.339"></status>
</suite>
<statistics>
<total>
<stat pass="8" fail="0">Critical Tests</stat>
<stat pass="8" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="8" fail="0" id="s1" name="ozone-basic">ozone-basic</stat>
<stat pass="2" fail="0" id="s1-s1" name="Basic">ozone-basic.Basic</stat>
<stat pass="6" fail="0" id="s1-s2" name="Ozone-Shell">ozone-basic.Ozone-Shell</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
