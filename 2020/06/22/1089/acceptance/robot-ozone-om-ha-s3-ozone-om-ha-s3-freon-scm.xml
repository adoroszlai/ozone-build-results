<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200622 14:29:59.850" rpa="false">
<suite id="s1" name="ozone-om-ha-s3-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:29:59.904" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:30:07.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:30:07.273" level="INFO">${output} = 2020-06-22 14:30:00,872 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-22 14:30:01,048 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200622 14:29:59.900" endtime="20200622 14:30:07.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:30:07.274" level="INFO">2020-06-22 14:30:00,872 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-22 14:30:01,048 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-22 14:30:01,048 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-22 14:30:01,822 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-06-22 14:30:01,823 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-06-22 14:30:01,823 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-06-22 14:30:01,823 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-06-22 14:30:01,823 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-06-22 14:30:01,823 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-22 14:30:01,823 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-06-22 14:30:01,825 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-22 14:30:01,845 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-22 14:30:01,867 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-52164, with hadoop as owner.
2020-06-22 14:30:01,902 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-52164/bucket-0-35711, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-22 14:30:02,408 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-22 14:30:02,850 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,059
Average Time spent in bucket creation: 00:00:00,019
Average Time spent in key creation: 00:00:00,056
Average Time spent in key write: 00:00:00,604
Total bytes written: 10240
Total Execution time: 00:00:05,698
***************************************************</msg>
<status status="PASS" starttime="20200622 14:30:07.274" endtime="20200622 14:30:07.274"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:30:07.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:30:07.274" endtime="20200622 14:30:07.275"></status>
</kw>
<msg timestamp="20200622 14:30:07.275" level="INFO">${result} = 2020-06-22 14:30:00,872 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-22 14:30:01,048 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200622 14:29:59.899" endtime="20200622 14:30:07.275"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200622 14:30:07.276" endtime="20200622 14:30:07.276"></status>
</kw>
<status status="PASS" starttime="20200622 14:30:07.275" endtime="20200622 14:30:07.276"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200622 14:29:59.899" endtime="20200622 14:30:07.276" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:30:07.280" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:30:11.583" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:30:11.583" level="INFO">${output} = 2020-06-22 14:30:08,137 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-22 14:30:08,283 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200622 14:30:07.278" endtime="20200622 14:30:11.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:30:11.585" level="INFO">2020-06-22 14:30:08,137 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-22 14:30:08,283 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-22 14:30:08,283 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-22 14:30:08,484 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ynfk9jjew9
2020-06-22 14:30:08,518 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-22 14:30:09,077 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-06-22 14:30:09,108 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-22 14:30:09,519 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-22 14:30:09,639 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-22 14:30:10,519 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-22 14:30:11,254 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=1321.873149, max=1321.873149, mean=1321.873149, stddev=0.0, median=1321.873149, p75=1321.873149, p95=1321.873149, p98=1321.873149, p99=1321.873149, p999=1321.873149, mean_rate=0.4711360163827788, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-22 14:30:11,255 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-06-22 14:30:11,255 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-22 14:30:11,255 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200622 14:30:11.584" endtime="20200622 14:30:11.585"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:30:11.585" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:30:11.585" endtime="20200622 14:30:11.585"></status>
</kw>
<msg timestamp="20200622 14:30:11.586" level="INFO">${result} = 2020-06-22 14:30:08,137 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-22 14:30:08,283 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200622 14:30:07.278" endtime="20200622 14:30:11.586"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200622 14:30:11.586" endtime="20200622 14:30:11.587"></status>
</kw>
<status status="PASS" starttime="20200622 14:30:11.586" endtime="20200622 14:30:11.587"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200622 14:30:07.277" endtime="20200622 14:30:11.587" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:30:11.591" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:30:14.499" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:30:14.499" level="INFO">${output} = 2020-06-22 14:30:12,486 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-22 14:30:12,649 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200622 14:30:11.588" endtime="20200622 14:30:14.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:30:14.500" level="INFO">2020-06-22 14:30:12,486 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-22 14:30:12,649 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-22 14:30:12,649 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-22 14:30:12,840 [main] INFO freon.BaseFreonGenerator: Executing test with prefix li2gwoiyab
2020-06-22 14:30:12,856 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-22 14:30:13,863 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-22 14:30:14,483 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=56.563593, max=56.563593, mean=56.563593, stddev=0.0, median=56.563593, p75=56.563593, p95=56.563593, p98=56.563593, p99=56.563593, p999=56.563593, mean_rate=0.8960421920318846, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-22 14:30:14,484 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-06-22 14:30:14,484 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-22 14:30:14,484 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200622 14:30:14.499" endtime="20200622 14:30:14.500"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:30:14.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:30:14.500" endtime="20200622 14:30:14.501"></status>
</kw>
<msg timestamp="20200622 14:30:14.501" level="INFO">${result} = 2020-06-22 14:30:12,486 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-22 14:30:12,649 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200622 14:30:11.588" endtime="20200622 14:30:14.501"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200622 14:30:14.502" endtime="20200622 14:30:14.502"></status>
</kw>
<status status="PASS" starttime="20200622 14:30:14.501" endtime="20200622 14:30:14.502"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200622 14:30:11.587" endtime="20200622 14:30:14.503" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200622 14:30:14.507" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 14:30:17.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20200622 14:30:17.492" level="INFO">${output} = 2020-06-22 14:30:15,472 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-22 14:30:15,652 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200622 14:30:14.505" endtime="20200622 14:30:17.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200622 14:30:17.493" level="INFO">2020-06-22 14:30:15,472 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-22 14:30:15,652 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-22 14:30:15,652 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-22 14:30:15,824 [main] INFO freon.BaseFreonGenerator: Executing test with prefix fdkehvzmsy
2020-06-22 14:30:15,839 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-22 14:30:16,844 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-22 14:30:17,481 [Thread-2] INFO metrics: type=TIMER, name=bucket-create, count=1, min=15.356465, max=15.356465, mean=15.356465, stddev=0.0, median=15.356465, p75=15.356465, p95=15.356465, p98=15.356465, p99=15.356465, p999=15.356465, mean_rate=0.901036517449457, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-22 14:30:17,482 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-06-22 14:30:17,483 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-22 14:30:17,483 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200622 14:30:17.492" endtime="20200622 14:30:17.493"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200622 14:30:17.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200622 14:30:17.493" endtime="20200622 14:30:17.493"></status>
</kw>
<msg timestamp="20200622 14:30:17.494" level="INFO">${result} = 2020-06-22 14:30:15,472 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-22 14:30:15,652 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200622 14:30:14.504" endtime="20200622 14:30:17.494"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200622 14:30:17.494" endtime="20200622 14:30:17.494"></status>
</kw>
<status status="PASS" starttime="20200622 14:30:17.494" endtime="20200622 14:30:17.495"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200622 14:30:14.504" endtime="20200622 14:30:17.495" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200622 14:29:59.877" endtime="20200622 14:30:17.496"></status>
</suite>
<status status="PASS" starttime="20200622 14:29:59.851" endtime="20200622 14:30:17.499"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-om-ha-s3-freon">ozone-om-ha-s3-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-om-ha-s3-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
