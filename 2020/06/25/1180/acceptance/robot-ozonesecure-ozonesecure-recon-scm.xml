<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200625 11:48:27.141" rpa="false">
<suite id="s1" name="ozonesecure-recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s1-t1" name="Generate Freon data">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:48:27.191" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:48:27.192" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:48:27.192" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200625 11:48:27.186" endtime="20200625 11:48:27.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:48:27.193" level="INFO">scm</msg>
<status status="PASS" starttime="20200625 11:48:27.192" endtime="20200625 11:48:27.193"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:48:27.193" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:48:27.193" endtime="20200625 11:48:27.193"></status>
</kw>
<msg timestamp="20200625 11:48:27.194" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200625 11:48:27.186" endtime="20200625 11:48:27.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200625 11:48:27.195" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200625 11:48:27.194" endtime="20200625 11:48:27.195"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:48:27.199" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:48:27.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:48:27.214" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:48:27.196" endtime="20200625 11:48:27.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:48:27.215" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:48:27.214" endtime="20200625 11:48:27.215"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:48:27.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:48:27.215" endtime="20200625 11:48:27.216"></status>
</kw>
<status status="PASS" starttime="20200625 11:48:27.195" endtime="20200625 11:48:27.216"></status>
</kw>
<status status="PASS" starttime="20200625 11:48:27.195" endtime="20200625 11:48:27.216"></status>
</kw>
<status status="PASS" starttime="20200625 11:48:27.185" endtime="20200625 11:48:27.216"></status>
</kw>
<status status="PASS" starttime="20200625 11:48:27.185" endtime="20200625 11:48:27.216"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:48:27.219" level="INFO">Running command 'ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:48:34.862" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:48:34.862" level="INFO">${output} = 2020-06-25 11:48:28,097 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-25 11:48:28,272 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200625 11:48:27.217" endtime="20200625 11:48:34.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:48:34.863" level="INFO">2020-06-25 11:48:28,097 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-25 11:48:28,272 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-25 11:48:28,272 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-06-25 11:48:29,317 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2020-06-25 11:48:29,318 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-06-25 11:48:29,318 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-06-25 11:48:29,318 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 10.
2020-06-25 11:48:29,318 [main] INFO freon.RandomKeyGenerator: Key size: 1025 bytes
2020-06-25 11:48:29,318 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-25 11:48:29,318 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-06-25 11:48:29,326 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-25 11:48:29,342 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2020-06-25 11:48:29,357 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-77591, with testuser/scm@EXAMPLE.COM as owner.
2020-06-25 11:48:29,378 [pool-2-thread-2] INFO rpc.RpcClient: Creating Bucket: vol-0-77591/bucket-0-45636, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-25 11:48:29,810 [pool-2-thread-6] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-25 11:48:30,343 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 10
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,003
Average Time spent in bucket creation: 00:00:00,000
Average Time spent in key creation: 00:00:00,081
Average Time spent in key write: 00:00:00,448
Total bytes written: 10250
Total Execution time: 00:00:06,021
***************************************************</msg>
<status status="PASS" starttime="20200625 11:48:34.863" endtime="20200625 11:48:34.863"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:48:34.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:48:34.863" endtime="20200625 11:48:34.864"></status>
</kw>
<status status="PASS" starttime="20200625 11:48:27.216" endtime="20200625 11:48:34.864"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200625 11:48:27.184" endtime="20200625 11:48:34.864" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Check if Recon picks up OM data">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
</arguments>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:48:34.869" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:48:34.871" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:48:34.872" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200625 11:48:34.867" endtime="20200625 11:48:34.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:48:34.873" level="INFO">scm</msg>
<status status="PASS" starttime="20200625 11:48:34.872" endtime="20200625 11:48:34.873"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:48:34.874" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:48:34.873" endtime="20200625 11:48:34.874"></status>
</kw>
<msg timestamp="20200625 11:48:34.874" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200625 11:48:34.867" endtime="20200625 11:48:34.874"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:48:34.878" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:48:34.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:48:34.894" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:48:34.875" endtime="20200625 11:48:34.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:48:34.895" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:48:34.895" endtime="20200625 11:48:34.895"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:48:34.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:48:34.896" endtime="20200625 11:48:34.896"></status>
</kw>
<status status="PASS" starttime="20200625 11:48:34.874" endtime="20200625 11:48:34.896"></status>
</kw>
<status status="PASS" starttime="20200625 11:48:34.874" endtime="20200625 11:48:34.896"></status>
</kw>
<status status="PASS" starttime="20200625 11:48:34.867" endtime="20200625 11:48:34.896"></status>
</kw>
<status status="PASS" starttime="20200625 11:48:34.866" endtime="20200625 11:48:34.896"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:48:34.900" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:48:35.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:48:35.054" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200625 11:48:34.897" endtime="20200625 11:48:35.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:48:35.055" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.4...
* Connected to recon (172.26.0.4) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 25 Jun 2020 11:48:34 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 25 Jun 2020 11:48:34 GMT
&lt; Date: Thu, 25 Jun 2020 11:48:34 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0    515      0 --:--:-- --:--:-- --:--:--   516
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":146}]}}</msg>
<status status="PASS" starttime="20200625 11:48:35.054" endtime="20200625 11:48:35.055"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:48:35.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:48:35.055" endtime="20200625 11:48:35.056"></status>
</kw>
<msg timestamp="20200625 11:48:35.056" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200625 11:48:34.896" endtime="20200625 11:48:35.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200625 11:48:35.056" endtime="20200625 11:48:35.057"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:48:35.060" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:48:35.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:48:35.082" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200625 11:48:35.057" endtime="20200625 11:48:35.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:48:35.083" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.4...
* Connected to recon (172.26.0.4) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 25 Jun 2020 11:48:35 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 25 Jun 2020 11:48:35 GMT
&lt; Date: Thu, 25 Jun 2020 11:48:35 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3066
&lt; 
{ [data not shown]

100  3066  100  3066    0     0   184k      0 --:--:-- --:--:-- --:--:--  187k
* Connection #0 to host recon left intact
[{"volume":"vol-2-24619","bucket":"bucket-4-09992","fileSize":16384,"count":5},{"volume":"vol-4-95196","bucket":"bucket-3-45927","fileSize":16384,"count":5},{"volume":"vol-2-24619","bucket":"bucket-1-65676","fileSize":16384,"count":5},{"volume":"vol-3-15969","bucket":"bucket-4-26459","fileSize":16384,"count":5},{"volume":"vol-1-61296","bucket":"bucket-2-73789","fileSize":16384,"count":5},{"volume":"vol-3-15969","bucket":"bucket-3-93980","fileSize":16384,"count":5},{"volume":"vol-0-09211","bucket":"bucket-2-82488","fileSize":16384,"count":5},{"volume":"vol-4-95196","bucket":"bucket-1-01456","fileSize":16384,"count":5},{"volume":"vol-3-15969","bucket":"bucket-0-75634","fileSize":16384,"count":5},{"volume":"vol-0-09211","bucket":"bucket-4-76434","fileSize":16384,"count":5},{"volume":"vol-1-61296","bucket":"bucket-0-55524","fileSize":16384,"count":5},{"volume":"vol-4-95196","bucket":"bucket-0-43590","fileSize":16384,"count":5},{"volume":"vol-2-24619","bucket":"bucket-3-84983","fileSize":16384,"count":5},{"volume":"vol-3-15969","bucket":"bucket-1-19306","fileSize":16384,"count":5},{"volume":"vol-3-15969","bucket":"bucket-2-02808","fileSize":16384,"count":5},{"volume":"vol-4-95196","bucket":"bucket-4-15819","fileSize":16384,"count":5},{"volume":"vol-1-61296","bucket":"bucket-1-46977","fileSize":16384,"count":5},{"volume":"vol-1-61296","bucket":"bucket-3-25638","fileSize":16384,"count":5},{"volume":"vol-0-09211","bucket":"bucket-0-30443","fileSize":16384,"count":5},{"volume":"vol-4-95196","bucket":"bucket-2-20826","fileSize":16384,"count":5},{"volume":"vol-2-24619","bucket":"bucket-2-82105","fileSize":16384,"count":5},{"volume":"vol-1-61296","bucket":"bucket-4-88991","fileSize":16384,"count":5},{"volume":"vol-0-09211","bucket":"bucket-1-52975","fileSize":16384,"count":5},{"volume":"vol-2-24619","bucket":"bucket-0-18064","fileSize":16384,"count":5},{"volume":"vol-0-09211","bucket":"bucket-3-22957","fileSize":16384,"count":5},{"volume":"02927-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"02927-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"02927-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"02927-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest337","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"s3v","bucket":"bucket-61988","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-03753","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-03753","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-62261","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-34126","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-82119","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-47533","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200625 11:48:35.082" endtime="20200625 11:48:35.083"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:48:35.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:48:35.083" endtime="20200625 11:48:35.083"></status>
</kw>
<msg timestamp="20200625 11:48:35.083" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200625 11:48:35.057" endtime="20200625 11:48:35.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200625 11:48:35.084" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.4...
* Connected to recon (172.26.0.4) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 25 Jun 2020 11:48:35 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 25 Jun 2020 11:48:35 GMT
&lt; Date: Thu, 25 Jun 2020 11:48:35 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3066
&lt; 
{ [data not shown]

100  3066  100  3066    0     0   184k      0 --:--:-- --:--:-- --:--:--  187k
* Connection #0 to host recon left intact
[{"volume":"vol-2-24619","bucket":"bucket-4-09992","fileSize":16384,"count":5},{"volume":"vol-4-95196","bucket":"bucket-3-45927","fileSize":16384,"count":5},{"volume":"vol-2-24619","bucket":"bucket-1-65676","fileSize":16384,"count":5},{"volume":"vol-3-15969","bucket":"bucket-4-26459","fileSize":16384,"count":5},{"volume":"vol-1-61296","bucket":"bucket-2-73789","fileSize":16384,"count":5},{"volume":"vol-3-15969","bucket":"bucket-3-93980","fileSize":16384,"count":5},{"volume":"vol-0-09211","bucket":"bucket-2-82488","fileSize":16384,"count":5},{"volume":"vol-4-95196","bucket":"bucket-1-01456","fileSize":16384,"count":5},{"volume":"vol-3-15969","bucket":"bucket-0-75634","fileSize":16384,"count":5},{"volume":"vol-0-09211","bucket":"bucket-4-76434","fileSize":16384,"count":5},{"volume":"vol-1-61296","bucket":"bucket-0-55524","fileSize":16384,"count":5},{"volume":"vol-4-95196","bucket":"bucket-0-43590","fileSize":16384,"count":5},{"volume":"vol-2-24619","bucket":"bucket-3-84983","fileSize":16384,"count":5},{"volume":"vol-3-15969","bucket":"bucket-1-19306","fileSize":16384,"count":5},{"volume":"vol-3-15969","bucket":"bucket-2-02808","fileSize":16384,"count":5},{"volume":"vol-4-95196","bucket":"bucket-4-15819","fileSize":16384,"count":5},{"volume":"vol-1-61296","bucket":"bucket-1-46977","fileSize":16384,"count":5},{"volume":"vol-1-61296","bucket":"bucket-3-25638","fileSize":16384,"count":5},{"volume":"vol-0-09211","bucket":"bucket-0-30443","fileSize":16384,"count":5},{"volume":"vol-4-95196","bucket":"bucket-2-20826","fileSize":16384,"count":5},{"volume":"vol-2-24619","bucket":"bucket-2-82105","fileSize":16384,"count":5},{"volume":"vol-1-61296","bucket":"bucket-4-88991","fileSize":16384,"count":5},{"volume":"vol-0-09211","bucket":"bucket-1-52975","fileSize":16384,"count":5},{"volume":"vol-2-24619","bucket":"bucket-0-18064","fileSize":16384,"count":5},{"volume":"vol-0-09211","bucket":"bucket-3-22957","fileSize":16384,"count":5},{"volume":"02927-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"02927-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"02927-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"02927-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest337","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"s3v","bucket":"bucket-61988","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-03753","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-03753","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-62261","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-34126","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-82119","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-47533","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200625 11:48:35.084" endtime="20200625 11:48:35.084"></status>
</kw>
<status status="FAIL" starttime="20200625 11:48:34.866" endtime="20200625 11:48:35.085"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:48:45.089" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:48:45.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:48:45.092" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200625 11:48:45.087" endtime="20200625 11:48:45.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:48:45.093" level="INFO">scm</msg>
<status status="PASS" starttime="20200625 11:48:45.092" endtime="20200625 11:48:45.093"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:48:45.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:48:45.093" endtime="20200625 11:48:45.093"></status>
</kw>
<msg timestamp="20200625 11:48:45.094" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200625 11:48:45.087" endtime="20200625 11:48:45.094"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:48:45.097" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:48:45.112" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:48:45.112" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:48:45.094" endtime="20200625 11:48:45.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:48:45.113" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:48:45.112" endtime="20200625 11:48:45.113"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:48:45.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:48:45.113" endtime="20200625 11:48:45.114"></status>
</kw>
<status status="PASS" starttime="20200625 11:48:45.094" endtime="20200625 11:48:45.114"></status>
</kw>
<status status="PASS" starttime="20200625 11:48:45.094" endtime="20200625 11:48:45.114"></status>
</kw>
<status status="PASS" starttime="20200625 11:48:45.086" endtime="20200625 11:48:45.114"></status>
</kw>
<status status="PASS" starttime="20200625 11:48:45.086" endtime="20200625 11:48:45.114"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:48:45.116" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:48:45.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:48:45.130" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200625 11:48:45.115" endtime="20200625 11:48:45.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:48:45.131" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.4...
* Connected to recon (172.26.0.4) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 25 Jun 2020 11:48:45 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 25 Jun 2020 11:48:45 GMT
&lt; Date: Thu, 25 Jun 2020 11:48:45 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0  10901      0 --:--:-- --:--:-- --:--:-- 12833
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":146}]}}</msg>
<status status="PASS" starttime="20200625 11:48:45.131" endtime="20200625 11:48:45.131"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:48:45.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:48:45.131" endtime="20200625 11:48:45.132"></status>
</kw>
<msg timestamp="20200625 11:48:45.132" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200625 11:48:45.114" endtime="20200625 11:48:45.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200625 11:48:45.132" endtime="20200625 11:48:45.132"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:48:45.136" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:48:45.148" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:48:45.148" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200625 11:48:45.133" endtime="20200625 11:48:45.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:48:45.148" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.4...
* Connected to recon (172.26.0.4) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 25 Jun 2020 11:48:45 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 25 Jun 2020 11:48:45 GMT
&lt; Date: Thu, 25 Jun 2020 11:48:45 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3066
&lt; 
{ [data not shown]

100  3066  100  3066    0     0   407k      0 --:--:-- --:--:-- --:--:--  427k
* Connection #0 to host recon left intact
[{"volume":"vol-2-24619","bucket":"bucket-4-09992","fileSize":16384,"count":5},{"volume":"vol-4-95196","bucket":"bucket-3-45927","fileSize":16384,"count":5},{"volume":"vol-2-24619","bucket":"bucket-1-65676","fileSize":16384,"count":5},{"volume":"vol-3-15969","bucket":"bucket-4-26459","fileSize":16384,"count":5},{"volume":"vol-1-61296","bucket":"bucket-2-73789","fileSize":16384,"count":5},{"volume":"vol-3-15969","bucket":"bucket-3-93980","fileSize":16384,"count":5},{"volume":"vol-0-09211","bucket":"bucket-2-82488","fileSize":16384,"count":5},{"volume":"vol-4-95196","bucket":"bucket-1-01456","fileSize":16384,"count":5},{"volume":"vol-3-15969","bucket":"bucket-0-75634","fileSize":16384,"count":5},{"volume":"vol-0-09211","bucket":"bucket-4-76434","fileSize":16384,"count":5},{"volume":"vol-1-61296","bucket":"bucket-0-55524","fileSize":16384,"count":5},{"volume":"vol-4-95196","bucket":"bucket-0-43590","fileSize":16384,"count":5},{"volume":"vol-2-24619","bucket":"bucket-3-84983","fileSize":16384,"count":5},{"volume":"vol-3-15969","bucket":"bucket-1-19306","fileSize":16384,"count":5},{"volume":"vol-3-15969","bucket":"bucket-2-02808","fileSize":16384,"count":5},{"volume":"vol-4-95196","bucket":"bucket-4-15819","fileSize":16384,"count":5},{"volume":"vol-1-61296","bucket":"bucket-1-46977","fileSize":16384,"count":5},{"volume":"vol-1-61296","bucket":"bucket-3-25638","fileSize":16384,"count":5},{"volume":"vol-0-09211","bucket":"bucket-0-30443","fileSize":16384,"count":5},{"volume":"vol-4-95196","bucket":"bucket-2-20826","fileSize":16384,"count":5},{"volume":"vol-2-24619","bucket":"bucket-2-82105","fileSize":16384,"count":5},{"volume":"vol-1-61296","bucket":"bucket-4-88991","fileSize":16384,"count":5},{"volume":"vol-0-09211","bucket":"bucket-1-52975","fileSize":16384,"count":5},{"volume":"vol-2-24619","bucket":"bucket-0-18064","fileSize":16384,"count":5},{"volume":"vol-0-09211","bucket":"bucket-3-22957","fileSize":16384,"count":5},{"volume":"02927-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"02927-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"02927-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"02927-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest337","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"s3v","bucket":"bucket-61988","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-03753","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-03753","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-62261","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-34126","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-82119","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-47533","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200625 11:48:45.148" endtime="20200625 11:48:45.148"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:48:45.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:48:45.149" endtime="20200625 11:48:45.149"></status>
</kw>
<msg timestamp="20200625 11:48:45.149" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200625 11:48:45.133" endtime="20200625 11:48:45.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200625 11:48:45.150" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.4...
* Connected to recon (172.26.0.4) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 25 Jun 2020 11:48:45 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 25 Jun 2020 11:48:45 GMT
&lt; Date: Thu, 25 Jun 2020 11:48:45 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3066
&lt; 
{ [data not shown]

100  3066  100  3066    0     0   407k      0 --:--:-- --:--:-- --:--:--  427k
* Connection #0 to host recon left intact
[{"volume":"vol-2-24619","bucket":"bucket-4-09992","fileSize":16384,"count":5},{"volume":"vol-4-95196","bucket":"bucket-3-45927","fileSize":16384,"count":5},{"volume":"vol-2-24619","bucket":"bucket-1-65676","fileSize":16384,"count":5},{"volume":"vol-3-15969","bucket":"bucket-4-26459","fileSize":16384,"count":5},{"volume":"vol-1-61296","bucket":"bucket-2-73789","fileSize":16384,"count":5},{"volume":"vol-3-15969","bucket":"bucket-3-93980","fileSize":16384,"count":5},{"volume":"vol-0-09211","bucket":"bucket-2-82488","fileSize":16384,"count":5},{"volume":"vol-4-95196","bucket":"bucket-1-01456","fileSize":16384,"count":5},{"volume":"vol-3-15969","bucket":"bucket-0-75634","fileSize":16384,"count":5},{"volume":"vol-0-09211","bucket":"bucket-4-76434","fileSize":16384,"count":5},{"volume":"vol-1-61296","bucket":"bucket-0-55524","fileSize":16384,"count":5},{"volume":"vol-4-95196","bucket":"bucket-0-43590","fileSize":16384,"count":5},{"volume":"vol-2-24619","bucket":"bucket-3-84983","fileSize":16384,"count":5},{"volume":"vol-3-15969","bucket":"bucket-1-19306","fileSize":16384,"count":5},{"volume":"vol-3-15969","bucket":"bucket-2-02808","fileSize":16384,"count":5},{"volume":"vol-4-95196","bucket":"bucket-4-15819","fileSize":16384,"count":5},{"volume":"vol-1-61296","bucket":"bucket-1-46977","fileSize":16384,"count":5},{"volume":"vol-1-61296","bucket":"bucket-3-25638","fileSize":16384,"count":5},{"volume":"vol-0-09211","bucket":"bucket-0-30443","fileSize":16384,"count":5},{"volume":"vol-4-95196","bucket":"bucket-2-20826","fileSize":16384,"count":5},{"volume":"vol-2-24619","bucket":"bucket-2-82105","fileSize":16384,"count":5},{"volume":"vol-1-61296","bucket":"bucket-4-88991","fileSize":16384,"count":5},{"volume":"vol-0-09211","bucket":"bucket-1-52975","fileSize":16384,"count":5},{"volume":"vol-2-24619","bucket":"bucket-0-18064","fileSize":16384,"count":5},{"volume":"vol-0-09211","bucket":"bucket-3-22957","fileSize":16384,"count":5},{"volume":"02927-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"02927-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"02927-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"02927-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest337","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"s3v","bucket":"bucket-61988","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-03753","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-03753","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-62261","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-34126","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-82119","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-47533","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200625 11:48:45.150" endtime="20200625 11:48:45.150"></status>
</kw>
<status status="FAIL" starttime="20200625 11:48:45.085" endtime="20200625 11:48:45.151"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:48:55.155" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:48:55.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:48:55.158" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200625 11:48:55.153" endtime="20200625 11:48:55.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:48:55.159" level="INFO">scm</msg>
<status status="PASS" starttime="20200625 11:48:55.158" endtime="20200625 11:48:55.159"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:48:55.160" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:48:55.159" endtime="20200625 11:48:55.160"></status>
</kw>
<msg timestamp="20200625 11:48:55.160" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200625 11:48:55.152" endtime="20200625 11:48:55.160"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:48:55.163" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:48:55.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:48:55.179" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:48:55.161" endtime="20200625 11:48:55.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:48:55.180" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:48:55.180" endtime="20200625 11:48:55.180"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:48:55.181" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:48:55.181" endtime="20200625 11:48:55.181"></status>
</kw>
<status status="PASS" starttime="20200625 11:48:55.161" endtime="20200625 11:48:55.181"></status>
</kw>
<status status="PASS" starttime="20200625 11:48:55.160" endtime="20200625 11:48:55.181"></status>
</kw>
<status status="PASS" starttime="20200625 11:48:55.152" endtime="20200625 11:48:55.182"></status>
</kw>
<status status="PASS" starttime="20200625 11:48:55.152" endtime="20200625 11:48:55.182"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:48:55.185" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:48:55.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:48:55.201" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200625 11:48:55.182" endtime="20200625 11:48:55.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:48:55.202" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.4...
* Connected to recon (172.26.0.4) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 25 Jun 2020 11:48:55 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 25 Jun 2020 11:48:55 GMT
&lt; Date: Thu, 25 Jun 2020 11:48:55 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0   8375      0 --:--:-- --:--:-- --:--:--  8555
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":146}]}}</msg>
<status status="PASS" starttime="20200625 11:48:55.201" endtime="20200625 11:48:55.202"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:48:55.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:48:55.202" endtime="20200625 11:48:55.202"></status>
</kw>
<msg timestamp="20200625 11:48:55.203" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200625 11:48:55.182" endtime="20200625 11:48:55.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200625 11:48:55.203" endtime="20200625 11:48:55.203"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:48:55.207" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:48:55.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:48:55.221" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200625 11:48:55.204" endtime="20200625 11:48:55.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:48:55.222" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.4...
* Connected to recon (172.26.0.4) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 25 Jun 2020 11:48:55 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 25 Jun 2020 11:48:55 GMT
&lt; Date: Thu, 25 Jun 2020 11:48:55 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3066
&lt; 
{ [data not shown]

100  3066  100  3066    0     0   334k      0 --:--:-- --:--:-- --:--:--  374k
* Connection #0 to host recon left intact
[{"volume":"vol-2-24619","bucket":"bucket-4-09992","fileSize":16384,"count":5},{"volume":"vol-4-95196","bucket":"bucket-3-45927","fileSize":16384,"count":5},{"volume":"vol-2-24619","bucket":"bucket-1-65676","fileSize":16384,"count":5},{"volume":"vol-3-15969","bucket":"bucket-4-26459","fileSize":16384,"count":5},{"volume":"vol-1-61296","bucket":"bucket-2-73789","fileSize":16384,"count":5},{"volume":"vol-3-15969","bucket":"bucket-3-93980","fileSize":16384,"count":5},{"volume":"vol-0-09211","bucket":"bucket-2-82488","fileSize":16384,"count":5},{"volume":"vol-4-95196","bucket":"bucket-1-01456","fileSize":16384,"count":5},{"volume":"vol-3-15969","bucket":"bucket-0-75634","fileSize":16384,"count":5},{"volume":"vol-0-09211","bucket":"bucket-4-76434","fileSize":16384,"count":5},{"volume":"vol-1-61296","bucket":"bucket-0-55524","fileSize":16384,"count":5},{"volume":"vol-4-95196","bucket":"bucket-0-43590","fileSize":16384,"count":5},{"volume":"vol-2-24619","bucket":"bucket-3-84983","fileSize":16384,"count":5},{"volume":"vol-3-15969","bucket":"bucket-1-19306","fileSize":16384,"count":5},{"volume":"vol-3-15969","bucket":"bucket-2-02808","fileSize":16384,"count":5},{"volume":"vol-4-95196","bucket":"bucket-4-15819","fileSize":16384,"count":5},{"volume":"vol-1-61296","bucket":"bucket-1-46977","fileSize":16384,"count":5},{"volume":"vol-1-61296","bucket":"bucket-3-25638","fileSize":16384,"count":5},{"volume":"vol-0-09211","bucket":"bucket-0-30443","fileSize":16384,"count":5},{"volume":"vol-4-95196","bucket":"bucket-2-20826","fileSize":16384,"count":5},{"volume":"vol-2-24619","bucket":"bucket-2-82105","fileSize":16384,"count":5},{"volume":"vol-1-61296","bucket":"bucket-4-88991","fileSize":16384,"count":5},{"volume":"vol-0-09211","bucket":"bucket-1-52975","fileSize":16384,"count":5},{"volume":"vol-2-24619","bucket":"bucket-0-18064","fileSize":16384,"count":5},{"volume":"vol-0-09211","bucket":"bucket-3-22957","fileSize":16384,"count":5},{"volume":"02927-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"02927-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"02927-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"02927-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest337","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"s3v","bucket":"bucket-61988","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-03753","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-03753","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-62261","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-34126","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-82119","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-47533","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200625 11:48:55.222" endtime="20200625 11:48:55.222"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:48:55.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:48:55.222" endtime="20200625 11:48:55.223"></status>
</kw>
<msg timestamp="20200625 11:48:55.223" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200625 11:48:55.203" endtime="20200625 11:48:55.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200625 11:48:55.224" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.4...
* Connected to recon (172.26.0.4) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 25 Jun 2020 11:48:55 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 25 Jun 2020 11:48:55 GMT
&lt; Date: Thu, 25 Jun 2020 11:48:55 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3066
&lt; 
{ [data not shown]

100  3066  100  3066    0     0   334k      0 --:--:-- --:--:-- --:--:--  374k
* Connection #0 to host recon left intact
[{"volume":"vol-2-24619","bucket":"bucket-4-09992","fileSize":16384,"count":5},{"volume":"vol-4-95196","bucket":"bucket-3-45927","fileSize":16384,"count":5},{"volume":"vol-2-24619","bucket":"bucket-1-65676","fileSize":16384,"count":5},{"volume":"vol-3-15969","bucket":"bucket-4-26459","fileSize":16384,"count":5},{"volume":"vol-1-61296","bucket":"bucket-2-73789","fileSize":16384,"count":5},{"volume":"vol-3-15969","bucket":"bucket-3-93980","fileSize":16384,"count":5},{"volume":"vol-0-09211","bucket":"bucket-2-82488","fileSize":16384,"count":5},{"volume":"vol-4-95196","bucket":"bucket-1-01456","fileSize":16384,"count":5},{"volume":"vol-3-15969","bucket":"bucket-0-75634","fileSize":16384,"count":5},{"volume":"vol-0-09211","bucket":"bucket-4-76434","fileSize":16384,"count":5},{"volume":"vol-1-61296","bucket":"bucket-0-55524","fileSize":16384,"count":5},{"volume":"vol-4-95196","bucket":"bucket-0-43590","fileSize":16384,"count":5},{"volume":"vol-2-24619","bucket":"bucket-3-84983","fileSize":16384,"count":5},{"volume":"vol-3-15969","bucket":"bucket-1-19306","fileSize":16384,"count":5},{"volume":"vol-3-15969","bucket":"bucket-2-02808","fileSize":16384,"count":5},{"volume":"vol-4-95196","bucket":"bucket-4-15819","fileSize":16384,"count":5},{"volume":"vol-1-61296","bucket":"bucket-1-46977","fileSize":16384,"count":5},{"volume":"vol-1-61296","bucket":"bucket-3-25638","fileSize":16384,"count":5},{"volume":"vol-0-09211","bucket":"bucket-0-30443","fileSize":16384,"count":5},{"volume":"vol-4-95196","bucket":"bucket-2-20826","fileSize":16384,"count":5},{"volume":"vol-2-24619","bucket":"bucket-2-82105","fileSize":16384,"count":5},{"volume":"vol-1-61296","bucket":"bucket-4-88991","fileSize":16384,"count":5},{"volume":"vol-0-09211","bucket":"bucket-1-52975","fileSize":16384,"count":5},{"volume":"vol-2-24619","bucket":"bucket-0-18064","fileSize":16384,"count":5},{"volume":"vol-0-09211","bucket":"bucket-3-22957","fileSize":16384,"count":5},{"volume":"02927-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"02927-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"02927-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"02927-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest337","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"s3v","bucket":"bucket-61988","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-03753","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-03753","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-62261","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-34126","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-82119","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-47533","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200625 11:48:55.223" endtime="20200625 11:48:55.224"></status>
</kw>
<status status="FAIL" starttime="20200625 11:48:55.151" endtime="20200625 11:48:55.224"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:49:05.228" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:49:05.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:49:05.231" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200625 11:49:05.226" endtime="20200625 11:49:05.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:49:05.232" level="INFO">scm</msg>
<status status="PASS" starttime="20200625 11:49:05.231" endtime="20200625 11:49:05.232"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:49:05.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:49:05.232" endtime="20200625 11:49:05.232"></status>
</kw>
<msg timestamp="20200625 11:49:05.233" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200625 11:49:05.226" endtime="20200625 11:49:05.233"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:49:05.236" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:49:05.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:49:05.252" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:49:05.234" endtime="20200625 11:49:05.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:49:05.253" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:49:05.252" endtime="20200625 11:49:05.253"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:49:05.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:49:05.253" endtime="20200625 11:49:05.254"></status>
</kw>
<status status="PASS" starttime="20200625 11:49:05.233" endtime="20200625 11:49:05.254"></status>
</kw>
<status status="PASS" starttime="20200625 11:49:05.233" endtime="20200625 11:49:05.254"></status>
</kw>
<status status="PASS" starttime="20200625 11:49:05.226" endtime="20200625 11:49:05.254"></status>
</kw>
<status status="PASS" starttime="20200625 11:49:05.225" endtime="20200625 11:49:05.254"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:49:05.257" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:49:05.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:49:05.272" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200625 11:49:05.254" endtime="20200625 11:49:05.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:49:05.273" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.4...
* Connected to recon (172.26.0.4) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 25 Jun 2020 11:49:05 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 25 Jun 2020 11:49:05 GMT
&lt; Date: Thu, 25 Jun 2020 11:49:05 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0   8273      0 --:--:-- --:--:-- --:--:--  8555
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":146}]}}</msg>
<status status="PASS" starttime="20200625 11:49:05.273" endtime="20200625 11:49:05.273"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:49:05.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:49:05.274" endtime="20200625 11:49:05.274"></status>
</kw>
<msg timestamp="20200625 11:49:05.275" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200625 11:49:05.254" endtime="20200625 11:49:05.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200625 11:49:05.275" endtime="20200625 11:49:05.275"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:49:05.278" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:49:05.291" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:49:05.291" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200625 11:49:05.276" endtime="20200625 11:49:05.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:49:05.292" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.4...
* Connected to recon (172.26.0.4) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 25 Jun 2020 11:49:05 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 25 Jun 2020 11:49:05 GMT
&lt; Date: Thu, 25 Jun 2020 11:49:05 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3066
&lt; 
{ [data not shown]

100  3066  100  3066    0     0   472k      0 --:--:-- --:--:-- --:--:--  499k
* Connection #0 to host recon left intact
[{"volume":"vol-2-24619","bucket":"bucket-4-09992","fileSize":16384,"count":5},{"volume":"vol-4-95196","bucket":"bucket-3-45927","fileSize":16384,"count":5},{"volume":"vol-2-24619","bucket":"bucket-1-65676","fileSize":16384,"count":5},{"volume":"vol-3-15969","bucket":"bucket-4-26459","fileSize":16384,"count":5},{"volume":"vol-1-61296","bucket":"bucket-2-73789","fileSize":16384,"count":5},{"volume":"vol-3-15969","bucket":"bucket-3-93980","fileSize":16384,"count":5},{"volume":"vol-0-09211","bucket":"bucket-2-82488","fileSize":16384,"count":5},{"volume":"vol-4-95196","bucket":"bucket-1-01456","fileSize":16384,"count":5},{"volume":"vol-3-15969","bucket":"bucket-0-75634","fileSize":16384,"count":5},{"volume":"vol-0-09211","bucket":"bucket-4-76434","fileSize":16384,"count":5},{"volume":"vol-1-61296","bucket":"bucket-0-55524","fileSize":16384,"count":5},{"volume":"vol-4-95196","bucket":"bucket-0-43590","fileSize":16384,"count":5},{"volume":"vol-2-24619","bucket":"bucket-3-84983","fileSize":16384,"count":5},{"volume":"vol-3-15969","bucket":"bucket-1-19306","fileSize":16384,"count":5},{"volume":"vol-3-15969","bucket":"bucket-2-02808","fileSize":16384,"count":5},{"volume":"vol-4-95196","bucket":"bucket-4-15819","fileSize":16384,"count":5},{"volume":"vol-1-61296","bucket":"bucket-1-46977","fileSize":16384,"count":5},{"volume":"vol-1-61296","bucket":"bucket-3-25638","fileSize":16384,"count":5},{"volume":"vol-0-09211","bucket":"bucket-0-30443","fileSize":16384,"count":5},{"volume":"vol-4-95196","bucket":"bucket-2-20826","fileSize":16384,"count":5},{"volume":"vol-2-24619","bucket":"bucket-2-82105","fileSize":16384,"count":5},{"volume":"vol-1-61296","bucket":"bucket-4-88991","fileSize":16384,"count":5},{"volume":"vol-0-09211","bucket":"bucket-1-52975","fileSize":16384,"count":5},{"volume":"vol-2-24619","bucket":"bucket-0-18064","fileSize":16384,"count":5},{"volume":"vol-0-09211","bucket":"bucket-3-22957","fileSize":16384,"count":5},{"volume":"02927-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"02927-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"02927-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"02927-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest337","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"s3v","bucket":"bucket-61988","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-03753","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-03753","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-62261","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-34126","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-82119","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-47533","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200625 11:49:05.292" endtime="20200625 11:49:05.292"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:49:05.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:49:05.293" endtime="20200625 11:49:05.293"></status>
</kw>
<msg timestamp="20200625 11:49:05.293" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200625 11:49:05.275" endtime="20200625 11:49:05.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200625 11:49:05.294" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.4...
* Connected to recon (172.26.0.4) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 25 Jun 2020 11:49:05 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 25 Jun 2020 11:49:05 GMT
&lt; Date: Thu, 25 Jun 2020 11:49:05 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3066
&lt; 
{ [data not shown]

100  3066  100  3066    0     0   472k      0 --:--:-- --:--:-- --:--:--  499k
* Connection #0 to host recon left intact
[{"volume":"vol-2-24619","bucket":"bucket-4-09992","fileSize":16384,"count":5},{"volume":"vol-4-95196","bucket":"bucket-3-45927","fileSize":16384,"count":5},{"volume":"vol-2-24619","bucket":"bucket-1-65676","fileSize":16384,"count":5},{"volume":"vol-3-15969","bucket":"bucket-4-26459","fileSize":16384,"count":5},{"volume":"vol-1-61296","bucket":"bucket-2-73789","fileSize":16384,"count":5},{"volume":"vol-3-15969","bucket":"bucket-3-93980","fileSize":16384,"count":5},{"volume":"vol-0-09211","bucket":"bucket-2-82488","fileSize":16384,"count":5},{"volume":"vol-4-95196","bucket":"bucket-1-01456","fileSize":16384,"count":5},{"volume":"vol-3-15969","bucket":"bucket-0-75634","fileSize":16384,"count":5},{"volume":"vol-0-09211","bucket":"bucket-4-76434","fileSize":16384,"count":5},{"volume":"vol-1-61296","bucket":"bucket-0-55524","fileSize":16384,"count":5},{"volume":"vol-4-95196","bucket":"bucket-0-43590","fileSize":16384,"count":5},{"volume":"vol-2-24619","bucket":"bucket-3-84983","fileSize":16384,"count":5},{"volume":"vol-3-15969","bucket":"bucket-1-19306","fileSize":16384,"count":5},{"volume":"vol-3-15969","bucket":"bucket-2-02808","fileSize":16384,"count":5},{"volume":"vol-4-95196","bucket":"bucket-4-15819","fileSize":16384,"count":5},{"volume":"vol-1-61296","bucket":"bucket-1-46977","fileSize":16384,"count":5},{"volume":"vol-1-61296","bucket":"bucket-3-25638","fileSize":16384,"count":5},{"volume":"vol-0-09211","bucket":"bucket-0-30443","fileSize":16384,"count":5},{"volume":"vol-4-95196","bucket":"bucket-2-20826","fileSize":16384,"count":5},{"volume":"vol-2-24619","bucket":"bucket-2-82105","fileSize":16384,"count":5},{"volume":"vol-1-61296","bucket":"bucket-4-88991","fileSize":16384,"count":5},{"volume":"vol-0-09211","bucket":"bucket-1-52975","fileSize":16384,"count":5},{"volume":"vol-2-24619","bucket":"bucket-0-18064","fileSize":16384,"count":5},{"volume":"vol-0-09211","bucket":"bucket-3-22957","fileSize":16384,"count":5},{"volume":"02927-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"02927-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"02927-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"02927-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest337","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"s3v","bucket":"bucket-61988","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-03753","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-03753","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-62261","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-34126","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-82119","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-47533","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200625 11:49:05.293" endtime="20200625 11:49:05.294"></status>
</kw>
<status status="FAIL" starttime="20200625 11:49:05.224" endtime="20200625 11:49:05.294"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:49:15.299" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:49:15.302" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:49:15.302" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200625 11:49:15.297" endtime="20200625 11:49:15.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:49:15.303" level="INFO">scm</msg>
<status status="PASS" starttime="20200625 11:49:15.302" endtime="20200625 11:49:15.303"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:49:15.304" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:49:15.303" endtime="20200625 11:49:15.304"></status>
</kw>
<msg timestamp="20200625 11:49:15.304" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200625 11:49:15.296" endtime="20200625 11:49:15.304"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:49:15.307" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:49:15.323" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:49:15.323" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:49:15.305" endtime="20200625 11:49:15.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:49:15.324" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:49:15.324" endtime="20200625 11:49:15.324"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:49:15.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:49:15.324" endtime="20200625 11:49:15.325"></status>
</kw>
<status status="PASS" starttime="20200625 11:49:15.305" endtime="20200625 11:49:15.326"></status>
</kw>
<status status="PASS" starttime="20200625 11:49:15.304" endtime="20200625 11:49:15.326"></status>
</kw>
<status status="PASS" starttime="20200625 11:49:15.296" endtime="20200625 11:49:15.326"></status>
</kw>
<status status="PASS" starttime="20200625 11:49:15.295" endtime="20200625 11:49:15.326"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:49:15.329" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:49:15.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:49:15.342" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200625 11:49:15.326" endtime="20200625 11:49:15.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:49:15.343" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.4...
* Connected to recon (172.26.0.4) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 25 Jun 2020 11:49:15 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 25 Jun 2020 11:49:15 GMT
&lt; Date: Thu, 25 Jun 2020 11:49:15 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0   8615      0 --:--:-- --:--:-- --:--:--  9625
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":146}]}}</msg>
<status status="PASS" starttime="20200625 11:49:15.343" endtime="20200625 11:49:15.343"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:49:15.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:49:15.344" endtime="20200625 11:49:15.344"></status>
</kw>
<msg timestamp="20200625 11:49:15.344" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200625 11:49:15.326" endtime="20200625 11:49:15.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200625 11:49:15.344" endtime="20200625 11:49:15.345"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:49:15.348" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:49:15.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:49:15.363" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200625 11:49:15.345" endtime="20200625 11:49:15.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:49:15.365" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.4...
* Connected to recon (172.26.0.4) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 25 Jun 2020 11:49:15 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 25 Jun 2020 11:49:15 GMT
&lt; Date: Thu, 25 Jun 2020 11:49:15 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3066
&lt; 
{ [data not shown]

100  3066  100  3066    0     0   295k      0 --:--:-- --:--:-- --:--:--  299k
* Connection #0 to host recon left intact
[{"volume":"vol-2-24619","bucket":"bucket-4-09992","fileSize":16384,"count":5},{"volume":"vol-4-95196","bucket":"bucket-3-45927","fileSize":16384,"count":5},{"volume":"vol-2-24619","bucket":"bucket-1-65676","fileSize":16384,"count":5},{"volume":"vol-3-15969","bucket":"bucket-4-26459","fileSize":16384,"count":5},{"volume":"vol-1-61296","bucket":"bucket-2-73789","fileSize":16384,"count":5},{"volume":"vol-3-15969","bucket":"bucket-3-93980","fileSize":16384,"count":5},{"volume":"vol-0-09211","bucket":"bucket-2-82488","fileSize":16384,"count":5},{"volume":"vol-4-95196","bucket":"bucket-1-01456","fileSize":16384,"count":5},{"volume":"vol-3-15969","bucket":"bucket-0-75634","fileSize":16384,"count":5},{"volume":"vol-0-09211","bucket":"bucket-4-76434","fileSize":16384,"count":5},{"volume":"vol-1-61296","bucket":"bucket-0-55524","fileSize":16384,"count":5},{"volume":"vol-4-95196","bucket":"bucket-0-43590","fileSize":16384,"count":5},{"volume":"vol-2-24619","bucket":"bucket-3-84983","fileSize":16384,"count":5},{"volume":"vol-3-15969","bucket":"bucket-1-19306","fileSize":16384,"count":5},{"volume":"vol-3-15969","bucket":"bucket-2-02808","fileSize":16384,"count":5},{"volume":"vol-4-95196","bucket":"bucket-4-15819","fileSize":16384,"count":5},{"volume":"vol-1-61296","bucket":"bucket-1-46977","fileSize":16384,"count":5},{"volume":"vol-1-61296","bucket":"bucket-3-25638","fileSize":16384,"count":5},{"volume":"vol-0-09211","bucket":"bucket-0-30443","fileSize":16384,"count":5},{"volume":"vol-4-95196","bucket":"bucket-2-20826","fileSize":16384,"count":5},{"volume":"vol-2-24619","bucket":"bucket-2-82105","fileSize":16384,"count":5},{"volume":"vol-1-61296","bucket":"bucket-4-88991","fileSize":16384,"count":5},{"volume":"vol-0-09211","bucket":"bucket-1-52975","fileSize":16384,"count":5},{"volume":"vol-2-24619","bucket":"bucket-0-18064","fileSize":16384,"count":5},{"volume":"vol-0-09211","bucket":"bucket-3-22957","fileSize":16384,"count":5},{"volume":"02927-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"02927-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"02927-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"02927-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest337","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"s3v","bucket":"bucket-61988","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-03753","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-03753","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-62261","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-34126","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-82119","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-47533","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200625 11:49:15.364" endtime="20200625 11:49:15.365"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:49:15.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:49:15.365" endtime="20200625 11:49:15.365"></status>
</kw>
<msg timestamp="20200625 11:49:15.366" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200625 11:49:15.345" endtime="20200625 11:49:15.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200625 11:49:15.366" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.4...
* Connected to recon (172.26.0.4) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 25 Jun 2020 11:49:15 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 25 Jun 2020 11:49:15 GMT
&lt; Date: Thu, 25 Jun 2020 11:49:15 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3066
&lt; 
{ [data not shown]

100  3066  100  3066    0     0   295k      0 --:--:-- --:--:-- --:--:--  299k
* Connection #0 to host recon left intact
[{"volume":"vol-2-24619","bucket":"bucket-4-09992","fileSize":16384,"count":5},{"volume":"vol-4-95196","bucket":"bucket-3-45927","fileSize":16384,"count":5},{"volume":"vol-2-24619","bucket":"bucket-1-65676","fileSize":16384,"count":5},{"volume":"vol-3-15969","bucket":"bucket-4-26459","fileSize":16384,"count":5},{"volume":"vol-1-61296","bucket":"bucket-2-73789","fileSize":16384,"count":5},{"volume":"vol-3-15969","bucket":"bucket-3-93980","fileSize":16384,"count":5},{"volume":"vol-0-09211","bucket":"bucket-2-82488","fileSize":16384,"count":5},{"volume":"vol-4-95196","bucket":"bucket-1-01456","fileSize":16384,"count":5},{"volume":"vol-3-15969","bucket":"bucket-0-75634","fileSize":16384,"count":5},{"volume":"vol-0-09211","bucket":"bucket-4-76434","fileSize":16384,"count":5},{"volume":"vol-1-61296","bucket":"bucket-0-55524","fileSize":16384,"count":5},{"volume":"vol-4-95196","bucket":"bucket-0-43590","fileSize":16384,"count":5},{"volume":"vol-2-24619","bucket":"bucket-3-84983","fileSize":16384,"count":5},{"volume":"vol-3-15969","bucket":"bucket-1-19306","fileSize":16384,"count":5},{"volume":"vol-3-15969","bucket":"bucket-2-02808","fileSize":16384,"count":5},{"volume":"vol-4-95196","bucket":"bucket-4-15819","fileSize":16384,"count":5},{"volume":"vol-1-61296","bucket":"bucket-1-46977","fileSize":16384,"count":5},{"volume":"vol-1-61296","bucket":"bucket-3-25638","fileSize":16384,"count":5},{"volume":"vol-0-09211","bucket":"bucket-0-30443","fileSize":16384,"count":5},{"volume":"vol-4-95196","bucket":"bucket-2-20826","fileSize":16384,"count":5},{"volume":"vol-2-24619","bucket":"bucket-2-82105","fileSize":16384,"count":5},{"volume":"vol-1-61296","bucket":"bucket-4-88991","fileSize":16384,"count":5},{"volume":"vol-0-09211","bucket":"bucket-1-52975","fileSize":16384,"count":5},{"volume":"vol-2-24619","bucket":"bucket-0-18064","fileSize":16384,"count":5},{"volume":"vol-0-09211","bucket":"bucket-3-22957","fileSize":16384,"count":5},{"volume":"02927-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"02927-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"02927-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"02927-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest337","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"s3v","bucket":"bucket-61988","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-03753","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-03753","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-62261","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-34126","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-82119","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-47533","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200625 11:49:15.366" endtime="20200625 11:49:15.367"></status>
</kw>
<status status="FAIL" starttime="20200625 11:49:15.295" endtime="20200625 11:49:15.367"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:49:25.375" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:49:25.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:49:25.378" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200625 11:49:25.370" endtime="20200625 11:49:25.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:49:25.379" level="INFO">scm</msg>
<status status="PASS" starttime="20200625 11:49:25.378" endtime="20200625 11:49:25.379"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:49:25.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:49:25.379" endtime="20200625 11:49:25.379"></status>
</kw>
<msg timestamp="20200625 11:49:25.379" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200625 11:49:25.369" endtime="20200625 11:49:25.379"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:49:25.383" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:49:25.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:49:25.393" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:49:25.381" endtime="20200625 11:49:25.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:49:25.394" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:49:25.393" endtime="20200625 11:49:25.394"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:49:25.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:49:25.394" endtime="20200625 11:49:25.395"></status>
</kw>
<status status="PASS" starttime="20200625 11:49:25.380" endtime="20200625 11:49:25.395"></status>
</kw>
<status status="PASS" starttime="20200625 11:49:25.379" endtime="20200625 11:49:25.395"></status>
</kw>
<status status="PASS" starttime="20200625 11:49:25.369" endtime="20200625 11:49:25.395"></status>
</kw>
<status status="PASS" starttime="20200625 11:49:25.368" endtime="20200625 11:49:25.395"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:49:25.397" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:49:25.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:49:25.408" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200625 11:49:25.396" endtime="20200625 11:49:25.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:49:25.409" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.4...
* Connected to recon (172.26.0.4) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 25 Jun 2020 11:49:25 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 25 Jun 2020 11:49:25 GMT
&lt; Date: Thu, 25 Jun 2020 11:49:25 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 182
&lt; 
{ [data not shown]

100   182  100   182    0     0  32552      0 --:--:-- --:--:-- --:--:-- 36400
* Connection #0 to host recon left intact
{"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":146},{"ContainerID":2,"NumberOfKeys":5},{"ContainerID":3,"NumberOfKeys":4},{"ContainerID":4,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20200625 11:49:25.408" endtime="20200625 11:49:25.409"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:49:25.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:49:25.409" endtime="20200625 11:49:25.409"></status>
</kw>
<msg timestamp="20200625 11:49:25.409" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200625 11:49:25.395" endtime="20200625 11:49:25.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200625 11:49:25.410" endtime="20200625 11:49:25.410"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:49:25.413" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:49:25.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:49:25.425" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200625 11:49:25.410" endtime="20200625 11:49:25.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:49:25.426" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.4...
* Connected to recon (172.26.0.4) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 25 Jun 2020 11:49:25 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 25 Jun 2020 11:49:25 GMT
&lt; Date: Thu, 25 Jun 2020 11:49:25 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3144
&lt; 
{ [data not shown]

100  3144  100  3144    0     0   407k      0 --:--:-- --:--:-- --:--:--  438k
* Connection #0 to host recon left intact
[{"volume":"vol-2-24619","bucket":"bucket-4-09992","fileSize":16384,"count":5},{"volume":"vol-4-95196","bucket":"bucket-3-45927","fileSize":16384,"count":5},{"volume":"vol-2-24619","bucket":"bucket-1-65676","fileSize":16384,"count":5},{"volume":"vol-3-15969","bucket":"bucket-4-26459","fileSize":16384,"count":5},{"volume":"vol-1-61296","bucket":"bucket-2-73789","fileSize":16384,"count":5},{"volume":"vol-3-15969","bucket":"bucket-3-93980","fileSize":16384,"count":5},{"volume":"vol-0-09211","bucket":"bucket-2-82488","fileSize":16384,"count":5},{"volume":"vol-4-95196","bucket":"bucket-1-01456","fileSize":16384,"count":5},{"volume":"vol-3-15969","bucket":"bucket-0-75634","fileSize":16384,"count":5},{"volume":"vol-0-09211","bucket":"bucket-4-76434","fileSize":16384,"count":5},{"volume":"vol-1-61296","bucket":"bucket-0-55524","fileSize":16384,"count":5},{"volume":"vol-4-95196","bucket":"bucket-0-43590","fileSize":16384,"count":5},{"volume":"vol-2-24619","bucket":"bucket-3-84983","fileSize":16384,"count":5},{"volume":"vol-3-15969","bucket":"bucket-1-19306","fileSize":16384,"count":5},{"volume":"vol-3-15969","bucket":"bucket-2-02808","fileSize":16384,"count":5},{"volume":"vol-4-95196","bucket":"bucket-4-15819","fileSize":16384,"count":5},{"volume":"vol-1-61296","bucket":"bucket-1-46977","fileSize":16384,"count":5},{"volume":"vol-1-61296","bucket":"bucket-3-25638","fileSize":16384,"count":5},{"volume":"vol-0-09211","bucket":"bucket-0-30443","fileSize":16384,"count":5},{"volume":"vol-4-95196","bucket":"bucket-2-20826","fileSize":16384,"count":5},{"volume":"vol-2-24619","bucket":"bucket-2-82105","fileSize":16384,"count":5},{"volume":"vol-1-61296","bucket":"bucket-4-88991","fileSize":16384,"count":5},{"volume":"vol-0-09211","bucket":"bucket-1-52975","fileSize":16384,"count":5},{"volume":"vol-2-24619","bucket":"bucket-0-18064","fileSize":16384,"count":5},{"volume":"vol-0-09211","bucket":"bucket-3-22957","fileSize":16384,"count":5},{"volume":"02927-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"02927-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"02927-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"02927-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest337","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"s3v","bucket":"bucket-61988","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-03753","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-03753","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-62261","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-34126","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-82119","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-47533","fileSize":1024,"count":1},{"volume":"vol-0-77591","bucket":"bucket-0-45636","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20200625 11:49:25.425" endtime="20200625 11:49:25.426"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:49:25.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:49:25.426" endtime="20200625 11:49:25.426"></status>
</kw>
<msg timestamp="20200625 11:49:25.427" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200625 11:49:25.410" endtime="20200625 11:49:25.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<status status="PASS" starttime="20200625 11:49:25.427" endtime="20200625 11:49:25.428"></status>
</kw>
<status status="PASS" starttime="20200625 11:49:25.367" endtime="20200625 11:49:25.428"></status>
</kw>
<status status="PASS" starttime="20200625 11:48:34.866" endtime="20200625 11:49:25.428"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200625 11:48:34.865" endtime="20200625 11:49:25.428" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Check if Recon picks up DN heartbeats">
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/datanodes</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:49:25.436" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:49:25.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:49:25.488" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200625 11:49:25.433" endtime="20200625 11:49:25.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:49:25.489" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.4...
* Connected to recon (172.26.0.4) port 9888 (#0)
&gt; GET /api/v1/datanodes HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 25 Jun 2020 11:49:25 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 25 Jun 2020 11:49:25 GMT
&lt; Date: Thu, 25 Jun 2020 11:49:25 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1812
&lt; 
{ [data not shown]

100  1812  100  1812    0     0  37430      0 --:--:-- --:--:-- --:--:-- 37750
* Connection #0 to host recon left intact
{"totalCount":3,"datanodes":[{"uuid":"df75fc1e-5d75-4f62-a661-3be7102a4425","hostname":"ozonesecure_datanode_2.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1593085740575,"storageReport":{"capacity":89311358976,"used":8192,"remaining":25361932288},"pipelines":[{"pipelineID":"31085f7a-3c78-4673-91de-bddfb2555324","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_3.ozonesecure_default"},{"pipelineID":"bc8effde-b561-479c-8394-a4b94b54b7ef","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_2.ozonesecure_default"}],"containers":2,"leaderCount":1},{"uuid":"0a54bdfd-4cee-426b-b170-1dcfac936b76","hostname":"ozonesecure_datanode_1.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1593085740631,"storageReport":{"capacity":89311358976,"used":8192,"remaining":25361920000},"pipelines":[{"pipelineID":"abfed738-0bbe-4844-8775-6ffd558816fd","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_1.ozonesecure_default"},{"pipelineID":"31085f7a-3c78-4673-91de-bddfb2555324","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_3.ozonesecure_default"}],"containers":2,"leaderCount":1},{"uuid":"8ddf32d8-f6cd-45c9-bf50-e625f4ce2d0f","hostname":"ozonesecure_datanode_3.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1593085740643,"storageReport":{"capacity":89311358976,"used":8192,"remaining":25361932288},"pipelines":[{"pipelineID":"5bd2dd1e-9832-4798-a3c5-06b1284e099a","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_3.ozonesecure_default"},{"pipelineID":"31085f7a-3c78-4673-91de-bddfb2555324","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_3.ozonesecure_default"}],"containers":2,"leaderCount":2}]}</msg>
<status status="PASS" starttime="20200625 11:49:25.488" endtime="20200625 11:49:25.489"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:49:25.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:49:25.489" endtime="20200625 11:49:25.490"></status>
</kw>
<msg timestamp="20200625 11:49:25.490" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200625 11:49:25.432" endtime="20200625 11:49:25.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanodes</arg>
</arguments>
<status status="PASS" starttime="20200625 11:49:25.490" endtime="20200625 11:49:25.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200625 11:49:25.491" endtime="20200625 11:49:25.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200625 11:49:25.491" endtime="20200625 11:49:25.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200625 11:49:25.492" endtime="20200625 11:49:25.492"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/pipelines</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:49:25.494" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:49:25.509" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:49:25.509" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200625 11:49:25.492" endtime="20200625 11:49:25.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:49:25.510" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.4...
* Connected to recon (172.26.0.4) port 9888 (#0)
&gt; GET /api/v1/pipelines HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 25 Jun 2020 11:49:25 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 25 Jun 2020 11:49:25 GMT
&lt; Date: Thu, 25 Jun 2020 11:49:25 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1364
&lt; 
{ [data not shown]

100  1364  100  1364    0     0   131k      0 --:--:-- --:--:-- --:--:--  133k
* Connection #0 to host recon left intact
{"totalCount":4,"pipelines":[{"pipelineId":"abfed738-0bbe-4844-8775-6ffd558816fd","status":"OPEN","leaderNode":"ozonesecure_datanode_1.ozonesecure_default","datanodes":["ozonesecure_datanode_1.ozonesecure_default"],"lastLeaderElection":0,"duration":980378,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"5bd2dd1e-9832-4798-a3c5-06b1284e099a","status":"OPEN","leaderNode":"ozonesecure_datanode_3.ozonesecure_default","datanodes":["ozonesecure_datanode_3.ozonesecure_default"],"lastLeaderElection":0,"duration":980759,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"31085f7a-3c78-4673-91de-bddfb2555324","status":"OPEN","leaderNode":"ozonesecure_datanode_3.ozonesecure_default","datanodes":["ozonesecure_datanode_2.ozonesecure_default","ozonesecure_datanode_1.ozonesecure_default","ozonesecure_datanode_3.ozonesecure_default"],"lastLeaderElection":0,"duration":980353,"leaderElections":0,"replicationType":"RATIS","replicationFactor":3,"containers":1},{"pipelineId":"bc8effde-b561-479c-8394-a4b94b54b7ef","status":"OPEN","leaderNode":"ozonesecure_datanode_2.ozonesecure_default","datanodes":["ozonesecure_datanode_2.ozonesecure_default"],"lastLeaderElection":0,"duration":980673,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1}]}</msg>
<status status="PASS" starttime="20200625 11:49:25.510" endtime="20200625 11:49:25.510"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:49:25.510" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:49:25.510" endtime="20200625 11:49:25.510"></status>
</kw>
<msg timestamp="20200625 11:49:25.511" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200625 11:49:25.492" endtime="20200625 11:49:25.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>pipelines</arg>
</arguments>
<status status="PASS" starttime="20200625 11:49:25.511" endtime="20200625 11:49:25.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200625 11:49:25.511" endtime="20200625 11:49:25.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>OPEN</arg>
</arguments>
<status status="PASS" starttime="20200625 11:49:25.512" endtime="20200625 11:49:25.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200625 11:49:25.512" endtime="20200625 11:49:25.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200625 11:49:25.512" endtime="20200625 11:49:25.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200625 11:49:25.513" endtime="20200625 11:49:25.513"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/clusterState</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:49:25.518" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:49:25.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:49:25.528" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200625 11:49:25.514" endtime="20200625 11:49:25.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:49:25.529" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.4...
* Connected to recon (172.26.0.4) port 9888 (#0)
&gt; GET /api/v1/clusterState HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 25 Jun 2020 11:49:25 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 25 Jun 2020 11:49:25 GMT
&lt; Date: Thu, 25 Jun 2020 11:49:25 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 186
&lt; 
{ [data not shown]

100   186  100   186    0     0  26624      0 --:--:-- --:--:-- --:--:-- 31000
* Connection #0 to host recon left intact
{"pipelines":4,"totalDatanodes":3,"healthyDatanodes":3,"storageReport":{"capacity":267934076928,"used":24576,"remaining":76085784576},"containers":4,"volumes":25,"buckets":55,"keys":171}</msg>
<status status="PASS" starttime="20200625 11:49:25.529" endtime="20200625 11:49:25.529"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:49:25.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:49:25.529" endtime="20200625 11:49:25.530"></status>
</kw>
<msg timestamp="20200625 11:49:25.530" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200625 11:49:25.513" endtime="20200625 11:49:25.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"totalDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200625 11:49:25.530" endtime="20200625 11:49:25.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"healthyDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200625 11:49:25.530" endtime="20200625 11:49:25.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"pipelines\":4</arg>
</arguments>
<status status="PASS" starttime="20200625 11:49:25.531" endtime="20200625 11:49:25.531"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:49:25.533" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:49:25.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:49:25.552" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200625 11:49:25.532" endtime="20200625 11:49:25.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:49:25.553" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.4...
* Connected to recon (172.26.0.4) port 9888 (#0)
&gt; GET /api/v1/containers/1/replicaHistory HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 25 Jun 2020 11:49:25 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 25 Jun 2020 11:49:25 GMT
&lt; Date: Thu, 25 Jun 2020 11:49:25 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 454
&lt; 
{ [data not shown]

100   454  100   454    0     0  33189      0 --:--:-- --:--:-- --:--:-- 32428
100   454  100   454    0     0  32366      0 --:--:-- --:--:-- --:--:-- 32428
* Connection #0 to host recon left intact
[{"containerId":1,"datanodeHost":"ozonesecure_datanode_1.ozonesecure_default","firstReportTimestamp":1593084807045,"lastReportTimestamp":1593085676882},{"containerId":1,"datanodeHost":"ozonesecure_datanode_2.ozonesecure_default","firstReportTimestamp":1593084806833,"lastReportTimestamp":1593085676636},{"containerId":1,"datanodeHost":"ozonesecure_datanode_3.ozonesecure_default","firstReportTimestamp":1593084807014,"lastReportTimestamp":1593085740649}]</msg>
<status status="PASS" starttime="20200625 11:49:25.552" endtime="20200625 11:49:25.553"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:49:25.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:49:25.553" endtime="20200625 11:49:25.554"></status>
</kw>
<msg timestamp="20200625 11:49:25.554" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200625 11:49:25.531" endtime="20200625 11:49:25.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
</arguments>
<status status="PASS" starttime="20200625 11:49:25.554" endtime="20200625 11:49:25.554"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200625 11:49:25.431" endtime="20200625 11:49:25.554" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Check if Recon Web UI is up">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:49:25.559" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:49:25.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:49:25.561" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200625 11:49:25.557" endtime="20200625 11:49:25.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:49:25.561" level="INFO">scm</msg>
<status status="PASS" starttime="20200625 11:49:25.561" endtime="20200625 11:49:25.562"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:49:25.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:49:25.562" endtime="20200625 11:49:25.562"></status>
</kw>
<msg timestamp="20200625 11:49:25.562" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200625 11:49:25.556" endtime="20200625 11:49:25.562"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:49:25.566" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:49:25.575" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:49:25.575" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:49:25.563" endtime="20200625 11:49:25.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:49:25.576" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:49:25.575" endtime="20200625 11:49:25.576"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:49:25.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:49:25.576" endtime="20200625 11:49:25.576"></status>
</kw>
<status status="PASS" starttime="20200625 11:49:25.563" endtime="20200625 11:49:25.577"></status>
</kw>
<status status="PASS" starttime="20200625 11:49:25.563" endtime="20200625 11:49:25.577"></status>
</kw>
<status status="PASS" starttime="20200625 11:49:25.556" endtime="20200625 11:49:25.577"></status>
</kw>
<status status="PASS" starttime="20200625 11:49:25.556" endtime="20200625 11:49:25.577"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${ENDPOINT_URL}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:49:25.586" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:49:25.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:49:25.618" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200625 11:49:25.577" endtime="20200625 11:49:25.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:49:25.619" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.4...
* Connected to recon (172.26.0.4) port 9888 (#0)
&gt; GET / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 441
&lt; 
* Ignoring the response-body
{ [data not shown]

100   441  100   441    0     0  24956      0 --:--:-- --:--:-- --:--:-- 25941
* Connection #0 to host recon left intact
* Issue another request to this URL: 'http://recon:9888/'
* Found bundle for host recon: 0x15bff20
* Re-using existing connection! (#0) with host recon
* Connected to recon (172.26.0.4) port 9888 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; GET / HTTP/1.1
&gt; Authorization: Negotiate YIICUwYJKoZIhvcSAQICAQBuggJCMIICPqADAgEFoQMCAQ6iBwMFACAAAACjggFSYYIBTjCCAUqgAwIBBaENGwtFWEFNUExFLkNPTaIYMBagAwIBA6EPMA0bBEhUVFAbBXJlY29uo4IBGDCCARSgAwIBEqEDAgECooIBBgSCAQJfW1Yy8EhHRMcGR899tcpxI/K7BYCfTO3c/E6Bsl+gzHusH+2BEhaj1YtnKAeP4QV+aRPbEZCNRhSL3IS5XASdtPwl0FRJnOQod3ao+HZJ+VPiimZIgqfY5s4ysQxuUJ+Tc/CurhdK2roJ7xrGkx7bBKE058uZjNhtGDcjrCHtXYiCN1sAWBvxedYwomr/53VD0wPEBipkCwoHcKEYDV+JvCUhzFysDpFUVyh9xyt7PESPkGzUP6fDQfQNGN+OCl2U493QS0zwZGrhCC5vMGV2h+e0bRfk/WxkY6g8mipN6YxOOuGe0gM7fYCok4hIpaSuR6C1n0DcgHWCgqhLIgdp+J2kgdIwgc+gAwIBEqKBxwSBxGq1jAyTGHmfkZE4cskW6ftt0H1HUR416U5rQsGi7ERadgUe3VX9fq4sRXUds/PFuWyH1QwdLiQRxF0ZIZjvlXDCgaVgal3wVs8tS/8cLLENNWkESWIrF9hd9D2wxYWXV8hJ8Ckq1fsbV4ckzA3ydxl/LpUKoeE3e+SAblzUWX4Nqkcf0ha0fS3nq8OY2k0NmolvT8llXuem59Apduf4VvI5n97zaVGof+iWcx5afV8ZxrsIp65+4KsZNABOVXkaNcCMpXs=
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 25 Jun 2020 11:49:25 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 25 Jun 2020 11:49:25 GMT
&lt; Date: Thu, 25 Jun 2020 11:49:25 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Thu, 25 Jun 2020 11:49:25 GMT
&lt; Date: Thu, 25 Jun 2020 11:49:25 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC6ekiqRn0Nz7rs98Qo5NVHubeCecijQVEQBCMNkVyN7x8IKf6yYAkmjnKxhNcooQEAQUSfGiHxuwEIUGGcIVlhCtl
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593121765614&amp;s=xnRnNUqbndnccoTvTkpiMUNmUZoXRN+uqcBTz4CO9/0="; Path=/; HttpOnly
&lt; Last-Modified: Thu, 25 Jun 2020 10:48:36 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2267
&lt; 
{ [data not shown]

100  2267  100  2267    0     0  84617      0 --:--:-- --:--:-- --:--:-- 84617
* Closing connection 0
&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.91e4d86d.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.2ec5409c.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.5f7ee777.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.06f69d64.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20200625 11:49:25.619" endtime="20200625 11:49:25.619"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:49:25.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:49:25.619" endtime="20200625 11:49:25.620"></status>
</kw>
<msg timestamp="20200625 11:49:25.620" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200625 11:49:25.577" endtime="20200625 11:49:25.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Ozone Recon</arg>
</arguments>
<status status="PASS" starttime="20200625 11:49:25.620" endtime="20200625 11:49:25.621"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200625 11:49:25.555" endtime="20200625 11:49:25.621" critical="yes"></status>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20200625 11:48:27.163" endtime="20200625 11:49:25.622"></status>
</suite>
<status status="PASS" starttime="20200625 11:48:27.142" endtime="20200625 11:49:25.624"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozonesecure-recon">ozonesecure-recon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Recon-Api">ozonesecure-recon.Recon-Api</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
