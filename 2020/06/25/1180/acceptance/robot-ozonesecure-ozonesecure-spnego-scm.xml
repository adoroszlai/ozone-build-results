<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200625 11:49:30.796" rpa="false">
<suite id="s1" name="ozonesecure-spnego" source="/opt/hadoop/smoketest/spnego">
<suite id="s1-s1" name="Web" source="/opt/hadoop/smoketest/spnego/web.robot">
<test id="s1-s1-t1" name="Generate Freon data">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:49:30.848" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:49:30.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:49:30.849" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200625 11:49:30.843" endtime="20200625 11:49:30.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:49:30.850" level="INFO">scm</msg>
<status status="PASS" starttime="20200625 11:49:30.849" endtime="20200625 11:49:30.850"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:49:30.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:49:30.850" endtime="20200625 11:49:30.850"></status>
</kw>
<msg timestamp="20200625 11:49:30.851" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200625 11:49:30.843" endtime="20200625 11:49:30.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200625 11:49:30.852" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200625 11:49:30.851" endtime="20200625 11:49:30.852"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:49:30.855" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:49:30.870" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:49:30.870" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:49:30.853" endtime="20200625 11:49:30.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:49:30.871" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:49:30.870" endtime="20200625 11:49:30.871"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:49:30.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:49:30.871" endtime="20200625 11:49:30.871"></status>
</kw>
<status status="PASS" starttime="20200625 11:49:30.852" endtime="20200625 11:49:30.871"></status>
</kw>
<status status="PASS" starttime="20200625 11:49:30.852" endtime="20200625 11:49:30.871"></status>
</kw>
<status status="PASS" starttime="20200625 11:49:30.843" endtime="20200625 11:49:30.871"></status>
</kw>
<status status="PASS" starttime="20200625 11:49:30.842" endtime="20200625 11:49:30.871"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 2 --keySize 1025</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:49:30.875" level="INFO">Running command 'ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 2 --keySize 1025 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:49:38.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:49:38.238" level="INFO">${output} = 2020-06-25 11:49:31,644 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-25 11:49:31,782 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200625 11:49:30.872" endtime="20200625 11:49:38.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:49:38.239" level="INFO">2020-06-25 11:49:31,644 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-25 11:49:31,782 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-25 11:49:31,783 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-06-25 11:49:32,730 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2020-06-25 11:49:32,731 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-06-25 11:49:32,731 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-06-25 11:49:32,731 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 2.
2020-06-25 11:49:32,731 [main] INFO freon.RandomKeyGenerator: Key size: 1025 bytes
2020-06-25 11:49:32,731 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-25 11:49:32,731 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-06-25 11:49:32,773 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-25 11:49:32,789 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 2)
2020-06-25 11:49:32,823 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-30793, with testuser/scm@EXAMPLE.COM as owner.
2020-06-25 11:49:32,848 [pool-2-thread-2] INFO rpc.RpcClient: Creating Bucket: vol-0-30793/bucket-0-71373, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-25 11:49:33,164 [pool-2-thread-4] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-25 11:49:33,798 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (2 out of 2)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 2
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,004
Average Time spent in bucket creation: 00:00:00,000
Average Time spent in key creation: 00:00:00,013
Average Time spent in key write: 00:00:00,076
Total bytes written: 2050
Total Execution time: 00:00:05,963
***************************************************</msg>
<status status="PASS" starttime="20200625 11:49:38.239" endtime="20200625 11:49:38.240"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:49:38.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:49:38.240" endtime="20200625 11:49:38.240"></status>
</kw>
<status status="PASS" starttime="20200625 11:49:30.872" endtime="20200625 11:49:38.240"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200625 11:49:30.841" endtime="20200625 11:49:38.241" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Test OM portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:49:38.246" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:49:38.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:49:38.249" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:49:38.244" endtime="20200625 11:49:38.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:49:38.250" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:49:38.250" endtime="20200625 11:49:38.250"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:49:38.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:49:38.250" endtime="20200625 11:49:38.251"></status>
</kw>
<status status="PASS" starttime="20200625 11:49:38.243" endtime="20200625 11:49:38.251"></status>
</kw>
<status status="PASS" starttime="20200625 11:49:38.243" endtime="20200625 11:49:38.251"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:49:38.253" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:49:38.271" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:49:38.271" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200625 11:49:38.251" endtime="20200625 11:49:38.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:49:38.273" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200625 11:49:38.272" endtime="20200625 11:49:38.273"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:49:38.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:49:38.273" endtime="20200625 11:49:38.274"></status>
</kw>
<msg timestamp="20200625 11:49:38.274" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200625 11:49:38.251" endtime="20200625 11:49:38.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200625 11:49:38.274" endtime="20200625 11:49:38.274"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:49:38.278" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:49:38.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:49:38.279" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200625 11:49:38.275" endtime="20200625 11:49:38.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:49:38.280" level="INFO">scm</msg>
<status status="PASS" starttime="20200625 11:49:38.280" endtime="20200625 11:49:38.280"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:49:38.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:49:38.280" endtime="20200625 11:49:38.280"></status>
</kw>
<msg timestamp="20200625 11:49:38.281" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200625 11:49:38.275" endtime="20200625 11:49:38.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200625 11:49:38.281" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200625 11:49:38.281" endtime="20200625 11:49:38.281"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:49:38.285" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:49:38.293" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:49:38.293" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:49:38.282" endtime="20200625 11:49:38.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:49:38.294" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:49:38.293" endtime="20200625 11:49:38.294"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:49:38.294" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:49:38.294" endtime="20200625 11:49:38.294"></status>
</kw>
<status status="PASS" starttime="20200625 11:49:38.282" endtime="20200625 11:49:38.294"></status>
</kw>
<status status="PASS" starttime="20200625 11:49:38.281" endtime="20200625 11:49:38.294"></status>
</kw>
<status status="PASS" starttime="20200625 11:49:38.275" endtime="20200625 11:49:38.295"></status>
</kw>
<status status="PASS" starttime="20200625 11:49:38.274" endtime="20200625 11:49:38.295"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:49:38.297" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:49:38.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:49:38.325" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200625 11:49:38.295" endtime="20200625 11:49:38.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:49:38.326" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/'
* Found bundle for host om: 0x17e6f20
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.9) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQaE2EXNHYGnX1hLtGV6sGu0wkWGMW31YmM097WsJepzgDY4pQsPgr9GmCA6HT3Le6tr3tIMEZTmG+Rgxs6wdSt4uJovHXRoEI0lOyG3tJMuYc8v6I8M0S3u4UnBSo+hWNZClRd2g9cEetmOkWyH5U/PNIKOhX/79/WG37gqh+UGR3x+Un6fUhWYP8JB0tTriALW5l8PhrOgjVVfL62/mQca0axCJDd+YaR6qt/1nDrGapVeVkyjqXQQ7KMyCQLn0ZAQQRNsQ/ZZB7opIFkfjQdT26RTPuXRARIlOovNJ5g4RlgcUTI60oNqTd5aeS5OLCie7W2FPI0CWC9RVbq2TNUGBVji0/15pIHWMIHToAMCARKigcsEgcinVjt+o2ILzOqKg9ZsIXpyizfbYDghb2ryeafPQbIXQY6PrDRgUZWLiAPSmqiGKFimdLXvJUYme23SvdD2k9gyNZMS/XYVgsj0txexca2sxBmmgSaUWyEniKTOY8A29Wm6gbPDWleaZx76Iv23oqmGe49dM3pf7kJmF5jyN/+YsMROEgAPzHQAYYRjzgUlXD5E9Rjxvxz3cbCwNEh/VFcTY7JQD5oUPT7XNR7jTXVXZxLWMx6fsjC2cnQG2Ob+6wUV2bSnVZidAQ==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 25 Jun 2020 11:49:38 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 25 Jun 2020 11:49:38 GMT
&lt; Date: Thu, 25 Jun 2020 11:49:38 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Thu, 25 Jun 2020 11:49:38 GMT
&lt; Date: Thu, 25 Jun 2020 11:49:38 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCmJ2zHwWh2/UgL+MwtKzNN1FUN6wl3hW4oRWCtOOqQxEgwxrGrc/8nYtfB0bmyw7Qlvw726Nc6VWS2+7V1JAPk0iL
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593121778320&amp;s=ob+cw1XGENOXCyM8J2TKojeSciZmbE0RKZ73jaVOBCo="; Path=/; HttpOnly
&lt; Last-Modified: Thu, 25 Jun 2020 10:46:28 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2927
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Thu, 25 Jun 2020 11:49:38 GMT
Cache-Control: no-cache
Expires: Thu, 25 Jun 2020 11:49:38 GMT
Date: Thu, 25 Jun 2020 11:49:38 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Thu, 25 Jun 2020 11:49:38 GMT
Date: Thu, 25 Jun 2020 11:49:38 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCmJ2zHwWh2/UgL+MwtKzNN1FUN6wl3hW4oRWCtOOqQxEgwxrGrc/8nYtfB0bmyw7Qlvw726Nc6VWS2+7V1JAPk0iL
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593121778320&amp;s=ob+cw1XGENOXCyM8J2TKojeSciZmbE0RKZ73jaVOBCo="; Path=/; HttpOnly
Last-Modified: Thu, 25 Jun 2020 10:46:28 GMT
Accept-Ranges: bytes
Content-Length: 2927
</msg>
<status status="PASS" starttime="20200625 11:49:38.325" endtime="20200625 11:49:38.326"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:49:38.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:49:38.326" endtime="20200625 11:49:38.327"></status>
</kw>
<msg timestamp="20200625 11:49:38.327" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200625 11:49:38.295" endtime="20200625 11:49:38.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200625 11:49:38.327" endtime="20200625 11:49:38.327"></status>
</kw>
<status status="PASS" starttime="20200625 11:49:38.242" endtime="20200625 11:49:38.327"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200625 11:49:38.241" endtime="20200625 11:49:38.328" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Test OM DB Checkpoint">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_DB_CHECKPOINT_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:49:38.332" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:49:38.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:49:38.334" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:49:38.330" endtime="20200625 11:49:38.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:49:38.335" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:49:38.334" endtime="20200625 11:49:38.335"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:49:38.335" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:49:38.335" endtime="20200625 11:49:38.335"></status>
</kw>
<status status="PASS" starttime="20200625 11:49:38.329" endtime="20200625 11:49:38.336"></status>
</kw>
<status status="PASS" starttime="20200625 11:49:38.329" endtime="20200625 11:49:38.336"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:49:38.339" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/dbCheckpoint 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:49:38.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:49:38.350" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200625 11:49:38.336" endtime="20200625 11:49:38.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:49:38.351" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 417
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 417
</msg>
<status status="PASS" starttime="20200625 11:49:38.350" endtime="20200625 11:49:38.351"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:49:38.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:49:38.351" endtime="20200625 11:49:38.352"></status>
</kw>
<msg timestamp="20200625 11:49:38.352" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200625 11:49:38.336" endtime="20200625 11:49:38.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200625 11:49:38.352" endtime="20200625 11:49:38.352"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:49:38.356" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:49:38.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:49:38.357" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200625 11:49:38.353" endtime="20200625 11:49:38.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:49:38.358" level="INFO">scm</msg>
<status status="PASS" starttime="20200625 11:49:38.357" endtime="20200625 11:49:38.358"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:49:38.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:49:38.358" endtime="20200625 11:49:38.358"></status>
</kw>
<msg timestamp="20200625 11:49:38.358" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200625 11:49:38.353" endtime="20200625 11:49:38.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200625 11:49:38.359" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200625 11:49:38.359" endtime="20200625 11:49:38.359"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:49:38.362" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:49:38.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:49:38.370" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:49:38.360" endtime="20200625 11:49:38.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:49:38.371" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:49:38.370" endtime="20200625 11:49:38.371"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:49:38.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:49:38.371" endtime="20200625 11:49:38.371"></status>
</kw>
<status status="PASS" starttime="20200625 11:49:38.359" endtime="20200625 11:49:38.371"></status>
</kw>
<status status="PASS" starttime="20200625 11:49:38.359" endtime="20200625 11:49:38.371"></status>
</kw>
<status status="PASS" starttime="20200625 11:49:38.353" endtime="20200625 11:49:38.371"></status>
</kw>
<status status="PASS" starttime="20200625 11:49:38.352" endtime="20200625 11:49:38.372"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:49:38.374" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/dbCheckpoint 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:49:38.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:49:38.422" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200625 11:49:38.372" endtime="20200625 11:49:38.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:49:38.423" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 417
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/dbCheckpoint'
* Found bundle for host om: 0x1f77f50
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.9) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQYyVPucqb81RwfCxdlikIzygEHe7oogRf4Z48vjuVXDKpE+vTcn7OFzN/7m63zQ8zQNBPjPDbbNtzGXlDEZ1Dv16gL2wd5eYCFKi6tpcEwyX3FAPWBLP/ilGVv1YXgIB0ZXc8IO0pA9Dob0uIDFbXMafYV5AOxbYkoJi8C+nzaeIcZtbjO19GW420GLszRkEC8m560Sj1PPqCu+RGpKijvYapBQn+WOPD0XBiZiyPNK3xa+r2xnTd2XlvRqjKbp195TVUKw8iiQ787KjFp+XnXfCBeJiZD7icNuUFCSuWXwwNttnDF+KWOPbLWFbQhb7REsf+ZyAOSXhA1hMNHIs1OBybCsO7jSpIHWMIHToAMCARKigcsEgcie2qvUmNLz37+gh/H0AXHeUqUcpWkdtbHBuZnoTbbKJbS31UlBCmAKLMSHOnge/YL2gLwZ3ky7fHqB7T+m5TS2evALGbfB2m4aTIRiQIDJ0lzPnjyycJnkxkmahWyTVNhgCacwLcA1HG/A2eM3758w7N2/71rJy3TBdju+e/y2eYTSPg/xuK8cVPtc59IizO1NRGOV+UwqSbe5NGE0ZIWDKe5aOvM8XX0s/emMpkubYIp5kOk+Kie5NH3swx4MdzJ8whiOIHl/cA==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 25 Jun 2020 11:49:38 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 25 Jun 2020 11:49:38 GMT
&lt; Date: Thu, 25 Jun 2020 11:49:38 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/x-tgz
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCE2UizEdwG8D3/B+AR3RSF6NXjs7aGsT241zCb1IlOQpbkM6PsNykIY+OYvzyrA2WITmycHttluXg1N6Q6U0TPpO7
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593121778391&amp;s=iIYuJWVLNI1v5sYoL2gpfsnHCfVrSBj/wtsc/cqwUe0="; Path=/; HttpOnly
&lt; Content-Disposition: attachment; filename="rdb_rdb_checkpoint_1593085778392.tgz"
&lt; Content-Length: 74523
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 417

HTTP/1.1 200 OK
Date: Thu, 25 Jun 2020 11:49:38 GMT
Cache-Control: no-cache
Expires: Thu, 25 Jun 2020 11:49:38 GMT
Date: Thu, 25 Jun 2020 11:49:38 GMT
Pragma: no-cache
Content-Type: application/x-tgz
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCE2UizEdwG8D3/B+AR3RSF6NXjs7aGsT241zCb1IlOQpbkM6PsNykIY+OYvzyrA2WITmycHttluXg1N6Q6U0TPpO7
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593121778391&amp;s=iIYuJWVLNI1v5sYoL2gpfsnHCfVrSBj/wtsc/cqwUe0="; Path=/; HttpOnly
Content-Disposition: attachment; filename="rdb_rdb_checkpoint_1593085778392.tgz"
Content-Length: 74523
</msg>
<status status="PASS" starttime="20200625 11:49:38.422" endtime="20200625 11:49:38.423"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:49:38.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:49:38.423" endtime="20200625 11:49:38.423"></status>
</kw>
<msg timestamp="20200625 11:49:38.424" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200625 11:49:38.372" endtime="20200625 11:49:38.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200625 11:49:38.424" endtime="20200625 11:49:38.424"></status>
</kw>
<status status="PASS" starttime="20200625 11:49:38.329" endtime="20200625 11:49:38.424"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200625 11:49:38.328" endtime="20200625 11:49:38.424" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Test OM Service List">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_SERVICE_LIST_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:49:38.430" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:49:38.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:49:38.433" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:49:38.427" endtime="20200625 11:49:38.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:49:38.433" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:49:38.433" endtime="20200625 11:49:38.434"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:49:38.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:49:38.434" endtime="20200625 11:49:38.434"></status>
</kw>
<status status="PASS" starttime="20200625 11:49:38.427" endtime="20200625 11:49:38.434"></status>
</kw>
<status status="PASS" starttime="20200625 11:49:38.426" endtime="20200625 11:49:38.434"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:49:38.437" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/serviceList 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:49:38.448" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:49:38.448" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200625 11:49:38.435" endtime="20200625 11:49:38.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:49:38.449" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 415
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 415
</msg>
<status status="PASS" starttime="20200625 11:49:38.448" endtime="20200625 11:49:38.449"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:49:38.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:49:38.449" endtime="20200625 11:49:38.449"></status>
</kw>
<msg timestamp="20200625 11:49:38.449" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200625 11:49:38.434" endtime="20200625 11:49:38.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200625 11:49:38.450" endtime="20200625 11:49:38.450"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:49:38.453" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:49:38.454" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:49:38.454" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200625 11:49:38.451" endtime="20200625 11:49:38.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:49:38.455" level="INFO">scm</msg>
<status status="PASS" starttime="20200625 11:49:38.455" endtime="20200625 11:49:38.455"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:49:38.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:49:38.455" endtime="20200625 11:49:38.456"></status>
</kw>
<msg timestamp="20200625 11:49:38.456" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200625 11:49:38.451" endtime="20200625 11:49:38.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200625 11:49:38.456" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200625 11:49:38.456" endtime="20200625 11:49:38.456"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:49:38.460" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:49:38.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:49:38.467" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:49:38.457" endtime="20200625 11:49:38.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:49:38.468" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:49:38.467" endtime="20200625 11:49:38.468"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:49:38.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:49:38.468" endtime="20200625 11:49:38.469"></status>
</kw>
<status status="PASS" starttime="20200625 11:49:38.457" endtime="20200625 11:49:38.469"></status>
</kw>
<status status="PASS" starttime="20200625 11:49:38.456" endtime="20200625 11:49:38.469"></status>
</kw>
<status status="PASS" starttime="20200625 11:49:38.450" endtime="20200625 11:49:38.469"></status>
</kw>
<status status="PASS" starttime="20200625 11:49:38.450" endtime="20200625 11:49:38.469"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:49:38.472" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/serviceList 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:49:38.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:49:38.498" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200625 11:49:38.469" endtime="20200625 11:49:38.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:49:38.499" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 415
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/serviceList'
* Found bundle for host om: 0x14f0f50
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.9) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD /serviceList HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQZa71JxVfZDuLFmyhUYRBEEhFPlruz1tzVQd6fQxiu4/5HvX1sGGyMxPbzjqxk5V4i+OXqa4a0REJnxMPNcoz9tqfg3hvPzNCAb9/JspzL6bky96I1an/mzMZttvWeXyvsp9/4nwH0DkyJ5S6EQKNt8YOqb08cIEd3PbDhRqX93W6VZXA5qirvnyAgkxvuxrJuLbZfg85Pf1AoXSmi1JScn1rk95CydHgXx8qkcdNfpYL8qiyOx/yHrdMnJRPECQfHbhUSVDEqn1lTnrtVJYiZCqfB+vd94C+gF+Lq4Hb+l7+oxnKdO7lBO1p9zDhLvDbH72gXXBegK8Cmp64mauanonoom949dpIHWMIHToAMCARKigcsEgcjsL5YSCIJ3dkaCZNTfRrTLNmQZqZkM5v3n0jxQEfsn7f4L8RpquDFq6456R5gzcuTJezB3PDjFAy7dSz7YStgMQ15mkpL6umzzoy8VKpvJlKmdj+k+5L8Uh7SHxWcVVHFKAwcmYxFlXQY9DELP/Y1Wvv/4Tz+cYQAU0EACtZFNKUv50nEDmUWIURuIRFGAocqL57IiKotwoE1dLJa9muRqlhJ9teAyaabQH3TNIAdAKsirjska9jo+6TpKHjFtb6fD3OLRUuwIkg==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 25 Jun 2020 11:49:38 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 25 Jun 2020 11:49:38 GMT
&lt; Date: Thu, 25 Jun 2020 11:49:38 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json; charset=utf8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCv6tVNiZsJzanTU26vZnNDjboLAgvOj9tOJQ2TuH8hFPNHqZRvRTAC2hrMbI+eKNrtFd5XvK6bZ7oxA1xh8SPaSVD
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593121778488&amp;s=7LEMpvnBCLi3t8gFjrNkmQagdnueYIc6s5y5rGccydY="; Path=/; HttpOnly
&lt; Content-Length: 207
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 415

HTTP/1.1 200 OK
Date: Thu, 25 Jun 2020 11:49:38 GMT
Cache-Control: no-cache
Expires: Thu, 25 Jun 2020 11:49:38 GMT
Date: Thu, 25 Jun 2020 11:49:38 GMT
Pragma: no-cache
Content-Type: application/json; charset=utf8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCv6tVNiZsJzanTU26vZnNDjboLAgvOj9tOJQ2TuH8hFPNHqZRvRTAC2hrMbI+eKNrtFd5XvK6bZ7oxA1xh8SPaSVD
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593121778488&amp;s=7LEMpvnBCLi3t8gFjrNkmQagdnueYIc6s5y5rGccydY="; Path=/; HttpOnly
Content-Length: 207
</msg>
<status status="PASS" starttime="20200625 11:49:38.498" endtime="20200625 11:49:38.499"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:49:38.499" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:49:38.499" endtime="20200625 11:49:38.499"></status>
</kw>
<msg timestamp="20200625 11:49:38.500" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200625 11:49:38.469" endtime="20200625 11:49:38.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200625 11:49:38.500" endtime="20200625 11:49:38.500"></status>
</kw>
<status status="PASS" starttime="20200625 11:49:38.426" endtime="20200625 11:49:38.500"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200625 11:49:38.425" endtime="20200625 11:49:38.500" critical="yes"></status>
</test>
<test id="s1-s1-t5" name="Test SCM portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${SCM_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:49:38.505" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:49:38.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:49:38.507" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:49:38.503" endtime="20200625 11:49:38.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:49:38.508" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:49:38.508" endtime="20200625 11:49:38.508"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:49:38.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:49:38.508" endtime="20200625 11:49:38.509"></status>
</kw>
<status status="PASS" starttime="20200625 11:49:38.502" endtime="20200625 11:49:38.509"></status>
</kw>
<status status="PASS" starttime="20200625 11:49:38.502" endtime="20200625 11:49:38.509"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:49:38.512" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://scm:9876 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:49:38.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:49:38.528" level="INFO">${output} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.8...
* Connected to scm (172.26.0.8) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200625 11:49:38.510" endtime="20200625 11:49:38.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:49:38.529" level="INFO">* About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.8...
* Connected to scm (172.26.0.8) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host scm left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200625 11:49:38.528" endtime="20200625 11:49:38.529"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:49:38.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:49:38.529" endtime="20200625 11:49:38.529"></status>
</kw>
<msg timestamp="20200625 11:49:38.530" level="INFO">${result} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.8...
* Connected to scm (172.26.0.8) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200625 11:49:38.509" endtime="20200625 11:49:38.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200625 11:49:38.530" endtime="20200625 11:49:38.530"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:49:38.534" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:49:38.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:49:38.535" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200625 11:49:38.532" endtime="20200625 11:49:38.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:49:38.536" level="INFO">scm</msg>
<status status="PASS" starttime="20200625 11:49:38.536" endtime="20200625 11:49:38.536"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:49:38.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:49:38.536" endtime="20200625 11:49:38.537"></status>
</kw>
<msg timestamp="20200625 11:49:38.537" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200625 11:49:38.531" endtime="20200625 11:49:38.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200625 11:49:38.538" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200625 11:49:38.537" endtime="20200625 11:49:38.538"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:49:38.541" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:49:38.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:49:38.548" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:49:38.539" endtime="20200625 11:49:38.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:49:38.549" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:49:38.549" endtime="20200625 11:49:38.549"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:49:38.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:49:38.549" endtime="20200625 11:49:38.550"></status>
</kw>
<status status="PASS" starttime="20200625 11:49:38.538" endtime="20200625 11:49:38.550"></status>
</kw>
<status status="PASS" starttime="20200625 11:49:38.538" endtime="20200625 11:49:38.550"></status>
</kw>
<status status="PASS" starttime="20200625 11:49:38.531" endtime="20200625 11:49:38.550"></status>
</kw>
<status status="PASS" starttime="20200625 11:49:38.530" endtime="20200625 11:49:38.550"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:49:38.552" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://scm:9876 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:49:38.577" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:49:38.577" level="INFO">${output} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.8...
* Connected to scm (172.26.0.8) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200625 11:49:38.551" endtime="20200625 11:49:38.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:49:38.578" level="INFO">* About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.8...
* Connected to scm (172.26.0.8) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host scm left intact
* Issue another request to this URL: 'http://scm:9876/'
* Found bundle for host scm: 0x736f20
* Re-using existing connection! (#0) with host scm
* Connected to scm (172.26.0.8) port 9876 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWQYJKoZIhvcSAQICAQBuggJIMIICRKADAgEFoQMCAQ6iBwMFACAAAACjggFUYYIBUDCCAUygAwIBBaENGwtFWEFNUExFLkNPTaIWMBSgAwIBA6ENMAsbBEhUVFAbA3NjbaOCARwwggEYoAMCARKhAwIBAqKCAQoEggEGtTnUweS6zD7SJFl9Zivx/iXB8YQMP8BSePBjOrT2nGWGcGKXHJucMh3WdlHWmbVBOmQisiH7mMSIMEO7VpzR73Rh1lAJPbYh8/1J4T+74xYMw7AdBJ0BW5broSM1lMLimnDqxjQpIvKkvitwadpkoXG9cQ5UQ+9w/bYbTCvCSDdpZNUj/deeTJCWpwbnRllaXkq663kqxR34duWZaymCIS7bMXxBAFKHdtCrKN8BYC/1iQE1MhRwqQWXDwHi5fHs1MFMsZSBxQJgcXELF5/eSB7rBI+TbTP325z7fqgSiShXHPUm2/lPlQrDpVm1LClHpw3htg/thClPd14j96zHY/5Ya2ZWsqSB1jCB06ADAgESooHLBIHIVzopzfkOZ9YWllDCG+o1z6WeSvawMDbE88Zv6+m/5bKiN9z2MN/5JzcIi7WRclMxU2+CVg2X7IH4PlbWsKcudjJIdcJEkWeChyRtxlG9Sx6OiCET/XvKg62/qAwF1i+vfE+uVijW+mlqxWSSkZI4XSiAkizrnPpc7WZ76HuFL0zAJG2M3zhxrR56Ihd5nc1S/ELRnm+PLFJvNpiDL0pbidHJ+koV3CeARlAvu0gfztB+lcvcTwTrT3GWM951Pgzx40OYYILpxOs=
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 25 Jun 2020 11:49:38 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 25 Jun 2020 11:49:38 GMT
&lt; Date: Thu, 25 Jun 2020 11:49:38 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Thu, 25 Jun 2020 11:49:38 GMT
&lt; Date: Thu, 25 Jun 2020 11:49:38 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCF7zgMGB4gu7fgcIYFebk0FIWbDly67bdUCW2NlI6SPZKCBZY3lHwdvZaDnO6EJnc00NIBbYZsN5Gd2B56tdGuYS5
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593121778572&amp;s=zjGQGvv+BDPDynXP4XvKCCBtIzBNFo9bd68TkPdQ+Z4="; Path=/; HttpOnly
&lt; Last-Modified: Thu, 25 Jun 2020 10:46:04 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2923
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Thu, 25 Jun 2020 11:49:38 GMT
Cache-Control: no-cache
Expires: Thu, 25 Jun 2020 11:49:38 GMT
Date: Thu, 25 Jun 2020 11:49:38 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Thu, 25 Jun 2020 11:49:38 GMT
Date: Thu, 25 Jun 2020 11:49:38 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCF7zgMGB4gu7fgcIYFebk0FIWbDly67bdUCW2NlI6SPZKCBZY3lHwdvZaDnO6EJnc00NIBbYZsN5Gd2B56tdGuYS5
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593121778572&amp;s=zjGQGvv+BDPDynXP4XvKCCBtIzBNFo9bd68TkPdQ+Z4="; Path=/; HttpOnly
Last-Modified: Thu, 25 Jun 2020 10:46:04 GMT
Accept-Ranges: bytes
Content-Length: 2923
</msg>
<status status="PASS" starttime="20200625 11:49:38.578" endtime="20200625 11:49:38.578"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:49:38.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:49:38.578" endtime="20200625 11:49:38.579"></status>
</kw>
<msg timestamp="20200625 11:49:38.579" level="INFO">${result} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.8...
* Connected to scm (172.26.0.8) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200625 11:49:38.550" endtime="20200625 11:49:38.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200625 11:49:38.579" endtime="20200625 11:49:38.579"></status>
</kw>
<status status="PASS" starttime="20200625 11:49:38.502" endtime="20200625 11:49:38.580"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200625 11:49:38.501" endtime="20200625 11:49:38.580" critical="yes"></status>
</test>
<test id="s1-s1-t6" name="Test Recon portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${RECON_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:49:38.584" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:49:38.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:49:38.587" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:49:38.582" endtime="20200625 11:49:38.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:49:38.588" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:49:38.587" endtime="20200625 11:49:38.588"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:49:38.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:49:38.588" endtime="20200625 11:49:38.588"></status>
</kw>
<status status="PASS" starttime="20200625 11:49:38.582" endtime="20200625 11:49:38.588"></status>
</kw>
<status status="PASS" starttime="20200625 11:49:38.581" endtime="20200625 11:49:38.588"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:49:38.592" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:49:38.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:49:38.605" level="INFO">${output} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.4...
* Connected to recon (172.26.0.4) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200625 11:49:38.589" endtime="20200625 11:49:38.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:49:38.606" level="INFO">* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.4...
* Connected to recon (172.26.0.4) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 441
&lt; 
* Connection #0 to host recon left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 441
</msg>
<status status="PASS" starttime="20200625 11:49:38.605" endtime="20200625 11:49:38.606"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:49:38.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:49:38.606" endtime="20200625 11:49:38.606"></status>
</kw>
<msg timestamp="20200625 11:49:38.607" level="INFO">${result} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.4...
* Connected to recon (172.26.0.4) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200625 11:49:38.588" endtime="20200625 11:49:38.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200625 11:49:38.607" endtime="20200625 11:49:38.607"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:49:38.610" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:49:38.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:49:38.612" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200625 11:49:38.608" endtime="20200625 11:49:38.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:49:38.612" level="INFO">scm</msg>
<status status="PASS" starttime="20200625 11:49:38.612" endtime="20200625 11:49:38.612"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:49:38.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:49:38.613" endtime="20200625 11:49:38.613"></status>
</kw>
<msg timestamp="20200625 11:49:38.613" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200625 11:49:38.608" endtime="20200625 11:49:38.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200625 11:49:38.614" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200625 11:49:38.613" endtime="20200625 11:49:38.614"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:49:38.617" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:49:38.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:49:38.627" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:49:38.615" endtime="20200625 11:49:38.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:49:38.628" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:49:38.628" endtime="20200625 11:49:38.628"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:49:38.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:49:38.628" endtime="20200625 11:49:38.629"></status>
</kw>
<status status="PASS" starttime="20200625 11:49:38.614" endtime="20200625 11:49:38.629"></status>
</kw>
<status status="PASS" starttime="20200625 11:49:38.614" endtime="20200625 11:49:38.629"></status>
</kw>
<status status="PASS" starttime="20200625 11:49:38.607" endtime="20200625 11:49:38.629"></status>
</kw>
<status status="PASS" starttime="20200625 11:49:38.607" endtime="20200625 11:49:38.629"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:49:38.631" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:49:38.657" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:49:38.657" level="INFO">${output} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.4...
* Connected to recon (172.26.0.4) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200625 11:49:38.630" endtime="20200625 11:49:38.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:49:38.658" level="INFO">* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.4...
* Connected to recon (172.26.0.4) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 441
&lt; 
* Connection #0 to host recon left intact
* Issue another request to this URL: 'http://recon:9888/'
* Found bundle for host recon: 0x1ba6f20
* Re-using existing connection! (#0) with host recon
* Connected to recon (172.26.0.4) port 9888 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWwYJKoZIhvcSAQICAQBuggJKMIICRqADAgEFoQMCAQ6iBwMFACAAAACjggFWYYIBUjCCAU6gAwIBBaENGwtFWEFNUExFLkNPTaIYMBagAwIBA6EPMA0bBEhUVFAbBXJlY29uo4IBHDCCARigAwIBEqEDAgECooIBCgSCAQab0ALOfC3txl9JTVfliZNjlfXSo/fzSNlS2riHnOJx4eKiOLDF4cwOVg0ICXam9DGGVWfvCwPRUt8BHQgBdKLGxFCVj6W76QrDEBja751vLeCQUWZ+WeNuNPlNdKgnsN7qJn5VDwAMkEt+W1W+M1luRNIOtdcgs4VTMx+MDZ1PjqRj+XuqWPmDQUloaZF1xVBouTsytOY3wp1TSydb9LVBeHUUn9Vf7OtiO1yPY1ZLEsU//rZRMf3ho1KSWAo4cNwi3fzYNpGkIwmJevdhmEJrZc+SYPAQ/yMR8792go0yRg3kxX3EwaUslX2tV0ItlKJDM4tg6XQJi9yDr/uJxzu0WzZteKl8pIHWMIHToAMCARKigcsEgcgS5z0lyD/qYVhXWI5aA0uUbH416PToU+QLwpjwMOHO54eC3pxmXHOKbbT4EuZw3YqsEAyQEl12OCt8sSQ7xh/FW3AKbX8oRhpG5ksymp3ed6y0ThwEbk1I9jafyvf4s4Ia+8XW4DoN2FPptcTsLRElG9rA83hTkRKDclya3xFbbbjf6hhRXRmEZ2MR+eBdwgoPn92o1bE/INHwridtppb/zfb6AA76FWdolqrYtXiU4DiXmbsiqOtxRC/SRZOYJHnBmWUkSaXC3A==
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 25 Jun 2020 11:49:38 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 25 Jun 2020 11:49:38 GMT
&lt; Date: Thu, 25 Jun 2020 11:49:38 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Thu, 25 Jun 2020 11:49:38 GMT
&lt; Date: Thu, 25 Jun 2020 11:49:38 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCwkgIhZ5Yi/GruxpGgS0dVFJrHjTdtFFTvxhYQTSoYosQbbtlC2iToZ2iz8WzzKzHKI13C68BSjREXLxqOKzPV5UV
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593121778651&amp;s=5eXhgWYtmqtWQerfMnsp9gLY1WyooyqPS+MlV32rHxU="; Path=/; HttpOnly
&lt; Last-Modified: Thu, 25 Jun 2020 10:48:36 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2267
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 441

HTTP/1.1 200 OK
Date: Thu, 25 Jun 2020 11:49:38 GMT
Cache-Control: no-cache
Expires: Thu, 25 Jun 2020 11:49:38 GMT
Date: Thu, 25 Jun 2020 11:49:38 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Thu, 25 Jun 2020 11:49:38 GMT
Date: Thu, 25 Jun 2020 11:49:38 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCwkgIhZ5Yi/GruxpGgS0dVFJrHjTdtFFTvxhYQTSoYosQbbtlC2iToZ2iz8WzzKzHKI13C68BSjREXLxqOKzPV5UV
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593121778651&amp;s=5eXhgWYtmqtWQerfMnsp9gLY1WyooyqPS+MlV32rHxU="; Path=/; HttpOnly
Last-Modified: Thu, 25 Jun 2020 10:48:36 GMT
Accept-Ranges: bytes
Content-Length: 2267
</msg>
<status status="PASS" starttime="20200625 11:49:38.657" endtime="20200625 11:49:38.658"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:49:38.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:49:38.658" endtime="20200625 11:49:38.658"></status>
</kw>
<msg timestamp="20200625 11:49:38.658" level="INFO">${result} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.4...
* Connected to recon (172.26.0.4) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200625 11:49:38.629" endtime="20200625 11:49:38.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200625 11:49:38.659" endtime="20200625 11:49:38.659"></status>
</kw>
<status status="PASS" starttime="20200625 11:49:38.581" endtime="20200625 11:49:38.659"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200625 11:49:38.580" endtime="20200625 11:49:38.659" critical="yes"></status>
</test>
<doc>Smoke test for spnego with docker-compose environments.</doc>
<status status="PASS" starttime="20200625 11:49:30.821" endtime="20200625 11:49:38.660"></status>
</suite>
<status status="PASS" starttime="20200625 11:49:30.797" endtime="20200625 11:49:38.661"></status>
</suite>
<statistics>
<total>
<stat pass="6" fail="0">Critical Tests</stat>
<stat pass="6" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="6" fail="0" id="s1" name="ozonesecure-spnego">ozonesecure-spnego</stat>
<stat pass="6" fail="0" id="s1-s1" name="Web">ozonesecure-spnego.Web</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
