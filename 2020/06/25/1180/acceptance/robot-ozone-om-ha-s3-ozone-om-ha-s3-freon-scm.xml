<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200625 11:04:22.142" rpa="false">
<suite id="s1" name="ozone-om-ha-s3-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:04:22.192" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:04:29.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:04:29.276" level="INFO">${output} = 2020-06-25 11:04:22,988 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-25 11:04:23,122 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200625 11:04:22.187" endtime="20200625 11:04:29.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:04:29.277" level="INFO">2020-06-25 11:04:22,988 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-25 11:04:23,122 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-25 11:04:23,122 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-25 11:04:23,812 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-06-25 11:04:23,814 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-06-25 11:04:23,814 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-06-25 11:04:23,814 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-06-25 11:04:23,814 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-06-25 11:04:23,814 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-25 11:04:23,814 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-06-25 11:04:23,816 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-25 11:04:23,823 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-25 11:04:23,850 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-84883, with hadoop as owner.
2020-06-25 11:04:23,875 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-84883/bucket-0-17204, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-25 11:04:24,349 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-25 11:04:24,830 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,044
Average Time spent in bucket creation: 00:00:00,014
Average Time spent in key creation: 00:00:00,053
Average Time spent in key write: 00:00:00,541
Total bytes written: 10240
Total Execution time: 00:00:05,633
***************************************************</msg>
<status status="PASS" starttime="20200625 11:04:29.276" endtime="20200625 11:04:29.277"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:04:29.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:04:29.277" endtime="20200625 11:04:29.278"></status>
</kw>
<msg timestamp="20200625 11:04:29.278" level="INFO">${result} = 2020-06-25 11:04:22,988 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-25 11:04:23,122 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200625 11:04:22.187" endtime="20200625 11:04:29.278"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200625 11:04:29.278" endtime="20200625 11:04:29.279"></status>
</kw>
<status status="PASS" starttime="20200625 11:04:29.278" endtime="20200625 11:04:29.279"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200625 11:04:22.187" endtime="20200625 11:04:29.279" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:04:29.283" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:04:33.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:04:33.433" level="INFO">${output} = 2020-06-25 11:04:30,074 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-25 11:04:30,219 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200625 11:04:29.280" endtime="20200625 11:04:33.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:04:33.434" level="INFO">2020-06-25 11:04:30,074 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-25 11:04:30,219 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-25 11:04:30,220 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-25 11:04:30,389 [main] INFO freon.BaseFreonGenerator: Executing test with prefix zu0cqsyfai
2020-06-25 11:04:30,409 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-25 11:04:30,913 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-06-25 11:04:30,943 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-25 11:04:31,410 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-25 11:04:31,453 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-25 11:04:32,410 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-25 11:04:33,103 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=1112.770364, max=1112.770364, mean=1112.770364, stddev=0.0, median=1112.770364, p75=1112.770364, p95=1112.770364, p98=1112.770364, p99=1112.770364, p999=1112.770364, mean_rate=0.4684955498917161, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-25 11:04:33,103 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-06-25 11:04:33,103 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-25 11:04:33,103 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200625 11:04:33.434" endtime="20200625 11:04:33.434"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:04:33.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:04:33.434" endtime="20200625 11:04:33.435"></status>
</kw>
<msg timestamp="20200625 11:04:33.435" level="INFO">${result} = 2020-06-25 11:04:30,074 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-25 11:04:30,219 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200625 11:04:29.280" endtime="20200625 11:04:33.435"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200625 11:04:33.436" endtime="20200625 11:04:33.436"></status>
</kw>
<status status="PASS" starttime="20200625 11:04:33.435" endtime="20200625 11:04:33.436"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200625 11:04:29.279" endtime="20200625 11:04:33.436" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:04:33.440" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:04:36.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:04:36.114" level="INFO">${output} = 2020-06-25 11:04:34,180 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-25 11:04:34,313 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200625 11:04:33.438" endtime="20200625 11:04:36.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:04:36.115" level="INFO">2020-06-25 11:04:34,180 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-25 11:04:34,313 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-25 11:04:34,313 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-25 11:04:34,492 [main] INFO freon.BaseFreonGenerator: Executing test with prefix r5j2gunpaa
2020-06-25 11:04:34,506 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-25 11:04:35,510 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-25 11:04:36,103 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=51.968005, max=51.968005, mean=51.968005, stddev=0.0, median=51.968005, p75=51.968005, p95=51.968005, p98=51.968005, p99=51.968005, p999=51.968005, mean_rate=0.9020840141549322, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-25 11:04:36,104 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-06-25 11:04:36,104 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-25 11:04:36,104 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200625 11:04:36.114" endtime="20200625 11:04:36.115"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:04:36.115" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:04:36.115" endtime="20200625 11:04:36.116"></status>
</kw>
<msg timestamp="20200625 11:04:36.116" level="INFO">${result} = 2020-06-25 11:04:34,180 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-25 11:04:34,313 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200625 11:04:33.437" endtime="20200625 11:04:36.116"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200625 11:04:36.116" endtime="20200625 11:04:36.117"></status>
</kw>
<status status="PASS" starttime="20200625 11:04:36.116" endtime="20200625 11:04:36.117"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200625 11:04:33.437" endtime="20200625 11:04:36.117" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:04:36.122" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:04:38.773" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:04:38.773" level="INFO">${output} = 2020-06-25 11:04:36,860 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-25 11:04:36,992 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200625 11:04:36.119" endtime="20200625 11:04:38.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:04:38.774" level="INFO">2020-06-25 11:04:36,860 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-25 11:04:36,992 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-25 11:04:36,992 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-25 11:04:37,206 [main] INFO freon.BaseFreonGenerator: Executing test with prefix k73ulc8xgj
2020-06-25 11:04:37,218 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-25 11:04:38,232 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-25 11:04:38,760 [Thread-2] INFO metrics: type=TIMER, name=bucket-create, count=1, min=15.566177, max=15.566177, mean=15.566177, stddev=0.0, median=15.566177, p75=15.566177, p95=15.566177, p98=15.566177, p99=15.566177, p999=15.566177, mean_rate=0.9001752274796586, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-25 11:04:38,761 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-06-25 11:04:38,761 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-25 11:04:38,761 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200625 11:04:38.773" endtime="20200625 11:04:38.774"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:04:38.775" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:04:38.774" endtime="20200625 11:04:38.775"></status>
</kw>
<msg timestamp="20200625 11:04:38.775" level="INFO">${result} = 2020-06-25 11:04:36,860 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-25 11:04:36,992 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200625 11:04:36.118" endtime="20200625 11:04:38.775"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200625 11:04:38.775" endtime="20200625 11:04:38.776"></status>
</kw>
<status status="PASS" starttime="20200625 11:04:38.775" endtime="20200625 11:04:38.776"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200625 11:04:36.118" endtime="20200625 11:04:38.776" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200625 11:04:22.165" endtime="20200625 11:04:38.777"></status>
</suite>
<status status="PASS" starttime="20200625 11:04:22.142" endtime="20200625 11:04:38.779"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-om-ha-s3-freon">ozone-om-ha-s3-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-om-ha-s3-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
