<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200625 11:08:30.670" rpa="false">
<suite id="s1" name="ozone-basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200625 11:08:30.715" endtime="20200625 11:08:30.716"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:08:30.719" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:08:30.802" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:08:30.803" level="INFO">${output} = HTTP/1.1 200 OK
Date: Thu, 25 Jun 2020 11:08:30 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Thu, 25 Jun 2020 10:45:54 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200625 11:08:30.716" endtime="20200625 11:08:30.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:08:30.804" level="INFO">HTTP/1.1 200 OK
Date: Thu, 25 Jun 2020 11:08:30 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Thu, 25 Jun 2020 10:45:54 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20200625 11:08:30.803" endtime="20200625 11:08:30.804"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:08:30.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:08:30.804" endtime="20200625 11:08:30.804"></status>
</kw>
<msg timestamp="20200625 11:08:30.804" level="INFO">${result} = HTTP/1.1 200 OK
Date: Thu, 25 Jun 2020 11:08:30 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Thu, 25 Jun 2020 10:45:54 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200625 11:08:30.716" endtime="20200625 11:08:30.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200625 11:08:30.805" endtime="20200625 11:08:30.805"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200625 11:08:30.715" endtime="20200625 11:08:30.805" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200625 11:08:30.807" endtime="20200625 11:08:30.808"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:08:30.813" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:09:23.099" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:09:23.099" level="INFO">${output} = 2020-06-25 11:08:31,615 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-25 11:08:31,746 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200625 11:08:30.808" endtime="20200625 11:09:23.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:09:23.100" level="INFO">2020-06-25 11:08:31,615 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-25 11:08:31,746 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-25 11:08:31,746 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-25 11:08:32,718 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-06-25 11:08:32,719 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-06-25 11:08:32,719 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-06-25 11:08:32,719 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-06-25 11:08:32,719 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-06-25 11:08:32,719 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-25 11:08:32,719 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-06-25 11:08:32,724 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-06-25 11:08:32,725 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-25 11:08:32,735 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-06-25 11:08:32,760 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-84188, with hadoop as owner.
2020-06-25 11:08:32,864 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-66997, with hadoop as owner.
2020-06-25 11:08:32,869 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-46583, with hadoop as owner.
2020-06-25 11:08:32,874 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-83248, with hadoop as owner.
2020-06-25 11:08:32,878 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-36237, with hadoop as owner.
2020-06-25 11:08:32,884 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-84188/bucket-0-88426, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-25 11:08:32,906 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-66997/bucket-0-71721, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-25 11:08:32,909 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-46583/bucket-0-34235, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-25 11:08:32,915 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-83248/bucket-0-76346, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-25 11:08:32,919 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-36237/bucket-0-45350, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-25 11:08:32,922 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-84188/bucket-1-91097, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-25 11:08:32,926 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-66997/bucket-1-50180, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-25 11:08:32,929 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-46583/bucket-1-23372, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-25 11:08:32,932 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-83248/bucket-1-54018, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-25 11:08:32,935 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-36237/bucket-1-13904, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-25 11:08:32,938 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-84188/bucket-2-14455, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-25 11:08:32,941 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-66997/bucket-2-14889, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-25 11:08:32,944 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-46583/bucket-2-20317, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-25 11:08:32,948 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-83248/bucket-2-28805, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-25 11:08:32,953 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-36237/bucket-2-56376, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-25 11:08:32,957 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-84188/bucket-3-72837, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-25 11:08:32,960 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-66997/bucket-3-01559, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-25 11:08:32,965 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-46583/bucket-3-00979, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-25 11:08:32,967 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-83248/bucket-3-14876, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-25 11:08:32,970 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-36237/bucket-3-37004, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-25 11:08:32,974 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-84188/bucket-4-98077, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-25 11:08:32,977 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-66997/bucket-4-92875, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-25 11:08:32,982 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-46583/bucket-4-94022, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-25 11:08:32,985 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-83248/bucket-4-48460, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-25 11:08:32,990 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-36237/bucket-4-95154, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-25 11:08:33,531 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-25 11:08:33,739 [Thread-5] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-06-25 11:08:34,740 [Thread-5] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-06-25 11:08:35,740 [Thread-5] INFO freon.ProgressBar: Progress: 2.40 % (3 out of 125)
2020-06-25 11:08:36,741 [Thread-5] INFO freon.ProgressBar: Progress: 2.40 % (3 out of 125)
2020-06-25 11:08:37,741 [Thread-5] INFO freon.ProgressBar: Progress: 3.20 % (4 out of 125)
2020-06-25 11:08:38,743 [Thread-5] INFO freon.ProgressBar: Progress: 12.80 % (16 out of 125)
2020-06-25 11:08:39,743 [Thread-5] INFO freon.ProgressBar: Progress: 16.80 % (21 out of 125)
2020-06-25 11:08:40,744 [Thread-5] INFO freon.ProgressBar: Progress: 16.80 % (21 out of 125)
2020-06-25 11:08:41,744 [Thread-5] INFO freon.ProgressBar: Progress: 17.60 % (22 out of 125)
2020-06-25 11:08:42,745 [Thread-5] INFO freon.ProgressBar: Progress: 20.80 % (26 out of 125)
2020-06-25 11:08:43,745 [Thread-5] INFO freon.ProgressBar: Progress: 20.80 % (26 out of 125)
2020-06-25 11:08:44,746 [Thread-5] INFO freon.ProgressBar: Progress: 22.40 % (28 out of 125)
2020-06-25 11:08:45,746 [Thread-5] INFO freon.ProgressBar: Progress: 22.40 % (28 out of 125)
2020-06-25 11:08:46,747 [Thread-5] INFO freon.ProgressBar: Progress: 22.40 % (28 out of 125)
2020-06-25 11:08:47,747 [Thread-5] INFO freon.ProgressBar: Progress: 23.20 % (29 out of 125)
2020-06-25 11:08:48,748 [Thread-5] INFO freon.ProgressBar: Progress: 23.20 % (29 out of 125)
2020-06-25 11:08:49,751 [Thread-5] INFO freon.ProgressBar: Progress: 24.00 % (30 out of 125)
2020-06-25 11:08:50,751 [Thread-5] INFO freon.ProgressBar: Progress: 32.80 % (41 out of 125)
2020-06-25 11:08:51,752 [Thread-5] INFO freon.ProgressBar: Progress: 32.80 % (41 out of 125)
2020-06-25 11:08:52,752 [Thread-5] INFO freon.ProgressBar: Progress: 32.80 % (41 out of 125)
2020-06-25 11:08:53,753 [Thread-5] INFO freon.ProgressBar: Progress: 44.00 % (55 out of 125)
2020-06-25 11:08:54,753 [Thread-5] INFO freon.ProgressBar: Progress: 44.00 % (55 out of 125)
2020-06-25 11:08:55,754 [Thread-5] INFO freon.ProgressBar: Progress: 44.00 % (55 out of 125)
2020-06-25 11:08:56,754 [Thread-5] INFO freon.ProgressBar: Progress: 48.80 % (61 out of 125)
2020-06-25 11:08:57,755 [Thread-5] INFO freon.ProgressBar: Progress: 48.80 % (61 out of 125)
2020-06-25 11:08:58,755 [Thread-5] INFO freon.ProgressBar: Progress: 48.80 % (61 out of 125)
2020-06-25 11:08:59,756 [Thread-5] INFO freon.ProgressBar: Progress: 50.40 % (63 out of 125)
2020-06-25 11:09:00,756 [Thread-5] INFO freon.ProgressBar: Progress: 50.40 % (63 out of 125)
2020-06-25 11:09:01,760 [Thread-5] INFO freon.ProgressBar: Progress: 52.80 % (66 out of 125)
2020-06-25 11:09:02,761 [Thread-5] INFO freon.ProgressBar: Progress: 53.60 % (67 out of 125)
2020-06-25 11:09:03,761 [Thread-5] INFO freon.ProgressBar: Progress: 53.60 % (67 out of 125)
2020-06-25 11:09:04,762 [Thread-5] INFO freon.ProgressBar: Progress: 54.40 % (68 out of 125)
2020-06-25 11:09:05,762 [Thread-5] INFO freon.ProgressBar: Progress: 54.40 % (68 out of 125)
2020-06-25 11:09:06,763 [Thread-5] INFO freon.ProgressBar: Progress: 54.40 % (68 out of 125)
2020-06-25 11:09:07,763 [Thread-5] INFO freon.ProgressBar: Progress: 60.00 % (75 out of 125)
2020-06-25 11:09:08,764 [Thread-5] INFO freon.ProgressBar: Progress: 60.00 % (75 out of 125)
2020-06-25 11:09:09,764 [Thread-5] INFO freon.ProgressBar: Progress: 60.00 % (75 out of 125)
2020-06-25 11:09:10,765 [Thread-5] INFO freon.ProgressBar: Progress: 68.80 % (86 out of 125)
2020-06-25 11:09:11,765 [Thread-5] INFO freon.ProgressBar: Progress: 76.00 % (95 out of 125)
2020-06-25 11:09:12,766 [Thread-5] INFO freon.ProgressBar: Progress: 76.00 % (95 out of 125)
2020-06-25 11:09:13,766 [Thread-5] INFO freon.ProgressBar: Progress: 77.60 % (97 out of 125)
2020-06-25 11:09:14,767 [Thread-5] INFO freon.ProgressBar: Progress: 90.40 % (113 out of 125)
2020-06-25 11:09:15,767 [Thread-5] INFO freon.ProgressBar: Progress: 90.40 % (113 out of 125)
2020-06-25 11:09:16,768 [Thread-5] INFO freon.ProgressBar: Progress: 90.40 % (113 out of 125)
2020-06-25 11:09:17,768 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,129
Average Time spent in bucket creation: 00:00:00,072
Average Time spent in key creation: 00:00:01,260
Average Time spent in key write: 00:00:00,670
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:00:50,858
***************************************************</msg>
<status status="PASS" starttime="20200625 11:09:23.100" endtime="20200625 11:09:23.101"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:09:23.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:09:23.101" endtime="20200625 11:09:23.101"></status>
</kw>
<msg timestamp="20200625 11:09:23.101" level="INFO">${result} = 2020-06-25 11:08:31,615 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-25 11:08:31,746 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200625 11:08:30.808" endtime="20200625 11:09:23.102"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" starttime="20200625 11:09:23.102" endtime="20200625 11:09:23.102"></status>
</kw>
<status status="PASS" starttime="20200625 11:09:23.102" endtime="20200625 11:09:23.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" starttime="20200625 11:09:23.103" endtime="20200625 11:09:23.103"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200625 11:08:30.806" endtime="20200625 11:09:23.103" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200625 11:08:30.695" endtime="20200625 11:09:23.104"></status>
</suite>
<suite id="s1-s2" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200625 11:09:23.110" level="INFO">${random} = 15032</msg>
<status status="PASS" starttime="20200625 11:09:23.110" endtime="20200625 11:09:23.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200625 11:09:23.111" level="INFO">${prefix} = 15032</msg>
<status status="PASS" starttime="20200625 11:09:23.110" endtime="20200625 11:09:23.111"></status>
</kw>
<status status="PASS" starttime="20200625 11:09:23.110" endtime="20200625 11:09:23.111"></status>
</kw>
<test id="s1-s2-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200625 11:09:23.111" endtime="20200625 11:09:23.112"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:09:23.114" level="INFO">Running command 'ozone sh volume info o3://om:9862/15032-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:09:24.568" level="INFO">${rc} = 255</msg>
<msg timestamp="20200625 11:09:24.568" level="INFO">${output} = VOLUME_NOT_FOUND Volume 15032-rpcwoport is not found</msg>
<status status="PASS" starttime="20200625 11:09:23.112" endtime="20200625 11:09:24.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:09:24.569" level="INFO">VOLUME_NOT_FOUND Volume 15032-rpcwoport is not found</msg>
<status status="PASS" starttime="20200625 11:09:24.568" endtime="20200625 11:09:24.569"></status>
</kw>
<msg timestamp="20200625 11:09:24.569" level="INFO">${result} = VOLUME_NOT_FOUND Volume 15032-rpcwoport is not found</msg>
<status status="PASS" starttime="20200625 11:09:23.112" endtime="20200625 11:09:24.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200625 11:09:24.569" endtime="20200625 11:09:24.570"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:09:24.573" level="INFO">Running command 'ozone sh volume create o3://om:9862/15032-rpcwoport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:09:26.122" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:09:26.122" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:09:24.570" endtime="20200625 11:09:26.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:09:26.123" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:09:26.122" endtime="20200625 11:09:26.123"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:09:26.124" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:09:26.123" endtime="20200625 11:09:26.124"></status>
</kw>
<msg timestamp="20200625 11:09:26.124" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200625 11:09:24.570" endtime="20200625 11:09:26.124"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200625 11:09:26.124" endtime="20200625 11:09:26.124"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:09:26.128" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="15032-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:09:27.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:09:27.886" level="INFO">${output} = {
  "metadata": {},
  "name": "15032-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-25T11:09:26.003Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200625 11:09:26.125" endtime="20200625 11:09:27.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:09:27.887" level="INFO">{
  "metadata": {},
  "name": "15032-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-25T11:09:26.003Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200625 11:09:27.886" endtime="20200625 11:09:27.887"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:09:27.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:09:27.887" endtime="20200625 11:09:27.887"></status>
</kw>
<msg timestamp="20200625 11:09:27.888" level="INFO">${result} = {
  "metadata": {},
  "name": "15032-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-25T11:09:26.003Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200625 11:09:26.124" endtime="20200625 11:09:27.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200625 11:09:27.888" endtime="20200625 11:09:27.888"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:09:27.892" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="15032-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:09:29.685" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:09:29.685" level="INFO">${output} = {
  "metadata": {},
  "name": "15032-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-25T11:09:26.003Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200625 11:09:27.889" endtime="20200625 11:09:29.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:09:29.686" level="INFO">{
  "metadata": {},
  "name": "15032-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-25T11:09:26.003Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200625 11:09:29.686" endtime="20200625 11:09:29.686"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:09:29.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:09:29.687" endtime="20200625 11:09:29.687"></status>
</kw>
<msg timestamp="20200625 11:09:29.687" level="INFO">${result} = {
  "metadata": {},
  "name": "15032-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-25T11:09:26.003Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200625 11:09:27.888" endtime="20200625 11:09:29.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200625 11:09:29.687" endtime="20200625 11:09:29.688"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:09:29.690" level="INFO">Running command 'ozone sh volume update o3://om:9862/15032-rpcwoport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:09:31.316" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:09:31.316" level="INFO">${output} = {
  "metadata" : { },
  "name" : "15032-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-25T11:09:26.003Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop"...</msg>
<status status="PASS" starttime="20200625 11:09:29.688" endtime="20200625 11:09:31.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:09:31.317" level="INFO">{
  "metadata" : { },
  "name" : "15032-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-25T11:09:26.003Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200625 11:09:31.317" endtime="20200625 11:09:31.317"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:09:31.318" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:09:31.318" endtime="20200625 11:09:31.318"></status>
</kw>
<status status="PASS" starttime="20200625 11:09:29.688" endtime="20200625 11:09:31.318"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:09:31.321" level="INFO">Running command 'ozone sh volume info o3://om:9862/15032-rpcwoport | jq -r '. | select(.name=="15032-rpcwoport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:09:32.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:09:32.961" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200625 11:09:31.319" endtime="20200625 11:09:32.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:09:32.962" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200625 11:09:32.962" endtime="20200625 11:09:32.963"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:09:32.963" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:09:32.963" endtime="20200625 11:09:32.963"></status>
</kw>
<msg timestamp="20200625 11:09:32.963" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200625 11:09:31.318" endtime="20200625 11:09:32.963"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200625 11:09:32.963" endtime="20200625 11:09:32.964"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:09:32.967" level="INFO">Running command 'ozone sh bucket create o3://om:9862/15032-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:09:34.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:09:34.476" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:09:32.964" endtime="20200625 11:09:34.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:09:34.477" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:09:34.476" endtime="20200625 11:09:34.478"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:09:34.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:09:34.478" endtime="20200625 11:09:34.478"></status>
</kw>
<status status="PASS" starttime="20200625 11:09:32.964" endtime="20200625 11:09:34.478"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:09:34.482" level="INFO">Running command 'ozone sh bucket info o3://om:9862/15032-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:09:36.404" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:09:36.404" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200625 11:09:34.479" endtime="20200625 11:09:36.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:09:36.405" level="INFO">DISK</msg>
<status status="PASS" starttime="20200625 11:09:36.405" endtime="20200625 11:09:36.406"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:09:36.406" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:09:36.406" endtime="20200625 11:09:36.406"></status>
</kw>
<msg timestamp="20200625 11:09:36.406" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200625 11:09:34.478" endtime="20200625 11:09:36.406"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200625 11:09:36.406" endtime="20200625 11:09:36.407"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:09:36.410" level="INFO">Running command 'ozone sh bucket list o3://om:9862/15032-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:09:38.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:09:38.014" level="INFO">${output} = 15032-rpcwoport</msg>
<status status="PASS" starttime="20200625 11:09:36.408" endtime="20200625 11:09:38.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:09:38.015" level="INFO">15032-rpcwoport</msg>
<status status="PASS" starttime="20200625 11:09:38.014" endtime="20200625 11:09:38.015"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:09:38.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:09:38.015" endtime="20200625 11:09:38.015"></status>
</kw>
<msg timestamp="20200625 11:09:38.016" level="INFO">${result} = 15032-rpcwoport</msg>
<status status="PASS" starttime="20200625 11:09:36.407" endtime="20200625 11:09:38.016"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200625 11:09:38.016" endtime="20200625 11:09:38.016"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:09:38.020" level="INFO">Running command 'ozone sh key put o3://om:9862/15032-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:09:41.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:09:41.383" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:09:38.018" endtime="20200625 11:09:41.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:09:41.384" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:09:41.383" endtime="20200625 11:09:41.384"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:09:41.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:09:41.384" endtime="20200625 11:09:41.384"></status>
</kw>
<status status="PASS" starttime="20200625 11:09:38.017" endtime="20200625 11:09:41.384"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:09:41.387" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:09:41.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:09:41.389" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:09:41.385" endtime="20200625 11:09:41.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:09:41.389" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:09:41.389" endtime="20200625 11:09:41.389"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:09:41.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:09:41.389" endtime="20200625 11:09:41.390"></status>
</kw>
<status status="PASS" starttime="20200625 11:09:41.384" endtime="20200625 11:09:41.390"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:09:41.392" level="INFO">Running command 'ozone sh key get o3://om:9862/15032-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:09:44.235" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:09:44.235" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:09:41.390" endtime="20200625 11:09:44.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:09:44.236" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:09:44.236" endtime="20200625 11:09:44.237"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:09:44.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:09:44.237" endtime="20200625 11:09:44.238"></status>
</kw>
<status status="PASS" starttime="20200625 11:09:41.390" endtime="20200625 11:09:44.238"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:09:44.240" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:09:44.244" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:09:44.244" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:09:44.238" endtime="20200625 11:09:44.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:09:44.244" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:09:44.244" endtime="20200625 11:09:44.245"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:09:44.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:09:44.245" endtime="20200625 11:09:44.245"></status>
</kw>
<status status="PASS" starttime="20200625 11:09:44.238" endtime="20200625 11:09:44.245"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:09:44.248" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/15032-rpcwoport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:09:47.246" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:09:47.246" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:09:44.246" endtime="20200625 11:09:47.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:09:47.247" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:09:47.246" endtime="20200625 11:09:47.247"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:09:47.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:09:47.247" endtime="20200625 11:09:47.248"></status>
</kw>
<status status="PASS" starttime="20200625 11:09:44.245" endtime="20200625 11:09:47.248"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:09:47.250" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:09:47.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:09:47.253" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:09:47.249" endtime="20200625 11:09:47.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:09:47.253" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:09:47.253" endtime="20200625 11:09:47.254"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:09:47.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:09:47.254" endtime="20200625 11:09:47.254"></status>
</kw>
<status status="PASS" starttime="20200625 11:09:47.248" endtime="20200625 11:09:47.254"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:09:47.256" level="INFO">Running command 'ozone sh key get o3://om:9862/15032-rpcwoport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:09:50.300" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:09:50.300" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:09:47.255" endtime="20200625 11:09:50.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:09:50.301" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:09:50.300" endtime="20200625 11:09:50.301"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:09:50.302" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:09:50.301" endtime="20200625 11:09:50.302"></status>
</kw>
<status status="PASS" starttime="20200625 11:09:47.254" endtime="20200625 11:09:50.302"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:09:50.304" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:09:50.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:09:50.307" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:09:50.302" endtime="20200625 11:09:50.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:09:50.307" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:09:50.307" endtime="20200625 11:09:50.307"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:09:50.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:09:50.308" endtime="20200625 11:09:50.308"></status>
</kw>
<status status="PASS" starttime="20200625 11:09:50.302" endtime="20200625 11:09:50.308"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:09:50.311" level="INFO">Running command 'ozone sh key info o3://om:9862/15032-rpcwoport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:09:52.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:09:52.127" level="INFO">${output} = {
  "volumeName": "15032-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-25T11:09:45.737Z",
  "modificationTime": "2020-06-25T11:09:46.898Z",...</msg>
<status status="PASS" starttime="20200625 11:09:50.309" endtime="20200625 11:09:52.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:09:52.128" level="INFO">{
  "volumeName": "15032-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-25T11:09:45.737Z",
  "modificationTime": "2020-06-25T11:09:46.898Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104404312767529090,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200625 11:09:52.128" endtime="20200625 11:09:52.128"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:09:52.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:09:52.128" endtime="20200625 11:09:52.129"></status>
</kw>
<msg timestamp="20200625 11:09:52.129" level="INFO">${result} = {
  "volumeName": "15032-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-25T11:09:45.737Z",
  "modificationTime": "2020-06-25T11:09:46.898Z",...</msg>
<status status="PASS" starttime="20200625 11:09:50.308" endtime="20200625 11:09:52.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200625 11:09:52.129" endtime="20200625 11:09:52.130"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:09:52.134" level="INFO">Running command 'ozone sh key delete o3://om:9862/15032-rpcwoport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:09:53.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:09:53.523" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:09:52.130" endtime="20200625 11:09:53.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:09:53.524" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:09:53.524" endtime="20200625 11:09:53.524"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:09:53.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:09:53.524" endtime="20200625 11:09:53.525"></status>
</kw>
<status status="PASS" starttime="20200625 11:09:52.130" endtime="20200625 11:09:53.525"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:09:53.528" level="INFO">Running command 'ozone sh key cp o3://om:9862/15032-rpcwoport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:09:56.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:09:56.828" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:09:53.526" endtime="20200625 11:09:56.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:09:56.829" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:09:56.828" endtime="20200625 11:09:56.829"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:09:56.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:09:56.829" endtime="20200625 11:09:56.829"></status>
</kw>
<status status="PASS" starttime="20200625 11:09:53.525" endtime="20200625 11:09:56.830"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:09:56.833" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:09:56.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:09:56.839" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:09:56.830" endtime="20200625 11:09:56.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:09:56.840" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:09:56.839" endtime="20200625 11:09:56.840"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:09:56.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:09:56.840" endtime="20200625 11:09:56.840"></status>
</kw>
<status status="PASS" starttime="20200625 11:09:56.830" endtime="20200625 11:09:56.841"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:09:56.843" level="INFO">Running command 'ozone sh key get o3://om:9862/15032-rpcwoport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:09:59.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:09:59.765" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:09:56.841" endtime="20200625 11:09:59.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:09:59.766" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:09:59.765" endtime="20200625 11:09:59.766"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:09:59.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:09:59.766" endtime="20200625 11:09:59.767"></status>
</kw>
<status status="PASS" starttime="20200625 11:09:56.841" endtime="20200625 11:09:59.767"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:09:59.770" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:09:59.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:09:59.771" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:09:59.767" endtime="20200625 11:09:59.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:09:59.772" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:09:59.772" endtime="20200625 11:09:59.772"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:09:59.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:09:59.772" endtime="20200625 11:09:59.773"></status>
</kw>
<status status="PASS" starttime="20200625 11:09:59.767" endtime="20200625 11:09:59.773"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:09:59.776" level="INFO">Running command 'ozone sh key delete o3://om:9862/15032-rpcwoport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:10:01.399" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:10:01.399" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:09:59.773" endtime="20200625 11:10:01.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:10:01.400" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:10:01.399" endtime="20200625 11:10:01.400"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:10:01.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:10:01.400" endtime="20200625 11:10:01.400"></status>
</kw>
<status status="PASS" starttime="20200625 11:09:59.773" endtime="20200625 11:10:01.401"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:10:01.404" level="INFO">Running command 'ozone sh key get o3://om:9862/15032-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:10:02.932" level="INFO">${rc} = 255</msg>
<msg timestamp="20200625 11:10:02.932" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200625 11:10:01.401" endtime="20200625 11:10:02.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:10:02.933" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200625 11:10:02.932" endtime="20200625 11:10:02.933"></status>
</kw>
<msg timestamp="20200625 11:10:02.933" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200625 11:10:01.401" endtime="20200625 11:10:02.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200625 11:10:02.934" endtime="20200625 11:10:02.934"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:10:02.938" level="INFO">Running command 'ozone sh key get --force o3://om:9862/15032-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:10:05.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:10:05.789" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:10:02.935" endtime="20200625 11:10:05.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:10:05.790" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:10:05.790" endtime="20200625 11:10:05.790"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:10:05.791" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:10:05.791" endtime="20200625 11:10:05.791"></status>
</kw>
<msg timestamp="20200625 11:10:05.791" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200625 11:10:02.934" endtime="20200625 11:10:05.791"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200625 11:10:05.791" endtime="20200625 11:10:05.791"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:10:05.795" level="INFO">Running command 'ozone sh key info o3://om:9862/15032-rpcwoport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:10:07.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:10:07.549" level="INFO">${output} = {
  "volumeName": "15032-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-25T11:09:39.554Z",
  "modificationTime": "2020-06-25T11:09:40.926Z",
  "re...</msg>
<status status="PASS" starttime="20200625 11:10:05.792" endtime="20200625 11:10:07.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:10:07.550" level="INFO">{
  "volumeName": "15032-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-25T11:09:39.554Z",
  "modificationTime": "2020-06-25T11:09:40.926Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104404312362451070,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200625 11:10:07.549" endtime="20200625 11:10:07.550"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:10:07.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:10:07.550" endtime="20200625 11:10:07.551"></status>
</kw>
<msg timestamp="20200625 11:10:07.551" level="INFO">${result} = {
  "volumeName": "15032-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-25T11:09:39.554Z",
  "modificationTime": "2020-06-25T11:09:40.926Z",
  "re...</msg>
<status status="PASS" starttime="20200625 11:10:05.792" endtime="20200625 11:10:07.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200625 11:10:07.551" endtime="20200625 11:10:07.551"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:10:07.554" level="INFO">Running command 'ozone sh key list o3://om:9862/15032-rpcwoport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:10:09.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:10:09.158" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200625 11:10:07.552" endtime="20200625 11:10:09.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:10:09.159" level="INFO">key1</msg>
<status status="PASS" starttime="20200625 11:10:09.159" endtime="20200625 11:10:09.159"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:10:09.160" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:10:09.160" endtime="20200625 11:10:09.160"></status>
</kw>
<msg timestamp="20200625 11:10:09.161" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200625 11:10:07.551" endtime="20200625 11:10:09.161"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200625 11:10:09.161" endtime="20200625 11:10:09.161"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:10:09.165" level="INFO">Running command 'ozone sh key rename o3://om:9862/15032-rpcwoport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:10:10.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:10:10.587" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:10:09.162" endtime="20200625 11:10:10.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:10:10.588" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:10:10.588" endtime="20200625 11:10:10.588"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:10:10.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:10:10.589" endtime="20200625 11:10:10.589"></status>
</kw>
<status status="PASS" starttime="20200625 11:10:09.161" endtime="20200625 11:10:10.589"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:10:10.593" level="INFO">Running command 'ozone sh key list o3://om:9862/15032-rpcwoport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:10:12.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:10:12.318" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200625 11:10:10.590" endtime="20200625 11:10:12.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:10:12.319" level="INFO">key2</msg>
<status status="PASS" starttime="20200625 11:10:12.319" endtime="20200625 11:10:12.319"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:10:12.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:10:12.319" endtime="20200625 11:10:12.320"></status>
</kw>
<msg timestamp="20200625 11:10:12.320" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200625 11:10:10.589" endtime="20200625 11:10:12.320"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200625 11:10:12.320" endtime="20200625 11:10:12.320"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:10:12.324" level="INFO">Running command 'ozone sh key delete o3://om:9862/15032-rpcwoport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:10:13.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:10:13.842" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:10:12.321" endtime="20200625 11:10:13.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:10:13.843" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:10:13.843" endtime="20200625 11:10:13.843"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:10:13.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:10:13.844" endtime="20200625 11:10:13.844"></status>
</kw>
<status status="PASS" starttime="20200625 11:10:12.321" endtime="20200625 11:10:13.845"></status>
</kw>
<status status="PASS" starttime="20200625 11:09:38.017" endtime="20200625 11:10:13.845"></status>
</kw>
<status status="PASS" starttime="20200625 11:09:38.016" endtime="20200625 11:10:13.845"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:10:13.848" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/15032-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:10:15.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:10:15.500" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:10:13.845" endtime="20200625 11:10:15.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:10:15.501" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:10:15.501" endtime="20200625 11:10:15.501"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:10:15.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:10:15.502" endtime="20200625 11:10:15.502"></status>
</kw>
<status status="PASS" starttime="20200625 11:10:13.845" endtime="20200625 11:10:15.502"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:10:15.506" level="INFO">Running command 'ozone sh volume delete o3://om:9862/15032-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:10:17.000" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:10:17.001" level="INFO">${output} = Volume 15032-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200625 11:10:15.503" endtime="20200625 11:10:17.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:10:17.002" level="INFO">Volume 15032-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200625 11:10:17.001" endtime="20200625 11:10:17.002"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:10:17.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:10:17.002" endtime="20200625 11:10:17.002"></status>
</kw>
<status status="PASS" starttime="20200625 11:10:15.502" endtime="20200625 11:10:17.003"></status>
</kw>
<status status="PASS" starttime="20200625 11:09:23.112" endtime="20200625 11:10:17.003"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200625 11:09:23.111" endtime="20200625 11:10:17.003" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200625 11:10:17.005" endtime="20200625 11:10:17.005"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:10:17.008" level="INFO">Running command 'ozone sh volume create o3://om:9862/15032-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:10:18.497" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:10:18.497" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:10:17.006" endtime="20200625 11:10:18.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:10:18.498" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:10:18.497" endtime="20200625 11:10:18.498"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:10:18.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:10:18.498" endtime="20200625 11:10:18.499"></status>
</kw>
<status status="PASS" starttime="20200625 11:10:17.006" endtime="20200625 11:10:18.499"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:10:18.502" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/15032-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:10:20.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:10:20.090" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200625 11:10:18.499" endtime="20200625 11:10:20.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:10:20.091" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200625 11:10:20.090" endtime="20200625 11:10:20.091"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:10:20.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:10:20.091" endtime="20200625 11:10:20.091"></status>
</kw>
<msg timestamp="20200625 11:10:20.092" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200625 11:10:18.499" endtime="20200625 11:10:20.092"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200625 11:10:20.092" endtime="20200625 11:10:20.093"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:10:20.096" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/15032-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:10:21.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:10:21.708" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200625 11:10:20.093" endtime="20200625 11:10:21.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:10:21.709" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200625 11:10:21.708" endtime="20200625 11:10:21.709"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:10:21.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:10:21.709" endtime="20200625 11:10:21.710"></status>
</kw>
<msg timestamp="20200625 11:10:21.710" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200625 11:10:20.093" endtime="20200625 11:10:21.710"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:10:21.714" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/15032-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:10:23.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:10:23.410" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200625 11:10:21.710" endtime="20200625 11:10:23.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:10:23.411" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200625 11:10:23.410" endtime="20200625 11:10:23.411"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:10:23.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:10:23.411" endtime="20200625 11:10:23.412"></status>
</kw>
<msg timestamp="20200625 11:10:23.412" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200625 11:10:21.710" endtime="20200625 11:10:23.412"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200625 11:10:23.412" endtime="20200625 11:10:23.413"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:10:23.416" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/15032-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:10:24.966" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:10:24.966" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200625 11:10:23.414" endtime="20200625 11:10:24.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:10:24.967" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200625 11:10:24.966" endtime="20200625 11:10:24.967"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:10:24.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:10:24.967" endtime="20200625 11:10:24.967"></status>
</kw>
<msg timestamp="20200625 11:10:24.968" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200625 11:10:23.413" endtime="20200625 11:10:24.968"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:10:24.971" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/15032-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:10:26.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:10:26.779" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200625 11:10:24.968" endtime="20200625 11:10:26.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:10:26.780" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200625 11:10:26.779" endtime="20200625 11:10:26.780"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:10:26.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:10:26.780" endtime="20200625 11:10:26.780"></status>
</kw>
<msg timestamp="20200625 11:10:26.781" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200625 11:10:24.968" endtime="20200625 11:10:26.781"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200625 11:10:26.781" endtime="20200625 11:10:26.782"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:10:26.786" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/15032-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:10:28.369" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:10:28.369" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200625 11:10:26.782" endtime="20200625 11:10:28.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:10:28.370" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200625 11:10:28.370" endtime="20200625 11:10:28.371"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:10:28.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:10:28.371" endtime="20200625 11:10:28.371"></status>
</kw>
<msg timestamp="20200625 11:10:28.371" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200625 11:10:26.782" endtime="20200625 11:10:28.371"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:10:28.374" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/15032-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:10:30.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:10:30.023" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200625 11:10:28.372" endtime="20200625 11:10:30.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:10:30.024" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200625 11:10:30.023" endtime="20200625 11:10:30.024"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:10:30.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:10:30.024" endtime="20200625 11:10:30.025"></status>
</kw>
<msg timestamp="20200625 11:10:30.025" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200625 11:10:28.372" endtime="20200625 11:10:30.025"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200625 11:10:30.025" endtime="20200625 11:10:30.026"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200625 11:10:30.026" endtime="20200625 11:10:30.027"></status>
</kw>
<status status="PASS" starttime="20200625 11:10:17.005" endtime="20200625 11:10:30.027"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200625 11:10:17.004" endtime="20200625 11:10:30.027" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200625 11:10:30.028" endtime="20200625 11:10:30.028"></status>
</kw>
<kw name="Test Bucket Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:10:30.032" level="INFO">Running command 'ozone sh bucket create o3://om:9862/15032-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:10:31.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:10:31.560" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:10:30.030" endtime="20200625 11:10:31.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:10:31.561" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:10:31.560" endtime="20200625 11:10:31.561"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:10:31.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:10:31.561" endtime="20200625 11:10:31.561"></status>
</kw>
<status status="PASS" starttime="20200625 11:10:30.030" endtime="20200625 11:10:31.561"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:10:31.564" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/15032-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:10:33.287" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:10:33.287" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200625 11:10:31.562" endtime="20200625 11:10:33.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:10:33.288" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200625 11:10:33.288" endtime="20200625 11:10:33.289"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:10:33.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:10:33.289" endtime="20200625 11:10:33.289"></status>
</kw>
<msg timestamp="20200625 11:10:33.290" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200625 11:10:31.561" endtime="20200625 11:10:33.290"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200625 11:10:33.290" endtime="20200625 11:10:33.290"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:10:33.294" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/15032-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:10:34.866" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:10:34.866" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200625 11:10:33.291" endtime="20200625 11:10:34.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:10:34.867" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200625 11:10:34.867" endtime="20200625 11:10:34.868"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:10:34.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:10:34.868" endtime="20200625 11:10:34.868"></status>
</kw>
<msg timestamp="20200625 11:10:34.868" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200625 11:10:33.290" endtime="20200625 11:10:34.868"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:10:34.871" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/15032-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:10:36.571" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:10:36.571" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200625 11:10:34.869" endtime="20200625 11:10:36.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:10:36.572" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200625 11:10:36.571" endtime="20200625 11:10:36.572"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:10:36.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:10:36.572" endtime="20200625 11:10:36.573"></status>
</kw>
<msg timestamp="20200625 11:10:36.573" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200625 11:10:34.868" endtime="20200625 11:10:36.573"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200625 11:10:36.573" endtime="20200625 11:10:36.574"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:10:36.576" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/15032-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:10:38.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:10:38.022" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200625 11:10:36.574" endtime="20200625 11:10:38.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:10:38.023" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200625 11:10:38.022" endtime="20200625 11:10:38.023"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:10:38.023" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:10:38.023" endtime="20200625 11:10:38.023"></status>
</kw>
<msg timestamp="20200625 11:10:38.024" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200625 11:10:36.574" endtime="20200625 11:10:38.024"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:10:38.027" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/15032-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:10:39.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:10:39.751" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200625 11:10:38.024" endtime="20200625 11:10:39.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:10:39.752" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200625 11:10:39.751" endtime="20200625 11:10:39.752"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:10:39.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:10:39.752" endtime="20200625 11:10:39.752"></status>
</kw>
<msg timestamp="20200625 11:10:39.752" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200625 11:10:38.024" endtime="20200625 11:10:39.752"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200625 11:10:39.753" endtime="20200625 11:10:39.753"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:10:39.756" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/15032-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:10:41.256" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:10:41.256" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200625 11:10:39.754" endtime="20200625 11:10:41.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:10:41.257" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200625 11:10:41.256" endtime="20200625 11:10:41.257"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:10:41.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:10:41.257" endtime="20200625 11:10:41.258"></status>
</kw>
<msg timestamp="20200625 11:10:41.258" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200625 11:10:39.753" endtime="20200625 11:10:41.258"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:10:41.262" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/15032-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:10:42.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:10:42.900" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200625 11:10:41.259" endtime="20200625 11:10:42.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:10:42.901" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200625 11:10:42.900" endtime="20200625 11:10:42.901"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:10:42.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:10:42.901" endtime="20200625 11:10:42.902"></status>
</kw>
<msg timestamp="20200625 11:10:42.902" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200625 11:10:41.258" endtime="20200625 11:10:42.902"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200625 11:10:42.902" endtime="20200625 11:10:42.903"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200625 11:10:42.903" endtime="20200625 11:10:42.904"></status>
</kw>
<status status="PASS" starttime="20200625 11:10:30.029" endtime="20200625 11:10:42.904"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200625 11:10:30.027" endtime="20200625 11:10:42.904" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200625 11:10:42.905" endtime="20200625 11:10:42.906"></status>
</kw>
<kw name="Test key Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:10:42.909" level="INFO">Running command 'ozone sh key put o3://om:9862/15032-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:10:45.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:10:45.825" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:10:42.907" endtime="20200625 11:10:45.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:10:45.826" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:10:45.826" endtime="20200625 11:10:45.827"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:10:45.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:10:45.827" endtime="20200625 11:10:45.827"></status>
</kw>
<status status="PASS" starttime="20200625 11:10:42.906" endtime="20200625 11:10:45.827"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:10:45.831" level="INFO">Running command 'ozone sh key getacl o3://om:9862/15032-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:10:47.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:10:47.474" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200625 11:10:45.828" endtime="20200625 11:10:47.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:10:47.475" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200625 11:10:47.474" endtime="20200625 11:10:47.475"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:10:47.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:10:47.475" endtime="20200625 11:10:47.475"></status>
</kw>
<msg timestamp="20200625 11:10:47.476" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200625 11:10:45.827" endtime="20200625 11:10:47.476"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200625 11:10:47.476" endtime="20200625 11:10:47.476"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:10:47.480" level="INFO">Running command 'ozone sh key addacl o3://om:9862/15032-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:10:49.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:10:49.019" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200625 11:10:47.477" endtime="20200625 11:10:49.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:10:49.020" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200625 11:10:49.019" endtime="20200625 11:10:49.020"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:10:49.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:10:49.020" endtime="20200625 11:10:49.020"></status>
</kw>
<msg timestamp="20200625 11:10:49.020" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200625 11:10:47.476" endtime="20200625 11:10:49.021"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:10:49.023" level="INFO">Running command 'ozone sh key getacl o3://om:9862/15032-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:10:50.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:10:50.615" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200625 11:10:49.021" endtime="20200625 11:10:50.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:10:50.616" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200625 11:10:50.615" endtime="20200625 11:10:50.616"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:10:50.617" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:10:50.617" endtime="20200625 11:10:50.617"></status>
</kw>
<msg timestamp="20200625 11:10:50.617" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200625 11:10:49.021" endtime="20200625 11:10:50.617"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200625 11:10:50.617" endtime="20200625 11:10:50.618"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:10:50.621" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/15032-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:10:52.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:10:52.055" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200625 11:10:50.619" endtime="20200625 11:10:52.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:10:52.056" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200625 11:10:52.055" endtime="20200625 11:10:52.056"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:10:52.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:10:52.056" endtime="20200625 11:10:52.056"></status>
</kw>
<msg timestamp="20200625 11:10:52.057" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200625 11:10:50.618" endtime="20200625 11:10:52.057"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:10:52.059" level="INFO">Running command 'ozone sh key getacl o3://om:9862/15032-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:10:53.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:10:53.476" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200625 11:10:52.057" endtime="20200625 11:10:53.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:10:53.477" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20200625 11:10:53.476" endtime="20200625 11:10:53.477"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:10:53.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:10:53.477" endtime="20200625 11:10:53.478"></status>
</kw>
<msg timestamp="20200625 11:10:53.478" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200625 11:10:52.057" endtime="20200625 11:10:53.478"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200625 11:10:53.478" endtime="20200625 11:10:53.478"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:10:53.481" level="INFO">Running command 'ozone sh key setacl o3://om:9862/15032-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:10:54.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:10:54.840" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200625 11:10:53.479" endtime="20200625 11:10:54.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:10:54.841" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200625 11:10:54.840" endtime="20200625 11:10:54.841"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:10:54.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:10:54.841" endtime="20200625 11:10:54.842"></status>
</kw>
<msg timestamp="20200625 11:10:54.842" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200625 11:10:53.478" endtime="20200625 11:10:54.842"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:10:54.846" level="INFO">Running command 'ozone sh key getacl o3://om:9862/15032-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:10:56.316" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:10:56.316" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200625 11:10:54.843" endtime="20200625 11:10:56.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:10:56.317" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200625 11:10:56.317" endtime="20200625 11:10:56.318"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:10:56.318" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:10:56.318" endtime="20200625 11:10:56.318"></status>
</kw>
<msg timestamp="20200625 11:10:56.318" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200625 11:10:54.842" endtime="20200625 11:10:56.318"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200625 11:10:56.318" endtime="20200625 11:10:56.319"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200625 11:10:56.319" endtime="20200625 11:10:56.322"></status>
</kw>
<status status="PASS" starttime="20200625 11:10:42.906" endtime="20200625 11:10:56.324"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200625 11:10:42.905" endtime="20200625 11:10:56.325" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200625 11:10:56.326" endtime="20200625 11:10:56.326"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:10:56.330" level="INFO">Running command 'ozone sh volume info o3:///15032-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:10:57.749" level="INFO">${rc} = 255</msg>
<msg timestamp="20200625 11:10:57.749" level="INFO">${output} = VOLUME_NOT_FOUND Volume 15032-rpcwport is not found</msg>
<status status="PASS" starttime="20200625 11:10:56.327" endtime="20200625 11:10:57.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:10:57.750" level="INFO">VOLUME_NOT_FOUND Volume 15032-rpcwport is not found</msg>
<status status="PASS" starttime="20200625 11:10:57.749" endtime="20200625 11:10:57.750"></status>
</kw>
<msg timestamp="20200625 11:10:57.750" level="INFO">${result} = VOLUME_NOT_FOUND Volume 15032-rpcwport is not found</msg>
<status status="PASS" starttime="20200625 11:10:56.327" endtime="20200625 11:10:57.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200625 11:10:57.750" endtime="20200625 11:10:57.750"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:10:57.752" level="INFO">Running command 'ozone sh volume create o3:///15032-rpcwport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:10:59.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:10:59.318" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:10:57.751" endtime="20200625 11:10:59.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:10:59.320" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:10:59.319" endtime="20200625 11:10:59.320"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:10:59.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:10:59.320" endtime="20200625 11:10:59.320"></status>
</kw>
<msg timestamp="20200625 11:10:59.320" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200625 11:10:57.750" endtime="20200625 11:10:59.320"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200625 11:10:59.321" endtime="20200625 11:10:59.321"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:10:59.324" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="15032-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:11:01.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:11:01.050" level="INFO">${output} = {
  "metadata": {},
  "name": "15032-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-25T11:10:59.205Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200625 11:10:59.322" endtime="20200625 11:11:01.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:11:01.051" level="INFO">{
  "metadata": {},
  "name": "15032-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-25T11:10:59.205Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200625 11:11:01.051" endtime="20200625 11:11:01.051"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:11:01.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:11:01.052" endtime="20200625 11:11:01.053"></status>
</kw>
<msg timestamp="20200625 11:11:01.053" level="INFO">${result} = {
  "metadata": {},
  "name": "15032-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-25T11:10:59.205Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200625 11:10:59.321" endtime="20200625 11:11:01.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200625 11:11:01.053" endtime="20200625 11:11:01.054"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:11:01.057" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="15032-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:11:02.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:11:02.595" level="INFO">${output} = {
  "metadata": {},
  "name": "15032-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-25T11:10:59.205Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200625 11:11:01.054" endtime="20200625 11:11:02.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:11:02.596" level="INFO">{
  "metadata": {},
  "name": "15032-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-25T11:10:59.205Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200625 11:11:02.596" endtime="20200625 11:11:02.597"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:11:02.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:11:02.597" endtime="20200625 11:11:02.597"></status>
</kw>
<msg timestamp="20200625 11:11:02.597" level="INFO">${result} = {
  "metadata": {},
  "name": "15032-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-25T11:10:59.205Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200625 11:11:01.054" endtime="20200625 11:11:02.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200625 11:11:02.598" endtime="20200625 11:11:02.598"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:11:02.602" level="INFO">Running command 'ozone sh volume update o3:///15032-rpcwport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:11:04.159" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:11:04.159" level="INFO">${output} = {
  "metadata" : { },
  "name" : "15032-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-25T11:10:59.205Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",...</msg>
<status status="PASS" starttime="20200625 11:11:02.599" endtime="20200625 11:11:04.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:11:04.161" level="INFO">{
  "metadata" : { },
  "name" : "15032-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-25T11:10:59.205Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200625 11:11:04.160" endtime="20200625 11:11:04.161"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:11:04.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:11:04.161" endtime="20200625 11:11:04.161"></status>
</kw>
<status status="PASS" starttime="20200625 11:11:02.598" endtime="20200625 11:11:04.162"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:11:04.166" level="INFO">Running command 'ozone sh volume info o3:///15032-rpcwport | jq -r '. | select(.name=="15032-rpcwport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:11:05.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:11:05.791" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200625 11:11:04.162" endtime="20200625 11:11:05.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:11:05.792" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200625 11:11:05.791" endtime="20200625 11:11:05.792"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:11:05.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:11:05.792" endtime="20200625 11:11:05.792"></status>
</kw>
<msg timestamp="20200625 11:11:05.792" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200625 11:11:04.162" endtime="20200625 11:11:05.793"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200625 11:11:05.793" endtime="20200625 11:11:05.793"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:11:05.796" level="INFO">Running command 'ozone sh bucket create o3:///15032-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:11:07.329" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:11:07.329" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:11:05.793" endtime="20200625 11:11:07.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:11:07.330" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:11:07.330" endtime="20200625 11:11:07.331"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:11:07.331" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:11:07.331" endtime="20200625 11:11:07.331"></status>
</kw>
<status status="PASS" starttime="20200625 11:11:05.793" endtime="20200625 11:11:07.331"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:11:07.334" level="INFO">Running command 'ozone sh bucket info o3:///15032-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:11:09.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:11:09.037" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200625 11:11:07.332" endtime="20200625 11:11:09.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:11:09.038" level="INFO">DISK</msg>
<status status="PASS" starttime="20200625 11:11:09.038" endtime="20200625 11:11:09.039"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:11:09.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:11:09.039" endtime="20200625 11:11:09.039"></status>
</kw>
<msg timestamp="20200625 11:11:09.039" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200625 11:11:07.331" endtime="20200625 11:11:09.039"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200625 11:11:09.040" endtime="20200625 11:11:09.040"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:11:09.044" level="INFO">Running command 'ozone sh bucket list o3:///15032-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:11:10.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:11:10.759" level="INFO">${output} = 15032-rpcwport</msg>
<status status="PASS" starttime="20200625 11:11:09.041" endtime="20200625 11:11:10.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:11:10.760" level="INFO">15032-rpcwport</msg>
<status status="PASS" starttime="20200625 11:11:10.760" endtime="20200625 11:11:10.761"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:11:10.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:11:10.761" endtime="20200625 11:11:10.761"></status>
</kw>
<msg timestamp="20200625 11:11:10.761" level="INFO">${result} = 15032-rpcwport</msg>
<status status="PASS" starttime="20200625 11:11:09.040" endtime="20200625 11:11:10.761"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200625 11:11:10.762" endtime="20200625 11:11:10.762"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:11:10.765" level="INFO">Running command 'ozone sh key put o3:///15032-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:11:13.987" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:11:13.988" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:11:10.763" endtime="20200625 11:11:13.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:11:13.989" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:11:13.988" endtime="20200625 11:11:13.989"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:11:13.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:11:13.989" endtime="20200625 11:11:13.989"></status>
</kw>
<status status="PASS" starttime="20200625 11:11:10.763" endtime="20200625 11:11:13.989"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:11:13.993" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:11:13.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:11:13.995" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:11:13.990" endtime="20200625 11:11:13.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:11:13.996" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:11:13.995" endtime="20200625 11:11:13.996"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:11:13.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:11:13.996" endtime="20200625 11:11:13.996"></status>
</kw>
<status status="PASS" starttime="20200625 11:11:13.990" endtime="20200625 11:11:13.996"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:11:14.000" level="INFO">Running command 'ozone sh key get o3:///15032-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:11:16.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:11:16.856" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:11:13.997" endtime="20200625 11:11:16.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:11:16.857" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:11:16.856" endtime="20200625 11:11:16.857"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:11:16.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:11:16.857" endtime="20200625 11:11:16.857"></status>
</kw>
<status status="PASS" starttime="20200625 11:11:13.996" endtime="20200625 11:11:16.857"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:11:16.860" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:11:16.862" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:11:16.862" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:11:16.858" endtime="20200625 11:11:16.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:11:16.862" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:11:16.862" endtime="20200625 11:11:16.862"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:11:16.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:11:16.863" endtime="20200625 11:11:16.863"></status>
</kw>
<status status="PASS" starttime="20200625 11:11:16.858" endtime="20200625 11:11:16.863"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:11:16.866" level="INFO">Running command 'ozone sh key put -t RATIS o3:///15032-rpcwport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:11:19.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:11:19.960" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:11:16.863" endtime="20200625 11:11:19.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:11:19.962" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:11:19.961" endtime="20200625 11:11:19.962"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:11:19.962" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:11:19.962" endtime="20200625 11:11:19.962"></status>
</kw>
<status status="PASS" starttime="20200625 11:11:16.863" endtime="20200625 11:11:19.963"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:11:19.965" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:11:19.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:11:19.968" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:11:19.963" endtime="20200625 11:11:19.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:11:19.968" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:11:19.968" endtime="20200625 11:11:19.969"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:11:19.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:11:19.969" endtime="20200625 11:11:19.969"></status>
</kw>
<status status="PASS" starttime="20200625 11:11:19.963" endtime="20200625 11:11:19.969"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:11:19.972" level="INFO">Running command 'ozone sh key get o3:///15032-rpcwport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:11:23.030" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:11:23.030" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:11:19.970" endtime="20200625 11:11:23.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:11:23.031" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:11:23.030" endtime="20200625 11:11:23.031"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:11:23.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:11:23.031" endtime="20200625 11:11:23.031"></status>
</kw>
<status status="PASS" starttime="20200625 11:11:19.969" endtime="20200625 11:11:23.031"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:11:23.034" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:11:23.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:11:23.036" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:11:23.032" endtime="20200625 11:11:23.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:11:23.037" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:11:23.036" endtime="20200625 11:11:23.037"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:11:23.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:11:23.037" endtime="20200625 11:11:23.037"></status>
</kw>
<status status="PASS" starttime="20200625 11:11:23.032" endtime="20200625 11:11:23.037"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:11:23.041" level="INFO">Running command 'ozone sh key info o3:///15032-rpcwport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:11:24.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:11:24.715" level="INFO">${output} = {
  "volumeName": "15032-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-25T11:11:18.344Z",
  "modificationTime": "2020-06-25T11:11:19.614Z",
...</msg>
<status status="PASS" starttime="20200625 11:11:23.038" endtime="20200625 11:11:24.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:11:24.716" level="INFO">{
  "volumeName": "15032-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-25T11:11:18.344Z",
  "modificationTime": "2020-06-25T11:11:19.614Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104404318836686980,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200625 11:11:24.716" endtime="20200625 11:11:24.716"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:11:24.717" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:11:24.716" endtime="20200625 11:11:24.717"></status>
</kw>
<msg timestamp="20200625 11:11:24.717" level="INFO">${result} = {
  "volumeName": "15032-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-25T11:11:18.344Z",
  "modificationTime": "2020-06-25T11:11:19.614Z",
...</msg>
<status status="PASS" starttime="20200625 11:11:23.037" endtime="20200625 11:11:24.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200625 11:11:24.717" endtime="20200625 11:11:24.717"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:11:24.721" level="INFO">Running command 'ozone sh key delete o3:///15032-rpcwport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:11:26.309" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:11:26.309" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:11:24.718" endtime="20200625 11:11:26.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:11:26.310" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:11:26.310" endtime="20200625 11:11:26.310"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:11:26.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:11:26.311" endtime="20200625 11:11:26.311"></status>
</kw>
<status status="PASS" starttime="20200625 11:11:24.718" endtime="20200625 11:11:26.311"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:11:26.315" level="INFO">Running command 'ozone sh key cp o3:///15032-rpcwport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:11:29.634" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:11:29.634" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:11:26.312" endtime="20200625 11:11:29.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:11:29.635" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:11:29.634" endtime="20200625 11:11:29.635"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:11:29.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:11:29.635" endtime="20200625 11:11:29.636"></status>
</kw>
<status status="PASS" starttime="20200625 11:11:26.311" endtime="20200625 11:11:29.636"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:11:29.638" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:11:29.641" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:11:29.641" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:11:29.636" endtime="20200625 11:11:29.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:11:29.641" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:11:29.641" endtime="20200625 11:11:29.642"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:11:29.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:11:29.642" endtime="20200625 11:11:29.642"></status>
</kw>
<status status="PASS" starttime="20200625 11:11:29.636" endtime="20200625 11:11:29.642"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:11:29.644" level="INFO">Running command 'ozone sh key get o3:///15032-rpcwport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:11:32.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:11:32.816" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:11:29.643" endtime="20200625 11:11:32.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:11:32.817" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:11:32.816" endtime="20200625 11:11:32.817"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:11:32.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:11:32.817" endtime="20200625 11:11:32.817"></status>
</kw>
<status status="PASS" starttime="20200625 11:11:29.642" endtime="20200625 11:11:32.818"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:11:32.820" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:11:32.822" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:11:32.822" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:11:32.818" endtime="20200625 11:11:32.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:11:32.823" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:11:32.823" endtime="20200625 11:11:32.823"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:11:32.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:11:32.824" endtime="20200625 11:11:32.824"></status>
</kw>
<status status="PASS" starttime="20200625 11:11:32.818" endtime="20200625 11:11:32.824"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:11:32.827" level="INFO">Running command 'ozone sh key delete o3:///15032-rpcwport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:11:34.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:11:34.380" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:11:32.825" endtime="20200625 11:11:34.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:11:34.381" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:11:34.380" endtime="20200625 11:11:34.381"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:11:34.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:11:34.381" endtime="20200625 11:11:34.381"></status>
</kw>
<status status="PASS" starttime="20200625 11:11:32.824" endtime="20200625 11:11:34.381"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:11:34.385" level="INFO">Running command 'ozone sh key get o3:///15032-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:11:35.946" level="INFO">${rc} = 255</msg>
<msg timestamp="20200625 11:11:35.946" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200625 11:11:34.382" endtime="20200625 11:11:35.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:11:35.947" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200625 11:11:35.946" endtime="20200625 11:11:35.947"></status>
</kw>
<msg timestamp="20200625 11:11:35.947" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200625 11:11:34.382" endtime="20200625 11:11:35.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200625 11:11:35.948" endtime="20200625 11:11:35.949"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:11:35.953" level="INFO">Running command 'ozone sh key get --force o3:///15032-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:11:38.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:11:38.928" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:11:35.950" endtime="20200625 11:11:38.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:11:38.929" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:11:38.928" endtime="20200625 11:11:38.929"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:11:38.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:11:38.929" endtime="20200625 11:11:38.929"></status>
</kw>
<msg timestamp="20200625 11:11:38.930" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200625 11:11:35.949" endtime="20200625 11:11:38.930"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200625 11:11:38.930" endtime="20200625 11:11:38.930"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:11:38.933" level="INFO">Running command 'ozone sh key info o3:///15032-rpcwport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:11:40.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:11:40.609" level="INFO">${output} = {
  "volumeName": "15032-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-25T11:11:12.248Z",
  "modificationTime": "2020-06-25T11:11:13.541Z",
  "rep...</msg>
<status status="PASS" starttime="20200625 11:11:38.931" endtime="20200625 11:11:40.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:11:40.610" level="INFO">{
  "volumeName": "15032-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-25T11:11:12.248Z",
  "modificationTime": "2020-06-25T11:11:13.541Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104404318437179520,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200625 11:11:40.610" endtime="20200625 11:11:40.610"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:11:40.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:11:40.610" endtime="20200625 11:11:40.611"></status>
</kw>
<msg timestamp="20200625 11:11:40.611" level="INFO">${result} = {
  "volumeName": "15032-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-25T11:11:12.248Z",
  "modificationTime": "2020-06-25T11:11:13.541Z",
  "rep...</msg>
<status status="PASS" starttime="20200625 11:11:38.930" endtime="20200625 11:11:40.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200625 11:11:40.611" endtime="20200625 11:11:40.612"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:11:40.614" level="INFO">Running command 'ozone sh key list o3:///15032-rpcwport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:11:42.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:11:42.327" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200625 11:11:40.612" endtime="20200625 11:11:42.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:11:42.328" level="INFO">key1</msg>
<status status="PASS" starttime="20200625 11:11:42.327" endtime="20200625 11:11:42.328"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:11:42.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:11:42.328" endtime="20200625 11:11:42.328"></status>
</kw>
<msg timestamp="20200625 11:11:42.329" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200625 11:11:40.612" endtime="20200625 11:11:42.329"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200625 11:11:42.329" endtime="20200625 11:11:42.329"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:11:42.333" level="INFO">Running command 'ozone sh key rename o3:///15032-rpcwport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:11:43.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:11:43.765" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:11:42.330" endtime="20200625 11:11:43.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:11:43.766" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:11:43.766" endtime="20200625 11:11:43.766"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:11:43.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:11:43.766" endtime="20200625 11:11:43.767"></status>
</kw>
<status status="PASS" starttime="20200625 11:11:42.329" endtime="20200625 11:11:43.767"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:11:43.770" level="INFO">Running command 'ozone sh key list o3:///15032-rpcwport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:11:45.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:11:45.441" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200625 11:11:43.768" endtime="20200625 11:11:45.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:11:45.441" level="INFO">key2</msg>
<status status="PASS" starttime="20200625 11:11:45.441" endtime="20200625 11:11:45.442"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:11:45.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:11:45.442" endtime="20200625 11:11:45.442"></status>
</kw>
<msg timestamp="20200625 11:11:45.442" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200625 11:11:43.767" endtime="20200625 11:11:45.442"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200625 11:11:45.442" endtime="20200625 11:11:45.443"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:11:45.446" level="INFO">Running command 'ozone sh key delete o3:///15032-rpcwport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:11:46.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:11:46.925" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:11:45.444" endtime="20200625 11:11:46.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:11:46.926" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:11:46.925" endtime="20200625 11:11:46.926"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:11:46.926" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:11:46.926" endtime="20200625 11:11:46.926"></status>
</kw>
<status status="PASS" starttime="20200625 11:11:45.443" endtime="20200625 11:11:46.927"></status>
</kw>
<status status="PASS" starttime="20200625 11:11:10.762" endtime="20200625 11:11:46.927"></status>
</kw>
<status status="PASS" starttime="20200625 11:11:10.762" endtime="20200625 11:11:46.927"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:11:46.929" level="INFO">Running command 'ozone sh bucket delete o3:///15032-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:11:48.508" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:11:48.509" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:11:46.927" endtime="20200625 11:11:48.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:11:48.509" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:11:48.509" endtime="20200625 11:11:48.510"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:11:48.510" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:11:48.510" endtime="20200625 11:11:48.510"></status>
</kw>
<status status="PASS" starttime="20200625 11:11:46.927" endtime="20200625 11:11:48.510"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:11:48.514" level="INFO">Running command 'ozone sh volume delete o3:///15032-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:11:50.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:11:50.104" level="INFO">${output} = Volume 15032-rpcwport is deleted</msg>
<status status="PASS" starttime="20200625 11:11:48.511" endtime="20200625 11:11:50.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:11:50.105" level="INFO">Volume 15032-rpcwport is deleted</msg>
<status status="PASS" starttime="20200625 11:11:50.105" endtime="20200625 11:11:50.105"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:11:50.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:11:50.106" endtime="20200625 11:11:50.106"></status>
</kw>
<status status="PASS" starttime="20200625 11:11:48.510" endtime="20200625 11:11:50.106"></status>
</kw>
<status status="PASS" starttime="20200625 11:10:56.326" endtime="20200625 11:11:50.106"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200625 11:10:56.325" endtime="20200625 11:11:50.107" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200625 11:11:50.108" endtime="20200625 11:11:50.108"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:11:50.112" level="INFO">Running command 'ozone sh volume info /15032-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:11:51.710" level="INFO">${rc} = 255</msg>
<msg timestamp="20200625 11:11:51.710" level="INFO">${output} = VOLUME_NOT_FOUND Volume 15032-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200625 11:11:50.109" endtime="20200625 11:11:51.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:11:51.711" level="INFO">VOLUME_NOT_FOUND Volume 15032-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200625 11:11:51.710" endtime="20200625 11:11:51.711"></status>
</kw>
<msg timestamp="20200625 11:11:51.711" level="INFO">${result} = VOLUME_NOT_FOUND Volume 15032-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200625 11:11:50.109" endtime="20200625 11:11:51.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200625 11:11:51.712" endtime="20200625 11:11:51.712"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:11:51.715" level="INFO">Running command 'ozone sh volume create /15032-rpcwoscheme --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:11:53.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:11:53.238" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:11:51.712" endtime="20200625 11:11:53.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:11:53.239" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:11:53.239" endtime="20200625 11:11:53.239"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:11:53.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:11:53.239" endtime="20200625 11:11:53.240"></status>
</kw>
<msg timestamp="20200625 11:11:53.240" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200625 11:11:51.712" endtime="20200625 11:11:53.240"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200625 11:11:53.240" endtime="20200625 11:11:53.240"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:11:53.244" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="15032-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:11:54.907" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:11:54.907" level="INFO">${output} = {
  "metadata": {},
  "name": "15032-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-25T11:11:53.121Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200625 11:11:53.241" endtime="20200625 11:11:54.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:11:54.909" level="INFO">{
  "metadata": {},
  "name": "15032-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-25T11:11:53.121Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200625 11:11:54.908" endtime="20200625 11:11:54.909"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:11:54.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:11:54.909" endtime="20200625 11:11:54.909"></status>
</kw>
<msg timestamp="20200625 11:11:54.910" level="INFO">${result} = {
  "metadata": {},
  "name": "15032-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-25T11:11:53.121Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200625 11:11:53.241" endtime="20200625 11:11:54.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200625 11:11:54.910" endtime="20200625 11:11:54.910"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:11:54.913" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="15032-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:11:56.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:11:56.495" level="INFO">${output} = {
  "metadata": {},
  "name": "15032-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-25T11:11:53.121Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200625 11:11:54.911" endtime="20200625 11:11:56.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:11:56.496" level="INFO">{
  "metadata": {},
  "name": "15032-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-25T11:11:53.121Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200625 11:11:56.495" endtime="20200625 11:11:56.496"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:11:56.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:11:56.496" endtime="20200625 11:11:56.497"></status>
</kw>
<msg timestamp="20200625 11:11:56.497" level="INFO">${result} = {
  "metadata": {},
  "name": "15032-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-25T11:11:53.121Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200625 11:11:54.910" endtime="20200625 11:11:56.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200625 11:11:56.497" endtime="20200625 11:11:56.497"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:11:56.500" level="INFO">Running command 'ozone sh volume update /15032-rpcwoscheme --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:11:58.181" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:11:58.181" level="INFO">${output} = {
  "metadata" : { },
  "name" : "15032-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-25T11:11:53.121Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoo...</msg>
<status status="PASS" starttime="20200625 11:11:56.498" endtime="20200625 11:11:58.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:11:58.182" level="INFO">{
  "metadata" : { },
  "name" : "15032-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-25T11:11:53.121Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200625 11:11:58.182" endtime="20200625 11:11:58.182"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:11:58.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:11:58.182" endtime="20200625 11:11:58.183"></status>
</kw>
<status status="PASS" starttime="20200625 11:11:56.497" endtime="20200625 11:11:58.183"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:11:58.185" level="INFO">Running command 'ozone sh volume info /15032-rpcwoscheme | jq -r '. | select(.name=="15032-rpcwoscheme") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:11:59.739" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:11:59.739" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200625 11:11:58.183" endtime="20200625 11:11:59.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:11:59.740" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200625 11:11:59.739" endtime="20200625 11:11:59.740"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:11:59.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:11:59.740" endtime="20200625 11:11:59.741"></status>
</kw>
<msg timestamp="20200625 11:11:59.741" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200625 11:11:58.183" endtime="20200625 11:11:59.741"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200625 11:11:59.741" endtime="20200625 11:11:59.742"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:11:59.745" level="INFO">Running command 'ozone sh bucket create /15032-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:12:01.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:12:01.272" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:11:59.742" endtime="20200625 11:12:01.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:12:01.273" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:12:01.272" endtime="20200625 11:12:01.273"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:12:01.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:12:01.273" endtime="20200625 11:12:01.273"></status>
</kw>
<status status="PASS" starttime="20200625 11:11:59.742" endtime="20200625 11:12:01.274"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:12:01.276" level="INFO">Running command 'ozone sh bucket info /15032-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:12:02.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:12:02.913" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200625 11:12:01.274" endtime="20200625 11:12:02.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:12:02.914" level="INFO">DISK</msg>
<status status="PASS" starttime="20200625 11:12:02.913" endtime="20200625 11:12:02.914"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:12:02.914" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:12:02.914" endtime="20200625 11:12:02.914"></status>
</kw>
<msg timestamp="20200625 11:12:02.915" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200625 11:12:01.274" endtime="20200625 11:12:02.915"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200625 11:12:02.915" endtime="20200625 11:12:02.915"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:12:02.918" level="INFO">Running command 'ozone sh bucket list /15032-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:12:04.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:12:04.600" level="INFO">${output} = 15032-rpcwoscheme</msg>
<status status="PASS" starttime="20200625 11:12:02.916" endtime="20200625 11:12:04.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:12:04.601" level="INFO">15032-rpcwoscheme</msg>
<status status="PASS" starttime="20200625 11:12:04.601" endtime="20200625 11:12:04.602"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:12:04.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:12:04.602" endtime="20200625 11:12:04.602"></status>
</kw>
<msg timestamp="20200625 11:12:04.602" level="INFO">${result} = 15032-rpcwoscheme</msg>
<status status="PASS" starttime="20200625 11:12:02.915" endtime="20200625 11:12:04.602"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200625 11:12:04.602" endtime="20200625 11:12:04.603"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:12:04.606" level="INFO">Running command 'ozone sh key put /15032-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:12:07.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:12:07.686" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:12:04.604" endtime="20200625 11:12:07.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:12:07.686" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:12:07.686" endtime="20200625 11:12:07.687"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:12:07.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:12:07.687" endtime="20200625 11:12:07.687"></status>
</kw>
<status status="PASS" starttime="20200625 11:12:04.603" endtime="20200625 11:12:07.687"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:12:07.689" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:12:07.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:12:07.692" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:12:07.688" endtime="20200625 11:12:07.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:12:07.693" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:12:07.692" endtime="20200625 11:12:07.693"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:12:07.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:12:07.693" endtime="20200625 11:12:07.693"></status>
</kw>
<status status="PASS" starttime="20200625 11:12:07.687" endtime="20200625 11:12:07.694"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:12:07.696" level="INFO">Running command 'ozone sh key get /15032-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:12:10.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:12:10.566" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:12:07.694" endtime="20200625 11:12:10.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:12:10.567" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:12:10.566" endtime="20200625 11:12:10.567"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:12:10.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:12:10.567" endtime="20200625 11:12:10.568"></status>
</kw>
<status status="PASS" starttime="20200625 11:12:07.694" endtime="20200625 11:12:10.568"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:12:10.570" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:12:10.572" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:12:10.572" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:12:10.568" endtime="20200625 11:12:10.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:12:10.573" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:12:10.573" endtime="20200625 11:12:10.573"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:12:10.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:12:10.573" endtime="20200625 11:12:10.574"></status>
</kw>
<status status="PASS" starttime="20200625 11:12:10.568" endtime="20200625 11:12:10.574"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:12:10.576" level="INFO">Running command 'ozone sh key put -t RATIS /15032-rpcwoscheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:12:13.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:12:13.630" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:12:10.575" endtime="20200625 11:12:13.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:12:13.631" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:12:13.631" endtime="20200625 11:12:13.631"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:12:13.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:12:13.631" endtime="20200625 11:12:13.632"></status>
</kw>
<status status="PASS" starttime="20200625 11:12:10.574" endtime="20200625 11:12:13.632"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:12:13.635" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:12:13.637" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:12:13.637" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:12:13.632" endtime="20200625 11:12:13.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:12:13.638" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:12:13.637" endtime="20200625 11:12:13.638"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:12:13.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:12:13.638" endtime="20200625 11:12:13.638"></status>
</kw>
<status status="PASS" starttime="20200625 11:12:13.632" endtime="20200625 11:12:13.639"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:12:13.641" level="INFO">Running command 'ozone sh key get /15032-rpcwoscheme/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:12:16.576" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:12:16.576" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:12:13.639" endtime="20200625 11:12:16.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:12:16.577" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:12:16.576" endtime="20200625 11:12:16.577"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:12:16.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:12:16.577" endtime="20200625 11:12:16.578"></status>
</kw>
<status status="PASS" starttime="20200625 11:12:13.639" endtime="20200625 11:12:16.578"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:12:16.580" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:12:16.582" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:12:16.582" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:12:16.578" endtime="20200625 11:12:16.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:12:16.583" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:12:16.582" endtime="20200625 11:12:16.583"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:12:16.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:12:16.583" endtime="20200625 11:12:16.583"></status>
</kw>
<status status="PASS" starttime="20200625 11:12:16.578" endtime="20200625 11:12:16.584"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:12:16.586" level="INFO">Running command 'ozone sh key info /15032-rpcwoscheme/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:12:18.256" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:12:18.256" level="INFO">${output} = {
  "volumeName": "15032-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-25T11:12:11.941Z",
  "modificationTime": "2020-06-25T11:12:13.278Z...</msg>
<status status="PASS" starttime="20200625 11:12:16.584" endtime="20200625 11:12:18.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:12:18.257" level="INFO">{
  "volumeName": "15032-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-25T11:12:11.941Z",
  "modificationTime": "2020-06-25T11:12:13.278Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104404322349219970,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200625 11:12:18.257" endtime="20200625 11:12:18.257"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:12:18.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:12:18.258" endtime="20200625 11:12:18.258"></status>
</kw>
<msg timestamp="20200625 11:12:18.258" level="INFO">${result} = {
  "volumeName": "15032-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-25T11:12:11.941Z",
  "modificationTime": "2020-06-25T11:12:13.278Z...</msg>
<status status="PASS" starttime="20200625 11:12:16.584" endtime="20200625 11:12:18.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200625 11:12:18.258" endtime="20200625 11:12:18.259"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:12:18.262" level="INFO">Running command 'ozone sh key delete /15032-rpcwoscheme/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:12:19.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:12:19.781" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:12:18.259" endtime="20200625 11:12:19.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:12:19.782" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:12:19.781" endtime="20200625 11:12:19.782"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:12:19.782" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:12:19.782" endtime="20200625 11:12:19.782"></status>
</kw>
<status status="PASS" starttime="20200625 11:12:18.259" endtime="20200625 11:12:19.782"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:12:19.786" level="INFO">Running command 'ozone sh key cp /15032-rpcwoscheme/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:12:23.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:12:23.172" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:12:19.783" endtime="20200625 11:12:23.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:12:23.173" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:12:23.173" endtime="20200625 11:12:23.173"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:12:23.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:12:23.174" endtime="20200625 11:12:23.174"></status>
</kw>
<status status="PASS" starttime="20200625 11:12:19.783" endtime="20200625 11:12:23.174"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:12:23.177" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:12:23.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:12:23.179" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:12:23.175" endtime="20200625 11:12:23.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:12:23.179" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:12:23.179" endtime="20200625 11:12:23.179"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:12:23.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:12:23.180" endtime="20200625 11:12:23.180"></status>
</kw>
<status status="PASS" starttime="20200625 11:12:23.174" endtime="20200625 11:12:23.181"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:12:23.183" level="INFO">Running command 'ozone sh key get /15032-rpcwoscheme/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:12:25.887" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:12:25.887" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:12:23.181" endtime="20200625 11:12:25.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:12:25.889" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:12:25.888" endtime="20200625 11:12:25.889"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:12:25.889" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:12:25.889" endtime="20200625 11:12:25.889"></status>
</kw>
<status status="PASS" starttime="20200625 11:12:23.181" endtime="20200625 11:12:25.889"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:12:25.892" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:12:25.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:12:25.894" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:12:25.890" endtime="20200625 11:12:25.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:12:25.895" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:12:25.894" endtime="20200625 11:12:25.895"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:12:25.895" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:12:25.895" endtime="20200625 11:12:25.895"></status>
</kw>
<status status="PASS" starttime="20200625 11:12:25.890" endtime="20200625 11:12:25.895"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:12:25.898" level="INFO">Running command 'ozone sh key delete /15032-rpcwoscheme/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:12:27.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:12:27.507" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:12:25.896" endtime="20200625 11:12:27.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:12:27.508" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:12:27.508" endtime="20200625 11:12:27.508"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:12:27.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:12:27.509" endtime="20200625 11:12:27.509"></status>
</kw>
<status status="PASS" starttime="20200625 11:12:25.896" endtime="20200625 11:12:27.509"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:12:27.513" level="INFO">Running command 'ozone sh key get /15032-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:12:29.030" level="INFO">${rc} = 255</msg>
<msg timestamp="20200625 11:12:29.030" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200625 11:12:27.510" endtime="20200625 11:12:29.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:12:29.031" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200625 11:12:29.031" endtime="20200625 11:12:29.032"></status>
</kw>
<msg timestamp="20200625 11:12:29.032" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200625 11:12:27.509" endtime="20200625 11:12:29.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200625 11:12:29.032" endtime="20200625 11:12:29.032"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:12:29.036" level="INFO">Running command 'ozone sh key get --force /15032-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:12:32.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:12:32.229" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:12:29.033" endtime="20200625 11:12:32.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:12:32.230" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:12:32.230" endtime="20200625 11:12:32.230"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:12:32.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:12:32.231" endtime="20200625 11:12:32.231"></status>
</kw>
<msg timestamp="20200625 11:12:32.231" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200625 11:12:29.033" endtime="20200625 11:12:32.231"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200625 11:12:32.231" endtime="20200625 11:12:32.232"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:12:32.234" level="INFO">Running command 'ozone sh key info /15032-rpcwoscheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:12:33.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:12:33.994" level="INFO">${output} = {
  "volumeName": "15032-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-25T11:12:06.016Z",
  "modificationTime": "2020-06-25T11:12:07.235Z",
  "...</msg>
<status status="PASS" starttime="20200625 11:12:32.232" endtime="20200625 11:12:33.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:12:33.995" level="INFO">{
  "volumeName": "15032-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-25T11:12:06.016Z",
  "modificationTime": "2020-06-25T11:12:07.235Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104404321960919170,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200625 11:12:33.994" endtime="20200625 11:12:33.995"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:12:33.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:12:33.995" endtime="20200625 11:12:33.995"></status>
</kw>
<msg timestamp="20200625 11:12:33.995" level="INFO">${result} = {
  "volumeName": "15032-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-25T11:12:06.016Z",
  "modificationTime": "2020-06-25T11:12:07.235Z",
  "...</msg>
<status status="PASS" starttime="20200625 11:12:32.232" endtime="20200625 11:12:33.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200625 11:12:33.996" endtime="20200625 11:12:33.996"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:12:33.999" level="INFO">Running command 'ozone sh key list /15032-rpcwoscheme/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:12:35.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:12:35.818" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200625 11:12:33.997" endtime="20200625 11:12:35.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:12:35.819" level="INFO">key1</msg>
<status status="PASS" starttime="20200625 11:12:35.818" endtime="20200625 11:12:35.819"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:12:35.819" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:12:35.819" endtime="20200625 11:12:35.820"></status>
</kw>
<msg timestamp="20200625 11:12:35.820" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200625 11:12:33.996" endtime="20200625 11:12:35.820"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200625 11:12:35.820" endtime="20200625 11:12:35.820"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:12:35.824" level="INFO">Running command 'ozone sh key rename /15032-rpcwoscheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:12:37.266" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:12:37.266" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:12:35.821" endtime="20200625 11:12:37.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:12:37.267" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:12:37.266" endtime="20200625 11:12:37.267"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:12:37.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:12:37.267" endtime="20200625 11:12:37.268"></status>
</kw>
<status status="PASS" starttime="20200625 11:12:35.820" endtime="20200625 11:12:37.268"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:12:37.272" level="INFO">Running command 'ozone sh key list /15032-rpcwoscheme/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:12:39.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:12:39.038" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200625 11:12:37.269" endtime="20200625 11:12:39.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:12:39.039" level="INFO">key2</msg>
<status status="PASS" starttime="20200625 11:12:39.038" endtime="20200625 11:12:39.039"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:12:39.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:12:39.039" endtime="20200625 11:12:39.040"></status>
</kw>
<msg timestamp="20200625 11:12:39.040" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200625 11:12:37.268" endtime="20200625 11:12:39.040"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200625 11:12:39.040" endtime="20200625 11:12:39.040"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:12:39.044" level="INFO">Running command 'ozone sh key delete /15032-rpcwoscheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:12:40.652" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:12:40.652" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:12:39.041" endtime="20200625 11:12:40.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:12:40.653" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:12:40.653" endtime="20200625 11:12:40.653"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:12:40.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:12:40.654" endtime="20200625 11:12:40.654"></status>
</kw>
<status status="PASS" starttime="20200625 11:12:39.040" endtime="20200625 11:12:40.654"></status>
</kw>
<status status="PASS" starttime="20200625 11:12:04.603" endtime="20200625 11:12:40.654"></status>
</kw>
<status status="PASS" starttime="20200625 11:12:04.603" endtime="20200625 11:12:40.654"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:12:40.658" level="INFO">Running command 'ozone sh bucket delete /15032-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:12:42.212" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:12:42.212" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200625 11:12:40.655" endtime="20200625 11:12:42.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:12:42.213" level="INFO"></msg>
<status status="PASS" starttime="20200625 11:12:42.212" endtime="20200625 11:12:42.213"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:12:42.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:12:42.213" endtime="20200625 11:12:42.213"></status>
</kw>
<status status="PASS" starttime="20200625 11:12:40.654" endtime="20200625 11:12:42.214"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:12:42.217" level="INFO">Running command 'ozone sh volume delete /15032-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:12:43.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:12:43.708" level="INFO">${output} = Volume 15032-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200625 11:12:42.214" endtime="20200625 11:12:43.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:12:43.709" level="INFO">Volume 15032-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200625 11:12:43.708" endtime="20200625 11:12:43.709"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:12:43.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:12:43.709" endtime="20200625 11:12:43.710"></status>
</kw>
<status status="PASS" starttime="20200625 11:12:42.214" endtime="20200625 11:12:43.710"></status>
</kw>
<status status="PASS" starttime="20200625 11:11:50.108" endtime="20200625 11:12:43.710"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200625 11:11:50.107" endtime="20200625 11:12:43.710" critical="yes"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20200625 11:09:23.105" endtime="20200625 11:12:43.712"></status>
</suite>
<status status="PASS" starttime="20200625 11:08:30.671" endtime="20200625 11:12:43.715"></status>
</suite>
<statistics>
<total>
<stat pass="8" fail="0">Critical Tests</stat>
<stat pass="8" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="8" fail="0" id="s1" name="ozone-basic">ozone-basic</stat>
<stat pass="2" fail="0" id="s1-s1" name="Basic">ozone-basic.Basic</stat>
<stat pass="6" fail="0" id="s1-s2" name="Ozone-Shell">ozone-basic.Ozone-Shell</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
