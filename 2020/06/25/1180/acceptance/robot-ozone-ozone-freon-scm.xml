<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200625 11:20:34.862" rpa="false">
<suite id="s1" name="ozone-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:20:34.909" level="INFO">Running command 'ozone freon rk  --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:20:42.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:20:42.038" level="INFO">${output} = 2020-06-25 11:20:35,729 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-25 11:20:35,870 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200625 11:20:34.905" endtime="20200625 11:20:42.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:20:42.039" level="INFO">2020-06-25 11:20:35,729 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-25 11:20:35,870 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-25 11:20:35,871 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-25 11:20:36,574 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-06-25 11:20:36,575 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-06-25 11:20:36,575 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-06-25 11:20:36,575 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-06-25 11:20:36,575 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-06-25 11:20:36,575 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-25 11:20:36,575 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-06-25 11:20:36,577 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-25 11:20:36,590 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-25 11:20:36,613 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-60044, with hadoop as owner.
2020-06-25 11:20:36,630 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-60044/bucket-0-61223, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-25 11:20:37,115 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-25 11:20:37,595 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,035
Average Time spent in bucket creation: 00:00:00,007
Average Time spent in key creation: 00:00:00,042
Average Time spent in key write: 00:00:00,575
Total bytes written: 10240
Total Execution time: 00:00:05,655
***************************************************</msg>
<status status="PASS" starttime="20200625 11:20:42.038" endtime="20200625 11:20:42.039"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:20:42.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:20:42.039" endtime="20200625 11:20:42.040"></status>
</kw>
<msg timestamp="20200625 11:20:42.040" level="INFO">${result} = 2020-06-25 11:20:35,729 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-25 11:20:35,870 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200625 11:20:34.904" endtime="20200625 11:20:42.040"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200625 11:20:42.041" endtime="20200625 11:20:42.041"></status>
</kw>
<status status="PASS" starttime="20200625 11:20:42.040" endtime="20200625 11:20:42.041"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200625 11:20:34.904" endtime="20200625 11:20:42.041" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:20:42.046" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:20:46.290" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:20:46.290" level="INFO">${output} = 2020-06-25 11:20:42,881 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-25 11:20:43,055 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200625 11:20:42.043" endtime="20200625 11:20:46.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:20:46.291" level="INFO">2020-06-25 11:20:42,881 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-25 11:20:43,055 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-25 11:20:43,055 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-25 11:20:43,247 [main] INFO freon.BaseFreonGenerator: Executing test with prefix qkqspa5bnp
2020-06-25 11:20:43,269 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-25 11:20:43,807 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-06-25 11:20:43,821 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-25 11:20:44,274 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-25 11:20:44,331 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-25 11:20:45,274 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-25 11:20:45,964 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=1167.107211, max=1167.107211, mean=1167.107211, stddev=0.0, median=1167.107211, p75=1167.107211, p95=1167.107211, p98=1167.107211, p99=1167.107211, p999=1167.107211, mean_rate=0.46950020248933383, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-25 11:20:45,965 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-06-25 11:20:45,965 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-25 11:20:45,965 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200625 11:20:46.291" endtime="20200625 11:20:46.292"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:20:46.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:20:46.292" endtime="20200625 11:20:46.292"></status>
</kw>
<msg timestamp="20200625 11:20:46.292" level="INFO">${result} = 2020-06-25 11:20:42,881 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-25 11:20:43,055 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200625 11:20:42.042" endtime="20200625 11:20:46.292"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200625 11:20:46.293" endtime="20200625 11:20:46.293"></status>
</kw>
<status status="PASS" starttime="20200625 11:20:46.293" endtime="20200625 11:20:46.293"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200625 11:20:42.042" endtime="20200625 11:20:46.294" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:20:46.297" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:20:49.099" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:20:49.099" level="INFO">${output} = 2020-06-25 11:20:47,099 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-25 11:20:47,238 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200625 11:20:46.295" endtime="20200625 11:20:49.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:20:49.100" level="INFO">2020-06-25 11:20:47,099 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-25 11:20:47,238 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-25 11:20:47,238 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-25 11:20:47,406 [main] INFO freon.BaseFreonGenerator: Executing test with prefix bwmh6i5ecc
2020-06-25 11:20:47,432 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-25 11:20:48,438 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-25 11:20:49,088 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=31.825977, max=31.825977, mean=31.825977, stddev=0.0, median=31.825977, p75=31.825977, p95=31.825977, p98=31.825977, p99=31.825977, p999=31.825977, mean_rate=0.8973722859358838, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-25 11:20:49,089 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-06-25 11:20:49,089 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-25 11:20:49,089 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200625 11:20:49.100" endtime="20200625 11:20:49.101"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:20:49.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:20:49.101" endtime="20200625 11:20:49.101"></status>
</kw>
<msg timestamp="20200625 11:20:49.102" level="INFO">${result} = 2020-06-25 11:20:47,099 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-25 11:20:47,238 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200625 11:20:46.295" endtime="20200625 11:20:49.102"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200625 11:20:49.103" endtime="20200625 11:20:49.104"></status>
</kw>
<status status="PASS" starttime="20200625 11:20:49.103" endtime="20200625 11:20:49.104"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200625 11:20:46.294" endtime="20200625 11:20:49.104" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200625 11:20:49.109" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200625 11:20:51.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20200625 11:20:51.980" level="INFO">${output} = 2020-06-25 11:20:49,943 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-25 11:20:50,112 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200625 11:20:49.106" endtime="20200625 11:20:51.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200625 11:20:51.981" level="INFO">2020-06-25 11:20:49,943 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-25 11:20:50,112 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-25 11:20:50,112 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-25 11:20:50,286 [main] INFO freon.BaseFreonGenerator: Executing test with prefix i6onmfi3vq
2020-06-25 11:20:50,325 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-25 11:20:51,330 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-25 11:20:51,969 [Thread-2] INFO metrics: type=TIMER, name=bucket-create, count=1, min=5.464436, max=5.464436, mean=5.464436, stddev=0.0, median=5.464436, p75=5.464436, p95=5.464436, p98=5.464436, p99=5.464436, p999=5.464436, mean_rate=0.8999979993944471, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-25 11:20:51,970 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-06-25 11:20:51,970 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-25 11:20:51,970 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200625 11:20:51.981" endtime="20200625 11:20:51.981"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200625 11:20:51.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200625 11:20:51.982" endtime="20200625 11:20:51.982"></status>
</kw>
<msg timestamp="20200625 11:20:51.982" level="INFO">${result} = 2020-06-25 11:20:49,943 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-25 11:20:50,112 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200625 11:20:49.105" endtime="20200625 11:20:51.982"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200625 11:20:51.983" endtime="20200625 11:20:51.983"></status>
</kw>
<status status="PASS" starttime="20200625 11:20:51.982" endtime="20200625 11:20:51.983"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200625 11:20:49.105" endtime="20200625 11:20:51.983" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200625 11:20:34.885" endtime="20200625 11:20:51.984"></status>
</suite>
<status status="PASS" starttime="20200625 11:20:34.862" endtime="20200625 11:20:51.987"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-freon">ozone-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
