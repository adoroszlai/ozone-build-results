<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200630 09:57:36.741" rpa="false">
<suite id="s1" name="ozone-basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200630 09:57:36.801" endtime="20200630 09:57:36.802"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 09:57:36.809" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 09:57:36.914" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 09:57:36.914" level="INFO">${output} = HTTP/1.1 200 OK
Date: Tue, 30 Jun 2020 09:57:36 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Tue, 30 Jun 2020 09:25:26 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200630 09:57:36.803" endtime="20200630 09:57:36.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 09:57:36.916" level="INFO">HTTP/1.1 200 OK
Date: Tue, 30 Jun 2020 09:57:36 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Tue, 30 Jun 2020 09:25:26 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20200630 09:57:36.915" endtime="20200630 09:57:36.916"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 09:57:36.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 09:57:36.916" endtime="20200630 09:57:36.917"></status>
</kw>
<msg timestamp="20200630 09:57:36.917" level="INFO">${result} = HTTP/1.1 200 OK
Date: Tue, 30 Jun 2020 09:57:36 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Tue, 30 Jun 2020 09:25:26 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200630 09:57:36.802" endtime="20200630 09:57:36.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200630 09:57:36.918" endtime="20200630 09:57:36.918"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 09:57:36.801" endtime="20200630 09:57:36.919" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200630 09:57:36.921" endtime="20200630 09:57:36.921"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 09:57:36.924" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 09:58:39.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 09:58:39.696" level="INFO">${output} = 2020-06-30 09:57:38,450 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 09:57:38,656 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 09:57:36.922" endtime="20200630 09:58:39.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 09:58:39.697" level="INFO">2020-06-30 09:57:38,450 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 09:57:38,656 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-30 09:57:38,656 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-30 09:57:40,756 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-06-30 09:57:40,757 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-06-30 09:57:40,757 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-06-30 09:57:40,757 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-06-30 09:57:40,757 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-06-30 09:57:40,757 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-30 09:57:40,757 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-06-30 09:57:40,766 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-06-30 09:57:40,773 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-30 09:57:40,779 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-06-30 09:57:40,821 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-97781, with hadoop as owner.
2020-06-30 09:57:41,121 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-24151, with hadoop as owner.
2020-06-30 09:57:41,128 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-46122, with hadoop as owner.
2020-06-30 09:57:41,136 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-59434, with hadoop as owner.
2020-06-30 09:57:41,145 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-62992, with hadoop as owner.
2020-06-30 09:57:41,160 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-97781/bucket-0-45492, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 09:57:41,245 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-24151/bucket-0-56233, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 09:57:41,252 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-46122/bucket-0-67612, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 09:57:41,270 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-59434/bucket-0-69652, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 09:57:41,275 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-62992/bucket-0-82880, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 09:57:41,280 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-97781/bucket-1-90495, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 09:57:41,285 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-24151/bucket-1-26556, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 09:57:41,289 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-46122/bucket-1-60013, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 09:57:41,294 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-59434/bucket-1-61840, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 09:57:41,299 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-62992/bucket-1-06831, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 09:57:41,307 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-97781/bucket-2-77478, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 09:57:41,311 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-24151/bucket-2-09942, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 09:57:41,316 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-46122/bucket-2-70735, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 09:57:41,321 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-59434/bucket-2-38508, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 09:57:41,325 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-62992/bucket-2-42139, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 09:57:41,330 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-97781/bucket-3-44157, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 09:57:41,335 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-24151/bucket-3-82290, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 09:57:41,345 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-46122/bucket-3-10383, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 09:57:41,350 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-59434/bucket-3-35271, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 09:57:41,354 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-62992/bucket-3-30815, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 09:57:41,357 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-97781/bucket-4-28120, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 09:57:41,363 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-24151/bucket-4-53366, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 09:57:41,367 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-46122/bucket-4-34480, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 09:57:41,370 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-59434/bucket-4-24199, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 09:57:41,374 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-62992/bucket-4-37513, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 09:57:41,781 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-06-30 09:57:42,621 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-30 09:57:42,792 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-06-30 09:57:43,793 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-06-30 09:57:44,793 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-06-30 09:57:45,794 [Thread-7] INFO freon.ProgressBar: Progress: 2.40 % (3 out of 125)
2020-06-30 09:57:46,795 [Thread-7] INFO freon.ProgressBar: Progress: 2.40 % (3 out of 125)
2020-06-30 09:57:47,795 [Thread-7] INFO freon.ProgressBar: Progress: 2.40 % (3 out of 125)
2020-06-30 09:57:48,796 [Thread-7] INFO freon.ProgressBar: Progress: 8.80 % (11 out of 125)
2020-06-30 09:57:49,796 [Thread-7] INFO freon.ProgressBar: Progress: 12.80 % (16 out of 125)
2020-06-30 09:57:50,797 [Thread-7] INFO freon.ProgressBar: Progress: 12.80 % (16 out of 125)
2020-06-30 09:57:51,797 [Thread-7] INFO freon.ProgressBar: Progress: 12.80 % (16 out of 125)
2020-06-30 09:57:52,798 [Thread-7] INFO freon.ProgressBar: Progress: 22.40 % (28 out of 125)
2020-06-30 09:57:53,799 [Thread-7] INFO freon.ProgressBar: Progress: 32.80 % (41 out of 125)
2020-06-30 09:57:54,799 [Thread-7] INFO freon.ProgressBar: Progress: 37.60 % (47 out of 125)
2020-06-30 09:57:55,800 [Thread-7] INFO freon.ProgressBar: Progress: 37.60 % (47 out of 125)
2020-06-30 09:57:56,806 [Thread-7] INFO freon.ProgressBar: Progress: 39.20 % (49 out of 125)
2020-06-30 09:57:57,806 [Thread-7] INFO freon.ProgressBar: Progress: 40.80 % (51 out of 125)
2020-06-30 09:57:58,807 [Thread-7] INFO freon.ProgressBar: Progress: 40.80 % (51 out of 125)
2020-06-30 09:57:59,810 [Thread-7] INFO freon.ProgressBar: Progress: 44.00 % (55 out of 125)
2020-06-30 09:58:00,811 [Thread-7] INFO freon.ProgressBar: Progress: 45.60 % (57 out of 125)
2020-06-30 09:58:01,811 [Thread-7] INFO freon.ProgressBar: Progress: 45.60 % (57 out of 125)
2020-06-30 09:58:02,812 [Thread-7] INFO freon.ProgressBar: Progress: 48.80 % (61 out of 125)
2020-06-30 09:58:03,812 [Thread-7] INFO freon.ProgressBar: Progress: 48.80 % (61 out of 125)
2020-06-30 09:58:04,813 [Thread-7] INFO freon.ProgressBar: Progress: 48.80 % (61 out of 125)
2020-06-30 09:58:05,813 [Thread-7] INFO freon.ProgressBar: Progress: 51.20 % (64 out of 125)
2020-06-30 09:58:06,814 [Thread-7] INFO freon.ProgressBar: Progress: 51.20 % (64 out of 125)
2020-06-30 09:58:07,814 [Thread-7] INFO freon.ProgressBar: Progress: 51.20 % (64 out of 125)
2020-06-30 09:58:08,815 [Thread-7] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2020-06-30 09:58:09,815 [Thread-7] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2020-06-30 09:58:10,815 [Thread-7] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2020-06-30 09:58:11,816 [Thread-7] INFO freon.ProgressBar: Progress: 61.60 % (77 out of 125)
2020-06-30 09:58:12,816 [Thread-7] INFO freon.ProgressBar: Progress: 61.60 % (77 out of 125)
2020-06-30 09:58:13,817 [Thread-7] INFO freon.ProgressBar: Progress: 61.60 % (77 out of 125)
2020-06-30 09:58:14,817 [Thread-7] INFO freon.ProgressBar: Progress: 62.40 % (78 out of 125)
2020-06-30 09:58:15,818 [Thread-7] INFO freon.ProgressBar: Progress: 62.40 % (78 out of 125)
2020-06-30 09:58:16,818 [Thread-7] INFO freon.ProgressBar: Progress: 65.60 % (82 out of 125)
2020-06-30 09:58:17,819 [Thread-7] INFO freon.ProgressBar: Progress: 65.60 % (82 out of 125)
2020-06-30 09:58:18,819 [Thread-7] INFO freon.ProgressBar: Progress: 65.60 % (82 out of 125)
2020-06-30 09:58:19,820 [Thread-7] INFO freon.ProgressBar: Progress: 68.00 % (85 out of 125)
2020-06-30 09:58:20,820 [Thread-7] INFO freon.ProgressBar: Progress: 68.00 % (85 out of 125)
2020-06-30 09:58:21,821 [Thread-7] INFO freon.ProgressBar: Progress: 68.00 % (85 out of 125)
2020-06-30 09:58:22,821 [Thread-7] INFO freon.ProgressBar: Progress: 69.60 % (87 out of 125)
2020-06-30 09:58:23,822 [Thread-7] INFO freon.ProgressBar: Progress: 69.60 % (87 out of 125)
2020-06-30 09:58:24,822 [Thread-7] INFO freon.ProgressBar: Progress: 73.60 % (92 out of 125)
2020-06-30 09:58:25,823 [Thread-7] INFO freon.ProgressBar: Progress: 73.60 % (92 out of 125)
2020-06-30 09:58:26,823 [Thread-7] INFO freon.ProgressBar: Progress: 73.60 % (92 out of 125)
2020-06-30 09:58:27,832 [Thread-7] INFO freon.ProgressBar: Progress: 80.80 % (101 out of 125)
2020-06-30 09:58:28,832 [Thread-7] INFO freon.ProgressBar: Progress: 86.40 % (108 out of 125)
2020-06-30 09:58:29,833 [Thread-7] INFO freon.ProgressBar: Progress: 86.40 % (108 out of 125)
2020-06-30 09:58:30,839 [Thread-7] INFO freon.ProgressBar: Progress: 87.20 % (109 out of 125)
2020-06-30 09:58:31,840 [Thread-7] INFO freon.ProgressBar: Progress: 92.00 % (115 out of 125)
2020-06-30 09:58:32,840 [Thread-7] INFO freon.ProgressBar: Progress: 92.00 % (115 out of 125)
2020-06-30 09:58:33,841 [Thread-7] INFO freon.ProgressBar: Progress: 94.40 % (118 out of 125)
2020-06-30 09:58:34,841 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,345
Average Time spent in bucket creation: 00:00:00,170
Average Time spent in key creation: 00:00:02,211
Average Time spent in key write: 00:00:00,994
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:01:00,471
***************************************************</msg>
<status status="PASS" starttime="20200630 09:58:39.696" endtime="20200630 09:58:39.697"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 09:58:39.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 09:58:39.697" endtime="20200630 09:58:39.698"></status>
</kw>
<msg timestamp="20200630 09:58:39.698" level="INFO">${result} = 2020-06-30 09:57:38,450 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 09:57:38,656 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 09:57:36.921" endtime="20200630 09:58:39.698"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" starttime="20200630 09:58:39.699" endtime="20200630 09:58:39.699"></status>
</kw>
<status status="PASS" starttime="20200630 09:58:39.698" endtime="20200630 09:58:39.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" starttime="20200630 09:58:39.699" endtime="20200630 09:58:39.700"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 09:57:36.920" endtime="20200630 09:58:39.700" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200630 09:57:36.775" endtime="20200630 09:58:39.701"></status>
</suite>
<suite id="s1-s2" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200630 09:58:39.708" level="INFO">${random} = 60879</msg>
<status status="PASS" starttime="20200630 09:58:39.708" endtime="20200630 09:58:39.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200630 09:58:39.709" level="INFO">${prefix} = 60879</msg>
<status status="PASS" starttime="20200630 09:58:39.709" endtime="20200630 09:58:39.709"></status>
</kw>
<status status="PASS" starttime="20200630 09:58:39.707" endtime="20200630 09:58:39.709"></status>
</kw>
<test id="s1-s2-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200630 09:58:39.710" endtime="20200630 09:58:39.711"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 09:58:39.714" level="INFO">Running command 'ozone sh volume info o3://om:9862/60879-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 09:58:42.486" level="INFO">${rc} = 255</msg>
<msg timestamp="20200630 09:58:42.486" level="INFO">${output} = VOLUME_NOT_FOUND Volume 60879-rpcwoport is not found</msg>
<status status="PASS" starttime="20200630 09:58:39.712" endtime="20200630 09:58:42.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 09:58:42.487" level="INFO">VOLUME_NOT_FOUND Volume 60879-rpcwoport is not found</msg>
<status status="PASS" starttime="20200630 09:58:42.487" endtime="20200630 09:58:42.488"></status>
</kw>
<msg timestamp="20200630 09:58:42.488" level="INFO">${result} = VOLUME_NOT_FOUND Volume 60879-rpcwoport is not found</msg>
<status status="PASS" starttime="20200630 09:58:39.712" endtime="20200630 09:58:42.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200630 09:58:42.488" endtime="20200630 09:58:42.489"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 09:58:42.493" level="INFO">Running command 'ozone sh volume create o3://om:9862/60879-rpcwoport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 09:58:45.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 09:58:45.363" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 09:58:42.490" endtime="20200630 09:58:45.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 09:58:45.364" level="INFO"></msg>
<status status="PASS" starttime="20200630 09:58:45.363" endtime="20200630 09:58:45.365"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 09:58:45.366" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 09:58:45.366" endtime="20200630 09:58:45.366"></status>
</kw>
<msg timestamp="20200630 09:58:45.367" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200630 09:58:42.489" endtime="20200630 09:58:45.367"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200630 09:58:45.367" endtime="20200630 09:58:45.367"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 09:58:45.370" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="60879-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 09:58:48.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 09:58:48.354" level="INFO">${output} = {
  "metadata": {},
  "name": "60879-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T09:58:45.289Z",
  "modificationTime": "2020-06-30T09:58:45.289Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200630 09:58:45.368" endtime="20200630 09:58:48.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 09:58:48.355" level="INFO">{
  "metadata": {},
  "name": "60879-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T09:58:45.289Z",
  "modificationTime": "2020-06-30T09:58:45.289Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200630 09:58:48.354" endtime="20200630 09:58:48.355"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 09:58:48.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 09:58:48.355" endtime="20200630 09:58:48.356"></status>
</kw>
<msg timestamp="20200630 09:58:48.356" level="INFO">${result} = {
  "metadata": {},
  "name": "60879-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T09:58:45.289Z",
  "modificationTime": "2020-06-30T09:58:45.289Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200630 09:58:45.368" endtime="20200630 09:58:48.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200630 09:58:48.356" endtime="20200630 09:58:48.356"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 09:58:48.359" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="60879-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 09:58:51.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 09:58:51.325" level="INFO">${output} = {
  "metadata": {},
  "name": "60879-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T09:58:45.289Z",
  "modificationTime": "2020-06-30T09:58:45.289Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200630 09:58:48.357" endtime="20200630 09:58:51.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 09:58:51.327" level="INFO">{
  "metadata": {},
  "name": "60879-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T09:58:45.289Z",
  "modificationTime": "2020-06-30T09:58:45.289Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200630 09:58:51.326" endtime="20200630 09:58:51.327"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 09:58:51.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 09:58:51.327" endtime="20200630 09:58:51.327"></status>
</kw>
<msg timestamp="20200630 09:58:51.328" level="INFO">${result} = {
  "metadata": {},
  "name": "60879-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T09:58:45.289Z",
  "modificationTime": "2020-06-30T09:58:45.289Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200630 09:58:48.357" endtime="20200630 09:58:51.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200630 09:58:51.328" endtime="20200630 09:58:51.328"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 09:58:51.332" level="INFO">Running command 'ozone sh volume update o3://om:9862/60879-rpcwoport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 09:58:54.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 09:58:54.267" level="INFO">${output} = {
  "metadata" : { },
  "name" : "60879-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-30T09:58:45.289Z",
  "modificationTime" : "2020-06-30T09:58:53.910Z",
  "acl...</msg>
<status status="PASS" starttime="20200630 09:58:51.329" endtime="20200630 09:58:54.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 09:58:54.268" level="INFO">{
  "metadata" : { },
  "name" : "60879-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-30T09:58:45.289Z",
  "modificationTime" : "2020-06-30T09:58:53.910Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200630 09:58:54.268" endtime="20200630 09:58:54.268"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 09:58:54.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 09:58:54.268" endtime="20200630 09:58:54.269"></status>
</kw>
<status status="PASS" starttime="20200630 09:58:51.328" endtime="20200630 09:58:54.269"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 09:58:54.273" level="INFO">Running command 'ozone sh volume info o3://om:9862/60879-rpcwoport | jq -r '. | select(.name=="60879-rpcwoport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 09:58:57.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 09:58:57.014" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200630 09:58:54.270" endtime="20200630 09:58:57.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 09:58:57.015" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200630 09:58:57.014" endtime="20200630 09:58:57.015"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 09:58:57.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 09:58:57.015" endtime="20200630 09:58:57.016"></status>
</kw>
<msg timestamp="20200630 09:58:57.016" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200630 09:58:54.269" endtime="20200630 09:58:57.016"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200630 09:58:57.016" endtime="20200630 09:58:57.017"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 09:58:57.019" level="INFO">Running command 'ozone sh bucket create o3://om:9862/60879-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 09:58:59.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 09:58:59.842" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 09:58:57.017" endtime="20200630 09:58:59.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 09:58:59.844" level="INFO"></msg>
<status status="PASS" starttime="20200630 09:58:59.843" endtime="20200630 09:58:59.844"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 09:58:59.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 09:58:59.844" endtime="20200630 09:58:59.845"></status>
</kw>
<status status="PASS" starttime="20200630 09:58:57.017" endtime="20200630 09:58:59.845"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 09:58:59.848" level="INFO">Running command 'ozone sh bucket info o3://om:9862/60879-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 09:59:02.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 09:59:02.818" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200630 09:58:59.846" endtime="20200630 09:59:02.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 09:59:02.820" level="INFO">DISK</msg>
<status status="PASS" starttime="20200630 09:59:02.819" endtime="20200630 09:59:02.820"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 09:59:02.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 09:59:02.820" endtime="20200630 09:59:02.821"></status>
</kw>
<msg timestamp="20200630 09:59:02.821" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200630 09:58:59.845" endtime="20200630 09:59:02.821"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200630 09:59:02.821" endtime="20200630 09:59:02.821"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 09:59:02.825" level="INFO">Running command 'ozone sh bucket list o3://om:9862/60879-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 09:59:05.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 09:59:05.724" level="INFO">${output} = 60879-rpcwoport</msg>
<status status="PASS" starttime="20200630 09:59:02.822" endtime="20200630 09:59:05.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 09:59:05.726" level="INFO">60879-rpcwoport</msg>
<status status="PASS" starttime="20200630 09:59:05.725" endtime="20200630 09:59:05.726"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 09:59:05.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 09:59:05.726" endtime="20200630 09:59:05.727"></status>
</kw>
<msg timestamp="20200630 09:59:05.727" level="INFO">${result} = 60879-rpcwoport</msg>
<status status="PASS" starttime="20200630 09:59:02.822" endtime="20200630 09:59:05.727"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200630 09:59:05.728" endtime="20200630 09:59:05.728"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 09:59:05.731" level="INFO">Running command 'ozone sh key put o3://om:9862/60879-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 09:59:10.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 09:59:10.290" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 09:59:05.729" endtime="20200630 09:59:10.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 09:59:10.291" level="INFO"></msg>
<status status="PASS" starttime="20200630 09:59:10.290" endtime="20200630 09:59:10.291"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 09:59:10.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 09:59:10.292" endtime="20200630 09:59:10.292"></status>
</kw>
<status status="PASS" starttime="20200630 09:59:05.729" endtime="20200630 09:59:10.292"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 09:59:10.296" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 09:59:10.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 09:59:10.298" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 09:59:10.293" endtime="20200630 09:59:10.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 09:59:10.299" level="INFO"></msg>
<status status="PASS" starttime="20200630 09:59:10.299" endtime="20200630 09:59:10.299"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 09:59:10.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 09:59:10.300" endtime="20200630 09:59:10.300"></status>
</kw>
<status status="PASS" starttime="20200630 09:59:10.292" endtime="20200630 09:59:10.301"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 09:59:10.304" level="INFO">Running command 'ozone sh key get o3://om:9862/60879-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 09:59:14.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 09:59:14.951" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 09:59:10.301" endtime="20200630 09:59:14.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 09:59:14.952" level="INFO"></msg>
<status status="PASS" starttime="20200630 09:59:14.952" endtime="20200630 09:59:14.953"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 09:59:14.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 09:59:14.953" endtime="20200630 09:59:14.953"></status>
</kw>
<status status="PASS" starttime="20200630 09:59:10.301" endtime="20200630 09:59:14.954"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 09:59:14.956" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 09:59:14.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 09:59:14.961" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 09:59:14.954" endtime="20200630 09:59:14.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 09:59:14.962" level="INFO"></msg>
<status status="PASS" starttime="20200630 09:59:14.961" endtime="20200630 09:59:14.962"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 09:59:14.963" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 09:59:14.963" endtime="20200630 09:59:14.963"></status>
</kw>
<status status="PASS" starttime="20200630 09:59:14.954" endtime="20200630 09:59:14.964"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 09:59:14.967" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/60879-rpcwoport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 09:59:19.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 09:59:19.763" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 09:59:14.965" endtime="20200630 09:59:19.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 09:59:19.765" level="INFO"></msg>
<status status="PASS" starttime="20200630 09:59:19.764" endtime="20200630 09:59:19.765"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 09:59:19.765" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 09:59:19.765" endtime="20200630 09:59:19.765"></status>
</kw>
<status status="PASS" starttime="20200630 09:59:14.964" endtime="20200630 09:59:19.765"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 09:59:19.768" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 09:59:19.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 09:59:19.771" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 09:59:19.766" endtime="20200630 09:59:19.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 09:59:19.772" level="INFO"></msg>
<status status="PASS" starttime="20200630 09:59:19.772" endtime="20200630 09:59:19.772"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 09:59:19.773" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 09:59:19.773" endtime="20200630 09:59:19.773"></status>
</kw>
<status status="PASS" starttime="20200630 09:59:19.766" endtime="20200630 09:59:19.773"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 09:59:19.777" level="INFO">Running command 'ozone sh key get o3://om:9862/60879-rpcwoport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 09:59:25.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 09:59:25.055" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 09:59:19.774" endtime="20200630 09:59:25.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 09:59:25.056" level="INFO"></msg>
<status status="PASS" starttime="20200630 09:59:25.056" endtime="20200630 09:59:25.057"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 09:59:25.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 09:59:25.057" endtime="20200630 09:59:25.057"></status>
</kw>
<status status="PASS" starttime="20200630 09:59:19.774" endtime="20200630 09:59:25.057"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 09:59:25.060" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 09:59:25.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 09:59:25.062" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 09:59:25.058" endtime="20200630 09:59:25.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 09:59:25.063" level="INFO"></msg>
<status status="PASS" starttime="20200630 09:59:25.062" endtime="20200630 09:59:25.063"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 09:59:25.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 09:59:25.063" endtime="20200630 09:59:25.063"></status>
</kw>
<status status="PASS" starttime="20200630 09:59:25.057" endtime="20200630 09:59:25.063"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 09:59:25.066" level="INFO">Running command 'ozone sh key info o3://om:9862/60879-rpcwoport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 09:59:28.118" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 09:59:28.118" level="INFO">${output} = {
  "volumeName": "60879-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-30T09:59:17.585Z",
  "modificationTime": "2020-06-30T09:59:19.276Z",...</msg>
<status status="PASS" starttime="20200630 09:59:25.064" endtime="20200630 09:59:28.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 09:59:28.119" level="INFO">{
  "volumeName": "60879-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-30T09:59:17.585Z",
  "modificationTime": "2020-06-30T09:59:19.276Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104432347223359620,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200630 09:59:28.118" endtime="20200630 09:59:28.119"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 09:59:28.120" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 09:59:28.120" endtime="20200630 09:59:28.120"></status>
</kw>
<msg timestamp="20200630 09:59:28.120" level="INFO">${result} = {
  "volumeName": "60879-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-30T09:59:17.585Z",
  "modificationTime": "2020-06-30T09:59:19.276Z",...</msg>
<status status="PASS" starttime="20200630 09:59:25.064" endtime="20200630 09:59:28.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200630 09:59:28.121" endtime="20200630 09:59:28.121"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 09:59:28.124" level="INFO">Running command 'ozone sh key delete o3://om:9862/60879-rpcwoport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 09:59:30.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 09:59:30.886" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 09:59:28.122" endtime="20200630 09:59:30.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 09:59:30.887" level="INFO"></msg>
<status status="PASS" starttime="20200630 09:59:30.887" endtime="20200630 09:59:30.888"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 09:59:30.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 09:59:30.888" endtime="20200630 09:59:30.888"></status>
</kw>
<status status="PASS" starttime="20200630 09:59:28.121" endtime="20200630 09:59:30.888"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 09:59:30.891" level="INFO">Running command 'ozone sh key cp o3://om:9862/60879-rpcwoport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 09:59:36.040" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 09:59:36.040" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 09:59:30.889" endtime="20200630 09:59:36.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 09:59:36.041" level="INFO"></msg>
<status status="PASS" starttime="20200630 09:59:36.040" endtime="20200630 09:59:36.041"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 09:59:36.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 09:59:36.041" endtime="20200630 09:59:36.042"></status>
</kw>
<status status="PASS" starttime="20200630 09:59:30.889" endtime="20200630 09:59:36.042"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 09:59:36.046" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 09:59:36.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 09:59:36.047" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 09:59:36.043" endtime="20200630 09:59:36.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 09:59:36.048" level="INFO"></msg>
<status status="PASS" starttime="20200630 09:59:36.048" endtime="20200630 09:59:36.049"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 09:59:36.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 09:59:36.049" endtime="20200630 09:59:36.049"></status>
</kw>
<status status="PASS" starttime="20200630 09:59:36.042" endtime="20200630 09:59:36.049"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 09:59:36.052" level="INFO">Running command 'ozone sh key get o3://om:9862/60879-rpcwoport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 09:59:40.917" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 09:59:40.917" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 09:59:36.050" endtime="20200630 09:59:40.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 09:59:40.919" level="INFO"></msg>
<status status="PASS" starttime="20200630 09:59:40.918" endtime="20200630 09:59:40.919"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 09:59:40.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 09:59:40.919" endtime="20200630 09:59:40.920"></status>
</kw>
<status status="PASS" starttime="20200630 09:59:36.050" endtime="20200630 09:59:40.920"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 09:59:40.923" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 09:59:40.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 09:59:40.925" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 09:59:40.920" endtime="20200630 09:59:40.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 09:59:40.926" level="INFO"></msg>
<status status="PASS" starttime="20200630 09:59:40.925" endtime="20200630 09:59:40.926"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 09:59:40.927" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 09:59:40.926" endtime="20200630 09:59:40.927"></status>
</kw>
<status status="PASS" starttime="20200630 09:59:40.920" endtime="20200630 09:59:40.927"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 09:59:40.931" level="INFO">Running command 'ozone sh key delete o3://om:9862/60879-rpcwoport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 09:59:43.800" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 09:59:43.800" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 09:59:40.928" endtime="20200630 09:59:43.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 09:59:43.802" level="INFO"></msg>
<status status="PASS" starttime="20200630 09:59:43.801" endtime="20200630 09:59:43.802"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 09:59:43.802" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 09:59:43.802" endtime="20200630 09:59:43.803"></status>
</kw>
<status status="PASS" starttime="20200630 09:59:40.927" endtime="20200630 09:59:43.803"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 09:59:43.807" level="INFO">Running command 'ozone sh key get o3://om:9862/60879-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 09:59:46.530" level="INFO">${rc} = 255</msg>
<msg timestamp="20200630 09:59:46.531" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200630 09:59:43.804" endtime="20200630 09:59:46.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 09:59:46.532" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200630 09:59:46.531" endtime="20200630 09:59:46.532"></status>
</kw>
<msg timestamp="20200630 09:59:46.532" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200630 09:59:43.803" endtime="20200630 09:59:46.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200630 09:59:46.533" endtime="20200630 09:59:46.533"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 09:59:46.538" level="INFO">Running command 'ozone sh key get --force o3://om:9862/60879-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 09:59:51.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 09:59:51.334" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 09:59:46.534" endtime="20200630 09:59:51.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 09:59:51.335" level="INFO"></msg>
<status status="PASS" starttime="20200630 09:59:51.335" endtime="20200630 09:59:51.336"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 09:59:51.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 09:59:51.336" endtime="20200630 09:59:51.336"></status>
</kw>
<msg timestamp="20200630 09:59:51.337" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200630 09:59:46.533" endtime="20200630 09:59:51.337"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200630 09:59:51.337" endtime="20200630 09:59:51.337"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 09:59:51.341" level="INFO">Running command 'ozone sh key info o3://om:9862/60879-rpcwoport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 09:59:54.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 09:59:54.408" level="INFO">${output} = {
  "volumeName": "60879-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-30T09:59:08.190Z",
  "modificationTime": "2020-06-30T09:59:09.898Z",
  "re...</msg>
<status status="PASS" starttime="20200630 09:59:51.338" endtime="20200630 09:59:54.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 09:59:54.410" level="INFO">{
  "volumeName": "60879-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-30T09:59:08.190Z",
  "modificationTime": "2020-06-30T09:59:09.898Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104432346607714430,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200630 09:59:54.409" endtime="20200630 09:59:54.410"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 09:59:54.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 09:59:54.410" endtime="20200630 09:59:54.410"></status>
</kw>
<msg timestamp="20200630 09:59:54.411" level="INFO">${result} = {
  "volumeName": "60879-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-30T09:59:08.190Z",
  "modificationTime": "2020-06-30T09:59:09.898Z",
  "re...</msg>
<status status="PASS" starttime="20200630 09:59:51.338" endtime="20200630 09:59:54.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200630 09:59:54.411" endtime="20200630 09:59:54.411"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 09:59:54.416" level="INFO">Running command 'ozone sh key list o3://om:9862/60879-rpcwoport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 09:59:57.593" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 09:59:57.593" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200630 09:59:54.412" endtime="20200630 09:59:57.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 09:59:57.594" level="INFO">key1</msg>
<status status="PASS" starttime="20200630 09:59:57.593" endtime="20200630 09:59:57.594"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 09:59:57.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 09:59:57.594" endtime="20200630 09:59:57.595"></status>
</kw>
<msg timestamp="20200630 09:59:57.595" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200630 09:59:54.412" endtime="20200630 09:59:57.595"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200630 09:59:57.595" endtime="20200630 09:59:57.596"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 09:59:57.600" level="INFO">Running command 'ozone sh key rename o3://om:9862/60879-rpcwoport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:00:00.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:00:00.537" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 09:59:57.596" endtime="20200630 10:00:00.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:00:00.538" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:00:00.537" endtime="20200630 10:00:00.538"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:00:00.539" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:00:00.538" endtime="20200630 10:00:00.539"></status>
</kw>
<status status="PASS" starttime="20200630 09:59:57.596" endtime="20200630 10:00:00.540"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:00:00.543" level="INFO">Running command 'ozone sh key list o3://om:9862/60879-rpcwoport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:00:03.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:00:03.686" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200630 10:00:00.541" endtime="20200630 10:00:03.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:00:03.687" level="INFO">key2</msg>
<status status="PASS" starttime="20200630 10:00:03.687" endtime="20200630 10:00:03.687"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:00:03.688" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:00:03.688" endtime="20200630 10:00:03.688"></status>
</kw>
<msg timestamp="20200630 10:00:03.688" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200630 10:00:00.541" endtime="20200630 10:00:03.688"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200630 10:00:03.689" endtime="20200630 10:00:03.689"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:00:03.692" level="INFO">Running command 'ozone sh key delete o3://om:9862/60879-rpcwoport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:00:06.430" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:00:06.430" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:00:03.690" endtime="20200630 10:00:06.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:00:06.431" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:00:06.431" endtime="20200630 10:00:06.431"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:00:06.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:00:06.432" endtime="20200630 10:00:06.433"></status>
</kw>
<status status="PASS" starttime="20200630 10:00:03.689" endtime="20200630 10:00:06.433"></status>
</kw>
<status status="PASS" starttime="20200630 09:59:05.728" endtime="20200630 10:00:06.433"></status>
</kw>
<status status="PASS" starttime="20200630 09:59:05.728" endtime="20200630 10:00:06.433"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:00:06.436" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/60879-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:00:09.183" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:00:09.183" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:00:06.434" endtime="20200630 10:00:09.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:00:09.184" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:00:09.184" endtime="20200630 10:00:09.185"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:00:09.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:00:09.185" endtime="20200630 10:00:09.185"></status>
</kw>
<status status="PASS" starttime="20200630 10:00:06.433" endtime="20200630 10:00:09.186"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:00:09.189" level="INFO">Running command 'ozone sh volume delete o3://om:9862/60879-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:00:12.233" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:00:12.233" level="INFO">${output} = Volume 60879-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200630 10:00:09.186" endtime="20200630 10:00:12.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:00:12.235" level="INFO">Volume 60879-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200630 10:00:12.234" endtime="20200630 10:00:12.235"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:00:12.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:00:12.235" endtime="20200630 10:00:12.235"></status>
</kw>
<status status="PASS" starttime="20200630 10:00:09.186" endtime="20200630 10:00:12.236"></status>
</kw>
<status status="PASS" starttime="20200630 09:58:39.711" endtime="20200630 10:00:12.236"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200630 09:58:39.710" endtime="20200630 10:00:12.236" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200630 10:00:12.237" endtime="20200630 10:00:12.238"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:00:12.241" level="INFO">Running command 'ozone sh volume create o3://om:9862/60879-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:00:15.752" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:00:15.752" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:00:12.239" endtime="20200630 10:00:15.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:00:15.753" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:00:15.752" endtime="20200630 10:00:15.753"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:00:15.754" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:00:15.753" endtime="20200630 10:00:15.754"></status>
</kw>
<status status="PASS" starttime="20200630 10:00:12.238" endtime="20200630 10:00:15.754"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:00:15.757" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/60879-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:00:18.866" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:00:18.866" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200630 10:00:15.755" endtime="20200630 10:00:18.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:00:18.867" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200630 10:00:18.867" endtime="20200630 10:00:18.867"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:00:18.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:00:18.868" endtime="20200630 10:00:18.868"></status>
</kw>
<msg timestamp="20200630 10:00:18.869" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200630 10:00:15.754" endtime="20200630 10:00:18.869"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200630 10:00:18.869" endtime="20200630 10:00:18.870"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:00:18.876" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/60879-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:00:21.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:00:21.534" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200630 10:00:18.871" endtime="20200630 10:00:21.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:00:21.535" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200630 10:00:21.534" endtime="20200630 10:00:21.535"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:00:21.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:00:21.535" endtime="20200630 10:00:21.536"></status>
</kw>
<msg timestamp="20200630 10:00:21.537" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200630 10:00:18.870" endtime="20200630 10:00:21.537"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:00:21.540" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/60879-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:00:24.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:00:24.594" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 10:00:21.538" endtime="20200630 10:00:24.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:00:24.595" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200630 10:00:24.594" endtime="20200630 10:00:24.595"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:00:24.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:00:24.595" endtime="20200630 10:00:24.596"></status>
</kw>
<msg timestamp="20200630 10:00:24.596" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 10:00:21.537" endtime="20200630 10:00:24.596"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200630 10:00:24.596" endtime="20200630 10:00:24.597"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:00:24.600" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/60879-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:00:27.184" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:00:27.185" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200630 10:00:24.598" endtime="20200630 10:00:27.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:00:27.186" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200630 10:00:27.186" endtime="20200630 10:00:27.187"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:00:27.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:00:27.187" endtime="20200630 10:00:27.187"></status>
</kw>
<msg timestamp="20200630 10:00:27.188" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200630 10:00:24.597" endtime="20200630 10:00:27.188"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:00:27.191" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/60879-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:00:30.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:00:30.208" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 10:00:27.189" endtime="20200630 10:00:30.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:00:30.210" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200630 10:00:30.209" endtime="20200630 10:00:30.210"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:00:30.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:00:30.210" endtime="20200630 10:00:30.210"></status>
</kw>
<msg timestamp="20200630 10:00:30.211" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 10:00:27.188" endtime="20200630 10:00:30.211"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200630 10:00:30.211" endtime="20200630 10:00:30.212"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:00:30.215" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/60879-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:00:32.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:00:32.919" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200630 10:00:30.213" endtime="20200630 10:00:32.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:00:32.920" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200630 10:00:32.919" endtime="20200630 10:00:32.920"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:00:32.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:00:32.920" endtime="20200630 10:00:32.921"></status>
</kw>
<msg timestamp="20200630 10:00:32.921" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200630 10:00:30.212" endtime="20200630 10:00:32.921"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:00:32.924" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/60879-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:00:35.933" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:00:35.933" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200630 10:00:32.922" endtime="20200630 10:00:35.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:00:35.935" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200630 10:00:35.934" endtime="20200630 10:00:35.935"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:00:35.935" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:00:35.935" endtime="20200630 10:00:35.935"></status>
</kw>
<msg timestamp="20200630 10:00:35.935" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200630 10:00:32.921" endtime="20200630 10:00:35.936"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200630 10:00:35.936" endtime="20200630 10:00:35.936"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200630 10:00:35.937" endtime="20200630 10:00:35.938"></status>
</kw>
<status status="PASS" starttime="20200630 10:00:12.238" endtime="20200630 10:00:35.939"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200630 10:00:12.236" endtime="20200630 10:00:35.939" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200630 10:00:35.940" endtime="20200630 10:00:35.941"></status>
</kw>
<kw name="Test Bucket Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:00:35.945" level="INFO">Running command 'ozone sh bucket create o3://om:9862/60879-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:00:38.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:00:38.668" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:00:35.943" endtime="20200630 10:00:38.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:00:38.669" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:00:38.668" endtime="20200630 10:00:38.669"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:00:38.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:00:38.669" endtime="20200630 10:00:38.669"></status>
</kw>
<status status="PASS" starttime="20200630 10:00:35.942" endtime="20200630 10:00:38.670"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:00:38.672" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/60879-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:00:41.671" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:00:41.671" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 10:00:38.670" endtime="20200630 10:00:41.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:00:41.672" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200630 10:00:41.671" endtime="20200630 10:00:41.672"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:00:41.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:00:41.673" endtime="20200630 10:00:41.673"></status>
</kw>
<msg timestamp="20200630 10:00:41.674" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 10:00:38.670" endtime="20200630 10:00:41.674"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200630 10:00:41.674" endtime="20200630 10:00:41.674"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:00:41.677" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/60879-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:00:44.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:00:44.431" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200630 10:00:41.675" endtime="20200630 10:00:44.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:00:44.432" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200630 10:00:44.431" endtime="20200630 10:00:44.432"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:00:44.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:00:44.432" endtime="20200630 10:00:44.433"></status>
</kw>
<msg timestamp="20200630 10:00:44.433" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200630 10:00:41.675" endtime="20200630 10:00:44.433"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:00:44.436" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/60879-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:00:47.601" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:00:47.601" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 10:00:44.434" endtime="20200630 10:00:47.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:00:47.602" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200630 10:00:47.601" endtime="20200630 10:00:47.602"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:00:47.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:00:47.602" endtime="20200630 10:00:47.603"></status>
</kw>
<msg timestamp="20200630 10:00:47.603" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 10:00:44.433" endtime="20200630 10:00:47.603"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200630 10:00:47.604" endtime="20200630 10:00:47.605"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:00:47.608" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/60879-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:00:50.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:00:50.240" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200630 10:00:47.606" endtime="20200630 10:00:50.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:00:50.242" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200630 10:00:50.241" endtime="20200630 10:00:50.242"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:00:50.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:00:50.242" endtime="20200630 10:00:50.243"></status>
</kw>
<msg timestamp="20200630 10:00:50.243" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200630 10:00:47.605" endtime="20200630 10:00:50.243"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:00:50.248" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/60879-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:00:53.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:00:53.249" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 10:00:50.244" endtime="20200630 10:00:53.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:00:53.250" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200630 10:00:53.249" endtime="20200630 10:00:53.250"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:00:53.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:00:53.250" endtime="20200630 10:00:53.251"></status>
</kw>
<msg timestamp="20200630 10:00:53.251" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 10:00:50.244" endtime="20200630 10:00:53.251"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200630 10:00:53.251" endtime="20200630 10:00:53.252"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:00:53.255" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/60879-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:00:56.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:00:56.015" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200630 10:00:53.253" endtime="20200630 10:00:56.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:00:56.016" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200630 10:00:56.015" endtime="20200630 10:00:56.016"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:00:56.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:00:56.016" endtime="20200630 10:00:56.017"></status>
</kw>
<msg timestamp="20200630 10:00:56.017" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200630 10:00:53.253" endtime="20200630 10:00:56.017"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:00:56.021" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/60879-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:00:59.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:00:59.104" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200630 10:00:56.018" endtime="20200630 10:00:59.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:00:59.105" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200630 10:00:59.104" endtime="20200630 10:00:59.106"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:00:59.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:00:59.106" endtime="20200630 10:00:59.106"></status>
</kw>
<msg timestamp="20200630 10:00:59.107" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200630 10:00:56.017" endtime="20200630 10:00:59.107"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200630 10:00:59.107" endtime="20200630 10:00:59.107"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200630 10:00:59.108" endtime="20200630 10:00:59.108"></status>
</kw>
<status status="PASS" starttime="20200630 10:00:35.941" endtime="20200630 10:00:59.109"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200630 10:00:35.940" endtime="20200630 10:00:59.109" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200630 10:00:59.110" endtime="20200630 10:00:59.111"></status>
</kw>
<kw name="Test key Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:00:59.116" level="INFO">Running command 'ozone sh key put o3://om:9862/60879-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:01:04.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:01:04.221" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:00:59.112" endtime="20200630 10:01:04.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:01:04.223" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:01:04.222" endtime="20200630 10:01:04.223"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:01:04.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:01:04.223" endtime="20200630 10:01:04.223"></status>
</kw>
<status status="PASS" starttime="20200630 10:00:59.111" endtime="20200630 10:01:04.224"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:01:04.226" level="INFO">Running command 'ozone sh key getacl o3://om:9862/60879-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:01:07.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:01:07.133" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 10:01:04.224" endtime="20200630 10:01:07.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:01:07.134" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200630 10:01:07.133" endtime="20200630 10:01:07.134"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:01:07.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:01:07.134" endtime="20200630 10:01:07.135"></status>
</kw>
<msg timestamp="20200630 10:01:07.135" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 10:01:04.224" endtime="20200630 10:01:07.135"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200630 10:01:07.135" endtime="20200630 10:01:07.136"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:01:07.139" level="INFO">Running command 'ozone sh key addacl o3://om:9862/60879-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:01:09.917" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:01:09.917" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200630 10:01:07.136" endtime="20200630 10:01:09.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:01:09.918" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200630 10:01:09.917" endtime="20200630 10:01:09.918"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:01:09.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:01:09.918" endtime="20200630 10:01:09.919"></status>
</kw>
<msg timestamp="20200630 10:01:09.919" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200630 10:01:07.136" endtime="20200630 10:01:09.919"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:01:09.923" level="INFO">Running command 'ozone sh key getacl o3://om:9862/60879-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:01:12.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:01:12.981" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 10:01:09.920" endtime="20200630 10:01:12.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:01:12.983" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200630 10:01:12.982" endtime="20200630 10:01:12.983"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:01:12.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:01:12.983" endtime="20200630 10:01:12.983"></status>
</kw>
<msg timestamp="20200630 10:01:12.984" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 10:01:09.919" endtime="20200630 10:01:12.984"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200630 10:01:12.984" endtime="20200630 10:01:12.985"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:01:12.989" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/60879-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:01:15.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:01:15.691" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200630 10:01:12.986" endtime="20200630 10:01:15.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:01:15.692" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200630 10:01:15.692" endtime="20200630 10:01:15.692"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:01:15.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:01:15.693" endtime="20200630 10:01:15.693"></status>
</kw>
<msg timestamp="20200630 10:01:15.693" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200630 10:01:12.985" endtime="20200630 10:01:15.693"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:01:15.697" level="INFO">Running command 'ozone sh key getacl o3://om:9862/60879-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:01:18.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:01:18.604" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 10:01:15.694" endtime="20200630 10:01:18.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:01:18.605" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20200630 10:01:18.605" endtime="20200630 10:01:18.605"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:01:18.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:01:18.606" endtime="20200630 10:01:18.606"></status>
</kw>
<msg timestamp="20200630 10:01:18.607" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 10:01:15.694" endtime="20200630 10:01:18.607"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200630 10:01:18.607" endtime="20200630 10:01:18.607"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:01:18.615" level="INFO">Running command 'ozone sh key setacl o3://om:9862/60879-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:01:21.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:01:21.200" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200630 10:01:18.608" endtime="20200630 10:01:21.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:01:21.201" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200630 10:01:21.200" endtime="20200630 10:01:21.201"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:01:21.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:01:21.201" endtime="20200630 10:01:21.202"></status>
</kw>
<msg timestamp="20200630 10:01:21.202" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200630 10:01:18.608" endtime="20200630 10:01:21.202"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:01:21.205" level="INFO">Running command 'ozone sh key getacl o3://om:9862/60879-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:01:24.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:01:24.194" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200630 10:01:21.203" endtime="20200630 10:01:24.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:01:24.195" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200630 10:01:24.194" endtime="20200630 10:01:24.195"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:01:24.195" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:01:24.195" endtime="20200630 10:01:24.196"></status>
</kw>
<msg timestamp="20200630 10:01:24.196" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200630 10:01:21.202" endtime="20200630 10:01:24.196"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200630 10:01:24.196" endtime="20200630 10:01:24.197"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200630 10:01:24.197" endtime="20200630 10:01:24.198"></status>
</kw>
<status status="PASS" starttime="20200630 10:00:59.111" endtime="20200630 10:01:24.198"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200630 10:00:59.110" endtime="20200630 10:01:24.198" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200630 10:01:24.200" endtime="20200630 10:01:24.200"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:01:24.205" level="INFO">Running command 'ozone sh volume info o3:///60879-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:01:26.825" level="INFO">${rc} = 255</msg>
<msg timestamp="20200630 10:01:26.825" level="INFO">${output} = VOLUME_NOT_FOUND Volume 60879-rpcwport is not found</msg>
<status status="PASS" starttime="20200630 10:01:24.201" endtime="20200630 10:01:26.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:01:26.826" level="INFO">VOLUME_NOT_FOUND Volume 60879-rpcwport is not found</msg>
<status status="PASS" starttime="20200630 10:01:26.825" endtime="20200630 10:01:26.826"></status>
</kw>
<msg timestamp="20200630 10:01:26.826" level="INFO">${result} = VOLUME_NOT_FOUND Volume 60879-rpcwport is not found</msg>
<status status="PASS" starttime="20200630 10:01:24.201" endtime="20200630 10:01:26.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200630 10:01:26.827" endtime="20200630 10:01:26.827"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:01:26.830" level="INFO">Running command 'ozone sh volume create o3:///60879-rpcwport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:01:29.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:01:29.724" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:01:26.828" endtime="20200630 10:01:29.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:01:29.725" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:01:29.724" endtime="20200630 10:01:29.725"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:01:29.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:01:29.725" endtime="20200630 10:01:29.726"></status>
</kw>
<msg timestamp="20200630 10:01:29.726" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200630 10:01:26.827" endtime="20200630 10:01:29.726"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200630 10:01:29.726" endtime="20200630 10:01:29.727"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:01:29.731" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="60879-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:01:32.582" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:01:32.582" level="INFO">${output} = {
  "metadata": {},
  "name": "60879-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T10:01:29.382Z",
  "modificationTime": "2020-06-30T10:01:29.382Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200630 10:01:29.727" endtime="20200630 10:01:32.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:01:32.583" level="INFO">{
  "metadata": {},
  "name": "60879-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T10:01:29.382Z",
  "modificationTime": "2020-06-30T10:01:29.382Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200630 10:01:32.582" endtime="20200630 10:01:32.583"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:01:32.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:01:32.583" endtime="20200630 10:01:32.584"></status>
</kw>
<msg timestamp="20200630 10:01:32.584" level="INFO">${result} = {
  "metadata": {},
  "name": "60879-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T10:01:29.382Z",
  "modificationTime": "2020-06-30T10:01:29.382Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200630 10:01:29.727" endtime="20200630 10:01:32.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200630 10:01:32.584" endtime="20200630 10:01:32.585"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:01:32.589" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="60879-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:01:35.542" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:01:35.542" level="INFO">${output} = {
  "metadata": {},
  "name": "60879-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T10:01:29.382Z",
  "modificationTime": "2020-06-30T10:01:29.382Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200630 10:01:32.585" endtime="20200630 10:01:35.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:01:35.544" level="INFO">{
  "metadata": {},
  "name": "60879-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T10:01:29.382Z",
  "modificationTime": "2020-06-30T10:01:29.382Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200630 10:01:35.543" endtime="20200630 10:01:35.544"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:01:35.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:01:35.544" endtime="20200630 10:01:35.545"></status>
</kw>
<msg timestamp="20200630 10:01:35.545" level="INFO">${result} = {
  "metadata": {},
  "name": "60879-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T10:01:29.382Z",
  "modificationTime": "2020-06-30T10:01:29.382Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200630 10:01:32.585" endtime="20200630 10:01:35.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200630 10:01:35.545" endtime="20200630 10:01:35.546"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:01:35.548" level="INFO">Running command 'ozone sh volume update o3:///60879-rpcwport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:01:38.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:01:38.472" level="INFO">${output} = {
  "metadata" : { },
  "name" : "60879-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-30T10:01:29.382Z",
  "modificationTime" : "2020-06-30T10:01:38.117Z",
  "acls...</msg>
<status status="PASS" starttime="20200630 10:01:35.546" endtime="20200630 10:01:38.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:01:38.474" level="INFO">{
  "metadata" : { },
  "name" : "60879-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-30T10:01:29.382Z",
  "modificationTime" : "2020-06-30T10:01:38.117Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200630 10:01:38.473" endtime="20200630 10:01:38.474"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:01:38.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:01:38.474" endtime="20200630 10:01:38.474"></status>
</kw>
<status status="PASS" starttime="20200630 10:01:35.546" endtime="20200630 10:01:38.475"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:01:38.478" level="INFO">Running command 'ozone sh volume info o3:///60879-rpcwport | jq -r '. | select(.name=="60879-rpcwport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:01:41.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:01:41.541" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200630 10:01:38.476" endtime="20200630 10:01:41.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:01:41.542" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200630 10:01:41.542" endtime="20200630 10:01:41.542"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:01:41.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:01:41.542" endtime="20200630 10:01:41.543"></status>
</kw>
<msg timestamp="20200630 10:01:41.543" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200630 10:01:38.475" endtime="20200630 10:01:41.543"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200630 10:01:41.543" endtime="20200630 10:01:41.544"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:01:41.546" level="INFO">Running command 'ozone sh bucket create o3:///60879-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:01:44.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:01:44.091" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:01:41.545" endtime="20200630 10:01:44.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:01:44.092" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:01:44.091" endtime="20200630 10:01:44.092"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:01:44.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:01:44.092" endtime="20200630 10:01:44.093"></status>
</kw>
<status status="PASS" starttime="20200630 10:01:41.544" endtime="20200630 10:01:44.093"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:01:44.096" level="INFO">Running command 'ozone sh bucket info o3:///60879-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:01:47.159" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:01:47.159" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200630 10:01:44.094" endtime="20200630 10:01:47.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:01:47.161" level="INFO">DISK</msg>
<status status="PASS" starttime="20200630 10:01:47.160" endtime="20200630 10:01:47.161"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:01:47.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:01:47.161" endtime="20200630 10:01:47.161"></status>
</kw>
<msg timestamp="20200630 10:01:47.162" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200630 10:01:44.093" endtime="20200630 10:01:47.162"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200630 10:01:47.162" endtime="20200630 10:01:47.162"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:01:47.167" level="INFO">Running command 'ozone sh bucket list o3:///60879-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:01:50.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:01:50.580" level="INFO">${output} = 60879-rpcwport</msg>
<status status="PASS" starttime="20200630 10:01:47.163" endtime="20200630 10:01:50.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:01:50.581" level="INFO">60879-rpcwport</msg>
<status status="PASS" starttime="20200630 10:01:50.580" endtime="20200630 10:01:50.581"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:01:50.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:01:50.581" endtime="20200630 10:01:50.582"></status>
</kw>
<msg timestamp="20200630 10:01:50.582" level="INFO">${result} = 60879-rpcwport</msg>
<status status="PASS" starttime="20200630 10:01:47.162" endtime="20200630 10:01:50.582"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200630 10:01:50.582" endtime="20200630 10:01:50.583"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:01:50.587" level="INFO">Running command 'ozone sh key put o3:///60879-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:01:55.263" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:01:55.264" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:01:50.584" endtime="20200630 10:01:55.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:01:55.265" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:01:55.264" endtime="20200630 10:01:55.265"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:01:55.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:01:55.265" endtime="20200630 10:01:55.266"></status>
</kw>
<status status="PASS" starttime="20200630 10:01:50.584" endtime="20200630 10:01:55.266"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:01:55.270" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:01:55.271" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:01:55.271" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:01:55.267" endtime="20200630 10:01:55.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:01:55.273" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:01:55.272" endtime="20200630 10:01:55.273"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:01:55.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:01:55.273" endtime="20200630 10:01:55.274"></status>
</kw>
<status status="PASS" starttime="20200630 10:01:55.266" endtime="20200630 10:01:55.274"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:01:55.276" level="INFO">Running command 'ozone sh key get o3:///60879-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:01:59.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:01:59.840" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:01:55.274" endtime="20200630 10:01:59.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:01:59.841" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:01:59.841" endtime="20200630 10:01:59.841"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:01:59.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:01:59.842" endtime="20200630 10:01:59.842"></status>
</kw>
<status status="PASS" starttime="20200630 10:01:55.274" endtime="20200630 10:01:59.842"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:01:59.845" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:01:59.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:01:59.847" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:01:59.843" endtime="20200630 10:01:59.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:01:59.848" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:01:59.848" endtime="20200630 10:01:59.848"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:01:59.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:01:59.849" endtime="20200630 10:01:59.849"></status>
</kw>
<status status="PASS" starttime="20200630 10:01:59.842" endtime="20200630 10:01:59.850"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:01:59.853" level="INFO">Running command 'ozone sh key put -t RATIS o3:///60879-rpcwport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:02:04.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:02:04.763" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:01:59.850" endtime="20200630 10:02:04.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:02:04.764" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:02:04.763" endtime="20200630 10:02:04.764"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:02:04.765" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:02:04.765" endtime="20200630 10:02:04.765"></status>
</kw>
<status status="PASS" starttime="20200630 10:01:59.850" endtime="20200630 10:02:04.765"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:02:04.769" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:02:04.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:02:04.771" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:02:04.766" endtime="20200630 10:02:04.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:02:04.772" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:02:04.771" endtime="20200630 10:02:04.772"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:02:04.773" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:02:04.772" endtime="20200630 10:02:04.773"></status>
</kw>
<status status="PASS" starttime="20200630 10:02:04.765" endtime="20200630 10:02:04.773"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:02:04.777" level="INFO">Running command 'ozone sh key get o3:///60879-rpcwport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:02:09.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:02:09.315" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:02:04.774" endtime="20200630 10:02:09.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:02:09.316" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:02:09.315" endtime="20200630 10:02:09.316"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:02:09.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:02:09.316" endtime="20200630 10:02:09.317"></status>
</kw>
<status status="PASS" starttime="20200630 10:02:04.773" endtime="20200630 10:02:09.317"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:02:09.321" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:02:09.322" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:02:09.322" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:02:09.318" endtime="20200630 10:02:09.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:02:09.323" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:02:09.323" endtime="20200630 10:02:09.323"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:02:09.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:02:09.323" endtime="20200630 10:02:09.324"></status>
</kw>
<status status="PASS" starttime="20200630 10:02:09.317" endtime="20200630 10:02:09.324"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:02:09.328" level="INFO">Running command 'ozone sh key info o3:///60879-rpcwport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:02:12.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:02:12.394" level="INFO">${output} = {
  "volumeName": "60879-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-30T10:02:02.528Z",
  "modificationTime": "2020-06-30T10:02:04.364Z",
...</msg>
<status status="PASS" starttime="20200630 10:02:09.325" endtime="20200630 10:02:12.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:02:12.395" level="INFO">{
  "volumeName": "60879-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-30T10:02:02.528Z",
  "modificationTime": "2020-06-30T10:02:04.364Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104432358033064060,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200630 10:02:12.394" endtime="20200630 10:02:12.395"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:02:12.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:02:12.395" endtime="20200630 10:02:12.396"></status>
</kw>
<msg timestamp="20200630 10:02:12.396" level="INFO">${result} = {
  "volumeName": "60879-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-30T10:02:02.528Z",
  "modificationTime": "2020-06-30T10:02:04.364Z",
...</msg>
<status status="PASS" starttime="20200630 10:02:09.324" endtime="20200630 10:02:12.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200630 10:02:12.396" endtime="20200630 10:02:12.397"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:02:12.399" level="INFO">Running command 'ozone sh key delete o3:///60879-rpcwport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:02:15.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:02:15.362" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:02:12.397" endtime="20200630 10:02:15.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:02:15.363" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:02:15.363" endtime="20200630 10:02:15.364"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:02:15.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:02:15.364" endtime="20200630 10:02:15.364"></status>
</kw>
<status status="PASS" starttime="20200630 10:02:12.397" endtime="20200630 10:02:15.365"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:02:15.369" level="INFO">Running command 'ozone sh key cp o3:///60879-rpcwport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:02:20.399" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:02:20.399" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:02:15.365" endtime="20200630 10:02:20.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:02:20.400" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:02:20.400" endtime="20200630 10:02:20.400"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:02:20.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:02:20.401" endtime="20200630 10:02:20.401"></status>
</kw>
<status status="PASS" starttime="20200630 10:02:15.365" endtime="20200630 10:02:20.401"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:02:20.404" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:02:20.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:02:20.406" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:02:20.402" endtime="20200630 10:02:20.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:02:20.407" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:02:20.407" endtime="20200630 10:02:20.407"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:02:20.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:02:20.407" endtime="20200630 10:02:20.408"></status>
</kw>
<status status="PASS" starttime="20200630 10:02:20.402" endtime="20200630 10:02:20.408"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:02:20.410" level="INFO">Running command 'ozone sh key get o3:///60879-rpcwport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:02:25.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:02:25.091" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:02:20.409" endtime="20200630 10:02:25.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:02:25.092" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:02:25.091" endtime="20200630 10:02:25.092"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:02:25.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:02:25.092" endtime="20200630 10:02:25.093"></status>
</kw>
<status status="PASS" starttime="20200630 10:02:20.408" endtime="20200630 10:02:25.093"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:02:25.096" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:02:25.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:02:25.098" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:02:25.094" endtime="20200630 10:02:25.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:02:25.099" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:02:25.099" endtime="20200630 10:02:25.099"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:02:25.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:02:25.099" endtime="20200630 10:02:25.100"></status>
</kw>
<status status="PASS" starttime="20200630 10:02:25.093" endtime="20200630 10:02:25.100"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:02:25.103" level="INFO">Running command 'ozone sh key delete o3:///60879-rpcwport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:02:28.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:02:28.024" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:02:25.101" endtime="20200630 10:02:28.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:02:28.025" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:02:28.024" endtime="20200630 10:02:28.025"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:02:28.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:02:28.025" endtime="20200630 10:02:28.026"></status>
</kw>
<status status="PASS" starttime="20200630 10:02:25.100" endtime="20200630 10:02:28.026"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:02:28.029" level="INFO">Running command 'ozone sh key get o3:///60879-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:02:30.816" level="INFO">${rc} = 255</msg>
<msg timestamp="20200630 10:02:30.816" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200630 10:02:28.027" endtime="20200630 10:02:30.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:02:30.819" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200630 10:02:30.816" endtime="20200630 10:02:30.820"></status>
</kw>
<msg timestamp="20200630 10:02:30.820" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200630 10:02:28.026" endtime="20200630 10:02:30.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200630 10:02:30.820" endtime="20200630 10:02:30.821"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:02:30.824" level="INFO">Running command 'ozone sh key get --force o3:///60879-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:02:35.407" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:02:35.407" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:02:30.821" endtime="20200630 10:02:35.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:02:35.408" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:02:35.407" endtime="20200630 10:02:35.408"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:02:35.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:02:35.409" endtime="20200630 10:02:35.409"></status>
</kw>
<msg timestamp="20200630 10:02:35.409" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200630 10:02:30.821" endtime="20200630 10:02:35.409"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200630 10:02:35.410" endtime="20200630 10:02:35.410"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:02:35.413" level="INFO">Running command 'ozone sh key info o3:///60879-rpcwport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:02:38.300" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:02:38.300" level="INFO">${output} = {
  "volumeName": "60879-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-30T10:01:53.225Z",
  "modificationTime": "2020-06-30T10:01:54.876Z",
  "rep...</msg>
<status status="PASS" starttime="20200630 10:02:35.411" endtime="20200630 10:02:38.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:02:38.302" level="INFO">{
  "volumeName": "60879-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-30T10:01:53.225Z",
  "modificationTime": "2020-06-30T10:01:54.876Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104432357423448200,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200630 10:02:38.301" endtime="20200630 10:02:38.302"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:02:38.302" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:02:38.302" endtime="20200630 10:02:38.302"></status>
</kw>
<msg timestamp="20200630 10:02:38.303" level="INFO">${result} = {
  "volumeName": "60879-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-30T10:01:53.225Z",
  "modificationTime": "2020-06-30T10:01:54.876Z",
  "rep...</msg>
<status status="PASS" starttime="20200630 10:02:35.410" endtime="20200630 10:02:38.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200630 10:02:38.303" endtime="20200630 10:02:38.303"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:02:38.307" level="INFO">Running command 'ozone sh key list o3:///60879-rpcwport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:02:41.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:02:41.394" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200630 10:02:38.304" endtime="20200630 10:02:41.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:02:41.395" level="INFO">key1</msg>
<status status="PASS" starttime="20200630 10:02:41.395" endtime="20200630 10:02:41.396"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:02:41.396" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:02:41.396" endtime="20200630 10:02:41.396"></status>
</kw>
<msg timestamp="20200630 10:02:41.397" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200630 10:02:38.304" endtime="20200630 10:02:41.397"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200630 10:02:41.397" endtime="20200630 10:02:41.397"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:02:41.400" level="INFO">Running command 'ozone sh key rename o3:///60879-rpcwport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:02:44.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:02:44.245" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:02:41.398" endtime="20200630 10:02:44.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:02:44.246" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:02:44.246" endtime="20200630 10:02:44.247"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:02:44.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:02:44.247" endtime="20200630 10:02:44.247"></status>
</kw>
<status status="PASS" starttime="20200630 10:02:41.397" endtime="20200630 10:02:44.248"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:02:44.251" level="INFO">Running command 'ozone sh key list o3:///60879-rpcwport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:02:47.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:02:47.327" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200630 10:02:44.249" endtime="20200630 10:02:47.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:02:47.329" level="INFO">key2</msg>
<status status="PASS" starttime="20200630 10:02:47.328" endtime="20200630 10:02:47.329"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:02:47.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:02:47.329" endtime="20200630 10:02:47.330"></status>
</kw>
<msg timestamp="20200630 10:02:47.330" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200630 10:02:44.248" endtime="20200630 10:02:47.330"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200630 10:02:47.330" endtime="20200630 10:02:47.331"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:02:47.334" level="INFO">Running command 'ozone sh key delete o3:///60879-rpcwport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:02:50.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:02:50.071" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:02:47.331" endtime="20200630 10:02:50.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:02:50.072" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:02:50.071" endtime="20200630 10:02:50.072"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:02:50.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:02:50.072" endtime="20200630 10:02:50.073"></status>
</kw>
<status status="PASS" starttime="20200630 10:02:47.331" endtime="20200630 10:02:50.073"></status>
</kw>
<status status="PASS" starttime="20200630 10:01:50.583" endtime="20200630 10:02:50.073"></status>
</kw>
<status status="PASS" starttime="20200630 10:01:50.583" endtime="20200630 10:02:50.073"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:02:50.077" level="INFO">Running command 'ozone sh bucket delete o3:///60879-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:02:52.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:02:52.666" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:02:50.074" endtime="20200630 10:02:52.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:02:52.667" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:02:52.666" endtime="20200630 10:02:52.667"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:02:52.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:02:52.668" endtime="20200630 10:02:52.668"></status>
</kw>
<status status="PASS" starttime="20200630 10:02:50.074" endtime="20200630 10:02:52.669"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:02:52.673" level="INFO">Running command 'ozone sh volume delete o3:///60879-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:02:55.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:02:55.318" level="INFO">${output} = Volume 60879-rpcwport is deleted</msg>
<status status="PASS" starttime="20200630 10:02:52.670" endtime="20200630 10:02:55.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:02:55.319" level="INFO">Volume 60879-rpcwport is deleted</msg>
<status status="PASS" starttime="20200630 10:02:55.318" endtime="20200630 10:02:55.319"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:02:55.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:02:55.319" endtime="20200630 10:02:55.320"></status>
</kw>
<status status="PASS" starttime="20200630 10:02:52.669" endtime="20200630 10:02:55.320"></status>
</kw>
<status status="PASS" starttime="20200630 10:01:24.200" endtime="20200630 10:02:55.320"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200630 10:01:24.199" endtime="20200630 10:02:55.321" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200630 10:02:55.322" endtime="20200630 10:02:55.323"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:02:55.326" level="INFO">Running command 'ozone sh volume info /60879-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:02:58.056" level="INFO">${rc} = 255</msg>
<msg timestamp="20200630 10:02:58.056" level="INFO">${output} = VOLUME_NOT_FOUND Volume 60879-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200630 10:02:55.324" endtime="20200630 10:02:58.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:02:58.058" level="INFO">VOLUME_NOT_FOUND Volume 60879-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200630 10:02:58.057" endtime="20200630 10:02:58.058"></status>
</kw>
<msg timestamp="20200630 10:02:58.058" level="INFO">${result} = VOLUME_NOT_FOUND Volume 60879-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200630 10:02:55.324" endtime="20200630 10:02:58.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200630 10:02:58.058" endtime="20200630 10:02:58.059"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:02:58.062" level="INFO">Running command 'ozone sh volume create /60879-rpcwoscheme --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:03:00.634" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:03:00.634" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:02:58.060" endtime="20200630 10:03:00.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:03:00.635" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:03:00.634" endtime="20200630 10:03:00.635"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:03:00.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:03:00.635" endtime="20200630 10:03:00.636"></status>
</kw>
<msg timestamp="20200630 10:03:00.636" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200630 10:02:58.059" endtime="20200630 10:03:00.636"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200630 10:03:00.636" endtime="20200630 10:03:00.637"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:03:00.640" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="60879-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:03:03.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:03:03.857" level="INFO">${output} = {
  "metadata": {},
  "name": "60879-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T10:03:00.533Z",
  "modificationTime": "2020-06-30T10:03:00.533Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200630 10:03:00.638" endtime="20200630 10:03:03.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:03:03.858" level="INFO">{
  "metadata": {},
  "name": "60879-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T10:03:00.533Z",
  "modificationTime": "2020-06-30T10:03:00.533Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200630 10:03:03.857" endtime="20200630 10:03:03.858"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:03:03.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:03:03.858" endtime="20200630 10:03:03.859"></status>
</kw>
<msg timestamp="20200630 10:03:03.859" level="INFO">${result} = {
  "metadata": {},
  "name": "60879-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T10:03:00.533Z",
  "modificationTime": "2020-06-30T10:03:00.533Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200630 10:03:00.637" endtime="20200630 10:03:03.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200630 10:03:03.860" endtime="20200630 10:03:03.860"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:03:03.863" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="60879-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:03:07.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:03:07.004" level="INFO">${output} = {
  "metadata": {},
  "name": "60879-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T10:03:00.533Z",
  "modificationTime": "2020-06-30T10:03:00.533Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200630 10:03:03.861" endtime="20200630 10:03:07.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:03:07.005" level="INFO">{
  "metadata": {},
  "name": "60879-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T10:03:00.533Z",
  "modificationTime": "2020-06-30T10:03:00.533Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200630 10:03:07.004" endtime="20200630 10:03:07.005"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:03:07.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:03:07.005" endtime="20200630 10:03:07.006"></status>
</kw>
<msg timestamp="20200630 10:03:07.006" level="INFO">${result} = {
  "metadata": {},
  "name": "60879-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T10:03:00.533Z",
  "modificationTime": "2020-06-30T10:03:00.533Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200630 10:03:03.860" endtime="20200630 10:03:07.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200630 10:03:07.006" endtime="20200630 10:03:07.007"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:03:07.010" level="INFO">Running command 'ozone sh volume update /60879-rpcwoscheme --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:03:09.912" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:03:09.912" level="INFO">${output} = {
  "metadata" : { },
  "name" : "60879-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-30T10:03:00.533Z",
  "modificationTime" : "2020-06-30T10:03:09.487Z",
  "a...</msg>
<status status="PASS" starttime="20200630 10:03:07.007" endtime="20200630 10:03:09.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:03:09.913" level="INFO">{
  "metadata" : { },
  "name" : "60879-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-30T10:03:00.533Z",
  "modificationTime" : "2020-06-30T10:03:09.487Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200630 10:03:09.912" endtime="20200630 10:03:09.914"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:03:09.914" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:03:09.914" endtime="20200630 10:03:09.914"></status>
</kw>
<status status="PASS" starttime="20200630 10:03:07.007" endtime="20200630 10:03:09.914"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:03:09.917" level="INFO">Running command 'ozone sh volume info /60879-rpcwoscheme | jq -r '. | select(.name=="60879-rpcwoscheme") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:03:12.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:03:12.942" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200630 10:03:09.915" endtime="20200630 10:03:12.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:03:12.943" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200630 10:03:12.942" endtime="20200630 10:03:12.943"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:03:12.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:03:12.944" endtime="20200630 10:03:12.944"></status>
</kw>
<msg timestamp="20200630 10:03:12.944" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200630 10:03:09.915" endtime="20200630 10:03:12.945"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200630 10:03:12.945" endtime="20200630 10:03:12.945"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:03:12.948" level="INFO">Running command 'ozone sh bucket create /60879-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:03:15.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:03:15.650" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:03:12.946" endtime="20200630 10:03:15.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:03:15.652" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:03:15.651" endtime="20200630 10:03:15.652"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:03:15.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:03:15.652" endtime="20200630 10:03:15.652"></status>
</kw>
<status status="PASS" starttime="20200630 10:03:12.945" endtime="20200630 10:03:15.653"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:03:15.655" level="INFO">Running command 'ozone sh bucket info /60879-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:03:18.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:03:18.702" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200630 10:03:15.654" endtime="20200630 10:03:18.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:03:18.703" level="INFO">DISK</msg>
<status status="PASS" starttime="20200630 10:03:18.702" endtime="20200630 10:03:18.704"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:03:18.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:03:18.704" endtime="20200630 10:03:18.704"></status>
</kw>
<msg timestamp="20200630 10:03:18.704" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200630 10:03:15.653" endtime="20200630 10:03:18.705"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200630 10:03:18.705" endtime="20200630 10:03:18.705"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:03:18.710" level="INFO">Running command 'ozone sh bucket list /60879-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:03:21.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:03:21.675" level="INFO">${output} = 60879-rpcwoscheme</msg>
<status status="PASS" starttime="20200630 10:03:18.706" endtime="20200630 10:03:21.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:03:21.676" level="INFO">60879-rpcwoscheme</msg>
<status status="PASS" starttime="20200630 10:03:21.675" endtime="20200630 10:03:21.676"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:03:21.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:03:21.677" endtime="20200630 10:03:21.677"></status>
</kw>
<msg timestamp="20200630 10:03:21.677" level="INFO">${result} = 60879-rpcwoscheme</msg>
<status status="PASS" starttime="20200630 10:03:18.705" endtime="20200630 10:03:21.677"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200630 10:03:21.678" endtime="20200630 10:03:21.678"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:03:21.683" level="INFO">Running command 'ozone sh key put /60879-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:03:26.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:03:26.370" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:03:21.680" endtime="20200630 10:03:26.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:03:26.371" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:03:26.370" endtime="20200630 10:03:26.371"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:03:26.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:03:26.371" endtime="20200630 10:03:26.372"></status>
</kw>
<status status="PASS" starttime="20200630 10:03:21.679" endtime="20200630 10:03:26.372"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:03:26.375" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:03:26.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:03:26.377" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:03:26.372" endtime="20200630 10:03:26.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:03:26.378" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:03:26.378" endtime="20200630 10:03:26.378"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:03:26.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:03:26.379" endtime="20200630 10:03:26.379"></status>
</kw>
<status status="PASS" starttime="20200630 10:03:26.372" endtime="20200630 10:03:26.379"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:03:26.383" level="INFO">Running command 'ozone sh key get /60879-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:03:31.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:03:31.067" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:03:26.380" endtime="20200630 10:03:31.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:03:31.068" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:03:31.067" endtime="20200630 10:03:31.068"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:03:31.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:03:31.068" endtime="20200630 10:03:31.069"></status>
</kw>
<status status="PASS" starttime="20200630 10:03:26.379" endtime="20200630 10:03:31.069"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:03:31.072" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:03:31.074" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:03:31.074" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:03:31.070" endtime="20200630 10:03:31.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:03:31.075" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:03:31.074" endtime="20200630 10:03:31.075"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:03:31.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:03:31.075" endtime="20200630 10:03:31.076"></status>
</kw>
<status status="PASS" starttime="20200630 10:03:31.069" endtime="20200630 10:03:31.076"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:03:31.078" level="INFO">Running command 'ozone sh key put -t RATIS /60879-rpcwoscheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:03:35.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:03:35.833" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:03:31.077" endtime="20200630 10:03:35.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:03:35.835" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:03:35.834" endtime="20200630 10:03:35.835"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:03:35.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:03:35.835" endtime="20200630 10:03:35.835"></status>
</kw>
<status status="PASS" starttime="20200630 10:03:31.076" endtime="20200630 10:03:35.836"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:03:35.839" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:03:35.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:03:35.842" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:03:35.836" endtime="20200630 10:03:35.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:03:35.842" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:03:35.842" endtime="20200630 10:03:35.843"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:03:35.843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:03:35.843" endtime="20200630 10:03:35.843"></status>
</kw>
<status status="PASS" starttime="20200630 10:03:35.836" endtime="20200630 10:03:35.843"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:03:35.847" level="INFO">Running command 'ozone sh key get /60879-rpcwoscheme/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:03:40.302" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:03:40.302" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:03:35.844" endtime="20200630 10:03:40.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:03:40.304" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:03:40.303" endtime="20200630 10:03:40.304"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:03:40.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:03:40.304" endtime="20200630 10:03:40.305"></status>
</kw>
<status status="PASS" starttime="20200630 10:03:35.844" endtime="20200630 10:03:40.305"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:03:40.309" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:03:40.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:03:40.311" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:03:40.306" endtime="20200630 10:03:40.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:03:40.312" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:03:40.311" endtime="20200630 10:03:40.312"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:03:40.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:03:40.312" endtime="20200630 10:03:40.313"></status>
</kw>
<status status="PASS" starttime="20200630 10:03:40.305" endtime="20200630 10:03:40.313"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:03:40.316" level="INFO">Running command 'ozone sh key info /60879-rpcwoscheme/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:03:43.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:03:43.282" level="INFO">${output} = {
  "volumeName": "60879-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-30T10:03:33.723Z",
  "modificationTime": "2020-06-30T10:03:35.455Z...</msg>
<status status="PASS" starttime="20200630 10:03:40.314" endtime="20200630 10:03:43.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:03:43.284" level="INFO">{
  "volumeName": "60879-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-30T10:03:33.723Z",
  "modificationTime": "2020-06-30T10:03:35.455Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104432364009685120,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200630 10:03:43.283" endtime="20200630 10:03:43.284"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:03:43.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:03:43.284" endtime="20200630 10:03:43.284"></status>
</kw>
<msg timestamp="20200630 10:03:43.285" level="INFO">${result} = {
  "volumeName": "60879-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-30T10:03:33.723Z",
  "modificationTime": "2020-06-30T10:03:35.455Z...</msg>
<status status="PASS" starttime="20200630 10:03:40.313" endtime="20200630 10:03:43.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200630 10:03:43.285" endtime="20200630 10:03:43.285"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:03:43.288" level="INFO">Running command 'ozone sh key delete /60879-rpcwoscheme/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:03:46.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:03:46.064" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:03:43.286" endtime="20200630 10:03:46.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:03:46.065" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:03:46.065" endtime="20200630 10:03:46.066"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:03:46.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:03:46.066" endtime="20200630 10:03:46.066"></status>
</kw>
<status status="PASS" starttime="20200630 10:03:43.285" endtime="20200630 10:03:46.067"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:03:46.071" level="INFO">Running command 'ozone sh key cp /60879-rpcwoscheme/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:03:51.160" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:03:51.160" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:03:46.067" endtime="20200630 10:03:51.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:03:51.161" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:03:51.160" endtime="20200630 10:03:51.161"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:03:51.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:03:51.162" endtime="20200630 10:03:51.162"></status>
</kw>
<status status="PASS" starttime="20200630 10:03:46.067" endtime="20200630 10:03:51.162"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:03:51.165" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:03:51.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:03:51.167" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:03:51.163" endtime="20200630 10:03:51.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:03:51.168" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:03:51.168" endtime="20200630 10:03:51.169"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:03:51.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:03:51.169" endtime="20200630 10:03:51.170"></status>
</kw>
<status status="PASS" starttime="20200630 10:03:51.163" endtime="20200630 10:03:51.170"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:03:51.173" level="INFO">Running command 'ozone sh key get /60879-rpcwoscheme/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:03:55.945" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:03:55.945" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:03:51.170" endtime="20200630 10:03:55.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:03:55.947" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:03:55.946" endtime="20200630 10:03:55.947"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:03:55.948" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:03:55.947" endtime="20200630 10:03:55.948"></status>
</kw>
<status status="PASS" starttime="20200630 10:03:51.170" endtime="20200630 10:03:55.948"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:03:55.952" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:03:55.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:03:55.954" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:03:55.949" endtime="20200630 10:03:55.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:03:55.955" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:03:55.954" endtime="20200630 10:03:55.955"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:03:55.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:03:55.955" endtime="20200630 10:03:55.956"></status>
</kw>
<status status="PASS" starttime="20200630 10:03:55.948" endtime="20200630 10:03:55.956"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:03:55.958" level="INFO">Running command 'ozone sh key delete /60879-rpcwoscheme/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:03:58.641" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:03:58.641" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:03:55.956" endtime="20200630 10:03:58.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:03:58.642" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:03:58.641" endtime="20200630 10:03:58.642"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:03:58.643" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:03:58.642" endtime="20200630 10:03:58.643"></status>
</kw>
<status status="PASS" starttime="20200630 10:03:55.956" endtime="20200630 10:03:58.643"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:03:58.647" level="INFO">Running command 'ozone sh key get /60879-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:04:01.351" level="INFO">${rc} = 255</msg>
<msg timestamp="20200630 10:04:01.351" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200630 10:03:58.644" endtime="20200630 10:04:01.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:04:01.352" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200630 10:04:01.352" endtime="20200630 10:04:01.352"></status>
</kw>
<msg timestamp="20200630 10:04:01.353" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200630 10:03:58.643" endtime="20200630 10:04:01.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200630 10:04:01.353" endtime="20200630 10:04:01.353"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:04:01.356" level="INFO">Running command 'ozone sh key get --force /60879-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:04:06.193" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:04:06.193" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:04:01.354" endtime="20200630 10:04:06.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:04:06.194" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:04:06.194" endtime="20200630 10:04:06.195"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:04:06.199" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:04:06.195" endtime="20200630 10:04:06.199"></status>
</kw>
<msg timestamp="20200630 10:04:06.199" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200630 10:04:01.353" endtime="20200630 10:04:06.199"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200630 10:04:06.200" endtime="20200630 10:04:06.200"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:04:06.203" level="INFO">Running command 'ozone sh key info /60879-rpcwoscheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:04:09.181" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:04:09.181" level="INFO">${output} = {
  "volumeName": "60879-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-30T10:03:24.181Z",
  "modificationTime": "2020-06-30T10:03:25.862Z",
  "...</msg>
<status status="PASS" starttime="20200630 10:04:06.201" endtime="20200630 10:04:09.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:04:09.183" level="INFO">{
  "volumeName": "60879-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-30T10:03:24.181Z",
  "modificationTime": "2020-06-30T10:03:25.862Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104432363384340600,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200630 10:04:09.182" endtime="20200630 10:04:09.183"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:04:09.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:04:09.183" endtime="20200630 10:04:09.183"></status>
</kw>
<msg timestamp="20200630 10:04:09.184" level="INFO">${result} = {
  "volumeName": "60879-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-30T10:03:24.181Z",
  "modificationTime": "2020-06-30T10:03:25.862Z",
  "...</msg>
<status status="PASS" starttime="20200630 10:04:06.200" endtime="20200630 10:04:09.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200630 10:04:09.184" endtime="20200630 10:04:09.185"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:04:09.188" level="INFO">Running command 'ozone sh key list /60879-rpcwoscheme/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:04:12.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:04:12.347" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200630 10:04:09.186" endtime="20200630 10:04:12.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:04:12.348" level="INFO">key1</msg>
<status status="PASS" starttime="20200630 10:04:12.348" endtime="20200630 10:04:12.348"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:04:12.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:04:12.349" endtime="20200630 10:04:12.349"></status>
</kw>
<msg timestamp="20200630 10:04:12.349" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200630 10:04:09.185" endtime="20200630 10:04:12.349"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200630 10:04:12.350" endtime="20200630 10:04:12.350"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:04:12.355" level="INFO">Running command 'ozone sh key rename /60879-rpcwoscheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:04:15.088" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:04:15.088" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:04:12.351" endtime="20200630 10:04:15.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:04:15.090" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:04:15.089" endtime="20200630 10:04:15.090"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:04:15.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:04:15.090" endtime="20200630 10:04:15.090"></status>
</kw>
<status status="PASS" starttime="20200630 10:04:12.350" endtime="20200630 10:04:15.091"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:04:15.094" level="INFO">Running command 'ozone sh key list /60879-rpcwoscheme/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:04:18.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:04:18.124" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200630 10:04:15.091" endtime="20200630 10:04:18.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:04:18.126" level="INFO">key2</msg>
<status status="PASS" starttime="20200630 10:04:18.125" endtime="20200630 10:04:18.126"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:04:18.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:04:18.126" endtime="20200630 10:04:18.126"></status>
</kw>
<msg timestamp="20200630 10:04:18.127" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200630 10:04:15.091" endtime="20200630 10:04:18.127"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200630 10:04:18.127" endtime="20200630 10:04:18.128"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:04:18.130" level="INFO">Running command 'ozone sh key delete /60879-rpcwoscheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:04:20.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:04:20.779" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:04:18.128" endtime="20200630 10:04:20.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:04:20.781" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:04:20.780" endtime="20200630 10:04:20.781"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:04:20.781" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:04:20.781" endtime="20200630 10:04:20.782"></status>
</kw>
<status status="PASS" starttime="20200630 10:04:18.128" endtime="20200630 10:04:20.782"></status>
</kw>
<status status="PASS" starttime="20200630 10:03:21.679" endtime="20200630 10:04:20.782"></status>
</kw>
<status status="PASS" starttime="20200630 10:03:21.678" endtime="20200630 10:04:20.782"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:04:20.785" level="INFO">Running command 'ozone sh bucket delete /60879-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:04:23.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:04:23.545" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:04:20.783" endtime="20200630 10:04:23.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:04:23.546" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:04:23.545" endtime="20200630 10:04:23.546"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:04:23.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:04:23.546" endtime="20200630 10:04:23.547"></status>
</kw>
<status status="PASS" starttime="20200630 10:04:20.783" endtime="20200630 10:04:23.547"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:04:23.550" level="INFO">Running command 'ozone sh volume delete /60879-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:04:26.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:04:26.195" level="INFO">${output} = Volume 60879-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200630 10:04:23.547" endtime="20200630 10:04:26.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:04:26.197" level="INFO">Volume 60879-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200630 10:04:26.196" endtime="20200630 10:04:26.197"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:04:26.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:04:26.197" endtime="20200630 10:04:26.197"></status>
</kw>
<status status="PASS" starttime="20200630 10:04:23.547" endtime="20200630 10:04:26.198"></status>
</kw>
<status status="PASS" starttime="20200630 10:02:55.323" endtime="20200630 10:04:26.198"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200630 10:02:55.321" endtime="20200630 10:04:26.198" critical="yes"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20200630 09:58:39.702" endtime="20200630 10:04:26.200"></status>
</suite>
<status status="PASS" starttime="20200630 09:57:36.742" endtime="20200630 10:04:26.205"></status>
</suite>
<statistics>
<total>
<stat pass="8" fail="0">Critical Tests</stat>
<stat pass="8" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="8" fail="0" id="s1" name="ozone-basic">ozone-basic</stat>
<stat pass="2" fail="0" id="s1-s1" name="Basic">ozone-basic.Basic</stat>
<stat pass="6" fail="0" id="s1-s2" name="Ozone-Shell">ozone-basic.Ozone-Shell</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
