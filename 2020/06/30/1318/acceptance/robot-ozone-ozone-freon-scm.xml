<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200630 10:15:35.210" rpa="false">
<suite id="s1" name="ozone-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:15:35.278" level="INFO">Running command 'ozone freon rk  --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:15:43.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:15:43.703" level="INFO">${output} = 2020-06-30 10:15:36,696 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:15:36,936 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 10:15:35.273" endtime="20200630 10:15:43.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:15:43.704" level="INFO">2020-06-30 10:15:36,696 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:15:36,936 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-30 10:15:36,936 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-30 10:15:38,198 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-06-30 10:15:38,198 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-06-30 10:15:38,198 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-06-30 10:15:38,199 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-06-30 10:15:38,199 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-06-30 10:15:38,199 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-30 10:15:38,199 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-06-30 10:15:38,207 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-30 10:15:38,215 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-30 10:15:38,269 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-01364, with hadoop as owner.
2020-06-30 10:15:38,323 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-01364/bucket-0-95842, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:15:38,837 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-30 10:15:39,219 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,095
Average Time spent in bucket creation: 00:00:00,015
Average Time spent in key creation: 00:00:00,069
Average Time spent in key write: 00:00:00,628
Total bytes written: 10240
Total Execution time: 00:00:06,226
***************************************************</msg>
<status status="PASS" starttime="20200630 10:15:43.704" endtime="20200630 10:15:43.704"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:15:43.705" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:15:43.705" endtime="20200630 10:15:43.705"></status>
</kw>
<msg timestamp="20200630 10:15:43.705" level="INFO">${result} = 2020-06-30 10:15:36,696 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:15:36,936 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 10:15:35.269" endtime="20200630 10:15:43.705"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200630 10:15:43.706" endtime="20200630 10:15:43.707"></status>
</kw>
<status status="PASS" starttime="20200630 10:15:43.706" endtime="20200630 10:15:43.707"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 10:15:35.268" endtime="20200630 10:15:43.707" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:15:43.711" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:15:49.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:15:49.133" level="INFO">${output} = 2020-06-30 10:15:45,173 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:15:45,444 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 10:15:43.709" endtime="20200630 10:15:49.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:15:49.135" level="INFO">2020-06-30 10:15:45,173 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:15:45,444 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-30 10:15:45,448 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-30 10:15:45,600 [main] INFO freon.BaseFreonGenerator: Executing test with prefix yf4ogeq4kb
2020-06-30 10:15:45,614 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-30 10:15:46,532 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-06-30 10:15:46,591 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:15:46,617 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-30 10:15:47,142 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-30 10:15:47,617 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-30 10:15:48,618 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-30 10:15:48,783 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=1367.678266, max=1367.678266, mean=1367.678266, stddev=0.0, median=1367.678266, p75=1367.678266, p95=1367.678266, p98=1367.678266, p99=1367.678266, p999=1367.678266, mean_rate=0.46585429975207826, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-30 10:15:48,784 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-06-30 10:15:48,792 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-30 10:15:48,792 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200630 10:15:49.134" endtime="20200630 10:15:49.135"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:15:49.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:15:49.135" endtime="20200630 10:15:49.136"></status>
</kw>
<msg timestamp="20200630 10:15:49.136" level="INFO">${result} = 2020-06-30 10:15:45,173 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:15:45,444 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 10:15:43.709" endtime="20200630 10:15:49.136"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200630 10:15:49.137" endtime="20200630 10:15:49.137"></status>
</kw>
<status status="PASS" starttime="20200630 10:15:49.136" endtime="20200630 10:15:49.137"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 10:15:43.708" endtime="20200630 10:15:49.138" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:15:49.142" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:15:53.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:15:53.273" level="INFO">${output} = 2020-06-30 10:15:50,643 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:15:50,880 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 10:15:49.140" endtime="20200630 10:15:53.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:15:53.274" level="INFO">2020-06-30 10:15:50,643 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:15:50,880 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-30 10:15:50,880 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-30 10:15:51,068 [main] INFO freon.BaseFreonGenerator: Executing test with prefix yedi3kmtm9
2020-06-30 10:15:51,093 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-30 10:15:52,100 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-30 10:15:53,101 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-30 10:15:53,213 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=72.551985, max=72.551985, mean=72.551985, stddev=0.0, median=72.551985, p75=72.551985, p95=72.551985, p98=72.551985, p99=72.551985, p999=72.551985, mean_rate=0.8724784715631775, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-30 10:15:53,227 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-06-30 10:15:53,227 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-30 10:15:53,227 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200630 10:15:53.274" endtime="20200630 10:15:53.274"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:15:53.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:15:53.274" endtime="20200630 10:15:53.275"></status>
</kw>
<msg timestamp="20200630 10:15:53.276" level="INFO">${result} = 2020-06-30 10:15:50,643 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:15:50,880 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 10:15:49.139" endtime="20200630 10:15:53.276"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200630 10:15:53.276" endtime="20200630 10:15:53.277"></status>
</kw>
<status status="PASS" starttime="20200630 10:15:53.276" endtime="20200630 10:15:53.277"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 10:15:49.138" endtime="20200630 10:15:53.277" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:15:53.282" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:15:57.366" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:15:57.367" level="INFO">${output} = 2020-06-30 10:15:54,771 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:15:55,001 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 10:15:53.280" endtime="20200630 10:15:57.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:15:57.368" level="INFO">2020-06-30 10:15:54,771 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:15:55,001 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-30 10:15:55,001 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-30 10:15:55,205 [main] INFO freon.BaseFreonGenerator: Executing test with prefix d6fjawvdeq
2020-06-30 10:15:55,222 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-30 10:15:56,241 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-30 10:15:57,323 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=16.84499, max=16.84499, mean=16.84499, stddev=0.0, median=16.84499, p75=16.84499, p95=16.84499, p98=16.84499, p99=16.84499, p999=16.84499, mean_rate=0.878283561021496, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-30 10:15:57,326 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-06-30 10:15:57,332 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-30 10:15:57,332 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200630 10:15:57.367" endtime="20200630 10:15:57.368"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:15:57.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:15:57.368" endtime="20200630 10:15:57.369"></status>
</kw>
<msg timestamp="20200630 10:15:57.369" level="INFO">${result} = 2020-06-30 10:15:54,771 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:15:55,001 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 10:15:53.279" endtime="20200630 10:15:57.369"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200630 10:15:57.370" endtime="20200630 10:15:57.370"></status>
</kw>
<status status="PASS" starttime="20200630 10:15:57.369" endtime="20200630 10:15:57.370"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 10:15:53.278" endtime="20200630 10:15:57.370" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200630 10:15:35.239" endtime="20200630 10:15:57.373"></status>
</suite>
<status status="PASS" starttime="20200630 10:15:35.211" endtime="20200630 10:15:57.376"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-freon">ozone-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
