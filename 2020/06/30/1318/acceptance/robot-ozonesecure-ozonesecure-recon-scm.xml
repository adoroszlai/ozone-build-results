<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200630 10:47:17.319" rpa="false">
<suite id="s1" name="ozonesecure-recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s1-t1" name="Generate Freon data">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:47:17.391" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:47:17.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:47:17.394" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200630 10:47:17.387" endtime="20200630 10:47:17.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:47:17.395" level="INFO">scm</msg>
<status status="PASS" starttime="20200630 10:47:17.394" endtime="20200630 10:47:17.395"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:47:17.396" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:47:17.395" endtime="20200630 10:47:17.396"></status>
</kw>
<msg timestamp="20200630 10:47:17.396" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200630 10:47:17.387" endtime="20200630 10:47:17.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200630 10:47:17.397" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200630 10:47:17.396" endtime="20200630 10:47:17.398"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:47:17.402" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:47:17.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:47:17.413" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:47:17.399" endtime="20200630 10:47:17.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:47:17.414" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:47:17.413" endtime="20200630 10:47:17.414"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:47:17.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:47:17.414" endtime="20200630 10:47:17.414"></status>
</kw>
<status status="PASS" starttime="20200630 10:47:17.398" endtime="20200630 10:47:17.415"></status>
</kw>
<status status="PASS" starttime="20200630 10:47:17.398" endtime="20200630 10:47:17.415"></status>
</kw>
<status status="PASS" starttime="20200630 10:47:17.386" endtime="20200630 10:47:17.415"></status>
</kw>
<status status="PASS" starttime="20200630 10:47:17.386" endtime="20200630 10:47:17.415"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:47:17.418" level="INFO">Running command 'ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:47:26.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:47:26.418" level="INFO">${output} = 2020-06-30 10:47:18,967 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:47:19,220 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 10:47:17.415" endtime="20200630 10:47:26.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:47:26.419" level="INFO">2020-06-30 10:47:18,967 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:47:19,220 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-30 10:47:19,220 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-06-30 10:47:20,918 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2020-06-30 10:47:20,919 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-06-30 10:47:20,919 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-06-30 10:47:20,919 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 10.
2020-06-30 10:47:20,919 [main] INFO freon.RandomKeyGenerator: Key size: 1025 bytes
2020-06-30 10:47:20,919 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-30 10:47:20,919 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-06-30 10:47:20,929 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-30 10:47:20,942 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2020-06-30 10:47:20,973 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-88797, with testuser/scm@EXAMPLE.COM as owner.
2020-06-30 10:47:21,002 [pool-2-thread-2] INFO rpc.RpcClient: Creating Bucket: vol-0-88797/bucket-0-19103, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:47:21,581 [pool-2-thread-9] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-30 10:47:21,945 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 10
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,005
Average Time spent in bucket creation: 00:00:00,001
Average Time spent in key creation: 00:00:00,165
Average Time spent in key write: 00:00:00,499
Total bytes written: 10250
Total Execution time: 00:00:06,667
***************************************************</msg>
<status status="PASS" starttime="20200630 10:47:26.419" endtime="20200630 10:47:26.420"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:47:26.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:47:26.420" endtime="20200630 10:47:26.420"></status>
</kw>
<status status="PASS" starttime="20200630 10:47:17.415" endtime="20200630 10:47:26.420"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 10:47:17.385" endtime="20200630 10:47:26.421" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Check if Recon picks up OM data">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
</arguments>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:47:26.427" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:47:26.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:47:26.431" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200630 10:47:26.425" endtime="20200630 10:47:26.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:47:26.432" level="INFO">scm</msg>
<status status="PASS" starttime="20200630 10:47:26.431" endtime="20200630 10:47:26.432"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:47:26.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:47:26.432" endtime="20200630 10:47:26.433"></status>
</kw>
<msg timestamp="20200630 10:47:26.433" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200630 10:47:26.424" endtime="20200630 10:47:26.433"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:47:26.439" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:47:26.450" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:47:26.450" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:47:26.435" endtime="20200630 10:47:26.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:47:26.451" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:47:26.450" endtime="20200630 10:47:26.451"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:47:26.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:47:26.451" endtime="20200630 10:47:26.452"></status>
</kw>
<status status="PASS" starttime="20200630 10:47:26.434" endtime="20200630 10:47:26.452"></status>
</kw>
<status status="PASS" starttime="20200630 10:47:26.433" endtime="20200630 10:47:26.452"></status>
</kw>
<status status="PASS" starttime="20200630 10:47:26.423" endtime="20200630 10:47:26.452"></status>
</kw>
<status status="PASS" starttime="20200630 10:47:26.423" endtime="20200630 10:47:26.452"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:47:26.456" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:47:26.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:47:26.628" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 10:47:26.453" endtime="20200630 10:47:26.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:47:26.629" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 10:47:26 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 10:47:26 GMT
&lt; Date: Tue, 30 Jun 2020 10:47:26 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0    461      0 --:--:-- --:--:-- --:--:--   463
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":145}]}}</msg>
<status status="PASS" starttime="20200630 10:47:26.629" endtime="20200630 10:47:26.630"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:47:26.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:47:26.630" endtime="20200630 10:47:26.630"></status>
</kw>
<msg timestamp="20200630 10:47:26.631" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 10:47:26.452" endtime="20200630 10:47:26.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200630 10:47:26.631" endtime="20200630 10:47:26.631"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:47:26.637" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:47:26.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:47:26.693" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 10:47:26.633" endtime="20200630 10:47:26.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:47:26.694" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 10:47:26 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 10:47:26 GMT
&lt; Date: Tue, 30 Jun 2020 10:47:26 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3070
&lt; 
{ [data not shown]

100  3070  100  3070    0     0  60425      0 --:--:-- --:--:-- --:--:-- 61400
* Connection #0 to host recon left intact
[{"volume":"vol-3-93116","bucket":"bucket-0-60656","fileSize":16384,"count":5},{"volume":"vol-2-25841","bucket":"bucket-2-91920","fileSize":16384,"count":5},{"volume":"vol-4-05257","bucket":"bucket-1-76759","fileSize":16384,"count":5},{"volume":"vol-1-88886","bucket":"bucket-1-97539","fileSize":16384,"count":5},{"volume":"vol-0-23033","bucket":"bucket-3-74436","fileSize":16384,"count":5},{"volume":"vol-0-23033","bucket":"bucket-4-90008","fileSize":16384,"count":5},{"volume":"vol-3-93116","bucket":"bucket-3-19272","fileSize":16384,"count":5},{"volume":"vol-2-25841","bucket":"bucket-1-32820","fileSize":16384,"count":5},{"volume":"vol-0-23033","bucket":"bucket-1-84249","fileSize":16384,"count":5},{"volume":"vol-3-93116","bucket":"bucket-1-15591","fileSize":16384,"count":5},{"volume":"vol-1-88886","bucket":"bucket-3-22549","fileSize":16384,"count":5},{"volume":"vol-3-93116","bucket":"bucket-2-28166","fileSize":16384,"count":5},{"volume":"vol-4-05257","bucket":"bucket-3-02300","fileSize":16384,"count":5},{"volume":"vol-4-05257","bucket":"bucket-4-33801","fileSize":16384,"count":5},{"volume":"vol-0-23033","bucket":"bucket-2-37859","fileSize":16384,"count":5},{"volume":"vol-1-88886","bucket":"bucket-2-51995","fileSize":16384,"count":5},{"volume":"vol-2-25841","bucket":"bucket-0-53103","fileSize":16384,"count":5},{"volume":"vol-3-93116","bucket":"bucket-4-20700","fileSize":16384,"count":5},{"volume":"vol-2-25841","bucket":"bucket-4-07817","fileSize":16384,"count":5},{"volume":"vol-2-25841","bucket":"bucket-3-78105","fileSize":16384,"count":5},{"volume":"vol-0-23033","bucket":"bucket-0-91537","fileSize":16384,"count":5},{"volume":"vol-1-88886","bucket":"bucket-4-68739","fileSize":16384,"count":5},{"volume":"vol-4-05257","bucket":"bucket-2-95141","fileSize":16384,"count":5},{"volume":"vol-1-88886","bucket":"bucket-0-48828","fileSize":16384,"count":5},{"volume":"vol-4-05257","bucket":"bucket-0-53861","fileSize":16384,"count":5},{"volume":"16666-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"16666-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"16666-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"16666-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest314","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-26960","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-55520","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-55520","fileSize":33554432,"count":0},{"volume":"s3v","bucket":"bucket-92975","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-27413","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-55520","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-95748","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200630 10:47:26.693" endtime="20200630 10:47:26.694"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:47:26.694" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:47:26.694" endtime="20200630 10:47:26.695"></status>
</kw>
<msg timestamp="20200630 10:47:26.695" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 10:47:26.632" endtime="20200630 10:47:26.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200630 10:47:26.696" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 10:47:26 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 10:47:26 GMT
&lt; Date: Tue, 30 Jun 2020 10:47:26 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3070
&lt; 
{ [data not shown]

100  3070  100  3070    0     0  60425      0 --:--:-- --:--:-- --:--:-- 61400
* Connection #0 to host recon left intact
[{"volume":"vol-3-93116","bucket":"bucket-0-60656","fileSize":16384,"count":5},{"volume":"vol-2-25841","bucket":"bucket-2-91920","fileSize":16384,"count":5},{"volume":"vol-4-05257","bucket":"bucket-1-76759","fileSize":16384,"count":5},{"volume":"vol-1-88886","bucket":"bucket-1-97539","fileSize":16384,"count":5},{"volume":"vol-0-23033","bucket":"bucket-3-74436","fileSize":16384,"count":5},{"volume":"vol-0-23033","bucket":"bucket-4-90008","fileSize":16384,"count":5},{"volume":"vol-3-93116","bucket":"bucket-3-19272","fileSize":16384,"count":5},{"volume":"vol-2-25841","bucket":"bucket-1-32820","fileSize":16384,"count":5},{"volume":"vol-0-23033","bucket":"bucket-1-84249","fileSize":16384,"count":5},{"volume":"vol-3-93116","bucket":"bucket-1-15591","fileSize":16384,"count":5},{"volume":"vol-1-88886","bucket":"bucket-3-22549","fileSize":16384,"count":5},{"volume":"vol-3-93116","bucket":"bucket-2-28166","fileSize":16384,"count":5},{"volume":"vol-4-05257","bucket":"bucket-3-02300","fileSize":16384,"count":5},{"volume":"vol-4-05257","bucket":"bucket-4-33801","fileSize":16384,"count":5},{"volume":"vol-0-23033","bucket":"bucket-2-37859","fileSize":16384,"count":5},{"volume":"vol-1-88886","bucket":"bucket-2-51995","fileSize":16384,"count":5},{"volume":"vol-2-25841","bucket":"bucket-0-53103","fileSize":16384,"count":5},{"volume":"vol-3-93116","bucket":"bucket-4-20700","fileSize":16384,"count":5},{"volume":"vol-2-25841","bucket":"bucket-4-07817","fileSize":16384,"count":5},{"volume":"vol-2-25841","bucket":"bucket-3-78105","fileSize":16384,"count":5},{"volume":"vol-0-23033","bucket":"bucket-0-91537","fileSize":16384,"count":5},{"volume":"vol-1-88886","bucket":"bucket-4-68739","fileSize":16384,"count":5},{"volume":"vol-4-05257","bucket":"bucket-2-95141","fileSize":16384,"count":5},{"volume":"vol-1-88886","bucket":"bucket-0-48828","fileSize":16384,"count":5},{"volume":"vol-4-05257","bucket":"bucket-0-53861","fileSize":16384,"count":5},{"volume":"16666-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"16666-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"16666-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"16666-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest314","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-26960","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-55520","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-55520","fileSize":33554432,"count":0},{"volume":"s3v","bucket":"bucket-92975","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-27413","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-55520","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-95748","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200630 10:47:26.695" endtime="20200630 10:47:26.696"></status>
</kw>
<status status="FAIL" starttime="20200630 10:47:26.422" endtime="20200630 10:47:26.697"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:47:36.701" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:47:36.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:47:36.705" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200630 10:47:36.699" endtime="20200630 10:47:36.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:47:36.706" level="INFO">scm</msg>
<status status="PASS" starttime="20200630 10:47:36.705" endtime="20200630 10:47:36.706"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:47:36.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:47:36.706" endtime="20200630 10:47:36.707"></status>
</kw>
<msg timestamp="20200630 10:47:36.707" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200630 10:47:36.698" endtime="20200630 10:47:36.707"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:47:36.711" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:47:36.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:47:36.722" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:47:36.708" endtime="20200630 10:47:36.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:47:36.723" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:47:36.723" endtime="20200630 10:47:36.724"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:47:36.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:47:36.724" endtime="20200630 10:47:36.724"></status>
</kw>
<status status="PASS" starttime="20200630 10:47:36.708" endtime="20200630 10:47:36.725"></status>
</kw>
<status status="PASS" starttime="20200630 10:47:36.707" endtime="20200630 10:47:36.725"></status>
</kw>
<status status="PASS" starttime="20200630 10:47:36.698" endtime="20200630 10:47:36.725"></status>
</kw>
<status status="PASS" starttime="20200630 10:47:36.698" endtime="20200630 10:47:36.725"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:47:36.728" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:47:36.745" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:47:36.745" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 10:47:36.726" endtime="20200630 10:47:36.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:47:36.746" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 10:47:36 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 10:47:36 GMT
&lt; Date: Tue, 30 Jun 2020 10:47:36 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0   6498      0 --:--:-- --:--:-- --:--:--  7000
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":145}]}}</msg>
<status status="PASS" starttime="20200630 10:47:36.746" endtime="20200630 10:47:36.746"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:47:36.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:47:36.746" endtime="20200630 10:47:36.747"></status>
</kw>
<msg timestamp="20200630 10:47:36.747" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 10:47:36.725" endtime="20200630 10:47:36.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200630 10:47:36.747" endtime="20200630 10:47:36.748"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:47:36.751" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:47:36.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:47:36.765" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 10:47:36.748" endtime="20200630 10:47:36.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:47:36.767" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 10:47:36 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 10:47:36 GMT
&lt; Date: Tue, 30 Jun 2020 10:47:36 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3070
&lt; 
{ [data not shown]

100  3070  100  3070    0     0   372k      0 --:--:-- --:--:-- --:--:--  428k
* Connection #0 to host recon left intact
[{"volume":"vol-3-93116","bucket":"bucket-0-60656","fileSize":16384,"count":5},{"volume":"vol-2-25841","bucket":"bucket-2-91920","fileSize":16384,"count":5},{"volume":"vol-4-05257","bucket":"bucket-1-76759","fileSize":16384,"count":5},{"volume":"vol-1-88886","bucket":"bucket-1-97539","fileSize":16384,"count":5},{"volume":"vol-0-23033","bucket":"bucket-3-74436","fileSize":16384,"count":5},{"volume":"vol-0-23033","bucket":"bucket-4-90008","fileSize":16384,"count":5},{"volume":"vol-3-93116","bucket":"bucket-3-19272","fileSize":16384,"count":5},{"volume":"vol-2-25841","bucket":"bucket-1-32820","fileSize":16384,"count":5},{"volume":"vol-0-23033","bucket":"bucket-1-84249","fileSize":16384,"count":5},{"volume":"vol-3-93116","bucket":"bucket-1-15591","fileSize":16384,"count":5},{"volume":"vol-1-88886","bucket":"bucket-3-22549","fileSize":16384,"count":5},{"volume":"vol-3-93116","bucket":"bucket-2-28166","fileSize":16384,"count":5},{"volume":"vol-4-05257","bucket":"bucket-3-02300","fileSize":16384,"count":5},{"volume":"vol-4-05257","bucket":"bucket-4-33801","fileSize":16384,"count":5},{"volume":"vol-0-23033","bucket":"bucket-2-37859","fileSize":16384,"count":5},{"volume":"vol-1-88886","bucket":"bucket-2-51995","fileSize":16384,"count":5},{"volume":"vol-2-25841","bucket":"bucket-0-53103","fileSize":16384,"count":5},{"volume":"vol-3-93116","bucket":"bucket-4-20700","fileSize":16384,"count":5},{"volume":"vol-2-25841","bucket":"bucket-4-07817","fileSize":16384,"count":5},{"volume":"vol-2-25841","bucket":"bucket-3-78105","fileSize":16384,"count":5},{"volume":"vol-0-23033","bucket":"bucket-0-91537","fileSize":16384,"count":5},{"volume":"vol-1-88886","bucket":"bucket-4-68739","fileSize":16384,"count":5},{"volume":"vol-4-05257","bucket":"bucket-2-95141","fileSize":16384,"count":5},{"volume":"vol-1-88886","bucket":"bucket-0-48828","fileSize":16384,"count":5},{"volume":"vol-4-05257","bucket":"bucket-0-53861","fileSize":16384,"count":5},{"volume":"16666-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"16666-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"16666-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"16666-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest314","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-26960","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-55520","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-55520","fileSize":33554432,"count":0},{"volume":"s3v","bucket":"bucket-92975","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-27413","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-55520","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-95748","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200630 10:47:36.766" endtime="20200630 10:47:36.767"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:47:36.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:47:36.767" endtime="20200630 10:47:36.767"></status>
</kw>
<msg timestamp="20200630 10:47:36.768" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 10:47:36.748" endtime="20200630 10:47:36.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200630 10:47:36.769" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 10:47:36 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 10:47:36 GMT
&lt; Date: Tue, 30 Jun 2020 10:47:36 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3070
&lt; 
{ [data not shown]

100  3070  100  3070    0     0   372k      0 --:--:-- --:--:-- --:--:--  428k
* Connection #0 to host recon left intact
[{"volume":"vol-3-93116","bucket":"bucket-0-60656","fileSize":16384,"count":5},{"volume":"vol-2-25841","bucket":"bucket-2-91920","fileSize":16384,"count":5},{"volume":"vol-4-05257","bucket":"bucket-1-76759","fileSize":16384,"count":5},{"volume":"vol-1-88886","bucket":"bucket-1-97539","fileSize":16384,"count":5},{"volume":"vol-0-23033","bucket":"bucket-3-74436","fileSize":16384,"count":5},{"volume":"vol-0-23033","bucket":"bucket-4-90008","fileSize":16384,"count":5},{"volume":"vol-3-93116","bucket":"bucket-3-19272","fileSize":16384,"count":5},{"volume":"vol-2-25841","bucket":"bucket-1-32820","fileSize":16384,"count":5},{"volume":"vol-0-23033","bucket":"bucket-1-84249","fileSize":16384,"count":5},{"volume":"vol-3-93116","bucket":"bucket-1-15591","fileSize":16384,"count":5},{"volume":"vol-1-88886","bucket":"bucket-3-22549","fileSize":16384,"count":5},{"volume":"vol-3-93116","bucket":"bucket-2-28166","fileSize":16384,"count":5},{"volume":"vol-4-05257","bucket":"bucket-3-02300","fileSize":16384,"count":5},{"volume":"vol-4-05257","bucket":"bucket-4-33801","fileSize":16384,"count":5},{"volume":"vol-0-23033","bucket":"bucket-2-37859","fileSize":16384,"count":5},{"volume":"vol-1-88886","bucket":"bucket-2-51995","fileSize":16384,"count":5},{"volume":"vol-2-25841","bucket":"bucket-0-53103","fileSize":16384,"count":5},{"volume":"vol-3-93116","bucket":"bucket-4-20700","fileSize":16384,"count":5},{"volume":"vol-2-25841","bucket":"bucket-4-07817","fileSize":16384,"count":5},{"volume":"vol-2-25841","bucket":"bucket-3-78105","fileSize":16384,"count":5},{"volume":"vol-0-23033","bucket":"bucket-0-91537","fileSize":16384,"count":5},{"volume":"vol-1-88886","bucket":"bucket-4-68739","fileSize":16384,"count":5},{"volume":"vol-4-05257","bucket":"bucket-2-95141","fileSize":16384,"count":5},{"volume":"vol-1-88886","bucket":"bucket-0-48828","fileSize":16384,"count":5},{"volume":"vol-4-05257","bucket":"bucket-0-53861","fileSize":16384,"count":5},{"volume":"16666-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"16666-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"16666-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"16666-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest314","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-26960","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-55520","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-55520","fileSize":33554432,"count":0},{"volume":"s3v","bucket":"bucket-92975","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-27413","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-55520","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-95748","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200630 10:47:36.768" endtime="20200630 10:47:36.769"></status>
</kw>
<status status="FAIL" starttime="20200630 10:47:36.697" endtime="20200630 10:47:36.770"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:47:46.775" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:47:46.778" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:47:46.778" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200630 10:47:46.773" endtime="20200630 10:47:46.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:47:46.779" level="INFO">scm</msg>
<status status="PASS" starttime="20200630 10:47:46.779" endtime="20200630 10:47:46.780"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:47:46.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:47:46.780" endtime="20200630 10:47:46.781"></status>
</kw>
<msg timestamp="20200630 10:47:46.781" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200630 10:47:46.772" endtime="20200630 10:47:46.781"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:47:46.785" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:47:46.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:47:46.801" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:47:46.782" endtime="20200630 10:47:46.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:47:46.802" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:47:46.801" endtime="20200630 10:47:46.802"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:47:46.802" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:47:46.802" endtime="20200630 10:47:46.803"></status>
</kw>
<status status="PASS" starttime="20200630 10:47:46.781" endtime="20200630 10:47:46.803"></status>
</kw>
<status status="PASS" starttime="20200630 10:47:46.781" endtime="20200630 10:47:46.803"></status>
</kw>
<status status="PASS" starttime="20200630 10:47:46.772" endtime="20200630 10:47:46.803"></status>
</kw>
<status status="PASS" starttime="20200630 10:47:46.771" endtime="20200630 10:47:46.803"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:47:46.807" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:47:46.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:47:46.843" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 10:47:46.804" endtime="20200630 10:47:46.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:47:46.844" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 10:47:46 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 10:47:46 GMT
&lt; Date: Tue, 30 Jun 2020 10:47:46 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 182
&lt; 
{ [data not shown]

100   182  100   182    0     0   5783      0 --:--:-- --:--:-- --:--:--  5870
* Connection #0 to host recon left intact
{"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":146},{"ContainerID":2,"NumberOfKeys":4},{"ContainerID":3,"NumberOfKeys":4},{"ContainerID":4,"NumberOfKeys":2}]}}</msg>
<status status="PASS" starttime="20200630 10:47:46.844" endtime="20200630 10:47:46.844"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:47:46.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:47:46.845" endtime="20200630 10:47:46.845"></status>
</kw>
<msg timestamp="20200630 10:47:46.846" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 10:47:46.803" endtime="20200630 10:47:46.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200630 10:47:46.846" endtime="20200630 10:47:46.847"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:47:46.850" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:47:46.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:47:46.867" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 10:47:46.847" endtime="20200630 10:47:46.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:47:46.868" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 10:47:46 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 10:47:46 GMT
&lt; Date: Tue, 30 Jun 2020 10:47:46 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3215
&lt; 
{ [data not shown]

100  3215  100  3215    0     0   279k      0 --:--:-- --:--:-- --:--:--  285k
* Connection #0 to host recon left intact
[{"volume":"vol-3-93116","bucket":"bucket-0-60656","fileSize":16384,"count":5},{"volume":"vol-2-25841","bucket":"bucket-2-91920","fileSize":16384,"count":5},{"volume":"vol-4-05257","bucket":"bucket-1-76759","fileSize":16384,"count":5},{"volume":"vol-1-88886","bucket":"bucket-1-97539","fileSize":16384,"count":5},{"volume":"vol-0-23033","bucket":"bucket-3-74436","fileSize":16384,"count":5},{"volume":"vol-0-23033","bucket":"bucket-4-90008","fileSize":16384,"count":5},{"volume":"vol-3-93116","bucket":"bucket-3-19272","fileSize":16384,"count":5},{"volume":"vol-2-25841","bucket":"bucket-1-32820","fileSize":16384,"count":5},{"volume":"vol-0-23033","bucket":"bucket-1-84249","fileSize":16384,"count":5},{"volume":"vol-3-93116","bucket":"bucket-1-15591","fileSize":16384,"count":5},{"volume":"vol-1-88886","bucket":"bucket-3-22549","fileSize":16384,"count":5},{"volume":"vol-3-93116","bucket":"bucket-2-28166","fileSize":16384,"count":5},{"volume":"vol-4-05257","bucket":"bucket-3-02300","fileSize":16384,"count":5},{"volume":"vol-4-05257","bucket":"bucket-4-33801","fileSize":16384,"count":5},{"volume":"vol-0-23033","bucket":"bucket-2-37859","fileSize":16384,"count":5},{"volume":"vol-1-88886","bucket":"bucket-2-51995","fileSize":16384,"count":5},{"volume":"vol-2-25841","bucket":"bucket-0-53103","fileSize":16384,"count":5},{"volume":"vol-3-93116","bucket":"bucket-4-20700","fileSize":16384,"count":5},{"volume":"vol-2-25841","bucket":"bucket-4-07817","fileSize":16384,"count":5},{"volume":"vol-2-25841","bucket":"bucket-3-78105","fileSize":16384,"count":5},{"volume":"vol-0-23033","bucket":"bucket-0-91537","fileSize":16384,"count":5},{"volume":"vol-1-88886","bucket":"bucket-4-68739","fileSize":16384,"count":5},{"volume":"vol-4-05257","bucket":"bucket-2-95141","fileSize":16384,"count":5},{"volume":"vol-1-88886","bucket":"bucket-0-48828","fileSize":16384,"count":5},{"volume":"vol-4-05257","bucket":"bucket-0-53861","fileSize":16384,"count":5},{"volume":"16666-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"16666-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"16666-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"16666-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest314","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-26960","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-55520","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-55520","fileSize":33554432,"count":0},{"volume":"s3v","bucket":"bucket-92975","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-27413","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-55520","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-95748","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-46849","fileSize":1024,"count":2},{"volume":"vol-0-88797","bucket":"bucket-0-19103","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20200630 10:47:46.868" endtime="20200630 10:47:46.869"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:47:46.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:47:46.869" endtime="20200630 10:47:46.869"></status>
</kw>
<msg timestamp="20200630 10:47:46.870" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 10:47:46.847" endtime="20200630 10:47:46.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<status status="PASS" starttime="20200630 10:47:46.870" endtime="20200630 10:47:46.870"></status>
</kw>
<status status="PASS" starttime="20200630 10:47:46.770" endtime="20200630 10:47:46.871"></status>
</kw>
<status status="PASS" starttime="20200630 10:47:26.422" endtime="20200630 10:47:46.871"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 10:47:26.421" endtime="20200630 10:47:46.871" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Check if Recon picks up DN heartbeats">
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/datanodes</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:47:46.875" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:47:46.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:47:46.904" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 10:47:46.873" endtime="20200630 10:47:46.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:47:46.905" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/datanodes HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 10:47:46 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 10:47:46 GMT
&lt; Date: Tue, 30 Jun 2020 10:47:46 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1812
&lt; 
{ [data not shown]

100  1812  100  1812    0     0  77073      0 --:--:-- --:--:-- --:--:-- 78782
* Connection #0 to host recon left intact
{"totalCount":3,"datanodes":[{"uuid":"2ef675a6-1fe3-41f2-8aba-8fca46910ee4","hostname":"ozonesecure_datanode_3.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1593514042468,"storageReport":{"capacity":89311358976,"used":8192,"remaining":25444057088},"pipelines":[{"pipelineID":"8a18a594-f6c9-4125-a0fe-096b9228b4a7","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_2.ozonesecure_default"},{"pipelineID":"f25e7d12-e2d5-4240-b333-0500fad7c2c3","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_3.ozonesecure_default"}],"containers":2,"leaderCount":1},{"uuid":"e43ffac0-c295-4202-91f9-9f038c32fa07","hostname":"ozonesecure_datanode_1.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1593514042605,"storageReport":{"capacity":89311358976,"used":8192,"remaining":25444057088},"pipelines":[{"pipelineID":"2278b3f9-ccf6-429d-ad59-3c2f1a9035ec","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_1.ozonesecure_default"},{"pipelineID":"8a18a594-f6c9-4125-a0fe-096b9228b4a7","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_2.ozonesecure_default"}],"containers":2,"leaderCount":1},{"uuid":"1c67ccf0-0630-4493-bd0f-d0a4a681f363","hostname":"ozonesecure_datanode_2.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1593514042583,"storageReport":{"capacity":89311358976,"used":8192,"remaining":25444057088},"pipelines":[{"pipelineID":"391597a7-0c3c-4acc-b208-bafb20bd65db","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_2.ozonesecure_default"},{"pipelineID":"8a18a594-f6c9-4125-a0fe-096b9228b4a7","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_2.ozonesecure_default"}],"containers":2,"leaderCount":2}]}</msg>
<status status="PASS" starttime="20200630 10:47:46.905" endtime="20200630 10:47:46.906"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:47:46.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:47:46.906" endtime="20200630 10:47:46.906"></status>
</kw>
<msg timestamp="20200630 10:47:46.907" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 10:47:46.873" endtime="20200630 10:47:46.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanodes</arg>
</arguments>
<status status="PASS" starttime="20200630 10:47:46.907" endtime="20200630 10:47:46.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200630 10:47:46.907" endtime="20200630 10:47:46.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200630 10:47:46.908" endtime="20200630 10:47:46.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200630 10:47:46.908" endtime="20200630 10:47:46.909"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/pipelines</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:47:46.911" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:47:46.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:47:46.931" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 10:47:46.909" endtime="20200630 10:47:46.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:47:46.932" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/pipelines HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 10:47:46 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 10:47:46 GMT
&lt; Date: Tue, 30 Jun 2020 10:47:46 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1368
&lt; 
{ [data not shown]

100  1368  100  1368    0     0   104k      0 --:--:-- --:--:-- --:--:--  111k
* Connection #0 to host recon left intact
{"totalCount":4,"pipelines":[{"pipelineId":"2278b3f9-ccf6-429d-ad59-3c2f1a9035ec","status":"OPEN","leaderNode":"ozonesecure_datanode_1.ozonesecure_default","datanodes":["ozonesecure_datanode_1.ozonesecure_default"],"lastLeaderElection":0,"duration":1328493,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"391597a7-0c3c-4acc-b208-bafb20bd65db","status":"OPEN","leaderNode":"ozonesecure_datanode_2.ozonesecure_default","datanodes":["ozonesecure_datanode_2.ozonesecure_default"],"lastLeaderElection":0,"duration":1328487,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"8a18a594-f6c9-4125-a0fe-096b9228b4a7","status":"OPEN","leaderNode":"ozonesecure_datanode_2.ozonesecure_default","datanodes":["ozonesecure_datanode_3.ozonesecure_default","ozonesecure_datanode_1.ozonesecure_default","ozonesecure_datanode_2.ozonesecure_default"],"lastLeaderElection":0,"duration":1328367,"leaderElections":0,"replicationType":"RATIS","replicationFactor":3,"containers":1},{"pipelineId":"f25e7d12-e2d5-4240-b333-0500fad7c2c3","status":"OPEN","leaderNode":"ozonesecure_datanode_3.ozonesecure_default","datanodes":["ozonesecure_datanode_3.ozonesecure_default"],"lastLeaderElection":0,"duration":1329412,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1}]}</msg>
<status status="PASS" starttime="20200630 10:47:46.932" endtime="20200630 10:47:46.932"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:47:46.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:47:46.933" endtime="20200630 10:47:46.933"></status>
</kw>
<msg timestamp="20200630 10:47:46.933" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 10:47:46.909" endtime="20200630 10:47:46.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>pipelines</arg>
</arguments>
<status status="PASS" starttime="20200630 10:47:46.934" endtime="20200630 10:47:46.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200630 10:47:46.934" endtime="20200630 10:47:46.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>OPEN</arg>
</arguments>
<status status="PASS" starttime="20200630 10:47:46.935" endtime="20200630 10:47:46.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200630 10:47:46.935" endtime="20200630 10:47:46.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200630 10:47:46.936" endtime="20200630 10:47:46.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200630 10:47:46.936" endtime="20200630 10:47:46.937"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/clusterState</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:47:46.940" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:47:46.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:47:46.965" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 10:47:46.938" endtime="20200630 10:47:46.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:47:46.966" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/clusterState HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 10:47:46 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 10:47:46 GMT
&lt; Date: Tue, 30 Jun 2020 10:47:46 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 186
&lt; 
{ [data not shown]

100   186  100   186    0     0   9701      0 --:--:-- --:--:-- --:--:--  9789
* Connection #0 to host recon left intact
{"pipelines":4,"totalDatanodes":3,"healthyDatanodes":3,"storageReport":{"capacity":267934076928,"used":24576,"remaining":76332171264},"containers":4,"volumes":25,"buckets":55,"keys":171}</msg>
<status status="PASS" starttime="20200630 10:47:46.966" endtime="20200630 10:47:46.966"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:47:46.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:47:46.967" endtime="20200630 10:47:46.967"></status>
</kw>
<msg timestamp="20200630 10:47:46.967" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 10:47:46.937" endtime="20200630 10:47:46.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"totalDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200630 10:47:46.968" endtime="20200630 10:47:46.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"healthyDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200630 10:47:46.968" endtime="20200630 10:47:46.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"pipelines\":4</arg>
</arguments>
<status status="PASS" starttime="20200630 10:47:46.969" endtime="20200630 10:47:46.969"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:47:46.974" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:47:47.000" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:47:47.000" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 10:47:46.972" endtime="20200630 10:47:47.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:47:47.001" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/containers/1/replicaHistory HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 10:47:46 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 10:47:46 GMT
&lt; Date: Tue, 30 Jun 2020 10:47:46 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 454
&lt; 
{ [data not shown]

100   454  100   454    0     0  24132      0 --:--:-- --:--:-- --:--:-- 25222
* Connection #0 to host recon left intact
[{"containerId":1,"datanodeHost":"ozonesecure_datanode_1.ozonesecure_default","firstReportTimestamp":1593512770391,"lastReportTimestamp":1593514000321},{"containerId":1,"datanodeHost":"ozonesecure_datanode_2.ozonesecure_default","firstReportTimestamp":1593512769931,"lastReportTimestamp":1593514029565},{"containerId":1,"datanodeHost":"ozonesecure_datanode_3.ozonesecure_default","firstReportTimestamp":1593512770345,"lastReportTimestamp":1593514042468}]</msg>
<status status="PASS" starttime="20200630 10:47:47.001" endtime="20200630 10:47:47.001"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:47:47.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:47:47.002" endtime="20200630 10:47:47.002"></status>
</kw>
<msg timestamp="20200630 10:47:47.006" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 10:47:46.969" endtime="20200630 10:47:47.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
</arguments>
<status status="PASS" starttime="20200630 10:47:47.006" endtime="20200630 10:47:47.006"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 10:47:46.872" endtime="20200630 10:47:47.007" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Check if Recon Web UI is up">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:47:47.014" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:47:47.016" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:47:47.017" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200630 10:47:47.009" endtime="20200630 10:47:47.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:47:47.018" level="INFO">scm</msg>
<status status="PASS" starttime="20200630 10:47:47.017" endtime="20200630 10:47:47.018"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:47:47.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:47:47.018" endtime="20200630 10:47:47.018"></status>
</kw>
<msg timestamp="20200630 10:47:47.019" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200630 10:47:47.009" endtime="20200630 10:47:47.019"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:47:47.022" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:47:47.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:47:47.034" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:47:47.021" endtime="20200630 10:47:47.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:47:47.036" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:47:47.034" endtime="20200630 10:47:47.036"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:47:47.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:47:47.037" endtime="20200630 10:47:47.041"></status>
</kw>
<status status="PASS" starttime="20200630 10:47:47.020" endtime="20200630 10:47:47.041"></status>
</kw>
<status status="PASS" starttime="20200630 10:47:47.019" endtime="20200630 10:47:47.041"></status>
</kw>
<status status="PASS" starttime="20200630 10:47:47.009" endtime="20200630 10:47:47.041"></status>
</kw>
<status status="PASS" starttime="20200630 10:47:47.008" endtime="20200630 10:47:47.041"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${ENDPOINT_URL}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:47:47.045" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:47:47.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:47:47.104" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 10:47:47.042" endtime="20200630 10:47:47.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:47:47.106" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Ignoring the response-body
{ [data not shown]

100   442  100   442    0     0  12407      0 --:--:-- --:--:-- --:--:-- 12628
* Connection #0 to host recon left intact
* Issue another request to this URL: 'http://recon:9888/'
* Found bundle for host recon: 0x13baf20
* Re-using existing connection! (#0) with host recon
* Connected to recon (172.26.0.9) port 9888 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; GET / HTTP/1.1
&gt; Authorization: Negotiate YIICUwYJKoZIhvcSAQICAQBuggJCMIICPqADAgEFoQMCAQ6iBwMFACAAAACjggFSYYIBTjCCAUqgAwIBBaENGwtFWEFNUExFLkNPTaIYMBagAwIBA6EPMA0bBEhUVFAbBXJlY29uo4IBGDCCARSgAwIBEqEDAgECooIBBgSCAQID0xR3YAGwR9UNOQTmtsXUCq28LEHiEI4olVFl2TLXjlZ1z74g3oYhz77MCKPUnx1nMcLVkNH0ijYYQSq+gmeeflHJYiCwhx98+VHJB3EXpbkQYmNFf1A9nCT542TI3rovZmhkkZh93xB/dcs6iRrowYnIpRXyg9rl8ekeVpESsZb+A59SCSUZQaImz+eGUsIRKUlNo9LXpCnKEus8a26TrZ+SEJ7Nk9jHCLPx2EdFP2p6mpwt+adYHEXOrCJ2OA5mkUbzdnFaMmbyIe2k8XsevpiwC3fMMr0h0DMzK/Wtmdu0ovU6vHhyAvqLgnEeTIiWWSl9p3k39EV+kjq/qgET8KukgdIwgc+gAwIBEqKBxwSBxJOgLD1XpQes94xE22Vx3XPlsKZjrC/gEwHJTjj1Xa6gvEYcqbqzxRE2ytYijFn8h9gLQv190tIfA8sAm/sV89M8BE02qmN909q+CFyRnBqvKQlo0XwO+GOn0Ha2gFG/tlZhQH2GNhjmri/GJgci5HQlLH4GHwx/LJsAc959BVRIbzoMdwSHj6ddUuITl4Ttv60WZj05TjBu3rn7pJzaMawa07/GRrScnMZes7yW/yyKarv5Hje9YWWkUUQkdrMSnQsiNnk=
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 10:47:47 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 10:47:47 GMT
&lt; Date: Tue, 30 Jun 2020 10:47:47 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Tue, 30 Jun 2020 10:47:47 GMT
&lt; Date: Tue, 30 Jun 2020 10:47:47 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCp/uMzchCfAR1Y6UPBJ5TklVVD211J/wSvT1QcmpgE6Fp3LiXQG2W75/E7cXgM9gEQSxxUIoFqQUgMnyDt+u75474
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593550067097&amp;s=E2yTcxzviCybA06QogLlDtwA7Gx6rXRNkdblniZfLQM="; Path=/; HttpOnly
&lt; Last-Modified: Tue, 30 Jun 2020 09:31:08 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2267
&lt; 
{ [data not shown]

100  2267  100  2267    0     0  43245      0 --:--:-- --:--:-- --:--:-- 43245
* Closing connection 0
&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.91e4d86d.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.2ec5409c.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.ea8f5368.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.01252c4e.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20200630 10:47:47.105" endtime="20200630 10:47:47.106"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:47:47.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:47:47.106" endtime="20200630 10:47:47.107"></status>
</kw>
<msg timestamp="20200630 10:47:47.107" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 10:47:47.042" endtime="20200630 10:47:47.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Ozone Recon</arg>
</arguments>
<status status="PASS" starttime="20200630 10:47:47.107" endtime="20200630 10:47:47.107"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 10:47:47.008" endtime="20200630 10:47:47.108" critical="yes"></status>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20200630 10:47:17.354" endtime="20200630 10:47:47.109"></status>
</suite>
<status status="PASS" starttime="20200630 10:47:17.321" endtime="20200630 10:47:47.114"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozonesecure-recon">ozonesecure-recon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Recon-Api">ozonesecure-recon.Recon-Api</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
