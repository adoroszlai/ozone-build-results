<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200630 10:48:08.859" rpa="false">
<suite id="s1" name="ozonesecure-spnego" source="/opt/hadoop/smoketest/spnego">
<suite id="s1-s1" name="Web" source="/opt/hadoop/smoketest/spnego/web.robot">
<test id="s1-s1-t1" name="Generate Freon data">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:48:08.931" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:48:08.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:48:08.932" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200630 10:48:08.926" endtime="20200630 10:48:08.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:48:08.934" level="INFO">scm</msg>
<status status="PASS" starttime="20200630 10:48:08.933" endtime="20200630 10:48:08.934"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:48:08.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:48:08.934" endtime="20200630 10:48:08.934"></status>
</kw>
<msg timestamp="20200630 10:48:08.935" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200630 10:48:08.925" endtime="20200630 10:48:08.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200630 10:48:08.936" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200630 10:48:08.935" endtime="20200630 10:48:08.936"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:48:08.940" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:48:08.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:48:08.954" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:48:08.938" endtime="20200630 10:48:08.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:48:08.955" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:48:08.955" endtime="20200630 10:48:08.955"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:48:08.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:48:08.955" endtime="20200630 10:48:08.956"></status>
</kw>
<status status="PASS" starttime="20200630 10:48:08.937" endtime="20200630 10:48:08.956"></status>
</kw>
<status status="PASS" starttime="20200630 10:48:08.937" endtime="20200630 10:48:08.956"></status>
</kw>
<status status="PASS" starttime="20200630 10:48:08.925" endtime="20200630 10:48:08.957"></status>
</kw>
<status status="PASS" starttime="20200630 10:48:08.924" endtime="20200630 10:48:08.957"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 2 --keySize 1025</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:48:08.961" level="INFO">Running command 'ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 2 --keySize 1025 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:48:17.855" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:48:17.855" level="INFO">${output} = 2020-06-30 10:48:10,451 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:48:10,633 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 10:48:08.957" endtime="20200630 10:48:17.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:48:17.856" level="INFO">2020-06-30 10:48:10,451 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:48:10,633 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-30 10:48:10,633 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-06-30 10:48:12,355 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2020-06-30 10:48:12,356 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-06-30 10:48:12,356 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-06-30 10:48:12,356 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 2.
2020-06-30 10:48:12,356 [main] INFO freon.RandomKeyGenerator: Key size: 1025 bytes
2020-06-30 10:48:12,356 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-30 10:48:12,356 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-06-30 10:48:12,361 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-30 10:48:12,373 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 2)
2020-06-30 10:48:12,410 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-57960, with testuser/scm@EXAMPLE.COM as owner.
2020-06-30 10:48:12,450 [pool-2-thread-2] INFO rpc.RpcClient: Creating Bucket: vol-0-57960/bucket-0-55547, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:48:13,067 [pool-2-thread-3] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-30 10:48:13,377 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (2 out of 2)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 2
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,006
Average Time spent in bucket creation: 00:00:00,002
Average Time spent in key creation: 00:00:00,030
Average Time spent in key write: 00:00:00,109
Total bytes written: 2050
Total Execution time: 00:00:06,653
***************************************************</msg>
<status status="PASS" starttime="20200630 10:48:17.855" endtime="20200630 10:48:17.856"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:48:17.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:48:17.857" endtime="20200630 10:48:17.857"></status>
</kw>
<status status="PASS" starttime="20200630 10:48:08.957" endtime="20200630 10:48:17.857"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 10:48:08.923" endtime="20200630 10:48:17.858" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Test OM portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:48:17.863" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:48:17.866" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:48:17.866" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:48:17.860" endtime="20200630 10:48:17.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:48:17.867" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:48:17.866" endtime="20200630 10:48:17.867"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:48:17.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:48:17.867" endtime="20200630 10:48:17.867"></status>
</kw>
<status status="PASS" starttime="20200630 10:48:17.860" endtime="20200630 10:48:17.868"></status>
</kw>
<status status="PASS" starttime="20200630 10:48:17.859" endtime="20200630 10:48:17.868"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:48:17.871" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:48:17.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:48:17.894" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.10...
* Connected to om (172.26.0.10) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1...</msg>
<status status="PASS" starttime="20200630 10:48:17.868" endtime="20200630 10:48:17.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:48:17.895" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.10...
* Connected to om (172.26.0.10) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200630 10:48:17.894" endtime="20200630 10:48:17.895"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:48:17.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:48:17.896" endtime="20200630 10:48:17.896"></status>
</kw>
<msg timestamp="20200630 10:48:17.896" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.10...
* Connected to om (172.26.0.10) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1...</msg>
<status status="PASS" starttime="20200630 10:48:17.868" endtime="20200630 10:48:17.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200630 10:48:17.898" endtime="20200630 10:48:17.898"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:48:17.902" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:48:17.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:48:17.904" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200630 10:48:17.900" endtime="20200630 10:48:17.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:48:17.906" level="INFO">scm</msg>
<status status="PASS" starttime="20200630 10:48:17.905" endtime="20200630 10:48:17.906"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:48:17.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:48:17.906" endtime="20200630 10:48:17.906"></status>
</kw>
<msg timestamp="20200630 10:48:17.907" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200630 10:48:17.899" endtime="20200630 10:48:17.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200630 10:48:17.907" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200630 10:48:17.907" endtime="20200630 10:48:17.908"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:48:17.910" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:48:17.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:48:17.939" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:48:17.909" endtime="20200630 10:48:17.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:48:17.940" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:48:17.939" endtime="20200630 10:48:17.940"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:48:17.941" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:48:17.940" endtime="20200630 10:48:17.941"></status>
</kw>
<status status="PASS" starttime="20200630 10:48:17.908" endtime="20200630 10:48:17.941"></status>
</kw>
<status status="PASS" starttime="20200630 10:48:17.908" endtime="20200630 10:48:17.941"></status>
</kw>
<status status="PASS" starttime="20200630 10:48:17.899" endtime="20200630 10:48:17.941"></status>
</kw>
<status status="PASS" starttime="20200630 10:48:17.899" endtime="20200630 10:48:17.942"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:48:17.944" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:48:17.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:48:17.971" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.10...
* Connected to om (172.26.0.10) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1...</msg>
<status status="PASS" starttime="20200630 10:48:17.942" endtime="20200630 10:48:17.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:48:17.972" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.10...
* Connected to om (172.26.0.10) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/'
* Found bundle for host om: 0xd52f20
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.10) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQZRX2Aq09+t1udzAn04OslGLeFrKEJckrJEMydmPE7sSr3i4L5Nvzv1WayOsp2anIUtL1ihvR4iPBzyU6g3hsIC57GMh2oX6vMRP3XH5S7X81B8j0gnPehbnJb+P6i97IRUx65fYH8CRuOM1doisyj4eW6FBHUeCjWGGbXC7AvPqdx0VpubiW7Fe17FxWhYqnKbxe1Nx1ukHHmeNHEvIbJkAL7X/ebnf+xXfF4jvUzZR/J3ULHl2ZMxBQO9RtnkyScEuzKbE/wBWZTIyLTBQN+PeE2bEsd6qTrtuH8ZQDK2GDvrai8AtYVeJHBRihBS8aWaizxQr7OVEQ2GFSB0XerhMgWsFFWJpIHWMIHToAMCARKigcsEgcjPkofIqwrH8YyaM2YgWOtpCSmk+itZpoAoGeP2tyQqzvT9PpibPjUwoaf68K7KSM+sTVjfVruUlFnMjIZGiLakkgutmCP3X0gPxzUhA8jE64GZHoX0HcIF6Ixt/j01duQn6dcKdGUxuH/Cl4CAiNbEAMy77CWjfsV2aEDvO6R8Hva9N0dexTjF14IeZmpOj0Hfyag3YF7ZHUS3gPN9i3Gm90OYxikP9Jp+rQjQMdEsBPHr5KaWJYI9IIJlrA1PTWhKRIpIxIshIg==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 10:48:17 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 10:48:17 GMT
&lt; Date: Tue, 30 Jun 2020 10:48:17 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Tue, 30 Jun 2020 10:48:17 GMT
&lt; Date: Tue, 30 Jun 2020 10:48:17 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCFFuO1UapGCqnKGOr/rfN4zm047cRo49cYRkBtPNCsm6aU4QIkj7DScG1EB0tRKc1DwMnZWmetZfw6pO8VigwJDw3
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593550097967&amp;s=sQrBwlaeBFJNP7NsfmJtzvf7oijJgW30JzjAOIGmiC0="; Path=/; HttpOnly
&lt; Last-Modified: Tue, 30 Jun 2020 09:26:02 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2927
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Tue, 30 Jun 2020 10:48:17 GMT
Cache-Control: no-cache
Expires: Tue, 30 Jun 2020 10:48:17 GMT
Date: Tue, 30 Jun 2020 10:48:17 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Tue, 30 Jun 2020 10:48:17 GMT
Date: Tue, 30 Jun 2020 10:48:17 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCFFuO1UapGCqnKGOr/rfN4zm047cRo49cYRkBtPNCsm6aU4QIkj7DScG1EB0tRKc1DwMnZWmetZfw6pO8VigwJDw3
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593550097967&amp;s=sQrBwlaeBFJNP7NsfmJtzvf7oijJgW30JzjAOIGmiC0="; Path=/; HttpOnly
Last-Modified: Tue, 30 Jun 2020 09:26:02 GMT
Accept-Ranges: bytes
Content-Length: 2927
</msg>
<status status="PASS" starttime="20200630 10:48:17.971" endtime="20200630 10:48:17.972"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:48:17.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:48:17.972" endtime="20200630 10:48:17.973"></status>
</kw>
<msg timestamp="20200630 10:48:17.973" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.10...
* Connected to om (172.26.0.10) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1...</msg>
<status status="PASS" starttime="20200630 10:48:17.942" endtime="20200630 10:48:17.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200630 10:48:17.973" endtime="20200630 10:48:17.973"></status>
</kw>
<status status="PASS" starttime="20200630 10:48:17.859" endtime="20200630 10:48:17.974"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 10:48:17.858" endtime="20200630 10:48:17.974" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Test OM DB Checkpoint">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_DB_CHECKPOINT_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:48:17.980" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:48:17.982" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:48:17.982" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:48:17.977" endtime="20200630 10:48:17.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:48:17.983" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:48:17.982" endtime="20200630 10:48:17.983"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:48:17.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:48:17.983" endtime="20200630 10:48:17.984"></status>
</kw>
<status status="PASS" starttime="20200630 10:48:17.976" endtime="20200630 10:48:17.984"></status>
</kw>
<status status="PASS" starttime="20200630 10:48:17.976" endtime="20200630 10:48:17.984"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:48:17.988" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/dbCheckpoint 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:48:18.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:48:18.001" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.10...
* Connected to om (172.26.0.10) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*...</msg>
<status status="PASS" starttime="20200630 10:48:17.985" endtime="20200630 10:48:18.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:48:18.002" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.10...
* Connected to om (172.26.0.10) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 417
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 417
</msg>
<status status="PASS" starttime="20200630 10:48:18.001" endtime="20200630 10:48:18.002"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:48:18.003" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:48:18.002" endtime="20200630 10:48:18.003"></status>
</kw>
<msg timestamp="20200630 10:48:18.003" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.10...
* Connected to om (172.26.0.10) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*...</msg>
<status status="PASS" starttime="20200630 10:48:17.984" endtime="20200630 10:48:18.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200630 10:48:18.003" endtime="20200630 10:48:18.004"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:48:18.007" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:48:18.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:48:18.010" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200630 10:48:18.005" endtime="20200630 10:48:18.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:48:18.011" level="INFO">scm</msg>
<status status="PASS" starttime="20200630 10:48:18.010" endtime="20200630 10:48:18.011"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:48:18.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:48:18.011" endtime="20200630 10:48:18.012"></status>
</kw>
<msg timestamp="20200630 10:48:18.012" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200630 10:48:18.005" endtime="20200630 10:48:18.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200630 10:48:18.013" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200630 10:48:18.012" endtime="20200630 10:48:18.013"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:48:18.016" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:48:18.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:48:18.027" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:48:18.014" endtime="20200630 10:48:18.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:48:18.028" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:48:18.027" endtime="20200630 10:48:18.028"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:48:18.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:48:18.028" endtime="20200630 10:48:18.029"></status>
</kw>
<status status="PASS" starttime="20200630 10:48:18.014" endtime="20200630 10:48:18.029"></status>
</kw>
<status status="PASS" starttime="20200630 10:48:18.013" endtime="20200630 10:48:18.029"></status>
</kw>
<status status="PASS" starttime="20200630 10:48:18.004" endtime="20200630 10:48:18.029"></status>
</kw>
<status status="PASS" starttime="20200630 10:48:18.004" endtime="20200630 10:48:18.029"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:48:18.033" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/dbCheckpoint 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:48:18.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:48:18.090" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.10...
* Connected to om (172.26.0.10) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*...</msg>
<status status="PASS" starttime="20200630 10:48:18.030" endtime="20200630 10:48:18.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:48:18.092" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.10...
* Connected to om (172.26.0.10) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 417
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/dbCheckpoint'
* Found bundle for host om: 0x13b5f50
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.10) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQaloGJfiTSj7K436na+K9BTJ0VwXQPlQGppHhl1EjHHSu8fRmsWmMsC+4CafpE6nm8iNs/jhd4lS0KyQoK2UIUSJCB07sUarwz3x7O3nyqeJhd8oje2s2N+Wp711LwS2jWddT8y+FpHstOWdCg2SCIWTP/7fPCFtKhje0ds7DeTTaPe+TW/G6ActsWxc/MV7R19M0OTWZ4c7WMIdaO9ZKgkfzh3QuS0Hab42EJ6UW4OSnAVTDTy7ZaYJ97KiuuiTHrBRGN71oLklvdA/cF4HYfwZuPAJhxOcBHizfbdQjCEzrCnI9D8GtCbcBBLfubJI5CKUCrXcGtrCcBkMJ6wZvOam4f+W6vgpIHWMIHToAMCARKigcsEgcjeUYnIOOilbsw7gIYl0fCqRujCMfPrzWhaDz2pz4AAyTvTCJL9rkh4GOYosKmAiN2dxbqq647M/d+pmTUhP+ii2ECQh3fwpcG1ZdI+ja6GLPBdwNerNhv704HrLrVq70FuVlz8xXFP6gKmYiMc90A1dmcUFv8CwZ0hhx1G0JTrsCtNckfudStgmusGTajlQpnll/wq2uPccw/XFJjQ82lFkOsnEd5LTcn/T9GW2RRxIh08JoVshnzO2fiwZaEMYNJIvvQdhnVJFA==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 10:48:18 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 10:48:18 GMT
&lt; Date: Tue, 30 Jun 2020 10:48:18 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/x-tgz
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC0t/QHW6dcmTPUHlWkz7AoxwBCYa/dNwr5mqcp3JpqxNPcWDKZAMNTuWYbYnAuWQbgyf7j5z10WQHMdar3IMXyX6D
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593550098052&amp;s=OhsW9JMwO/xXwGmEC4xbKQ6k3CHX+GJIdebT9uMWDEo="; Path=/; HttpOnly
&lt; Content-Disposition: attachment; filename="rdb_rdb_checkpoint_1593514098052.tgz"
&lt; Content-Length: 75005
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 417

HTTP/1.1 200 OK
Date: Tue, 30 Jun 2020 10:48:18 GMT
Cache-Control: no-cache
Expires: Tue, 30 Jun 2020 10:48:18 GMT
Date: Tue, 30 Jun 2020 10:48:18 GMT
Pragma: no-cache
Content-Type: application/x-tgz
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC0t/QHW6dcmTPUHlWkz7AoxwBCYa/dNwr5mqcp3JpqxNPcWDKZAMNTuWYbYnAuWQbgyf7j5z10WQHMdar3IMXyX6D
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593550098052&amp;s=OhsW9JMwO/xXwGmEC4xbKQ6k3CHX+GJIdebT9uMWDEo="; Path=/; HttpOnly
Content-Disposition: attachment; filename="rdb_rdb_checkpoint_1593514098052.tgz"
Content-Length: 75005
</msg>
<status status="PASS" starttime="20200630 10:48:18.091" endtime="20200630 10:48:18.092"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:48:18.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:48:18.092" endtime="20200630 10:48:18.093"></status>
</kw>
<msg timestamp="20200630 10:48:18.093" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.10...
* Connected to om (172.26.0.10) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*...</msg>
<status status="PASS" starttime="20200630 10:48:18.029" endtime="20200630 10:48:18.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200630 10:48:18.093" endtime="20200630 10:48:18.093"></status>
</kw>
<status status="PASS" starttime="20200630 10:48:17.975" endtime="20200630 10:48:18.093"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 10:48:17.974" endtime="20200630 10:48:18.094" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Test OM Service List">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_SERVICE_LIST_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:48:18.099" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:48:18.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:48:18.103" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:48:18.097" endtime="20200630 10:48:18.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:48:18.103" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:48:18.103" endtime="20200630 10:48:18.104"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:48:18.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:48:18.104" endtime="20200630 10:48:18.104"></status>
</kw>
<status status="PASS" starttime="20200630 10:48:18.097" endtime="20200630 10:48:18.104"></status>
</kw>
<status status="PASS" starttime="20200630 10:48:18.096" endtime="20200630 10:48:18.105"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:48:18.108" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/serviceList 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:48:18.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:48:18.121" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.10...
* Connected to om (172.26.0.10) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
...</msg>
<status status="PASS" starttime="20200630 10:48:18.105" endtime="20200630 10:48:18.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:48:18.122" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.10...
* Connected to om (172.26.0.10) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 415
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 415
</msg>
<status status="PASS" starttime="20200630 10:48:18.122" endtime="20200630 10:48:18.122"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:48:18.123" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:48:18.122" endtime="20200630 10:48:18.123"></status>
</kw>
<msg timestamp="20200630 10:48:18.123" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.10...
* Connected to om (172.26.0.10) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
...</msg>
<status status="PASS" starttime="20200630 10:48:18.105" endtime="20200630 10:48:18.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200630 10:48:18.123" endtime="20200630 10:48:18.123"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:48:18.128" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:48:18.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:48:18.130" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200630 10:48:18.125" endtime="20200630 10:48:18.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:48:18.131" level="INFO">scm</msg>
<status status="PASS" starttime="20200630 10:48:18.130" endtime="20200630 10:48:18.131"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:48:18.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:48:18.131" endtime="20200630 10:48:18.132"></status>
</kw>
<msg timestamp="20200630 10:48:18.132" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200630 10:48:18.125" endtime="20200630 10:48:18.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200630 10:48:18.133" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200630 10:48:18.132" endtime="20200630 10:48:18.133"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:48:18.137" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:48:18.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:48:18.147" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:48:18.134" endtime="20200630 10:48:18.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:48:18.148" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:48:18.147" endtime="20200630 10:48:18.148"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:48:18.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:48:18.148" endtime="20200630 10:48:18.149"></status>
</kw>
<status status="PASS" starttime="20200630 10:48:18.134" endtime="20200630 10:48:18.149"></status>
</kw>
<status status="PASS" starttime="20200630 10:48:18.133" endtime="20200630 10:48:18.149"></status>
</kw>
<status status="PASS" starttime="20200630 10:48:18.124" endtime="20200630 10:48:18.149"></status>
</kw>
<status status="PASS" starttime="20200630 10:48:18.124" endtime="20200630 10:48:18.149"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:48:18.152" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/serviceList 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:48:18.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:48:18.189" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.10...
* Connected to om (172.26.0.10) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
...</msg>
<status status="PASS" starttime="20200630 10:48:18.150" endtime="20200630 10:48:18.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:48:18.190" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.10...
* Connected to om (172.26.0.10) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 415
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/serviceList'
* Found bundle for host om: 0x18d0f50
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.10) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD /serviceList HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQbAFaLTjmpsVYBIvWJiNlLabgmHTS8tRLR5HXnpiHfpKXnTw2zE6hwd9YxJN2luazNW6xLF+LFL1lqReoT8GQP82H8ntOSLvE1mNHVyyJkjmJKVJ3FcVz4e1VanHzqY2+w1nkbPc16OSoPu9foH8jxVYLKa+KbdOWn52QDKpo/1x7TZ1ctwfGv2fZ6hfg0VpKR/YNaUpxbvflftcPuxUPwLUykmpULU6CJtHax5zmqX0JoDNyJkDxy8DIpkE49I/+RZvWczhXa46kwTLP0Ohd244wz62KP8uQFanxErjjAkh2q/bQYnD0UZrd1eEnf/JYEZd1ncODNenBbiE5yOhhtO6pA4OJb+pIHWMIHToAMCARKigcsEgciO/c2e0Ra0zftXDli8wcdo4GCRQky4Hpx1LTriyXdxh/kvl5Utg73P0zK+HGEmsn+QHTlTXkoWt3h3JNvc+K2joQJA80RAhpb1xn1tVlyYnt94B4CimrDF73MsZBEZ3hnj8KFdUTCeWuohu3X+rxALpcG94CR6Pp9zgIFimuPowXUQPhhZE3aFEDHtDrxwVvcX84fGF91gjImMkxv1Sd/gwfrnIPgFLjnkHvoFQSeM0ci/9X9n3jEje6MVgCPSJYZvStW0rKff5Q==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 10:48:18 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 10:48:18 GMT
&lt; Date: Tue, 30 Jun 2020 10:48:18 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json; charset=utf8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCRR+jDrokC5XfJI+ccfJ8M8CvT8es7/YIYEkNq7FUy+FE91U5NA5YCA3lTIugrwl28RyD7oq309Kj10/9YOuIdbQV
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593550098178&amp;s=visjCb12yWH9mq5x8aRR7Mq4voBoUtgcDabQ9VT6+yw="; Path=/; HttpOnly
&lt; Content-Length: 207
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 415

HTTP/1.1 200 OK
Date: Tue, 30 Jun 2020 10:48:18 GMT
Cache-Control: no-cache
Expires: Tue, 30 Jun 2020 10:48:18 GMT
Date: Tue, 30 Jun 2020 10:48:18 GMT
Pragma: no-cache
Content-Type: application/json; charset=utf8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCRR+jDrokC5XfJI+ccfJ8M8CvT8es7/YIYEkNq7FUy+FE91U5NA5YCA3lTIugrwl28RyD7oq309Kj10/9YOuIdbQV
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593550098178&amp;s=visjCb12yWH9mq5x8aRR7Mq4voBoUtgcDabQ9VT6+yw="; Path=/; HttpOnly
Content-Length: 207
</msg>
<status status="PASS" starttime="20200630 10:48:18.190" endtime="20200630 10:48:18.190"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:48:18.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:48:18.191" endtime="20200630 10:48:18.191"></status>
</kw>
<msg timestamp="20200630 10:48:18.191" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.10...
* Connected to om (172.26.0.10) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
...</msg>
<status status="PASS" starttime="20200630 10:48:18.149" endtime="20200630 10:48:18.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200630 10:48:18.192" endtime="20200630 10:48:18.192"></status>
</kw>
<status status="PASS" starttime="20200630 10:48:18.096" endtime="20200630 10:48:18.192"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 10:48:18.094" endtime="20200630 10:48:18.192" critical="yes"></status>
</test>
<test id="s1-s1-t5" name="Test SCM portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${SCM_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:48:18.198" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:48:18.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:48:18.202" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:48:18.195" endtime="20200630 10:48:18.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:48:18.203" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:48:18.202" endtime="20200630 10:48:18.203"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:48:18.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:48:18.203" endtime="20200630 10:48:18.203"></status>
</kw>
<status status="PASS" starttime="20200630 10:48:18.195" endtime="20200630 10:48:18.204"></status>
</kw>
<status status="PASS" starttime="20200630 10:48:18.194" endtime="20200630 10:48:18.204"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:48:18.207" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://scm:9876 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:48:18.235" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:48:18.235" level="INFO">${output} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.4...
* Connected to scm (172.26.0.4) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200630 10:48:18.204" endtime="20200630 10:48:18.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:48:18.236" level="INFO">* About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.4...
* Connected to scm (172.26.0.4) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host scm left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200630 10:48:18.235" endtime="20200630 10:48:18.236"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:48:18.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:48:18.237" endtime="20200630 10:48:18.238"></status>
</kw>
<msg timestamp="20200630 10:48:18.238" level="INFO">${result} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.4...
* Connected to scm (172.26.0.4) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200630 10:48:18.204" endtime="20200630 10:48:18.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200630 10:48:18.238" endtime="20200630 10:48:18.238"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:48:18.243" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:48:18.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:48:18.246" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200630 10:48:18.240" endtime="20200630 10:48:18.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:48:18.247" level="INFO">scm</msg>
<status status="PASS" starttime="20200630 10:48:18.246" endtime="20200630 10:48:18.247"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:48:18.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:48:18.247" endtime="20200630 10:48:18.247"></status>
</kw>
<msg timestamp="20200630 10:48:18.248" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200630 10:48:18.240" endtime="20200630 10:48:18.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200630 10:48:18.248" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200630 10:48:18.248" endtime="20200630 10:48:18.248"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:48:18.252" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:48:18.263" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:48:18.263" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:48:18.250" endtime="20200630 10:48:18.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:48:18.263" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:48:18.263" endtime="20200630 10:48:18.264"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:48:18.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:48:18.264" endtime="20200630 10:48:18.264"></status>
</kw>
<status status="PASS" starttime="20200630 10:48:18.249" endtime="20200630 10:48:18.265"></status>
</kw>
<status status="PASS" starttime="20200630 10:48:18.249" endtime="20200630 10:48:18.265"></status>
</kw>
<status status="PASS" starttime="20200630 10:48:18.239" endtime="20200630 10:48:18.265"></status>
</kw>
<status status="PASS" starttime="20200630 10:48:18.239" endtime="20200630 10:48:18.265"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:48:18.268" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://scm:9876 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:48:18.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:48:18.297" level="INFO">${output} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.4...
* Connected to scm (172.26.0.4) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200630 10:48:18.265" endtime="20200630 10:48:18.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:48:18.298" level="INFO">* About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.4...
* Connected to scm (172.26.0.4) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host scm left intact
* Issue another request to this URL: 'http://scm:9876/'
* Found bundle for host scm: 0x2283f20
* Re-using existing connection! (#0) with host scm
* Connected to scm (172.26.0.4) port 9876 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWQYJKoZIhvcSAQICAQBuggJIMIICRKADAgEFoQMCAQ6iBwMFACAAAACjggFUYYIBUDCCAUygAwIBBaENGwtFWEFNUExFLkNPTaIWMBSgAwIBA6ENMAsbBEhUVFAbA3NjbaOCARwwggEYoAMCARKhAwIBAqKCAQoEggEG6dXgfMTZilInjrVlyI3UGH61mTZeDbBhyiJ/wduNUJysKNQ/F8TyMQvUCp3kNWMHjUUSF58QM6p+ZWVy0WB1U1RRqNvM3dYM8ClhFGuxXKy0SBxF6JedHnBuxWF50/dNZna+Idfv9qkzjFmBG1tNd5yGISX9X5n+RVOXBktus2ZAynpaRmF4wR/WjJVUHNMMqwpZR526id9TzPBtECI3sxpG/92BBPGQkCg52rndlsV0+fZDaNtz/OyOxOG8Uz9B+q6QucUwK4Fm+ZSU2cqCZjTe5X9IhXl9SiWGU+u3oTeg/EtBugtmzX9Jd0whHaYeQ94v7ki2tNQndQ/GWqULZmrojYEjWKSB1jCB06ADAgESooHLBIHI5la/8n/Lh5alt2W7UYXaBBy6rHviT1D0WHjYXBQZL6iEQV9/sq+iUI4JiJKSqnggGeVdVb1fX1CdGXAOTVUPIK4BAnBMRhRO25Qh6j9oFmlM8ni/0OKO1VZyfHHjQw8O71I+zazvDm0g6pj3Gfk7h/FJ8iBqtusn68kpZKPhG8C2/4zZLbStuDIjR8jBQeUwLrHYqT7AGOb3/C167w0HSFao/6UHwTofIqOQ79Lo9amPCPoG2202vJoa5cPb4cv34feHkauAKco=
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 10:48:18 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 10:48:18 GMT
&lt; Date: Tue, 30 Jun 2020 10:48:18 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Tue, 30 Jun 2020 10:48:18 GMT
&lt; Date: Tue, 30 Jun 2020 10:48:18 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC2XZvMsd1TUqf7/40WflyPsQpo4tyHufxGZtvnYYzUZwLYv9Vma4kY/Jpj4uHcyZ4tG8fQtHcIFrc7SZ4C++TBEjh
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593550098292&amp;s=jbNdb+kj6RPDyG7bhpp+zWOWlqKtn0YJkHDlDWq1v+Y="; Path=/; HttpOnly
&lt; Last-Modified: Tue, 30 Jun 2020 09:25:38 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2923
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Tue, 30 Jun 2020 10:48:18 GMT
Cache-Control: no-cache
Expires: Tue, 30 Jun 2020 10:48:18 GMT
Date: Tue, 30 Jun 2020 10:48:18 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Tue, 30 Jun 2020 10:48:18 GMT
Date: Tue, 30 Jun 2020 10:48:18 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC2XZvMsd1TUqf7/40WflyPsQpo4tyHufxGZtvnYYzUZwLYv9Vma4kY/Jpj4uHcyZ4tG8fQtHcIFrc7SZ4C++TBEjh
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593550098292&amp;s=jbNdb+kj6RPDyG7bhpp+zWOWlqKtn0YJkHDlDWq1v+Y="; Path=/; HttpOnly
Last-Modified: Tue, 30 Jun 2020 09:25:38 GMT
Accept-Ranges: bytes
Content-Length: 2923
</msg>
<status status="PASS" starttime="20200630 10:48:18.297" endtime="20200630 10:48:18.298"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:48:18.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:48:18.298" endtime="20200630 10:48:18.299"></status>
</kw>
<msg timestamp="20200630 10:48:18.299" level="INFO">${result} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.4...
* Connected to scm (172.26.0.4) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200630 10:48:18.265" endtime="20200630 10:48:18.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200630 10:48:18.299" endtime="20200630 10:48:18.300"></status>
</kw>
<status status="PASS" starttime="20200630 10:48:18.193" endtime="20200630 10:48:18.300"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 10:48:18.193" endtime="20200630 10:48:18.300" critical="yes"></status>
</test>
<test id="s1-s1-t6" name="Test Recon portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${RECON_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:48:18.305" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:48:18.309" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:48:18.309" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:48:18.303" endtime="20200630 10:48:18.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:48:18.310" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:48:18.310" endtime="20200630 10:48:18.310"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:48:18.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:48:18.311" endtime="20200630 10:48:18.311"></status>
</kw>
<status status="PASS" starttime="20200630 10:48:18.303" endtime="20200630 10:48:18.311"></status>
</kw>
<status status="PASS" starttime="20200630 10:48:18.302" endtime="20200630 10:48:18.311"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:48:18.315" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:48:18.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:48:18.339" level="INFO">${output} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200630 10:48:18.312" endtime="20200630 10:48:18.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:48:18.340" level="INFO">* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host recon left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200630 10:48:18.340" endtime="20200630 10:48:18.340"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:48:18.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:48:18.341" endtime="20200630 10:48:18.341"></status>
</kw>
<msg timestamp="20200630 10:48:18.341" level="INFO">${result} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200630 10:48:18.311" endtime="20200630 10:48:18.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200630 10:48:18.342" endtime="20200630 10:48:18.342"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:48:18.346" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:48:18.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:48:18.348" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200630 10:48:18.343" endtime="20200630 10:48:18.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:48:18.349" level="INFO">scm</msg>
<status status="PASS" starttime="20200630 10:48:18.348" endtime="20200630 10:48:18.349"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:48:18.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:48:18.349" endtime="20200630 10:48:18.350"></status>
</kw>
<msg timestamp="20200630 10:48:18.350" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200630 10:48:18.343" endtime="20200630 10:48:18.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200630 10:48:18.351" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200630 10:48:18.350" endtime="20200630 10:48:18.351"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:48:18.355" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:48:18.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:48:18.371" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:48:18.352" endtime="20200630 10:48:18.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:48:18.372" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:48:18.371" endtime="20200630 10:48:18.372"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:48:18.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:48:18.372" endtime="20200630 10:48:18.373"></status>
</kw>
<status status="PASS" starttime="20200630 10:48:18.351" endtime="20200630 10:48:18.373"></status>
</kw>
<status status="PASS" starttime="20200630 10:48:18.351" endtime="20200630 10:48:18.373"></status>
</kw>
<status status="PASS" starttime="20200630 10:48:18.343" endtime="20200630 10:48:18.373"></status>
</kw>
<status status="PASS" starttime="20200630 10:48:18.342" endtime="20200630 10:48:18.373"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:48:18.377" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:48:18.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:48:18.403" level="INFO">${output} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200630 10:48:18.374" endtime="20200630 10:48:18.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:48:18.404" level="INFO">* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host recon left intact
* Issue another request to this URL: 'http://recon:9888/'
* Found bundle for host recon: 0x19e9f20
* Re-using existing connection! (#0) with host recon
* Connected to recon (172.26.0.9) port 9888 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWwYJKoZIhvcSAQICAQBuggJKMIICRqADAgEFoQMCAQ6iBwMFACAAAACjggFWYYIBUjCCAU6gAwIBBaENGwtFWEFNUExFLkNPTaIYMBagAwIBA6EPMA0bBEhUVFAbBXJlY29uo4IBHDCCARigAwIBEqEDAgECooIBCgSCAQYk1YxDZh0NEr0m0pMe+vXHC4cSAMcki8+OKPa7jZmOy4mIMlpTQcBqJadP08JJvpATIby6U4raXtzp7R72+bLu3OoobYhebba/7qQ8WlV962nwZZ6G1r99OdBhxN9rCgEFzMbZtqGDGkaqPitfoX0lrNMBmeJsWohtbg7NmN78iyJ9TCzpKmjLXlba7ZSHBdKmloLyEMevpqGUF8dQ7POah3/hPGRs1mlUrdiQeNPim33fIaFCRO195epClkm0POIIQppD5VCYgtfGgIbHFZSkfOzuqM/pea5vJlFUPKf6KmHbfoWZGsWzwPTlMr87NYsUiDu6qV0TgLJUTiN8BwcD6Rei4DMZpIHWMIHToAMCARKigcsEgciQGXGCEdBOqtuM3ioGDITKrWMuruNP1IOMSATL56ozOkqF0G+71n+yp+D8L31ognpmZyecc5be1raI4O+TSA7cwP/IU8evxwtwMvX6/nvfxGZZVstyKSYe4sj/cdUg+t6WJexVeRsA0hvq6em7pqnBzTjP0oAW1rBBkTCi8/JRD1VaslyhMctq7Na5Cw/pQp2zBhuSsmqeng5hhu3AsA2PNrnT74hWvXjGb2s4krBMiqVoeDRm48aHTpmbpGxC1NdnvF9RoCKkkw==
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 10:48:18 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 10:48:18 GMT
&lt; Date: Tue, 30 Jun 2020 10:48:18 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Tue, 30 Jun 2020 10:48:18 GMT
&lt; Date: Tue, 30 Jun 2020 10:48:18 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCcteZV49zRrcLaeQeGIxKL0xFDTy0DGaVjPEuZUA08/hgvFM8hywzr2Q/0lwM1xRWywuN5PUu0+4omghnEltwPvMg
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593550098398&amp;s=AZYnV7IhxNk4qZJkiFyDgc+b848EseHhvmmW4bbvSO4="; Path=/; HttpOnly
&lt; Last-Modified: Tue, 30 Jun 2020 09:31:08 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2267
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Tue, 30 Jun 2020 10:48:18 GMT
Cache-Control: no-cache
Expires: Tue, 30 Jun 2020 10:48:18 GMT
Date: Tue, 30 Jun 2020 10:48:18 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Tue, 30 Jun 2020 10:48:18 GMT
Date: Tue, 30 Jun 2020 10:48:18 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCcteZV49zRrcLaeQeGIxKL0xFDTy0DGaVjPEuZUA08/hgvFM8hywzr2Q/0lwM1xRWywuN5PUu0+4omghnEltwPvMg
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593550098398&amp;s=AZYnV7IhxNk4qZJkiFyDgc+b848EseHhvmmW4bbvSO4="; Path=/; HttpOnly
Last-Modified: Tue, 30 Jun 2020 09:31:08 GMT
Accept-Ranges: bytes
Content-Length: 2267
</msg>
<status status="PASS" starttime="20200630 10:48:18.404" endtime="20200630 10:48:18.404"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:48:18.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:48:18.405" endtime="20200630 10:48:18.405"></status>
</kw>
<msg timestamp="20200630 10:48:18.406" level="INFO">${result} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200630 10:48:18.373" endtime="20200630 10:48:18.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200630 10:48:18.406" endtime="20200630 10:48:18.406"></status>
</kw>
<status status="PASS" starttime="20200630 10:48:18.302" endtime="20200630 10:48:18.406"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 10:48:18.301" endtime="20200630 10:48:18.406" critical="yes"></status>
</test>
<doc>Smoke test for spnego with docker-compose environments.</doc>
<status status="PASS" starttime="20200630 10:48:08.894" endtime="20200630 10:48:18.408"></status>
</suite>
<status status="PASS" starttime="20200630 10:48:08.860" endtime="20200630 10:48:18.411"></status>
</suite>
<statistics>
<total>
<stat pass="6" fail="0">Critical Tests</stat>
<stat pass="6" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="6" fail="0" id="s1" name="ozonesecure-spnego">ozonesecure-spnego</stat>
<stat pass="6" fail="0" id="s1-s1" name="Web">ozonesecure-spnego.Web</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
