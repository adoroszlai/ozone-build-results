<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200630 11:17:09.238" rpa="false">
<suite id="s1" name="ozonesecure-recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s1-t1" name="Generate Freon data">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:17:09.306" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:17:09.309" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:17:09.309" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200630 11:17:09.302" endtime="20200630 11:17:09.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:17:09.310" level="INFO">scm</msg>
<status status="PASS" starttime="20200630 11:17:09.309" endtime="20200630 11:17:09.310"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:17:09.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:17:09.310" endtime="20200630 11:17:09.311"></status>
</kw>
<msg timestamp="20200630 11:17:09.311" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200630 11:17:09.301" endtime="20200630 11:17:09.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200630 11:17:09.313" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200630 11:17:09.312" endtime="20200630 11:17:09.313"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:17:09.316" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:17:09.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:17:09.327" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 11:17:09.314" endtime="20200630 11:17:09.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:17:09.328" level="INFO"></msg>
<status status="PASS" starttime="20200630 11:17:09.328" endtime="20200630 11:17:09.329"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:17:09.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:17:09.329" endtime="20200630 11:17:09.329"></status>
</kw>
<status status="PASS" starttime="20200630 11:17:09.313" endtime="20200630 11:17:09.329"></status>
</kw>
<status status="PASS" starttime="20200630 11:17:09.313" endtime="20200630 11:17:09.329"></status>
</kw>
<status status="PASS" starttime="20200630 11:17:09.301" endtime="20200630 11:17:09.330"></status>
</kw>
<status status="PASS" starttime="20200630 11:17:09.300" endtime="20200630 11:17:09.330"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:17:09.332" level="INFO">Running command 'ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:17:18.163" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:17:18.163" level="INFO">${output} = 2020-06-30 11:17:10,695 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 11:17:10,923 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 11:17:09.330" endtime="20200630 11:17:18.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:17:18.165" level="INFO">2020-06-30 11:17:10,695 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 11:17:10,923 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-30 11:17:10,923 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-06-30 11:17:12,614 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2020-06-30 11:17:12,614 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-06-30 11:17:12,614 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-06-30 11:17:12,615 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 10.
2020-06-30 11:17:12,615 [main] INFO freon.RandomKeyGenerator: Key size: 1025 bytes
2020-06-30 11:17:12,615 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-30 11:17:12,615 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-06-30 11:17:12,639 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-30 11:17:12,648 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2020-06-30 11:17:12,682 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-28727, with testuser/scm@EXAMPLE.COM as owner.
2020-06-30 11:17:12,710 [pool-2-thread-2] INFO rpc.RpcClient: Creating Bucket: vol-0-28727/bucket-0-84192, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 11:17:13,270 [pool-2-thread-5] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-30 11:17:13,649 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 10
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,006
Average Time spent in bucket creation: 00:00:00,001
Average Time spent in key creation: 00:00:00,142
Average Time spent in key write: 00:00:00,524
Total bytes written: 10250
Total Execution time: 00:00:06,651
***************************************************</msg>
<status status="PASS" starttime="20200630 11:17:18.164" endtime="20200630 11:17:18.165"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:17:18.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:17:18.165" endtime="20200630 11:17:18.166"></status>
</kw>
<status status="PASS" starttime="20200630 11:17:09.330" endtime="20200630 11:17:18.166"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 11:17:09.300" endtime="20200630 11:17:18.166" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Check if Recon picks up OM data">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
</arguments>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:17:18.172" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:17:18.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:17:18.175" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200630 11:17:18.170" endtime="20200630 11:17:18.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:17:18.176" level="INFO">scm</msg>
<status status="PASS" starttime="20200630 11:17:18.175" endtime="20200630 11:17:18.176"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:17:18.177" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:17:18.176" endtime="20200630 11:17:18.177"></status>
</kw>
<msg timestamp="20200630 11:17:18.177" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200630 11:17:18.169" endtime="20200630 11:17:18.177"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:17:18.180" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:17:18.191" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:17:18.191" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 11:17:18.178" endtime="20200630 11:17:18.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:17:18.192" level="INFO"></msg>
<status status="PASS" starttime="20200630 11:17:18.191" endtime="20200630 11:17:18.192"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:17:18.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:17:18.192" endtime="20200630 11:17:18.193"></status>
</kw>
<status status="PASS" starttime="20200630 11:17:18.178" endtime="20200630 11:17:18.193"></status>
</kw>
<status status="PASS" starttime="20200630 11:17:18.177" endtime="20200630 11:17:18.193"></status>
</kw>
<status status="PASS" starttime="20200630 11:17:18.169" endtime="20200630 11:17:18.193"></status>
</kw>
<status status="PASS" starttime="20200630 11:17:18.169" endtime="20200630 11:17:18.193"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:17:18.197" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:17:18.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:17:18.391" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 11:17:18.194" endtime="20200630 11:17:18.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:17:18.392" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.10...

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* Connected to recon (172.26.0.10) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 11:17:18 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 11:17:18 GMT
&lt; Date: Tue, 30 Jun 2020 11:17:18 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0    407      0 --:--:-- --:--:-- --:--:--   407
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":146}]}}</msg>
<status status="PASS" starttime="20200630 11:17:18.391" endtime="20200630 11:17:18.392"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:17:18.392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:17:18.392" endtime="20200630 11:17:18.392"></status>
</kw>
<msg timestamp="20200630 11:17:18.393" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 11:17:18.193" endtime="20200630 11:17:18.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200630 11:17:18.393" endtime="20200630 11:17:18.393"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:17:18.399" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:17:18.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:17:18.442" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 11:17:18.394" endtime="20200630 11:17:18.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:17:18.443" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.10...
* Connected to recon (172.26.0.10) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 11:17:18 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 11:17:18 GMT
&lt; Date: Tue, 30 Jun 2020 11:17:18 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3137
&lt; 
{ [data not shown]

100  3137  100  3137    0     0  92967      0 --:--:-- --:--:-- --:--:-- 95060
* Connection #0 to host recon left intact
[{"volume":"vol-3-42626","bucket":"bucket-3-21483","fileSize":16384,"count":5},{"volume":"vol-4-68106","bucket":"bucket-4-88740","fileSize":16384,"count":5},{"volume":"vol-2-32809","bucket":"bucket-2-40080","fileSize":16384,"count":5},{"volume":"vol-4-68106","bucket":"bucket-2-02052","fileSize":16384,"count":5},{"volume":"vol-3-42626","bucket":"bucket-4-46594","fileSize":16384,"count":5},{"volume":"vol-0-64335","bucket":"bucket-2-12548","fileSize":16384,"count":5},{"volume":"vol-4-68106","bucket":"bucket-1-72846","fileSize":16384,"count":5},{"volume":"vol-3-42626","bucket":"bucket-1-70720","fileSize":16384,"count":5},{"volume":"vol-0-64335","bucket":"bucket-4-71806","fileSize":16384,"count":5},{"volume":"vol-2-32809","bucket":"bucket-0-97791","fileSize":16384,"count":5},{"volume":"vol-2-32809","bucket":"bucket-3-84864","fileSize":16384,"count":5},{"volume":"vol-0-64335","bucket":"bucket-0-64300","fileSize":16384,"count":5},{"volume":"vol-2-32809","bucket":"bucket-4-94196","fileSize":16384,"count":5},{"volume":"vol-4-68106","bucket":"bucket-3-21344","fileSize":16384,"count":5},{"volume":"vol-1-39933","bucket":"bucket-3-87142","fileSize":16384,"count":5},{"volume":"vol-0-64335","bucket":"bucket-3-25797","fileSize":16384,"count":5},{"volume":"vol-2-32809","bucket":"bucket-1-83045","fileSize":16384,"count":5},{"volume":"vol-1-39933","bucket":"bucket-0-08340","fileSize":16384,"count":5},{"volume":"vol-1-39933","bucket":"bucket-2-51146","fileSize":16384,"count":5},{"volume":"vol-3-42626","bucket":"bucket-0-69492","fileSize":16384,"count":5},{"volume":"vol-3-42626","bucket":"bucket-2-10313","fileSize":16384,"count":5},{"volume":"vol-4-68106","bucket":"bucket-0-45574","fileSize":16384,"count":5},{"volume":"vol-1-39933","bucket":"bucket-4-28701","fileSize":16384,"count":5},{"volume":"vol-1-39933","bucket":"bucket-1-53574","fileSize":16384,"count":5},{"volume":"vol-0-64335","bucket":"bucket-1-58883","fileSize":16384,"count":5},{"volume":"31932-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"31932-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"31932-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"31932-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest302","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket2-o3fs","fileSize":1024,"count":0},{"volume":"s3v","bucket":"bucket-95417","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-77230","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-77230","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-81163","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-36393","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-48041","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-48450","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200630 11:17:18.442" endtime="20200630 11:17:18.443"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:17:18.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:17:18.444" endtime="20200630 11:17:18.444"></status>
</kw>
<msg timestamp="20200630 11:17:18.444" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 11:17:18.394" endtime="20200630 11:17:18.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200630 11:17:18.445" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.10...
* Connected to recon (172.26.0.10) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 11:17:18 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 11:17:18 GMT
&lt; Date: Tue, 30 Jun 2020 11:17:18 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3137
&lt; 
{ [data not shown]

100  3137  100  3137    0     0  92967      0 --:--:-- --:--:-- --:--:-- 95060
* Connection #0 to host recon left intact
[{"volume":"vol-3-42626","bucket":"bucket-3-21483","fileSize":16384,"count":5},{"volume":"vol-4-68106","bucket":"bucket-4-88740","fileSize":16384,"count":5},{"volume":"vol-2-32809","bucket":"bucket-2-40080","fileSize":16384,"count":5},{"volume":"vol-4-68106","bucket":"bucket-2-02052","fileSize":16384,"count":5},{"volume":"vol-3-42626","bucket":"bucket-4-46594","fileSize":16384,"count":5},{"volume":"vol-0-64335","bucket":"bucket-2-12548","fileSize":16384,"count":5},{"volume":"vol-4-68106","bucket":"bucket-1-72846","fileSize":16384,"count":5},{"volume":"vol-3-42626","bucket":"bucket-1-70720","fileSize":16384,"count":5},{"volume":"vol-0-64335","bucket":"bucket-4-71806","fileSize":16384,"count":5},{"volume":"vol-2-32809","bucket":"bucket-0-97791","fileSize":16384,"count":5},{"volume":"vol-2-32809","bucket":"bucket-3-84864","fileSize":16384,"count":5},{"volume":"vol-0-64335","bucket":"bucket-0-64300","fileSize":16384,"count":5},{"volume":"vol-2-32809","bucket":"bucket-4-94196","fileSize":16384,"count":5},{"volume":"vol-4-68106","bucket":"bucket-3-21344","fileSize":16384,"count":5},{"volume":"vol-1-39933","bucket":"bucket-3-87142","fileSize":16384,"count":5},{"volume":"vol-0-64335","bucket":"bucket-3-25797","fileSize":16384,"count":5},{"volume":"vol-2-32809","bucket":"bucket-1-83045","fileSize":16384,"count":5},{"volume":"vol-1-39933","bucket":"bucket-0-08340","fileSize":16384,"count":5},{"volume":"vol-1-39933","bucket":"bucket-2-51146","fileSize":16384,"count":5},{"volume":"vol-3-42626","bucket":"bucket-0-69492","fileSize":16384,"count":5},{"volume":"vol-3-42626","bucket":"bucket-2-10313","fileSize":16384,"count":5},{"volume":"vol-4-68106","bucket":"bucket-0-45574","fileSize":16384,"count":5},{"volume":"vol-1-39933","bucket":"bucket-4-28701","fileSize":16384,"count":5},{"volume":"vol-1-39933","bucket":"bucket-1-53574","fileSize":16384,"count":5},{"volume":"vol-0-64335","bucket":"bucket-1-58883","fileSize":16384,"count":5},{"volume":"31932-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"31932-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"31932-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"31932-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest302","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket2-o3fs","fileSize":1024,"count":0},{"volume":"s3v","bucket":"bucket-95417","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-77230","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-77230","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-81163","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-36393","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-48041","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-48450","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200630 11:17:18.444" endtime="20200630 11:17:18.445"></status>
</kw>
<status status="FAIL" starttime="20200630 11:17:18.168" endtime="20200630 11:17:18.446"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:17:28.451" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:17:28.454" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:17:28.454" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200630 11:17:28.449" endtime="20200630 11:17:28.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:17:28.455" level="INFO">scm</msg>
<status status="PASS" starttime="20200630 11:17:28.455" endtime="20200630 11:17:28.455"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:17:28.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:17:28.455" endtime="20200630 11:17:28.456"></status>
</kw>
<msg timestamp="20200630 11:17:28.456" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200630 11:17:28.448" endtime="20200630 11:17:28.456"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:17:28.459" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:17:28.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:17:28.477" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 11:17:28.458" endtime="20200630 11:17:28.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:17:28.478" level="INFO"></msg>
<status status="PASS" starttime="20200630 11:17:28.477" endtime="20200630 11:17:28.478"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:17:28.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:17:28.478" endtime="20200630 11:17:28.479"></status>
</kw>
<status status="PASS" starttime="20200630 11:17:28.457" endtime="20200630 11:17:28.479"></status>
</kw>
<status status="PASS" starttime="20200630 11:17:28.457" endtime="20200630 11:17:28.479"></status>
</kw>
<status status="PASS" starttime="20200630 11:17:28.447" endtime="20200630 11:17:28.479"></status>
</kw>
<status status="PASS" starttime="20200630 11:17:28.447" endtime="20200630 11:17:28.479"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:17:28.482" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:17:28.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:17:28.502" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 11:17:28.480" endtime="20200630 11:17:28.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:17:28.503" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.10...
* Connected to recon (172.26.0.10) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 11:17:28 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 11:17:28 GMT
&lt; Date: Tue, 30 Jun 2020 11:17:28 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0   6052      0 --:--:-- --:--:-- --:--:--  6416
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":146}]}}</msg>
<status status="PASS" starttime="20200630 11:17:28.502" endtime="20200630 11:17:28.503"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:17:28.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:17:28.503" endtime="20200630 11:17:28.504"></status>
</kw>
<msg timestamp="20200630 11:17:28.504" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 11:17:28.479" endtime="20200630 11:17:28.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200630 11:17:28.504" endtime="20200630 11:17:28.505"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:17:28.510" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:17:28.532" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:17:28.532" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 11:17:28.508" endtime="20200630 11:17:28.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:17:28.533" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.10...
* Connected to recon (172.26.0.10) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 11:17:28 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 11:17:28 GMT
&lt; Date: Tue, 30 Jun 2020 11:17:28 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3137
&lt; 
{ [data not shown]

100  3137  100  3137    0     0   219k      0 --:--:-- --:--:-- --:--:--  235k
* Connection #0 to host recon left intact
[{"volume":"vol-3-42626","bucket":"bucket-3-21483","fileSize":16384,"count":5},{"volume":"vol-4-68106","bucket":"bucket-4-88740","fileSize":16384,"count":5},{"volume":"vol-2-32809","bucket":"bucket-2-40080","fileSize":16384,"count":5},{"volume":"vol-4-68106","bucket":"bucket-2-02052","fileSize":16384,"count":5},{"volume":"vol-3-42626","bucket":"bucket-4-46594","fileSize":16384,"count":5},{"volume":"vol-0-64335","bucket":"bucket-2-12548","fileSize":16384,"count":5},{"volume":"vol-4-68106","bucket":"bucket-1-72846","fileSize":16384,"count":5},{"volume":"vol-3-42626","bucket":"bucket-1-70720","fileSize":16384,"count":5},{"volume":"vol-0-64335","bucket":"bucket-4-71806","fileSize":16384,"count":5},{"volume":"vol-2-32809","bucket":"bucket-0-97791","fileSize":16384,"count":5},{"volume":"vol-2-32809","bucket":"bucket-3-84864","fileSize":16384,"count":5},{"volume":"vol-0-64335","bucket":"bucket-0-64300","fileSize":16384,"count":5},{"volume":"vol-2-32809","bucket":"bucket-4-94196","fileSize":16384,"count":5},{"volume":"vol-4-68106","bucket":"bucket-3-21344","fileSize":16384,"count":5},{"volume":"vol-1-39933","bucket":"bucket-3-87142","fileSize":16384,"count":5},{"volume":"vol-0-64335","bucket":"bucket-3-25797","fileSize":16384,"count":5},{"volume":"vol-2-32809","bucket":"bucket-1-83045","fileSize":16384,"count":5},{"volume":"vol-1-39933","bucket":"bucket-0-08340","fileSize":16384,"count":5},{"volume":"vol-1-39933","bucket":"bucket-2-51146","fileSize":16384,"count":5},{"volume":"vol-3-42626","bucket":"bucket-0-69492","fileSize":16384,"count":5},{"volume":"vol-3-42626","bucket":"bucket-2-10313","fileSize":16384,"count":5},{"volume":"vol-4-68106","bucket":"bucket-0-45574","fileSize":16384,"count":5},{"volume":"vol-1-39933","bucket":"bucket-4-28701","fileSize":16384,"count":5},{"volume":"vol-1-39933","bucket":"bucket-1-53574","fileSize":16384,"count":5},{"volume":"vol-0-64335","bucket":"bucket-1-58883","fileSize":16384,"count":5},{"volume":"31932-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"31932-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"31932-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"31932-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest302","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket2-o3fs","fileSize":1024,"count":0},{"volume":"s3v","bucket":"bucket-95417","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-77230","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-77230","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-81163","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-36393","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-48041","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-48450","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200630 11:17:28.533" endtime="20200630 11:17:28.534"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:17:28.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:17:28.534" endtime="20200630 11:17:28.535"></status>
</kw>
<msg timestamp="20200630 11:17:28.535" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 11:17:28.505" endtime="20200630 11:17:28.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200630 11:17:28.537" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.10...
* Connected to recon (172.26.0.10) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 11:17:28 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 11:17:28 GMT
&lt; Date: Tue, 30 Jun 2020 11:17:28 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3137
&lt; 
{ [data not shown]

100  3137  100  3137    0     0   219k      0 --:--:-- --:--:-- --:--:--  235k
* Connection #0 to host recon left intact
[{"volume":"vol-3-42626","bucket":"bucket-3-21483","fileSize":16384,"count":5},{"volume":"vol-4-68106","bucket":"bucket-4-88740","fileSize":16384,"count":5},{"volume":"vol-2-32809","bucket":"bucket-2-40080","fileSize":16384,"count":5},{"volume":"vol-4-68106","bucket":"bucket-2-02052","fileSize":16384,"count":5},{"volume":"vol-3-42626","bucket":"bucket-4-46594","fileSize":16384,"count":5},{"volume":"vol-0-64335","bucket":"bucket-2-12548","fileSize":16384,"count":5},{"volume":"vol-4-68106","bucket":"bucket-1-72846","fileSize":16384,"count":5},{"volume":"vol-3-42626","bucket":"bucket-1-70720","fileSize":16384,"count":5},{"volume":"vol-0-64335","bucket":"bucket-4-71806","fileSize":16384,"count":5},{"volume":"vol-2-32809","bucket":"bucket-0-97791","fileSize":16384,"count":5},{"volume":"vol-2-32809","bucket":"bucket-3-84864","fileSize":16384,"count":5},{"volume":"vol-0-64335","bucket":"bucket-0-64300","fileSize":16384,"count":5},{"volume":"vol-2-32809","bucket":"bucket-4-94196","fileSize":16384,"count":5},{"volume":"vol-4-68106","bucket":"bucket-3-21344","fileSize":16384,"count":5},{"volume":"vol-1-39933","bucket":"bucket-3-87142","fileSize":16384,"count":5},{"volume":"vol-0-64335","bucket":"bucket-3-25797","fileSize":16384,"count":5},{"volume":"vol-2-32809","bucket":"bucket-1-83045","fileSize":16384,"count":5},{"volume":"vol-1-39933","bucket":"bucket-0-08340","fileSize":16384,"count":5},{"volume":"vol-1-39933","bucket":"bucket-2-51146","fileSize":16384,"count":5},{"volume":"vol-3-42626","bucket":"bucket-0-69492","fileSize":16384,"count":5},{"volume":"vol-3-42626","bucket":"bucket-2-10313","fileSize":16384,"count":5},{"volume":"vol-4-68106","bucket":"bucket-0-45574","fileSize":16384,"count":5},{"volume":"vol-1-39933","bucket":"bucket-4-28701","fileSize":16384,"count":5},{"volume":"vol-1-39933","bucket":"bucket-1-53574","fileSize":16384,"count":5},{"volume":"vol-0-64335","bucket":"bucket-1-58883","fileSize":16384,"count":5},{"volume":"31932-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"31932-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"31932-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"31932-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest302","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket2-o3fs","fileSize":1024,"count":0},{"volume":"s3v","bucket":"bucket-95417","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-77230","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-77230","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-81163","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-36393","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-48041","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-48450","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200630 11:17:28.536" endtime="20200630 11:17:28.537"></status>
</kw>
<status status="FAIL" starttime="20200630 11:17:28.446" endtime="20200630 11:17:28.537"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:17:38.542" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:17:38.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:17:38.544" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200630 11:17:38.539" endtime="20200630 11:17:38.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:17:38.546" level="INFO">scm</msg>
<status status="PASS" starttime="20200630 11:17:38.545" endtime="20200630 11:17:38.546"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:17:38.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:17:38.546" endtime="20200630 11:17:38.547"></status>
</kw>
<msg timestamp="20200630 11:17:38.547" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200630 11:17:38.539" endtime="20200630 11:17:38.547"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:17:38.550" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:17:38.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:17:38.561" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 11:17:38.548" endtime="20200630 11:17:38.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:17:38.562" level="INFO"></msg>
<status status="PASS" starttime="20200630 11:17:38.562" endtime="20200630 11:17:38.562"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:17:38.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:17:38.562" endtime="20200630 11:17:38.563"></status>
</kw>
<status status="PASS" starttime="20200630 11:17:38.548" endtime="20200630 11:17:38.563"></status>
</kw>
<status status="PASS" starttime="20200630 11:17:38.547" endtime="20200630 11:17:38.563"></status>
</kw>
<status status="PASS" starttime="20200630 11:17:38.539" endtime="20200630 11:17:38.563"></status>
</kw>
<status status="PASS" starttime="20200630 11:17:38.538" endtime="20200630 11:17:38.563"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:17:38.566" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:17:38.582" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:17:38.582" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 11:17:38.564" endtime="20200630 11:17:38.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:17:38.583" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.10...
* Connected to recon (172.26.0.10) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 11:17:38 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 11:17:38 GMT
&lt; Date: Tue, 30 Jun 2020 11:17:38 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0   7326      0 --:--:-- --:--:-- --:--:--  7700
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":146}]}}</msg>
<status status="PASS" starttime="20200630 11:17:38.583" endtime="20200630 11:17:38.584"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:17:38.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:17:38.584" endtime="20200630 11:17:38.584"></status>
</kw>
<msg timestamp="20200630 11:17:38.585" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 11:17:38.563" endtime="20200630 11:17:38.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200630 11:17:38.585" endtime="20200630 11:17:38.585"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:17:38.588" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:17:38.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:17:38.600" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 11:17:38.586" endtime="20200630 11:17:38.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:17:38.601" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.10...
* Connected to recon (172.26.0.10) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 11:17:38 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 11:17:38 GMT
&lt; Date: Tue, 30 Jun 2020 11:17:38 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3137
&lt; 
{ [data not shown]

100  3137  100  3137    0     0   455k      0 --:--:-- --:--:-- --:--:--  510k
* Connection #0 to host recon left intact
[{"volume":"vol-3-42626","bucket":"bucket-3-21483","fileSize":16384,"count":5},{"volume":"vol-4-68106","bucket":"bucket-4-88740","fileSize":16384,"count":5},{"volume":"vol-2-32809","bucket":"bucket-2-40080","fileSize":16384,"count":5},{"volume":"vol-4-68106","bucket":"bucket-2-02052","fileSize":16384,"count":5},{"volume":"vol-3-42626","bucket":"bucket-4-46594","fileSize":16384,"count":5},{"volume":"vol-0-64335","bucket":"bucket-2-12548","fileSize":16384,"count":5},{"volume":"vol-4-68106","bucket":"bucket-1-72846","fileSize":16384,"count":5},{"volume":"vol-3-42626","bucket":"bucket-1-70720","fileSize":16384,"count":5},{"volume":"vol-0-64335","bucket":"bucket-4-71806","fileSize":16384,"count":5},{"volume":"vol-2-32809","bucket":"bucket-0-97791","fileSize":16384,"count":5},{"volume":"vol-2-32809","bucket":"bucket-3-84864","fileSize":16384,"count":5},{"volume":"vol-0-64335","bucket":"bucket-0-64300","fileSize":16384,"count":5},{"volume":"vol-2-32809","bucket":"bucket-4-94196","fileSize":16384,"count":5},{"volume":"vol-4-68106","bucket":"bucket-3-21344","fileSize":16384,"count":5},{"volume":"vol-1-39933","bucket":"bucket-3-87142","fileSize":16384,"count":5},{"volume":"vol-0-64335","bucket":"bucket-3-25797","fileSize":16384,"count":5},{"volume":"vol-2-32809","bucket":"bucket-1-83045","fileSize":16384,"count":5},{"volume":"vol-1-39933","bucket":"bucket-0-08340","fileSize":16384,"count":5},{"volume":"vol-1-39933","bucket":"bucket-2-51146","fileSize":16384,"count":5},{"volume":"vol-3-42626","bucket":"bucket-0-69492","fileSize":16384,"count":5},{"volume":"vol-3-42626","bucket":"bucket-2-10313","fileSize":16384,"count":5},{"volume":"vol-4-68106","bucket":"bucket-0-45574","fileSize":16384,"count":5},{"volume":"vol-1-39933","bucket":"bucket-4-28701","fileSize":16384,"count":5},{"volume":"vol-1-39933","bucket":"bucket-1-53574","fileSize":16384,"count":5},{"volume":"vol-0-64335","bucket":"bucket-1-58883","fileSize":16384,"count":5},{"volume":"31932-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"31932-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"31932-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"31932-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest302","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket2-o3fs","fileSize":1024,"count":0},{"volume":"s3v","bucket":"bucket-95417","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-77230","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-77230","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-81163","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-36393","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-48041","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-48450","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200630 11:17:38.600" endtime="20200630 11:17:38.601"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:17:38.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:17:38.601" endtime="20200630 11:17:38.602"></status>
</kw>
<msg timestamp="20200630 11:17:38.602" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 11:17:38.585" endtime="20200630 11:17:38.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200630 11:17:38.603" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.10...
* Connected to recon (172.26.0.10) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 11:17:38 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 11:17:38 GMT
&lt; Date: Tue, 30 Jun 2020 11:17:38 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3137
&lt; 
{ [data not shown]

100  3137  100  3137    0     0   455k      0 --:--:-- --:--:-- --:--:--  510k
* Connection #0 to host recon left intact
[{"volume":"vol-3-42626","bucket":"bucket-3-21483","fileSize":16384,"count":5},{"volume":"vol-4-68106","bucket":"bucket-4-88740","fileSize":16384,"count":5},{"volume":"vol-2-32809","bucket":"bucket-2-40080","fileSize":16384,"count":5},{"volume":"vol-4-68106","bucket":"bucket-2-02052","fileSize":16384,"count":5},{"volume":"vol-3-42626","bucket":"bucket-4-46594","fileSize":16384,"count":5},{"volume":"vol-0-64335","bucket":"bucket-2-12548","fileSize":16384,"count":5},{"volume":"vol-4-68106","bucket":"bucket-1-72846","fileSize":16384,"count":5},{"volume":"vol-3-42626","bucket":"bucket-1-70720","fileSize":16384,"count":5},{"volume":"vol-0-64335","bucket":"bucket-4-71806","fileSize":16384,"count":5},{"volume":"vol-2-32809","bucket":"bucket-0-97791","fileSize":16384,"count":5},{"volume":"vol-2-32809","bucket":"bucket-3-84864","fileSize":16384,"count":5},{"volume":"vol-0-64335","bucket":"bucket-0-64300","fileSize":16384,"count":5},{"volume":"vol-2-32809","bucket":"bucket-4-94196","fileSize":16384,"count":5},{"volume":"vol-4-68106","bucket":"bucket-3-21344","fileSize":16384,"count":5},{"volume":"vol-1-39933","bucket":"bucket-3-87142","fileSize":16384,"count":5},{"volume":"vol-0-64335","bucket":"bucket-3-25797","fileSize":16384,"count":5},{"volume":"vol-2-32809","bucket":"bucket-1-83045","fileSize":16384,"count":5},{"volume":"vol-1-39933","bucket":"bucket-0-08340","fileSize":16384,"count":5},{"volume":"vol-1-39933","bucket":"bucket-2-51146","fileSize":16384,"count":5},{"volume":"vol-3-42626","bucket":"bucket-0-69492","fileSize":16384,"count":5},{"volume":"vol-3-42626","bucket":"bucket-2-10313","fileSize":16384,"count":5},{"volume":"vol-4-68106","bucket":"bucket-0-45574","fileSize":16384,"count":5},{"volume":"vol-1-39933","bucket":"bucket-4-28701","fileSize":16384,"count":5},{"volume":"vol-1-39933","bucket":"bucket-1-53574","fileSize":16384,"count":5},{"volume":"vol-0-64335","bucket":"bucket-1-58883","fileSize":16384,"count":5},{"volume":"31932-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"31932-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"31932-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"31932-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest302","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket2-o3fs","fileSize":1024,"count":0},{"volume":"s3v","bucket":"bucket-95417","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-77230","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-77230","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-81163","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-36393","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-48041","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-48450","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200630 11:17:38.603" endtime="20200630 11:17:38.604"></status>
</kw>
<status status="FAIL" starttime="20200630 11:17:38.538" endtime="20200630 11:17:38.604"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:17:48.609" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:17:48.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:17:48.611" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200630 11:17:48.607" endtime="20200630 11:17:48.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:17:48.612" level="INFO">scm</msg>
<status status="PASS" starttime="20200630 11:17:48.612" endtime="20200630 11:17:48.612"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:17:48.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:17:48.613" endtime="20200630 11:17:48.613"></status>
</kw>
<msg timestamp="20200630 11:17:48.613" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200630 11:17:48.606" endtime="20200630 11:17:48.613"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:17:48.616" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:17:48.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:17:48.633" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 11:17:48.614" endtime="20200630 11:17:48.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:17:48.634" level="INFO"></msg>
<status status="PASS" starttime="20200630 11:17:48.633" endtime="20200630 11:17:48.634"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:17:48.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:17:48.634" endtime="20200630 11:17:48.634"></status>
</kw>
<status status="PASS" starttime="20200630 11:17:48.614" endtime="20200630 11:17:48.635"></status>
</kw>
<status status="PASS" starttime="20200630 11:17:48.614" endtime="20200630 11:17:48.635"></status>
</kw>
<status status="PASS" starttime="20200630 11:17:48.606" endtime="20200630 11:17:48.635"></status>
</kw>
<status status="PASS" starttime="20200630 11:17:48.605" endtime="20200630 11:17:48.635"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:17:48.638" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:17:48.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:17:48.654" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 11:17:48.636" endtime="20200630 11:17:48.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:17:48.655" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.10...
* Connected to recon (172.26.0.10) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 11:17:48 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 11:17:48 GMT
&lt; Date: Tue, 30 Jun 2020 11:17:48 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0   7420      0 --:--:-- --:--:-- --:--:--  7700
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":146}]}}</msg>
<status status="PASS" starttime="20200630 11:17:48.654" endtime="20200630 11:17:48.655"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:17:48.655" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:17:48.655" endtime="20200630 11:17:48.656"></status>
</kw>
<msg timestamp="20200630 11:17:48.656" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 11:17:48.635" endtime="20200630 11:17:48.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200630 11:17:48.656" endtime="20200630 11:17:48.657"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:17:48.659" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:17:48.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:17:48.676" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 11:17:48.657" endtime="20200630 11:17:48.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:17:48.677" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.10...
* Connected to recon (172.26.0.10) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 11:17:48 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 11:17:48 GMT
&lt; Date: Tue, 30 Jun 2020 11:17:48 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3137
&lt; 
{ [data not shown]

100  3137  100  3137    0     0   277k      0 --:--:-- --:--:-- --:--:--  306k
* Connection #0 to host recon left intact
[{"volume":"vol-3-42626","bucket":"bucket-3-21483","fileSize":16384,"count":5},{"volume":"vol-4-68106","bucket":"bucket-4-88740","fileSize":16384,"count":5},{"volume":"vol-2-32809","bucket":"bucket-2-40080","fileSize":16384,"count":5},{"volume":"vol-4-68106","bucket":"bucket-2-02052","fileSize":16384,"count":5},{"volume":"vol-3-42626","bucket":"bucket-4-46594","fileSize":16384,"count":5},{"volume":"vol-0-64335","bucket":"bucket-2-12548","fileSize":16384,"count":5},{"volume":"vol-4-68106","bucket":"bucket-1-72846","fileSize":16384,"count":5},{"volume":"vol-3-42626","bucket":"bucket-1-70720","fileSize":16384,"count":5},{"volume":"vol-0-64335","bucket":"bucket-4-71806","fileSize":16384,"count":5},{"volume":"vol-2-32809","bucket":"bucket-0-97791","fileSize":16384,"count":5},{"volume":"vol-2-32809","bucket":"bucket-3-84864","fileSize":16384,"count":5},{"volume":"vol-0-64335","bucket":"bucket-0-64300","fileSize":16384,"count":5},{"volume":"vol-2-32809","bucket":"bucket-4-94196","fileSize":16384,"count":5},{"volume":"vol-4-68106","bucket":"bucket-3-21344","fileSize":16384,"count":5},{"volume":"vol-1-39933","bucket":"bucket-3-87142","fileSize":16384,"count":5},{"volume":"vol-0-64335","bucket":"bucket-3-25797","fileSize":16384,"count":5},{"volume":"vol-2-32809","bucket":"bucket-1-83045","fileSize":16384,"count":5},{"volume":"vol-1-39933","bucket":"bucket-0-08340","fileSize":16384,"count":5},{"volume":"vol-1-39933","bucket":"bucket-2-51146","fileSize":16384,"count":5},{"volume":"vol-3-42626","bucket":"bucket-0-69492","fileSize":16384,"count":5},{"volume":"vol-3-42626","bucket":"bucket-2-10313","fileSize":16384,"count":5},{"volume":"vol-4-68106","bucket":"bucket-0-45574","fileSize":16384,"count":5},{"volume":"vol-1-39933","bucket":"bucket-4-28701","fileSize":16384,"count":5},{"volume":"vol-1-39933","bucket":"bucket-1-53574","fileSize":16384,"count":5},{"volume":"vol-0-64335","bucket":"bucket-1-58883","fileSize":16384,"count":5},{"volume":"31932-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"31932-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"31932-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"31932-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest302","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket2-o3fs","fileSize":1024,"count":0},{"volume":"s3v","bucket":"bucket-95417","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-77230","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-77230","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-81163","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-36393","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-48041","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-48450","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200630 11:17:48.676" endtime="20200630 11:17:48.677"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:17:48.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:17:48.677" endtime="20200630 11:17:48.678"></status>
</kw>
<msg timestamp="20200630 11:17:48.678" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 11:17:48.657" endtime="20200630 11:17:48.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200630 11:17:48.679" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.10...
* Connected to recon (172.26.0.10) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 11:17:48 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 11:17:48 GMT
&lt; Date: Tue, 30 Jun 2020 11:17:48 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3137
&lt; 
{ [data not shown]

100  3137  100  3137    0     0   277k      0 --:--:-- --:--:-- --:--:--  306k
* Connection #0 to host recon left intact
[{"volume":"vol-3-42626","bucket":"bucket-3-21483","fileSize":16384,"count":5},{"volume":"vol-4-68106","bucket":"bucket-4-88740","fileSize":16384,"count":5},{"volume":"vol-2-32809","bucket":"bucket-2-40080","fileSize":16384,"count":5},{"volume":"vol-4-68106","bucket":"bucket-2-02052","fileSize":16384,"count":5},{"volume":"vol-3-42626","bucket":"bucket-4-46594","fileSize":16384,"count":5},{"volume":"vol-0-64335","bucket":"bucket-2-12548","fileSize":16384,"count":5},{"volume":"vol-4-68106","bucket":"bucket-1-72846","fileSize":16384,"count":5},{"volume":"vol-3-42626","bucket":"bucket-1-70720","fileSize":16384,"count":5},{"volume":"vol-0-64335","bucket":"bucket-4-71806","fileSize":16384,"count":5},{"volume":"vol-2-32809","bucket":"bucket-0-97791","fileSize":16384,"count":5},{"volume":"vol-2-32809","bucket":"bucket-3-84864","fileSize":16384,"count":5},{"volume":"vol-0-64335","bucket":"bucket-0-64300","fileSize":16384,"count":5},{"volume":"vol-2-32809","bucket":"bucket-4-94196","fileSize":16384,"count":5},{"volume":"vol-4-68106","bucket":"bucket-3-21344","fileSize":16384,"count":5},{"volume":"vol-1-39933","bucket":"bucket-3-87142","fileSize":16384,"count":5},{"volume":"vol-0-64335","bucket":"bucket-3-25797","fileSize":16384,"count":5},{"volume":"vol-2-32809","bucket":"bucket-1-83045","fileSize":16384,"count":5},{"volume":"vol-1-39933","bucket":"bucket-0-08340","fileSize":16384,"count":5},{"volume":"vol-1-39933","bucket":"bucket-2-51146","fileSize":16384,"count":5},{"volume":"vol-3-42626","bucket":"bucket-0-69492","fileSize":16384,"count":5},{"volume":"vol-3-42626","bucket":"bucket-2-10313","fileSize":16384,"count":5},{"volume":"vol-4-68106","bucket":"bucket-0-45574","fileSize":16384,"count":5},{"volume":"vol-1-39933","bucket":"bucket-4-28701","fileSize":16384,"count":5},{"volume":"vol-1-39933","bucket":"bucket-1-53574","fileSize":16384,"count":5},{"volume":"vol-0-64335","bucket":"bucket-1-58883","fileSize":16384,"count":5},{"volume":"31932-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"31932-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"31932-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"31932-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest302","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket2-o3fs","fileSize":1024,"count":0},{"volume":"s3v","bucket":"bucket-95417","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-77230","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-77230","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-81163","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-36393","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-48041","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-48450","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200630 11:17:48.678" endtime="20200630 11:17:48.679"></status>
</kw>
<status status="FAIL" starttime="20200630 11:17:48.604" endtime="20200630 11:17:48.679"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:17:58.684" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:17:58.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:17:58.687" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200630 11:17:58.682" endtime="20200630 11:17:58.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:17:58.687" level="INFO">scm</msg>
<status status="PASS" starttime="20200630 11:17:58.687" endtime="20200630 11:17:58.688"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:17:58.688" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:17:58.688" endtime="20200630 11:17:58.688"></status>
</kw>
<msg timestamp="20200630 11:17:58.688" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200630 11:17:58.681" endtime="20200630 11:17:58.688"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:17:58.691" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:17:58.714" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:17:58.714" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 11:17:58.689" endtime="20200630 11:17:58.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:17:58.715" level="INFO"></msg>
<status status="PASS" starttime="20200630 11:17:58.715" endtime="20200630 11:17:58.715"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:17:58.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:17:58.715" endtime="20200630 11:17:58.716"></status>
</kw>
<status status="PASS" starttime="20200630 11:17:58.689" endtime="20200630 11:17:58.716"></status>
</kw>
<status status="PASS" starttime="20200630 11:17:58.689" endtime="20200630 11:17:58.716"></status>
</kw>
<status status="PASS" starttime="20200630 11:17:58.681" endtime="20200630 11:17:58.716"></status>
</kw>
<status status="PASS" starttime="20200630 11:17:58.680" endtime="20200630 11:17:58.717"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:17:58.719" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:17:58.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:17:58.736" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 11:17:58.717" endtime="20200630 11:17:58.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:17:58.737" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.10...
* Connected to recon (172.26.0.10) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 11:17:58 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 11:17:58 GMT
&lt; Date: Tue, 30 Jun 2020 11:17:58 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 182
&lt; 
{ [data not shown]

100   182  100   182    0     0  24080      0 --:--:-- --:--:-- --:--:-- 26000
* Connection #0 to host recon left intact
{"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":146},{"ContainerID":2,"NumberOfKeys":3},{"ContainerID":3,"NumberOfKeys":3},{"ContainerID":4,"NumberOfKeys":4}]}}</msg>
<status status="PASS" starttime="20200630 11:17:58.737" endtime="20200630 11:17:58.737"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:17:58.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:17:58.738" endtime="20200630 11:17:58.738"></status>
</kw>
<msg timestamp="20200630 11:17:58.738" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 11:17:58.717" endtime="20200630 11:17:58.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200630 11:17:58.739" endtime="20200630 11:17:58.739"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:17:58.742" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:17:58.760" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:17:58.760" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 11:17:58.740" endtime="20200630 11:17:58.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:17:58.761" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.10...
* Connected to recon (172.26.0.10) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 11:17:58 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 11:17:58 GMT
&lt; Date: Tue, 30 Jun 2020 11:17:58 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3215
&lt; 
{ [data not shown]

100  3215  100  3215    0     0   275k      0 --:--:-- --:--:-- --:--:--  285k
* Connection #0 to host recon left intact
[{"volume":"vol-3-42626","bucket":"bucket-3-21483","fileSize":16384,"count":5},{"volume":"vol-4-68106","bucket":"bucket-4-88740","fileSize":16384,"count":5},{"volume":"vol-2-32809","bucket":"bucket-2-40080","fileSize":16384,"count":5},{"volume":"vol-4-68106","bucket":"bucket-2-02052","fileSize":16384,"count":5},{"volume":"vol-3-42626","bucket":"bucket-4-46594","fileSize":16384,"count":5},{"volume":"vol-0-64335","bucket":"bucket-2-12548","fileSize":16384,"count":5},{"volume":"vol-4-68106","bucket":"bucket-1-72846","fileSize":16384,"count":5},{"volume":"vol-3-42626","bucket":"bucket-1-70720","fileSize":16384,"count":5},{"volume":"vol-0-64335","bucket":"bucket-4-71806","fileSize":16384,"count":5},{"volume":"vol-2-32809","bucket":"bucket-0-97791","fileSize":16384,"count":5},{"volume":"vol-2-32809","bucket":"bucket-3-84864","fileSize":16384,"count":5},{"volume":"vol-0-64335","bucket":"bucket-0-64300","fileSize":16384,"count":5},{"volume":"vol-2-32809","bucket":"bucket-4-94196","fileSize":16384,"count":5},{"volume":"vol-4-68106","bucket":"bucket-3-21344","fileSize":16384,"count":5},{"volume":"vol-1-39933","bucket":"bucket-3-87142","fileSize":16384,"count":5},{"volume":"vol-0-64335","bucket":"bucket-3-25797","fileSize":16384,"count":5},{"volume":"vol-2-32809","bucket":"bucket-1-83045","fileSize":16384,"count":5},{"volume":"vol-1-39933","bucket":"bucket-0-08340","fileSize":16384,"count":5},{"volume":"vol-1-39933","bucket":"bucket-2-51146","fileSize":16384,"count":5},{"volume":"vol-3-42626","bucket":"bucket-0-69492","fileSize":16384,"count":5},{"volume":"vol-3-42626","bucket":"bucket-2-10313","fileSize":16384,"count":5},{"volume":"vol-4-68106","bucket":"bucket-0-45574","fileSize":16384,"count":5},{"volume":"vol-1-39933","bucket":"bucket-4-28701","fileSize":16384,"count":5},{"volume":"vol-1-39933","bucket":"bucket-1-53574","fileSize":16384,"count":5},{"volume":"vol-0-64335","bucket":"bucket-1-58883","fileSize":16384,"count":5},{"volume":"31932-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"31932-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"31932-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"31932-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest302","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket2-o3fs","fileSize":1024,"count":0},{"volume":"s3v","bucket":"bucket-95417","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-77230","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-77230","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-81163","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-36393","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-48041","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-48450","fileSize":1024,"count":1},{"volume":"vol-0-28727","bucket":"bucket-0-84192","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20200630 11:17:58.761" endtime="20200630 11:17:58.761"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:17:58.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:17:58.762" endtime="20200630 11:17:58.762"></status>
</kw>
<msg timestamp="20200630 11:17:58.762" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 11:17:58.739" endtime="20200630 11:17:58.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<status status="PASS" starttime="20200630 11:17:58.763" endtime="20200630 11:17:58.763"></status>
</kw>
<status status="PASS" starttime="20200630 11:17:58.680" endtime="20200630 11:17:58.763"></status>
</kw>
<status status="PASS" starttime="20200630 11:17:18.168" endtime="20200630 11:17:58.763"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 11:17:18.167" endtime="20200630 11:17:58.764" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Check if Recon picks up DN heartbeats">
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/datanodes</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:17:58.768" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:17:58.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:17:58.806" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 11:17:58.766" endtime="20200630 11:17:58.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:17:58.807" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.10...
* Connected to recon (172.26.0.10) port 9888 (#0)
&gt; GET /api/v1/datanodes HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 11:17:58 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 11:17:58 GMT
&lt; Date: Tue, 30 Jun 2020 11:17:58 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1812
&lt; 
{ [data not shown]

100  1812  100  1812    0     0  56010      0 --:--:-- --:--:-- --:--:-- 56625
* Connection #0 to host recon left intact
{"totalCount":3,"datanodes":[{"uuid":"19a578f2-817f-458a-9525-ceae3543db0f","hostname":"ozonesecure_datanode_3.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1593515864144,"storageReport":{"capacity":89311358976,"used":8192,"remaining":25443811328},"pipelines":[{"pipelineID":"f1999871-b6c6-4726-aff3-75d0982c65ff","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_2.ozonesecure_default"},{"pipelineID":"6c0eeb50-7aee-41cb-8576-321601ee509c","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_3.ozonesecure_default"}],"containers":2,"leaderCount":1},{"uuid":"ef16ab91-a8f3-48a9-adcf-dd0166554681","hostname":"ozonesecure_datanode_2.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1593515864198,"storageReport":{"capacity":89311358976,"used":8192,"remaining":25443811328},"pipelines":[{"pipelineID":"f1999871-b6c6-4726-aff3-75d0982c65ff","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_2.ozonesecure_default"},{"pipelineID":"1d344f8a-f455-4054-abfc-b0f12a195072","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_2.ozonesecure_default"}],"containers":2,"leaderCount":2},{"uuid":"1cb160a9-5396-48c7-997d-f8b2679b7ec0","hostname":"ozonesecure_datanode_1.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1593515864236,"storageReport":{"capacity":89311358976,"used":8192,"remaining":25443811328},"pipelines":[{"pipelineID":"76bd549d-1312-4fe5-82ba-4f0e803a05b1","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_1.ozonesecure_default"},{"pipelineID":"f1999871-b6c6-4726-aff3-75d0982c65ff","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_2.ozonesecure_default"}],"containers":2,"leaderCount":1}]}</msg>
<status status="PASS" starttime="20200630 11:17:58.806" endtime="20200630 11:17:58.807"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:17:58.807" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:17:58.807" endtime="20200630 11:17:58.808"></status>
</kw>
<msg timestamp="20200630 11:17:58.808" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 11:17:58.766" endtime="20200630 11:17:58.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanodes</arg>
</arguments>
<status status="PASS" starttime="20200630 11:17:58.808" endtime="20200630 11:17:58.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200630 11:17:58.809" endtime="20200630 11:17:58.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200630 11:17:58.809" endtime="20200630 11:17:58.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200630 11:17:58.810" endtime="20200630 11:17:58.810"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/pipelines</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:17:58.814" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:17:58.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:17:58.839" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 11:17:58.811" endtime="20200630 11:17:58.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:17:58.840" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.10...
* Connected to recon (172.26.0.10) port 9888 (#0)
&gt; GET /api/v1/pipelines HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 11:17:58 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 11:17:58 GMT
&lt; Date: Tue, 30 Jun 2020 11:17:58 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1368
&lt; 
{ [data not shown]

100  1368  100  1368    0     0  66288      0 --:--:-- --:--:-- --:--:-- 68400
* Connection #0 to host recon left intact
{"totalCount":4,"pipelines":[{"pipelineId":"76bd549d-1312-4fe5-82ba-4f0e803a05b1","status":"OPEN","leaderNode":"ozonesecure_datanode_1.ozonesecure_default","datanodes":["ozonesecure_datanode_1.ozonesecure_default"],"lastLeaderElection":0,"duration":1329410,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"f1999871-b6c6-4726-aff3-75d0982c65ff","status":"OPEN","leaderNode":"ozonesecure_datanode_2.ozonesecure_default","datanodes":["ozonesecure_datanode_3.ozonesecure_default","ozonesecure_datanode_2.ozonesecure_default","ozonesecure_datanode_1.ozonesecure_default"],"lastLeaderElection":0,"duration":1329133,"leaderElections":0,"replicationType":"RATIS","replicationFactor":3,"containers":1},{"pipelineId":"1d344f8a-f455-4054-abfc-b0f12a195072","status":"OPEN","leaderNode":"ozonesecure_datanode_2.ozonesecure_default","datanodes":["ozonesecure_datanode_2.ozonesecure_default"],"lastLeaderElection":0,"duration":1329152,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"6c0eeb50-7aee-41cb-8576-321601ee509c","status":"OPEN","leaderNode":"ozonesecure_datanode_3.ozonesecure_default","datanodes":["ozonesecure_datanode_3.ozonesecure_default"],"lastLeaderElection":0,"duration":1329155,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1}]}</msg>
<status status="PASS" starttime="20200630 11:17:58.839" endtime="20200630 11:17:58.840"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:17:58.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:17:58.840" endtime="20200630 11:17:58.841"></status>
</kw>
<msg timestamp="20200630 11:17:58.841" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 11:17:58.810" endtime="20200630 11:17:58.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>pipelines</arg>
</arguments>
<status status="PASS" starttime="20200630 11:17:58.841" endtime="20200630 11:17:58.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200630 11:17:58.842" endtime="20200630 11:17:58.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>OPEN</arg>
</arguments>
<status status="PASS" starttime="20200630 11:17:58.842" endtime="20200630 11:17:58.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200630 11:17:58.843" endtime="20200630 11:17:58.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200630 11:17:58.844" endtime="20200630 11:17:58.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200630 11:17:58.845" endtime="20200630 11:17:58.845"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/clusterState</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:17:58.848" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:17:58.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:17:58.867" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 11:17:58.846" endtime="20200630 11:17:58.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:17:58.868" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.10...
* Connected to recon (172.26.0.10) port 9888 (#0)
&gt; GET /api/v1/clusterState HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 11:17:58 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 11:17:58 GMT
&lt; Date: Tue, 30 Jun 2020 11:17:58 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 186
&lt; 
{ [data not shown]

100   186  100   186    0     0  13607      0 --:--:-- --:--:-- --:--:-- 14307
* Connection #0 to host recon left intact
{"pipelines":4,"totalDatanodes":3,"healthyDatanodes":3,"storageReport":{"capacity":267934076928,"used":24576,"remaining":76331433984},"containers":4,"volumes":25,"buckets":55,"keys":171}</msg>
<status status="PASS" starttime="20200630 11:17:58.867" endtime="20200630 11:17:58.868"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:17:58.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:17:58.868" endtime="20200630 11:17:58.868"></status>
</kw>
<msg timestamp="20200630 11:17:58.869" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 11:17:58.845" endtime="20200630 11:17:58.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"totalDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200630 11:17:58.869" endtime="20200630 11:17:58.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"healthyDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200630 11:17:58.869" endtime="20200630 11:17:58.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"pipelines\":4</arg>
</arguments>
<status status="PASS" starttime="20200630 11:17:58.870" endtime="20200630 11:17:58.870"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:17:58.873" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:17:58.895" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:17:58.895" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 11:17:58.871" endtime="20200630 11:17:58.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:17:58.896" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.10...
* Connected to recon (172.26.0.10) port 9888 (#0)
&gt; GET /api/v1/containers/1/replicaHistory HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 11:17:58 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 11:17:58 GMT
&lt; Date: Tue, 30 Jun 2020 11:17:58 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 454
&lt; 
{ [data not shown]

100   454  100   454    0     0  26732      0 --:--:-- --:--:-- --:--:-- 28375
* Connection #0 to host recon left intact
[{"containerId":1,"datanodeHost":"ozonesecure_datanode_1.ozonesecure_default","firstReportTimestamp":1593514580366,"lastReportTimestamp":1593515810330},{"containerId":1,"datanodeHost":"ozonesecure_datanode_2.ozonesecure_default","firstReportTimestamp":1593514579856,"lastReportTimestamp":1593515779498},{"containerId":1,"datanodeHost":"ozonesecure_datanode_3.ozonesecure_default","firstReportTimestamp":1593514580222,"lastReportTimestamp":1593515864150}]</msg>
<status status="PASS" starttime="20200630 11:17:58.895" endtime="20200630 11:17:58.896"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:17:58.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:17:58.896" endtime="20200630 11:17:58.897"></status>
</kw>
<msg timestamp="20200630 11:17:58.897" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 11:17:58.870" endtime="20200630 11:17:58.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
</arguments>
<status status="PASS" starttime="20200630 11:17:58.897" endtime="20200630 11:17:58.898"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 11:17:58.765" endtime="20200630 11:17:58.898" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Check if Recon Web UI is up">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:17:58.906" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:17:58.908" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:17:58.908" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200630 11:17:58.902" endtime="20200630 11:17:58.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:17:58.909" level="INFO">scm</msg>
<status status="PASS" starttime="20200630 11:17:58.908" endtime="20200630 11:17:58.909"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:17:58.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:17:58.909" endtime="20200630 11:17:58.909"></status>
</kw>
<msg timestamp="20200630 11:17:58.910" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200630 11:17:58.902" endtime="20200630 11:17:58.910"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:17:58.913" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:17:58.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:17:58.928" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 11:17:58.911" endtime="20200630 11:17:58.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:17:58.929" level="INFO"></msg>
<status status="PASS" starttime="20200630 11:17:58.928" endtime="20200630 11:17:58.929"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:17:58.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:17:58.929" endtime="20200630 11:17:58.930"></status>
</kw>
<status status="PASS" starttime="20200630 11:17:58.910" endtime="20200630 11:17:58.930"></status>
</kw>
<status status="PASS" starttime="20200630 11:17:58.910" endtime="20200630 11:17:58.930"></status>
</kw>
<status status="PASS" starttime="20200630 11:17:58.901" endtime="20200630 11:17:58.930"></status>
</kw>
<status status="PASS" starttime="20200630 11:17:58.901" endtime="20200630 11:17:58.930"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${ENDPOINT_URL}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:17:58.932" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:17:58.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:17:58.973" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 11:17:58.931" endtime="20200630 11:17:58.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:17:58.974" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.10...
* Connected to recon (172.26.0.10) port 9888 (#0)
&gt; GET / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Ignoring the response-body
{ [data not shown]

100   442  100   442    0     0  19017      0 --:--:-- --:--:-- --:--:-- 19217
* Connection #0 to host recon left intact
* Issue another request to this URL: 'http://recon:9888/'
* Found bundle for host recon: 0xca6f20
* Re-using existing connection! (#0) with host recon
* Connected to recon (172.26.0.10) port 9888 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; GET / HTTP/1.1
&gt; Authorization: Negotiate YIICUwYJKoZIhvcSAQICAQBuggJCMIICPqADAgEFoQMCAQ6iBwMFACAAAACjggFSYYIBTjCCAUqgAwIBBaENGwtFWEFNUExFLkNPTaIYMBagAwIBA6EPMA0bBEhUVFAbBXJlY29uo4IBGDCCARSgAwIBEqEDAgECooIBBgSCAQL6Zwl0IhZ6zWIjt3iBrVAgnKDY5tAf02gtJ8Yw+o4HmAuTX++WRGJ1ge5tHPQgu/PNsGrKJ3SWAIoXUJqj+vHOnPqrs7SgNqEQRv0QZm5rnJMW4S9alI2/jXXdJUhqOX5dExCRjlJPNKuu9T4bpBvRcBlO6JByvMRHkMgHk85kmQSJMTIDC2HG+KLVcWXv6qaftK+3FnvVj42IiZdxYdYQ9M9YtznYdJyQ2NAAM578ljDDtQZgfE7vw2kmqUTqews8cYpQzyFqSwObh8Y/uy3oonulVi9cY5WXK7SX4Qvk+R8PoiuiJmCHwq5bSa9hUdWrM0R+Ar8S6V/EgMghQUfnsl2kgdIwgc+gAwIBEqKBxwSBxA9pYw5lxAZ3995ldqpXGTgh6Dcnv2i+LLDw8RAHymwGo8Gz2Ak7L+Q3kTB5KIIoffSy/faEzJC1ykSUNRXcSej9HYhWMD0jSWziWTxezGk7YSMpfLIip5SgDacCrqNBvIhEBFAPWG3t8q2Miybr5yX183zlTQZVD6dAG4lKcQacdl6KgyuirIgMq6V2dfWaujzhCESdHv8nWjPvSqGXmXPthgYVQYxQBrtJaTp7TfVr8LcqB1kFwY9FzN+nTWuO0TsigSw=
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 11:17:58 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 11:17:58 GMT
&lt; Date: Tue, 30 Jun 2020 11:17:58 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Tue, 30 Jun 2020 11:17:58 GMT
&lt; Date: Tue, 30 Jun 2020 11:17:58 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCAXCp8lBtS+0jaK8NmsiZ/zgLVQhXDgSVMrPxVM7vXWNkouPbbPb3rXikOxHXh8aj5SOo/HXintUKb0xJdd3pNUGn
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593551878967&amp;s=mgqBEiLAoWTVV9UVPPeuEOAsho3BlR0mgTkgeLyzChs="; Path=/; HttpOnly
&lt; Last-Modified: Tue, 30 Jun 2020 10:03:48 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2267
&lt; 
{ [data not shown]

100  2267  100  2267    0     0  63860      0 --:--:-- --:--:-- --:--:-- 63860
* Closing connection 0
&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.91e4d86d.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.2ec5409c.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.ea8f5368.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.01252c4e.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20200630 11:17:58.974" endtime="20200630 11:17:58.975"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:17:58.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:17:58.975" endtime="20200630 11:17:58.975"></status>
</kw>
<msg timestamp="20200630 11:17:58.976" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 11:17:58.930" endtime="20200630 11:17:58.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Ozone Recon</arg>
</arguments>
<status status="PASS" starttime="20200630 11:17:58.976" endtime="20200630 11:17:58.976"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 11:17:58.900" endtime="20200630 11:17:58.977" critical="yes"></status>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20200630 11:17:09.274" endtime="20200630 11:17:58.978"></status>
</suite>
<status status="PASS" starttime="20200630 11:17:09.239" endtime="20200630 11:17:58.981"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozonesecure-recon">ozonesecure-recon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Recon-Api">ozonesecure-recon.Recon-Api</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
