<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200630 10:28:41.818" rpa="false">
<suite id="s1" name="ozone-basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200630 10:28:41.878" endtime="20200630 10:28:41.878"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:28:41.883" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:28:41.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:28:41.965" level="INFO">${output} = HTTP/1.1 200 OK
Date: Tue, 30 Jun 2020 10:28:41 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Tue, 30 Jun 2020 09:58:40 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200630 10:28:41.879" endtime="20200630 10:28:41.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:28:41.966" level="INFO">HTTP/1.1 200 OK
Date: Tue, 30 Jun 2020 10:28:41 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Tue, 30 Jun 2020 09:58:40 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20200630 10:28:41.966" endtime="20200630 10:28:41.967"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:28:41.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:28:41.967" endtime="20200630 10:28:41.967"></status>
</kw>
<msg timestamp="20200630 10:28:41.968" level="INFO">${result} = HTTP/1.1 200 OK
Date: Tue, 30 Jun 2020 10:28:41 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Tue, 30 Jun 2020 09:58:40 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200630 10:28:41.879" endtime="20200630 10:28:41.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200630 10:28:41.968" endtime="20200630 10:28:41.968"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 10:28:41.877" endtime="20200630 10:28:41.968" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200630 10:28:41.970" endtime="20200630 10:28:41.971"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:28:41.974" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:30:11.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:30:11.770" level="INFO">${output} = 2020-06-30 10:28:43,256 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:28:43,417 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 10:28:41.971" endtime="20200630 10:30:11.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:30:11.771" level="INFO">2020-06-30 10:28:43,256 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:28:43,417 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-30 10:28:43,417 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-30 10:28:45,359 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-06-30 10:28:45,360 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-06-30 10:28:45,360 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-06-30 10:28:45,360 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-06-30 10:28:45,360 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-06-30 10:28:45,360 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-30 10:28:45,360 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-06-30 10:28:45,368 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-06-30 10:28:45,370 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-30 10:28:45,376 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-06-30 10:28:45,416 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-85171, with hadoop as owner.
2020-06-30 10:28:45,768 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-50221, with hadoop as owner.
2020-06-30 10:28:45,789 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-16330, with hadoop as owner.
2020-06-30 10:28:45,815 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-52178, with hadoop as owner.
2020-06-30 10:28:45,834 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-81904, with hadoop as owner.
2020-06-30 10:28:45,862 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-85171/bucket-0-20953, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:28:45,948 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-50221/bucket-0-47334, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:28:45,955 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-16330/bucket-0-29874, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:28:45,963 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-52178/bucket-0-60539, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:28:45,968 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-81904/bucket-0-76589, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:28:45,975 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-85171/bucket-1-43036, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:28:45,980 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-50221/bucket-1-69605, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:28:45,985 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-16330/bucket-1-34258, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:28:45,991 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-52178/bucket-1-32000, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:28:45,998 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-81904/bucket-1-52357, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:28:46,010 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-85171/bucket-2-79510, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:28:46,017 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-50221/bucket-2-73737, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:28:46,021 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-16330/bucket-2-82554, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:28:46,027 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-52178/bucket-2-06018, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:28:46,032 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-81904/bucket-2-27880, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:28:46,037 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-85171/bucket-3-39767, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:28:46,043 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-50221/bucket-3-57312, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:28:46,048 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-16330/bucket-3-55012, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:28:46,054 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-52178/bucket-3-14315, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:28:46,059 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-81904/bucket-3-40939, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:28:46,069 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-85171/bucket-4-31980, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:28:46,075 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-50221/bucket-4-16616, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:28:46,082 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-16330/bucket-4-53735, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:28:46,088 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-52178/bucket-4-86678, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:28:46,092 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-81904/bucket-4-47693, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:28:46,381 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-06-30 10:28:47,046 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-30 10:28:47,381 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-06-30 10:28:48,382 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-06-30 10:28:49,393 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-06-30 10:28:50,393 [Thread-7] INFO freon.ProgressBar: Progress: 4.80 % (6 out of 125)
2020-06-30 10:28:51,395 [Thread-7] INFO freon.ProgressBar: Progress: 8.80 % (11 out of 125)
2020-06-30 10:28:52,401 [Thread-7] INFO freon.ProgressBar: Progress: 11.20 % (14 out of 125)
2020-06-30 10:28:53,402 [Thread-7] INFO freon.ProgressBar: Progress: 11.20 % (14 out of 125)
2020-06-30 10:28:54,402 [Thread-7] INFO freon.ProgressBar: Progress: 12.00 % (15 out of 125)
2020-06-30 10:28:55,403 [Thread-7] INFO freon.ProgressBar: Progress: 14.40 % (18 out of 125)
2020-06-30 10:28:56,403 [Thread-7] INFO freon.ProgressBar: Progress: 14.40 % (18 out of 125)
2020-06-30 10:28:57,404 [Thread-7] INFO freon.ProgressBar: Progress: 16.80 % (21 out of 125)
2020-06-30 10:28:58,406 [Thread-7] INFO freon.ProgressBar: Progress: 20.80 % (26 out of 125)
2020-06-30 10:28:59,406 [Thread-7] INFO freon.ProgressBar: Progress: 20.80 % (26 out of 125)
2020-06-30 10:29:00,407 [Thread-7] INFO freon.ProgressBar: Progress: 21.60 % (27 out of 125)
2020-06-30 10:29:01,408 [Thread-7] INFO freon.ProgressBar: Progress: 25.60 % (32 out of 125)
2020-06-30 10:29:02,408 [Thread-7] INFO freon.ProgressBar: Progress: 25.60 % (32 out of 125)
2020-06-30 10:29:03,409 [Thread-7] INFO freon.ProgressBar: Progress: 27.20 % (34 out of 125)
2020-06-30 10:29:04,409 [Thread-7] INFO freon.ProgressBar: Progress: 27.20 % (34 out of 125)
2020-06-30 10:29:05,410 [Thread-7] INFO freon.ProgressBar: Progress: 27.20 % (34 out of 125)
2020-06-30 10:29:06,410 [Thread-7] INFO freon.ProgressBar: Progress: 32.80 % (41 out of 125)
2020-06-30 10:29:07,411 [Thread-7] INFO freon.ProgressBar: Progress: 32.80 % (41 out of 125)
2020-06-30 10:29:08,411 [Thread-7] INFO freon.ProgressBar: Progress: 32.80 % (41 out of 125)
2020-06-30 10:29:09,412 [Thread-7] INFO freon.ProgressBar: Progress: 37.60 % (47 out of 125)
2020-06-30 10:29:10,412 [Thread-7] INFO freon.ProgressBar: Progress: 37.60 % (47 out of 125)
2020-06-30 10:29:11,413 [Thread-7] INFO freon.ProgressBar: Progress: 37.60 % (47 out of 125)
2020-06-30 10:29:12,413 [Thread-7] INFO freon.ProgressBar: Progress: 44.00 % (55 out of 125)
2020-06-30 10:29:13,414 [Thread-7] INFO freon.ProgressBar: Progress: 44.00 % (55 out of 125)
2020-06-30 10:29:14,414 [Thread-7] INFO freon.ProgressBar: Progress: 44.00 % (55 out of 125)
2020-06-30 10:29:15,415 [Thread-7] INFO freon.ProgressBar: Progress: 44.80 % (56 out of 125)
2020-06-30 10:29:16,415 [Thread-7] INFO freon.ProgressBar: Progress: 44.80 % (56 out of 125)
2020-06-30 10:29:17,416 [Thread-7] INFO freon.ProgressBar: Progress: 45.60 % (57 out of 125)
2020-06-30 10:29:18,416 [Thread-7] INFO freon.ProgressBar: Progress: 45.60 % (57 out of 125)
2020-06-30 10:29:19,417 [Thread-7] INFO freon.ProgressBar: Progress: 45.60 % (57 out of 125)
2020-06-30 10:29:20,420 [Thread-7] INFO freon.ProgressBar: Progress: 51.20 % (64 out of 125)
2020-06-30 10:29:21,421 [Thread-7] INFO freon.ProgressBar: Progress: 52.00 % (65 out of 125)
2020-06-30 10:29:22,421 [Thread-7] INFO freon.ProgressBar: Progress: 52.00 % (65 out of 125)
2020-06-30 10:29:23,422 [Thread-7] INFO freon.ProgressBar: Progress: 52.80 % (66 out of 125)
2020-06-30 10:29:24,422 [Thread-7] INFO freon.ProgressBar: Progress: 52.80 % (66 out of 125)
2020-06-30 10:29:25,423 [Thread-7] INFO freon.ProgressBar: Progress: 52.80 % (66 out of 125)
2020-06-30 10:29:26,423 [Thread-7] INFO freon.ProgressBar: Progress: 55.20 % (69 out of 125)
2020-06-30 10:29:27,424 [Thread-7] INFO freon.ProgressBar: Progress: 55.20 % (69 out of 125)
2020-06-30 10:29:28,425 [Thread-7] INFO freon.ProgressBar: Progress: 56.00 % (70 out of 125)
2020-06-30 10:29:29,426 [Thread-7] INFO freon.ProgressBar: Progress: 56.80 % (71 out of 125)
2020-06-30 10:29:30,426 [Thread-7] INFO freon.ProgressBar: Progress: 56.80 % (71 out of 125)
2020-06-30 10:29:31,427 [Thread-7] INFO freon.ProgressBar: Progress: 57.60 % (72 out of 125)
2020-06-30 10:29:32,427 [Thread-7] INFO freon.ProgressBar: Progress: 57.60 % (72 out of 125)
2020-06-30 10:29:33,427 [Thread-7] INFO freon.ProgressBar: Progress: 57.60 % (72 out of 125)
2020-06-30 10:29:34,428 [Thread-7] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2020-06-30 10:29:35,428 [Thread-7] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2020-06-30 10:29:36,431 [Thread-7] INFO freon.ProgressBar: Progress: 64.00 % (80 out of 125)
2020-06-30 10:29:37,431 [Thread-7] INFO freon.ProgressBar: Progress: 66.40 % (83 out of 125)
2020-06-30 10:29:38,432 [Thread-7] INFO freon.ProgressBar: Progress: 66.40 % (83 out of 125)
2020-06-30 10:29:39,432 [Thread-7] INFO freon.ProgressBar: Progress: 68.00 % (85 out of 125)
2020-06-30 10:29:40,432 [Thread-7] INFO freon.ProgressBar: Progress: 68.00 % (85 out of 125)
2020-06-30 10:29:41,433 [Thread-7] INFO freon.ProgressBar: Progress: 68.00 % (85 out of 125)
2020-06-30 10:29:42,434 [Thread-7] INFO freon.ProgressBar: Progress: 70.40 % (88 out of 125)
2020-06-30 10:29:43,434 [Thread-7] INFO freon.ProgressBar: Progress: 70.40 % (88 out of 125)
2020-06-30 10:29:44,435 [Thread-7] INFO freon.ProgressBar: Progress: 71.20 % (89 out of 125)
2020-06-30 10:29:45,435 [Thread-7] INFO freon.ProgressBar: Progress: 72.00 % (90 out of 125)
2020-06-30 10:29:46,436 [Thread-7] INFO freon.ProgressBar: Progress: 72.00 % (90 out of 125)
2020-06-30 10:29:47,437 [Thread-7] INFO freon.ProgressBar: Progress: 75.20 % (94 out of 125)
2020-06-30 10:29:48,437 [Thread-7] INFO freon.ProgressBar: Progress: 75.20 % (94 out of 125)
2020-06-30 10:29:49,438 [Thread-7] INFO freon.ProgressBar: Progress: 75.20 % (94 out of 125)
2020-06-30 10:29:50,438 [Thread-7] INFO freon.ProgressBar: Progress: 77.60 % (97 out of 125)
2020-06-30 10:29:51,439 [Thread-7] INFO freon.ProgressBar: Progress: 77.60 % (97 out of 125)
2020-06-30 10:29:52,440 [Thread-7] INFO freon.ProgressBar: Progress: 80.00 % (100 out of 125)
2020-06-30 10:29:53,441 [Thread-7] INFO freon.ProgressBar: Progress: 81.60 % (102 out of 125)
2020-06-30 10:29:54,441 [Thread-7] INFO freon.ProgressBar: Progress: 81.60 % (102 out of 125)
2020-06-30 10:29:55,442 [Thread-7] INFO freon.ProgressBar: Progress: 84.80 % (106 out of 125)
2020-06-30 10:29:56,442 [Thread-7] INFO freon.ProgressBar: Progress: 84.80 % (106 out of 125)
2020-06-30 10:29:57,443 [Thread-7] INFO freon.ProgressBar: Progress: 84.80 % (106 out of 125)
2020-06-30 10:29:58,443 [Thread-7] INFO freon.ProgressBar: Progress: 88.00 % (110 out of 125)
2020-06-30 10:29:59,443 [Thread-7] INFO freon.ProgressBar: Progress: 88.00 % (110 out of 125)
2020-06-30 10:30:00,444 [Thread-7] INFO freon.ProgressBar: Progress: 88.00 % (110 out of 125)
2020-06-30 10:30:01,445 [Thread-7] INFO freon.ProgressBar: Progress: 89.60 % (112 out of 125)
2020-06-30 10:30:02,445 [Thread-7] INFO freon.ProgressBar: Progress: 89.60 % (112 out of 125)
2020-06-30 10:30:03,445 [Thread-7] INFO freon.ProgressBar: Progress: 94.40 % (118 out of 125)
2020-06-30 10:30:04,446 [Thread-7] INFO freon.ProgressBar: Progress: 96.80 % (121 out of 125)
2020-06-30 10:30:05,446 [Thread-7] INFO freon.ProgressBar: Progress: 96.80 % (121 out of 125)
2020-06-30 10:30:06,447 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,430
Average Time spent in bucket creation: 00:00:00,166
Average Time spent in key creation: 00:00:01,927
Average Time spent in key write: 00:00:00,939
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:01:27,785
***************************************************</msg>
<status status="PASS" starttime="20200630 10:30:11.770" endtime="20200630 10:30:11.771"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:30:11.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:30:11.772" endtime="20200630 10:30:11.772"></status>
</kw>
<msg timestamp="20200630 10:30:11.772" level="INFO">${result} = 2020-06-30 10:28:43,256 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:28:43,417 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 10:28:41.971" endtime="20200630 10:30:11.772"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" starttime="20200630 10:30:11.773" endtime="20200630 10:30:11.774"></status>
</kw>
<status status="PASS" starttime="20200630 10:30:11.773" endtime="20200630 10:30:11.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" starttime="20200630 10:30:11.775" endtime="20200630 10:30:11.775"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 10:28:41.970" endtime="20200630 10:30:11.775" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200630 10:28:41.848" endtime="20200630 10:30:11.776"></status>
</suite>
<suite id="s1-s2" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200630 10:30:11.785" level="INFO">${random} = 55164</msg>
<status status="PASS" starttime="20200630 10:30:11.784" endtime="20200630 10:30:11.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200630 10:30:11.785" level="INFO">${prefix} = 55164</msg>
<status status="PASS" starttime="20200630 10:30:11.785" endtime="20200630 10:30:11.785"></status>
</kw>
<status status="PASS" starttime="20200630 10:30:11.784" endtime="20200630 10:30:11.785"></status>
</kw>
<test id="s1-s2-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200630 10:30:11.786" endtime="20200630 10:30:11.786"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:30:11.789" level="INFO">Running command 'ozone sh volume info o3://om:9862/55164-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:30:14.222" level="INFO">${rc} = 255</msg>
<msg timestamp="20200630 10:30:14.222" level="INFO">${output} = VOLUME_NOT_FOUND Volume 55164-rpcwoport is not found</msg>
<status status="PASS" starttime="20200630 10:30:11.787" endtime="20200630 10:30:14.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:30:14.223" level="INFO">VOLUME_NOT_FOUND Volume 55164-rpcwoport is not found</msg>
<status status="PASS" starttime="20200630 10:30:14.222" endtime="20200630 10:30:14.223"></status>
</kw>
<msg timestamp="20200630 10:30:14.223" level="INFO">${result} = VOLUME_NOT_FOUND Volume 55164-rpcwoport is not found</msg>
<status status="PASS" starttime="20200630 10:30:11.787" endtime="20200630 10:30:14.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200630 10:30:14.223" endtime="20200630 10:30:14.224"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:30:14.227" level="INFO">Running command 'ozone sh volume create o3://om:9862/55164-rpcwoport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:30:16.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:30:16.697" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:30:14.225" endtime="20200630 10:30:16.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:30:16.698" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:30:16.698" endtime="20200630 10:30:16.698"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:30:16.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:30:16.698" endtime="20200630 10:30:16.699"></status>
</kw>
<msg timestamp="20200630 10:30:16.699" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200630 10:30:14.224" endtime="20200630 10:30:16.699"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200630 10:30:16.700" endtime="20200630 10:30:16.700"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:30:16.704" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="55164-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:30:19.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:30:19.471" level="INFO">${output} = {
  "metadata": {},
  "name": "55164-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T10:30:16.606Z",
  "modificationTime": "2020-06-30T10:30:16.606Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200630 10:30:16.701" endtime="20200630 10:30:19.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:30:19.472" level="INFO">{
  "metadata": {},
  "name": "55164-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T10:30:16.606Z",
  "modificationTime": "2020-06-30T10:30:16.606Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200630 10:30:19.471" endtime="20200630 10:30:19.472"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:30:19.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:30:19.472" endtime="20200630 10:30:19.473"></status>
</kw>
<msg timestamp="20200630 10:30:19.473" level="INFO">${result} = {
  "metadata": {},
  "name": "55164-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T10:30:16.606Z",
  "modificationTime": "2020-06-30T10:30:16.606Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200630 10:30:16.700" endtime="20200630 10:30:19.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200630 10:30:19.473" endtime="20200630 10:30:19.474"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:30:19.476" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="55164-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:30:22.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:30:22.260" level="INFO">${output} = {
  "metadata": {},
  "name": "55164-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T10:30:16.606Z",
  "modificationTime": "2020-06-30T10:30:16.606Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200630 10:30:19.474" endtime="20200630 10:30:22.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:30:22.262" level="INFO">{
  "metadata": {},
  "name": "55164-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T10:30:16.606Z",
  "modificationTime": "2020-06-30T10:30:16.606Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200630 10:30:22.261" endtime="20200630 10:30:22.262"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:30:22.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:30:22.262" endtime="20200630 10:30:22.262"></status>
</kw>
<msg timestamp="20200630 10:30:22.262" level="INFO">${result} = {
  "metadata": {},
  "name": "55164-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T10:30:16.606Z",
  "modificationTime": "2020-06-30T10:30:16.606Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200630 10:30:19.474" endtime="20200630 10:30:22.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200630 10:30:22.263" endtime="20200630 10:30:22.263"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:30:22.267" level="INFO">Running command 'ozone sh volume update o3://om:9862/55164-rpcwoport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:30:24.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:30:24.988" level="INFO">${output} = {
  "metadata" : { },
  "name" : "55164-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-30T10:30:16.606Z",
  "modificationTime" : "2020-06-30T10:30:24.671Z",
  "acl...</msg>
<status status="PASS" starttime="20200630 10:30:22.264" endtime="20200630 10:30:24.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:30:24.990" level="INFO">{
  "metadata" : { },
  "name" : "55164-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-30T10:30:16.606Z",
  "modificationTime" : "2020-06-30T10:30:24.671Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200630 10:30:24.989" endtime="20200630 10:30:24.990"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:30:24.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:30:24.990" endtime="20200630 10:30:24.991"></status>
</kw>
<status status="PASS" starttime="20200630 10:30:22.263" endtime="20200630 10:30:24.991"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:30:24.994" level="INFO">Running command 'ozone sh volume info o3://om:9862/55164-rpcwoport | jq -r '. | select(.name=="55164-rpcwoport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:30:28.101" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:30:28.101" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200630 10:30:24.992" endtime="20200630 10:30:28.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:30:28.103" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200630 10:30:28.102" endtime="20200630 10:30:28.103"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:30:28.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:30:28.103" endtime="20200630 10:30:28.104"></status>
</kw>
<msg timestamp="20200630 10:30:28.104" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200630 10:30:24.991" endtime="20200630 10:30:28.104"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200630 10:30:28.104" endtime="20200630 10:30:28.104"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:30:28.108" level="INFO">Running command 'ozone sh bucket create o3://om:9862/55164-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:30:30.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:30:30.598" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:30:28.105" endtime="20200630 10:30:30.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:30:30.599" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:30:30.598" endtime="20200630 10:30:30.599"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:30:30.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:30:30.599" endtime="20200630 10:30:30.600"></status>
</kw>
<status status="PASS" starttime="20200630 10:30:28.105" endtime="20200630 10:30:30.600"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:30:30.605" level="INFO">Running command 'ozone sh bucket info o3://om:9862/55164-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:30:33.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:30:33.380" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200630 10:30:30.601" endtime="20200630 10:30:33.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:30:33.381" level="INFO">DISK</msg>
<status status="PASS" starttime="20200630 10:30:33.380" endtime="20200630 10:30:33.381"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:30:33.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:30:33.381" endtime="20200630 10:30:33.382"></status>
</kw>
<msg timestamp="20200630 10:30:33.382" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200630 10:30:30.600" endtime="20200630 10:30:33.382"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200630 10:30:33.382" endtime="20200630 10:30:33.383"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:30:33.386" level="INFO">Running command 'ozone sh bucket list o3://om:9862/55164-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:30:36.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:30:36.150" level="INFO">${output} = 55164-rpcwoport</msg>
<status status="PASS" starttime="20200630 10:30:33.383" endtime="20200630 10:30:36.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:30:36.151" level="INFO">55164-rpcwoport</msg>
<status status="PASS" starttime="20200630 10:30:36.151" endtime="20200630 10:30:36.151"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:30:36.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:30:36.152" endtime="20200630 10:30:36.152"></status>
</kw>
<msg timestamp="20200630 10:30:36.152" level="INFO">${result} = 55164-rpcwoport</msg>
<status status="PASS" starttime="20200630 10:30:33.383" endtime="20200630 10:30:36.152"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200630 10:30:36.153" endtime="20200630 10:30:36.153"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:30:36.157" level="INFO">Running command 'ozone sh key put o3://om:9862/55164-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:30:40.698" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:30:40.698" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:30:36.155" endtime="20200630 10:30:40.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:30:40.699" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:30:40.699" endtime="20200630 10:30:40.699"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:30:40.700" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:30:40.699" endtime="20200630 10:30:40.700"></status>
</kw>
<status status="PASS" starttime="20200630 10:30:36.154" endtime="20200630 10:30:40.700"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:30:40.702" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:30:40.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:30:40.705" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:30:40.701" endtime="20200630 10:30:40.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:30:40.706" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:30:40.705" endtime="20200630 10:30:40.706"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:30:40.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:30:40.706" endtime="20200630 10:30:40.706"></status>
</kw>
<status status="PASS" starttime="20200630 10:30:40.700" endtime="20200630 10:30:40.707"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:30:40.709" level="INFO">Running command 'ozone sh key get o3://om:9862/55164-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:30:45.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:30:45.093" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:30:40.707" endtime="20200630 10:30:45.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:30:45.094" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:30:45.094" endtime="20200630 10:30:45.095"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:30:45.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:30:45.095" endtime="20200630 10:30:45.095"></status>
</kw>
<status status="PASS" starttime="20200630 10:30:40.707" endtime="20200630 10:30:45.096"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:30:45.098" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:30:45.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:30:45.102" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:30:45.096" endtime="20200630 10:30:45.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:30:45.103" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:30:45.102" endtime="20200630 10:30:45.103"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:30:45.103" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:30:45.103" endtime="20200630 10:30:45.103"></status>
</kw>
<status status="PASS" starttime="20200630 10:30:45.096" endtime="20200630 10:30:45.103"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:30:45.107" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/55164-rpcwoport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:30:49.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:30:49.526" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:30:45.104" endtime="20200630 10:30:49.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:30:49.527" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:30:49.526" endtime="20200630 10:30:49.527"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:30:49.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:30:49.527" endtime="20200630 10:30:49.528"></status>
</kw>
<status status="PASS" starttime="20200630 10:30:45.103" endtime="20200630 10:30:49.528"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:30:49.530" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:30:49.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:30:49.533" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:30:49.528" endtime="20200630 10:30:49.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:30:49.533" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:30:49.533" endtime="20200630 10:30:49.534"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:30:49.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:30:49.534" endtime="20200630 10:30:49.534"></status>
</kw>
<status status="PASS" starttime="20200630 10:30:49.528" endtime="20200630 10:30:49.534"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:30:49.537" level="INFO">Running command 'ozone sh key get o3://om:9862/55164-rpcwoport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:30:53.685" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:30:53.685" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:30:49.535" endtime="20200630 10:30:53.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:30:53.687" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:30:53.686" endtime="20200630 10:30:53.687"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:30:53.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:30:53.687" endtime="20200630 10:30:53.687"></status>
</kw>
<status status="PASS" starttime="20200630 10:30:49.535" endtime="20200630 10:30:53.687"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:30:53.690" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:30:53.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:30:53.692" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:30:53.688" endtime="20200630 10:30:53.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:30:53.693" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:30:53.692" endtime="20200630 10:30:53.693"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:30:53.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:30:53.693" endtime="20200630 10:30:53.693"></status>
</kw>
<status status="PASS" starttime="20200630 10:30:53.688" endtime="20200630 10:30:53.694"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:30:53.696" level="INFO">Running command 'ozone sh key info o3://om:9862/55164-rpcwoport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:30:56.575" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:30:56.575" level="INFO">${output} = {
  "volumeName": "55164-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-30T10:30:47.444Z",
  "modificationTime": "2020-06-30T10:30:49.017Z",...</msg>
<status status="PASS" starttime="20200630 10:30:53.694" endtime="20200630 10:30:56.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:30:56.577" level="INFO">{
  "volumeName": "55164-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-30T10:30:47.444Z",
  "modificationTime": "2020-06-30T10:30:49.017Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104432471077159040,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200630 10:30:56.576" endtime="20200630 10:30:56.577"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:30:56.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:30:56.577" endtime="20200630 10:30:56.578"></status>
</kw>
<msg timestamp="20200630 10:30:56.579" level="INFO">${result} = {
  "volumeName": "55164-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-30T10:30:47.444Z",
  "modificationTime": "2020-06-30T10:30:49.017Z",...</msg>
<status status="PASS" starttime="20200630 10:30:53.694" endtime="20200630 10:30:56.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200630 10:30:56.579" endtime="20200630 10:30:56.579"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:30:56.583" level="INFO">Running command 'ozone sh key delete o3://om:9862/55164-rpcwoport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:30:59.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:30:59.232" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:30:56.580" endtime="20200630 10:30:59.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:30:59.233" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:30:59.232" endtime="20200630 10:30:59.233"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:30:59.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:30:59.234" endtime="20200630 10:30:59.234"></status>
</kw>
<status status="PASS" starttime="20200630 10:30:56.580" endtime="20200630 10:30:59.234"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:30:59.237" level="INFO">Running command 'ozone sh key cp o3://om:9862/55164-rpcwoport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:31:03.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:31:03.980" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:30:59.235" endtime="20200630 10:31:03.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:31:03.981" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:31:03.980" endtime="20200630 10:31:03.981"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:31:03.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:31:03.981" endtime="20200630 10:31:03.982"></status>
</kw>
<status status="PASS" starttime="20200630 10:30:59.235" endtime="20200630 10:31:03.982"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:31:03.985" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:31:03.987" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:31:03.987" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:31:03.983" endtime="20200630 10:31:03.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:31:03.988" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:31:03.987" endtime="20200630 10:31:03.988"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:31:03.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:31:03.988" endtime="20200630 10:31:03.989"></status>
</kw>
<status status="PASS" starttime="20200630 10:31:03.982" endtime="20200630 10:31:03.989"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:31:03.991" level="INFO">Running command 'ozone sh key get o3://om:9862/55164-rpcwoport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:31:08.217" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:31:08.217" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:31:03.990" endtime="20200630 10:31:08.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:31:08.218" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:31:08.217" endtime="20200630 10:31:08.218"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:31:08.219" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:31:08.218" endtime="20200630 10:31:08.219"></status>
</kw>
<status status="PASS" starttime="20200630 10:31:03.989" endtime="20200630 10:31:08.219"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:31:08.222" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:31:08.224" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:31:08.224" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:31:08.220" endtime="20200630 10:31:08.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:31:08.225" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:31:08.225" endtime="20200630 10:31:08.225"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:31:08.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:31:08.226" endtime="20200630 10:31:08.226"></status>
</kw>
<status status="PASS" starttime="20200630 10:31:08.219" endtime="20200630 10:31:08.226"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:31:08.228" level="INFO">Running command 'ozone sh key delete o3://om:9862/55164-rpcwoport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:31:10.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:31:10.900" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:31:08.227" endtime="20200630 10:31:10.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:31:10.901" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:31:10.900" endtime="20200630 10:31:10.901"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:31:10.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:31:10.901" endtime="20200630 10:31:10.901"></status>
</kw>
<status status="PASS" starttime="20200630 10:31:08.226" endtime="20200630 10:31:10.902"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:31:10.904" level="INFO">Running command 'ozone sh key get o3://om:9862/55164-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:31:13.453" level="INFO">${rc} = 255</msg>
<msg timestamp="20200630 10:31:13.453" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200630 10:31:10.902" endtime="20200630 10:31:13.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:31:13.454" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200630 10:31:13.454" endtime="20200630 10:31:13.454"></status>
</kw>
<msg timestamp="20200630 10:31:13.454" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200630 10:31:10.902" endtime="20200630 10:31:13.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200630 10:31:13.455" endtime="20200630 10:31:13.455"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:31:13.458" level="INFO">Running command 'ozone sh key get --force o3://om:9862/55164-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:31:18.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:31:18.037" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:31:13.456" endtime="20200630 10:31:18.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:31:18.038" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:31:18.038" endtime="20200630 10:31:18.038"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:31:18.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:31:18.038" endtime="20200630 10:31:18.039"></status>
</kw>
<msg timestamp="20200630 10:31:18.039" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200630 10:31:13.455" endtime="20200630 10:31:18.039"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200630 10:31:18.039" endtime="20200630 10:31:18.040"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:31:18.042" level="INFO">Running command 'ozone sh key info o3://om:9862/55164-rpcwoport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:31:20.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:31:20.955" level="INFO">${output} = {
  "volumeName": "55164-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-30T10:30:38.597Z",
  "modificationTime": "2020-06-30T10:30:40.301Z",
  "re...</msg>
<status status="PASS" starttime="20200630 10:31:18.040" endtime="20200630 10:31:20.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:31:20.956" level="INFO">{
  "volumeName": "55164-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-30T10:30:38.597Z",
  "modificationTime": "2020-06-30T10:30:40.301Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104432470497427580,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200630 10:31:20.955" endtime="20200630 10:31:20.956"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:31:20.957" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:31:20.957" endtime="20200630 10:31:20.957"></status>
</kw>
<msg timestamp="20200630 10:31:20.957" level="INFO">${result} = {
  "volumeName": "55164-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-30T10:30:38.597Z",
  "modificationTime": "2020-06-30T10:30:40.301Z",
  "re...</msg>
<status status="PASS" starttime="20200630 10:31:18.040" endtime="20200630 10:31:20.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200630 10:31:20.958" endtime="20200630 10:31:20.958"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:31:20.961" level="INFO">Running command 'ozone sh key list o3://om:9862/55164-rpcwoport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:31:23.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:31:23.767" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200630 10:31:20.959" endtime="20200630 10:31:23.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:31:23.768" level="INFO">key1</msg>
<status status="PASS" starttime="20200630 10:31:23.767" endtime="20200630 10:31:23.768"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:31:23.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:31:23.768" endtime="20200630 10:31:23.769"></status>
</kw>
<msg timestamp="20200630 10:31:23.769" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200630 10:31:20.958" endtime="20200630 10:31:23.769"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200630 10:31:23.769" endtime="20200630 10:31:23.770"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:31:23.773" level="INFO">Running command 'ozone sh key rename o3://om:9862/55164-rpcwoport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:31:26.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:31:26.356" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:31:23.771" endtime="20200630 10:31:26.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:31:26.357" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:31:26.356" endtime="20200630 10:31:26.357"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:31:26.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:31:26.357" endtime="20200630 10:31:26.357"></status>
</kw>
<status status="PASS" starttime="20200630 10:31:23.770" endtime="20200630 10:31:26.358"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:31:26.362" level="INFO">Running command 'ozone sh key list o3://om:9862/55164-rpcwoport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:31:29.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:31:29.137" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200630 10:31:26.358" endtime="20200630 10:31:29.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:31:29.138" level="INFO">key2</msg>
<status status="PASS" starttime="20200630 10:31:29.138" endtime="20200630 10:31:29.138"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:31:29.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:31:29.139" endtime="20200630 10:31:29.139"></status>
</kw>
<msg timestamp="20200630 10:31:29.139" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200630 10:31:26.358" endtime="20200630 10:31:29.139"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200630 10:31:29.140" endtime="20200630 10:31:29.140"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:31:29.143" level="INFO">Running command 'ozone sh key delete o3://om:9862/55164-rpcwoport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:31:31.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:31:31.669" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:31:29.141" endtime="20200630 10:31:31.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:31:31.670" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:31:31.669" endtime="20200630 10:31:31.670"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:31:31.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:31:31.670" endtime="20200630 10:31:31.671"></status>
</kw>
<status status="PASS" starttime="20200630 10:31:29.141" endtime="20200630 10:31:31.671"></status>
</kw>
<status status="PASS" starttime="20200630 10:30:36.153" endtime="20200630 10:31:31.671"></status>
</kw>
<status status="PASS" starttime="20200630 10:30:36.153" endtime="20200630 10:31:31.671"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:31:31.674" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/55164-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:31:34.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:31:34.198" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:31:31.672" endtime="20200630 10:31:34.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:31:34.199" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:31:34.198" endtime="20200630 10:31:34.199"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:31:34.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:31:34.199" endtime="20200630 10:31:34.200"></status>
</kw>
<status status="PASS" starttime="20200630 10:31:31.672" endtime="20200630 10:31:34.200"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:31:34.204" level="INFO">Running command 'ozone sh volume delete o3://om:9862/55164-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:31:36.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:31:36.750" level="INFO">${output} = Volume 55164-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200630 10:31:34.201" endtime="20200630 10:31:36.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:31:36.752" level="INFO">Volume 55164-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200630 10:31:36.751" endtime="20200630 10:31:36.752"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:31:36.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:31:36.752" endtime="20200630 10:31:36.752"></status>
</kw>
<status status="PASS" starttime="20200630 10:31:34.200" endtime="20200630 10:31:36.753"></status>
</kw>
<status status="PASS" starttime="20200630 10:30:11.787" endtime="20200630 10:31:36.753"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200630 10:30:11.786" endtime="20200630 10:31:36.753" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200630 10:31:36.755" endtime="20200630 10:31:36.755"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:31:36.760" level="INFO">Running command 'ozone sh volume create o3://om:9862/55164-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:31:39.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:31:39.608" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:31:36.757" endtime="20200630 10:31:39.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:31:39.609" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:31:39.609" endtime="20200630 10:31:39.609"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:31:39.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:31:39.610" endtime="20200630 10:31:39.610"></status>
</kw>
<status status="PASS" starttime="20200630 10:31:36.756" endtime="20200630 10:31:39.610"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:31:39.613" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/55164-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:31:42.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:31:42.418" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200630 10:31:39.611" endtime="20200630 10:31:42.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:31:42.419" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200630 10:31:42.419" endtime="20200630 10:31:42.419"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:31:42.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:31:42.419" endtime="20200630 10:31:42.420"></status>
</kw>
<msg timestamp="20200630 10:31:42.420" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200630 10:31:39.610" endtime="20200630 10:31:42.420"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200630 10:31:42.421" endtime="20200630 10:31:42.422"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:31:42.425" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/55164-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:31:45.057" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:31:45.057" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200630 10:31:42.423" endtime="20200630 10:31:45.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:31:45.058" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200630 10:31:45.057" endtime="20200630 10:31:45.058"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:31:45.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:31:45.058" endtime="20200630 10:31:45.059"></status>
</kw>
<msg timestamp="20200630 10:31:45.059" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200630 10:31:42.422" endtime="20200630 10:31:45.059"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:31:45.064" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/55164-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:31:47.729" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:31:47.729" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 10:31:45.060" endtime="20200630 10:31:47.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:31:47.730" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200630 10:31:47.729" endtime="20200630 10:31:47.730"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:31:47.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:31:47.730" endtime="20200630 10:31:47.730"></status>
</kw>
<msg timestamp="20200630 10:31:47.730" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 10:31:45.059" endtime="20200630 10:31:47.730"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200630 10:31:47.731" endtime="20200630 10:31:47.731"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:31:47.734" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/55164-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:31:50.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:31:50.223" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200630 10:31:47.732" endtime="20200630 10:31:50.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:31:50.224" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200630 10:31:50.223" endtime="20200630 10:31:50.224"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:31:50.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:31:50.224" endtime="20200630 10:31:50.225"></status>
</kw>
<msg timestamp="20200630 10:31:50.225" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200630 10:31:47.732" endtime="20200630 10:31:50.225"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:31:50.228" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/55164-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:31:53.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:31:53.022" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 10:31:50.226" endtime="20200630 10:31:53.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:31:53.023" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200630 10:31:53.022" endtime="20200630 10:31:53.023"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:31:53.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:31:53.023" endtime="20200630 10:31:53.024"></status>
</kw>
<msg timestamp="20200630 10:31:53.024" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 10:31:50.226" endtime="20200630 10:31:53.024"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200630 10:31:53.024" endtime="20200630 10:31:53.025"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:31:53.028" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/55164-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:31:55.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:31:55.472" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200630 10:31:53.026" endtime="20200630 10:31:55.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:31:55.473" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200630 10:31:55.472" endtime="20200630 10:31:55.473"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:31:55.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:31:55.473" endtime="20200630 10:31:55.474"></status>
</kw>
<msg timestamp="20200630 10:31:55.474" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200630 10:31:53.026" endtime="20200630 10:31:55.474"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:31:55.477" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/55164-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:31:58.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:31:58.267" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200630 10:31:55.475" endtime="20200630 10:31:58.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:31:58.268" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200630 10:31:58.268" endtime="20200630 10:31:58.268"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:31:58.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:31:58.269" endtime="20200630 10:31:58.269"></status>
</kw>
<msg timestamp="20200630 10:31:58.269" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200630 10:31:55.474" endtime="20200630 10:31:58.269"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200630 10:31:58.269" endtime="20200630 10:31:58.270"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200630 10:31:58.270" endtime="20200630 10:31:58.271"></status>
</kw>
<status status="PASS" starttime="20200630 10:31:36.755" endtime="20200630 10:31:58.271"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200630 10:31:36.754" endtime="20200630 10:31:58.271" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200630 10:31:58.272" endtime="20200630 10:31:58.273"></status>
</kw>
<kw name="Test Bucket Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:31:58.278" level="INFO">Running command 'ozone sh bucket create o3://om:9862/55164-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:32:00.949" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:32:00.949" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:31:58.276" endtime="20200630 10:32:00.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:32:00.952" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:32:00.949" endtime="20200630 10:32:00.952"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:32:00.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:32:00.952" endtime="20200630 10:32:00.953"></status>
</kw>
<status status="PASS" starttime="20200630 10:31:58.275" endtime="20200630 10:32:00.953"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:32:00.957" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/55164-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:32:03.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:32:03.669" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 10:32:00.954" endtime="20200630 10:32:03.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:32:03.670" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200630 10:32:03.669" endtime="20200630 10:32:03.670"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:32:03.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:32:03.671" endtime="20200630 10:32:03.671"></status>
</kw>
<msg timestamp="20200630 10:32:03.672" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 10:32:00.953" endtime="20200630 10:32:03.672"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200630 10:32:03.672" endtime="20200630 10:32:03.673"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:32:03.677" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/55164-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:32:06.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:32:06.135" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200630 10:32:03.673" endtime="20200630 10:32:06.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:32:06.136" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200630 10:32:06.135" endtime="20200630 10:32:06.136"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:32:06.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:32:06.136" endtime="20200630 10:32:06.136"></status>
</kw>
<msg timestamp="20200630 10:32:06.137" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200630 10:32:03.673" endtime="20200630 10:32:06.137"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:32:06.140" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/55164-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:32:08.653" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:32:08.653" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 10:32:06.137" endtime="20200630 10:32:08.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:32:08.654" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200630 10:32:08.653" endtime="20200630 10:32:08.654"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:32:08.655" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:32:08.654" endtime="20200630 10:32:08.655"></status>
</kw>
<msg timestamp="20200630 10:32:08.655" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 10:32:06.137" endtime="20200630 10:32:08.655"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200630 10:32:08.656" endtime="20200630 10:32:08.657"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:32:08.660" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/55164-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:32:11.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:32:11.334" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200630 10:32:08.657" endtime="20200630 10:32:11.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:32:11.335" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200630 10:32:11.334" endtime="20200630 10:32:11.335"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:32:11.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:32:11.335" endtime="20200630 10:32:11.336"></status>
</kw>
<msg timestamp="20200630 10:32:11.336" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200630 10:32:08.657" endtime="20200630 10:32:11.336"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:32:11.340" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/55164-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:32:14.159" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:32:14.159" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 10:32:11.337" endtime="20200630 10:32:14.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:32:14.160" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200630 10:32:14.159" endtime="20200630 10:32:14.160"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:32:14.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:32:14.160" endtime="20200630 10:32:14.161"></status>
</kw>
<msg timestamp="20200630 10:32:14.161" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 10:32:11.336" endtime="20200630 10:32:14.161"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200630 10:32:14.161" endtime="20200630 10:32:14.162"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:32:14.165" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/55164-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:32:16.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:32:16.796" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200630 10:32:14.163" endtime="20200630 10:32:16.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:32:16.798" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200630 10:32:16.797" endtime="20200630 10:32:16.798"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:32:16.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:32:16.798" endtime="20200630 10:32:16.798"></status>
</kw>
<msg timestamp="20200630 10:32:16.799" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200630 10:32:14.162" endtime="20200630 10:32:16.799"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:32:16.801" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/55164-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:32:19.496" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:32:19.497" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200630 10:32:16.799" endtime="20200630 10:32:19.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:32:19.498" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200630 10:32:19.497" endtime="20200630 10:32:19.498"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:32:19.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:32:19.498" endtime="20200630 10:32:19.498"></status>
</kw>
<msg timestamp="20200630 10:32:19.498" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200630 10:32:16.799" endtime="20200630 10:32:19.498"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200630 10:32:19.499" endtime="20200630 10:32:19.499"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200630 10:32:19.499" endtime="20200630 10:32:19.500"></status>
</kw>
<status status="PASS" starttime="20200630 10:31:58.273" endtime="20200630 10:32:19.500"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200630 10:31:58.272" endtime="20200630 10:32:19.500" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200630 10:32:19.502" endtime="20200630 10:32:19.502"></status>
</kw>
<kw name="Test key Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:32:19.505" level="INFO">Running command 'ozone sh key put o3://om:9862/55164-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:32:24.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:32:24.065" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:32:19.503" endtime="20200630 10:32:24.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:32:24.067" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:32:24.066" endtime="20200630 10:32:24.067"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:32:24.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:32:24.067" endtime="20200630 10:32:24.067"></status>
</kw>
<status status="PASS" starttime="20200630 10:32:19.503" endtime="20200630 10:32:24.068"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:32:24.071" level="INFO">Running command 'ozone sh key getacl o3://om:9862/55164-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:32:26.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:32:26.937" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 10:32:24.069" endtime="20200630 10:32:26.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:32:26.938" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200630 10:32:26.937" endtime="20200630 10:32:26.938"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:32:26.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:32:26.938" endtime="20200630 10:32:26.939"></status>
</kw>
<msg timestamp="20200630 10:32:26.939" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 10:32:24.068" endtime="20200630 10:32:26.939"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200630 10:32:26.939" endtime="20200630 10:32:26.940"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:32:26.944" level="INFO">Running command 'ozone sh key addacl o3://om:9862/55164-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:32:29.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:32:29.624" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200630 10:32:26.940" endtime="20200630 10:32:29.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:32:29.625" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200630 10:32:29.624" endtime="20200630 10:32:29.625"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:32:29.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:32:29.625" endtime="20200630 10:32:29.625"></status>
</kw>
<msg timestamp="20200630 10:32:29.626" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200630 10:32:26.940" endtime="20200630 10:32:29.626"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:32:29.629" level="INFO">Running command 'ozone sh key getacl o3://om:9862/55164-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:32:32.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:32:32.877" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 10:32:29.626" endtime="20200630 10:32:32.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:32:32.879" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200630 10:32:32.877" endtime="20200630 10:32:32.879"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:32:32.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:32:32.879" endtime="20200630 10:32:32.879"></status>
</kw>
<msg timestamp="20200630 10:32:32.879" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 10:32:29.626" endtime="20200630 10:32:32.880"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200630 10:32:32.880" endtime="20200630 10:32:32.881"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:32:32.883" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/55164-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:32:35.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:32:35.433" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200630 10:32:32.881" endtime="20200630 10:32:35.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:32:35.434" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200630 10:32:35.433" endtime="20200630 10:32:35.434"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:32:35.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:32:35.434" endtime="20200630 10:32:35.434"></status>
</kw>
<msg timestamp="20200630 10:32:35.435" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200630 10:32:32.881" endtime="20200630 10:32:35.435"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:32:35.437" level="INFO">Running command 'ozone sh key getacl o3://om:9862/55164-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:32:38.161" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:32:38.161" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 10:32:35.435" endtime="20200630 10:32:38.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:32:38.162" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20200630 10:32:38.161" endtime="20200630 10:32:38.162"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:32:38.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:32:38.162" endtime="20200630 10:32:38.162"></status>
</kw>
<msg timestamp="20200630 10:32:38.163" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 10:32:35.435" endtime="20200630 10:32:38.163"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200630 10:32:38.163" endtime="20200630 10:32:38.163"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:32:38.166" level="INFO">Running command 'ozone sh key setacl o3://om:9862/55164-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:32:40.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:32:40.523" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200630 10:32:38.164" endtime="20200630 10:32:40.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:32:40.525" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200630 10:32:40.524" endtime="20200630 10:32:40.525"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:32:40.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:32:40.525" endtime="20200630 10:32:40.525"></status>
</kw>
<msg timestamp="20200630 10:32:40.526" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200630 10:32:38.163" endtime="20200630 10:32:40.526"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:32:40.529" level="INFO">Running command 'ozone sh key getacl o3://om:9862/55164-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:32:43.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:32:43.206" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200630 10:32:40.527" endtime="20200630 10:32:43.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:32:43.207" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200630 10:32:43.206" endtime="20200630 10:32:43.207"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:32:43.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:32:43.207" endtime="20200630 10:32:43.207"></status>
</kw>
<msg timestamp="20200630 10:32:43.208" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200630 10:32:40.526" endtime="20200630 10:32:43.208"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200630 10:32:43.208" endtime="20200630 10:32:43.209"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200630 10:32:43.209" endtime="20200630 10:32:43.209"></status>
</kw>
<status status="PASS" starttime="20200630 10:32:19.502" endtime="20200630 10:32:43.210"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200630 10:32:19.501" endtime="20200630 10:32:43.210" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200630 10:32:43.211" endtime="20200630 10:32:43.211"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:32:43.215" level="INFO">Running command 'ozone sh volume info o3:///55164-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:32:46.109" level="INFO">${rc} = 255</msg>
<msg timestamp="20200630 10:32:46.109" level="INFO">${output} = VOLUME_NOT_FOUND Volume 55164-rpcwport is not found</msg>
<status status="PASS" starttime="20200630 10:32:43.213" endtime="20200630 10:32:46.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:32:46.110" level="INFO">VOLUME_NOT_FOUND Volume 55164-rpcwport is not found</msg>
<status status="PASS" starttime="20200630 10:32:46.109" endtime="20200630 10:32:46.110"></status>
</kw>
<msg timestamp="20200630 10:32:46.110" level="INFO">${result} = VOLUME_NOT_FOUND Volume 55164-rpcwport is not found</msg>
<status status="PASS" starttime="20200630 10:32:43.212" endtime="20200630 10:32:46.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200630 10:32:46.110" endtime="20200630 10:32:46.111"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:32:46.114" level="INFO">Running command 'ozone sh volume create o3:///55164-rpcwport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:32:48.679" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:32:48.679" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:32:46.111" endtime="20200630 10:32:48.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:32:48.680" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:32:48.679" endtime="20200630 10:32:48.680"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:32:48.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:32:48.680" endtime="20200630 10:32:48.681"></status>
</kw>
<msg timestamp="20200630 10:32:48.681" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200630 10:32:46.111" endtime="20200630 10:32:48.681"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200630 10:32:48.681" endtime="20200630 10:32:48.681"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:32:48.684" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="55164-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:32:51.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:32:51.284" level="INFO">${output} = {
  "metadata": {},
  "name": "55164-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T10:32:48.611Z",
  "modificationTime": "2020-06-30T10:32:48.611Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200630 10:32:48.682" endtime="20200630 10:32:51.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:32:51.285" level="INFO">{
  "metadata": {},
  "name": "55164-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T10:32:48.611Z",
  "modificationTime": "2020-06-30T10:32:48.611Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200630 10:32:51.285" endtime="20200630 10:32:51.286"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:32:51.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:32:51.286" endtime="20200630 10:32:51.286"></status>
</kw>
<msg timestamp="20200630 10:32:51.286" level="INFO">${result} = {
  "metadata": {},
  "name": "55164-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T10:32:48.611Z",
  "modificationTime": "2020-06-30T10:32:48.611Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200630 10:32:48.681" endtime="20200630 10:32:51.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200630 10:32:51.287" endtime="20200630 10:32:51.287"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:32:51.290" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="55164-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:32:54.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:32:54.048" level="INFO">${output} = {
  "metadata": {},
  "name": "55164-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T10:32:48.611Z",
  "modificationTime": "2020-06-30T10:32:48.611Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200630 10:32:51.288" endtime="20200630 10:32:54.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:32:54.049" level="INFO">{
  "metadata": {},
  "name": "55164-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T10:32:48.611Z",
  "modificationTime": "2020-06-30T10:32:48.611Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200630 10:32:54.048" endtime="20200630 10:32:54.049"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:32:54.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:32:54.049" endtime="20200630 10:32:54.050"></status>
</kw>
<msg timestamp="20200630 10:32:54.050" level="INFO">${result} = {
  "metadata": {},
  "name": "55164-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T10:32:48.611Z",
  "modificationTime": "2020-06-30T10:32:48.611Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200630 10:32:51.287" endtime="20200630 10:32:54.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200630 10:32:54.050" endtime="20200630 10:32:54.050"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:32:54.053" level="INFO">Running command 'ozone sh volume update o3:///55164-rpcwport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:32:56.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:32:56.879" level="INFO">${output} = {
  "metadata" : { },
  "name" : "55164-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-30T10:32:48.611Z",
  "modificationTime" : "2020-06-30T10:32:56.457Z",
  "acls...</msg>
<status status="PASS" starttime="20200630 10:32:54.051" endtime="20200630 10:32:56.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:32:56.880" level="INFO">{
  "metadata" : { },
  "name" : "55164-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-30T10:32:48.611Z",
  "modificationTime" : "2020-06-30T10:32:56.457Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200630 10:32:56.879" endtime="20200630 10:32:56.880"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:32:56.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:32:56.880" endtime="20200630 10:32:56.880"></status>
</kw>
<status status="PASS" starttime="20200630 10:32:54.051" endtime="20200630 10:32:56.881"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:32:56.884" level="INFO">Running command 'ozone sh volume info o3:///55164-rpcwport | jq -r '. | select(.name=="55164-rpcwport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:32:59.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:32:59.740" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200630 10:32:56.882" endtime="20200630 10:32:59.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:32:59.741" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200630 10:32:59.740" endtime="20200630 10:32:59.741"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:32:59.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:32:59.741" endtime="20200630 10:32:59.742"></status>
</kw>
<msg timestamp="20200630 10:32:59.742" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200630 10:32:56.881" endtime="20200630 10:32:59.742"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200630 10:32:59.742" endtime="20200630 10:32:59.742"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:32:59.745" level="INFO">Running command 'ozone sh bucket create o3:///55164-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:33:02.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:33:02.230" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:32:59.743" endtime="20200630 10:33:02.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:33:02.231" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:33:02.230" endtime="20200630 10:33:02.231"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:33:02.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:33:02.231" endtime="20200630 10:33:02.232"></status>
</kw>
<status status="PASS" starttime="20200630 10:32:59.742" endtime="20200630 10:33:02.232"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:33:02.235" level="INFO">Running command 'ozone sh bucket info o3:///55164-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:33:04.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:33:04.906" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200630 10:33:02.233" endtime="20200630 10:33:04.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:33:04.907" level="INFO">DISK</msg>
<status status="PASS" starttime="20200630 10:33:04.907" endtime="20200630 10:33:04.907"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:33:04.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:33:04.908" endtime="20200630 10:33:04.908"></status>
</kw>
<msg timestamp="20200630 10:33:04.908" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200630 10:33:02.232" endtime="20200630 10:33:04.908"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200630 10:33:04.908" endtime="20200630 10:33:04.909"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:33:04.912" level="INFO">Running command 'ozone sh bucket list o3:///55164-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:33:07.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:33:07.479" level="INFO">${output} = 55164-rpcwport</msg>
<status status="PASS" starttime="20200630 10:33:04.910" endtime="20200630 10:33:07.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:33:07.480" level="INFO">55164-rpcwport</msg>
<status status="PASS" starttime="20200630 10:33:07.479" endtime="20200630 10:33:07.480"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:33:07.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:33:07.481" endtime="20200630 10:33:07.481"></status>
</kw>
<msg timestamp="20200630 10:33:07.481" level="INFO">${result} = 55164-rpcwport</msg>
<status status="PASS" starttime="20200630 10:33:04.909" endtime="20200630 10:33:07.482"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200630 10:33:07.482" endtime="20200630 10:33:07.482"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:33:07.487" level="INFO">Running command 'ozone sh key put o3:///55164-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:33:11.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:33:11.960" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:33:07.484" endtime="20200630 10:33:11.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:33:11.961" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:33:11.960" endtime="20200630 10:33:11.961"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:33:11.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:33:11.961" endtime="20200630 10:33:11.962"></status>
</kw>
<status status="PASS" starttime="20200630 10:33:07.483" endtime="20200630 10:33:11.962"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:33:11.964" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:33:11.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:33:11.967" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:33:11.962" endtime="20200630 10:33:11.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:33:11.968" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:33:11.967" endtime="20200630 10:33:11.968"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:33:11.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:33:11.968" endtime="20200630 10:33:11.969"></status>
</kw>
<status status="PASS" starttime="20200630 10:33:11.962" endtime="20200630 10:33:11.969"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:33:11.972" level="INFO">Running command 'ozone sh key get o3:///55164-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:33:16.224" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:33:16.224" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:33:11.969" endtime="20200630 10:33:16.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:33:16.225" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:33:16.224" endtime="20200630 10:33:16.225"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:33:16.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:33:16.226" endtime="20200630 10:33:16.227"></status>
</kw>
<status status="PASS" starttime="20200630 10:33:11.969" endtime="20200630 10:33:16.227"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:33:16.230" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:33:16.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:33:16.232" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:33:16.228" endtime="20200630 10:33:16.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:33:16.233" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:33:16.233" endtime="20200630 10:33:16.233"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:33:16.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:33:16.234" endtime="20200630 10:33:16.234"></status>
</kw>
<status status="PASS" starttime="20200630 10:33:16.227" endtime="20200630 10:33:16.234"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:33:16.237" level="INFO">Running command 'ozone sh key put -t RATIS o3:///55164-rpcwport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:33:20.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:33:20.768" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:33:16.235" endtime="20200630 10:33:20.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:33:20.771" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:33:20.769" endtime="20200630 10:33:20.771"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:33:20.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:33:20.771" endtime="20200630 10:33:20.771"></status>
</kw>
<status status="PASS" starttime="20200630 10:33:16.235" endtime="20200630 10:33:20.772"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:33:20.774" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:33:20.777" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:33:20.777" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:33:20.772" endtime="20200630 10:33:20.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:33:20.778" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:33:20.777" endtime="20200630 10:33:20.778"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:33:20.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:33:20.778" endtime="20200630 10:33:20.778"></status>
</kw>
<status status="PASS" starttime="20200630 10:33:20.772" endtime="20200630 10:33:20.779"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:33:20.782" level="INFO">Running command 'ozone sh key get o3:///55164-rpcwport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:33:25.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:33:25.211" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:33:20.779" endtime="20200630 10:33:25.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:33:25.212" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:33:25.211" endtime="20200630 10:33:25.212"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:33:25.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:33:25.212" endtime="20200630 10:33:25.212"></status>
</kw>
<status status="PASS" starttime="20200630 10:33:20.779" endtime="20200630 10:33:25.213"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:33:25.215" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:33:25.217" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:33:25.217" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:33:25.213" endtime="20200630 10:33:25.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:33:25.218" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:33:25.217" endtime="20200630 10:33:25.218"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:33:25.219" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:33:25.219" endtime="20200630 10:33:25.219"></status>
</kw>
<status status="PASS" starttime="20200630 10:33:25.213" endtime="20200630 10:33:25.219"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:33:25.222" level="INFO">Running command 'ozone sh key info o3:///55164-rpcwport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:33:28.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:33:28.048" level="INFO">${output} = {
  "volumeName": "55164-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-30T10:33:18.609Z",
  "modificationTime": "2020-06-30T10:33:20.382Z",
...</msg>
<status status="PASS" starttime="20200630 10:33:25.220" endtime="20200630 10:33:28.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:33:28.049" level="INFO">{
  "volumeName": "55164-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-30T10:33:18.609Z",
  "modificationTime": "2020-06-30T10:33:20.382Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104432480983908480,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200630 10:33:28.049" endtime="20200630 10:33:28.050"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:33:28.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:33:28.050" endtime="20200630 10:33:28.050"></status>
</kw>
<msg timestamp="20200630 10:33:28.050" level="INFO">${result} = {
  "volumeName": "55164-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-30T10:33:18.609Z",
  "modificationTime": "2020-06-30T10:33:20.382Z",
...</msg>
<status status="PASS" starttime="20200630 10:33:25.219" endtime="20200630 10:33:28.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200630 10:33:28.051" endtime="20200630 10:33:28.051"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:33:28.053" level="INFO">Running command 'ozone sh key delete o3:///55164-rpcwport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:33:30.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:33:30.676" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:33:28.051" endtime="20200630 10:33:30.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:33:30.678" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:33:30.677" endtime="20200630 10:33:30.678"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:33:30.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:33:30.678" endtime="20200630 10:33:30.678"></status>
</kw>
<status status="PASS" starttime="20200630 10:33:28.051" endtime="20200630 10:33:30.678"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:33:30.681" level="INFO">Running command 'ozone sh key cp o3:///55164-rpcwport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:33:35.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:33:35.594" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:33:30.679" endtime="20200630 10:33:35.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:33:35.596" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:33:35.595" endtime="20200630 10:33:35.596"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:33:35.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:33:35.596" endtime="20200630 10:33:35.597"></status>
</kw>
<status status="PASS" starttime="20200630 10:33:30.679" endtime="20200630 10:33:35.597"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:33:35.600" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:33:35.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:33:35.603" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:33:35.598" endtime="20200630 10:33:35.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:33:35.603" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:33:35.603" endtime="20200630 10:33:35.604"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:33:35.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:33:35.604" endtime="20200630 10:33:35.604"></status>
</kw>
<status status="PASS" starttime="20200630 10:33:35.597" endtime="20200630 10:33:35.604"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:33:35.607" level="INFO">Running command 'ozone sh key get o3:///55164-rpcwport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:33:40.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:33:40.094" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:33:35.605" endtime="20200630 10:33:40.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:33:40.095" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:33:40.095" endtime="20200630 10:33:40.096"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:33:40.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:33:40.096" endtime="20200630 10:33:40.096"></status>
</kw>
<status status="PASS" starttime="20200630 10:33:35.604" endtime="20200630 10:33:40.096"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:33:40.099" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:33:40.101" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:33:40.101" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:33:40.097" endtime="20200630 10:33:40.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:33:40.102" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:33:40.102" endtime="20200630 10:33:40.102"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:33:40.103" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:33:40.103" endtime="20200630 10:33:40.103"></status>
</kw>
<status status="PASS" starttime="20200630 10:33:40.097" endtime="20200630 10:33:40.103"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:33:40.107" level="INFO">Running command 'ozone sh key delete o3:///55164-rpcwport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:33:42.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:33:42.718" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:33:40.104" endtime="20200630 10:33:42.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:33:42.719" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:33:42.718" endtime="20200630 10:33:42.719"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:33:42.720" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:33:42.719" endtime="20200630 10:33:42.720"></status>
</kw>
<status status="PASS" starttime="20200630 10:33:40.104" endtime="20200630 10:33:42.720"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:33:42.723" level="INFO">Running command 'ozone sh key get o3:///55164-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:33:45.188" level="INFO">${rc} = 255</msg>
<msg timestamp="20200630 10:33:45.188" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200630 10:33:42.721" endtime="20200630 10:33:45.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:33:45.189" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200630 10:33:45.188" endtime="20200630 10:33:45.189"></status>
</kw>
<msg timestamp="20200630 10:33:45.189" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200630 10:33:42.720" endtime="20200630 10:33:45.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200630 10:33:45.190" endtime="20200630 10:33:45.191"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:33:45.193" level="INFO">Running command 'ozone sh key get --force o3:///55164-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:33:49.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:33:49.723" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:33:45.191" endtime="20200630 10:33:49.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:33:49.724" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:33:49.723" endtime="20200630 10:33:49.724"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:33:49.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:33:49.724" endtime="20200630 10:33:49.725"></status>
</kw>
<msg timestamp="20200630 10:33:49.725" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200630 10:33:45.191" endtime="20200630 10:33:49.725"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200630 10:33:49.725" endtime="20200630 10:33:49.725"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:33:49.728" level="INFO">Running command 'ozone sh key info o3:///55164-rpcwport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:33:52.497" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:33:52.497" level="INFO">${output} = {
  "volumeName": "55164-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-30T10:33:09.811Z",
  "modificationTime": "2020-06-30T10:33:11.468Z",
  "rep...</msg>
<status status="PASS" starttime="20200630 10:33:49.726" endtime="20200630 10:33:52.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:33:52.498" level="INFO">{
  "volumeName": "55164-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-30T10:33:09.811Z",
  "modificationTime": "2020-06-30T10:33:11.468Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104432480407453820,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200630 10:33:52.497" endtime="20200630 10:33:52.498"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:33:52.499" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:33:52.499" endtime="20200630 10:33:52.499"></status>
</kw>
<msg timestamp="20200630 10:33:52.499" level="INFO">${result} = {
  "volumeName": "55164-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-30T10:33:09.811Z",
  "modificationTime": "2020-06-30T10:33:11.468Z",
  "rep...</msg>
<status status="PASS" starttime="20200630 10:33:49.726" endtime="20200630 10:33:52.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200630 10:33:52.500" endtime="20200630 10:33:52.500"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:33:52.503" level="INFO">Running command 'ozone sh key list o3:///55164-rpcwport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:33:55.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:33:55.315" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200630 10:33:52.501" endtime="20200630 10:33:55.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:33:55.316" level="INFO">key1</msg>
<status status="PASS" starttime="20200630 10:33:55.315" endtime="20200630 10:33:55.316"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:33:55.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:33:55.316" endtime="20200630 10:33:55.317"></status>
</kw>
<msg timestamp="20200630 10:33:55.317" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200630 10:33:52.500" endtime="20200630 10:33:55.317"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200630 10:33:55.318" endtime="20200630 10:33:55.318"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:33:55.321" level="INFO">Running command 'ozone sh key rename o3:///55164-rpcwport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:33:57.823" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:33:57.823" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:33:55.319" endtime="20200630 10:33:57.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:33:57.824" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:33:57.823" endtime="20200630 10:33:57.824"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:33:57.825" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:33:57.824" endtime="20200630 10:33:57.825"></status>
</kw>
<status status="PASS" starttime="20200630 10:33:55.318" endtime="20200630 10:33:57.825"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:33:57.827" level="INFO">Running command 'ozone sh key list o3:///55164-rpcwport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:34:00.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:34:00.370" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200630 10:33:57.826" endtime="20200630 10:34:00.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:34:00.371" level="INFO">key2</msg>
<status status="PASS" starttime="20200630 10:34:00.371" endtime="20200630 10:34:00.371"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:34:00.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:34:00.371" endtime="20200630 10:34:00.373"></status>
</kw>
<msg timestamp="20200630 10:34:00.373" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200630 10:33:57.825" endtime="20200630 10:34:00.373"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200630 10:34:00.373" endtime="20200630 10:34:00.374"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:34:00.378" level="INFO">Running command 'ozone sh key delete o3:///55164-rpcwport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:34:03.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:34:03.042" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:34:00.375" endtime="20200630 10:34:03.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:34:03.043" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:34:03.042" endtime="20200630 10:34:03.043"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:34:03.043" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:34:03.043" endtime="20200630 10:34:03.044"></status>
</kw>
<status status="PASS" starttime="20200630 10:34:00.374" endtime="20200630 10:34:03.044"></status>
</kw>
<status status="PASS" starttime="20200630 10:33:07.483" endtime="20200630 10:34:03.044"></status>
</kw>
<status status="PASS" starttime="20200630 10:33:07.482" endtime="20200630 10:34:03.044"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:34:03.048" level="INFO">Running command 'ozone sh bucket delete o3:///55164-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:34:05.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:34:05.725" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:34:03.045" endtime="20200630 10:34:05.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:34:05.727" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:34:05.726" endtime="20200630 10:34:05.727"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:34:05.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:34:05.727" endtime="20200630 10:34:05.727"></status>
</kw>
<status status="PASS" starttime="20200630 10:34:03.044" endtime="20200630 10:34:05.728"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:34:05.731" level="INFO">Running command 'ozone sh volume delete o3:///55164-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:34:08.246" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:34:08.246" level="INFO">${output} = Volume 55164-rpcwport is deleted</msg>
<status status="PASS" starttime="20200630 10:34:05.728" endtime="20200630 10:34:08.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:34:08.248" level="INFO">Volume 55164-rpcwport is deleted</msg>
<status status="PASS" starttime="20200630 10:34:08.247" endtime="20200630 10:34:08.248"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:34:08.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:34:08.248" endtime="20200630 10:34:08.248"></status>
</kw>
<status status="PASS" starttime="20200630 10:34:05.728" endtime="20200630 10:34:08.249"></status>
</kw>
<status status="PASS" starttime="20200630 10:32:43.212" endtime="20200630 10:34:08.249"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200630 10:32:43.210" endtime="20200630 10:34:08.249" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200630 10:34:08.251" endtime="20200630 10:34:08.251"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:34:08.254" level="INFO">Running command 'ozone sh volume info /55164-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:34:10.750" level="INFO">${rc} = 255</msg>
<msg timestamp="20200630 10:34:10.750" level="INFO">${output} = VOLUME_NOT_FOUND Volume 55164-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200630 10:34:08.252" endtime="20200630 10:34:10.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:34:10.752" level="INFO">VOLUME_NOT_FOUND Volume 55164-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200630 10:34:10.751" endtime="20200630 10:34:10.752"></status>
</kw>
<msg timestamp="20200630 10:34:10.752" level="INFO">${result} = VOLUME_NOT_FOUND Volume 55164-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200630 10:34:08.252" endtime="20200630 10:34:10.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200630 10:34:10.753" endtime="20200630 10:34:10.753"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:34:10.756" level="INFO">Running command 'ozone sh volume create /55164-rpcwoscheme --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:34:13.496" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:34:13.496" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:34:10.754" endtime="20200630 10:34:13.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:34:13.497" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:34:13.496" endtime="20200630 10:34:13.497"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:34:13.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:34:13.497" endtime="20200630 10:34:13.498"></status>
</kw>
<msg timestamp="20200630 10:34:13.498" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200630 10:34:10.753" endtime="20200630 10:34:13.498"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200630 10:34:13.498" endtime="20200630 10:34:13.498"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:34:13.502" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="55164-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:34:16.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:34:16.091" level="INFO">${output} = {
  "metadata": {},
  "name": "55164-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T10:34:13.429Z",
  "modificationTime": "2020-06-30T10:34:13.429Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200630 10:34:13.499" endtime="20200630 10:34:16.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:34:16.092" level="INFO">{
  "metadata": {},
  "name": "55164-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T10:34:13.429Z",
  "modificationTime": "2020-06-30T10:34:13.429Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200630 10:34:16.091" endtime="20200630 10:34:16.092"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:34:16.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:34:16.092" endtime="20200630 10:34:16.093"></status>
</kw>
<msg timestamp="20200630 10:34:16.093" level="INFO">${result} = {
  "metadata": {},
  "name": "55164-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T10:34:13.429Z",
  "modificationTime": "2020-06-30T10:34:13.429Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200630 10:34:13.498" endtime="20200630 10:34:16.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200630 10:34:16.094" endtime="20200630 10:34:16.094"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:34:16.097" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="55164-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:34:18.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:34:18.797" level="INFO">${output} = {
  "metadata": {},
  "name": "55164-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T10:34:13.429Z",
  "modificationTime": "2020-06-30T10:34:13.429Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200630 10:34:16.094" endtime="20200630 10:34:18.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:34:18.799" level="INFO">{
  "metadata": {},
  "name": "55164-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T10:34:13.429Z",
  "modificationTime": "2020-06-30T10:34:13.429Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200630 10:34:18.798" endtime="20200630 10:34:18.799"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:34:18.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:34:18.799" endtime="20200630 10:34:18.799"></status>
</kw>
<msg timestamp="20200630 10:34:18.800" level="INFO">${result} = {
  "metadata": {},
  "name": "55164-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T10:34:13.429Z",
  "modificationTime": "2020-06-30T10:34:13.429Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200630 10:34:16.094" endtime="20200630 10:34:18.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200630 10:34:18.800" endtime="20200630 10:34:18.800"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:34:18.803" level="INFO">Running command 'ozone sh volume update /55164-rpcwoscheme --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:34:21.517" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:34:21.517" level="INFO">${output} = {
  "metadata" : { },
  "name" : "55164-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-30T10:34:13.429Z",
  "modificationTime" : "2020-06-30T10:34:21.112Z",
  "a...</msg>
<status status="PASS" starttime="20200630 10:34:18.801" endtime="20200630 10:34:21.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:34:21.518" level="INFO">{
  "metadata" : { },
  "name" : "55164-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-30T10:34:13.429Z",
  "modificationTime" : "2020-06-30T10:34:21.112Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200630 10:34:21.518" endtime="20200630 10:34:21.519"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:34:21.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:34:21.519" endtime="20200630 10:34:21.519"></status>
</kw>
<status status="PASS" starttime="20200630 10:34:18.800" endtime="20200630 10:34:21.519"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:34:21.522" level="INFO">Running command 'ozone sh volume info /55164-rpcwoscheme | jq -r '. | select(.name=="55164-rpcwoscheme") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:34:24.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:34:24.145" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200630 10:34:21.520" endtime="20200630 10:34:24.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:34:24.146" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200630 10:34:24.146" endtime="20200630 10:34:24.147"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:34:24.147" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:34:24.147" endtime="20200630 10:34:24.147"></status>
</kw>
<msg timestamp="20200630 10:34:24.147" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200630 10:34:21.519" endtime="20200630 10:34:24.147"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200630 10:34:24.147" endtime="20200630 10:34:24.148"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:34:24.150" level="INFO">Running command 'ozone sh bucket create /55164-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:34:26.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:34:26.512" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:34:24.148" endtime="20200630 10:34:26.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:34:26.513" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:34:26.513" endtime="20200630 10:34:26.513"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:34:26.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:34:26.514" endtime="20200630 10:34:26.514"></status>
</kw>
<status status="PASS" starttime="20200630 10:34:24.148" endtime="20200630 10:34:26.514"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:34:26.517" level="INFO">Running command 'ozone sh bucket info /55164-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:34:29.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:34:29.166" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200630 10:34:26.515" endtime="20200630 10:34:29.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:34:29.168" level="INFO">DISK</msg>
<status status="PASS" starttime="20200630 10:34:29.167" endtime="20200630 10:34:29.168"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:34:29.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:34:29.168" endtime="20200630 10:34:29.169"></status>
</kw>
<msg timestamp="20200630 10:34:29.169" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200630 10:34:26.514" endtime="20200630 10:34:29.169"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200630 10:34:29.169" endtime="20200630 10:34:29.170"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:34:29.174" level="INFO">Running command 'ozone sh bucket list /55164-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:34:31.872" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:34:31.872" level="INFO">${output} = 55164-rpcwoscheme</msg>
<status status="PASS" starttime="20200630 10:34:29.171" endtime="20200630 10:34:31.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:34:31.874" level="INFO">55164-rpcwoscheme</msg>
<status status="PASS" starttime="20200630 10:34:31.873" endtime="20200630 10:34:31.874"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:34:31.874" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:34:31.874" endtime="20200630 10:34:31.874"></status>
</kw>
<msg timestamp="20200630 10:34:31.875" level="INFO">${result} = 55164-rpcwoscheme</msg>
<status status="PASS" starttime="20200630 10:34:29.170" endtime="20200630 10:34:31.875"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200630 10:34:31.875" endtime="20200630 10:34:31.875"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:34:31.879" level="INFO">Running command 'ozone sh key put /55164-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:34:36.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:34:36.267" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:34:31.877" endtime="20200630 10:34:36.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:34:36.268" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:34:36.267" endtime="20200630 10:34:36.268"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:34:36.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:34:36.268" endtime="20200630 10:34:36.268"></status>
</kw>
<status status="PASS" starttime="20200630 10:34:31.876" endtime="20200630 10:34:36.269"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:34:36.271" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:34:36.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:34:36.273" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:34:36.269" endtime="20200630 10:34:36.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:34:36.274" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:34:36.273" endtime="20200630 10:34:36.274"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:34:36.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:34:36.274" endtime="20200630 10:34:36.275"></status>
</kw>
<status status="PASS" starttime="20200630 10:34:36.269" endtime="20200630 10:34:36.275"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:34:36.277" level="INFO">Running command 'ozone sh key get /55164-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:34:40.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:34:40.357" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:34:36.275" endtime="20200630 10:34:40.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:34:40.358" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:34:40.357" endtime="20200630 10:34:40.358"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:34:40.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:34:40.358" endtime="20200630 10:34:40.358"></status>
</kw>
<status status="PASS" starttime="20200630 10:34:36.275" endtime="20200630 10:34:40.359"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:34:40.362" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:34:40.364" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:34:40.364" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:34:40.360" endtime="20200630 10:34:40.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:34:40.365" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:34:40.364" endtime="20200630 10:34:40.365"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:34:40.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:34:40.365" endtime="20200630 10:34:40.365"></status>
</kw>
<status status="PASS" starttime="20200630 10:34:40.359" endtime="20200630 10:34:40.365"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:34:40.368" level="INFO">Running command 'ozone sh key put -t RATIS /55164-rpcwoscheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:34:44.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:34:44.957" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:34:40.366" endtime="20200630 10:34:44.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:34:44.958" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:34:44.958" endtime="20200630 10:34:44.959"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:34:44.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:34:44.959" endtime="20200630 10:34:44.959"></status>
</kw>
<status status="PASS" starttime="20200630 10:34:40.366" endtime="20200630 10:34:44.959"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:34:44.962" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:34:44.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:34:44.964" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:34:44.960" endtime="20200630 10:34:44.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:34:44.965" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:34:44.965" endtime="20200630 10:34:44.965"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:34:44.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:34:44.965" endtime="20200630 10:34:44.966"></status>
</kw>
<status status="PASS" starttime="20200630 10:34:44.960" endtime="20200630 10:34:44.966"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:34:44.968" level="INFO">Running command 'ozone sh key get /55164-rpcwoscheme/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:34:49.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:34:49.360" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:34:44.967" endtime="20200630 10:34:49.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:34:49.361" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:34:49.361" endtime="20200630 10:34:49.361"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:34:49.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:34:49.362" endtime="20200630 10:34:49.362"></status>
</kw>
<status status="PASS" starttime="20200630 10:34:44.966" endtime="20200630 10:34:49.362"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:34:49.365" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:34:49.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:34:49.367" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:34:49.363" endtime="20200630 10:34:49.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:34:49.368" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:34:49.367" endtime="20200630 10:34:49.368"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:34:49.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:34:49.368" endtime="20200630 10:34:49.369"></status>
</kw>
<status status="PASS" starttime="20200630 10:34:49.363" endtime="20200630 10:34:49.369"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:34:49.371" level="INFO">Running command 'ozone sh key info /55164-rpcwoscheme/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:34:52.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:34:52.018" level="INFO">${output} = {
  "volumeName": "55164-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-30T10:34:42.725Z",
  "modificationTime": "2020-06-30T10:34:44.325Z...</msg>
<status status="PASS" starttime="20200630 10:34:49.369" endtime="20200630 10:34:52.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:34:52.019" level="INFO">{
  "volumeName": "55164-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-30T10:34:42.725Z",
  "modificationTime": "2020-06-30T10:34:44.325Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104432486496665730,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200630 10:34:52.018" endtime="20200630 10:34:52.019"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:34:52.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:34:52.019" endtime="20200630 10:34:52.020"></status>
</kw>
<msg timestamp="20200630 10:34:52.020" level="INFO">${result} = {
  "volumeName": "55164-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-30T10:34:42.725Z",
  "modificationTime": "2020-06-30T10:34:44.325Z...</msg>
<status status="PASS" starttime="20200630 10:34:49.369" endtime="20200630 10:34:52.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200630 10:34:52.020" endtime="20200630 10:34:52.020"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:34:52.023" level="INFO">Running command 'ozone sh key delete /55164-rpcwoscheme/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:34:54.497" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:34:54.497" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:34:52.021" endtime="20200630 10:34:54.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:34:54.498" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:34:54.497" endtime="20200630 10:34:54.498"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:34:54.499" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:34:54.498" endtime="20200630 10:34:54.499"></status>
</kw>
<status status="PASS" starttime="20200630 10:34:52.021" endtime="20200630 10:34:54.499"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:34:54.502" level="INFO">Running command 'ozone sh key cp /55164-rpcwoscheme/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:34:59.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:34:59.127" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:34:54.500" endtime="20200630 10:34:59.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:34:59.128" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:34:59.128" endtime="20200630 10:34:59.129"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:34:59.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:34:59.129" endtime="20200630 10:34:59.129"></status>
</kw>
<status status="PASS" starttime="20200630 10:34:54.499" endtime="20200630 10:34:59.130"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:34:59.132" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:34:59.134" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:34:59.134" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:34:59.130" endtime="20200630 10:34:59.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:34:59.135" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:34:59.134" endtime="20200630 10:34:59.135"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:34:59.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:34:59.135" endtime="20200630 10:34:59.136"></status>
</kw>
<status status="PASS" starttime="20200630 10:34:59.130" endtime="20200630 10:34:59.136"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:34:59.139" level="INFO">Running command 'ozone sh key get /55164-rpcwoscheme/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:35:03.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:35:03.265" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:34:59.137" endtime="20200630 10:35:03.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:35:03.266" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:35:03.265" endtime="20200630 10:35:03.266"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:35:03.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:35:03.266" endtime="20200630 10:35:03.267"></status>
</kw>
<status status="PASS" starttime="20200630 10:34:59.136" endtime="20200630 10:35:03.267"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:35:03.270" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:35:03.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:35:03.272" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:35:03.268" endtime="20200630 10:35:03.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:35:03.273" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:35:03.273" endtime="20200630 10:35:03.273"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:35:03.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:35:03.273" endtime="20200630 10:35:03.274"></status>
</kw>
<status status="PASS" starttime="20200630 10:35:03.267" endtime="20200630 10:35:03.274"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:35:03.276" level="INFO">Running command 'ozone sh key delete /55164-rpcwoscheme/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:35:05.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:35:05.838" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:35:03.275" endtime="20200630 10:35:05.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:35:05.839" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:35:05.839" endtime="20200630 10:35:05.840"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:35:05.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:35:05.840" endtime="20200630 10:35:05.840"></status>
</kw>
<status status="PASS" starttime="20200630 10:35:03.274" endtime="20200630 10:35:05.840"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:35:05.843" level="INFO">Running command 'ozone sh key get /55164-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:35:08.245" level="INFO">${rc} = 255</msg>
<msg timestamp="20200630 10:35:08.246" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200630 10:35:05.841" endtime="20200630 10:35:08.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:35:08.247" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200630 10:35:08.246" endtime="20200630 10:35:08.247"></status>
</kw>
<msg timestamp="20200630 10:35:08.247" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200630 10:35:05.841" endtime="20200630 10:35:08.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200630 10:35:08.247" endtime="20200630 10:35:08.248"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:35:08.251" level="INFO">Running command 'ozone sh key get --force /55164-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:35:12.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:35:12.664" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:35:08.249" endtime="20200630 10:35:12.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:35:12.665" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:35:12.664" endtime="20200630 10:35:12.665"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:35:12.666" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:35:12.665" endtime="20200630 10:35:12.666"></status>
</kw>
<msg timestamp="20200630 10:35:12.666" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200630 10:35:08.248" endtime="20200630 10:35:12.666"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200630 10:35:12.666" endtime="20200630 10:35:12.667"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:35:12.669" level="INFO">Running command 'ozone sh key info /55164-rpcwoscheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:35:15.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:35:15.522" level="INFO">${output} = {
  "volumeName": "55164-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-30T10:34:34.195Z",
  "modificationTime": "2020-06-30T10:34:35.854Z",
  "...</msg>
<status status="PASS" starttime="20200630 10:35:12.667" endtime="20200630 10:35:15.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:35:15.524" level="INFO">{
  "volumeName": "55164-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-30T10:34:34.195Z",
  "modificationTime": "2020-06-30T10:34:35.854Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104432485937578110,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200630 10:35:15.523" endtime="20200630 10:35:15.524"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:35:15.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:35:15.524" endtime="20200630 10:35:15.524"></status>
</kw>
<msg timestamp="20200630 10:35:15.525" level="INFO">${result} = {
  "volumeName": "55164-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-30T10:34:34.195Z",
  "modificationTime": "2020-06-30T10:34:35.854Z",
  "...</msg>
<status status="PASS" starttime="20200630 10:35:12.667" endtime="20200630 10:35:15.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200630 10:35:15.525" endtime="20200630 10:35:15.525"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:35:15.528" level="INFO">Running command 'ozone sh key list /55164-rpcwoscheme/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:35:18.430" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:35:18.430" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200630 10:35:15.526" endtime="20200630 10:35:18.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:35:18.431" level="INFO">key1</msg>
<status status="PASS" starttime="20200630 10:35:18.431" endtime="20200630 10:35:18.431"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:35:18.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:35:18.431" endtime="20200630 10:35:18.432"></status>
</kw>
<msg timestamp="20200630 10:35:18.432" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200630 10:35:15.525" endtime="20200630 10:35:18.432"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200630 10:35:18.432" endtime="20200630 10:35:18.433"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:35:18.436" level="INFO">Running command 'ozone sh key rename /55164-rpcwoscheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:35:21.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:35:21.080" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:35:18.433" endtime="20200630 10:35:21.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:35:21.081" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:35:21.081" endtime="20200630 10:35:21.081"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:35:21.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:35:21.082" endtime="20200630 10:35:21.083"></status>
</kw>
<status status="PASS" starttime="20200630 10:35:18.433" endtime="20200630 10:35:21.083"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:35:21.086" level="INFO">Running command 'ozone sh key list /55164-rpcwoscheme/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:35:23.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:35:23.847" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200630 10:35:21.084" endtime="20200630 10:35:23.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:35:23.848" level="INFO">key2</msg>
<status status="PASS" starttime="20200630 10:35:23.847" endtime="20200630 10:35:23.848"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:35:23.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:35:23.848" endtime="20200630 10:35:23.849"></status>
</kw>
<msg timestamp="20200630 10:35:23.849" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200630 10:35:21.083" endtime="20200630 10:35:23.849"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200630 10:35:23.849" endtime="20200630 10:35:23.849"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:35:23.853" level="INFO">Running command 'ozone sh key delete /55164-rpcwoscheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:35:26.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:35:26.339" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:35:23.850" endtime="20200630 10:35:26.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:35:26.341" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:35:26.340" endtime="20200630 10:35:26.341"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:35:26.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:35:26.341" endtime="20200630 10:35:26.341"></status>
</kw>
<status status="PASS" starttime="20200630 10:35:23.849" endtime="20200630 10:35:26.342"></status>
</kw>
<status status="PASS" starttime="20200630 10:34:31.876" endtime="20200630 10:35:26.342"></status>
</kw>
<status status="PASS" starttime="20200630 10:34:31.876" endtime="20200630 10:35:26.342"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:35:26.345" level="INFO">Running command 'ozone sh bucket delete /55164-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:35:28.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:35:28.894" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:35:26.343" endtime="20200630 10:35:28.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:35:28.895" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:35:28.895" endtime="20200630 10:35:28.895"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:35:28.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:35:28.896" endtime="20200630 10:35:28.896"></status>
</kw>
<status status="PASS" starttime="20200630 10:35:26.342" endtime="20200630 10:35:28.896"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:35:28.900" level="INFO">Running command 'ozone sh volume delete /55164-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:35:31.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:35:31.210" level="INFO">${output} = Volume 55164-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200630 10:35:28.897" endtime="20200630 10:35:31.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:35:31.212" level="INFO">Volume 55164-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200630 10:35:31.211" endtime="20200630 10:35:31.212"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:35:31.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:35:31.212" endtime="20200630 10:35:31.212"></status>
</kw>
<status status="PASS" starttime="20200630 10:35:28.897" endtime="20200630 10:35:31.213"></status>
</kw>
<status status="PASS" starttime="20200630 10:34:08.251" endtime="20200630 10:35:31.213"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200630 10:34:08.250" endtime="20200630 10:35:31.213" critical="yes"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20200630 10:30:11.778" endtime="20200630 10:35:31.214"></status>
</suite>
<status status="PASS" starttime="20200630 10:28:41.819" endtime="20200630 10:35:31.219"></status>
</suite>
<statistics>
<total>
<stat pass="8" fail="0">Critical Tests</stat>
<stat pass="8" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="8" fail="0" id="s1" name="ozone-basic">ozone-basic</stat>
<stat pass="2" fail="0" id="s1-s1" name="Basic">ozone-basic.Basic</stat>
<stat pass="6" fail="0" id="s1-s2" name="Ozone-Shell">ozone-basic.Ozone-Shell</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
