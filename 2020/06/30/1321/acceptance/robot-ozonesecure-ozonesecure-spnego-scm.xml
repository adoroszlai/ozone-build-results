<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200630 11:18:19.670" rpa="false">
<suite id="s1" name="ozonesecure-spnego" source="/opt/hadoop/smoketest/spnego">
<suite id="s1-s1" name="Web" source="/opt/hadoop/smoketest/spnego/web.robot">
<test id="s1-s1-t1" name="Generate Freon data">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:18:19.738" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:18:19.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:18:19.741" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200630 11:18:19.733" endtime="20200630 11:18:19.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:18:19.742" level="INFO">scm</msg>
<status status="PASS" starttime="20200630 11:18:19.741" endtime="20200630 11:18:19.742"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:18:19.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:18:19.742" endtime="20200630 11:18:19.742"></status>
</kw>
<msg timestamp="20200630 11:18:19.743" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200630 11:18:19.733" endtime="20200630 11:18:19.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200630 11:18:19.744" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200630 11:18:19.743" endtime="20200630 11:18:19.744"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:18:19.748" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:18:19.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:18:19.758" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 11:18:19.745" endtime="20200630 11:18:19.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:18:19.759" level="INFO"></msg>
<status status="PASS" starttime="20200630 11:18:19.758" endtime="20200630 11:18:19.759"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:18:19.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:18:19.759" endtime="20200630 11:18:19.760"></status>
</kw>
<status status="PASS" starttime="20200630 11:18:19.745" endtime="20200630 11:18:19.760"></status>
</kw>
<status status="PASS" starttime="20200630 11:18:19.744" endtime="20200630 11:18:19.760"></status>
</kw>
<status status="PASS" starttime="20200630 11:18:19.733" endtime="20200630 11:18:19.760"></status>
</kw>
<status status="PASS" starttime="20200630 11:18:19.732" endtime="20200630 11:18:19.760"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 2 --keySize 1025</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:18:19.763" level="INFO">Running command 'ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 2 --keySize 1025 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:18:28.614" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:18:28.614" level="INFO">${output} = 2020-06-30 11:18:21,188 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 11:18:21,371 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 11:18:19.761" endtime="20200630 11:18:28.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:18:28.615" level="INFO">2020-06-30 11:18:21,188 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 11:18:21,371 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-30 11:18:21,371 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-06-30 11:18:22,994 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2020-06-30 11:18:22,995 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-06-30 11:18:22,995 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-06-30 11:18:22,995 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 2.
2020-06-30 11:18:22,995 [main] INFO freon.RandomKeyGenerator: Key size: 1025 bytes
2020-06-30 11:18:22,995 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-30 11:18:22,996 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-06-30 11:18:23,013 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-30 11:18:23,025 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 2)
2020-06-30 11:18:23,065 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-24982, with testuser/scm@EXAMPLE.COM as owner.
2020-06-30 11:18:23,093 [pool-2-thread-2] INFO rpc.RpcClient: Creating Bucket: vol-0-24982/bucket-0-92240, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 11:18:23,658 [pool-2-thread-3] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-30 11:18:24,031 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (2 out of 2)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 2
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,005
Average Time spent in bucket creation: 00:00:00,002
Average Time spent in key creation: 00:00:00,027
Average Time spent in key write: 00:00:00,101
Total bytes written: 2050
Total Execution time: 00:00:06,624
***************************************************</msg>
<status status="PASS" starttime="20200630 11:18:28.615" endtime="20200630 11:18:28.616"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:18:28.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:18:28.616" endtime="20200630 11:18:28.616"></status>
</kw>
<status status="PASS" starttime="20200630 11:18:19.760" endtime="20200630 11:18:28.617"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 11:18:19.731" endtime="20200630 11:18:28.617" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Test OM portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:18:28.622" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:18:28.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:18:28.626" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 11:18:28.620" endtime="20200630 11:18:28.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:18:28.626" level="INFO"></msg>
<status status="PASS" starttime="20200630 11:18:28.626" endtime="20200630 11:18:28.626"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:18:28.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:18:28.627" endtime="20200630 11:18:28.627"></status>
</kw>
<status status="PASS" starttime="20200630 11:18:28.619" endtime="20200630 11:18:28.627"></status>
</kw>
<status status="PASS" starttime="20200630 11:18:28.619" endtime="20200630 11:18:28.627"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:18:28.631" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:18:28.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:18:28.654" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200630 11:18:28.628" endtime="20200630 11:18:28.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:18:28.656" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200630 11:18:28.655" endtime="20200630 11:18:28.656"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:18:28.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:18:28.656" endtime="20200630 11:18:28.657"></status>
</kw>
<msg timestamp="20200630 11:18:28.657" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200630 11:18:28.628" endtime="20200630 11:18:28.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200630 11:18:28.657" endtime="20200630 11:18:28.658"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:18:28.661" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:18:28.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:18:28.663" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200630 11:18:28.659" endtime="20200630 11:18:28.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:18:28.664" level="INFO">scm</msg>
<status status="PASS" starttime="20200630 11:18:28.664" endtime="20200630 11:18:28.665"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:18:28.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:18:28.665" endtime="20200630 11:18:28.665"></status>
</kw>
<msg timestamp="20200630 11:18:28.666" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200630 11:18:28.659" endtime="20200630 11:18:28.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200630 11:18:28.666" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200630 11:18:28.666" endtime="20200630 11:18:28.667"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:18:28.670" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:18:28.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:18:28.682" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 11:18:28.668" endtime="20200630 11:18:28.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:18:28.683" level="INFO"></msg>
<status status="PASS" starttime="20200630 11:18:28.682" endtime="20200630 11:18:28.683"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:18:28.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:18:28.683" endtime="20200630 11:18:28.683"></status>
</kw>
<status status="PASS" starttime="20200630 11:18:28.667" endtime="20200630 11:18:28.684"></status>
</kw>
<status status="PASS" starttime="20200630 11:18:28.667" endtime="20200630 11:18:28.684"></status>
</kw>
<status status="PASS" starttime="20200630 11:18:28.658" endtime="20200630 11:18:28.684"></status>
</kw>
<status status="PASS" starttime="20200630 11:18:28.658" endtime="20200630 11:18:28.684"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:18:28.687" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:18:28.712" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:18:28.712" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200630 11:18:28.685" endtime="20200630 11:18:28.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:18:28.713" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/'
* Found bundle for host om: 0x1ab7f20
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.9) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQa0Z5hFMldHuif5Amy490XjmskGjOo+HtUdRz3YxMTCuDhhyDqmd1GnCeFFhBkp8Gftw2O4fM3eR8as8mxqBBf5SZQkcPh/SnbkjxCxltjX7RqSI0cAnqPQXjJFOAhfFOhHyNTdOT23ck2MKC+r+vn4CcW76Qr+a///+AjCNdlwj4eggOMT0lm3ayaBAo2HMKyixt/i2aHr6dRZu9d01wPsSq3IVsru2cM+G/HnZpdPckyNlDILq0hD1sVs4IWoBvUWtKguVITTGjxuV3R0wEck9TuSvLBKyap7zq5jFz33C+x/Djp2WkL4aTOK/HORoaqoy7QFrfG3Fs0O07XsjcnwcmcW3L3GpIHWMIHToAMCARKigcsEgchOw4+tdRMyacLLRuC+YRfS2j+RjKDguC9aFpFYELClPd7dAAF++WBe2MYCeRpDpd7UsiGt6+UEqAcpe2gM8te3QtaIGXz01uRf5sHGWgYzkOMFatkdEirUuYVCcgi9umJ/MKSGM7TH5qNlVhPo2BGEQaaFNx8JCHac41l7yszpBtyLRS7cX1JGmi9HGIZv1qaSny6rWyxZYys4YWrtlDrCszSKKOQ53JVC2WCjRNFsCtNiC1Rb4Xgh9HGNahUasm6ihCRM/yiiBQ==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 11:18:28 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 11:18:28 GMT
&lt; Date: Tue, 30 Jun 2020 11:18:28 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Tue, 30 Jun 2020 11:18:28 GMT
&lt; Date: Tue, 30 Jun 2020 11:18:28 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCdvJbAz3mevAs4Gp4Z5lY+cyuCSFJDdIhcGbr//HPGRL6BjPQP8qZBMXg0kOuUvb7o0Sg3IVEsNPEa/6S6bGiS3QW
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593551908707&amp;s=85pFj/RipcT2q1iqgV2o3cyDMbkO77MX++3VkCzM4lg="; Path=/; HttpOnly
&lt; Last-Modified: Tue, 30 Jun 2020 09:59:10 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2927
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Tue, 30 Jun 2020 11:18:28 GMT
Cache-Control: no-cache
Expires: Tue, 30 Jun 2020 11:18:28 GMT
Date: Tue, 30 Jun 2020 11:18:28 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Tue, 30 Jun 2020 11:18:28 GMT
Date: Tue, 30 Jun 2020 11:18:28 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCdvJbAz3mevAs4Gp4Z5lY+cyuCSFJDdIhcGbr//HPGRL6BjPQP8qZBMXg0kOuUvb7o0Sg3IVEsNPEa/6S6bGiS3QW
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593551908707&amp;s=85pFj/RipcT2q1iqgV2o3cyDMbkO77MX++3VkCzM4lg="; Path=/; HttpOnly
Last-Modified: Tue, 30 Jun 2020 09:59:10 GMT
Accept-Ranges: bytes
Content-Length: 2927
</msg>
<status status="PASS" starttime="20200630 11:18:28.712" endtime="20200630 11:18:28.713"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:18:28.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:18:28.713" endtime="20200630 11:18:28.714"></status>
</kw>
<msg timestamp="20200630 11:18:28.714" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200630 11:18:28.684" endtime="20200630 11:18:28.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200630 11:18:28.714" endtime="20200630 11:18:28.714"></status>
</kw>
<status status="PASS" starttime="20200630 11:18:28.618" endtime="20200630 11:18:28.715"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 11:18:28.618" endtime="20200630 11:18:28.715" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Test OM DB Checkpoint">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_DB_CHECKPOINT_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:18:28.720" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:18:28.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:18:28.723" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 11:18:28.718" endtime="20200630 11:18:28.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:18:28.724" level="INFO"></msg>
<status status="PASS" starttime="20200630 11:18:28.724" endtime="20200630 11:18:28.724"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:18:28.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:18:28.725" endtime="20200630 11:18:28.725"></status>
</kw>
<status status="PASS" starttime="20200630 11:18:28.718" endtime="20200630 11:18:28.725"></status>
</kw>
<status status="PASS" starttime="20200630 11:18:28.717" endtime="20200630 11:18:28.725"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:18:28.728" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/dbCheckpoint 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:18:28.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:18:28.740" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200630 11:18:28.726" endtime="20200630 11:18:28.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:18:28.741" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 417
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 417
</msg>
<status status="PASS" starttime="20200630 11:18:28.740" endtime="20200630 11:18:28.741"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:18:28.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:18:28.741" endtime="20200630 11:18:28.742"></status>
</kw>
<msg timestamp="20200630 11:18:28.742" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200630 11:18:28.726" endtime="20200630 11:18:28.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200630 11:18:28.742" endtime="20200630 11:18:28.742"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:18:28.746" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:18:28.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:18:28.748" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200630 11:18:28.744" endtime="20200630 11:18:28.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:18:28.749" level="INFO">scm</msg>
<status status="PASS" starttime="20200630 11:18:28.748" endtime="20200630 11:18:28.750"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:18:28.751" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:18:28.750" endtime="20200630 11:18:28.751"></status>
</kw>
<msg timestamp="20200630 11:18:28.751" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200630 11:18:28.743" endtime="20200630 11:18:28.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200630 11:18:28.752" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200630 11:18:28.751" endtime="20200630 11:18:28.752"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:18:28.755" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:18:28.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:18:28.770" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 11:18:28.753" endtime="20200630 11:18:28.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:18:28.771" level="INFO"></msg>
<status status="PASS" starttime="20200630 11:18:28.770" endtime="20200630 11:18:28.771"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:18:28.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:18:28.771" endtime="20200630 11:18:28.772"></status>
</kw>
<status status="PASS" starttime="20200630 11:18:28.752" endtime="20200630 11:18:28.772"></status>
</kw>
<status status="PASS" starttime="20200630 11:18:28.752" endtime="20200630 11:18:28.772"></status>
</kw>
<status status="PASS" starttime="20200630 11:18:28.743" endtime="20200630 11:18:28.772"></status>
</kw>
<status status="PASS" starttime="20200630 11:18:28.743" endtime="20200630 11:18:28.772"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:18:28.774" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/dbCheckpoint 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:18:28.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:18:28.829" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200630 11:18:28.773" endtime="20200630 11:18:28.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:18:28.830" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 417
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/dbCheckpoint'
* Found bundle for host om: 0x1520f50
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.9) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQZsQ5hRvdkudWhq/0GsJMpJJHMnWQQuYPAwXcJHq5PZBzZQNt5CNq7DWygsl/78hUWZe/MUtizZu8qlHisfJVoyMBNaZiIBfX8yRf5t9QraLtDYsXDt9mNa0gWUoQkshM9YIQW18z0FDLGjftA+3yoFvhj5jY7OvsdQuUF3RNg/mdiOkfHz+iKLCLVdoocklQ67KvcwGe4T5YuPh/ubC/uF9rj/fdRBCwfr0X4aeMh+Po2vQN+t+2+XOZWaXKEMFjov2c6hy924lOBQt8DVWF6/BcVyqdGs4gvkldpg9HqgUHnNRgrB/rM4QG62Hzd7Vsd9bPYPpQCkTWPO7Wy8bJ/GmtQ2K+yfpIHWMIHToAMCARKigcsEgcjSd91YDSA9g7Sp855elSsVegaePmXALeu/r19gcMwvZDf6+90LAb4YUfrDwIEFSItePUrIibNMbtvBksx2TsebFMYceGfJKotmioTFWz/ZcBk7ZL6gzNLUUf9DL3LYSkRzLuP6kHcp1suOcLmp0RrJHw7PWW3Y1ZTaGOd9t4PPXGT37PDzaTuTVrIBHmB0JIm4XSU83TPA64CJtq3das2YM6pUHxoXtU/F7wdPmugJIXar2oSqN5+AczuyeT9Tkvn1Fr466wKn3g==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 11:18:28 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 11:18:28 GMT
&lt; Date: Tue, 30 Jun 2020 11:18:28 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/x-tgz
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARClup3RnRVonBBpMN4wyWZ5RXoXJRS21dUJRUl0XhcGjLgRWn01lMMNobr5a9b86q5DnwL5Ed7nd4aWd1KUThRGrSZ
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593551908792&amp;s=kl7jNLlJfHeSaaGojPrB3ehjKXEDHl2e3H3J7REiRBc="; Path=/; HttpOnly
&lt; Content-Disposition: attachment; filename="rdb_rdb_checkpoint_1593515908793.tgz"
&lt; Content-Length: 74487
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 417

HTTP/1.1 200 OK
Date: Tue, 30 Jun 2020 11:18:28 GMT
Cache-Control: no-cache
Expires: Tue, 30 Jun 2020 11:18:28 GMT
Date: Tue, 30 Jun 2020 11:18:28 GMT
Pragma: no-cache
Content-Type: application/x-tgz
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARClup3RnRVonBBpMN4wyWZ5RXoXJRS21dUJRUl0XhcGjLgRWn01lMMNobr5a9b86q5DnwL5Ed7nd4aWd1KUThRGrSZ
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593551908792&amp;s=kl7jNLlJfHeSaaGojPrB3ehjKXEDHl2e3H3J7REiRBc="; Path=/; HttpOnly
Content-Disposition: attachment; filename="rdb_rdb_checkpoint_1593515908793.tgz"
Content-Length: 74487
</msg>
<status status="PASS" starttime="20200630 11:18:28.830" endtime="20200630 11:18:28.831"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:18:28.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:18:28.831" endtime="20200630 11:18:28.831"></status>
</kw>
<msg timestamp="20200630 11:18:28.832" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200630 11:18:28.772" endtime="20200630 11:18:28.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200630 11:18:28.832" endtime="20200630 11:18:28.832"></status>
</kw>
<status status="PASS" starttime="20200630 11:18:28.716" endtime="20200630 11:18:28.832"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 11:18:28.716" endtime="20200630 11:18:28.833" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Test OM Service List">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_SERVICE_LIST_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:18:28.838" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:18:28.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:18:28.840" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 11:18:28.835" endtime="20200630 11:18:28.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:18:28.841" level="INFO"></msg>
<status status="PASS" starttime="20200630 11:18:28.841" endtime="20200630 11:18:28.841"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:18:28.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:18:28.842" endtime="20200630 11:18:28.842"></status>
</kw>
<status status="PASS" starttime="20200630 11:18:28.834" endtime="20200630 11:18:28.842"></status>
</kw>
<status status="PASS" starttime="20200630 11:18:28.834" endtime="20200630 11:18:28.842"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:18:28.847" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/serviceList 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:18:28.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:18:28.858" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200630 11:18:28.843" endtime="20200630 11:18:28.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:18:28.859" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 415
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 415
</msg>
<status status="PASS" starttime="20200630 11:18:28.858" endtime="20200630 11:18:28.859"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:18:28.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:18:28.859" endtime="20200630 11:18:28.860"></status>
</kw>
<msg timestamp="20200630 11:18:28.860" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200630 11:18:28.843" endtime="20200630 11:18:28.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200630 11:18:28.860" endtime="20200630 11:18:28.860"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:18:28.864" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:18:28.866" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:18:28.866" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200630 11:18:28.862" endtime="20200630 11:18:28.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:18:28.867" level="INFO">scm</msg>
<status status="PASS" starttime="20200630 11:18:28.866" endtime="20200630 11:18:28.867"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:18:28.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:18:28.867" endtime="20200630 11:18:28.868"></status>
</kw>
<msg timestamp="20200630 11:18:28.868" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200630 11:18:28.861" endtime="20200630 11:18:28.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200630 11:18:28.868" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200630 11:18:28.868" endtime="20200630 11:18:28.869"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:18:28.872" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:18:28.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:18:28.882" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 11:18:28.870" endtime="20200630 11:18:28.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:18:28.883" level="INFO"></msg>
<status status="PASS" starttime="20200630 11:18:28.883" endtime="20200630 11:18:28.883"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:18:28.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:18:28.883" endtime="20200630 11:18:28.884"></status>
</kw>
<status status="PASS" starttime="20200630 11:18:28.869" endtime="20200630 11:18:28.884"></status>
</kw>
<status status="PASS" starttime="20200630 11:18:28.869" endtime="20200630 11:18:28.884"></status>
</kw>
<status status="PASS" starttime="20200630 11:18:28.861" endtime="20200630 11:18:28.884"></status>
</kw>
<status status="PASS" starttime="20200630 11:18:28.861" endtime="20200630 11:18:28.884"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:18:28.887" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/serviceList 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:18:28.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:18:28.918" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200630 11:18:28.885" endtime="20200630 11:18:28.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:18:28.919" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 415
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/serviceList'
* Found bundle for host om: 0xc44f50
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.9) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD /serviceList HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQbFzATSC4EvZr3M3ZLEiK2xR/0IniAw6wOIo7w6LaQS/qNbnaodg3awHiqcxJa4SXUceADzRHC/a1NR1hUf5FQ6NDKfbVnejBerPvhLlLd+/zP/ZqEHVXK6qMKFMkfTC+8aDMVRJU6GbTzoTQqEMo5Kp/WNvZW0eOAGYxJIsEKXNk2iytHh17MZDjxaQQd7URXxL5yTzYzaZ6XVx8IiRW0OOJxHPcubybKiVu0+UkCnVKWn4rfWH/6FDJ+lSYibCKvh0fkDjr4ILBjRnaXCySls/ak7fz5VhgL56nqPnAtmZgpVNqlWTpO1fO5JpNGTuBE2sBLOcuoUU7SaQvr7oYT2NAvBPJo1pIHWMIHToAMCARKigcsEgchqohmc1HdhCcZ43DnSsrPVEorexovGb9Z5euAa6soAgyfMFxHBVjr6MnL6069CBcK40d9vXdJ0FGSLBB+CAblklw50s+pLQCZZAiotgoH5g5oEIpmQ0hBMy8BMUF80lSDRXs846y3KkS2cTvYSGxpCbJmmi2UMLuGXUzhB5YSicwStAwKblmF6mHVsp8JZRcUQNOovNhmYb9LnUYyv7gQ4pUQne3HTo29TNphroqlaTTpx/Hx7TUk7s4yIWB3v9wzxv8i62rvlTA==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 11:18:28 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 11:18:28 GMT
&lt; Date: Tue, 30 Jun 2020 11:18:28 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json; charset=utf8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCkd2dhsib/dVwv4uwuIICxxjxNIbLkOJmIMic0NV6KAbc4wBEF3O+ZhZfBG94ykAYTIPyBCatB+fQPs8+drHLwqDz
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593551908906&amp;s=KHN/KSrIKtUy1IQDP2bkIXR2FtkF1QbPQLkvq+pqKa0="; Path=/; HttpOnly
&lt; Content-Length: 207
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 415

HTTP/1.1 200 OK
Date: Tue, 30 Jun 2020 11:18:28 GMT
Cache-Control: no-cache
Expires: Tue, 30 Jun 2020 11:18:28 GMT
Date: Tue, 30 Jun 2020 11:18:28 GMT
Pragma: no-cache
Content-Type: application/json; charset=utf8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCkd2dhsib/dVwv4uwuIICxxjxNIbLkOJmIMic0NV6KAbc4wBEF3O+ZhZfBG94ykAYTIPyBCatB+fQPs8+drHLwqDz
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593551908906&amp;s=KHN/KSrIKtUy1IQDP2bkIXR2FtkF1QbPQLkvq+pqKa0="; Path=/; HttpOnly
Content-Length: 207
</msg>
<status status="PASS" starttime="20200630 11:18:28.919" endtime="20200630 11:18:28.920"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:18:28.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:18:28.920" endtime="20200630 11:18:28.921"></status>
</kw>
<msg timestamp="20200630 11:18:28.921" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200630 11:18:28.885" endtime="20200630 11:18:28.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200630 11:18:28.921" endtime="20200630 11:18:28.921"></status>
</kw>
<status status="PASS" starttime="20200630 11:18:28.834" endtime="20200630 11:18:28.922"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 11:18:28.833" endtime="20200630 11:18:28.922" critical="yes"></status>
</test>
<test id="s1-s1-t5" name="Test SCM portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${SCM_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:18:28.927" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:18:28.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:18:28.929" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 11:18:28.924" endtime="20200630 11:18:28.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:18:28.930" level="INFO"></msg>
<status status="PASS" starttime="20200630 11:18:28.930" endtime="20200630 11:18:28.930"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:18:28.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:18:28.930" endtime="20200630 11:18:28.931"></status>
</kw>
<status status="PASS" starttime="20200630 11:18:28.924" endtime="20200630 11:18:28.931"></status>
</kw>
<status status="PASS" starttime="20200630 11:18:28.923" endtime="20200630 11:18:28.931"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:18:28.936" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://scm:9876 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:18:28.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:18:28.950" level="INFO">${output} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.2...
* Connected to scm (172.26.0.2) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200630 11:18:28.932" endtime="20200630 11:18:28.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:18:28.951" level="INFO">* About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.2...
* Connected to scm (172.26.0.2) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host scm left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200630 11:18:28.951" endtime="20200630 11:18:28.951"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:18:28.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:18:28.951" endtime="20200630 11:18:28.952"></status>
</kw>
<msg timestamp="20200630 11:18:28.952" level="INFO">${result} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.2...
* Connected to scm (172.26.0.2) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200630 11:18:28.931" endtime="20200630 11:18:28.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200630 11:18:28.953" endtime="20200630 11:18:28.953"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:18:28.958" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:18:28.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:18:28.959" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200630 11:18:28.955" endtime="20200630 11:18:28.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:18:28.960" level="INFO">scm</msg>
<status status="PASS" starttime="20200630 11:18:28.960" endtime="20200630 11:18:28.961"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:18:28.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:18:28.961" endtime="20200630 11:18:28.961"></status>
</kw>
<msg timestamp="20200630 11:18:28.962" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200630 11:18:28.954" endtime="20200630 11:18:28.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200630 11:18:28.962" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200630 11:18:28.962" endtime="20200630 11:18:28.962"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:18:28.966" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:18:28.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:18:28.976" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 11:18:28.964" endtime="20200630 11:18:28.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:18:28.977" level="INFO"></msg>
<status status="PASS" starttime="20200630 11:18:28.976" endtime="20200630 11:18:28.977"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:18:28.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:18:28.977" endtime="20200630 11:18:28.977"></status>
</kw>
<status status="PASS" starttime="20200630 11:18:28.963" endtime="20200630 11:18:28.978"></status>
</kw>
<status status="PASS" starttime="20200630 11:18:28.963" endtime="20200630 11:18:28.978"></status>
</kw>
<status status="PASS" starttime="20200630 11:18:28.954" endtime="20200630 11:18:28.978"></status>
</kw>
<status status="PASS" starttime="20200630 11:18:28.953" endtime="20200630 11:18:28.978"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:18:28.980" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://scm:9876 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:18:29.006" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:18:29.006" level="INFO">${output} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.2...
* Connected to scm (172.26.0.2) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200630 11:18:28.978" endtime="20200630 11:18:29.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:18:29.007" level="INFO">* About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.2...
* Connected to scm (172.26.0.2) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host scm left intact
* Issue another request to this URL: 'http://scm:9876/'
* Found bundle for host scm: 0x20f8f20
* Re-using existing connection! (#0) with host scm
* Connected to scm (172.26.0.2) port 9876 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWQYJKoZIhvcSAQICAQBuggJIMIICRKADAgEFoQMCAQ6iBwMFACAAAACjggFUYYIBUDCCAUygAwIBBaENGwtFWEFNUExFLkNPTaIWMBSgAwIBA6ENMAsbBEhUVFAbA3NjbaOCARwwggEYoAMCARKhAwIBAqKCAQoEggEGvkl3GwfMzBK5yclwt8CC2Tp6luuM7nuOZWd4yytYiSc329SJCyvzYpKo6SR8XYIgG21s+3cQttg40ydk8F/M68TUSsBIdWJ8K0l8tPAI4j3z9p/exqWZE3Zp0tGsYuzBFZORja4E4mMoPMoAwxxUZugLYm+WPRKc/atTUmIx3M0+vxN6Ae00fnFuFBVcE+bOxPaHxUqdYvy9b20f2+EuzA9E+AJe/j3mP6JiFnrJmMtD8zrTVg/hAqBQZEq5Gsjv32Oghzq+39SMP5hphwfwKo391TniLwS7YNC931KVl/ZIw+sxAfbpxV6cRNQS5jG07X7LN9LCjWjLir3nlSuPhmxv8su6rqSB1jCB06ADAgESooHLBIHIlNUf7DbBAseSkiikPdUDqg0D57v52yOU1UscX79NcRdQRqOfsV73a5FtFxxssu+kPRSdhXkTHSV7T+pak0Z80k59tQptZbv5LMmPsbWOwtb/9NwkRUAvZ6kipRxUS1M6zXrPH6LQIS2C/cqtJOeVsijzrOH5W/JO9WHlpqpcT70DyBaTY9QjS+cRa+3XcT8EWX37j5ZlS2V+/736QtXn8UfcexbPUyuorymkPXHx6K5UFtg5pxN3vZ138Hru/VXDoR8WbTAhWDI=
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 11:18:28 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 11:18:28 GMT
&lt; Date: Tue, 30 Jun 2020 11:18:28 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Tue, 30 Jun 2020 11:18:28 GMT
&lt; Date: Tue, 30 Jun 2020 11:18:28 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCrJQKkMpacjesCisuc1Val2lJIS8VJsv4Y1S0CB4k7L7cu2Jit/oLrlfaGvbd7vhp4t+XcY4r8990pNR2/7VQJJFA
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593551909002&amp;s=s9uk24iWZm5Jb8uMutLswQ2tOicA2wcbrjpC9D8IkUQ="; Path=/; HttpOnly
&lt; Last-Modified: Tue, 30 Jun 2020 09:58:50 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2923
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Tue, 30 Jun 2020 11:18:28 GMT
Cache-Control: no-cache
Expires: Tue, 30 Jun 2020 11:18:28 GMT
Date: Tue, 30 Jun 2020 11:18:28 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Tue, 30 Jun 2020 11:18:28 GMT
Date: Tue, 30 Jun 2020 11:18:28 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCrJQKkMpacjesCisuc1Val2lJIS8VJsv4Y1S0CB4k7L7cu2Jit/oLrlfaGvbd7vhp4t+XcY4r8990pNR2/7VQJJFA
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593551909002&amp;s=s9uk24iWZm5Jb8uMutLswQ2tOicA2wcbrjpC9D8IkUQ="; Path=/; HttpOnly
Last-Modified: Tue, 30 Jun 2020 09:58:50 GMT
Accept-Ranges: bytes
Content-Length: 2923
</msg>
<status status="PASS" starttime="20200630 11:18:29.007" endtime="20200630 11:18:29.008"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:18:29.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:18:29.008" endtime="20200630 11:18:29.008"></status>
</kw>
<msg timestamp="20200630 11:18:29.009" level="INFO">${result} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.2...
* Connected to scm (172.26.0.2) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200630 11:18:28.978" endtime="20200630 11:18:29.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200630 11:18:29.009" endtime="20200630 11:18:29.009"></status>
</kw>
<status status="PASS" starttime="20200630 11:18:28.923" endtime="20200630 11:18:29.009"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 11:18:28.922" endtime="20200630 11:18:29.009" critical="yes"></status>
</test>
<test id="s1-s1-t6" name="Test Recon portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${RECON_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:18:29.014" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:18:29.016" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:18:29.016" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 11:18:29.012" endtime="20200630 11:18:29.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:18:29.017" level="INFO"></msg>
<status status="PASS" starttime="20200630 11:18:29.017" endtime="20200630 11:18:29.017"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:18:29.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:18:29.017" endtime="20200630 11:18:29.018"></status>
</kw>
<status status="PASS" starttime="20200630 11:18:29.011" endtime="20200630 11:18:29.018"></status>
</kw>
<status status="PASS" starttime="20200630 11:18:29.011" endtime="20200630 11:18:29.018"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:18:29.022" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:18:29.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:18:29.036" level="INFO">${output} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.10...
* Connected to recon (172.26.0.10) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200630 11:18:29.019" endtime="20200630 11:18:29.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:18:29.037" level="INFO">* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.10...
* Connected to recon (172.26.0.10) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host recon left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200630 11:18:29.037" endtime="20200630 11:18:29.038"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:18:29.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:18:29.038" endtime="20200630 11:18:29.038"></status>
</kw>
<msg timestamp="20200630 11:18:29.038" level="INFO">${result} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.10...
* Connected to recon (172.26.0.10) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200630 11:18:29.018" endtime="20200630 11:18:29.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200630 11:18:29.039" endtime="20200630 11:18:29.039"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:18:29.043" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:18:29.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:18:29.044" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200630 11:18:29.041" endtime="20200630 11:18:29.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:18:29.046" level="INFO">scm</msg>
<status status="PASS" starttime="20200630 11:18:29.045" endtime="20200630 11:18:29.046"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:18:29.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:18:29.046" endtime="20200630 11:18:29.046"></status>
</kw>
<msg timestamp="20200630 11:18:29.047" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200630 11:18:29.040" endtime="20200630 11:18:29.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200630 11:18:29.047" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200630 11:18:29.047" endtime="20200630 11:18:29.047"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:18:29.051" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:18:29.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:18:29.063" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 11:18:29.048" endtime="20200630 11:18:29.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:18:29.064" level="INFO"></msg>
<status status="PASS" starttime="20200630 11:18:29.064" endtime="20200630 11:18:29.065"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:18:29.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:18:29.065" endtime="20200630 11:18:29.065"></status>
</kw>
<status status="PASS" starttime="20200630 11:18:29.048" endtime="20200630 11:18:29.065"></status>
</kw>
<status status="PASS" starttime="20200630 11:18:29.047" endtime="20200630 11:18:29.066"></status>
</kw>
<status status="PASS" starttime="20200630 11:18:29.040" endtime="20200630 11:18:29.066"></status>
</kw>
<status status="PASS" starttime="20200630 11:18:29.039" endtime="20200630 11:18:29.066"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:18:29.068" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:18:29.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:18:29.115" level="INFO">${output} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.10...
* Connected to recon (172.26.0.10) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200630 11:18:29.066" endtime="20200630 11:18:29.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:18:29.116" level="INFO">* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.10...
* Connected to recon (172.26.0.10) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host recon left intact
* Issue another request to this URL: 'http://recon:9888/'
* Found bundle for host recon: 0x12a4f20
* Re-using existing connection! (#0) with host recon
* Connected to recon (172.26.0.10) port 9888 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWwYJKoZIhvcSAQICAQBuggJKMIICRqADAgEFoQMCAQ6iBwMFACAAAACjggFWYYIBUjCCAU6gAwIBBaENGwtFWEFNUExFLkNPTaIYMBagAwIBA6EPMA0bBEhUVFAbBXJlY29uo4IBHDCCARigAwIBEqEDAgECooIBCgSCAQYcAJJVZMVf22ywfQISHNf9cDXPExZxzblGddwZKVeKQMd19KGJlFTqaR/5uPpWx6BAMTJqjYgudCkR/9i1s0V7PmlTY1gQNweamnT0FyW1cCnPYhPajwqTYAAJS9qoPKF/cx2UsP6NtxwXDG1NaoeXznlbXxU9nrNI6WAcO+E/5fBgcE1RsUc+7xbjCDIzTp04ZE47iAjq9v6kMIbnHGIAYt2hv8V8l9PgUQpPi0nB15x9rYHbEh21meNUQvkP1502mZLdWLkny6Crex+6zxIQdUcsXHFsNoVkqsj1sgjegcQ/N10EXb2vVxJ0zhcz8kkk82gKm9EWBmhXGgWciRR028XDSPYWpIHWMIHToAMCARKigcsEgchWejQCuzacURWyiqVreQLSiZ0wqx0XVeOYJpYe0JFgjS1K2YFyVGuW2sEs078J2i+y+IlEXi7oBV22trV0JjBMzi7Yrun3Hv/kepV4s0xiFxPFI054cnH+cXRdU0yXiyndAXMKAfM4SvuyquidoHGK7mN5U4kdISR3DO+L2Cikvf1Gey1RlMRKG/EqO16/jyspdqzJZiLXDNB/7aXXtXaynDr2kY1BCfIb6oss+YrmMtvk2oQPNh8JDhCyHvrTb/3p1t3sm3gtaQ==
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 11:18:29 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 11:18:29 GMT
&lt; Date: Tue, 30 Jun 2020 11:18:29 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Tue, 30 Jun 2020 11:18:29 GMT
&lt; Date: Tue, 30 Jun 2020 11:18:29 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCK3Gj07Gk06YSFmpQETCrvkCm+kgd/6L0Jw5fODghBMaML7kPiwN7zzkUE/jD71UJcR6vQSA9OPiq6XLvsl0QtSNB
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593551909108&amp;s=8tRs5K2kB22l4ewR15U8yaTlsh5xnr535NcJUf4WSGg="; Path=/; HttpOnly
&lt; Last-Modified: Tue, 30 Jun 2020 10:03:48 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2267
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Tue, 30 Jun 2020 11:18:29 GMT
Cache-Control: no-cache
Expires: Tue, 30 Jun 2020 11:18:29 GMT
Date: Tue, 30 Jun 2020 11:18:29 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Tue, 30 Jun 2020 11:18:29 GMT
Date: Tue, 30 Jun 2020 11:18:29 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCK3Gj07Gk06YSFmpQETCrvkCm+kgd/6L0Jw5fODghBMaML7kPiwN7zzkUE/jD71UJcR6vQSA9OPiq6XLvsl0QtSNB
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593551909108&amp;s=8tRs5K2kB22l4ewR15U8yaTlsh5xnr535NcJUf4WSGg="; Path=/; HttpOnly
Last-Modified: Tue, 30 Jun 2020 10:03:48 GMT
Accept-Ranges: bytes
Content-Length: 2267
</msg>
<status status="PASS" starttime="20200630 11:18:29.115" endtime="20200630 11:18:29.116"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:18:29.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:18:29.116" endtime="20200630 11:18:29.117"></status>
</kw>
<msg timestamp="20200630 11:18:29.117" level="INFO">${result} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.10...
* Connected to recon (172.26.0.10) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200630 11:18:29.066" endtime="20200630 11:18:29.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200630 11:18:29.117" endtime="20200630 11:18:29.117"></status>
</kw>
<status status="PASS" starttime="20200630 11:18:29.010" endtime="20200630 11:18:29.118"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 11:18:29.010" endtime="20200630 11:18:29.118" critical="yes"></status>
</test>
<doc>Smoke test for spnego with docker-compose environments.</doc>
<status status="PASS" starttime="20200630 11:18:19.702" endtime="20200630 11:18:29.119"></status>
</suite>
<status status="PASS" starttime="20200630 11:18:19.671" endtime="20200630 11:18:29.122"></status>
</suite>
<statistics>
<total>
<stat pass="6" fail="0">Critical Tests</stat>
<stat pass="6" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="6" fail="0" id="s1" name="ozonesecure-spnego">ozonesecure-spnego</stat>
<stat pass="6" fail="0" id="s1-s1" name="Web">ozonesecure-spnego.Web</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
