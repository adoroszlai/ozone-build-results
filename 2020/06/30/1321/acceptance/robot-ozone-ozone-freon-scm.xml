<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200630 10:45:47.522" rpa="false">
<suite id="s1" name="ozone-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:45:47.580" level="INFO">Running command 'ozone freon rk  --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:45:55.845" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:45:55.845" level="INFO">${output} = 2020-06-30 10:45:49,064 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:45:49,255 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 10:45:47.576" endtime="20200630 10:45:55.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:45:55.846" level="INFO">2020-06-30 10:45:49,064 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:45:49,255 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-30 10:45:49,255 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-30 10:45:50,350 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-06-30 10:45:50,351 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-06-30 10:45:50,351 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-06-30 10:45:50,351 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-06-30 10:45:50,351 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-06-30 10:45:50,351 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-30 10:45:50,351 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-06-30 10:45:50,353 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-30 10:45:50,365 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-30 10:45:50,399 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-84766, with hadoop as owner.
2020-06-30 10:45:50,453 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-84766/bucket-0-66268, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:45:51,024 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-30 10:45:51,368 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,054
Average Time spent in bucket creation: 00:00:00,041
Average Time spent in key creation: 00:00:00,075
Average Time spent in key write: 00:00:00,678
Total bytes written: 10240
Total Execution time: 00:00:06,079
***************************************************</msg>
<status status="PASS" starttime="20200630 10:45:55.845" endtime="20200630 10:45:55.846"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:45:55.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:45:55.846" endtime="20200630 10:45:55.847"></status>
</kw>
<msg timestamp="20200630 10:45:55.847" level="INFO">${result} = 2020-06-30 10:45:49,064 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:45:49,255 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 10:45:47.576" endtime="20200630 10:45:55.847"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200630 10:45:55.848" endtime="20200630 10:45:55.848"></status>
</kw>
<status status="PASS" starttime="20200630 10:45:55.847" endtime="20200630 10:45:55.848"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 10:45:47.575" endtime="20200630 10:45:55.849" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:45:55.853" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:46:01.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:46:01.208" level="INFO">${output} = 2020-06-30 10:45:57,266 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:45:57,462 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 10:45:55.850" endtime="20200630 10:46:01.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:46:01.209" level="INFO">2020-06-30 10:45:57,266 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:45:57,462 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-30 10:45:57,462 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-30 10:45:57,614 [main] INFO freon.BaseFreonGenerator: Executing test with prefix uhvpdnrgx1
2020-06-30 10:45:57,643 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-30 10:45:58,637 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-06-30 10:45:58,650 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-30 10:45:58,678 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:45:59,307 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-30 10:45:59,650 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-30 10:46:00,651 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-30 10:46:00,860 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=1374.436635, max=1374.436635, mean=1374.436635, stddev=0.0, median=1374.436635, p75=1374.436635, p95=1374.436635, p98=1374.436635, p99=1374.436635, p999=1374.436635, mean_rate=0.4676804710305598, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-30 10:46:00,861 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-06-30 10:46:00,863 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-30 10:46:00,863 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200630 10:46:01.208" endtime="20200630 10:46:01.209"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:46:01.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:46:01.209" endtime="20200630 10:46:01.210"></status>
</kw>
<msg timestamp="20200630 10:46:01.210" level="INFO">${result} = 2020-06-30 10:45:57,266 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:45:57,462 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 10:45:55.850" endtime="20200630 10:46:01.210"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200630 10:46:01.211" endtime="20200630 10:46:01.211"></status>
</kw>
<status status="PASS" starttime="20200630 10:46:01.210" endtime="20200630 10:46:01.211"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 10:45:55.849" endtime="20200630 10:46:01.212" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:46:01.216" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:46:05.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:46:05.201" level="INFO">${output} = 2020-06-30 10:46:02,666 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:46:02,876 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 10:46:01.214" endtime="20200630 10:46:05.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:46:05.202" level="INFO">2020-06-30 10:46:02,666 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:46:02,876 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-30 10:46:02,876 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-30 10:46:03,010 [main] INFO freon.BaseFreonGenerator: Executing test with prefix pkhgcxemqw
2020-06-30 10:46:03,030 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-30 10:46:04,040 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-30 10:46:05,042 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-30 10:46:05,153 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=71.296541, max=71.296541, mean=71.296541, stddev=0.0, median=71.296541, p75=71.296541, p95=71.296541, p98=71.296541, p99=71.296541, p999=71.296541, mean_rate=0.8770253905972024, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-30 10:46:05,155 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-06-30 10:46:05,176 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-30 10:46:05,176 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200630 10:46:05.201" endtime="20200630 10:46:05.202"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:46:05.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:46:05.202" endtime="20200630 10:46:05.203"></status>
</kw>
<msg timestamp="20200630 10:46:05.203" level="INFO">${result} = 2020-06-30 10:46:02,666 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:46:02,876 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 10:46:01.213" endtime="20200630 10:46:05.203"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200630 10:46:05.203" endtime="20200630 10:46:05.204"></status>
</kw>
<status status="PASS" starttime="20200630 10:46:05.203" endtime="20200630 10:46:05.204"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 10:46:01.212" endtime="20200630 10:46:05.204" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:46:05.208" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:46:09.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:46:09.139" level="INFO">${output} = 2020-06-30 10:46:06,589 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:46:06,748 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 10:46:05.206" endtime="20200630 10:46:09.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:46:09.140" level="INFO">2020-06-30 10:46:06,589 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:46:06,748 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-30 10:46:06,748 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-30 10:46:06,913 [main] INFO freon.BaseFreonGenerator: Executing test with prefix b7sxcxwfho
2020-06-30 10:46:06,934 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-30 10:46:07,935 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-30 10:46:08,936 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-30 10:46:09,103 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=12.954943, max=12.954943, mean=12.954943, stddev=0.0, median=12.954943, p75=12.954943, p95=12.954943, p98=12.954943, p99=12.954943, p999=12.954943, mean_rate=0.8630163446855383, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-30 10:46:09,105 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-06-30 10:46:09,105 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-30 10:46:09,105 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200630 10:46:09.139" endtime="20200630 10:46:09.140"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:46:09.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:46:09.140" endtime="20200630 10:46:09.141"></status>
</kw>
<msg timestamp="20200630 10:46:09.141" level="INFO">${result} = 2020-06-30 10:46:06,589 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:46:06,748 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 10:46:05.205" endtime="20200630 10:46:09.141"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200630 10:46:09.142" endtime="20200630 10:46:09.142"></status>
</kw>
<status status="PASS" starttime="20200630 10:46:09.141" endtime="20200630 10:46:09.142"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 10:46:05.205" endtime="20200630 10:46:09.142" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200630 10:45:47.552" endtime="20200630 10:46:09.144"></status>
</suite>
<status status="PASS" starttime="20200630 10:45:47.522" endtime="20200630 10:46:09.147"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-freon">ozone-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
