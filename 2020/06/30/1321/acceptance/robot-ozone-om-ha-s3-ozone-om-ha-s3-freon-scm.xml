<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200630 10:21:11.349" rpa="false">
<suite id="s1" name="ozone-om-ha-s3-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:21:11.410" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:21:19.643" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:21:19.643" level="INFO">${output} = 2020-06-30 10:21:12,752 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:21:12,887 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 10:21:11.406" endtime="20200630 10:21:19.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:21:19.644" level="INFO">2020-06-30 10:21:12,752 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:21:12,887 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-30 10:21:12,888 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-30 10:21:14,034 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-06-30 10:21:14,034 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-06-30 10:21:14,034 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-06-30 10:21:14,035 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-06-30 10:21:14,035 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-06-30 10:21:14,035 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-30 10:21:14,035 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-06-30 10:21:14,037 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-30 10:21:14,046 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-30 10:21:14,080 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-46140, with hadoop as owner.
2020-06-30 10:21:14,142 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-46140/bucket-0-48756, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:21:14,823 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-30 10:21:15,049 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,077
Average Time spent in bucket creation: 00:00:00,027
Average Time spent in key creation: 00:00:00,178
Average Time spent in key write: 00:00:00,654
Total bytes written: 10240
Total Execution time: 00:00:06,096
***************************************************</msg>
<status status="PASS" starttime="20200630 10:21:19.643" endtime="20200630 10:21:19.645"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:21:19.645" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:21:19.645" endtime="20200630 10:21:19.645"></status>
</kw>
<msg timestamp="20200630 10:21:19.646" level="INFO">${result} = 2020-06-30 10:21:12,752 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:21:12,887 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 10:21:11.406" endtime="20200630 10:21:19.646"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200630 10:21:19.646" endtime="20200630 10:21:19.647"></status>
</kw>
<status status="PASS" starttime="20200630 10:21:19.646" endtime="20200630 10:21:19.647"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 10:21:11.405" endtime="20200630 10:21:19.647" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:21:19.651" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:21:25.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:21:25.140" level="INFO">${output} = 2020-06-30 10:21:21,135 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:21:21,280 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 10:21:19.649" endtime="20200630 10:21:25.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:21:25.141" level="INFO">2020-06-30 10:21:21,135 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:21:21,280 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-30 10:21:21,280 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-30 10:21:21,419 [main] INFO freon.BaseFreonGenerator: Executing test with prefix uhyjm9p90l
2020-06-30 10:21:21,444 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-30 10:21:22,445 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-30 10:21:22,456 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-06-30 10:21:22,510 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:21:23,255 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-30 10:21:23,445 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-30 10:21:24,446 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-30 10:21:24,710 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=1646.920322, max=1646.920322, mean=1646.920322, stddev=0.0, median=1646.920322, p75=1646.920322, p95=1646.920322, p98=1646.920322, p99=1646.920322, p999=1646.920322, mean_rate=0.46395174594520533, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-30 10:21:24,710 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-06-30 10:21:24,712 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-30 10:21:24,712 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200630 10:21:25.140" endtime="20200630 10:21:25.141"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:21:25.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:21:25.141" endtime="20200630 10:21:25.142"></status>
</kw>
<msg timestamp="20200630 10:21:25.142" level="INFO">${result} = 2020-06-30 10:21:21,135 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:21:21,280 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 10:21:19.648" endtime="20200630 10:21:25.142"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200630 10:21:25.143" endtime="20200630 10:21:25.143"></status>
</kw>
<status status="PASS" starttime="20200630 10:21:25.142" endtime="20200630 10:21:25.143"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 10:21:19.648" endtime="20200630 10:21:25.143" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:21:25.147" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:21:29.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:21:29.208" level="INFO">${output} = 2020-06-30 10:21:26,664 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:21:26,892 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 10:21:25.145" endtime="20200630 10:21:29.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:21:29.209" level="INFO">2020-06-30 10:21:26,664 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:21:26,892 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-30 10:21:26,892 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-30 10:21:27,043 [main] INFO freon.BaseFreonGenerator: Executing test with prefix oglausickc
2020-06-30 10:21:27,066 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-30 10:21:28,068 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-30 10:21:29,070 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-30 10:21:29,185 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=86.753549, max=86.753549, mean=86.753549, stddev=0.0, median=86.753549, p75=86.753549, p95=86.753549, p98=86.753549, p99=86.753549, p999=86.753549, mean_rate=0.8900031649402549, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-30 10:21:29,186 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-06-30 10:21:29,195 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-30 10:21:29,195 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200630 10:21:29.209" endtime="20200630 10:21:29.210"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:21:29.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:21:29.210" endtime="20200630 10:21:29.210"></status>
</kw>
<msg timestamp="20200630 10:21:29.211" level="INFO">${result} = 2020-06-30 10:21:26,664 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:21:26,892 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 10:21:25.145" endtime="20200630 10:21:29.211"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200630 10:21:29.211" endtime="20200630 10:21:29.212"></status>
</kw>
<status status="PASS" starttime="20200630 10:21:29.211" endtime="20200630 10:21:29.212"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 10:21:25.144" endtime="20200630 10:21:29.212" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:21:29.217" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:21:33.395" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:21:33.395" level="INFO">${output} = 2020-06-30 10:21:30,734 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:21:31,026 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 10:21:29.214" endtime="20200630 10:21:33.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:21:33.396" level="INFO">2020-06-30 10:21:30,734 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:21:31,026 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-30 10:21:31,027 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-30 10:21:31,188 [main] INFO freon.BaseFreonGenerator: Executing test with prefix hxz5oivwvk
2020-06-30 10:21:31,200 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-30 10:21:32,202 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-30 10:21:33,203 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-30 10:21:33,339 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=33.705836, max=33.705836, mean=33.705836, stddev=0.0, median=33.705836, p75=33.705836, p95=33.705836, p98=33.705836, p99=33.705836, p999=33.705836, mean_rate=0.8900288346557691, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-30 10:21:33,341 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-06-30 10:21:33,343 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-30 10:21:33,343 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200630 10:21:33.395" endtime="20200630 10:21:33.397"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:21:33.397" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:21:33.397" endtime="20200630 10:21:33.398"></status>
</kw>
<msg timestamp="20200630 10:21:33.398" level="INFO">${result} = 2020-06-30 10:21:30,734 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:21:31,026 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 10:21:29.213" endtime="20200630 10:21:33.398"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200630 10:21:33.398" endtime="20200630 10:21:33.399"></status>
</kw>
<status status="PASS" starttime="20200630 10:21:33.398" endtime="20200630 10:21:33.399"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 10:21:29.213" endtime="20200630 10:21:33.399" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200630 10:21:11.382" endtime="20200630 10:21:33.400"></status>
</suite>
<status status="PASS" starttime="20200630 10:21:11.350" endtime="20200630 10:21:33.403"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-om-ha-s3-freon">ozone-om-ha-s3-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-om-ha-s3-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
