<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200630 11:22:01.824" rpa="false">
<suite id="s1" name="ozonesecure-spnego" source="/opt/hadoop/smoketest/spnego">
<suite id="s1-s1" name="Web" source="/opt/hadoop/smoketest/spnego/web.robot">
<test id="s1-s1-t1" name="Generate Freon data">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:22:01.894" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:22:01.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:22:01.896" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200630 11:22:01.889" endtime="20200630 11:22:01.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:22:01.897" level="INFO">scm</msg>
<status status="PASS" starttime="20200630 11:22:01.897" endtime="20200630 11:22:01.898"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:22:01.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:22:01.898" endtime="20200630 11:22:01.898"></status>
</kw>
<msg timestamp="20200630 11:22:01.898" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200630 11:22:01.889" endtime="20200630 11:22:01.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200630 11:22:01.900" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200630 11:22:01.899" endtime="20200630 11:22:01.900"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:22:01.903" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:22:01.917" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:22:01.917" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 11:22:01.901" endtime="20200630 11:22:01.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:22:01.918" level="INFO"></msg>
<status status="PASS" starttime="20200630 11:22:01.917" endtime="20200630 11:22:01.918"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:22:01.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:22:01.918" endtime="20200630 11:22:01.919"></status>
</kw>
<status status="PASS" starttime="20200630 11:22:01.900" endtime="20200630 11:22:01.919"></status>
</kw>
<status status="PASS" starttime="20200630 11:22:01.900" endtime="20200630 11:22:01.919"></status>
</kw>
<status status="PASS" starttime="20200630 11:22:01.889" endtime="20200630 11:22:01.920"></status>
</kw>
<status status="PASS" starttime="20200630 11:22:01.888" endtime="20200630 11:22:01.920"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 2 --keySize 1025</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:22:01.923" level="INFO">Running command 'ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 2 --keySize 1025 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:22:10.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:22:10.608" level="INFO">${output} = 2020-06-30 11:22:03,336 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 11:22:03,539 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 11:22:01.920" endtime="20200630 11:22:10.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:22:10.609" level="INFO">2020-06-30 11:22:03,336 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 11:22:03,539 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-30 11:22:03,539 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-06-30 11:22:05,050 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2020-06-30 11:22:05,051 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-06-30 11:22:05,051 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-06-30 11:22:05,051 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 2.
2020-06-30 11:22:05,051 [main] INFO freon.RandomKeyGenerator: Key size: 1025 bytes
2020-06-30 11:22:05,051 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-30 11:22:05,051 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-06-30 11:22:05,064 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-30 11:22:05,077 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 2)
2020-06-30 11:22:05,110 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-83416, with testuser/scm@EXAMPLE.COM as owner.
2020-06-30 11:22:05,137 [pool-2-thread-2] INFO rpc.RpcClient: Creating Bucket: vol-0-83416/bucket-0-93002, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 11:22:05,698 [pool-2-thread-4] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-30 11:22:06,085 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (2 out of 2)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 2
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,005
Average Time spent in bucket creation: 00:00:00,001
Average Time spent in key creation: 00:00:00,032
Average Time spent in key write: 00:00:00,095
Total bytes written: 2050
Total Execution time: 00:00:06,465
***************************************************</msg>
<status status="PASS" starttime="20200630 11:22:10.609" endtime="20200630 11:22:10.610"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:22:10.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:22:10.610" endtime="20200630 11:22:10.610"></status>
</kw>
<status status="PASS" starttime="20200630 11:22:01.920" endtime="20200630 11:22:10.610"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 11:22:01.886" endtime="20200630 11:22:10.611" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Test OM portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:22:10.616" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:22:10.621" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:22:10.621" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 11:22:10.614" endtime="20200630 11:22:10.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:22:10.622" level="INFO"></msg>
<status status="PASS" starttime="20200630 11:22:10.621" endtime="20200630 11:22:10.622"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:22:10.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:22:10.622" endtime="20200630 11:22:10.623"></status>
</kw>
<status status="PASS" starttime="20200630 11:22:10.613" endtime="20200630 11:22:10.623"></status>
</kw>
<status status="PASS" starttime="20200630 11:22:10.613" endtime="20200630 11:22:10.623"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:22:10.626" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:22:10.647" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:22:10.647" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.3...
* Connected to om (172.26.0.3) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200630 11:22:10.624" endtime="20200630 11:22:10.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:22:10.648" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.3...
* Connected to om (172.26.0.3) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200630 11:22:10.647" endtime="20200630 11:22:10.648"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:22:10.649" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:22:10.648" endtime="20200630 11:22:10.649"></status>
</kw>
<msg timestamp="20200630 11:22:10.649" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.3...
* Connected to om (172.26.0.3) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200630 11:22:10.623" endtime="20200630 11:22:10.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200630 11:22:10.649" endtime="20200630 11:22:10.650"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:22:10.655" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:22:10.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:22:10.656" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200630 11:22:10.652" endtime="20200630 11:22:10.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:22:10.657" level="INFO">scm</msg>
<status status="PASS" starttime="20200630 11:22:10.656" endtime="20200630 11:22:10.657"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:22:10.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:22:10.657" endtime="20200630 11:22:10.658"></status>
</kw>
<msg timestamp="20200630 11:22:10.658" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200630 11:22:10.651" endtime="20200630 11:22:10.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200630 11:22:10.659" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200630 11:22:10.658" endtime="20200630 11:22:10.659"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:22:10.663" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:22:10.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:22:10.676" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 11:22:10.660" endtime="20200630 11:22:10.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:22:10.677" level="INFO"></msg>
<status status="PASS" starttime="20200630 11:22:10.677" endtime="20200630 11:22:10.678"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:22:10.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:22:10.678" endtime="20200630 11:22:10.678"></status>
</kw>
<status status="PASS" starttime="20200630 11:22:10.659" endtime="20200630 11:22:10.678"></status>
</kw>
<status status="PASS" starttime="20200630 11:22:10.659" endtime="20200630 11:22:10.679"></status>
</kw>
<status status="PASS" starttime="20200630 11:22:10.651" endtime="20200630 11:22:10.679"></status>
</kw>
<status status="PASS" starttime="20200630 11:22:10.650" endtime="20200630 11:22:10.679"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:22:10.682" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:22:10.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:22:10.715" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.3...
* Connected to om (172.26.0.3) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200630 11:22:10.679" endtime="20200630 11:22:10.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:22:10.716" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.3...
* Connected to om (172.26.0.3) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/'
* Found bundle for host om: 0x1264f20
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.3) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQYJ5CXZvqKGMf3ezlOJ+GCYJgiG8LjEFrb7+nBa1QCr+n+K7shurws46SVBxecrwKkplWpe4gXcfb5MY6vswEMp89bVOqM+B2/gB6WOheFIpgLFfqU2wiDDDO7Ep2YAs3t9LYIhU2RsNykDsx/C/gohkMmyu0WjHnrNHtmOQ4xphNqhldIQUgTPgA1eJ9IEkmBLW8adpC4A5Fqxf7DdIaQpCt7CoFJVitGWo+WCGjB4n1RWCaZsXrHUetCrxHNngCHbMa5leel511+uAIf+MCErdG4CQrR1d2qmnM3wTd0Ti0aHgOnnOsl1yTbkD9K8eHMKq/u/ZEMwjerRmz4/t2xTyYwGdOGMpIHWMIHToAMCARKigcsEgcjWdk9g3TWHVlvmatwHqI4V6VngAURI5TXXXGguGg9BZ74hy+I3H7iT2wUCc69+876/HGEFr4vfJnV2WMYVCTmApbC7jRkSwP4zY4ewvCrNPW5/3Cm7gOIUmZCY7jWfCl5xTGAROrcj8sXfuPKexrDwmfhkc3dOYjWKtJRx6JANlfkJNQfLBjfViH/FojhT8ahDSQrtN0FPjgIBD88MMSOyd2Y1Q46t3hf2FBL5eEP2qPUsAwEI2iB7FqTnyzrupufoZt4dl7omlA==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 11:22:10 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 11:22:10 GMT
&lt; Date: Tue, 30 Jun 2020 11:22:10 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Tue, 30 Jun 2020 11:22:10 GMT
&lt; Date: Tue, 30 Jun 2020 11:22:10 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCeJm+uAVoRmiP8vpDGH5EX3n+HAaSSpHDoXp/q160JrfIwYw1P4p3lw/8s96WjFvpvoGaygbrMPKgNxhHef3aFHv1
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593552130706&amp;s=6DmbP5hF6kDIa9cdSTaPOmFr3Dfm2NZR/NJaBuVW/Z4="; Path=/; HttpOnly
&lt; Last-Modified: Tue, 30 Jun 2020 10:03:52 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2927
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Tue, 30 Jun 2020 11:22:10 GMT
Cache-Control: no-cache
Expires: Tue, 30 Jun 2020 11:22:10 GMT
Date: Tue, 30 Jun 2020 11:22:10 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Tue, 30 Jun 2020 11:22:10 GMT
Date: Tue, 30 Jun 2020 11:22:10 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCeJm+uAVoRmiP8vpDGH5EX3n+HAaSSpHDoXp/q160JrfIwYw1P4p3lw/8s96WjFvpvoGaygbrMPKgNxhHef3aFHv1
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593552130706&amp;s=6DmbP5hF6kDIa9cdSTaPOmFr3Dfm2NZR/NJaBuVW/Z4="; Path=/; HttpOnly
Last-Modified: Tue, 30 Jun 2020 10:03:52 GMT
Accept-Ranges: bytes
Content-Length: 2927
</msg>
<status status="PASS" starttime="20200630 11:22:10.716" endtime="20200630 11:22:10.717"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:22:10.717" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:22:10.717" endtime="20200630 11:22:10.717"></status>
</kw>
<msg timestamp="20200630 11:22:10.718" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.3...
* Connected to om (172.26.0.3) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200630 11:22:10.679" endtime="20200630 11:22:10.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200630 11:22:10.718" endtime="20200630 11:22:10.718"></status>
</kw>
<status status="PASS" starttime="20200630 11:22:10.612" endtime="20200630 11:22:10.718"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 11:22:10.612" endtime="20200630 11:22:10.719" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Test OM DB Checkpoint">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_DB_CHECKPOINT_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:22:10.725" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:22:10.727" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:22:10.727" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 11:22:10.722" endtime="20200630 11:22:10.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:22:10.728" level="INFO"></msg>
<status status="PASS" starttime="20200630 11:22:10.728" endtime="20200630 11:22:10.728"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:22:10.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:22:10.729" endtime="20200630 11:22:10.729"></status>
</kw>
<status status="PASS" starttime="20200630 11:22:10.721" endtime="20200630 11:22:10.729"></status>
</kw>
<status status="PASS" starttime="20200630 11:22:10.721" endtime="20200630 11:22:10.729"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:22:10.733" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/dbCheckpoint 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:22:10.745" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:22:10.745" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.3...
* Connected to om (172.26.0.3) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200630 11:22:10.730" endtime="20200630 11:22:10.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:22:10.746" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.3...
* Connected to om (172.26.0.3) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 417
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 417
</msg>
<status status="PASS" starttime="20200630 11:22:10.746" endtime="20200630 11:22:10.747"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:22:10.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:22:10.747" endtime="20200630 11:22:10.747"></status>
</kw>
<msg timestamp="20200630 11:22:10.747" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.3...
* Connected to om (172.26.0.3) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200630 11:22:10.730" endtime="20200630 11:22:10.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200630 11:22:10.748" endtime="20200630 11:22:10.748"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:22:10.751" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:22:10.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:22:10.754" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200630 11:22:10.749" endtime="20200630 11:22:10.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:22:10.755" level="INFO">scm</msg>
<status status="PASS" starttime="20200630 11:22:10.755" endtime="20200630 11:22:10.756"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:22:10.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:22:10.756" endtime="20200630 11:22:10.756"></status>
</kw>
<msg timestamp="20200630 11:22:10.757" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200630 11:22:10.749" endtime="20200630 11:22:10.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200630 11:22:10.757" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200630 11:22:10.757" endtime="20200630 11:22:10.758"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:22:10.761" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:22:10.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:22:10.776" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 11:22:10.759" endtime="20200630 11:22:10.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:22:10.778" level="INFO"></msg>
<status status="PASS" starttime="20200630 11:22:10.777" endtime="20200630 11:22:10.778"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:22:10.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:22:10.778" endtime="20200630 11:22:10.778"></status>
</kw>
<status status="PASS" starttime="20200630 11:22:10.758" endtime="20200630 11:22:10.779"></status>
</kw>
<status status="PASS" starttime="20200630 11:22:10.758" endtime="20200630 11:22:10.779"></status>
</kw>
<status status="PASS" starttime="20200630 11:22:10.749" endtime="20200630 11:22:10.779"></status>
</kw>
<status status="PASS" starttime="20200630 11:22:10.748" endtime="20200630 11:22:10.779"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:22:10.783" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/dbCheckpoint 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:22:10.845" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:22:10.845" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.3...
* Connected to om (172.26.0.3) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200630 11:22:10.780" endtime="20200630 11:22:10.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:22:10.846" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.3...
* Connected to om (172.26.0.3) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 417
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/dbCheckpoint'
* Found bundle for host om: 0x1065f50
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.3) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQavuMiCbgq1A5erDhxYz1AAygnV+ZWGU0VoxzwvCUqcCmtoe0NnObzqQ97mfYDeu93rJt2L3bDIuI859L6JJxfUeVbsyRenHZO0dud9XGc2rL+eX9ensj3oNtff+/lOe1cDssWQbeBzBZV7nju17XYM5ZZ89BMGM1BYweOD7l5HITeDKEp2z9TC1kBxBv+L+Jtv954D/GU/sw8N+M0vJZabUWOZrrTFbTXT9s5aJH9aJju5lfH+GP7hvga05amGnPVtp0tczoH6s/yaL5NEr1Fy3tm3Gs5278TbghjA0MEvbmdBkRuSaLo00vRs9iuhhZwUgETooms2Y7vhz9KJApG0qs3ro8L4pIHWMIHToAMCARKigcsEgciE+foXs78CXGjjYCBNlfi/wyR+NvYo7DrrmIYG0R0UYgTHPWKyXmaTHbZtVjEnnP9vjzLpzZCn+/dP49Da+cqJsE1b8jx5UaP+DUAziFlMy3V1D7xrxp3tpTkXbzCINs4V15vmQIDG0HVy9AaAATlIhAe5KBONbg7ZyEoqQTa+miNbkK91H2RWczil6D5RBlKrBeUIE1tCn5FbwpS/lz1sbgpWyCiONxzqk2VLUvyYAi7NfAtZIEWqge4y04Hb2yP4NVbU9gML/w==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 11:22:10 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 11:22:10 GMT
&lt; Date: Tue, 30 Jun 2020 11:22:10 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/x-tgz
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCWWnlRYTZIk1to4g7NbROwoKhcHEsBDKIQ8yKffBMi/bsNdsZMev1fV5FKOt3Bkum6Hvwa5WZ6DVmtr5N86EAhUNC
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593552130805&amp;s=b+9A2eYzIOGYmCktk7oYO2ETJ1KTL11C9gveh2eOkJM="; Path=/; HttpOnly
&lt; Content-Disposition: attachment; filename="rdb_rdb_checkpoint_1593516130805.tgz"
&lt; Content-Length: 74442
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 417

HTTP/1.1 200 OK
Date: Tue, 30 Jun 2020 11:22:10 GMT
Cache-Control: no-cache
Expires: Tue, 30 Jun 2020 11:22:10 GMT
Date: Tue, 30 Jun 2020 11:22:10 GMT
Pragma: no-cache
Content-Type: application/x-tgz
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCWWnlRYTZIk1to4g7NbROwoKhcHEsBDKIQ8yKffBMi/bsNdsZMev1fV5FKOt3Bkum6Hvwa5WZ6DVmtr5N86EAhUNC
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593552130805&amp;s=b+9A2eYzIOGYmCktk7oYO2ETJ1KTL11C9gveh2eOkJM="; Path=/; HttpOnly
Content-Disposition: attachment; filename="rdb_rdb_checkpoint_1593516130805.tgz"
Content-Length: 74442
</msg>
<status status="PASS" starttime="20200630 11:22:10.845" endtime="20200630 11:22:10.846"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:22:10.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:22:10.846" endtime="20200630 11:22:10.847"></status>
</kw>
<msg timestamp="20200630 11:22:10.847" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.3...
* Connected to om (172.26.0.3) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200630 11:22:10.779" endtime="20200630 11:22:10.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200630 11:22:10.848" endtime="20200630 11:22:10.848"></status>
</kw>
<status status="PASS" starttime="20200630 11:22:10.720" endtime="20200630 11:22:10.848"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 11:22:10.719" endtime="20200630 11:22:10.849" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Test OM Service List">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_SERVICE_LIST_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:22:10.855" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:22:10.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:22:10.858" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 11:22:10.852" endtime="20200630 11:22:10.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:22:10.859" level="INFO"></msg>
<status status="PASS" starttime="20200630 11:22:10.859" endtime="20200630 11:22:10.859"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:22:10.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:22:10.860" endtime="20200630 11:22:10.860"></status>
</kw>
<status status="PASS" starttime="20200630 11:22:10.851" endtime="20200630 11:22:10.860"></status>
</kw>
<status status="PASS" starttime="20200630 11:22:10.851" endtime="20200630 11:22:10.861"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:22:10.865" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/serviceList 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:22:10.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:22:10.877" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.3...
* Connected to om (172.26.0.3) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200630 11:22:10.861" endtime="20200630 11:22:10.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:22:10.879" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.3...
* Connected to om (172.26.0.3) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 415
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 415
</msg>
<status status="PASS" starttime="20200630 11:22:10.878" endtime="20200630 11:22:10.879"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:22:10.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:22:10.879" endtime="20200630 11:22:10.880"></status>
</kw>
<msg timestamp="20200630 11:22:10.880" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.3...
* Connected to om (172.26.0.3) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200630 11:22:10.861" endtime="20200630 11:22:10.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200630 11:22:10.880" endtime="20200630 11:22:10.881"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:22:10.885" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:22:10.887" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:22:10.887" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200630 11:22:10.882" endtime="20200630 11:22:10.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:22:10.888" level="INFO">scm</msg>
<status status="PASS" starttime="20200630 11:22:10.888" endtime="20200630 11:22:10.888"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:22:10.889" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:22:10.888" endtime="20200630 11:22:10.889"></status>
</kw>
<msg timestamp="20200630 11:22:10.889" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200630 11:22:10.882" endtime="20200630 11:22:10.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200630 11:22:10.890" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200630 11:22:10.889" endtime="20200630 11:22:10.890"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:22:10.894" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:22:10.907" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:22:10.907" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 11:22:10.891" endtime="20200630 11:22:10.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:22:10.909" level="INFO"></msg>
<status status="PASS" starttime="20200630 11:22:10.908" endtime="20200630 11:22:10.909"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:22:10.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:22:10.909" endtime="20200630 11:22:10.909"></status>
</kw>
<status status="PASS" starttime="20200630 11:22:10.891" endtime="20200630 11:22:10.910"></status>
</kw>
<status status="PASS" starttime="20200630 11:22:10.890" endtime="20200630 11:22:10.910"></status>
</kw>
<status status="PASS" starttime="20200630 11:22:10.881" endtime="20200630 11:22:10.910"></status>
</kw>
<status status="PASS" starttime="20200630 11:22:10.881" endtime="20200630 11:22:10.910"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:22:10.913" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/serviceList 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:22:10.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:22:10.950" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.3...
* Connected to om (172.26.0.3) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200630 11:22:10.911" endtime="20200630 11:22:10.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:22:10.951" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.3...
* Connected to om (172.26.0.3) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 415
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/serviceList'
* Found bundle for host om: 0x1220f50
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.3) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD /serviceList HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQZsxa3xT8qfpZi53tZ2il0CaO149M8avIUurAiHJg0Q6TlFdr3unLaUnTGT/6S28UMkFoI6h9rj/RXfbm0b9uykYO2lpVOYfvi0BHrRQJUbwlwDig14GWkXmrQoMD/bvwvAtCJcKeXsBseYLox4nB7AwZkofAIUbK8wPR2qRF1JB/Kxu9YegyoCTOuB7IzPsGIVVdZOjxHS78oeeLasDyJhDQS6NWYfbZk+Z1BAkLih0JK7iX67LG/xuxyCTFiioAAyi35IfGfoWX/i5hC2m007YafcOFsWrG2leDHXuaZY6ufsNzv90Qp1KZogBA7Km3NhuoUXf5mVLS6U+xf8/k2l/xeooCPcpIHWMIHToAMCARKigcsEgchcNmRVjBffvknAtia4F1Izt4qEXH6Xuge+0zU0acLtgiKPqu7VA44SC5keyiuO9WC3S12I3GnlPkX/G2s6Jnny0lDL9mMWo2S6Vu0ExXp49qjq0Oo6H18r1MDhUpEPWfe0eof3a+/TFjLE4aAJYOoCrAhm+WZH4J9Gmon5t/zcs2/YIB2DI+EAfpH7A9H04P/nvAfG7FbKyttEX7DoF80cI4gjpyQGtvprLCOXqkfjzhxOjPoQLUVxzuco9H25wRFZXWrhoIajvw==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 11:22:10 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 11:22:10 GMT
&lt; Date: Tue, 30 Jun 2020 11:22:10 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json; charset=utf8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC0Kevyz3XuTM2KjTjr3eu/dpyNWY3lFYp0xZXnLIrP/hf78yFJmQiaewlbQC/VEjjvsyueNMd7O1PY0uhcl8tPGAy
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593552130937&amp;s=LGCBT3vbBQ0srheQbx50aI8qHIeXGi4Kjts3lS66loI="; Path=/; HttpOnly
&lt; Content-Length: 207
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 415

HTTP/1.1 200 OK
Date: Tue, 30 Jun 2020 11:22:10 GMT
Cache-Control: no-cache
Expires: Tue, 30 Jun 2020 11:22:10 GMT
Date: Tue, 30 Jun 2020 11:22:10 GMT
Pragma: no-cache
Content-Type: application/json; charset=utf8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC0Kevyz3XuTM2KjTjr3eu/dpyNWY3lFYp0xZXnLIrP/hf78yFJmQiaewlbQC/VEjjvsyueNMd7O1PY0uhcl8tPGAy
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593552130937&amp;s=LGCBT3vbBQ0srheQbx50aI8qHIeXGi4Kjts3lS66loI="; Path=/; HttpOnly
Content-Length: 207
</msg>
<status status="PASS" starttime="20200630 11:22:10.950" endtime="20200630 11:22:10.951"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:22:10.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:22:10.952" endtime="20200630 11:22:10.952"></status>
</kw>
<msg timestamp="20200630 11:22:10.952" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.3...
* Connected to om (172.26.0.3) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200630 11:22:10.910" endtime="20200630 11:22:10.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200630 11:22:10.953" endtime="20200630 11:22:10.953"></status>
</kw>
<status status="PASS" starttime="20200630 11:22:10.850" endtime="20200630 11:22:10.953"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 11:22:10.849" endtime="20200630 11:22:10.953" critical="yes"></status>
</test>
<test id="s1-s1-t5" name="Test SCM portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${SCM_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:22:10.959" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:22:10.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:22:10.966" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 11:22:10.956" endtime="20200630 11:22:10.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:22:10.967" level="INFO"></msg>
<status status="PASS" starttime="20200630 11:22:10.966" endtime="20200630 11:22:10.967"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:22:10.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:22:10.967" endtime="20200630 11:22:10.968"></status>
</kw>
<status status="PASS" starttime="20200630 11:22:10.956" endtime="20200630 11:22:10.968"></status>
</kw>
<status status="PASS" starttime="20200630 11:22:10.955" endtime="20200630 11:22:10.968"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:22:10.971" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://scm:9876 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:22:10.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:22:10.988" level="INFO">${output} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.10...
* Connected to scm (172.26.0.10) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTT...</msg>
<status status="PASS" starttime="20200630 11:22:10.968" endtime="20200630 11:22:10.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:22:10.990" level="INFO">* About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.10...
* Connected to scm (172.26.0.10) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host scm left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200630 11:22:10.989" endtime="20200630 11:22:10.990"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:22:10.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:22:10.990" endtime="20200630 11:22:10.990"></status>
</kw>
<msg timestamp="20200630 11:22:10.991" level="INFO">${result} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.10...
* Connected to scm (172.26.0.10) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTT...</msg>
<status status="PASS" starttime="20200630 11:22:10.968" endtime="20200630 11:22:10.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200630 11:22:10.991" endtime="20200630 11:22:10.991"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:22:10.996" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:22:10.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:22:10.997" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200630 11:22:10.993" endtime="20200630 11:22:10.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:22:10.998" level="INFO">scm</msg>
<status status="PASS" starttime="20200630 11:22:10.998" endtime="20200630 11:22:10.998"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:22:10.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:22:10.999" endtime="20200630 11:22:10.999"></status>
</kw>
<msg timestamp="20200630 11:22:10.999" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200630 11:22:10.992" endtime="20200630 11:22:10.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200630 11:22:11.000" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200630 11:22:11.000" endtime="20200630 11:22:11.000"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:22:11.003" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:22:11.016" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:22:11.016" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 11:22:11.001" endtime="20200630 11:22:11.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:22:11.017" level="INFO"></msg>
<status status="PASS" starttime="20200630 11:22:11.016" endtime="20200630 11:22:11.017"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:22:11.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:22:11.017" endtime="20200630 11:22:11.018"></status>
</kw>
<status status="PASS" starttime="20200630 11:22:11.001" endtime="20200630 11:22:11.018"></status>
</kw>
<status status="PASS" starttime="20200630 11:22:11.000" endtime="20200630 11:22:11.018"></status>
</kw>
<status status="PASS" starttime="20200630 11:22:10.992" endtime="20200630 11:22:11.018"></status>
</kw>
<status status="PASS" starttime="20200630 11:22:10.991" endtime="20200630 11:22:11.018"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:22:11.021" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://scm:9876 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:22:11.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:22:11.056" level="INFO">${output} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.10...
* Connected to scm (172.26.0.10) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTT...</msg>
<status status="PASS" starttime="20200630 11:22:11.019" endtime="20200630 11:22:11.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:22:11.057" level="INFO">* About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.10...
* Connected to scm (172.26.0.10) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host scm left intact
* Issue another request to this URL: 'http://scm:9876/'
* Found bundle for host scm: 0x2535f20
* Re-using existing connection! (#0) with host scm
* Connected to scm (172.26.0.10) port 9876 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWQYJKoZIhvcSAQICAQBuggJIMIICRKADAgEFoQMCAQ6iBwMFACAAAACjggFUYYIBUDCCAUygAwIBBaENGwtFWEFNUExFLkNPTaIWMBSgAwIBA6ENMAsbBEhUVFAbA3NjbaOCARwwggEYoAMCARKhAwIBAqKCAQoEggEGSRUZeODQTrWK06rfr/vfiaNuHB1vJX0YXT+OjYp84MtXgN54kMICPhtlFpufojpneRtNOVVQuITUFlKd7GFKzfuKj5cebNvoJaiO3em2RGpsNxwBcSVhFMdtIQW/0c1sEe6pt9+Dwd5G8E/BeODvqKfDr8yTFx8ATVJv3jjYtRe/yDCE1fHcVSGBFxJus3mQm27mmp1jJ7aDTVzeta+7wka524InV0+gMiruY0Ea+scatjAUzqWdE3AWDiZuqG1wYZ29xtDtzYisR02RyJ+nYwTbpo5MOo5eb/7YB/F9PBhLrfFNCoItibiu3w1kz4/AqJJWWZdqLpsc5o373dJEeoD59c/WuaSB1jCB06ADAgESooHLBIHIRBXAGNEmhg16haoXH5uxDzmDETLrsdn3bVLj2oWHiu2SrFJ9/U7jdS92w3mPEV4lm2K3nAuChn6XG6nf7rQu+rB41nOLNf/bBb1BtKNOz1l6vblrw3KEQRWfRHbWlbl9hSdZ98EOYmAqxW5Dh2eku+TzJlZEn58A1I7AKG1MnmTaSsceLFSKgEYpqg8oBW/0fk/f4bQG1haCMKNIz9L7C5h3bZlPaadKoogjATx8Pv8mKJccw6comZfhQCUEsBh8eSBhC7pdMSk=
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 11:22:11 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 11:22:11 GMT
&lt; Date: Tue, 30 Jun 2020 11:22:11 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Tue, 30 Jun 2020 11:22:11 GMT
&lt; Date: Tue, 30 Jun 2020 11:22:11 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGkGCSqGSIb3EgECAgIAb1owWKADAgEFoQMCAQ+iTDBKoAMCARKiQwRBtJYILAA4x8H0ZL7Gl+zL6z4eU3UkrQdDT6FS2CaDSapKO2iVfRVUGg8J1pJIuf2HRctzjx13ADfHDQ4C7Eh8t/I=
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593552131049&amp;s=RKMpGt9L+r7GkMz1/rE9VQVaWA3bkav+CWZq6CPbCS4="; Path=/; HttpOnly
&lt; Last-Modified: Tue, 30 Jun 2020 10:03:24 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2923
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Tue, 30 Jun 2020 11:22:11 GMT
Cache-Control: no-cache
Expires: Tue, 30 Jun 2020 11:22:11 GMT
Date: Tue, 30 Jun 2020 11:22:11 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Tue, 30 Jun 2020 11:22:11 GMT
Date: Tue, 30 Jun 2020 11:22:11 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGkGCSqGSIb3EgECAgIAb1owWKADAgEFoQMCAQ+iTDBKoAMCARKiQwRBtJYILAA4x8H0ZL7Gl+zL6z4eU3UkrQdDT6FS2CaDSapKO2iVfRVUGg8J1pJIuf2HRctzjx13ADfHDQ4C7Eh8t/I=
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593552131049&amp;s=RKMpGt9L+r7GkMz1/rE9VQVaWA3bkav+CWZq6CPbCS4="; Path=/; HttpOnly
Last-Modified: Tue, 30 Jun 2020 10:03:24 GMT
Accept-Ranges: bytes
Content-Length: 2923
</msg>
<status status="PASS" starttime="20200630 11:22:11.057" endtime="20200630 11:22:11.058"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:22:11.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:22:11.058" endtime="20200630 11:22:11.058"></status>
</kw>
<msg timestamp="20200630 11:22:11.058" level="INFO">${result} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.10...
* Connected to scm (172.26.0.10) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTT...</msg>
<status status="PASS" starttime="20200630 11:22:11.018" endtime="20200630 11:22:11.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200630 11:22:11.059" endtime="20200630 11:22:11.059"></status>
</kw>
<status status="PASS" starttime="20200630 11:22:10.955" endtime="20200630 11:22:11.059"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 11:22:10.954" endtime="20200630 11:22:11.059" critical="yes"></status>
</test>
<test id="s1-s1-t6" name="Test Recon portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${RECON_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:22:11.064" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:22:11.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:22:11.068" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 11:22:11.062" endtime="20200630 11:22:11.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:22:11.069" level="INFO"></msg>
<status status="PASS" starttime="20200630 11:22:11.068" endtime="20200630 11:22:11.069"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:22:11.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:22:11.069" endtime="20200630 11:22:11.070"></status>
</kw>
<status status="PASS" starttime="20200630 11:22:11.062" endtime="20200630 11:22:11.070"></status>
</kw>
<status status="PASS" starttime="20200630 11:22:11.061" endtime="20200630 11:22:11.070"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:22:11.073" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:22:11.088" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:22:11.088" level="INFO">${output} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200630 11:22:11.071" endtime="20200630 11:22:11.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:22:11.089" level="INFO">* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host recon left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200630 11:22:11.088" endtime="20200630 11:22:11.089"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:22:11.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:22:11.089" endtime="20200630 11:22:11.090"></status>
</kw>
<msg timestamp="20200630 11:22:11.090" level="INFO">${result} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200630 11:22:11.070" endtime="20200630 11:22:11.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200630 11:22:11.090" endtime="20200630 11:22:11.091"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:22:11.094" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:22:11.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:22:11.097" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200630 11:22:11.092" endtime="20200630 11:22:11.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:22:11.098" level="INFO">scm</msg>
<status status="PASS" starttime="20200630 11:22:11.098" endtime="20200630 11:22:11.098"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:22:11.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:22:11.099" endtime="20200630 11:22:11.099"></status>
</kw>
<msg timestamp="20200630 11:22:11.099" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200630 11:22:11.092" endtime="20200630 11:22:11.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200630 11:22:11.100" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200630 11:22:11.099" endtime="20200630 11:22:11.100"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:22:11.103" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:22:11.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:22:11.115" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 11:22:11.101" endtime="20200630 11:22:11.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:22:11.116" level="INFO"></msg>
<status status="PASS" starttime="20200630 11:22:11.116" endtime="20200630 11:22:11.116"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:22:11.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:22:11.116" endtime="20200630 11:22:11.117"></status>
</kw>
<status status="PASS" starttime="20200630 11:22:11.101" endtime="20200630 11:22:11.117"></status>
</kw>
<status status="PASS" starttime="20200630 11:22:11.100" endtime="20200630 11:22:11.117"></status>
</kw>
<status status="PASS" starttime="20200630 11:22:11.091" endtime="20200630 11:22:11.117"></status>
</kw>
<status status="PASS" starttime="20200630 11:22:11.091" endtime="20200630 11:22:11.117"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:22:11.120" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:22:11.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:22:11.149" level="INFO">${output} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200630 11:22:11.118" endtime="20200630 11:22:11.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:22:11.150" level="INFO">* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host recon left intact
* Issue another request to this URL: 'http://recon:9888/'
* Found bundle for host recon: 0x252ef20
* Re-using existing connection! (#0) with host recon
* Connected to recon (172.26.0.7) port 9888 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWwYJKoZIhvcSAQICAQBuggJKMIICRqADAgEFoQMCAQ6iBwMFACAAAACjggFWYYIBUjCCAU6gAwIBBaENGwtFWEFNUExFLkNPTaIYMBagAwIBA6EPMA0bBEhUVFAbBXJlY29uo4IBHDCCARigAwIBEqEDAgECooIBCgSCAQYvoM39O4neAuk18zeATJ8HC+y0cw8eEN5j/ae2hvGefGPKfdQw9SbQKM7u/6Yr2cgcKWGVvefviKp9xzUs7zrmDVJglyWfEOV4Ra0Vyg3UHqh9r2TU4lEX9S8N7InAKghZR4CtDgFNnefuKVRuz1enSm0KQ0J+b8cqVT8rfqUDHhgqik+7tWFqpufr9w3A/iHNZCbAcBjkv08Wmu9ij53LgwbPm1mkjxITeqJPLZjQ7LtdAMjDkeOTczDOsWrkTi9qYd/XSPBZLHk6ZkCwIi0JAzQRZqSYj3PXYeZq/y0OdXzXHYVD4vRyXPBL9Jm42fowFtNYkZUtqo7PaaW1tvH4DVfMDmj6pIHWMIHToAMCARKigcsEgcgWfpOCwWOaATty84ZP6FdhoTaGXIn1sDcHVjEbZwDmTETKkTK3s8RdwnayJouVsnJXzUBFd5ZoF7p1i2jH/uenQjSDQIv79xIUMFj2QaTFaTKBk08yILS/oNCN663BorzFSMHUKAZQcurTzuhtHkWU7XPxwisYDAqsVXNdUehXdxsH0BYYLF4Ngn0iLW46SDarAi87C2QtthlWjjyF22PI13O9xWaOluhNhzyTOLr6S0p6MtbELWtVrR+OLVdgThXJpM3WcsI8rg==
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 11:22:11 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 11:22:11 GMT
&lt; Date: Tue, 30 Jun 2020 11:22:11 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Tue, 30 Jun 2020 11:22:11 GMT
&lt; Date: Tue, 30 Jun 2020 11:22:11 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCi3zejEiJ9dUPuVrqPIjmpB1/RCEp0RTDPUOzo7DfcsEIBwuYhKumq0OSoC2oNve4yjB2FpCBDF03vcncAPU1xBxx
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593552131145&amp;s=r9SOOLTgSPLPekWsfXNEoiBN1rqAhV0qqgc3cO57bJE="; Path=/; HttpOnly
&lt; Last-Modified: Tue, 30 Jun 2020 10:08:58 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2267
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Tue, 30 Jun 2020 11:22:11 GMT
Cache-Control: no-cache
Expires: Tue, 30 Jun 2020 11:22:11 GMT
Date: Tue, 30 Jun 2020 11:22:11 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Tue, 30 Jun 2020 11:22:11 GMT
Date: Tue, 30 Jun 2020 11:22:11 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCi3zejEiJ9dUPuVrqPIjmpB1/RCEp0RTDPUOzo7DfcsEIBwuYhKumq0OSoC2oNve4yjB2FpCBDF03vcncAPU1xBxx
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593552131145&amp;s=r9SOOLTgSPLPekWsfXNEoiBN1rqAhV0qqgc3cO57bJE="; Path=/; HttpOnly
Last-Modified: Tue, 30 Jun 2020 10:08:58 GMT
Accept-Ranges: bytes
Content-Length: 2267
</msg>
<status status="PASS" starttime="20200630 11:22:11.150" endtime="20200630 11:22:11.151"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:22:11.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:22:11.151" endtime="20200630 11:22:11.151"></status>
</kw>
<msg timestamp="20200630 11:22:11.152" level="INFO">${result} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200630 11:22:11.118" endtime="20200630 11:22:11.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200630 11:22:11.152" endtime="20200630 11:22:11.152"></status>
</kw>
<status status="PASS" starttime="20200630 11:22:11.061" endtime="20200630 11:22:11.152"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 11:22:11.060" endtime="20200630 11:22:11.152" critical="yes"></status>
</test>
<doc>Smoke test for spnego with docker-compose environments.</doc>
<status status="PASS" starttime="20200630 11:22:01.855" endtime="20200630 11:22:11.153"></status>
</suite>
<status status="PASS" starttime="20200630 11:22:01.825" endtime="20200630 11:22:11.156"></status>
</suite>
<statistics>
<total>
<stat pass="6" fail="0">Critical Tests</stat>
<stat pass="6" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="6" fail="0" id="s1" name="ozonesecure-spnego">ozonesecure-spnego</stat>
<stat pass="6" fail="0" id="s1-s1" name="Web">ozonesecure-spnego.Web</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
