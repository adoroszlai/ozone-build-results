<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200630 10:27:26.531" rpa="false">
<suite id="s1" name="ozone-om-ha-s3-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:27:26.592" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:27:34.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:27:34.968" level="INFO">${output} = 2020-06-30 10:27:28,054 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:27:28,283 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 10:27:26.588" endtime="20200630 10:27:34.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:27:34.969" level="INFO">2020-06-30 10:27:28,054 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:27:28,283 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-30 10:27:28,283 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-30 10:27:29,465 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-06-30 10:27:29,466 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-06-30 10:27:29,466 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-06-30 10:27:29,466 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-06-30 10:27:29,466 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-06-30 10:27:29,466 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-30 10:27:29,466 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-06-30 10:27:29,469 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-30 10:27:29,476 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-30 10:27:29,511 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-71423, with hadoop as owner.
2020-06-30 10:27:29,576 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-71423/bucket-0-08197, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:27:30,159 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-30 10:27:30,477 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,070
Average Time spent in bucket creation: 00:00:00,040
Average Time spent in key creation: 00:00:00,080
Average Time spent in key write: 00:00:00,639
Total bytes written: 10240
Total Execution time: 00:00:06,165
***************************************************</msg>
<status status="PASS" starttime="20200630 10:27:34.968" endtime="20200630 10:27:34.969"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:27:34.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:27:34.969" endtime="20200630 10:27:34.970"></status>
</kw>
<msg timestamp="20200630 10:27:34.970" level="INFO">${result} = 2020-06-30 10:27:28,054 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:27:28,283 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 10:27:26.587" endtime="20200630 10:27:34.970"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200630 10:27:34.971" endtime="20200630 10:27:34.971"></status>
</kw>
<status status="PASS" starttime="20200630 10:27:34.970" endtime="20200630 10:27:34.971"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 10:27:26.586" endtime="20200630 10:27:34.971" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:27:34.975" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:27:40.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:27:40.613" level="INFO">${output} = 2020-06-30 10:27:36,481 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:27:36,669 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 10:27:34.973" endtime="20200630 10:27:40.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:27:40.614" level="INFO">2020-06-30 10:27:36,481 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:27:36,669 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-30 10:27:36,669 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-30 10:27:36,837 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ehntwoqc26
2020-06-30 10:27:36,861 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-30 10:27:37,869 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-30 10:27:37,952 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-06-30 10:27:38,031 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:27:38,700 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-30 10:27:38,869 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-30 10:27:39,870 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-30 10:27:40,250 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=1395.32454, max=1395.32454, mean=1395.32454, stddev=0.0, median=1395.32454, p75=1395.32454, p95=1395.32454, p98=1395.32454, p99=1395.32454, p999=1395.32454, mean_rate=0.4655469836510281, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-30 10:27:40,251 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-06-30 10:27:40,251 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-30 10:27:40,251 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200630 10:27:40.614" endtime="20200630 10:27:40.614"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:27:40.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:27:40.615" endtime="20200630 10:27:40.615"></status>
</kw>
<msg timestamp="20200630 10:27:40.615" level="INFO">${result} = 2020-06-30 10:27:36,481 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:27:36,669 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 10:27:34.973" endtime="20200630 10:27:40.615"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200630 10:27:40.616" endtime="20200630 10:27:40.617"></status>
</kw>
<status status="PASS" starttime="20200630 10:27:40.616" endtime="20200630 10:27:40.617"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 10:27:34.972" endtime="20200630 10:27:40.617" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:27:40.622" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:27:44.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:27:44.526" level="INFO">${output} = 2020-06-30 10:27:41,970 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:27:42,162 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 10:27:40.619" endtime="20200630 10:27:44.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:27:44.527" level="INFO">2020-06-30 10:27:41,970 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:27:42,162 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-30 10:27:42,162 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-30 10:27:42,299 [main] INFO freon.BaseFreonGenerator: Executing test with prefix wdu3uqydm1
2020-06-30 10:27:42,314 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-30 10:27:43,317 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-30 10:27:44,319 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-30 10:27:44,501 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=100.653983, max=100.653983, mean=100.653983, stddev=0.0, median=100.653983, p75=100.653983, p95=100.653983, p98=100.653983, p99=100.653983, p999=100.653983, mean_rate=0.9685202108318184, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-30 10:27:44,502 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-06-30 10:27:44,503 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-30 10:27:44,503 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200630 10:27:44.526" endtime="20200630 10:27:44.527"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:27:44.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:27:44.527" endtime="20200630 10:27:44.528"></status>
</kw>
<msg timestamp="20200630 10:27:44.528" level="INFO">${result} = 2020-06-30 10:27:41,970 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:27:42,162 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 10:27:40.618" endtime="20200630 10:27:44.528"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200630 10:27:44.529" endtime="20200630 10:27:44.529"></status>
</kw>
<status status="PASS" starttime="20200630 10:27:44.528" endtime="20200630 10:27:44.530"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 10:27:40.618" endtime="20200630 10:27:44.530" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:27:44.534" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:27:48.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:27:48.539" level="INFO">${output} = 2020-06-30 10:27:45,946 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:27:46,173 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 10:27:44.532" endtime="20200630 10:27:48.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:27:48.540" level="INFO">2020-06-30 10:27:45,946 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:27:46,173 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-30 10:27:46,173 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-30 10:27:46,332 [main] INFO freon.BaseFreonGenerator: Executing test with prefix qssohb5jjv
2020-06-30 10:27:46,358 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-30 10:27:47,367 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-30 10:27:48,369 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-30 10:27:48,515 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=40.745874, max=40.745874, mean=40.745874, stddev=0.0, median=40.745874, p75=40.745874, p95=40.745874, p98=40.745874, p99=40.745874, p999=40.745874, mean_rate=0.8335093587018418, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-30 10:27:48,516 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-06-30 10:27:48,517 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-30 10:27:48,517 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200630 10:27:48.540" endtime="20200630 10:27:48.541"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:27:48.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:27:48.541" endtime="20200630 10:27:48.541"></status>
</kw>
<msg timestamp="20200630 10:27:48.541" level="INFO">${result} = 2020-06-30 10:27:45,946 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:27:46,173 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 10:27:44.531" endtime="20200630 10:27:48.541"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200630 10:27:48.542" endtime="20200630 10:27:48.543"></status>
</kw>
<status status="PASS" starttime="20200630 10:27:48.542" endtime="20200630 10:27:48.543"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 10:27:44.530" endtime="20200630 10:27:48.543" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200630 10:27:26.561" endtime="20200630 10:27:48.544"></status>
</suite>
<status status="PASS" starttime="20200630 10:27:26.532" endtime="20200630 10:27:48.547"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-om-ha-s3-freon">ozone-om-ha-s3-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-om-ha-s3-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
