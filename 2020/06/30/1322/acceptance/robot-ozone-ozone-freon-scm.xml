<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200630 10:49:48.638" rpa="false">
<suite id="s1" name="ozone-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:49:48.696" level="INFO">Running command 'ozone freon rk  --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:49:57.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:49:57.081" level="INFO">${output} = 2020-06-30 10:49:50,128 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:49:50,321 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 10:49:48.691" endtime="20200630 10:49:57.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:49:57.082" level="INFO">2020-06-30 10:49:50,128 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:49:50,321 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-30 10:49:50,322 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-30 10:49:51,450 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-06-30 10:49:51,451 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-06-30 10:49:51,451 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-06-30 10:49:51,451 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-06-30 10:49:51,451 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-06-30 10:49:51,451 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-30 10:49:51,451 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-06-30 10:49:51,454 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-30 10:49:51,460 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-30 10:49:51,502 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-30355, with hadoop as owner.
2020-06-30 10:49:51,554 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-30355/bucket-0-38369, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:49:51,994 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-30 10:49:52,463 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,068
Average Time spent in bucket creation: 00:00:00,028
Average Time spent in key creation: 00:00:00,077
Average Time spent in key write: 00:00:00,563
Total bytes written: 10240
Total Execution time: 00:00:06,126
***************************************************</msg>
<status status="PASS" starttime="20200630 10:49:57.081" endtime="20200630 10:49:57.082"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:49:57.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:49:57.082" endtime="20200630 10:49:57.083"></status>
</kw>
<msg timestamp="20200630 10:49:57.083" level="INFO">${result} = 2020-06-30 10:49:50,128 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:49:50,321 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 10:49:48.690" endtime="20200630 10:49:57.083"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200630 10:49:57.084" endtime="20200630 10:49:57.084"></status>
</kw>
<status status="PASS" starttime="20200630 10:49:57.083" endtime="20200630 10:49:57.084"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 10:49:48.690" endtime="20200630 10:49:57.084" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:49:57.088" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:50:02.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:50:02.479" level="INFO">${output} = 2020-06-30 10:49:58,540 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:49:58,744 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 10:49:57.086" endtime="20200630 10:50:02.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:50:02.480" level="INFO">2020-06-30 10:49:58,540 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:49:58,744 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-30 10:49:58,745 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-30 10:49:58,914 [main] INFO freon.BaseFreonGenerator: Executing test with prefix lymbxb3q86
2020-06-30 10:49:58,938 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-30 10:49:59,870 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-06-30 10:49:59,919 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:49:59,940 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-30 10:50:00,583 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-30 10:50:00,940 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-30 10:50:01,941 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-30 10:50:02,149 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=1490.312825, max=1490.312825, mean=1490.312825, stddev=0.0, median=1490.312825, p75=1490.312825, p95=1490.312825, p98=1490.312825, p99=1490.312825, p999=1490.312825, mean_rate=0.4570614809765433, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-30 10:50:02,150 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-06-30 10:50:02,150 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-30 10:50:02,150 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200630 10:50:02.480" endtime="20200630 10:50:02.481"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:50:02.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:50:02.481" endtime="20200630 10:50:02.481"></status>
</kw>
<msg timestamp="20200630 10:50:02.482" level="INFO">${result} = 2020-06-30 10:49:58,540 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:49:58,744 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 10:49:57.085" endtime="20200630 10:50:02.482"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200630 10:50:02.483" endtime="20200630 10:50:02.483"></status>
</kw>
<status status="PASS" starttime="20200630 10:50:02.482" endtime="20200630 10:50:02.483"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 10:49:57.085" endtime="20200630 10:50:02.483" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:50:02.488" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:50:06.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:50:06.380" level="INFO">${output} = 2020-06-30 10:50:03,847 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:50:04,013 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 10:50:02.486" endtime="20200630 10:50:06.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:50:06.381" level="INFO">2020-06-30 10:50:03,847 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:50:04,013 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-30 10:50:04,013 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-30 10:50:04,187 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ktfmzkpm91
2020-06-30 10:50:04,210 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-30 10:50:05,213 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-30 10:50:06,215 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-30 10:50:06,333 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=75.778013, max=75.778013, mean=75.778013, stddev=0.0, median=75.778013, p75=75.778013, p95=75.778013, p98=75.778013, p99=75.778013, p999=75.778013, mean_rate=0.8398816970525604, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-30 10:50:06,334 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-06-30 10:50:06,352 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-30 10:50:06,352 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200630 10:50:06.380" endtime="20200630 10:50:06.381"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:50:06.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:50:06.381" endtime="20200630 10:50:06.382"></status>
</kw>
<msg timestamp="20200630 10:50:06.382" level="INFO">${result} = 2020-06-30 10:50:03,847 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:50:04,013 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 10:50:02.485" endtime="20200630 10:50:06.382"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200630 10:50:06.383" endtime="20200630 10:50:06.383"></status>
</kw>
<status status="PASS" starttime="20200630 10:50:06.382" endtime="20200630 10:50:06.383"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 10:50:02.484" endtime="20200630 10:50:06.383" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:50:06.388" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:50:10.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:50:10.310" level="INFO">${output} = 2020-06-30 10:50:07,745 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:50:07,957 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 10:50:06.386" endtime="20200630 10:50:10.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:50:10.311" level="INFO">2020-06-30 10:50:07,745 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:50:07,957 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-30 10:50:07,957 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-30 10:50:08,111 [main] INFO freon.BaseFreonGenerator: Executing test with prefix gd5c5uit27
2020-06-30 10:50:08,135 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-30 10:50:09,141 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-30 10:50:10,143 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-30 10:50:10,284 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=22.260533, max=22.260533, mean=22.260533, stddev=0.0, median=22.260533, p75=22.260533, p95=22.260533, p98=22.260533, p99=22.260533, p999=22.260533, mean_rate=0.8718432969224371, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-30 10:50:10,284 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-06-30 10:50:10,284 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-30 10:50:10,285 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200630 10:50:10.311" endtime="20200630 10:50:10.312"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:50:10.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:50:10.312" endtime="20200630 10:50:10.312"></status>
</kw>
<msg timestamp="20200630 10:50:10.313" level="INFO">${result} = 2020-06-30 10:50:07,745 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:50:07,957 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 10:50:06.385" endtime="20200630 10:50:10.313"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200630 10:50:10.314" endtime="20200630 10:50:10.314"></status>
</kw>
<status status="PASS" starttime="20200630 10:50:10.313" endtime="20200630 10:50:10.315"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 10:50:06.384" endtime="20200630 10:50:10.315" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200630 10:49:48.667" endtime="20200630 10:50:10.316"></status>
</suite>
<status status="PASS" starttime="20200630 10:49:48.639" endtime="20200630 10:50:10.320"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-freon">ozone-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
