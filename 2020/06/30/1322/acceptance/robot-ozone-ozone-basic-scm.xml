<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200630 10:32:48.551" rpa="false">
<suite id="s1" name="ozone-basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200630 10:32:48.611" endtime="20200630 10:32:48.612"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:32:48.617" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:32:48.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:32:48.704" level="INFO">${output} = HTTP/1.1 200 OK
Date: Tue, 30 Jun 2020 10:32:48 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Tue, 30 Jun 2020 10:03:10 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200630 10:32:48.612" endtime="20200630 10:32:48.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:32:48.706" level="INFO">HTTP/1.1 200 OK
Date: Tue, 30 Jun 2020 10:32:48 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Tue, 30 Jun 2020 10:03:10 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20200630 10:32:48.705" endtime="20200630 10:32:48.706"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:32:48.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:32:48.706" endtime="20200630 10:32:48.707"></status>
</kw>
<msg timestamp="20200630 10:32:48.707" level="INFO">${result} = HTTP/1.1 200 OK
Date: Tue, 30 Jun 2020 10:32:48 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Tue, 30 Jun 2020 10:03:10 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200630 10:32:48.612" endtime="20200630 10:32:48.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200630 10:32:48.707" endtime="20200630 10:32:48.708"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 10:32:48.611" endtime="20200630 10:32:48.708" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200630 10:32:48.709" endtime="20200630 10:32:48.709"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:32:48.712" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:34:03.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:34:03.490" level="INFO">${output} = 2020-06-30 10:32:50,081 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:32:50,309 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 10:32:48.710" endtime="20200630 10:34:03.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:34:03.491" level="INFO">2020-06-30 10:32:50,081 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:32:50,309 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-30 10:32:50,309 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-30 10:32:52,490 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-06-30 10:32:52,491 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-06-30 10:32:52,491 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-06-30 10:32:52,491 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-06-30 10:32:52,491 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-06-30 10:32:52,491 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-30 10:32:52,491 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-06-30 10:32:52,494 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-06-30 10:32:52,497 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-30 10:32:52,505 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-06-30 10:32:52,546 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-15461, with hadoop as owner.
2020-06-30 10:32:52,897 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-49625, with hadoop as owner.
2020-06-30 10:32:52,916 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-23328, with hadoop as owner.
2020-06-30 10:32:52,925 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-57663, with hadoop as owner.
2020-06-30 10:32:52,936 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-82583, with hadoop as owner.
2020-06-30 10:32:52,951 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-15461/bucket-0-19600, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:32:53,040 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-49625/bucket-0-55435, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:32:53,056 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-23328/bucket-0-78411, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:32:53,071 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-57663/bucket-0-10655, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:32:53,078 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-82583/bucket-0-95618, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:32:53,090 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-15461/bucket-1-21746, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:32:53,098 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-49625/bucket-1-46154, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:32:53,102 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-23328/bucket-1-40929, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:32:53,110 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-57663/bucket-1-94033, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:32:53,117 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-82583/bucket-1-90176, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:32:53,123 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-15461/bucket-2-05966, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:32:53,134 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-49625/bucket-2-99786, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:32:53,143 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-23328/bucket-2-08419, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:32:53,151 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-57663/bucket-2-21296, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:32:53,163 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-82583/bucket-2-37898, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:32:53,173 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-15461/bucket-3-76410, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:32:53,184 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-49625/bucket-3-01705, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:32:53,193 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-23328/bucket-3-33998, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:32:53,197 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-57663/bucket-3-74918, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:32:53,202 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-82583/bucket-3-36740, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:32:53,205 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-15461/bucket-4-58004, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:32:53,209 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-49625/bucket-4-37874, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:32:53,217 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-23328/bucket-4-55694, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:32:53,223 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-57663/bucket-4-82456, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:32:53,229 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-82583/bucket-4-13838, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:32:53,508 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-06-30 10:32:54,232 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-30 10:32:54,508 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-06-30 10:32:55,509 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-06-30 10:32:56,515 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-06-30 10:32:57,515 [Thread-7] INFO freon.ProgressBar: Progress: 6.40 % (8 out of 125)
2020-06-30 10:32:58,516 [Thread-7] INFO freon.ProgressBar: Progress: 7.20 % (9 out of 125)
2020-06-30 10:32:59,516 [Thread-7] INFO freon.ProgressBar: Progress: 7.20 % (9 out of 125)
2020-06-30 10:33:00,517 [Thread-7] INFO freon.ProgressBar: Progress: 9.60 % (12 out of 125)
2020-06-30 10:33:01,517 [Thread-7] INFO freon.ProgressBar: Progress: 9.60 % (12 out of 125)
2020-06-30 10:33:02,518 [Thread-7] INFO freon.ProgressBar: Progress: 9.60 % (12 out of 125)
2020-06-30 10:33:03,518 [Thread-7] INFO freon.ProgressBar: Progress: 15.20 % (19 out of 125)
2020-06-30 10:33:04,519 [Thread-7] INFO freon.ProgressBar: Progress: 21.60 % (27 out of 125)
2020-06-30 10:33:05,519 [Thread-7] INFO freon.ProgressBar: Progress: 21.60 % (27 out of 125)
2020-06-30 10:33:06,520 [Thread-7] INFO freon.ProgressBar: Progress: 21.60 % (27 out of 125)
2020-06-30 10:33:07,520 [Thread-7] INFO freon.ProgressBar: Progress: 28.00 % (35 out of 125)
2020-06-30 10:33:08,521 [Thread-7] INFO freon.ProgressBar: Progress: 28.00 % (35 out of 125)
2020-06-30 10:33:09,521 [Thread-7] INFO freon.ProgressBar: Progress: 28.00 % (35 out of 125)
2020-06-30 10:33:10,522 [Thread-7] INFO freon.ProgressBar: Progress: 29.60 % (37 out of 125)
2020-06-30 10:33:11,522 [Thread-7] INFO freon.ProgressBar: Progress: 29.60 % (37 out of 125)
2020-06-30 10:33:12,523 [Thread-7] INFO freon.ProgressBar: Progress: 29.60 % (37 out of 125)
2020-06-30 10:33:13,523 [Thread-7] INFO freon.ProgressBar: Progress: 39.20 % (49 out of 125)
2020-06-30 10:33:14,524 [Thread-7] INFO freon.ProgressBar: Progress: 39.20 % (49 out of 125)
2020-06-30 10:33:15,525 [Thread-7] INFO freon.ProgressBar: Progress: 39.20 % (49 out of 125)
2020-06-30 10:33:16,525 [Thread-7] INFO freon.ProgressBar: Progress: 46.40 % (58 out of 125)
2020-06-30 10:33:17,529 [Thread-7] INFO freon.ProgressBar: Progress: 57.60 % (72 out of 125)
2020-06-30 10:33:18,530 [Thread-7] INFO freon.ProgressBar: Progress: 57.60 % (72 out of 125)
2020-06-30 10:33:19,530 [Thread-7] INFO freon.ProgressBar: Progress: 57.60 % (72 out of 125)
2020-06-30 10:33:20,531 [Thread-7] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2020-06-30 10:33:21,531 [Thread-7] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2020-06-30 10:33:22,532 [Thread-7] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2020-06-30 10:33:23,532 [Thread-7] INFO freon.ProgressBar: Progress: 60.00 % (75 out of 125)
2020-06-30 10:33:24,533 [Thread-7] INFO freon.ProgressBar: Progress: 60.00 % (75 out of 125)
2020-06-30 10:33:25,533 [Thread-7] INFO freon.ProgressBar: Progress: 60.80 % (76 out of 125)
2020-06-30 10:33:26,534 [Thread-7] INFO freon.ProgressBar: Progress: 60.80 % (76 out of 125)
2020-06-30 10:33:27,534 [Thread-7] INFO freon.ProgressBar: Progress: 60.80 % (76 out of 125)
2020-06-30 10:33:28,535 [Thread-7] INFO freon.ProgressBar: Progress: 64.00 % (80 out of 125)
2020-06-30 10:33:29,535 [Thread-7] INFO freon.ProgressBar: Progress: 64.00 % (80 out of 125)
2020-06-30 10:33:30,536 [Thread-7] INFO freon.ProgressBar: Progress: 64.80 % (81 out of 125)
2020-06-30 10:33:31,536 [Thread-7] INFO freon.ProgressBar: Progress: 69.60 % (87 out of 125)
2020-06-30 10:33:32,537 [Thread-7] INFO freon.ProgressBar: Progress: 69.60 % (87 out of 125)
2020-06-30 10:33:33,537 [Thread-7] INFO freon.ProgressBar: Progress: 72.00 % (90 out of 125)
2020-06-30 10:33:34,538 [Thread-7] INFO freon.ProgressBar: Progress: 72.80 % (91 out of 125)
2020-06-30 10:33:35,538 [Thread-7] INFO freon.ProgressBar: Progress: 72.80 % (91 out of 125)
2020-06-30 10:33:36,539 [Thread-7] INFO freon.ProgressBar: Progress: 75.20 % (94 out of 125)
2020-06-30 10:33:37,539 [Thread-7] INFO freon.ProgressBar: Progress: 75.20 % (94 out of 125)
2020-06-30 10:33:38,540 [Thread-7] INFO freon.ProgressBar: Progress: 75.20 % (94 out of 125)
2020-06-30 10:33:39,540 [Thread-7] INFO freon.ProgressBar: Progress: 76.80 % (96 out of 125)
2020-06-30 10:33:40,541 [Thread-7] INFO freon.ProgressBar: Progress: 76.80 % (96 out of 125)
2020-06-30 10:33:41,541 [Thread-7] INFO freon.ProgressBar: Progress: 77.60 % (97 out of 125)
2020-06-30 10:33:42,542 [Thread-7] INFO freon.ProgressBar: Progress: 77.60 % (97 out of 125)
2020-06-30 10:33:43,542 [Thread-7] INFO freon.ProgressBar: Progress: 77.60 % (97 out of 125)
2020-06-30 10:33:44,542 [Thread-7] INFO freon.ProgressBar: Progress: 82.40 % (103 out of 125)
2020-06-30 10:33:45,543 [Thread-7] INFO freon.ProgressBar: Progress: 82.40 % (103 out of 125)
2020-06-30 10:33:46,543 [Thread-7] INFO freon.ProgressBar: Progress: 82.40 % (103 out of 125)
2020-06-30 10:33:47,544 [Thread-7] INFO freon.ProgressBar: Progress: 83.20 % (104 out of 125)
2020-06-30 10:33:48,544 [Thread-7] INFO freon.ProgressBar: Progress: 83.20 % (104 out of 125)
2020-06-30 10:33:49,545 [Thread-7] INFO freon.ProgressBar: Progress: 84.80 % (106 out of 125)
2020-06-30 10:33:50,545 [Thread-7] INFO freon.ProgressBar: Progress: 84.80 % (106 out of 125)
2020-06-30 10:33:51,546 [Thread-7] INFO freon.ProgressBar: Progress: 84.80 % (106 out of 125)
2020-06-30 10:33:52,546 [Thread-7] INFO freon.ProgressBar: Progress: 85.60 % (107 out of 125)
2020-06-30 10:33:53,546 [Thread-7] INFO freon.ProgressBar: Progress: 85.60 % (107 out of 125)
2020-06-30 10:33:54,547 [Thread-7] INFO freon.ProgressBar: Progress: 87.20 % (109 out of 125)
2020-06-30 10:33:55,547 [Thread-7] INFO freon.ProgressBar: Progress: 87.20 % (109 out of 125)
2020-06-30 10:33:56,548 [Thread-7] INFO freon.ProgressBar: Progress: 87.20 % (109 out of 125)
2020-06-30 10:33:57,548 [Thread-7] INFO freon.ProgressBar: Progress: 95.20 % (119 out of 125)
2020-06-30 10:33:58,549 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,407
Average Time spent in bucket creation: 00:00:00,187
Average Time spent in key creation: 00:00:01,971
Average Time spent in key write: 00:00:00,866
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:01:12,509
***************************************************</msg>
<status status="PASS" starttime="20200630 10:34:03.491" endtime="20200630 10:34:03.492"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:34:03.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:34:03.492" endtime="20200630 10:34:03.492"></status>
</kw>
<msg timestamp="20200630 10:34:03.493" level="INFO">${result} = 2020-06-30 10:32:50,081 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:32:50,309 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 10:32:48.710" endtime="20200630 10:34:03.493"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" starttime="20200630 10:34:03.493" endtime="20200630 10:34:03.494"></status>
</kw>
<status status="PASS" starttime="20200630 10:34:03.493" endtime="20200630 10:34:03.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" starttime="20200630 10:34:03.494" endtime="20200630 10:34:03.494"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 10:32:48.708" endtime="20200630 10:34:03.494" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200630 10:32:48.582" endtime="20200630 10:34:03.496"></status>
</suite>
<suite id="s1-s2" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200630 10:34:03.503" level="INFO">${random} = 81516</msg>
<status status="PASS" starttime="20200630 10:34:03.503" endtime="20200630 10:34:03.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200630 10:34:03.503" level="INFO">${prefix} = 81516</msg>
<status status="PASS" starttime="20200630 10:34:03.503" endtime="20200630 10:34:03.503"></status>
</kw>
<status status="PASS" starttime="20200630 10:34:03.502" endtime="20200630 10:34:03.503"></status>
</kw>
<test id="s1-s2-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200630 10:34:03.504" endtime="20200630 10:34:03.505"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:34:03.508" level="INFO">Running command 'ozone sh volume info o3://om:9862/81516-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:34:06.022" level="INFO">${rc} = 255</msg>
<msg timestamp="20200630 10:34:06.022" level="INFO">${output} = VOLUME_NOT_FOUND Volume 81516-rpcwoport is not found</msg>
<status status="PASS" starttime="20200630 10:34:03.505" endtime="20200630 10:34:06.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:34:06.024" level="INFO">VOLUME_NOT_FOUND Volume 81516-rpcwoport is not found</msg>
<status status="PASS" starttime="20200630 10:34:06.023" endtime="20200630 10:34:06.024"></status>
</kw>
<msg timestamp="20200630 10:34:06.024" level="INFO">${result} = VOLUME_NOT_FOUND Volume 81516-rpcwoport is not found</msg>
<status status="PASS" starttime="20200630 10:34:03.505" endtime="20200630 10:34:06.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200630 10:34:06.024" endtime="20200630 10:34:06.025"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:34:06.028" level="INFO">Running command 'ozone sh volume create o3://om:9862/81516-rpcwoport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:34:08.577" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:34:08.577" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:34:06.025" endtime="20200630 10:34:08.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:34:08.579" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:34:08.578" endtime="20200630 10:34:08.579"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:34:08.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:34:08.579" endtime="20200630 10:34:08.579"></status>
</kw>
<msg timestamp="20200630 10:34:08.580" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200630 10:34:06.025" endtime="20200630 10:34:08.580"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200630 10:34:08.580" endtime="20200630 10:34:08.581"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:34:08.585" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="81516-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:34:11.626" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:34:11.626" level="INFO">${output} = {
  "metadata": {},
  "name": "81516-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T10:34:08.381Z",
  "modificationTime": "2020-06-30T10:34:08.381Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200630 10:34:08.582" endtime="20200630 10:34:11.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:34:11.627" level="INFO">{
  "metadata": {},
  "name": "81516-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T10:34:08.381Z",
  "modificationTime": "2020-06-30T10:34:08.381Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200630 10:34:11.627" endtime="20200630 10:34:11.627"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:34:11.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:34:11.628" endtime="20200630 10:34:11.628"></status>
</kw>
<msg timestamp="20200630 10:34:11.628" level="INFO">${result} = {
  "metadata": {},
  "name": "81516-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T10:34:08.381Z",
  "modificationTime": "2020-06-30T10:34:08.381Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200630 10:34:08.581" endtime="20200630 10:34:11.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200630 10:34:11.628" endtime="20200630 10:34:11.629"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:34:11.631" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="81516-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:34:14.407" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:34:14.407" level="INFO">${output} = {
  "metadata": {},
  "name": "81516-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T10:34:08.381Z",
  "modificationTime": "2020-06-30T10:34:08.381Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200630 10:34:11.629" endtime="20200630 10:34:14.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:34:14.408" level="INFO">{
  "metadata": {},
  "name": "81516-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T10:34:08.381Z",
  "modificationTime": "2020-06-30T10:34:08.381Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200630 10:34:14.408" endtime="20200630 10:34:14.409"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:34:14.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:34:14.409" endtime="20200630 10:34:14.409"></status>
</kw>
<msg timestamp="20200630 10:34:14.409" level="INFO">${result} = {
  "metadata": {},
  "name": "81516-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T10:34:08.381Z",
  "modificationTime": "2020-06-30T10:34:08.381Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200630 10:34:11.629" endtime="20200630 10:34:14.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200630 10:34:14.410" endtime="20200630 10:34:14.410"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:34:14.413" level="INFO">Running command 'ozone sh volume update o3://om:9862/81516-rpcwoport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:34:17.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:34:17.327" level="INFO">${output} = {
  "metadata" : { },
  "name" : "81516-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-30T10:34:08.381Z",
  "modificationTime" : "2020-06-30T10:34:16.890Z",
  "acl...</msg>
<status status="PASS" starttime="20200630 10:34:14.411" endtime="20200630 10:34:17.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:34:17.329" level="INFO">{
  "metadata" : { },
  "name" : "81516-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-30T10:34:08.381Z",
  "modificationTime" : "2020-06-30T10:34:16.890Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200630 10:34:17.328" endtime="20200630 10:34:17.329"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:34:17.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:34:17.329" endtime="20200630 10:34:17.330"></status>
</kw>
<status status="PASS" starttime="20200630 10:34:14.410" endtime="20200630 10:34:17.330"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:34:17.332" level="INFO">Running command 'ozone sh volume info o3://om:9862/81516-rpcwoport | jq -r '. | select(.name=="81516-rpcwoport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:34:20.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:34:20.207" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200630 10:34:17.330" endtime="20200630 10:34:20.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:34:20.208" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200630 10:34:20.207" endtime="20200630 10:34:20.208"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:34:20.209" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:34:20.208" endtime="20200630 10:34:20.209"></status>
</kw>
<msg timestamp="20200630 10:34:20.209" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200630 10:34:17.330" endtime="20200630 10:34:20.209"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200630 10:34:20.209" endtime="20200630 10:34:20.210"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:34:20.213" level="INFO">Running command 'ozone sh bucket create o3://om:9862/81516-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:34:22.934" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:34:22.934" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:34:20.210" endtime="20200630 10:34:22.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:34:22.936" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:34:22.935" endtime="20200630 10:34:22.936"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:34:22.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:34:22.936" endtime="20200630 10:34:22.936"></status>
</kw>
<status status="PASS" starttime="20200630 10:34:20.210" endtime="20200630 10:34:22.937"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:34:22.939" level="INFO">Running command 'ozone sh bucket info o3://om:9862/81516-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:34:25.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:34:25.838" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200630 10:34:22.937" endtime="20200630 10:34:25.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:34:25.839" level="INFO">DISK</msg>
<status status="PASS" starttime="20200630 10:34:25.838" endtime="20200630 10:34:25.839"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:34:25.839" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:34:25.839" endtime="20200630 10:34:25.839"></status>
</kw>
<msg timestamp="20200630 10:34:25.840" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200630 10:34:22.937" endtime="20200630 10:34:25.840"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200630 10:34:25.840" endtime="20200630 10:34:25.841"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:34:25.844" level="INFO">Running command 'ozone sh bucket list o3://om:9862/81516-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:34:28.733" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:34:28.733" level="INFO">${output} = 81516-rpcwoport</msg>
<status status="PASS" starttime="20200630 10:34:25.842" endtime="20200630 10:34:28.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:34:28.734" level="INFO">81516-rpcwoport</msg>
<status status="PASS" starttime="20200630 10:34:28.734" endtime="20200630 10:34:28.734"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:34:28.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:34:28.735" endtime="20200630 10:34:28.735"></status>
</kw>
<msg timestamp="20200630 10:34:28.735" level="INFO">${result} = 81516-rpcwoport</msg>
<status status="PASS" starttime="20200630 10:34:25.841" endtime="20200630 10:34:28.735"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200630 10:34:28.736" endtime="20200630 10:34:28.736"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:34:28.740" level="INFO">Running command 'ozone sh key put o3://om:9862/81516-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:34:33.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:34:33.747" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:34:28.738" endtime="20200630 10:34:33.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:34:33.748" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:34:33.747" endtime="20200630 10:34:33.748"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:34:33.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:34:33.748" endtime="20200630 10:34:33.749"></status>
</kw>
<status status="PASS" starttime="20200630 10:34:28.737" endtime="20200630 10:34:33.749"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:34:33.751" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:34:33.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:34:33.754" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:34:33.750" endtime="20200630 10:34:33.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:34:33.755" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:34:33.755" endtime="20200630 10:34:33.755"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:34:33.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:34:33.756" endtime="20200630 10:34:33.756"></status>
</kw>
<status status="PASS" starttime="20200630 10:34:33.749" endtime="20200630 10:34:33.756"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:34:33.759" level="INFO">Running command 'ozone sh key get o3://om:9862/81516-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:34:38.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:34:38.216" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:34:33.757" endtime="20200630 10:34:38.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:34:38.217" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:34:38.217" endtime="20200630 10:34:38.218"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:34:38.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:34:38.218" endtime="20200630 10:34:38.219"></status>
</kw>
<status status="PASS" starttime="20200630 10:34:33.756" endtime="20200630 10:34:38.219"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:34:38.221" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:34:38.226" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:34:38.226" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:34:38.219" endtime="20200630 10:34:38.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:34:38.227" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:34:38.226" endtime="20200630 10:34:38.227"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:34:38.227" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:34:38.227" endtime="20200630 10:34:38.228"></status>
</kw>
<status status="PASS" starttime="20200630 10:34:38.219" endtime="20200630 10:34:38.228"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:34:38.230" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/81516-rpcwoport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:34:42.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:34:42.881" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:34:38.228" endtime="20200630 10:34:42.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:34:42.882" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:34:42.882" endtime="20200630 10:34:42.883"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:34:42.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:34:42.883" endtime="20200630 10:34:42.883"></status>
</kw>
<status status="PASS" starttime="20200630 10:34:38.228" endtime="20200630 10:34:42.883"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:34:42.887" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:34:42.888" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:34:42.888" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:34:42.884" endtime="20200630 10:34:42.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:34:42.889" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:34:42.888" endtime="20200630 10:34:42.889"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:34:42.890" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:34:42.889" endtime="20200630 10:34:42.890"></status>
</kw>
<status status="PASS" starttime="20200630 10:34:42.883" endtime="20200630 10:34:42.890"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:34:42.893" level="INFO">Running command 'ozone sh key get o3://om:9862/81516-rpcwoport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:34:47.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:34:47.422" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:34:42.891" endtime="20200630 10:34:47.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:34:47.424" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:34:47.423" endtime="20200630 10:34:47.425"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:34:47.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:34:47.425" endtime="20200630 10:34:47.425"></status>
</kw>
<status status="PASS" starttime="20200630 10:34:42.890" endtime="20200630 10:34:47.425"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:34:47.428" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:34:47.430" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:34:47.430" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:34:47.426" endtime="20200630 10:34:47.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:34:47.430" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:34:47.430" endtime="20200630 10:34:47.430"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:34:47.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:34:47.431" endtime="20200630 10:34:47.431"></status>
</kw>
<status status="PASS" starttime="20200630 10:34:47.426" endtime="20200630 10:34:47.431"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:34:47.434" level="INFO">Running command 'ozone sh key info o3://om:9862/81516-rpcwoport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:34:50.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:34:50.344" level="INFO">${output} = {
  "volumeName": "81516-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-30T10:34:40.807Z",
  "modificationTime": "2020-06-30T10:34:42.496Z",...</msg>
<status status="PASS" starttime="20200630 10:34:47.432" endtime="20200630 10:34:50.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:34:50.345" level="INFO">{
  "volumeName": "81516-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-30T10:34:40.807Z",
  "modificationTime": "2020-06-30T10:34:42.496Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104432486370836600,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200630 10:34:50.345" endtime="20200630 10:34:50.345"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:34:50.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:34:50.346" endtime="20200630 10:34:50.346"></status>
</kw>
<msg timestamp="20200630 10:34:50.347" level="INFO">${result} = {
  "volumeName": "81516-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-30T10:34:40.807Z",
  "modificationTime": "2020-06-30T10:34:42.496Z",...</msg>
<status status="PASS" starttime="20200630 10:34:47.431" endtime="20200630 10:34:50.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200630 10:34:50.347" endtime="20200630 10:34:50.347"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:34:50.350" level="INFO">Running command 'ozone sh key delete o3://om:9862/81516-rpcwoport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:34:53.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:34:53.015" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:34:50.348" endtime="20200630 10:34:53.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:34:53.016" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:34:53.016" endtime="20200630 10:34:53.016"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:34:53.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:34:53.017" endtime="20200630 10:34:53.017"></status>
</kw>
<status status="PASS" starttime="20200630 10:34:50.347" endtime="20200630 10:34:53.017"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:34:53.021" level="INFO">Running command 'ozone sh key cp o3://om:9862/81516-rpcwoport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:34:58.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:34:58.178" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:34:53.018" endtime="20200630 10:34:58.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:34:58.179" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:34:58.179" endtime="20200630 10:34:58.179"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:34:58.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:34:58.180" endtime="20200630 10:34:58.180"></status>
</kw>
<status status="PASS" starttime="20200630 10:34:53.017" endtime="20200630 10:34:58.181"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:34:58.186" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:34:58.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:34:58.188" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:34:58.181" endtime="20200630 10:34:58.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:34:58.189" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:34:58.189" endtime="20200630 10:34:58.190"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:34:58.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:34:58.190" endtime="20200630 10:34:58.190"></status>
</kw>
<status status="PASS" starttime="20200630 10:34:58.181" endtime="20200630 10:34:58.191"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:34:58.194" level="INFO">Running command 'ozone sh key get o3://om:9862/81516-rpcwoport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:35:02.752" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:35:02.752" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:34:58.191" endtime="20200630 10:35:02.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:35:02.753" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:35:02.752" endtime="20200630 10:35:02.753"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:35:02.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:35:02.753" endtime="20200630 10:35:02.753"></status>
</kw>
<status status="PASS" starttime="20200630 10:34:58.191" endtime="20200630 10:35:02.754"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:35:02.757" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:35:02.760" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:35:02.760" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:35:02.754" endtime="20200630 10:35:02.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:35:02.761" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:35:02.761" endtime="20200630 10:35:02.761"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:35:02.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:35:02.761" endtime="20200630 10:35:02.762"></status>
</kw>
<status status="PASS" starttime="20200630 10:35:02.754" endtime="20200630 10:35:02.762"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:35:02.765" level="INFO">Running command 'ozone sh key delete o3://om:9862/81516-rpcwoport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:35:05.323" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:35:05.323" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:35:02.763" endtime="20200630 10:35:05.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:35:05.324" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:35:05.324" endtime="20200630 10:35:05.325"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:35:05.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:35:05.325" endtime="20200630 10:35:05.326"></status>
</kw>
<status status="PASS" starttime="20200630 10:35:02.762" endtime="20200630 10:35:05.326"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:35:05.331" level="INFO">Running command 'ozone sh key get o3://om:9862/81516-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:35:07.941" level="INFO">${rc} = 255</msg>
<msg timestamp="20200630 10:35:07.941" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200630 10:35:05.327" endtime="20200630 10:35:07.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:35:07.942" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200630 10:35:07.941" endtime="20200630 10:35:07.942"></status>
</kw>
<msg timestamp="20200630 10:35:07.942" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200630 10:35:05.326" endtime="20200630 10:35:07.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200630 10:35:07.942" endtime="20200630 10:35:07.943"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:35:07.946" level="INFO">Running command 'ozone sh key get --force o3://om:9862/81516-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:35:12.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:35:12.414" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:35:07.944" endtime="20200630 10:35:12.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:35:12.416" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:35:12.415" endtime="20200630 10:35:12.416"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:35:12.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:35:12.416" endtime="20200630 10:35:12.416"></status>
</kw>
<msg timestamp="20200630 10:35:12.417" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200630 10:35:07.943" endtime="20200630 10:35:12.417"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200630 10:35:12.417" endtime="20200630 10:35:12.417"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:35:12.421" level="INFO">Running command 'ozone sh key info o3://om:9862/81516-rpcwoport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:35:15.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:35:15.296" level="INFO">${output} = {
  "volumeName": "81516-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-30T10:34:31.620Z",
  "modificationTime": "2020-06-30T10:34:33.328Z",
  "re...</msg>
<status status="PASS" starttime="20200630 10:35:12.418" endtime="20200630 10:35:15.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:35:15.298" level="INFO">{
  "volumeName": "81516-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-30T10:34:31.620Z",
  "modificationTime": "2020-06-30T10:34:33.328Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104432485768888450,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200630 10:35:15.297" endtime="20200630 10:35:15.298"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:35:15.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:35:15.298" endtime="20200630 10:35:15.299"></status>
</kw>
<msg timestamp="20200630 10:35:15.299" level="INFO">${result} = {
  "volumeName": "81516-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-30T10:34:31.620Z",
  "modificationTime": "2020-06-30T10:34:33.328Z",
  "re...</msg>
<status status="PASS" starttime="20200630 10:35:12.417" endtime="20200630 10:35:15.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200630 10:35:15.299" endtime="20200630 10:35:15.300"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:35:15.302" level="INFO">Running command 'ozone sh key list o3://om:9862/81516-rpcwoport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:35:18.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:35:18.343" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200630 10:35:15.300" endtime="20200630 10:35:18.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:35:18.345" level="INFO">key1</msg>
<status status="PASS" starttime="20200630 10:35:18.344" endtime="20200630 10:35:18.345"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:35:18.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:35:18.345" endtime="20200630 10:35:18.345"></status>
</kw>
<msg timestamp="20200630 10:35:18.346" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200630 10:35:15.300" endtime="20200630 10:35:18.346"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200630 10:35:18.346" endtime="20200630 10:35:18.347"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:35:18.349" level="INFO">Running command 'ozone sh key rename o3://om:9862/81516-rpcwoport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:35:21.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:35:21.250" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:35:18.347" endtime="20200630 10:35:21.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:35:21.251" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:35:21.251" endtime="20200630 10:35:21.252"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:35:21.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:35:21.252" endtime="20200630 10:35:21.252"></status>
</kw>
<status status="PASS" starttime="20200630 10:35:18.347" endtime="20200630 10:35:21.252"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:35:21.256" level="INFO">Running command 'ozone sh key list o3://om:9862/81516-rpcwoport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:35:24.277" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:35:24.277" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200630 10:35:21.253" endtime="20200630 10:35:24.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:35:24.279" level="INFO">key2</msg>
<status status="PASS" starttime="20200630 10:35:24.278" endtime="20200630 10:35:24.279"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:35:24.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:35:24.279" endtime="20200630 10:35:24.280"></status>
</kw>
<msg timestamp="20200630 10:35:24.280" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200630 10:35:21.253" endtime="20200630 10:35:24.280"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200630 10:35:24.280" endtime="20200630 10:35:24.281"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:35:24.283" level="INFO">Running command 'ozone sh key delete o3://om:9862/81516-rpcwoport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:35:26.844" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:35:26.844" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:35:24.282" endtime="20200630 10:35:26.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:35:26.845" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:35:26.844" endtime="20200630 10:35:26.845"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:35:26.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:35:26.845" endtime="20200630 10:35:26.846"></status>
</kw>
<status status="PASS" starttime="20200630 10:35:24.281" endtime="20200630 10:35:26.846"></status>
</kw>
<status status="PASS" starttime="20200630 10:34:28.737" endtime="20200630 10:35:26.846"></status>
</kw>
<status status="PASS" starttime="20200630 10:34:28.736" endtime="20200630 10:35:26.846"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:35:26.849" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/81516-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:35:29.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:35:29.522" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:35:26.847" endtime="20200630 10:35:29.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:35:29.523" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:35:29.522" endtime="20200630 10:35:29.523"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:35:29.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:35:29.523" endtime="20200630 10:35:29.523"></status>
</kw>
<status status="PASS" starttime="20200630 10:35:26.847" endtime="20200630 10:35:29.524"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:35:29.527" level="INFO">Running command 'ozone sh volume delete o3://om:9862/81516-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:35:32.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:35:32.367" level="INFO">${output} = Volume 81516-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200630 10:35:29.524" endtime="20200630 10:35:32.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:35:32.368" level="INFO">Volume 81516-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200630 10:35:32.367" endtime="20200630 10:35:32.368"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:35:32.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:35:32.368" endtime="20200630 10:35:32.369"></status>
</kw>
<status status="PASS" starttime="20200630 10:35:29.524" endtime="20200630 10:35:32.369"></status>
</kw>
<status status="PASS" starttime="20200630 10:34:03.505" endtime="20200630 10:35:32.369"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200630 10:34:03.504" endtime="20200630 10:35:32.369" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200630 10:35:32.371" endtime="20200630 10:35:32.371"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:35:32.375" level="INFO">Running command 'ozone sh volume create o3://om:9862/81516-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:35:35.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:35:35.056" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:35:32.372" endtime="20200630 10:35:35.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:35:35.057" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:35:35.057" endtime="20200630 10:35:35.058"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:35:35.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:35:35.058" endtime="20200630 10:35:35.058"></status>
</kw>
<status status="PASS" starttime="20200630 10:35:32.372" endtime="20200630 10:35:35.059"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:35:35.062" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/81516-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:35:37.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:35:37.878" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200630 10:35:35.060" endtime="20200630 10:35:37.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:35:37.879" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200630 10:35:37.879" endtime="20200630 10:35:37.879"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:35:37.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:35:37.879" endtime="20200630 10:35:37.880"></status>
</kw>
<msg timestamp="20200630 10:35:37.880" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200630 10:35:35.059" endtime="20200630 10:35:37.880"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200630 10:35:37.880" endtime="20200630 10:35:37.881"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:35:37.884" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/81516-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:35:40.494" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:35:40.494" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200630 10:35:37.882" endtime="20200630 10:35:40.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:35:40.495" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200630 10:35:40.494" endtime="20200630 10:35:40.495"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:35:40.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:35:40.495" endtime="20200630 10:35:40.497"></status>
</kw>
<msg timestamp="20200630 10:35:40.497" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200630 10:35:37.881" endtime="20200630 10:35:40.497"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:35:40.500" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/81516-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:35:43.520" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:35:43.520" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 10:35:40.498" endtime="20200630 10:35:43.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:35:43.522" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200630 10:35:43.521" endtime="20200630 10:35:43.522"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:35:43.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:35:43.522" endtime="20200630 10:35:43.523"></status>
</kw>
<msg timestamp="20200630 10:35:43.523" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 10:35:40.497" endtime="20200630 10:35:43.523"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200630 10:35:43.523" endtime="20200630 10:35:43.524"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:35:43.527" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/81516-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:35:45.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:35:45.929" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200630 10:35:43.525" endtime="20200630 10:35:45.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:35:45.930" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200630 10:35:45.930" endtime="20200630 10:35:45.931"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:35:45.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:35:45.931" endtime="20200630 10:35:45.931"></status>
</kw>
<msg timestamp="20200630 10:35:45.931" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200630 10:35:43.524" endtime="20200630 10:35:45.931"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:35:45.934" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/81516-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:35:48.620" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:35:48.620" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 10:35:45.932" endtime="20200630 10:35:48.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:35:48.621" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200630 10:35:48.620" endtime="20200630 10:35:48.621"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:35:48.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:35:48.622" endtime="20200630 10:35:48.622"></status>
</kw>
<msg timestamp="20200630 10:35:48.622" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 10:35:45.932" endtime="20200630 10:35:48.622"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200630 10:35:48.623" endtime="20200630 10:35:48.624"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:35:48.626" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/81516-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:35:51.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:35:51.124" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200630 10:35:48.624" endtime="20200630 10:35:51.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:35:51.125" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200630 10:35:51.124" endtime="20200630 10:35:51.125"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:35:51.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:35:51.125" endtime="20200630 10:35:51.126"></status>
</kw>
<msg timestamp="20200630 10:35:51.126" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200630 10:35:48.624" endtime="20200630 10:35:51.126"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:35:51.129" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/81516-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:35:53.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:35:53.965" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200630 10:35:51.127" endtime="20200630 10:35:53.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:35:53.966" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200630 10:35:53.966" endtime="20200630 10:35:53.967"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:35:53.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:35:53.967" endtime="20200630 10:35:53.967"></status>
</kw>
<msg timestamp="20200630 10:35:53.967" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200630 10:35:51.126" endtime="20200630 10:35:53.967"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200630 10:35:53.968" endtime="20200630 10:35:53.968"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200630 10:35:53.969" endtime="20200630 10:35:53.970"></status>
</kw>
<status status="PASS" starttime="20200630 10:35:32.371" endtime="20200630 10:35:53.970"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200630 10:35:32.370" endtime="20200630 10:35:53.970" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200630 10:35:53.971" endtime="20200630 10:35:53.971"></status>
</kw>
<kw name="Test Bucket Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:35:53.977" level="INFO">Running command 'ozone sh bucket create o3://om:9862/81516-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:35:56.714" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:35:56.714" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:35:53.974" endtime="20200630 10:35:56.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:35:56.715" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:35:56.715" endtime="20200630 10:35:56.715"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:35:56.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:35:56.716" endtime="20200630 10:35:56.716"></status>
</kw>
<status status="PASS" starttime="20200630 10:35:53.973" endtime="20200630 10:35:56.716"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:35:56.719" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/81516-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:35:59.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:35:59.669" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 10:35:56.717" endtime="20200630 10:35:59.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:35:59.671" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200630 10:35:59.670" endtime="20200630 10:35:59.671"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:35:59.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:35:59.671" endtime="20200630 10:35:59.671"></status>
</kw>
<msg timestamp="20200630 10:35:59.672" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 10:35:56.717" endtime="20200630 10:35:59.672"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200630 10:35:59.672" endtime="20200630 10:35:59.672"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:35:59.675" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/81516-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:36:02.235" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:36:02.235" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200630 10:35:59.673" endtime="20200630 10:36:02.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:36:02.237" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200630 10:36:02.236" endtime="20200630 10:36:02.237"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:36:02.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:36:02.237" endtime="20200630 10:36:02.237"></status>
</kw>
<msg timestamp="20200630 10:36:02.238" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200630 10:35:59.672" endtime="20200630 10:36:02.238"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:36:02.241" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/81516-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:36:04.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:36:04.806" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 10:36:02.239" endtime="20200630 10:36:04.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:36:04.807" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200630 10:36:04.807" endtime="20200630 10:36:04.807"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:36:04.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:36:04.807" endtime="20200630 10:36:04.808"></status>
</kw>
<msg timestamp="20200630 10:36:04.808" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 10:36:02.238" endtime="20200630 10:36:04.808"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200630 10:36:04.808" endtime="20200630 10:36:04.809"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:36:04.812" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/81516-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:36:07.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:36:07.460" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200630 10:36:04.810" endtime="20200630 10:36:07.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:36:07.461" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200630 10:36:07.461" endtime="20200630 10:36:07.462"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:36:07.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:36:07.462" endtime="20200630 10:36:07.462"></status>
</kw>
<msg timestamp="20200630 10:36:07.463" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200630 10:36:04.809" endtime="20200630 10:36:07.463"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:36:07.466" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/81516-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:36:10.246" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:36:10.247" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 10:36:07.463" endtime="20200630 10:36:10.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:36:10.248" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200630 10:36:10.247" endtime="20200630 10:36:10.248"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:36:10.249" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:36:10.248" endtime="20200630 10:36:10.249"></status>
</kw>
<msg timestamp="20200630 10:36:10.249" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 10:36:07.463" endtime="20200630 10:36:10.249"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200630 10:36:10.249" endtime="20200630 10:36:10.251"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:36:10.255" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/81516-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:36:12.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:36:12.940" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200630 10:36:10.252" endtime="20200630 10:36:12.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:36:12.941" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200630 10:36:12.941" endtime="20200630 10:36:12.941"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:36:12.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:36:12.942" endtime="20200630 10:36:12.942"></status>
</kw>
<msg timestamp="20200630 10:36:12.942" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200630 10:36:10.251" endtime="20200630 10:36:12.943"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:36:12.945" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/81516-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:36:15.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:36:15.710" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200630 10:36:12.943" endtime="20200630 10:36:15.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:36:15.711" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200630 10:36:15.710" endtime="20200630 10:36:15.711"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:36:15.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:36:15.711" endtime="20200630 10:36:15.712"></status>
</kw>
<msg timestamp="20200630 10:36:15.712" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200630 10:36:12.943" endtime="20200630 10:36:15.712"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200630 10:36:15.712" endtime="20200630 10:36:15.713"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200630 10:36:15.713" endtime="20200630 10:36:15.713"></status>
</kw>
<status status="PASS" starttime="20200630 10:35:53.972" endtime="20200630 10:36:15.714"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200630 10:35:53.970" endtime="20200630 10:36:15.714" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200630 10:36:15.716" endtime="20200630 10:36:15.716"></status>
</kw>
<kw name="Test key Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:36:15.719" level="INFO">Running command 'ozone sh key put o3://om:9862/81516-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:36:20.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:36:20.146" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:36:15.717" endtime="20200630 10:36:20.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:36:20.147" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:36:20.146" endtime="20200630 10:36:20.147"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:36:20.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:36:20.147" endtime="20200630 10:36:20.148"></status>
</kw>
<status status="PASS" starttime="20200630 10:36:15.717" endtime="20200630 10:36:20.148"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:36:20.150" level="INFO">Running command 'ozone sh key getacl o3://om:9862/81516-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:36:23.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:36:23.045" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 10:36:20.149" endtime="20200630 10:36:23.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:36:23.046" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200630 10:36:23.045" endtime="20200630 10:36:23.046"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:36:23.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:36:23.046" endtime="20200630 10:36:23.047"></status>
</kw>
<msg timestamp="20200630 10:36:23.047" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 10:36:20.148" endtime="20200630 10:36:23.047"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200630 10:36:23.047" endtime="20200630 10:36:23.048"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:36:23.052" level="INFO">Running command 'ozone sh key addacl o3://om:9862/81516-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:36:25.777" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:36:25.777" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200630 10:36:23.048" endtime="20200630 10:36:25.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:36:25.779" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200630 10:36:25.777" endtime="20200630 10:36:25.779"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:36:25.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:36:25.779" endtime="20200630 10:36:25.780"></status>
</kw>
<msg timestamp="20200630 10:36:25.780" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200630 10:36:23.048" endtime="20200630 10:36:25.780"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:36:25.784" level="INFO">Running command 'ozone sh key getacl o3://om:9862/81516-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:36:28.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:36:28.825" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 10:36:25.781" endtime="20200630 10:36:28.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:36:28.827" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200630 10:36:28.826" endtime="20200630 10:36:28.827"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:36:28.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:36:28.827" endtime="20200630 10:36:28.828"></status>
</kw>
<msg timestamp="20200630 10:36:28.828" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 10:36:25.780" endtime="20200630 10:36:28.828"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200630 10:36:28.828" endtime="20200630 10:36:28.829"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:36:28.833" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/81516-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:36:31.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:36:31.555" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200630 10:36:28.830" endtime="20200630 10:36:31.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:36:31.556" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200630 10:36:31.555" endtime="20200630 10:36:31.556"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:36:31.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:36:31.557" endtime="20200630 10:36:31.557"></status>
</kw>
<msg timestamp="20200630 10:36:31.557" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200630 10:36:28.829" endtime="20200630 10:36:31.557"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:36:31.561" level="INFO">Running command 'ozone sh key getacl o3://om:9862/81516-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:36:34.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:36:34.268" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 10:36:31.558" endtime="20200630 10:36:34.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:36:34.269" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20200630 10:36:34.268" endtime="20200630 10:36:34.269"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:36:34.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:36:34.269" endtime="20200630 10:36:34.270"></status>
</kw>
<msg timestamp="20200630 10:36:34.270" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 10:36:31.557" endtime="20200630 10:36:34.270"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200630 10:36:34.270" endtime="20200630 10:36:34.271"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:36:34.274" level="INFO">Running command 'ozone sh key setacl o3://om:9862/81516-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:36:36.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:36:36.826" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200630 10:36:34.272" endtime="20200630 10:36:36.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:36:36.827" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200630 10:36:36.826" endtime="20200630 10:36:36.827"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:36:36.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:36:36.827" endtime="20200630 10:36:36.828"></status>
</kw>
<msg timestamp="20200630 10:36:36.828" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200630 10:36:34.271" endtime="20200630 10:36:36.828"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:36:36.831" level="INFO">Running command 'ozone sh key getacl o3://om:9862/81516-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:36:39.567" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:36:39.567" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200630 10:36:36.829" endtime="20200630 10:36:39.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:36:39.569" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200630 10:36:39.568" endtime="20200630 10:36:39.569"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:36:39.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:36:39.569" endtime="20200630 10:36:39.569"></status>
</kw>
<msg timestamp="20200630 10:36:39.570" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200630 10:36:36.828" endtime="20200630 10:36:39.570"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200630 10:36:39.570" endtime="20200630 10:36:39.571"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200630 10:36:39.571" endtime="20200630 10:36:39.571"></status>
</kw>
<status status="PASS" starttime="20200630 10:36:15.716" endtime="20200630 10:36:39.572"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200630 10:36:15.714" endtime="20200630 10:36:39.572" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200630 10:36:39.573" endtime="20200630 10:36:39.573"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:36:39.577" level="INFO">Running command 'ozone sh volume info o3:///81516-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:36:42.565" level="INFO">${rc} = 255</msg>
<msg timestamp="20200630 10:36:42.565" level="INFO">${output} = VOLUME_NOT_FOUND Volume 81516-rpcwport is not found</msg>
<status status="PASS" starttime="20200630 10:36:39.575" endtime="20200630 10:36:42.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:36:42.566" level="INFO">VOLUME_NOT_FOUND Volume 81516-rpcwport is not found</msg>
<status status="PASS" starttime="20200630 10:36:42.565" endtime="20200630 10:36:42.566"></status>
</kw>
<msg timestamp="20200630 10:36:42.566" level="INFO">${result} = VOLUME_NOT_FOUND Volume 81516-rpcwport is not found</msg>
<status status="PASS" starttime="20200630 10:36:39.574" endtime="20200630 10:36:42.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200630 10:36:42.567" endtime="20200630 10:36:42.567"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:36:42.572" level="INFO">Running command 'ozone sh volume create o3:///81516-rpcwport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:36:45.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:36:45.032" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:36:42.568" endtime="20200630 10:36:45.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:36:45.033" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:36:45.032" endtime="20200630 10:36:45.033"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:36:45.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:36:45.033" endtime="20200630 10:36:45.033"></status>
</kw>
<msg timestamp="20200630 10:36:45.034" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200630 10:36:42.567" endtime="20200630 10:36:45.034"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200630 10:36:45.034" endtime="20200630 10:36:45.034"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:36:45.037" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="81516-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:36:47.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:36:47.975" level="INFO">${output} = {
  "metadata": {},
  "name": "81516-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T10:36:44.926Z",
  "modificationTime": "2020-06-30T10:36:44.926Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200630 10:36:45.035" endtime="20200630 10:36:47.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:36:47.976" level="INFO">{
  "metadata": {},
  "name": "81516-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T10:36:44.926Z",
  "modificationTime": "2020-06-30T10:36:44.926Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200630 10:36:47.976" endtime="20200630 10:36:47.976"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:36:47.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:36:47.977" endtime="20200630 10:36:47.977"></status>
</kw>
<msg timestamp="20200630 10:36:47.977" level="INFO">${result} = {
  "metadata": {},
  "name": "81516-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T10:36:44.926Z",
  "modificationTime": "2020-06-30T10:36:44.926Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200630 10:36:45.034" endtime="20200630 10:36:47.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200630 10:36:47.977" endtime="20200630 10:36:47.978"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:36:47.981" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="81516-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:36:51.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:36:51.069" level="INFO">${output} = {
  "metadata": {},
  "name": "81516-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T10:36:44.926Z",
  "modificationTime": "2020-06-30T10:36:44.926Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200630 10:36:47.978" endtime="20200630 10:36:51.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:36:51.070" level="INFO">{
  "metadata": {},
  "name": "81516-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T10:36:44.926Z",
  "modificationTime": "2020-06-30T10:36:44.926Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200630 10:36:51.070" endtime="20200630 10:36:51.070"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:36:51.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:36:51.071" endtime="20200630 10:36:51.071"></status>
</kw>
<msg timestamp="20200630 10:36:51.071" level="INFO">${result} = {
  "metadata": {},
  "name": "81516-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T10:36:44.926Z",
  "modificationTime": "2020-06-30T10:36:44.926Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200630 10:36:47.978" endtime="20200630 10:36:51.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200630 10:36:51.072" endtime="20200630 10:36:51.072"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:36:51.075" level="INFO">Running command 'ozone sh volume update o3:///81516-rpcwport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:36:53.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:36:53.722" level="INFO">${output} = {
  "metadata" : { },
  "name" : "81516-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-30T10:36:44.926Z",
  "modificationTime" : "2020-06-30T10:36:53.376Z",
  "acls...</msg>
<status status="PASS" starttime="20200630 10:36:51.073" endtime="20200630 10:36:53.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:36:53.723" level="INFO">{
  "metadata" : { },
  "name" : "81516-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-30T10:36:44.926Z",
  "modificationTime" : "2020-06-30T10:36:53.376Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200630 10:36:53.723" endtime="20200630 10:36:53.723"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:36:53.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:36:53.724" endtime="20200630 10:36:53.724"></status>
</kw>
<status status="PASS" starttime="20200630 10:36:51.072" endtime="20200630 10:36:53.724"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:36:53.727" level="INFO">Running command 'ozone sh volume info o3:///81516-rpcwport | jq -r '. | select(.name=="81516-rpcwport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:36:56.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:36:56.543" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200630 10:36:53.725" endtime="20200630 10:36:56.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:36:56.544" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200630 10:36:56.543" endtime="20200630 10:36:56.544"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:36:56.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:36:56.544" endtime="20200630 10:36:56.545"></status>
</kw>
<msg timestamp="20200630 10:36:56.545" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200630 10:36:53.724" endtime="20200630 10:36:56.545"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200630 10:36:56.545" endtime="20200630 10:36:56.546"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:36:56.548" level="INFO">Running command 'ozone sh bucket create o3:///81516-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:36:59.117" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:36:59.117" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:36:56.546" endtime="20200630 10:36:59.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:36:59.118" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:36:59.118" endtime="20200630 10:36:59.118"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:36:59.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:36:59.118" endtime="20200630 10:36:59.119"></status>
</kw>
<status status="PASS" starttime="20200630 10:36:56.546" endtime="20200630 10:36:59.119"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:36:59.122" level="INFO">Running command 'ozone sh bucket info o3:///81516-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:37:02.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:37:02.018" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200630 10:36:59.120" endtime="20200630 10:37:02.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:37:02.019" level="INFO">DISK</msg>
<status status="PASS" starttime="20200630 10:37:02.018" endtime="20200630 10:37:02.019"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:37:02.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:37:02.019" endtime="20200630 10:37:02.020"></status>
</kw>
<msg timestamp="20200630 10:37:02.020" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200630 10:36:59.119" endtime="20200630 10:37:02.020"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200630 10:37:02.020" endtime="20200630 10:37:02.021"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:37:02.024" level="INFO">Running command 'ozone sh bucket list o3:///81516-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:37:04.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:37:04.880" level="INFO">${output} = 81516-rpcwport</msg>
<status status="PASS" starttime="20200630 10:37:02.021" endtime="20200630 10:37:04.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:37:04.881" level="INFO">81516-rpcwport</msg>
<status status="PASS" starttime="20200630 10:37:04.881" endtime="20200630 10:37:04.882"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:37:04.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:37:04.882" endtime="20200630 10:37:04.882"></status>
</kw>
<msg timestamp="20200630 10:37:04.882" level="INFO">${result} = 81516-rpcwport</msg>
<status status="PASS" starttime="20200630 10:37:02.021" endtime="20200630 10:37:04.882"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200630 10:37:04.883" endtime="20200630 10:37:04.883"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:37:04.887" level="INFO">Running command 'ozone sh key put o3:///81516-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:37:09.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:37:09.353" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:37:04.885" endtime="20200630 10:37:09.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:37:09.355" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:37:09.354" endtime="20200630 10:37:09.355"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:37:09.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:37:09.355" endtime="20200630 10:37:09.355"></status>
</kw>
<status status="PASS" starttime="20200630 10:37:04.884" endtime="20200630 10:37:09.356"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:37:09.359" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:37:09.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:37:09.362" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:37:09.356" endtime="20200630 10:37:09.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:37:09.363" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:37:09.362" endtime="20200630 10:37:09.363"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:37:09.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:37:09.363" endtime="20200630 10:37:09.363"></status>
</kw>
<status status="PASS" starttime="20200630 10:37:09.356" endtime="20200630 10:37:09.363"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:37:09.366" level="INFO">Running command 'ozone sh key get o3:///81516-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:37:13.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:37:13.929" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:37:09.364" endtime="20200630 10:37:13.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:37:13.930" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:37:13.930" endtime="20200630 10:37:13.930"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:37:13.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:37:13.930" endtime="20200630 10:37:13.931"></status>
</kw>
<status status="PASS" starttime="20200630 10:37:09.363" endtime="20200630 10:37:13.931"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:37:13.933" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:37:13.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:37:13.936" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:37:13.932" endtime="20200630 10:37:13.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:37:13.937" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:37:13.936" endtime="20200630 10:37:13.937"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:37:13.937" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:37:13.937" endtime="20200630 10:37:13.937"></status>
</kw>
<status status="PASS" starttime="20200630 10:37:13.931" endtime="20200630 10:37:13.938"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:37:13.940" level="INFO">Running command 'ozone sh key put -t RATIS o3:///81516-rpcwport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:37:18.565" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:37:18.566" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:37:13.938" endtime="20200630 10:37:18.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:37:18.567" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:37:18.566" endtime="20200630 10:37:18.567"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:37:18.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:37:18.567" endtime="20200630 10:37:18.567"></status>
</kw>
<status status="PASS" starttime="20200630 10:37:13.938" endtime="20200630 10:37:18.568"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:37:18.570" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:37:18.573" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:37:18.573" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:37:18.568" endtime="20200630 10:37:18.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:37:18.574" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:37:18.573" endtime="20200630 10:37:18.574"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:37:18.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:37:18.574" endtime="20200630 10:37:18.574"></status>
</kw>
<status status="PASS" starttime="20200630 10:37:18.568" endtime="20200630 10:37:18.575"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:37:18.578" level="INFO">Running command 'ozone sh key get o3:///81516-rpcwport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:37:23.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:37:23.114" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:37:18.576" endtime="20200630 10:37:23.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:37:23.115" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:37:23.115" endtime="20200630 10:37:23.115"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:37:23.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:37:23.115" endtime="20200630 10:37:23.116"></status>
</kw>
<status status="PASS" starttime="20200630 10:37:18.575" endtime="20200630 10:37:23.116"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:37:23.119" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:37:23.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:37:23.124" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:37:23.117" endtime="20200630 10:37:23.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:37:23.126" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:37:23.125" endtime="20200630 10:37:23.126"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:37:23.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:37:23.126" endtime="20200630 10:37:23.127"></status>
</kw>
<status status="PASS" starttime="20200630 10:37:23.116" endtime="20200630 10:37:23.127"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:37:23.133" level="INFO">Running command 'ozone sh key info o3:///81516-rpcwport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:37:26.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:37:26.009" level="INFO">${output} = {
  "volumeName": "81516-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-30T10:37:16.421Z",
  "modificationTime": "2020-06-30T10:37:18.083Z",
...</msg>
<status status="PASS" starttime="20200630 10:37:23.128" endtime="20200630 10:37:26.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:37:26.010" level="INFO">{
  "volumeName": "81516-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-30T10:37:16.421Z",
  "modificationTime": "2020-06-30T10:37:18.083Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104432496569221250,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200630 10:37:26.009" endtime="20200630 10:37:26.010"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:37:26.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:37:26.010" endtime="20200630 10:37:26.011"></status>
</kw>
<msg timestamp="20200630 10:37:26.011" level="INFO">${result} = {
  "volumeName": "81516-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-30T10:37:16.421Z",
  "modificationTime": "2020-06-30T10:37:18.083Z",
...</msg>
<status status="PASS" starttime="20200630 10:37:23.127" endtime="20200630 10:37:26.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200630 10:37:26.011" endtime="20200630 10:37:26.012"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:37:26.015" level="INFO">Running command 'ozone sh key delete o3:///81516-rpcwport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:37:28.550" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:37:28.550" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:37:26.013" endtime="20200630 10:37:28.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:37:28.552" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:37:28.551" endtime="20200630 10:37:28.552"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:37:28.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:37:28.552" endtime="20200630 10:37:28.552"></status>
</kw>
<status status="PASS" starttime="20200630 10:37:26.012" endtime="20200630 10:37:28.553"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:37:28.555" level="INFO">Running command 'ozone sh key cp o3:///81516-rpcwport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:37:33.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:37:33.743" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:37:28.553" endtime="20200630 10:37:33.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:37:33.744" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:37:33.744" endtime="20200630 10:37:33.744"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:37:33.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:37:33.744" endtime="20200630 10:37:33.745"></status>
</kw>
<status status="PASS" starttime="20200630 10:37:28.553" endtime="20200630 10:37:33.745"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:37:33.748" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:37:33.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:37:33.751" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:37:33.746" endtime="20200630 10:37:33.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:37:33.751" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:37:33.751" endtime="20200630 10:37:33.752"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:37:33.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:37:33.752" endtime="20200630 10:37:33.752"></status>
</kw>
<status status="PASS" starttime="20200630 10:37:33.745" endtime="20200630 10:37:33.752"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:37:33.756" level="INFO">Running command 'ozone sh key get o3:///81516-rpcwport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:37:38.100" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:37:38.100" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:37:33.753" endtime="20200630 10:37:38.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:37:38.102" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:37:38.101" endtime="20200630 10:37:38.102"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:37:38.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:37:38.102" endtime="20200630 10:37:38.102"></status>
</kw>
<status status="PASS" starttime="20200630 10:37:33.752" endtime="20200630 10:37:38.103"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:37:38.105" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:37:38.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:37:38.109" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:37:38.103" endtime="20200630 10:37:38.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:37:38.111" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:37:38.110" endtime="20200630 10:37:38.111"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:37:38.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:37:38.111" endtime="20200630 10:37:38.111"></status>
</kw>
<status status="PASS" starttime="20200630 10:37:38.103" endtime="20200630 10:37:38.111"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:37:38.115" level="INFO">Running command 'ozone sh key delete o3:///81516-rpcwport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:37:40.717" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:37:40.717" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:37:38.112" endtime="20200630 10:37:40.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:37:40.718" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:37:40.718" endtime="20200630 10:37:40.718"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:37:40.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:37:40.719" endtime="20200630 10:37:40.719"></status>
</kw>
<status status="PASS" starttime="20200630 10:37:38.112" endtime="20200630 10:37:40.719"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:37:40.722" level="INFO">Running command 'ozone sh key get o3:///81516-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:37:43.215" level="INFO">${rc} = 255</msg>
<msg timestamp="20200630 10:37:43.215" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200630 10:37:40.720" endtime="20200630 10:37:43.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:37:43.217" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200630 10:37:43.216" endtime="20200630 10:37:43.217"></status>
</kw>
<msg timestamp="20200630 10:37:43.217" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200630 10:37:40.720" endtime="20200630 10:37:43.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200630 10:37:43.217" endtime="20200630 10:37:43.218"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:37:43.221" level="INFO">Running command 'ozone sh key get --force o3:///81516-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:37:47.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:37:47.807" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:37:43.218" endtime="20200630 10:37:47.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:37:47.809" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:37:47.808" endtime="20200630 10:37:47.809"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:37:47.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:37:47.809" endtime="20200630 10:37:47.810"></status>
</kw>
<msg timestamp="20200630 10:37:47.810" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200630 10:37:43.218" endtime="20200630 10:37:47.810"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200630 10:37:47.810" endtime="20200630 10:37:47.811"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:37:47.813" level="INFO">Running command 'ozone sh key info o3:///81516-rpcwport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:37:50.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:37:50.600" level="INFO">${output} = {
  "volumeName": "81516-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-30T10:37:07.321Z",
  "modificationTime": "2020-06-30T10:37:08.916Z",
  "rep...</msg>
<status status="PASS" starttime="20200630 10:37:47.811" endtime="20200630 10:37:50.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:37:50.602" level="INFO">{
  "volumeName": "81516-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-30T10:37:07.321Z",
  "modificationTime": "2020-06-30T10:37:08.916Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104432495972909180,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200630 10:37:50.601" endtime="20200630 10:37:50.602"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:37:50.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:37:50.602" endtime="20200630 10:37:50.602"></status>
</kw>
<msg timestamp="20200630 10:37:50.603" level="INFO">${result} = {
  "volumeName": "81516-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-30T10:37:07.321Z",
  "modificationTime": "2020-06-30T10:37:08.916Z",
  "rep...</msg>
<status status="PASS" starttime="20200630 10:37:47.811" endtime="20200630 10:37:50.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200630 10:37:50.603" endtime="20200630 10:37:50.603"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:37:50.605" level="INFO">Running command 'ozone sh key list o3:///81516-rpcwport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:37:53.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:37:53.597" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200630 10:37:50.604" endtime="20200630 10:37:53.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:37:53.599" level="INFO">key1</msg>
<status status="PASS" starttime="20200630 10:37:53.598" endtime="20200630 10:37:53.599"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:37:53.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:37:53.599" endtime="20200630 10:37:53.600"></status>
</kw>
<msg timestamp="20200630 10:37:53.600" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200630 10:37:50.603" endtime="20200630 10:37:53.600"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200630 10:37:53.600" endtime="20200630 10:37:53.601"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:37:53.604" level="INFO">Running command 'ozone sh key rename o3:///81516-rpcwport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:37:56.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:37:56.168" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:37:53.601" endtime="20200630 10:37:56.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:37:56.170" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:37:56.169" endtime="20200630 10:37:56.170"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:37:56.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:37:56.170" endtime="20200630 10:37:56.170"></status>
</kw>
<status status="PASS" starttime="20200630 10:37:53.601" endtime="20200630 10:37:56.171"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:37:56.173" level="INFO">Running command 'ozone sh key list o3:///81516-rpcwport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:37:59.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:37:59.009" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200630 10:37:56.171" endtime="20200630 10:37:59.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:37:59.011" level="INFO">key2</msg>
<status status="PASS" starttime="20200630 10:37:59.010" endtime="20200630 10:37:59.011"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:37:59.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:37:59.011" endtime="20200630 10:37:59.012"></status>
</kw>
<msg timestamp="20200630 10:37:59.012" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200630 10:37:56.171" endtime="20200630 10:37:59.012"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200630 10:37:59.012" endtime="20200630 10:37:59.013"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:37:59.016" level="INFO">Running command 'ozone sh key delete o3:///81516-rpcwport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:38:01.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:38:01.750" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:37:59.014" endtime="20200630 10:38:01.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:38:01.751" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:38:01.751" endtime="20200630 10:38:01.751"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:38:01.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:38:01.752" endtime="20200630 10:38:01.752"></status>
</kw>
<status status="PASS" starttime="20200630 10:37:59.013" endtime="20200630 10:38:01.752"></status>
</kw>
<status status="PASS" starttime="20200630 10:37:04.883" endtime="20200630 10:38:01.752"></status>
</kw>
<status status="PASS" starttime="20200630 10:37:04.883" endtime="20200630 10:38:01.753"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:38:01.755" level="INFO">Running command 'ozone sh bucket delete o3:///81516-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:38:04.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:38:04.319" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:38:01.753" endtime="20200630 10:38:04.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:38:04.320" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:38:04.319" endtime="20200630 10:38:04.320"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:38:04.321" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:38:04.320" endtime="20200630 10:38:04.321"></status>
</kw>
<status status="PASS" starttime="20200630 10:38:01.753" endtime="20200630 10:38:04.321"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:38:04.324" level="INFO">Running command 'ozone sh volume delete o3:///81516-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:38:06.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:38:06.969" level="INFO">${output} = Volume 81516-rpcwport is deleted</msg>
<status status="PASS" starttime="20200630 10:38:04.322" endtime="20200630 10:38:06.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:38:06.970" level="INFO">Volume 81516-rpcwport is deleted</msg>
<status status="PASS" starttime="20200630 10:38:06.969" endtime="20200630 10:38:06.970"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:38:06.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:38:06.970" endtime="20200630 10:38:06.971"></status>
</kw>
<status status="PASS" starttime="20200630 10:38:04.321" endtime="20200630 10:38:06.971"></status>
</kw>
<status status="PASS" starttime="20200630 10:36:39.574" endtime="20200630 10:38:06.971"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200630 10:36:39.572" endtime="20200630 10:38:06.971" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200630 10:38:06.973" endtime="20200630 10:38:06.973"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:38:06.976" level="INFO">Running command 'ozone sh volume info /81516-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:38:09.486" level="INFO">${rc} = 255</msg>
<msg timestamp="20200630 10:38:09.486" level="INFO">${output} = VOLUME_NOT_FOUND Volume 81516-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200630 10:38:06.974" endtime="20200630 10:38:09.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:38:09.487" level="INFO">VOLUME_NOT_FOUND Volume 81516-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200630 10:38:09.487" endtime="20200630 10:38:09.488"></status>
</kw>
<msg timestamp="20200630 10:38:09.488" level="INFO">${result} = VOLUME_NOT_FOUND Volume 81516-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200630 10:38:06.974" endtime="20200630 10:38:09.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200630 10:38:09.488" endtime="20200630 10:38:09.488"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:38:09.491" level="INFO">Running command 'ozone sh volume create /81516-rpcwoscheme --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:38:12.164" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:38:12.164" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:38:09.489" endtime="20200630 10:38:12.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:38:12.166" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:38:12.165" endtime="20200630 10:38:12.166"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:38:12.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:38:12.166" endtime="20200630 10:38:12.166"></status>
</kw>
<msg timestamp="20200630 10:38:12.167" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200630 10:38:09.489" endtime="20200630 10:38:12.167"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200630 10:38:12.167" endtime="20200630 10:38:12.167"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:38:12.171" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="81516-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:38:15.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:38:15.094" level="INFO">${output} = {
  "metadata": {},
  "name": "81516-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T10:38:12.049Z",
  "modificationTime": "2020-06-30T10:38:12.049Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200630 10:38:12.168" endtime="20200630 10:38:15.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:38:15.096" level="INFO">{
  "metadata": {},
  "name": "81516-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T10:38:12.049Z",
  "modificationTime": "2020-06-30T10:38:12.049Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200630 10:38:15.095" endtime="20200630 10:38:15.096"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:38:15.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:38:15.096" endtime="20200630 10:38:15.097"></status>
</kw>
<msg timestamp="20200630 10:38:15.097" level="INFO">${result} = {
  "metadata": {},
  "name": "81516-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T10:38:12.049Z",
  "modificationTime": "2020-06-30T10:38:12.049Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200630 10:38:12.167" endtime="20200630 10:38:15.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200630 10:38:15.097" endtime="20200630 10:38:15.097"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:38:15.100" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="81516-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:38:18.226" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:38:18.227" level="INFO">${output} = {
  "metadata": {},
  "name": "81516-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T10:38:12.049Z",
  "modificationTime": "2020-06-30T10:38:12.049Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200630 10:38:15.098" endtime="20200630 10:38:18.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:38:18.228" level="INFO">{
  "metadata": {},
  "name": "81516-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T10:38:12.049Z",
  "modificationTime": "2020-06-30T10:38:12.049Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200630 10:38:18.227" endtime="20200630 10:38:18.228"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:38:18.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:38:18.228" endtime="20200630 10:38:18.228"></status>
</kw>
<msg timestamp="20200630 10:38:18.229" level="INFO">${result} = {
  "metadata": {},
  "name": "81516-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T10:38:12.049Z",
  "modificationTime": "2020-06-30T10:38:12.049Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200630 10:38:15.098" endtime="20200630 10:38:18.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200630 10:38:18.229" endtime="20200630 10:38:18.229"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:38:18.232" level="INFO">Running command 'ozone sh volume update /81516-rpcwoscheme --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:38:21.006" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:38:21.006" level="INFO">${output} = {
  "metadata" : { },
  "name" : "81516-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-30T10:38:12.049Z",
  "modificationTime" : "2020-06-30T10:38:20.683Z",
  "a...</msg>
<status status="PASS" starttime="20200630 10:38:18.230" endtime="20200630 10:38:21.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:38:21.007" level="INFO">{
  "metadata" : { },
  "name" : "81516-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-30T10:38:12.049Z",
  "modificationTime" : "2020-06-30T10:38:20.683Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200630 10:38:21.006" endtime="20200630 10:38:21.007"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:38:21.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:38:21.007" endtime="20200630 10:38:21.008"></status>
</kw>
<status status="PASS" starttime="20200630 10:38:18.229" endtime="20200630 10:38:21.008"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:38:21.012" level="INFO">Running command 'ozone sh volume info /81516-rpcwoscheme | jq -r '. | select(.name=="81516-rpcwoscheme") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:38:23.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:38:23.854" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200630 10:38:21.009" endtime="20200630 10:38:23.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:38:23.855" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200630 10:38:23.855" endtime="20200630 10:38:23.855"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:38:23.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:38:23.855" endtime="20200630 10:38:23.856"></status>
</kw>
<msg timestamp="20200630 10:38:23.856" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200630 10:38:21.008" endtime="20200630 10:38:23.856"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200630 10:38:23.857" endtime="20200630 10:38:23.857"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:38:23.861" level="INFO">Running command 'ozone sh bucket create /81516-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:38:26.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:38:26.426" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:38:23.858" endtime="20200630 10:38:26.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:38:26.427" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:38:26.426" endtime="20200630 10:38:26.427"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:38:26.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:38:26.427" endtime="20200630 10:38:26.428"></status>
</kw>
<status status="PASS" starttime="20200630 10:38:23.857" endtime="20200630 10:38:26.428"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:38:26.431" level="INFO">Running command 'ozone sh bucket info /81516-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:38:29.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:38:29.385" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200630 10:38:26.429" endtime="20200630 10:38:29.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:38:29.386" level="INFO">DISK</msg>
<status status="PASS" starttime="20200630 10:38:29.385" endtime="20200630 10:38:29.387"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:38:29.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:38:29.387" endtime="20200630 10:38:29.387"></status>
</kw>
<msg timestamp="20200630 10:38:29.388" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200630 10:38:26.428" endtime="20200630 10:38:29.388"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200630 10:38:29.388" endtime="20200630 10:38:29.388"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:38:29.393" level="INFO">Running command 'ozone sh bucket list /81516-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:38:32.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:38:32.281" level="INFO">${output} = 81516-rpcwoscheme</msg>
<status status="PASS" starttime="20200630 10:38:29.389" endtime="20200630 10:38:32.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:38:32.282" level="INFO">81516-rpcwoscheme</msg>
<status status="PASS" starttime="20200630 10:38:32.282" endtime="20200630 10:38:32.282"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:38:32.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:38:32.283" endtime="20200630 10:38:32.283"></status>
</kw>
<msg timestamp="20200630 10:38:32.283" level="INFO">${result} = 81516-rpcwoscheme</msg>
<status status="PASS" starttime="20200630 10:38:29.388" endtime="20200630 10:38:32.283"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200630 10:38:32.283" endtime="20200630 10:38:32.284"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:38:32.287" level="INFO">Running command 'ozone sh key put /81516-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:38:36.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:38:36.910" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:38:32.285" endtime="20200630 10:38:36.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:38:36.911" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:38:36.911" endtime="20200630 10:38:36.911"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:38:36.912" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:38:36.912" endtime="20200630 10:38:36.912"></status>
</kw>
<status status="PASS" starttime="20200630 10:38:32.285" endtime="20200630 10:38:36.912"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:38:36.915" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:38:36.917" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:38:36.917" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:38:36.913" endtime="20200630 10:38:36.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:38:36.918" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:38:36.918" endtime="20200630 10:38:36.918"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:38:36.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:38:36.918" endtime="20200630 10:38:36.919"></status>
</kw>
<status status="PASS" starttime="20200630 10:38:36.912" endtime="20200630 10:38:36.919"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:38:36.922" level="INFO">Running command 'ozone sh key get /81516-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:38:41.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:38:41.349" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:38:36.920" endtime="20200630 10:38:41.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:38:41.350" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:38:41.349" endtime="20200630 10:38:41.350"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:38:41.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:38:41.350" endtime="20200630 10:38:41.351"></status>
</kw>
<status status="PASS" starttime="20200630 10:38:36.919" endtime="20200630 10:38:41.351"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:38:41.353" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:38:41.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:38:41.356" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:38:41.351" endtime="20200630 10:38:41.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:38:41.357" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:38:41.357" endtime="20200630 10:38:41.357"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:38:41.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:38:41.358" endtime="20200630 10:38:41.358"></status>
</kw>
<status status="PASS" starttime="20200630 10:38:41.351" endtime="20200630 10:38:41.358"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:38:41.362" level="INFO">Running command 'ozone sh key put -t RATIS /81516-rpcwoscheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:38:46.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:38:46.062" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:38:41.359" endtime="20200630 10:38:46.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:38:46.064" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:38:46.063" endtime="20200630 10:38:46.064"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:38:46.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:38:46.064" endtime="20200630 10:38:46.065"></status>
</kw>
<status status="PASS" starttime="20200630 10:38:41.359" endtime="20200630 10:38:46.066"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:38:46.069" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:38:46.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:38:46.071" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:38:46.066" endtime="20200630 10:38:46.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:38:46.072" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:38:46.071" endtime="20200630 10:38:46.072"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:38:46.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:38:46.072" endtime="20200630 10:38:46.073"></status>
</kw>
<status status="PASS" starttime="20200630 10:38:46.066" endtime="20200630 10:38:46.073"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:38:46.076" level="INFO">Running command 'ozone sh key get /81516-rpcwoscheme/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:38:50.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:38:50.415" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:38:46.074" endtime="20200630 10:38:50.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:38:50.416" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:38:50.415" endtime="20200630 10:38:50.416"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:38:50.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:38:50.417" endtime="20200630 10:38:50.417"></status>
</kw>
<status status="PASS" starttime="20200630 10:38:46.073" endtime="20200630 10:38:50.417"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:38:50.420" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:38:50.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:38:50.423" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:38:50.418" endtime="20200630 10:38:50.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:38:50.424" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:38:50.423" endtime="20200630 10:38:50.424"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:38:50.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:38:50.424" endtime="20200630 10:38:50.425"></status>
</kw>
<status status="PASS" starttime="20200630 10:38:50.418" endtime="20200630 10:38:50.425"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:38:50.428" level="INFO">Running command 'ozone sh key info /81516-rpcwoscheme/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:38:53.396" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:38:53.396" level="INFO">${output} = {
  "volumeName": "81516-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-30T10:38:43.935Z",
  "modificationTime": "2020-06-30T10:38:45.558Z...</msg>
<status status="PASS" starttime="20200630 10:38:50.426" endtime="20200630 10:38:53.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:38:53.397" level="INFO">{
  "volumeName": "81516-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-30T10:38:43.935Z",
  "modificationTime": "2020-06-30T10:38:45.558Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104432502304604290,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200630 10:38:53.396" endtime="20200630 10:38:53.397"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:38:53.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:38:53.398" endtime="20200630 10:38:53.398"></status>
</kw>
<msg timestamp="20200630 10:38:53.398" level="INFO">${result} = {
  "volumeName": "81516-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-30T10:38:43.935Z",
  "modificationTime": "2020-06-30T10:38:45.558Z...</msg>
<status status="PASS" starttime="20200630 10:38:50.425" endtime="20200630 10:38:53.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200630 10:38:53.398" endtime="20200630 10:38:53.399"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:38:53.403" level="INFO">Running command 'ozone sh key delete /81516-rpcwoscheme/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:38:55.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:38:55.996" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:38:53.400" endtime="20200630 10:38:55.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:38:55.997" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:38:55.996" endtime="20200630 10:38:55.997"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:38:55.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:38:55.998" endtime="20200630 10:38:55.998"></status>
</kw>
<status status="PASS" starttime="20200630 10:38:53.399" endtime="20200630 10:38:55.998"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:38:56.001" level="INFO">Running command 'ozone sh key cp /81516-rpcwoscheme/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:39:00.645" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:39:00.645" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:38:55.999" endtime="20200630 10:39:00.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:39:00.646" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:39:00.645" endtime="20200630 10:39:00.646"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:39:00.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:39:00.646" endtime="20200630 10:39:00.647"></status>
</kw>
<status status="PASS" starttime="20200630 10:38:55.999" endtime="20200630 10:39:00.647"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:39:00.650" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:39:00.653" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:39:00.653" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:39:00.648" endtime="20200630 10:39:00.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:39:00.654" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:39:00.654" endtime="20200630 10:39:00.654"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:39:00.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:39:00.655" endtime="20200630 10:39:00.656"></status>
</kw>
<status status="PASS" starttime="20200630 10:39:00.647" endtime="20200630 10:39:00.656"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:39:00.659" level="INFO">Running command 'ozone sh key get /81516-rpcwoscheme/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:39:05.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:39:05.110" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:39:00.657" endtime="20200630 10:39:05.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:39:05.111" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:39:05.110" endtime="20200630 10:39:05.111"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:39:05.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:39:05.111" endtime="20200630 10:39:05.112"></status>
</kw>
<status status="PASS" starttime="20200630 10:39:00.656" endtime="20200630 10:39:05.112"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:39:05.115" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:39:05.118" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:39:05.118" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:39:05.113" endtime="20200630 10:39:05.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:39:05.119" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:39:05.118" endtime="20200630 10:39:05.119"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:39:05.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:39:05.119" endtime="20200630 10:39:05.119"></status>
</kw>
<status status="PASS" starttime="20200630 10:39:05.112" endtime="20200630 10:39:05.120"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:39:05.122" level="INFO">Running command 'ozone sh key delete /81516-rpcwoscheme/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:39:07.924" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:39:07.924" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:39:05.120" endtime="20200630 10:39:07.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:39:07.925" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:39:07.925" endtime="20200630 10:39:07.925"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:39:07.926" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:39:07.926" endtime="20200630 10:39:07.926"></status>
</kw>
<status status="PASS" starttime="20200630 10:39:05.120" endtime="20200630 10:39:07.926"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:39:07.929" level="INFO">Running command 'ozone sh key get /81516-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:39:10.778" level="INFO">${rc} = 255</msg>
<msg timestamp="20200630 10:39:10.778" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200630 10:39:07.927" endtime="20200630 10:39:10.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:39:10.779" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200630 10:39:10.779" endtime="20200630 10:39:10.779"></status>
</kw>
<msg timestamp="20200630 10:39:10.780" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200630 10:39:07.927" endtime="20200630 10:39:10.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200630 10:39:10.780" endtime="20200630 10:39:10.781"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:39:10.784" level="INFO">Running command 'ozone sh key get --force /81516-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:39:14.845" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:39:14.845" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:39:10.782" endtime="20200630 10:39:14.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:39:14.846" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:39:14.846" endtime="20200630 10:39:14.847"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:39:14.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:39:14.847" endtime="20200630 10:39:14.847"></status>
</kw>
<msg timestamp="20200630 10:39:14.847" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200630 10:39:10.781" endtime="20200630 10:39:14.847"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200630 10:39:14.848" endtime="20200630 10:39:14.848"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:39:14.852" level="INFO">Running command 'ozone sh key info /81516-rpcwoscheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:39:17.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:39:17.734" level="INFO">${output} = {
  "volumeName": "81516-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-30T10:38:34.725Z",
  "modificationTime": "2020-06-30T10:38:36.472Z",
  "...</msg>
<status status="PASS" starttime="20200630 10:39:14.849" endtime="20200630 10:39:17.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:39:17.735" level="INFO">{
  "volumeName": "81516-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-30T10:38:34.725Z",
  "modificationTime": "2020-06-30T10:38:36.472Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104432501700952200,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200630 10:39:17.735" endtime="20200630 10:39:17.735"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:39:17.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:39:17.735" endtime="20200630 10:39:17.736"></status>
</kw>
<msg timestamp="20200630 10:39:17.736" level="INFO">${result} = {
  "volumeName": "81516-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-30T10:38:34.725Z",
  "modificationTime": "2020-06-30T10:38:36.472Z",
  "...</msg>
<status status="PASS" starttime="20200630 10:39:14.848" endtime="20200630 10:39:17.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200630 10:39:17.736" endtime="20200630 10:39:17.737"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:39:17.740" level="INFO">Running command 'ozone sh key list /81516-rpcwoscheme/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:39:20.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:39:20.495" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200630 10:39:17.738" endtime="20200630 10:39:20.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:39:20.496" level="INFO">key1</msg>
<status status="PASS" starttime="20200630 10:39:20.496" endtime="20200630 10:39:20.496"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:39:20.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:39:20.497" endtime="20200630 10:39:20.497"></status>
</kw>
<msg timestamp="20200630 10:39:20.497" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200630 10:39:17.737" endtime="20200630 10:39:20.498"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200630 10:39:20.498" endtime="20200630 10:39:20.498"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:39:20.501" level="INFO">Running command 'ozone sh key rename /81516-rpcwoscheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:39:23.020" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:39:23.020" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:39:20.499" endtime="20200630 10:39:23.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:39:23.021" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:39:23.020" endtime="20200630 10:39:23.021"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:39:23.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:39:23.021" endtime="20200630 10:39:23.022"></status>
</kw>
<status status="PASS" starttime="20200630 10:39:20.498" endtime="20200630 10:39:23.022"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:39:23.024" level="INFO">Running command 'ozone sh key list /81516-rpcwoscheme/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:39:25.784" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:39:25.784" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200630 10:39:23.022" endtime="20200630 10:39:25.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:39:25.785" level="INFO">key2</msg>
<status status="PASS" starttime="20200630 10:39:25.784" endtime="20200630 10:39:25.785"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:39:25.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:39:25.785" endtime="20200630 10:39:25.786"></status>
</kw>
<msg timestamp="20200630 10:39:25.786" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200630 10:39:23.022" endtime="20200630 10:39:25.786"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200630 10:39:25.786" endtime="20200630 10:39:25.786"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:39:25.789" level="INFO">Running command 'ozone sh key delete /81516-rpcwoscheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:39:28.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:39:28.237" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:39:25.787" endtime="20200630 10:39:28.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:39:28.238" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:39:28.238" endtime="20200630 10:39:28.238"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:39:28.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:39:28.238" endtime="20200630 10:39:28.239"></status>
</kw>
<status status="PASS" starttime="20200630 10:39:25.787" endtime="20200630 10:39:28.239"></status>
</kw>
<status status="PASS" starttime="20200630 10:38:32.284" endtime="20200630 10:39:28.239"></status>
</kw>
<status status="PASS" starttime="20200630 10:38:32.284" endtime="20200630 10:39:28.240"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:39:28.242" level="INFO">Running command 'ozone sh bucket delete /81516-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:39:30.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:39:30.930" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 10:39:28.240" endtime="20200630 10:39:30.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:39:30.931" level="INFO"></msg>
<status status="PASS" starttime="20200630 10:39:30.930" endtime="20200630 10:39:30.931"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:39:30.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:39:30.931" endtime="20200630 10:39:30.932"></status>
</kw>
<status status="PASS" starttime="20200630 10:39:28.240" endtime="20200630 10:39:30.932"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:39:30.936" level="INFO">Running command 'ozone sh volume delete /81516-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:39:33.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:39:33.482" level="INFO">${output} = Volume 81516-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200630 10:39:30.932" endtime="20200630 10:39:33.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:39:33.483" level="INFO">Volume 81516-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200630 10:39:33.482" endtime="20200630 10:39:33.483"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:39:33.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:39:33.483" endtime="20200630 10:39:33.484"></status>
</kw>
<status status="PASS" starttime="20200630 10:39:30.932" endtime="20200630 10:39:33.484"></status>
</kw>
<status status="PASS" starttime="20200630 10:38:06.973" endtime="20200630 10:39:33.484"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200630 10:38:06.972" endtime="20200630 10:39:33.484" critical="yes"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20200630 10:34:03.497" endtime="20200630 10:39:33.486"></status>
</suite>
<status status="PASS" starttime="20200630 10:32:48.552" endtime="20200630 10:39:33.490"></status>
</suite>
<statistics>
<total>
<stat pass="8" fail="0">Critical Tests</stat>
<stat pass="8" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="8" fail="0" id="s1" name="ozone-basic">ozone-basic</stat>
<stat pass="2" fail="0" id="s1-s1" name="Basic">ozone-basic.Basic</stat>
<stat pass="6" fail="0" id="s1-s2" name="Ozone-Shell">ozone-basic.Ozone-Shell</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
