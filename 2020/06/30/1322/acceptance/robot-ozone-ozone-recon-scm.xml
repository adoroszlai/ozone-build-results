<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200630 10:49:18.024" rpa="false">
<suite id="s1" name="ozone-recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s1-t1" name="Generate Freon data">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200630 10:49:18.085" endtime="20200630 10:49:18.085"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:49:18.091" level="INFO">Running command 'ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:49:26.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:49:26.548" level="INFO">${output} = 2020-06-30 10:49:19,605 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:49:19,788 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 10:49:18.086" endtime="20200630 10:49:26.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:49:26.549" level="INFO">2020-06-30 10:49:19,605 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 10:49:19,788 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-30 10:49:19,788 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-30 10:49:21,041 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2020-06-30 10:49:21,042 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-06-30 10:49:21,042 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-06-30 10:49:21,042 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 10.
2020-06-30 10:49:21,042 [main] INFO freon.RandomKeyGenerator: Key size: 1025 bytes
2020-06-30 10:49:21,042 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-30 10:49:21,042 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-06-30 10:49:21,057 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-30 10:49:21,068 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2020-06-30 10:49:21,120 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-58577, with hadoop as owner.
2020-06-30 10:49:21,174 [pool-2-thread-3] INFO rpc.RpcClient: Creating Bucket: vol-0-58577/bucket-0-41379, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 10:49:21,859 [pool-2-thread-10] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-30 10:49:22,073 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 10
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,008
Average Time spent in bucket creation: 00:00:00,002
Average Time spent in key creation: 00:00:00,128
Average Time spent in key write: 00:00:00,669
Total bytes written: 10250
Total Execution time: 00:00:06,210
***************************************************</msg>
<status status="PASS" starttime="20200630 10:49:26.549" endtime="20200630 10:49:26.550"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:49:26.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:49:26.550" endtime="20200630 10:49:26.550"></status>
</kw>
<status status="PASS" starttime="20200630 10:49:18.085" endtime="20200630 10:49:26.550"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 10:49:18.084" endtime="20200630 10:49:26.551" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Check if Recon picks up OM data">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
</arguments>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200630 10:49:26.553" endtime="20200630 10:49:26.553"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:49:26.556" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:49:26.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:49:26.761" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 10:49:26.554" endtime="20200630 10:49:26.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:49:26.763" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.7...
* Connected to recon (172.23.0.7) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 10:49:26 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 10:49:26 GMT
&lt; Date: Tue, 30 Jun 2020 10:49:26 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0    387      0 --:--:-- --:--:-- --:--:--   388
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":143}]}}</msg>
<status status="PASS" starttime="20200630 10:49:26.762" endtime="20200630 10:49:26.763"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:49:26.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:49:26.763" endtime="20200630 10:49:26.763"></status>
</kw>
<msg timestamp="20200630 10:49:26.764" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 10:49:26.553" endtime="20200630 10:49:26.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200630 10:49:26.764" endtime="20200630 10:49:26.764"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:49:26.767" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:49:26.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:49:26.809" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 10:49:26.765" endtime="20200630 10:49:26.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:49:26.810" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.7...
* Connected to recon (172.23.0.7) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 10:49:26 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 10:49:26 GMT
&lt; Date: Tue, 30 Jun 2020 10:49:26 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 2794
&lt; 
{ [data not shown]

100  2794  100  2794    0     0  78801      0 --:--:-- --:--:-- --:--:-- 79828
* Connection #0 to host recon left intact
[{"volume":"vol-2-23328","bucket":"bucket-0-78411","fileSize":16384,"count":5},{"volume":"vol-3-57663","bucket":"bucket-0-10655","fileSize":16384,"count":5},{"volume":"vol-0-15461","bucket":"bucket-4-58004","fileSize":16384,"count":5},{"volume":"vol-3-57663","bucket":"bucket-3-74918","fileSize":16384,"count":5},{"volume":"vol-1-49625","bucket":"bucket-1-46154","fileSize":16384,"count":5},{"volume":"vol-3-57663","bucket":"bucket-2-21296","fileSize":16384,"count":5},{"volume":"vol-4-82583","bucket":"bucket-3-36740","fileSize":16384,"count":5},{"volume":"vol-4-82583","bucket":"bucket-1-90176","fileSize":16384,"count":5},{"volume":"vol-3-57663","bucket":"bucket-4-82456","fileSize":16384,"count":5},{"volume":"vol-1-49625","bucket":"bucket-3-01705","fileSize":16384,"count":5},{"volume":"vol-4-82583","bucket":"bucket-0-95618","fileSize":16384,"count":5},{"volume":"vol-4-82583","bucket":"bucket-4-13838","fileSize":16384,"count":5},{"volume":"vol-0-15461","bucket":"bucket-0-19600","fileSize":16384,"count":5},{"volume":"vol-2-23328","bucket":"bucket-1-40929","fileSize":16384,"count":5},{"volume":"vol-2-23328","bucket":"bucket-3-33998","fileSize":16384,"count":5},{"volume":"vol-3-57663","bucket":"bucket-1-94033","fileSize":16384,"count":5},{"volume":"vol-0-15461","bucket":"bucket-2-05966","fileSize":16384,"count":5},{"volume":"vol-1-49625","bucket":"bucket-0-55435","fileSize":16384,"count":5},{"volume":"vol-0-15461","bucket":"bucket-3-76410","fileSize":16384,"count":5},{"volume":"vol-4-82583","bucket":"bucket-2-37898","fileSize":16384,"count":5},{"volume":"vol-2-23328","bucket":"bucket-2-08419","fileSize":16384,"count":5},{"volume":"vol-1-49625","bucket":"bucket-4-37874","fileSize":16384,"count":5},{"volume":"vol-1-49625","bucket":"bucket-2-99786","fileSize":16384,"count":5},{"volume":"vol-0-15461","bucket":"bucket-1-21746","fileSize":16384,"count":5},{"volume":"vol-2-23328","bucket":"bucket-4-55694","fileSize":16384,"count":5},{"volume":"81516-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"81516-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket2-o3fs","fileSize":1024,"count":0},{"volume":"s3v","bucket":"bucket-44844","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-14974","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-14974","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-59622","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-66768","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200630 10:49:26.809" endtime="20200630 10:49:26.810"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:49:26.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:49:26.810" endtime="20200630 10:49:26.811"></status>
</kw>
<msg timestamp="20200630 10:49:26.811" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 10:49:26.764" endtime="20200630 10:49:26.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200630 10:49:26.812" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.7...
* Connected to recon (172.23.0.7) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 10:49:26 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 10:49:26 GMT
&lt; Date: Tue, 30 Jun 2020 10:49:26 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 2794
&lt; 
{ [data not shown]

100  2794  100  2794    0     0  78801      0 --:--:-- --:--:-- --:--:-- 79828
* Connection #0 to host recon left intact
[{"volume":"vol-2-23328","bucket":"bucket-0-78411","fileSize":16384,"count":5},{"volume":"vol-3-57663","bucket":"bucket-0-10655","fileSize":16384,"count":5},{"volume":"vol-0-15461","bucket":"bucket-4-58004","fileSize":16384,"count":5},{"volume":"vol-3-57663","bucket":"bucket-3-74918","fileSize":16384,"count":5},{"volume":"vol-1-49625","bucket":"bucket-1-46154","fileSize":16384,"count":5},{"volume":"vol-3-57663","bucket":"bucket-2-21296","fileSize":16384,"count":5},{"volume":"vol-4-82583","bucket":"bucket-3-36740","fileSize":16384,"count":5},{"volume":"vol-4-82583","bucket":"bucket-1-90176","fileSize":16384,"count":5},{"volume":"vol-3-57663","bucket":"bucket-4-82456","fileSize":16384,"count":5},{"volume":"vol-1-49625","bucket":"bucket-3-01705","fileSize":16384,"count":5},{"volume":"vol-4-82583","bucket":"bucket-0-95618","fileSize":16384,"count":5},{"volume":"vol-4-82583","bucket":"bucket-4-13838","fileSize":16384,"count":5},{"volume":"vol-0-15461","bucket":"bucket-0-19600","fileSize":16384,"count":5},{"volume":"vol-2-23328","bucket":"bucket-1-40929","fileSize":16384,"count":5},{"volume":"vol-2-23328","bucket":"bucket-3-33998","fileSize":16384,"count":5},{"volume":"vol-3-57663","bucket":"bucket-1-94033","fileSize":16384,"count":5},{"volume":"vol-0-15461","bucket":"bucket-2-05966","fileSize":16384,"count":5},{"volume":"vol-1-49625","bucket":"bucket-0-55435","fileSize":16384,"count":5},{"volume":"vol-0-15461","bucket":"bucket-3-76410","fileSize":16384,"count":5},{"volume":"vol-4-82583","bucket":"bucket-2-37898","fileSize":16384,"count":5},{"volume":"vol-2-23328","bucket":"bucket-2-08419","fileSize":16384,"count":5},{"volume":"vol-1-49625","bucket":"bucket-4-37874","fileSize":16384,"count":5},{"volume":"vol-1-49625","bucket":"bucket-2-99786","fileSize":16384,"count":5},{"volume":"vol-0-15461","bucket":"bucket-1-21746","fileSize":16384,"count":5},{"volume":"vol-2-23328","bucket":"bucket-4-55694","fileSize":16384,"count":5},{"volume":"81516-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"81516-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket2-o3fs","fileSize":1024,"count":0},{"volume":"s3v","bucket":"bucket-44844","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-14974","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-14974","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-59622","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-66768","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200630 10:49:26.811" endtime="20200630 10:49:26.812"></status>
</kw>
<status status="FAIL" starttime="20200630 10:49:26.552" endtime="20200630 10:49:26.813"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200630 10:49:36.814" endtime="20200630 10:49:36.815"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:49:36.818" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:49:36.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:49:36.832" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 10:49:36.815" endtime="20200630 10:49:36.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:49:36.834" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.7...
* Connected to recon (172.23.0.7) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 10:49:36 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 10:49:36 GMT
&lt; Date: Tue, 30 Jun 2020 10:49:36 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 182
&lt; 
{ [data not shown]

100   182  100   182    0     0  21713      0 --:--:-- --:--:-- --:--:-- 22750
* Connection #0 to host recon left intact
{"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":145},{"ContainerID":2,"NumberOfKeys":4},{"ContainerID":3,"NumberOfKeys":1},{"ContainerID":4,"NumberOfKeys":5}]}}</msg>
<status status="PASS" starttime="20200630 10:49:36.833" endtime="20200630 10:49:36.835"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:49:36.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:49:36.835" endtime="20200630 10:49:36.836"></status>
</kw>
<msg timestamp="20200630 10:49:36.836" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 10:49:36.815" endtime="20200630 10:49:36.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200630 10:49:36.836" endtime="20200630 10:49:36.837"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:49:36.839" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:49:36.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:49:36.859" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 10:49:36.837" endtime="20200630 10:49:36.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:49:36.860" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.7...
* Connected to recon (172.23.0.7) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 10:49:36 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 10:49:36 GMT
&lt; Date: Tue, 30 Jun 2020 10:49:36 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3006
&lt; 
{ [data not shown]

100  3006  100  3006    0     0   274k      0 --:--:-- --:--:-- --:--:--  293k
* Connection #0 to host recon left intact
[{"volume":"vol-2-23328","bucket":"bucket-0-78411","fileSize":16384,"count":5},{"volume":"vol-3-57663","bucket":"bucket-0-10655","fileSize":16384,"count":5},{"volume":"vol-0-15461","bucket":"bucket-4-58004","fileSize":16384,"count":5},{"volume":"vol-3-57663","bucket":"bucket-3-74918","fileSize":16384,"count":5},{"volume":"vol-1-49625","bucket":"bucket-1-46154","fileSize":16384,"count":5},{"volume":"vol-3-57663","bucket":"bucket-2-21296","fileSize":16384,"count":5},{"volume":"vol-4-82583","bucket":"bucket-3-36740","fileSize":16384,"count":5},{"volume":"vol-4-82583","bucket":"bucket-1-90176","fileSize":16384,"count":5},{"volume":"vol-3-57663","bucket":"bucket-4-82456","fileSize":16384,"count":5},{"volume":"vol-1-49625","bucket":"bucket-3-01705","fileSize":16384,"count":5},{"volume":"vol-4-82583","bucket":"bucket-0-95618","fileSize":16384,"count":5},{"volume":"vol-4-82583","bucket":"bucket-4-13838","fileSize":16384,"count":5},{"volume":"vol-0-15461","bucket":"bucket-0-19600","fileSize":16384,"count":5},{"volume":"vol-2-23328","bucket":"bucket-1-40929","fileSize":16384,"count":5},{"volume":"vol-2-23328","bucket":"bucket-3-33998","fileSize":16384,"count":5},{"volume":"vol-3-57663","bucket":"bucket-1-94033","fileSize":16384,"count":5},{"volume":"vol-0-15461","bucket":"bucket-2-05966","fileSize":16384,"count":5},{"volume":"vol-1-49625","bucket":"bucket-0-55435","fileSize":16384,"count":5},{"volume":"vol-0-15461","bucket":"bucket-3-76410","fileSize":16384,"count":5},{"volume":"vol-4-82583","bucket":"bucket-2-37898","fileSize":16384,"count":5},{"volume":"vol-2-23328","bucket":"bucket-2-08419","fileSize":16384,"count":5},{"volume":"vol-1-49625","bucket":"bucket-4-37874","fileSize":16384,"count":5},{"volume":"vol-1-49625","bucket":"bucket-2-99786","fileSize":16384,"count":5},{"volume":"vol-0-15461","bucket":"bucket-1-21746","fileSize":16384,"count":5},{"volume":"vol-2-23328","bucket":"bucket-4-55694","fileSize":16384,"count":5},{"volume":"81516-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"81516-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket2-o3fs","fileSize":1024,"count":0},{"volume":"s3v","bucket":"bucket-44844","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-14974","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-14974","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-59622","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-66768","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-93832","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-32104","fileSize":1024,"count":1},{"volume":"vol-0-58577","bucket":"bucket-0-41379","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20200630 10:49:36.859" endtime="20200630 10:49:36.860"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:49:36.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:49:36.860" endtime="20200630 10:49:36.860"></status>
</kw>
<msg timestamp="20200630 10:49:36.861" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 10:49:36.837" endtime="20200630 10:49:36.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<status status="PASS" starttime="20200630 10:49:36.861" endtime="20200630 10:49:36.862"></status>
</kw>
<status status="PASS" starttime="20200630 10:49:36.813" endtime="20200630 10:49:36.862"></status>
</kw>
<status status="PASS" starttime="20200630 10:49:26.552" endtime="20200630 10:49:36.865"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 10:49:26.551" endtime="20200630 10:49:36.865" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Check if Recon picks up DN heartbeats">
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/datanodes</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:49:36.869" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:49:36.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:49:36.913" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 10:49:36.867" endtime="20200630 10:49:36.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:49:36.915" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.7...
* Connected to recon (172.23.0.7) port 9888 (#0)
&gt; GET /api/v1/datanodes HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 10:49:36 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 10:49:36 GMT
&lt; Date: Tue, 30 Jun 2020 10:49:36 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1704
&lt; 
{ [data not shown]

100  1704  100  1704    0     0  44351      0 --:--:-- --:--:-- --:--:-- 44842
* Connection #0 to host recon left intact
{"totalCount":3,"datanodes":[{"uuid":"b903e99b-8c24-4884-ae04-0efa3b2de36b","hostname":"ozone_datanode_2.ozone_default","state":"HEALTHY","lastHeartbeat":1593514162794,"storageReport":{"capacity":89311358976,"used":8192,"remaining":25884426240},"pipelines":[{"pipelineID":"d43343be-a49e-4c0b-9281-703f94177be0","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozone_datanode_3.ozone_default"},{"pipelineID":"5a6f9b96-28e6-41bb-bc7b-ac4f21be5076","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozone_datanode_2.ozone_default"}],"containers":2,"leaderCount":1},{"uuid":"85be11b6-3241-4cb6-9c78-46b29355fb14","hostname":"ozone_datanode_1.ozone_default","state":"HEALTHY","lastHeartbeat":1593514162805,"storageReport":{"capacity":89311358976,"used":8192,"remaining":25909637120},"pipelines":[{"pipelineID":"d43343be-a49e-4c0b-9281-703f94177be0","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozone_datanode_3.ozone_default"},{"pipelineID":"7dbcce71-1930-4052-a7eb-70b2b4b662db","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozone_datanode_1.ozone_default"}],"containers":2,"leaderCount":1},{"uuid":"2b8e4810-22c5-4d82-83b0-8beebf63cd98","hostname":"ozone_datanode_3.ozone_default","state":"HEALTHY","lastHeartbeat":1593514162775,"storageReport":{"capacity":89311358976,"used":8192,"remaining":25909637120},"pipelines":[{"pipelineID":"d43343be-a49e-4c0b-9281-703f94177be0","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozone_datanode_3.ozone_default"},{"pipelineID":"4a5f97dc-e69f-4a42-8a0a-417d2c8df8df","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozone_datanode_3.ozone_default"}],"containers":2,"leaderCount":2}]}</msg>
<status status="PASS" starttime="20200630 10:49:36.914" endtime="20200630 10:49:36.915"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:49:36.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:49:36.915" endtime="20200630 10:49:36.915"></status>
</kw>
<msg timestamp="20200630 10:49:36.916" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 10:49:36.866" endtime="20200630 10:49:36.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanodes</arg>
</arguments>
<status status="PASS" starttime="20200630 10:49:36.916" endtime="20200630 10:49:36.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200630 10:49:36.916" endtime="20200630 10:49:36.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200630 10:49:36.917" endtime="20200630 10:49:36.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200630 10:49:36.917" endtime="20200630 10:49:36.917"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/pipelines</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:49:36.920" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:49:36.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:49:36.942" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 10:49:36.918" endtime="20200630 10:49:36.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:49:36.944" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.7...
* Connected to recon (172.23.0.7) port 9888 (#0)
&gt; GET /api/v1/pipelines HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 10:49:36 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 10:49:36 GMT
&lt; Date: Tue, 30 Jun 2020 10:49:36 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1248
&lt; 
{ [data not shown]

100  1248  100  1248    0     0  75054      0 --:--:-- --:--:-- --:--:-- 78000
* Connection #0 to host recon left intact
{"totalCount":4,"pipelines":[{"pipelineId":"d43343be-a49e-4c0b-9281-703f94177be0","status":"OPEN","leaderNode":"ozone_datanode_3.ozone_default","datanodes":["ozone_datanode_2.ozone_default","ozone_datanode_1.ozone_default","ozone_datanode_3.ozone_default"],"lastLeaderElection":0,"duration":1026252,"leaderElections":0,"replicationType":"RATIS","replicationFactor":3,"containers":1},{"pipelineId":"5a6f9b96-28e6-41bb-bc7b-ac4f21be5076","status":"OPEN","leaderNode":"ozone_datanode_2.ozone_default","datanodes":["ozone_datanode_2.ozone_default"],"lastLeaderElection":0,"duration":1026264,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"4a5f97dc-e69f-4a42-8a0a-417d2c8df8df","status":"OPEN","leaderNode":"ozone_datanode_3.ozone_default","datanodes":["ozone_datanode_3.ozone_default"],"lastLeaderElection":0,"duration":1027016,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"7dbcce71-1930-4052-a7eb-70b2b4b662db","status":"OPEN","leaderNode":"ozone_datanode_1.ozone_default","datanodes":["ozone_datanode_1.ozone_default"],"lastLeaderElection":0,"duration":1026604,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1}]}</msg>
<status status="PASS" starttime="20200630 10:49:36.943" endtime="20200630 10:49:36.944"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:49:36.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:49:36.944" endtime="20200630 10:49:36.944"></status>
</kw>
<msg timestamp="20200630 10:49:36.945" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 10:49:36.918" endtime="20200630 10:49:36.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>pipelines</arg>
</arguments>
<status status="PASS" starttime="20200630 10:49:36.945" endtime="20200630 10:49:36.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200630 10:49:36.946" endtime="20200630 10:49:36.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>OPEN</arg>
</arguments>
<status status="PASS" starttime="20200630 10:49:36.946" endtime="20200630 10:49:36.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200630 10:49:36.947" endtime="20200630 10:49:36.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200630 10:49:36.947" endtime="20200630 10:49:36.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200630 10:49:36.948" endtime="20200630 10:49:36.948"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/clusterState</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:49:36.951" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:49:36.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:49:36.980" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 10:49:36.949" endtime="20200630 10:49:36.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:49:36.981" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.7...
* Connected to recon (172.23.0.7) port 9888 (#0)
&gt; GET /api/v1/clusterState HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 10:49:36 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 10:49:36 GMT
&lt; Date: Tue, 30 Jun 2020 10:49:36 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 186
&lt; 
{ [data not shown]

100   186  100   186    0     0   8559      0 --:--:-- --:--:-- --:--:--  8857
* Connection #0 to host recon left intact
{"pipelines":4,"totalDatanodes":3,"healthyDatanodes":3,"storageReport":{"capacity":267934076928,"used":24576,"remaining":77703700480},"containers":4,"volumes":17,"buckets":51,"keys":167}</msg>
<status status="PASS" starttime="20200630 10:49:36.981" endtime="20200630 10:49:36.982"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:49:36.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:49:36.982" endtime="20200630 10:49:36.983"></status>
</kw>
<msg timestamp="20200630 10:49:36.983" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 10:49:36.948" endtime="20200630 10:49:36.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"totalDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200630 10:49:36.983" endtime="20200630 10:49:36.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"healthyDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200630 10:49:36.984" endtime="20200630 10:49:36.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"pipelines\":4</arg>
</arguments>
<status status="PASS" starttime="20200630 10:49:36.984" endtime="20200630 10:49:36.985"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:49:36.988" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:49:37.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:49:37.015" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 10:49:36.985" endtime="20200630 10:49:37.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:49:37.016" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.7...
* Connected to recon (172.23.0.7) port 9888 (#0)
&gt; GET /api/v1/containers/1/replicaHistory HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 10:49:36 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 10:49:36 GMT
&lt; Date: Tue, 30 Jun 2020 10:49:36 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 418
&lt; 
{ [data not shown]

100   418  100   418    0     0  19092      0 --:--:-- --:--:-- --:--:-- 19904
* Connection #0 to host recon left intact
[{"containerId":1,"datanodeHost":"ozone_datanode_1.ozone_default","firstReportTimestamp":1593513206095,"lastReportTimestamp":1593514106094},{"containerId":1,"datanodeHost":"ozone_datanode_2.ozone_default","firstReportTimestamp":1593513206103,"lastReportTimestamp":1593514136110},{"containerId":1,"datanodeHost":"ozone_datanode_3.ozone_default","firstReportTimestamp":1593513206034,"lastReportTimestamp":1593514075976}]</msg>
<status status="PASS" starttime="20200630 10:49:37.016" endtime="20200630 10:49:37.016"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:49:37.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:49:37.017" endtime="20200630 10:49:37.017"></status>
</kw>
<msg timestamp="20200630 10:49:37.017" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 10:49:36.985" endtime="20200630 10:49:37.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
</arguments>
<status status="PASS" starttime="20200630 10:49:37.017" endtime="20200630 10:49:37.018"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 10:49:36.866" endtime="20200630 10:49:37.018" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Check if Recon Web UI is up">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200630 10:49:37.021" endtime="20200630 10:49:37.021"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${ENDPOINT_URL}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 10:49:37.026" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 10:49:37.041" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 10:49:37.042" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 10:49:37.022" endtime="20200630 10:49:37.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 10:49:37.042" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.7...
* Connected to recon (172.23.0.7) port 9888 (#0)
&gt; GET / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 10:49:37 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 10:49:37 GMT
&lt; Date: Tue, 30 Jun 2020 10:49:37 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Tue, 30 Jun 2020 10:49:37 GMT
&lt; Date: Tue, 30 Jun 2020 10:49:37 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Last-Modified: Tue, 30 Jun 2020 10:08:58 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2267
&lt; 
{ [data not shown]

100  2267  100  2267    0     0   206k      0 --:--:-- --:--:-- --:--:--  221k
* Connection #0 to host recon left intact
&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.91e4d86d.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.2ec5409c.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.ea8f5368.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.01252c4e.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20200630 10:49:37.042" endtime="20200630 10:49:37.043"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 10:49:37.043" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 10:49:37.043" endtime="20200630 10:49:37.043"></status>
</kw>
<msg timestamp="20200630 10:49:37.043" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 10:49:37.021" endtime="20200630 10:49:37.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Ozone Recon</arg>
</arguments>
<status status="PASS" starttime="20200630 10:49:37.044" endtime="20200630 10:49:37.044"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 10:49:37.020" endtime="20200630 10:49:37.044" critical="yes"></status>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20200630 10:49:18.054" endtime="20200630 10:49:37.046"></status>
</suite>
<status status="PASS" starttime="20200630 10:49:18.025" endtime="20200630 10:49:37.053"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-recon">ozone-recon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Recon-Api">ozone-recon.Recon-Api</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
